/* THIS IS GENERATED FILE */

        
#include "f.exe.h"

                

 bool _group9(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group9:
    _begin:
sub_26240:
	// 82848 
#undef var_4
#define var_4 -4
	// 82850 var_4           = dword ptr -4 ;~ 17C5:0010
cs=0x17c5;eip=0x000010; 	X(PUSH(bp));	// 82852                  push    bp ;~ 17C5:0010
cs=0x17c5;eip=0x000011; 	T(bp = sp;);	// 82853                  mov     bp, sp ;~ 17C5:0011
cs=0x17c5;eip=0x000013; 	T(SUB(sp, 6));	// 82854                  sub     sp, 6 ;~ 17C5:0013
cs=0x17c5;eip=0x000016; 	X(MOV(*(dw*)(raddr(ss,bp+var_4+2)), 0));	// 82855                  mov     word ptr [bp+var_4+2], 0 ;~ 17C5:0016
cs=0x17c5;eip=0x00001b; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0x4F0));	// 82856                  mov     word ptr [bp+var_4], 4F0h ;~ 17C5:001B
cs=0x17c5;eip=0x000020; 	T(LES(bx, *(dd*)(raddr(ss,bp+var_4))));	// 82857                  les     bx, [bp+var_4] ;~ 17C5:0020
cs=0x17c5;eip=0x000023; 	T(MOV(ax, *(dw*)(raddr(es,bx))));	// 82859                  mov     ax, es:[bx] ;~ 17C5:0023
cs=0x17c5;eip=0x000026; 	X(*(dw*)(((db*)&dword_528d6)+2) = ax;);	// 82860                  mov     word ptr ds:dword_528D6+2, ax ;~ 17C5:0026
cs=0x17c5;eip=0x000029; 	X(*(dw*)(&dword_528d6) = 0;);	// 82861                  mov     word ptr ds:dword_528D6, 0 ;~ 17C5:0029
cs=0x17c5;eip=0x00002f; 	T(MOV(ax, *(dw*)(raddr(es,bx))));	// 82862                  mov     ax, es:[bx] ;~ 17C5:002F
cs=0x17c5;eip=0x000032; 	X(*(dw*)(((db*)&dword_4f220)+2) = ax;);	// 82863                  mov     word ptr ds:dword_4F220+2, ax ;~ 17C5:0032
cs=0x17c5;eip=0x000035; 	X(*(dw*)(&dword_4f220) = 0x120E;);	// 82864                  mov     word ptr ds:dword_4F220, 120Eh ;~ 17C5:0035
cs=0x17c5;eip=0x00003b; 	T(LES(bx, dword_528d6));	// 82865                  les     bx, ds:dword_528D6 ;~ 17C5:003B
cs=0x17c5;eip=0x00003f; 	X(PUSH(*(dw*)(raddr(es,bx+0x1A))));	// 82867                  push    word ptr es:[bx+1Ah] ;~ 17C5:003F
cs=0x17c5;eip=0x000043; 	J(CALL(sub_268b8,0));	// 82868                  call    sub_268B8 ;~ 17C5:0043
cs=0x17c5;eip=0x000046; 	T(ADD(sp, 2));	// 82869                  add     sp, 2 ;~ 17C5:0046
cs=0x17c5;eip=0x000049; 	T(LES(bx, dword_528d6));	// 82870                  les     bx, ds:dword_528D6 ;~ 17C5:0049
cs=0x17c5;eip=0x00004d; 	X(PUSH(*(dw*)(raddr(es,bx+0x1E))));	// 82871                  push    word ptr es:[bx+1Eh] ;~ 17C5:004D
cs=0x17c5;eip=0x000051; 	J(CALL(sub_268b8,0));	// 82872                  call    sub_268B8 ;~ 17C5:0051
cs=0x17c5;eip=0x000054; 	T(ADD(sp, 2));	// 82873                  add     sp, 2 ;~ 17C5:0054
cs=0x17c5;eip=0x000057; 	T(LES(bx, dword_528d6));	// 82874                  les     bx, ds:dword_528D6 ;~ 17C5:0057
cs=0x17c5;eip=0x00005b; 	X(PUSH(*(dw*)(raddr(es,bx+0x1C))));	// 82875                  push    word ptr es:[bx+1Ch] ;~ 17C5:005B
cs=0x17c5;eip=0x00005f; 	J(CALL(sub_268b8,0));	// 82876                  call    sub_268B8 ;~ 17C5:005F
cs=0x17c5;eip=0x000062; 	T(ADD(sp, 2));	// 82877                  add     sp, 2 ;~ 17C5:0062
cs=0x17c5;eip=0x000065; 	T(LES(bx, dword_528d6));	// 82878                  les     bx, ds:dword_528D6 ;~ 17C5:0065
cs=0x17c5;eip=0x000069; 	T(MOV(al, *(raddr(es,bx+0x24))));	// 82879                  mov     al, es:[bx+24h] ;~ 17C5:0069
cs=0x17c5;eip=0x00006d; 	X(byte_51712 = al;);	// 82880                  mov     ds:byte_51712, al ;~ 17C5:006D
cs=0x17c5;eip=0x000070; 	T(CMP(*(dw*)(raddr(es,bx+0x78)), 1));	// 82881                  cmp     word ptr es:[bx+78h], 1 ;~ 17C5:0070
cs=0x17c5;eip=0x000075; 	T(SBB(ax, ax));	// 82882                  sbb     ax, ax ;~ 17C5:0075
cs=0x17c5;eip=0x000077; 	T(NEG(ax));	// 82883                  neg     ax ;~ 17C5:0077
cs=0x17c5;eip=0x000079; 	X(word_48b66 = ax;);	// 82884                  mov     word_48B66, ax ;~ 17C5:0079
cs=0x17c5;eip=0x00007c; 	J(CALL(sub_29e1c,0));	// 82885                  call    sub_29E1C ;~ 17C5:007C
loc_262af:
	// 4813 
cs=0x17c5;eip=0x00007f; 	T(LES(bx, dword_528d6));	// 82888                  les     bx, ds:dword_528D6 ;~ 17C5:007F
cs=0x17c5;eip=0x000083; 	T(CMP(*(dw*)(raddr(es,bx+0x72)), 1));	// 82889                  cmp     word ptr es:[bx+72h], 1 ;~ 17C5:0083
cs=0x17c5;eip=0x000088; 	J(JNZ(loc_262cd));	// 82890                  jnz     short loc_262CD ;~ 17C5:0088
cs=0x17c5;eip=0x00008a; 	T(ax = bx;);	// 82891                  mov     ax, bx ;~ 17C5:008A
cs=0x17c5;eip=0x00008c; 	T(dx = es;);	// 82892                  mov     dx, es ;~ 17C5:008C
cs=0x17c5;eip=0x00008e; 	T(ADD(ax, 0x48));	// 82893                  add     ax, 48h ; 'H' ;~ 17C5:008E
cs=0x17c5;eip=0x000091; 	X(PUSH(dx));	// 82894                  push    dx ;~ 17C5:0091
cs=0x17c5;eip=0x000092; 	X(PUSH(ax));	// 82895                  push    ax ;~ 17C5:0092
cs=0x17c5;eip=0x000093; 	J(CALLF(sub_3895e,0));	// 82896                  call    far ptr sub_3895E ;~ 17C5:0093
cs=0x17c5;eip=0x000098; 	T(ADD(sp, 4));	// 82897                  add     sp, 4 ;~ 17C5:0098
cs=0x17c5;eip=0x00009b; 	J(JMP(loc_262d5));	// 82898                  jmp     short loc_262D5 ;~ 17C5:009B
loc_262cd:
	// 4814 
cs=0x17c5;eip=0x00009d; 	T(al = 0x80;);	// 82902                  mov     al, 80h ;~ 17C5:009D
cs=0x17c5;eip=0x00009f; 	X(*(db*)(((db*)&word_4e1c4)+1) = al;);	// 82903                  mov     byte ptr ds:word_4E1C4+1, al ;~ 17C5:009F
cs=0x17c5;eip=0x0000a2; 	X(*(db*)(&word_4e1c4) = al;);	// 82904                  mov     byte ptr ds:word_4E1C4, al ;~ 17C5:00A2
loc_262d5:
	// 4815 
cs=0x17c5;eip=0x0000a5; 	J(CALL(sub_264ca,0));	// 82907                  call    sub_264CA ;~ 17C5:00A5
seg2623_a8_proc:
	// 82911 
cs=0x17c5;eip=0x0000a8; 	J(CALLF(sub_499da,0));	// 82911                  call    far ptr sub_499DA ;~ 17C5:00A8
cs=0x17c5;eip=0x0000ad; 	T(LES(bx, dword_528d6));	// 82913                  les     bx, ds:dword_528D6 ;~ 17C5:00AD
cs=0x17c5;eip=0x0000b1; 	X(PUSH(*(dw*)(raddr(es,bx+0x24))));	// 82914                  push    word ptr es:[bx+24h] ;~ 17C5:00B1
cs=0x17c5;eip=0x0000b5; 	J(CALLF(sub_49b38,0));	// 82915                  call    far ptr sub_49B38 ;~ 17C5:00B5
cs=0x17c5;eip=0x0000ba; 	T(ADD(sp, 2));	// 82917                  add     sp, 2 ;~ 17C5:00BA
cs=0x17c5;eip=0x0000bd; 	T(LES(bx, dword_4f220));	// 82918                  les     bx, ds:dword_4F220 ;~ 17C5:00BD
cs=0x17c5;eip=0x0000c1; 	T(CMP(*(dw*)(raddr(es,bx+0x38)), 2));	// 82919                  cmp     word ptr es:[bx+38h], 2 ;~ 17C5:00C1
cs=0x17c5;eip=0x0000c6; 	J(JNC(loc_26306));	// 82920                  jnb     short loc_26306 ;~ 17C5:00C6
cs=0x17c5;eip=0x0000c8; 	T(ax = 0x0C;);	// 82921                  mov     ax, 0Ch ;~ 17C5:00C8
cs=0x17c5;eip=0x0000cb; 	X(PUSH(ax));	// 82922                  push    ax ;~ 17C5:00CB
cs=0x17c5;eip=0x0000cc; 	J(CALLF(sub_49acf,0));	// 82923                  call    far ptr sub_49ACF ;~ 17C5:00CC
cs=0x17c5;eip=0x0000d1; 	T(ADD(sp, 2));	// 82925                  add     sp, 2 ;~ 17C5:00D1
cs=0x17c5;eip=0x0000d4; 	J(JMP(loc_26312));	// 82926                  jmp     short loc_26312 ;~ 17C5:00D4
loc_26306:
	// 4816 
cs=0x17c5;eip=0x0000d6; 	T(ax = 0x10;);	// 82930                  mov     ax, 10h ;~ 17C5:00D6
cs=0x17c5;eip=0x0000d9; 	X(PUSH(ax));	// 82931                  push    ax ;~ 17C5:00D9
cs=0x17c5;eip=0x0000da; 	J(CALLF(sub_49acf,0));	// 82932                  call    far ptr sub_49ACF ;~ 17C5:00DA
cs=0x17c5;eip=0x0000df; 	T(ADD(sp, 2));	// 82934                  add     sp, 2 ;~ 17C5:00DF
loc_26312:
	// 4817 
cs=0x17c5;eip=0x0000e2; 	T(LES(bx, dword_528d6));	// 82937                  les     bx, ds:dword_528D6 ;~ 17C5:00E2
cs=0x17c5;eip=0x0000e6; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x20))));	// 82938                  mov     ax, es:[bx+20h] ;~ 17C5:00E6
cs=0x17c5;eip=0x0000ea; 	X(word_52ae4 = ax;);	// 82939                  mov     ds:word_52AE4, ax ;~ 17C5:00EA
cs=0x17c5;eip=0x0000ed; 	J(CALLF(sub_37cae,0));	// 82940                  call    sub_37CAE ;~ 17C5:00ED
cs=0x17c5;eip=0x0000f2; 	J(CALL(sub_26377,0));	// 82942                  call    sub_26377 ;~ 17C5:00F2
cs=0x17c5;eip=0x0000f5; 	J(CALL(sub_26441,0));	// 82945                  call    sub_26441 ;~ 17C5:00F5
cs=0x17c5;eip=0x0000f8; 	T(LES(bx, dword_528d6));	// 82948                  les     bx, ds:dword_528D6 ;~ 17C5:00F8
cs=0x17c5;eip=0x0000fc; 	T(CMP(*(dw*)(raddr(es,bx+0x72)), 1));	// 82949                  cmp     word ptr es:[bx+72h], 1 ;~ 17C5:00FC
cs=0x17c5;eip=0x000101; 	J(JNZ(loc_26344));	// 82950                  jnz     short loc_26344 ;~ 17C5:0101
cs=0x17c5;eip=0x000103; 	T(ax = bx;);	// 82951                  mov     ax, bx ;~ 17C5:0103
cs=0x17c5;eip=0x000105; 	T(dx = es;);	// 82952                  mov     dx, es ;~ 17C5:0105
cs=0x17c5;eip=0x000107; 	T(ADD(ax, 0x48));	// 82953                  add     ax, 48h ; 'H' ;~ 17C5:0107
cs=0x17c5;eip=0x00010a; 	X(PUSH(dx));	// 82954                  push    dx ;~ 17C5:010A
cs=0x17c5;eip=0x00010b; 	X(PUSH(ax));	// 82955                  push    ax ;~ 17C5:010B
cs=0x17c5;eip=0x00010c; 	J(CALLF(sub_3894a,0));	// 82956                  call    sub_3894A ;~ 17C5:010C
cs=0x17c5;eip=0x000111; 	T(ADD(sp, 4));	// 82957                  add     sp, 4 ;~ 17C5:0111
loc_26344:
	// 4818 
cs=0x17c5;eip=0x000114; 	J(CALL(sub_29e3f,0));	// 82960                  call    sub_29E3F ;~ 17C5:0114
cs=0x17c5;eip=0x000117; 	T(CMP(byte_48b64, 0));	// 82961                  cmp     byte_48B64, 0 ;~ 17C5:0117
cs=0x17c5;eip=0x00011c; 	J(JNZ(loc_26367));	// 82962                  jnz     short loc_26367 ;~ 17C5:011C
loc_2634e:
	// 4819 
cs=0x17c5;eip=0x00011e; 	X(byte_521c3 = 0;);	// 82965                  mov     ds:byte_521C3, 0 ;~ 17C5:011E
cs=0x17c5;eip=0x000123; 	X(byte_521c2 = 3;);	// 82966                  mov     ds:byte_521C2, 3 ;~ 17C5:0123
cs=0x17c5;eip=0x000128; 	T(ax = 0x96E2;);	// 82967                  mov     ax, 96E2h ;~ 17C5:0128
cs=0x17c5;eip=0x00012b; 	X(PUSH(ax));	// 82968                  push    ax ;~ 17C5:012B
cs=0x17c5;eip=0x00012c; 	X(PUSH(ax));	// 82969                  push    ax ;~ 17C5:012C
cs=0x17c5;eip=0x00012d; 	T(ax = 0x10;);	// 82970                  mov     ax, 10h ;~ 17C5:012D
cs=0x17c5;eip=0x000130; 	X(PUSH(ax));	// 82971                  push    ax ;~ 17C5:0130
cs=0x17c5;eip=0x000131; 	J(CALL(sub_34cb2,0));	// 82972                  call    sub_34CB2 ;~ 17C5:0131
cs=0x17c5;eip=0x000134; 	T(ADD(sp, 6));	// 82973                  add     sp, 6 ;~ 17C5:0134
loc_26367:
	// 4820 
cs=0x17c5;eip=0x000137; 	T(al = byte_48b64;);	// 82976                  mov     al, byte_48B64 ;~ 17C5:0137
cs=0x17c5;eip=0x00013a; 	T(SUB(ah, ah));	// 82977                  sub     ah, ah ;~ 17C5:013A
cs=0x17c5;eip=0x00013c; 	X(PUSH(ax));	// 82978                  push    ax ;~ 17C5:013C
cs=0x17c5;eip=0x00013d; 	J(CALL(sub_347d8,0));	// 82979                  call    sub_347D8 ;~ 17C5:013D
sub_26377:
	// 82993 
cs=0x17c5;eip=0x000147; 	X(PUSH(bp));	// 82994                  push    bp ;~ 17C5:0147
cs=0x17c5;eip=0x000148; 	T(bp = sp;);	// 82995                  mov     bp, sp ;~ 17C5:0148
cs=0x17c5;eip=0x00014a; 	J(CALL(sub_2803e,0));	// 82996                  call    sub_2803E ;~ 17C5:014A
cs=0x17c5;eip=0x00014d; 	J(CALL(seg2623_c8de_proc,m2c::kloc_32b0e));	// 82997                  call    loc_32B0E ;~ 17C5:014D
cs=0x17c5;eip=0x000150; 	T(LES(bx, dword_4f220));	// 82999                  les     bx, ds:dword_4F220 ;~ 17C5:0150
cs=0x17c5;eip=0x000154; 	T(MOV(bx, *(dw*)(raddr(es,bx+0x38))));	// 83001                  mov     bx, es:[bx+38h] ;~ 17C5:0154
cs=0x17c5;eip=0x000158; 	T(SHL(bx, 1));	// 83002                  shl     bx, 1 ;~ 17C5:0158
cs=0x17c5;eip=0x00015a; 	X(PUSH(*(dw*)(raddr(ds,bx+0x8C))));	// 83003                  push    word ptr [bx+8Ch] ;~ 17C5:015A
cs=0x17c5;eip=0x00015e; 	X(PUSH(word_48b6a));	// 83004                  push    word_48B6A ;~ 17C5:015E
cs=0x17c5;eip=0x000162; 	J(CALL(sub_34c1c,0));	// 83005                  call    sub_34C1C ;~ 17C5:0162
cs=0x17c5;eip=0x000165; 	T(ADD(sp, 4));	// 83007                  add     sp, 4 ;~ 17C5:0165
cs=0x17c5;eip=0x000168; 	J(CALL(sub_283f6,0));	// 83008                  call    sub_283F6 ;~ 17C5:0168
seg2623_16b_proc:
	// 83013 
cs=0x17c5;eip=0x00016b; 	J(CALL(sub_26512,0));	// 83013                  call    sub_26512 ;~ 17C5:016B
cs=0x17c5;eip=0x00016e; 	X(word_48b68 = ax;);	// 83016                  mov     word_48B68, ax ;~ 17C5:016E
cs=0x17c5;eip=0x000171; 	T(es = seg_4ee22;);	// 83017                  mov     es, ds:seg_4EE22 ;~ 17C5:0171
cs=0x17c5;eip=0x000175; 	T(al = byte_38b2f;);	// 83019                  mov     al, es:byte_38B2F ;~ 17C5:0175
cs=0x17c5;eip=0x000179; 	X(byte_4a3c7 = al;);	// 83020                  mov     byte_4A3C7, al ;~ 17C5:0179
cs=0x17c5;eip=0x00017c; 	J(CALLF(sub_49b1a,0));	// 83021                  call    far ptr sub_49B1A ;~ 17C5:017C
cs=0x17c5;eip=0x000181; 	X(byte_48b63 = al;);	// 83023                  mov     byte_48B63, al ;~ 17C5:0181
cs=0x17c5;eip=0x000184; 	T(OR(al, al));	// 83024                  or      al, al ;~ 17C5:0184
cs=0x17c5;eip=0x000186; 	J(JZ(loc_263bb));	// 83025                  jz      short loc_263BB ;~ 17C5:0186
sub_263b8:
	// 83031 
cs=0x17c5;eip=0x000188; 	J(CALL(sub_29d1e,0));	// 83032                  call    sub_29D1E ;~ 17C5:0188
loc_263bb:
	// 4821 
cs=0x17c5;eip=0x00018b; 	T(ax = 1;);	// 83036                  mov     ax, 1 ;~ 17C5:018B
cs=0x17c5;eip=0x00018e; 	X(PUSH(ax));	// 83037                  push    ax ;~ 17C5:018E
cs=0x17c5;eip=0x00018f; 	J(CALLF(sub_49af2,0));	// 83038                  call    far ptr sub_49AF2 ;~ 17C5:018F
seg2623_194_proc:
	// 83042 
cs=0x17c5;eip=0x000194; 	T(ADD(sp, 2));	// 83042                  add     sp, 2 ;~ 17C5:0194
cs=0x17c5;eip=0x000197; 	J(CALLF(sub_49af7,0));	// 83043                  call    far ptr sub_49AF7 ;~ 17C5:0197
cs=0x17c5;eip=0x00019c; 	J(CALLF(sub_49ad9,0));	// 83045                  call    far ptr sub_49AD9 ;~ 17C5:019C
cs=0x17c5;eip=0x0001a1; 	T(CMP(ax, 3));	// 83047                  cmp     ax, 3 ;~ 17C5:01A1
cs=0x17c5;eip=0x0001a4; 	J(JNZ(loc_263e6));	// 83048                  jnz     short loc_263E6 ;~ 17C5:01A4
cs=0x17c5;eip=0x0001a6; 	T(ax = 1;);	// 83049                  mov     ax, 1 ;~ 17C5:01A6
cs=0x17c5;eip=0x0001a9; 	X(PUSH(ax));	// 83050                  push    ax ;~ 17C5:01A9
cs=0x17c5;eip=0x0001aa; 	T(ax = 0x9C;);	// 83051                  mov     ax, 9Ch ;~ 17C5:01AA
cs=0x17c5;eip=0x0001ad; 	X(PUSH(ax));	// 83052                  push    ax ;~ 17C5:01AD
cs=0x17c5;eip=0x0001ae; 	J(CALL(sub_341ec,0));	// 83053                  call    sub_341EC ;~ 17C5:01AE
cs=0x17c5;eip=0x0001b1; 	T(ADD(sp, 4));	// 83055                  add     sp, 4 ;~ 17C5:01B1
cs=0x17c5;eip=0x0001b4; 	J(JMP(loc_263f4));	// 83056                  jmp     short loc_263F4 ;~ 17C5:01B4
loc_263e6:
	// 4822 
cs=0x17c5;eip=0x0001b6; 	T(ax = 1;);	// 83060                  mov     ax, 1 ;~ 17C5:01B6
cs=0x17c5;eip=0x0001b9; 	X(PUSH(ax));	// 83061                  push    ax ;~ 17C5:01B9
cs=0x17c5;eip=0x0001ba; 	T(ax = 0x0A7;);	// 83062                  mov     ax, 0A7h ;~ 17C5:01BA
cs=0x17c5;eip=0x0001bd; 	X(PUSH(ax));	// 83063                  push    ax ;~ 17C5:01BD
cs=0x17c5;eip=0x0001be; 	J(CALL(sub_341ec,0));	// 83064                  call    sub_341EC ;~ 17C5:01BE
cs=0x17c5;eip=0x0001c1; 	T(ADD(sp, 4));	// 83066                  add     sp, 4 ;~ 17C5:01C1
loc_263f4:
	// 4823 
cs=0x17c5;eip=0x0001c4; 	T(ax = 0x68;);	// 83069                  mov     ax, 68h ; 'h' ;~ 17C5:01C4
cs=0x17c5;eip=0x0001c7; 	X(PUSH(ax));	// 83070                  push    ax ;~ 17C5:01C7
cs=0x17c5;eip=0x0001c8; 	T(ax = 0x140;);	// 83071                  mov     ax, 140h ;~ 17C5:01C8
cs=0x17c5;eip=0x0001cb; 	X(PUSH(ax));	// 83072                  push    ax ;~ 17C5:01CB
cs=0x17c5;eip=0x0001cc; 	T(ax = 0x60;);	// 83073                  mov     ax, 60h ; '`' ;~ 17C5:01CC
cs=0x17c5;eip=0x0001cf; 	X(PUSH(ax));	// 83074                  push    ax ;~ 17C5:01CF
cs=0x17c5;eip=0x0001d0; 	T(SUB(ax, ax));	// 83075                  sub     ax, ax ;~ 17C5:01D0
cs=0x17c5;eip=0x0001d2; 	X(PUSH(ax));	// 83076                  push    ax ;~ 17C5:01D2
cs=0x17c5;eip=0x0001d3; 	X(PUSH(ax));	// 83077                  push    ax ;~ 17C5:01D3
cs=0x17c5;eip=0x0001d4; 	T(ax = 0x60;);	// 83078                  mov     ax, 60h ; '`' ;~ 17C5:01D4
cs=0x17c5;eip=0x0001d7; 	X(PUSH(ax));	// 83079                  push    ax ;~ 17C5:01D7
cs=0x17c5;eip=0x0001d8; 	T(SUB(ax, ax));	// 83080                  sub     ax, ax ;~ 17C5:01D8
cs=0x17c5;eip=0x0001da; 	X(PUSH(ax));	// 83081                  push    ax ;~ 17C5:01DA
cs=0x17c5;eip=0x0001db; 	T(ax = 1;);	// 83082                  mov     ax, 1 ;~ 17C5:01DB
cs=0x17c5;eip=0x0001de; 	X(PUSH(ax));	// 83083                  push    ax ;~ 17C5:01DE
cs=0x17c5;eip=0x0001df; 	J(CALLF(sub_49a70,0));	// 83084                  call    far ptr sub_49A70 ;~ 17C5:01DF
cs=0x17c5;eip=0x0001e4; 	T(ADD(sp, 0x10));	// 83086                  add     sp, 10h ;~ 17C5:01E4
cs=0x17c5;eip=0x0001e7; 	T(ax = 0x68;);	// 83087                  mov     ax, 68h ; 'h' ;~ 17C5:01E7
cs=0x17c5;eip=0x0001ea; 	X(PUSH(ax));	// 83088                  push    ax ;~ 17C5:01EA
cs=0x17c5;eip=0x0001eb; 	T(ax = 0x140;);	// 83089                  mov     ax, 140h ;~ 17C5:01EB
cs=0x17c5;eip=0x0001ee; 	X(PUSH(ax));	// 83090                  push    ax ;~ 17C5:01EE
cs=0x17c5;eip=0x0001ef; 	T(ax = 0x60;);	// 83091                  mov     ax, 60h ; '`' ;~ 17C5:01EF
cs=0x17c5;eip=0x0001f2; 	X(PUSH(ax));	// 83092                  push    ax ;~ 17C5:01F2
cs=0x17c5;eip=0x0001f3; 	T(SUB(ax, ax));	// 83093                  sub     ax, ax ;~ 17C5:01F3
cs=0x17c5;eip=0x0001f5; 	X(PUSH(ax));	// 83094                  push    ax ;~ 17C5:01F5
cs=0x17c5;eip=0x0001f6; 	T(ax = 2;);	// 83095                  mov     ax, 2 ;~ 17C5:01F6
cs=0x17c5;eip=0x0001f9; 	X(PUSH(ax));	// 83096                  push    ax ;~ 17C5:01F9
cs=0x17c5;eip=0x0001fa; 	T(ax = 0x60;);	// 83097                  mov     ax, 60h ; '`' ;~ 17C5:01FA
cs=0x17c5;eip=0x0001fd; 	X(PUSH(ax));	// 83098                  push    ax ;~ 17C5:01FD
cs=0x17c5;eip=0x0001fe; 	T(SUB(ax, ax));	// 83099                  sub     ax, ax ;~ 17C5:01FE
cs=0x17c5;eip=0x000200; 	X(PUSH(ax));	// 83100                  push    ax ;~ 17C5:0200
cs=0x17c5;eip=0x000201; 	T(ax = 1;);	// 83101                  mov     ax, 1 ;~ 17C5:0201
cs=0x17c5;eip=0x000204; 	X(PUSH(ax));	// 83102                  push    ax ;~ 17C5:0204
cs=0x17c5;eip=0x000205; 	J(CALLF(sub_49a70,0));	// 83103                  call    far ptr sub_49A70 ;~ 17C5:0205
cs=0x17c5;eip=0x00020a; 	T(ADD(sp, 0x10));	// 83105                  add     sp, 10h ;~ 17C5:020A
cs=0x17c5;eip=0x00020d; 	T(sp = bp;);	// 83106                  mov     sp, bp ;~ 17C5:020D
cs=0x17c5;eip=0x00020f; 	X(POP(bp));	// 83107                  pop     bp ;~ 17C5:020F
cs=0x17c5;eip=0x000210; 	J(RETN(0));	// 83108                  retn ;~ 17C5:0210

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_262af: 	goto loc_262af;
        case m2c::kloc_262cd: 	goto loc_262cd;
        case m2c::kloc_262d5: 	goto loc_262d5;
        case m2c::kloc_26306: 	goto loc_26306;
        case m2c::kloc_26312: 	goto loc_26312;
        case m2c::kloc_26344: 	goto loc_26344;
        case m2c::kloc_2634e: 	goto loc_2634e;
        case m2c::kloc_26367: 	goto loc_26367;
        case m2c::kloc_263bb: 	goto loc_263bb;
        case m2c::kloc_263e6: 	goto loc_263e6;
        case m2c::kloc_263f4: 	goto loc_263f4;
        case m2c::kseg2623_16b_proc: 	goto seg2623_16b_proc;
        case m2c::kseg2623_194_proc: 	goto seg2623_194_proc;
        case m2c::kseg2623_a8_proc: 	goto seg2623_a8_proc;
        case m2c::ksub_26240: 	goto sub_26240;
        case m2c::ksub_26377: 	goto sub_26377;
        case m2c::ksub_263b8: 	goto sub_263b8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group10(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group10:
    _begin:
sub_26441:
	// 83114 
cs=0x17c5;eip=0x000211; 	X(PUSH(bp));	// 83115                  push    bp ;~ 17C5:0211
cs=0x17c5;eip=0x000212; 	T(bp = sp;);	// 83116                  mov     bp, sp ;~ 17C5:0212
cs=0x17c5;eip=0x000214; 	X(*(dw*)(&dword_4f212) = 0x440;);	// 83117                  mov     word ptr ds:dword_4F212, 440h ;~ 17C5:0214
cs=0x17c5;eip=0x00021a; 	X(*(dw*)(((db*)&dword_4f212)+2) = 0;);	// 83118                  mov     word ptr ds:dword_4F212+2, 0 ;~ 17C5:021A
cs=0x17c5;eip=0x000220; 	T(LES(bx, dword_4f212));	// 83119                  les     bx, ds:dword_4F212 ;~ 17C5:0220
cs=0x17c5;eip=0x000224; 	T(CMP(*(raddr(es,bx)), 1));	// 83121                  cmp     byte ptr es:[bx], 1 ;~ 17C5:0224
cs=0x17c5;eip=0x000228; 	J(JBE(loc_2645e));	// 83122                  jbe     short loc_2645E ;~ 17C5:0228
cs=0x17c5;eip=0x00022a; 	X(MOV(*(raddr(es,bx)), 1));	// 83123                  mov     byte ptr es:[bx], 1 ;~ 17C5:022A
loc_2645e:
	// 4824 
cs=0x17c5;eip=0x00022e; 	J(CALLF(sub_49b97,0));	// 83126                  call    far ptr sub_49B97 ;~ 17C5:022E
seg2623_233_proc:
	// 83130 
cs=0x17c5;eip=0x000233; 	X(PUSH(word_48b68));	// 83130                  push    word_48B68 ;~ 17C5:0233
cs=0x17c5;eip=0x000237; 	T(SUB(bx, bx));	// 83131                  sub     bx, bx ;~ 17C5:0237
cs=0x17c5;eip=0x000239; 	T(es = bx;);	// 83132                  mov     es, bx ;~ 17C5:0239
cs=0x17c5;eip=0x00023b; 	T(bx = 0x4FE;);	// 83133                  mov     bx, 4FEh ;~ 17C5:023B
cs=0x17c5;eip=0x00023e; 	X(PUSH(*(dw*)(raddr(es,bx))));	// 83134                  push    word ptr es:[bx] ;~ 17C5:023E
cs=0x17c5;eip=0x000241; 	J(CALLF(sub_49b92,0));	// 83135                  call    far ptr sub_49B92 ;~ 17C5:0241
cs=0x17c5;eip=0x000246; 	T(ADD(sp, 4));	// 83137                  add     sp, 4 ;~ 17C5:0246
cs=0x17c5;eip=0x000249; 	J(CALL(sub_29ea8,0));	// 83138                  call    sub_29EA8 ;~ 17C5:0249
cs=0x17c5;eip=0x00024c; 	T(LES(bx, dword_528d6));	// 83140                  les     bx, ds:dword_528D6 ;~ 17C5:024C
cs=0x17c5;eip=0x000250; 	T(CMP(*(dw*)(raddr(es,bx+0x72)), 0));	// 83142                  cmp     word ptr es:[bx+72h], 0 ;~ 17C5:0250
cs=0x17c5;eip=0x000255; 	J(JNZ(__unk_2648c));	// 83143                  jnz     short __unk_2648C ;~ 17C5:0255
cs=0x17c5;eip=0x000257; 	J(CALLF(sub_38976,0));	// 83144                  call    sub_38976 ;~ 17C5:0257
__unk_2648c:
	// 4825 
cs=0x17c5;eip=0x00025c; 	J(CALL(sub_29e6b,0));	// 83147                  call    sub_29E6B ;~ 17C5:025C
cs=0x17c5;eip=0x00025f; 	J(CALL(sub_28279,0));	// 83149                  call    sub_28279 ;~ 17C5:025F
cs=0x17c5;eip=0x000262; 	T(LES(bx, dword_528d6));	// 83150                  les     bx, ds:dword_528D6 ;~ 17C5:0262
cs=0x17c5;eip=0x000266; 	T(CMP(*(dw*)(raddr(es,bx+0x72)), 0));	// 83151                  cmp     word ptr es:[bx+72h], 0 ;~ 17C5:0266
cs=0x17c5;eip=0x00026b; 	J(JNZ(loc_264a2));	// 83152                  jnz     short loc_264A2 ;~ 17C5:026B
cs=0x17c5;eip=0x00026d; 	J(CALLF(sub_389c6,0));	// 83153                  call    sub_389C6 ;~ 17C5:026D
loc_264a2:
	// 4826 
cs=0x17c5;eip=0x000272; 	T(ax = 1;);	// 83156                  mov     ax, 1 ;~ 17C5:0272
cs=0x17c5;eip=0x000275; 	X(PUSH(ax));	// 83157                  push    ax ;~ 17C5:0275
cs=0x17c5;eip=0x000276; 	J(CALLF(sub_49b29,0));	// 83158                  call    far ptr sub_49B29 ;~ 17C5:0276
cs=0x17c5;eip=0x00027b; 	T(ADD(sp, 2));	// 83160                  add     sp, 2 ;~ 17C5:027B
cs=0x17c5;eip=0x00027e; 	T(ax = 2;);	// 83161                  mov     ax, 2 ;~ 17C5:027E
cs=0x17c5;eip=0x000281; 	X(PUSH(ax));	// 83162                  push    ax ;~ 17C5:0281
cs=0x17c5;eip=0x000282; 	J(CALL(sub_284a8,0));	// 83163                  call    sub_284A8 ;~ 17C5:0282
cs=0x17c5;eip=0x000285; 	T(ADD(sp, 2));	// 83164                  add     sp, 2 ;~ 17C5:0285
__unk_264b8:
	// 4827 
cs=0x17c5;eip=0x000288; 	J(CALL(sub_29ee6,0));	// 83167                  call    sub_29EE6 ;~ 17C5:0288
cs=0x17c5;eip=0x00028b; 	J(CALLF(sub_49b97,0));	// 83168                  call    far ptr sub_49B97 ;~ 17C5:028B
cs=0x17c5;eip=0x000290; 	T(sp = bp;);	// 83170                  mov     sp, bp ;~ 17C5:0290
cs=0x17c5;eip=0x000292; 	X(POP(bp));	// 83171                  pop     bp ;~ 17C5:0292
cs=0x17c5;eip=0x000293; 	J(RETN(0));	// 83172                  retn ;~ 17C5:0293

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::k__unk_2648c: 	goto __unk_2648c;
        case m2c::k__unk_264b8: 	goto __unk_264b8;
        case m2c::kloc_2645e: 	goto loc_2645e;
        case m2c::kloc_264a2: 	goto loc_264a2;
        case m2c::kseg2623_233_proc: 	goto seg2623_233_proc;
        case m2c::ksub_26441: 	goto sub_26441;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_264c4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_264c4:
    _begin:
cs=0x17c5;eip=0x000294; 	X(PUSH(bp));	// 83179                  push    bp ;~ 17C5:0294
cs=0x17c5;eip=0x000295; 	X(POP(bp));	// 83180                  pop     bp ;~ 17C5:0295
cs=0x17c5;eip=0x000296; 	J(RETN(0));	// 83181                  retn ;~ 17C5:0296

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_264c4: 	goto sub_264c4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_264c7(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_264c7:
    _begin:
cs=0x17c5;eip=0x000297; 	X(PUSH(bp));	// 83189                  push    bp ;~ 17C5:0297
cs=0x17c5;eip=0x000298; 	X(POP(bp));	// 83190                  pop     bp ;~ 17C5:0298
cs=0x17c5;eip=0x000299; 	J(RETN(0));	// 83191                  retn ;~ 17C5:0299

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_264c7: 	goto sub_264c7;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group11(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group11:
    _begin:
sub_264ca:
	// 83200 
cs=0x17c5;eip=0x00029a; 	X(PUSH(bp));	// 83201                  push    bp ;~ 17C5:029A
cs=0x17c5;eip=0x00029b; 	T(bp = sp;);	// 83202                  mov     bp, sp ;~ 17C5:029B
cs=0x17c5;eip=0x00029d; 	T(SUB(sp, 2));	// 83203                  sub     sp, 2 ;~ 17C5:029D
cs=0x17c5;eip=0x0002a0; 	T(SUB(ax, ax));	// 83204                  sub     ax, ax ;~ 17C5:02A0
cs=0x17c5;eip=0x0002a2; 	X(PUSH(ax));	// 83205                  push    ax ;~ 17C5:02A2
cs=0x17c5;eip=0x0002a3; 	J(CALLF(sub_4999e,0));	// 83206                  call    far ptr sub_4999E ;~ 17C5:02A3
seg2623_2a8_proc:
	// 83210 
cs=0x17c5;eip=0x0002a8; 	T(ADD(sp, 2));	// 83210                  add     sp, 2 ;~ 17C5:02A8
cs=0x17c5;eip=0x0002ab; 	T(ax = 1;);	// 83211                  mov     ax, 1 ;~ 17C5:02AB
cs=0x17c5;eip=0x0002ae; 	X(PUSH(ax));	// 83212                  push    ax ;~ 17C5:02AE
cs=0x17c5;eip=0x0002af; 	J(CALLF(sub_4999e,0));	// 83213                  call    far ptr sub_4999E ;~ 17C5:02AF
cs=0x17c5;eip=0x0002b4; 	T(ADD(sp, 2));	// 83215                  add     sp, 2 ;~ 17C5:02B4
cs=0x17c5;eip=0x0002b7; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 83216                  mov     [bp-2], ax ;~ 17C5:02B7
cs=0x17c5;eip=0x0002ba; 	T(ax = 1;);	// 83217                  mov     ax, 1 ;~ 17C5:02BA
cs=0x17c5;eip=0x0002bd; 	X(PUSH(ax));	// 83218                  push    ax ;~ 17C5:02BD
cs=0x17c5;eip=0x0002be; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 83219                  push    word ptr [bp-2] ;~ 17C5:02BE
cs=0x17c5;eip=0x0002c1; 	J(CALLF(sub_49b15,0));	// 83220                  call    far ptr sub_49B15 ;~ 17C5:02C1
cs=0x17c5;eip=0x0002c6; 	T(ADD(sp, 4));	// 83222                  add     sp, 4 ;~ 17C5:02C6
cs=0x17c5;eip=0x0002c9; 	T(ax = 2;);	// 83223                  mov     ax, 2 ;~ 17C5:02C9
cs=0x17c5;eip=0x0002cc; 	X(PUSH(ax));	// 83224                  push    ax ;~ 17C5:02CC
cs=0x17c5;eip=0x0002cd; 	T(LES(bx, dword_528d6));	// 83225                  les     bx, ds:dword_528D6 ;~ 17C5:02CD
cs=0x17c5;eip=0x0002d1; 	X(PUSH(*(dw*)(raddr(es,bx+0x20))));	// 83226                  push    word ptr es:[bx+20h] ;~ 17C5:02D1
cs=0x17c5;eip=0x0002d5; 	J(CALLF(sub_49b15,0));	// 83227                  call    far ptr sub_49B15 ;~ 17C5:02D5
sub_2650a:
	// 83232 
cs=0x17c5;eip=0x0002da; 	T(ADD(sp, 4));	// 83233                  add     sp, 4 ;~ 17C5:02DA
cs=0x17c5;eip=0x0002dd; 	T(sp = bp;);	// 83234                  mov     sp, bp ;~ 17C5:02DD
cs=0x17c5;eip=0x0002df; 	X(POP(bp));	// 83235                  pop     bp ;~ 17C5:02DF
cs=0x17c5;eip=0x0002e0; 	J(RETN(0));	// 83236                  retn ;~ 17C5:02E0

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_2a8_proc: 	goto seg2623_2a8_proc;
        case m2c::ksub_264ca: 	goto sub_264ca;
        case m2c::ksub_2650a: 	goto sub_2650a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group12(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group12:
    _begin:
sub_26512:
	// 83247 
cs=0x17c5;eip=0x0002e2; 	J(CALLF(sub_49a98,0));	// 83248                  call    far ptr sub_49A98 ;~ 17C5:02E2
seg2623_2e7_proc:
	// 83252 
cs=0x17c5;eip=0x0002e7; 	T(bx = ax;);	// 83252                  mov     bx, ax ;~ 17C5:02E7
cs=0x17c5;eip=0x0002e9; 	T(SUB(bx, 2));	// 83253                  sub     bx, 2 ;~ 17C5:02E9
cs=0x17c5;eip=0x0002ec; 	T(CMP(bx, 0x0FFF));	// 83254                  cmp     bx, 0FFFh ;~ 17C5:02EC
cs=0x17c5;eip=0x0002f0; 	J(JBE(loc_26525));	// 83255                  jbe     short loc_26525 ;~ 17C5:02F0
cs=0x17c5;eip=0x0002f2; 	T(bx = 0x0FFF;);	// 83256                  mov     bx, 0FFFh ;~ 17C5:02F2
loc_26525:
	// 4828 
cs=0x17c5;eip=0x0002f5; 	X(word_48ba2 = bx;);	// 83259                  mov     word_48BA2, bx ;~ 17C5:02F5
cs=0x17c5;eip=0x0002f9; 	T(ah = 0x48;);	// 83260                  mov     ah, 48h ;~ 17C5:02F9
cs=0x17c5;eip=0x0002fb; 	S(_INT(0x21));	// 83261                  int     21h             ; DOS - 2+ - ALLOCATE MEMORY ;~ 17C5:02FB
cs=0x17c5;eip=0x0002fd; 	X(word_48ba0 = ax;);	// 83263                  mov     word_48BA0, ax ;~ 17C5:02FD
sub_26530:
	// 83268 
cs=0x17c5;eip=0x000300; 	T(SUB(cx, cx));	// 83269                  sub     cx, cx ;~ 17C5:0300
cs=0x17c5;eip=0x000302; 	T(es = cx;);	// 83270                  mov     es, cx ;~ 17C5:0302
cs=0x17c5;eip=0x000304; 	X(MOV(*(dw*)(raddr(es,0x4FE)), ax));	// 83272                  mov     es:4FEh, ax ;~ 17C5:0304
cs=0x17c5;eip=0x000308; 	T(ah = 0x3D;);	// 83273                  mov     ah, 3Dh ; '=' ;~ 17C5:0308
cs=0x17c5;eip=0x00030a; 	T(al = 0;);	// 83274                  mov     al, 0 ;~ 17C5:030A
cs=0x17c5;eip=0x00030c; 	T(dx = 0x0B4;);	// 83275                  mov     dx, 0B4h ;~ 17C5:030C
cs=0x17c5;eip=0x00030f; 	S(_INT(0x21));	// 83276                  int     21h             ; DOS - 2+ - OPEN DISK FILE WITH HANDLE ;~ 17C5:030F
cs=0x17c5;eip=0x000311; 	T(bx = ax;);	// 83280                  mov     bx, ax ;~ 17C5:0311
cs=0x17c5;eip=0x000313; 	T(cx = word_48ba2;);	// 83281                  mov     cx, word_48BA2 ;~ 17C5:0313
cs=0x17c5;eip=0x000317; 	T(SHL(cx, 1));	// 83282                  shl     cx, 1 ;~ 17C5:0317
cs=0x17c5;eip=0x000319; 	T(SHL(cx, 1));	// 83283                  shl     cx, 1 ;~ 17C5:0319
cs=0x17c5;eip=0x00031b; 	T(SHL(cx, 1));	// 83284                  shl     cx, 1 ;~ 17C5:031B
cs=0x17c5;eip=0x00031d; 	T(SHL(cx, 1));	// 83285                  shl     cx, 1 ;~ 17C5:031D
cs=0x17c5;eip=0x00031f; 	X(PUSH(ds));	// 83286                  push    ds ;~ 17C5:031F
cs=0x17c5;eip=0x000320; 	T(ax = word_48ba0;);	// 83287                  mov     ax, word_48BA0 ;~ 17C5:0320
cs=0x17c5;eip=0x000323; 	T(ds = ax;);	// 83288                  mov     ds, ax ;~ 17C5:0323
cs=0x17c5;eip=0x000325; 	T(dx = 0;);	// 83290                  mov     dx, 0 ;~ 17C5:0325
cs=0x17c5;eip=0x000328; 	T(ah = 0x3F;);	// 83291                  mov     ah, 3Fh ;~ 17C5:0328
cs=0x17c5;eip=0x00032a; 	S(_INT(0x21));	// 83292                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:032A
cs=0x17c5;eip=0x00032c; 	X(POP(ds));	// 83295                  pop     ds ;~ 17C5:032C
cs=0x17c5;eip=0x00032d; 	X(PUSH(ax));	// 83297                  push    ax ;~ 17C5:032D
cs=0x17c5;eip=0x00032e; 	T(ah = 0x3E;);	// 83298                  mov     ah, 3Eh ;~ 17C5:032E
cs=0x17c5;eip=0x000330; 	S(_INT(0x21));	// 83299                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:0330
cs=0x17c5;eip=0x000332; 	X(POP(ax));	// 83301                  pop     ax ;~ 17C5:0332
cs=0x17c5;eip=0x000333; 	J(RETN(0));	// 83302                  retn ;~ 17C5:0333

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_26525: 	goto loc_26525;
        case m2c::kseg2623_2e7_proc: 	goto seg2623_2e7_proc;
        case m2c::ksub_26512: 	goto sub_26512;
        case m2c::ksub_26530: 	goto sub_26530;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_26564(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_26564:
    _begin:
#undef var_9e
#define var_9e -0x9E
	// 83312 var_9E          = word ptr -9Eh ;~ 17C5:0334
#undef var_9c
#define var_9c -0x9C
	// 83313 var_9C          = word ptr -9Ch ;~ 17C5:0334
#undef var_9a
#define var_9a -0x9A
	// 83314 var_9A          = word ptr -9Ah ;~ 17C5:0334
#undef var_98
#define var_98 -0x98
	// 83315 var_98          = word ptr -98h ;~ 17C5:0334
#undef var_96
#define var_96 -0x96
	// 83316 var_96          = word ptr -96h ;~ 17C5:0334
#undef var_94
#define var_94 -0x94
	// 83317 var_94          = word ptr -94h ;~ 17C5:0334
#undef var_92
#define var_92 -0x92
	// 83318 var_92          = word ptr -92h ;~ 17C5:0334
#undef var_90
#define var_90 -0x90
	// 83319 var_90          = word ptr -90h ;~ 17C5:0334
#undef var_8e
#define var_8e -0x8E
	// 83320 var_8E          = word ptr -8Eh ;~ 17C5:0334
#undef var_4
#define var_4 -4
	// 83321 var_4           = word ptr -4 ;~ 17C5:0334
#undef var_2
#define var_2 -2
	// 83322 var_2           = word ptr -2 ;~ 17C5:0334
#undef arg_0
#define arg_0 4
	// 83323 arg_0           = word ptr  4 ;~ 17C5:0334
cs=0x17c5;eip=0x000334; 	X(PUSH(bp));	// 83329                  push    bp ;~ 17C5:0334
cs=0x17c5;eip=0x000335; 	T(bp = sp;);	// 83330                  mov     bp, sp ;~ 17C5:0335
cs=0x17c5;eip=0x000337; 	T(SUB(sp, 0x0A6));	// 83331                  sub     sp, 0A6h ;~ 17C5:0337
cs=0x17c5;eip=0x00033b; 	X(PUSH(di));	// 83332                  push    di ;~ 17C5:033B
cs=0x17c5;eip=0x00033c; 	X(PUSH(si));	// 83333                  push    si ;~ 17C5:033C
cs=0x17c5;eip=0x00033d; 	T(CMP(*(db*)(&word_4f20c), 3));	// 83334                  cmp     byte ptr ds:word_4F20C, 3 ;~ 17C5:033D
cs=0x17c5;eip=0x000342; 	J(JGE(loc_26586));	// 83335                  jge     short loc_26586 ;~ 17C5:0342
cs=0x17c5;eip=0x000344; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 83337                  push    [bp+arg_0] ;~ 17C5:0344
cs=0x17c5;eip=0x000347; 	J(CALLF(sub_3611c,0));	// 83338                  call    sub_3611C ;~ 17C5:0347
cs=0x17c5;eip=0x00034c; 	T(ADD(sp, 2));	// 83340                  add     sp, 2 ;~ 17C5:034C
cs=0x17c5;eip=0x00034f; 	X(POP(si));	// 83341                  pop     si ;~ 17C5:034F
cs=0x17c5;eip=0x000350; 	X(POP(di));	// 83342                  pop     di ;~ 17C5:0350
cs=0x17c5;eip=0x000351; 	T(sp = bp;);	// 83343                  mov     sp, bp ;~ 17C5:0351
cs=0x17c5;eip=0x000353; 	X(POP(bp));	// 83344                  pop     bp ;~ 17C5:0353
cs=0x17c5;eip=0x000354; 	J(RETN(0));	// 83345                  retn ;~ 17C5:0354
ret_17c5_355:
	// 4829 
cs=0x17c5;eip=0x000355; 	T(NOP);	// 83347                  nop ;~ 17C5:0355
loc_26586:
	// 4830 
cs=0x17c5;eip=0x000356; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 83350                  mov     [bp+var_4], 0 ;~ 17C5:0356
loc_2658b:
	// 4831 
cs=0x17c5;eip=0x00035b; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_4))));	// 83353                  mov     si, [bp+var_4] ;~ 17C5:035B
cs=0x17c5;eip=0x00035e; 	T(SHL(si, 1));	// 83354                  shl     si, 1 ;~ 17C5:035E
cs=0x17c5;eip=0x000360; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0E0))));	// 83355                  mov     ax, [si+0E0h] ;~ 17C5:0360
cs=0x17c5;eip=0x000364; 	X(MOV(*(dw*)(raddr(ds,si-0x6A14)), ax));	// 83356                  mov     [si-6A14h], ax ;~ 17C5:0364
cs=0x17c5;eip=0x000368; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 83357                  inc     [bp+var_4] ;~ 17C5:0368
cs=0x17c5;eip=0x00036b; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x10));	// 83358                  cmp     [bp+var_4], 10h ;~ 17C5:036B
cs=0x17c5;eip=0x00036f; 	J(JL(loc_2658b));	// 83359                  jl      short loc_2658B ;~ 17C5:036F
cs=0x17c5;eip=0x000371; 	T(ax = word_4a4a2;);	// 83360                  mov     ax, word_4A4A2 ;~ 17C5:0371
cs=0x17c5;eip=0x000374; 	T(NEG(ax));	// 83361                  neg     ax ;~ 17C5:0374
cs=0x17c5;eip=0x000376; 	X(word_4f1f6 = ax;);	// 83362                  mov     ds:word_4F1F6, ax ;~ 17C5:0376
cs=0x17c5;eip=0x000379; 	T(ax = word_4a4a0;);	// 83363                  mov     ax, word_4A4A0 ;~ 17C5:0379
cs=0x17c5;eip=0x00037c; 	T(CMP(ax, 0x200));	// 83364                  cmp     ax, 200h ;~ 17C5:037C
cs=0x17c5;eip=0x00037f; 	J(JGE(loc_265b4));	// 83365                  jge     short loc_265B4 ;~ 17C5:037F
cs=0x17c5;eip=0x000381; 	T(ax = 0x200;);	// 83366                  mov     ax, 200h ;~ 17C5:0381
loc_265b4:
	// 4832 
cs=0x17c5;eip=0x000384; 	T(CWD);	// 83369                  cwd ;~ 17C5:0384
cs=0x17c5;eip=0x000385; 	X(PUSH(dx));	// 83370                  push    dx ;~ 17C5:0385
cs=0x17c5;eip=0x000386; 	X(PUSH(ax));	// 83371                  push    ax ;~ 17C5:0386
cs=0x17c5;eip=0x000387; 	T(ax = word_4a49e;);	// 83372                  mov     ax, word_4A49E ;~ 17C5:0387
cs=0x17c5;eip=0x00038a; 	T(CWD);	// 83373                  cwd ;~ 17C5:038A
cs=0x17c5;eip=0x00038b; 	T(dh = dl;);	// 83374                  mov     dh, dl ;~ 17C5:038B
cs=0x17c5;eip=0x00038d; 	T(dl = ah;);	// 83375                  mov     dl, ah ;~ 17C5:038D
cs=0x17c5;eip=0x00038f; 	T(ah = al;);	// 83376                  mov     ah, al ;~ 17C5:038F
cs=0x17c5;eip=0x000391; 	T(SUB(al, al));	// 83377                  sub     al, al ;~ 17C5:0391
cs=0x17c5;eip=0x000393; 	X(PUSH(dx));	// 83378                  push    dx ;~ 17C5:0393
cs=0x17c5;eip=0x000394; 	X(PUSH(ax));	// 83379                  push    ax ;~ 17C5:0394
cs=0x17c5;eip=0x000395; 	J(CALL(sub_34e44,0));	// 83380                  call    sub_34E44 ;~ 17C5:0395
cs=0x17c5;eip=0x000398; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 83381                  mov     [bp+var_2], ax ;~ 17C5:0398
cs=0x17c5;eip=0x00039b; 	T(CMP(byte_4e73e, 0));	// 83382                  cmp     ds:byte_4E73E, 0 ;~ 17C5:039B
cs=0x17c5;eip=0x0003a0; 	J(JZ(loc_265d9));	// 83383                  jz      short loc_265D9 ;~ 17C5:03A0
cs=0x17c5;eip=0x0003a2; 	T(cl = byte_4e73e;);	// 83384                  mov     cl, ds:byte_4E73E ;~ 17C5:03A2
cs=0x17c5;eip=0x0003a6; 	X(SHL(*(dw*)(raddr(ss,bp+var_2)), cl));	// 83385                  shl     [bp+var_2], cl ;~ 17C5:03A6
loc_265d9:
	// 4833 
cs=0x17c5;eip=0x0003a9; 	T(CMP(byte_4de54, 0));	// 83388                  cmp     ds:byte_4DE54, 0 ;~ 17C5:03A9
cs=0x17c5;eip=0x0003ae; 	J(JZ(loc_265e3));	// 83389                  jz      short loc_265E3 ;~ 17C5:03AE
cs=0x17c5;eip=0x0003b0; 	X(SAR(*(dw*)(raddr(ss,bp+var_2)), 1));	// 83390                  sar     [bp+var_2], 1 ;~ 17C5:03B0
loc_265e3:
	// 4834 
cs=0x17c5;eip=0x0003b3; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 83393                  mov     [bp+var_4], 0 ;~ 17C5:03B3
cs=0x17c5;eip=0x0003b8; 	J(return _group13(m2c::kloc_26699, _state););	// 83394                  jmp     loc_26699 ;~ 17C5:03B8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_26586: 	goto loc_26586;
        case m2c::kloc_2658b: 	goto loc_2658b;
        case m2c::kloc_265b4: 	goto loc_265b4;
        case m2c::kloc_265d9: 	goto loc_265d9;
        case m2c::kloc_265e3: 	goto loc_265e3;
        case m2c::kret_17c5_355: 	goto ret_17c5_355;
        case m2c::ksub_26564: 	goto sub_26564;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group13(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group13:
    _begin:
seg2623_3bc_proc:
	// 83402 
loc_265ec:
	// 4835 
cs=0x17c5;eip=0x0003bc; 	X(MOV(*(dw*)(raddr(ss,bp+var_9e)), 0x5848));	// 83403                  mov     [bp+var_9E], 5848h ;~ 17C5:03BC
loc_265f2:
	// 4836 
cs=0x17c5;eip=0x0003c2; 	X(PUSH(word_4a4a4));	// 83406                  push    word_4A4A4 ;~ 17C5:03C2
cs=0x17c5;eip=0x0003c6; 	T(ax = 0x0A7B8;);	// 83407                  mov     ax, 0A7B8h ;~ 17C5:03C6
cs=0x17c5;eip=0x0003c9; 	X(PUSH(ax));	// 83408                  push    ax ;~ 17C5:03C9
cs=0x17c5;eip=0x0003ca; 	J(CALL(sub_29d5f,0));	// 83409                  call    sub_29D5F ;~ 17C5:03CA
cs=0x17c5;eip=0x0003cd; 	T(ADD(sp, 4));	// 83410                  add     sp, 4 ;~ 17C5:03CD
cs=0x17c5;eip=0x0003d0; 	T(si = ax;);	// 83411                  mov     si, ax ;~ 17C5:03D0
cs=0x17c5;eip=0x0003d2; 	X(PUSH(word_4f1f6));	// 83412                  push    ds:word_4F1F6 ;~ 17C5:03D2
cs=0x17c5;eip=0x0003d6; 	X(PUSH(*(dw*)(raddr(ss,bp+var_9e))));	// 83413                  push    [bp+var_9E] ;~ 17C5:03D6
cs=0x17c5;eip=0x0003da; 	J(CALL(sub_29d5f,0));	// 83414                  call    sub_29D5F ;~ 17C5:03DA
cs=0x17c5;eip=0x0003dd; 	T(ADD(sp, 4));	// 83415                  add     sp, 4 ;~ 17C5:03DD
sub_26610:
	// 83421 
cs=0x17c5;eip=0x0003e0; 	T(di = ax;);	// 83422                  mov     di, ax ;~ 17C5:03E0
cs=0x17c5;eip=0x0003e2; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 83423                  mov     ax, [bp-4] ;~ 17C5:03E2
cs=0x17c5;eip=0x0003e5; 	T(SHL(ax, 1));	// 83424                  shl     ax, 1 ;~ 17C5:03E5
cs=0x17c5;eip=0x0003e7; 	T(ADD(ax, bp));	// 83425                  add     ax, bp ;~ 17C5:03E7
cs=0x17c5;eip=0x0003e9; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A4)), ax));	// 83426                  mov     [bp-0A4h], ax ;~ 17C5:03E9
cs=0x17c5;eip=0x0003ed; 	T(bx = ax;);	// 83427                  mov     bx, ax ;~ 17C5:03ED
cs=0x17c5;eip=0x0003ef; 	T(ax = word_48bbc;);	// 83428                  mov     ax, word_48BBC ;~ 17C5:03EF
cs=0x17c5;eip=0x0003f2; 	T(ADD(ax, si));	// 83429                  add     ax, si ;~ 17C5:03F2
cs=0x17c5;eip=0x0003f4; 	T(SUB(ax, di));	// 83430                  sub     ax, di ;~ 17C5:03F4
cs=0x17c5;eip=0x0003f6; 	X(MOV(*(dw*)(raddr(ds,bx-0x26)), ax));	// 83431                  mov     [bx-26h], ax ;~ 17C5:03F6
cs=0x17c5;eip=0x0003f9; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0A4))));	// 83432                  mov     bx, [bp-0A4h] ;~ 17C5:03F9
cs=0x17c5;eip=0x0003fd; 	T(ax = si;);	// 83433                  mov     ax, si ;~ 17C5:03FD
cs=0x17c5;eip=0x0003ff; 	T(NEG(ax));	// 83434                  neg     ax ;~ 17C5:03FF
cs=0x17c5;eip=0x000401; 	T(ADD(ax, word_48bbc));	// 83435                  add     ax, word_48BBC ;~ 17C5:0401
cs=0x17c5;eip=0x000405; 	T(SUB(ax, di));	// 83436                  sub     ax, di ;~ 17C5:0405
cs=0x17c5;eip=0x000407; 	X(MOV(*(dw*)(raddr(ds,bx-0x6A)), ax));	// 83437                  mov     [bx-6Ah], ax ;~ 17C5:0407
cs=0x17c5;eip=0x00040a; 	X(PUSH(word_4a4a4));	// 83438                  push    word_4A4A4 ;~ 17C5:040A
cs=0x17c5;eip=0x00040e; 	X(PUSH(*(dw*)(raddr(ss,bp-0x9E))));	// 83439                  push    word ptr [bp-9Eh] ;~ 17C5:040E
cs=0x17c5;eip=0x000412; 	J(CALL(sub_29d5f,0));	// 83440                  call    sub_29D5F ;~ 17C5:0412
cs=0x17c5;eip=0x000415; 	T(ADD(sp, 4));	// 83441                  add     sp, 4 ;~ 17C5:0415
cs=0x17c5;eip=0x000418; 	T(si = ax;);	// 83442                  mov     si, ax ;~ 17C5:0418
cs=0x17c5;eip=0x00041a; 	X(PUSH(word_4f1f6));	// 83443                  push    ds:word_4F1F6 ;~ 17C5:041A
cs=0x17c5;eip=0x00041e; 	T(ax = 0x0A7B8;);	// 83444                  mov     ax, 0A7B8h ;~ 17C5:041E
cs=0x17c5;eip=0x000421; 	X(PUSH(ax));	// 83445                  push    ax ;~ 17C5:0421
cs=0x17c5;eip=0x000422; 	J(CALL(sub_29d5f,0));	// 83446                  call    sub_29D5F ;~ 17C5:0422
cs=0x17c5;eip=0x000425; 	T(ADD(sp, 4));	// 83447                  add     sp, 4 ;~ 17C5:0425
cs=0x17c5;eip=0x000428; 	T(di = ax;);	// 83448                  mov     di, ax ;~ 17C5:0428
cs=0x17c5;eip=0x00042a; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 83449                  mov     ax, [bp-4] ;~ 17C5:042A
cs=0x17c5;eip=0x00042d; 	T(SHL(ax, 1));	// 83450                  shl     ax, 1 ;~ 17C5:042D
cs=0x17c5;eip=0x00042f; 	T(ADD(ax, bp));	// 83451                  add     ax, bp ;~ 17C5:042F
cs=0x17c5;eip=0x000431; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A6)), ax));	// 83452                  mov     [bp-0A6h], ax ;~ 17C5:0431
cs=0x17c5;eip=0x000435; 	T(bx = ax;);	// 83453                  mov     bx, ax ;~ 17C5:0435
cs=0x17c5;eip=0x000437; 	T(ax = si;);	// 83454                  mov     ax, si ;~ 17C5:0437
cs=0x17c5;eip=0x000439; 	T(ADD(ax, di));	// 83455                  add     ax, di ;~ 17C5:0439
cs=0x17c5;eip=0x00043b; 	T(SAR(ax, 1));	// 83456                  sar     ax, 1 ;~ 17C5:043B
cs=0x17c5;eip=0x00043d; 	T(SAR(ax, 1));	// 83457                  sar     ax, 1 ;~ 17C5:043D
cs=0x17c5;eip=0x00043f; 	T(SUB(ax, si));	// 83458                  sub     ax, si ;~ 17C5:043F
cs=0x17c5;eip=0x000441; 	T(NEG(ax));	// 83459                  neg     ax ;~ 17C5:0441
cs=0x17c5;eip=0x000443; 	T(ADD(ax, di));	// 83460                  add     ax, di ;~ 17C5:0443
cs=0x17c5;eip=0x000445; 	T(NEG(ax));	// 83461                  neg     ax ;~ 17C5:0445
cs=0x17c5;eip=0x000447; 	T(ADD(ax, *(word_48bbe)));	// 83462                  add     ax, word_48BBE ;~ 17C5:0447
cs=0x17c5;eip=0x00044b; 	X(MOV(*(dw*)(raddr(ds,bx-0x48)), ax));	// 83463                  mov     [bx-48h], ax ;~ 17C5:044B
cs=0x17c5;eip=0x00044e; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0A6))));	// 83464                  mov     bx, [bp-0A6h] ;~ 17C5:044E
cs=0x17c5;eip=0x000452; 	T(ax = si;);	// 83465                  mov     ax, si ;~ 17C5:0452
cs=0x17c5;eip=0x000454; 	T(SUB(ax, di));	// 83466                  sub     ax, di ;~ 17C5:0454
cs=0x17c5;eip=0x000456; 	T(SAR(ax, 1));	// 83467                  sar     ax, 1 ;~ 17C5:0456
cs=0x17c5;eip=0x000458; 	T(SAR(ax, 1));	// 83468                  sar     ax, 1 ;~ 17C5:0458
cs=0x17c5;eip=0x00045a; 	T(ADD(ax, *(word_48bbe)));	// 83469                  add     ax, word_48BBE ;~ 17C5:045A
cs=0x17c5;eip=0x00045e; 	T(SUB(ax, si));	// 83470                  sub     ax, si ;~ 17C5:045E
cs=0x17c5;eip=0x000460; 	T(ADD(ax, di));	// 83471                  add     ax, di ;~ 17C5:0460
cs=0x17c5;eip=0x000462; 	X(MOV(*(dw*)(raddr(ds,bx-0x8C)), ax));	// 83472                  mov     [bx-8Ch], ax ;~ 17C5:0462
cs=0x17c5;eip=0x000466; 	X(INC(*(dw*)(raddr(ss,bp-4))));	// 83473                  inc     word ptr [bp-4] ;~ 17C5:0466
seg2623_469_proc:
	// 83478 
loc_26699:
	// 4837 
cs=0x17c5;eip=0x000469; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x11));	// 83479                  cmp     [bp+var_4], 11h ;~ 17C5:0469
cs=0x17c5;eip=0x00046d; 	J(JGE(loc_266bc));	// 83480                  jge     short loc_266BC ;~ 17C5:046D
cs=0x17c5;eip=0x00046f; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x10));	// 83481                  cmp     [bp+var_4], 10h ;~ 17C5:046F
cs=0x17c5;eip=0x000473; 	J(JL(loc_266a8));	// 83482                  jl      short loc_266A8 ;~ 17C5:0473
cs=0x17c5;eip=0x000475; 	J(JMP(loc_265ec));	// 83483                  jmp     loc_265EC ;~ 17C5:0475
loc_266a8:
	// 4838 
cs=0x17c5;eip=0x000478; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 83487                  mov     bx, [bp+var_4] ;~ 17C5:0478
cs=0x17c5;eip=0x00047b; 	T(SHL(bx, 1));	// 83488                  shl     bx, 1 ;~ 17C5:047B
cs=0x17c5;eip=0x00047d; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x6A14))));	// 83489                  mov     ax, [bx-6A14h] ;~ 17C5:047D
cs=0x17c5;eip=0x000481; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_2))));	// 83490                  add     ax, [bp+var_2] ;~ 17C5:0481
cs=0x17c5;eip=0x000484; 	X(MOV(*(dw*)(raddr(ss,bp+var_9e)), ax));	// 83491                  mov     [bp+var_9E], ax ;~ 17C5:0484
cs=0x17c5;eip=0x000488; 	J(JMP(loc_265f2));	// 83492                  jmp     loc_265F2 ;~ 17C5:0488
ret_17c5_48b:
	// 4839 
cs=0x17c5;eip=0x00048b; 	T(NOP);	// 83495                  nop ;~ 17C5:048B
loc_266bc:
	// 4840 
cs=0x17c5;eip=0x00048c; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 83499                  mov     [bp+var_4], 0 ;~ 17C5:048C
loc_266c1:
	// 4841 
cs=0x17c5;eip=0x000491; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_4))));	// 83502                  mov     si, [bp+var_4] ;~ 17C5:0491
cs=0x17c5;eip=0x000494; 	T(SHL(si, 1));	// 83503                  shl     si, 1 ;~ 17C5:0494
cs=0x17c5;eip=0x000496; 	T(ADD(si, bp));	// 83504                  add     si, bp ;~ 17C5:0496
cs=0x17c5;eip=0x000498; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x26))));	// 83505                  mov     ax, [si-26h] ;~ 17C5:0498
cs=0x17c5;eip=0x00049b; 	X(MOV(*(dw*)(raddr(ss,bp+var_9c)), ax));	// 83506                  mov     [bp+var_9C], ax ;~ 17C5:049B
cs=0x17c5;eip=0x00049f; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x48))));	// 83507                  mov     ax, [si-48h] ;~ 17C5:049F
cs=0x17c5;eip=0x0004a2; 	X(MOV(*(dw*)(raddr(ss,bp+var_9a)), ax));	// 83508                  mov     [bp+var_9A], ax ;~ 17C5:04A2
cs=0x17c5;eip=0x0004a6; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6A))));	// 83509                  mov     ax, [si-6Ah] ;~ 17C5:04A6
cs=0x17c5;eip=0x0004a9; 	X(MOV(*(dw*)(raddr(ss,bp+var_98)), ax));	// 83510                  mov     [bp+var_98], ax ;~ 17C5:04A9
cs=0x17c5;eip=0x0004ad; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x8C))));	// 83511                  mov     ax, [si-8Ch] ;~ 17C5:04AD
cs=0x17c5;eip=0x0004b1; 	X(MOV(*(dw*)(raddr(ss,bp+var_96)), ax));	// 83512                  mov     [bp+var_96], ax ;~ 17C5:04B1
cs=0x17c5;eip=0x0004b5; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x68))));	// 83513                  mov     ax, [si-68h] ;~ 17C5:04B5
cs=0x17c5;eip=0x0004b8; 	X(MOV(*(dw*)(raddr(ss,bp+var_94)), ax));	// 83514                  mov     [bp+var_94], ax ;~ 17C5:04B8
cs=0x17c5;eip=0x0004bc; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x8A))));	// 83515                  mov     ax, [si-8Ah] ;~ 17C5:04BC
cs=0x17c5;eip=0x0004c0; 	X(MOV(*(dw*)(raddr(ss,bp+var_92)), ax));	// 83516                  mov     [bp+var_92], ax ;~ 17C5:04C0
cs=0x17c5;eip=0x0004c4; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x24))));	// 83517                  mov     ax, [si-24h] ;~ 17C5:04C4
cs=0x17c5;eip=0x0004c7; 	X(MOV(*(dw*)(raddr(ss,bp+var_90)), ax));	// 83518                  mov     [bp+var_90], ax ;~ 17C5:04C7
cs=0x17c5;eip=0x0004cb; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x46))));	// 83519                  mov     ax, [si-46h] ;~ 17C5:04CB
cs=0x17c5;eip=0x0004ce; 	X(MOV(*(dw*)(raddr(ss,bp+var_8e)), ax));	// 83520                  mov     [bp+var_8E], ax ;~ 17C5:04CE
cs=0x17c5;eip=0x0004d2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 83521                  mov     ax, [bp+var_4] ;~ 17C5:04D2
cs=0x17c5;eip=0x0004d5; 	T(ADD(ax, 0x60));	// 83522                  add     ax, 60h ; '`' ;~ 17C5:04D5
cs=0x17c5;eip=0x0004d8; 	X(PUSH(ax));	// 83523                  push    ax ;~ 17C5:04D8
cs=0x17c5;eip=0x0004d9; 	T(ax = bp+var_9c);	// 83524                  lea     ax, [bp+var_9C] ;~ 17C5:04D9
cs=0x17c5;eip=0x0004dd; 	X(PUSH(ax));	// 83525                  push    ax ;~ 17C5:04DD
cs=0x17c5;eip=0x0004de; 	T(ax = 4;);	// 83526                  mov     ax, 4 ;~ 17C5:04DE
cs=0x17c5;eip=0x0004e1; 	X(PUSH(ax));	// 83527                  push    ax ;~ 17C5:04E1
cs=0x17c5;eip=0x0004e2; 	X(PUSH(word_48bba));	// 83528                  push    word_48BBA ;~ 17C5:04E2
cs=0x17c5;eip=0x0004e6; 	J(CALLF(sub_35ab2,0));	// 83529                  call    sub_35AB2 ;~ 17C5:04E6
cs=0x17c5;eip=0x0004eb; 	T(ADD(sp, 8));	// 83531                  add     sp, 8 ;~ 17C5:04EB
cs=0x17c5;eip=0x0004ee; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 83532                  inc     [bp+var_4] ;~ 17C5:04EE
cs=0x17c5;eip=0x0004f1; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x10));	// 83533                  cmp     [bp+var_4], 10h ;~ 17C5:04F1
cs=0x17c5;eip=0x0004f5; 	J(JL(loc_266c1));	// 83534                  jl      short loc_266C1 ;~ 17C5:04F5
cs=0x17c5;eip=0x0004f7; 	T(ax = word_4a498;);	// 83535                  mov     ax, word_4A498 ;~ 17C5:04F7
cs=0x17c5;eip=0x0004fa; 	T(CWD);	// 83536                  cwd ;~ 17C5:04FA
cs=0x17c5;eip=0x0004fb; 	T(XOR(ax, dx));	// 83537                  xor     ax, dx ;~ 17C5:04FB
cs=0x17c5;eip=0x0004fd; 	T(SUB(ax, dx));	// 83538                  sub     ax, dx ;~ 17C5:04FD
cs=0x17c5;eip=0x0004ff; 	T(cx = 9;);	// 83539                  mov     cx, 9 ;~ 17C5:04FF
cs=0x17c5;eip=0x000502; 	T(SAR(ax, cl));	// 83540                  sar     ax, cl ;~ 17C5:0502
cs=0x17c5;eip=0x000504; 	T(XOR(ax, dx));	// 83541                  xor     ax, dx ;~ 17C5:0504
cs=0x17c5;eip=0x000506; 	T(SUB(ax, dx));	// 83542                  sub     ax, dx ;~ 17C5:0506
cs=0x17c5;eip=0x000508; 	X(word_520cc = ax;);	// 83543                  mov     ds:word_520CC, ax ;~ 17C5:0508
cs=0x17c5;eip=0x00050b; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 1));	// 83544                  mov     [bp+var_4], 1 ;~ 17C5:050B
loc_26740:
	// 4842 
cs=0x17c5;eip=0x000510; 	T(ax = word_4a498;);	// 83547                  mov     ax, word_4A498 ;~ 17C5:0510
cs=0x17c5;eip=0x000513; 	T(CWD);	// 83548                  cwd ;~ 17C5:0513
cs=0x17c5;eip=0x000514; 	T(bx = 0x10;);	// 83549                  mov     bx, 10h ;~ 17C5:0514
cs=0x17c5;eip=0x000517; 	T(SUB(bx, *(dw*)(raddr(ss,bp+var_4))));	// 83550                  sub     bx, [bp+var_4] ;~ 17C5:0517
cs=0x17c5;eip=0x00051a; 	T(cl = 5;);	// 83551                  mov     cl, 5 ;~ 17C5:051A
cs=0x17c5;eip=0x00051c; 	T(SHL(bx, cl));	// 83552                  shl     bx, cl ;~ 17C5:051C
cs=0x17c5;eip=0x00051e; 	T(IDIV2(bx));	// 83553                  idiv    bx ;~ 17C5:051E
cs=0x17c5;eip=0x000520; 	T(SUB(ax, word_520cc));	// 83554                  sub     ax, ds:word_520CC ;~ 17C5:0520
cs=0x17c5;eip=0x000524; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 83555                  mov     bx, [bp+var_4] ;~ 17C5:0524
cs=0x17c5;eip=0x000527; 	T(SHL(bx, 1));	// 83556                  shl     bx, 1 ;~ 17C5:0527
cs=0x17c5;eip=0x000529; 	X(MOV(*(dw*)(raddr(ds,bx-0x6A14)), ax));	// 83557                  mov     [bx-6A14h], ax ;~ 17C5:0529
cs=0x17c5;eip=0x00052d; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 83558                  inc     [bp+var_4] ;~ 17C5:052D
cs=0x17c5;eip=0x000530; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x10));	// 83559                  cmp     [bp+var_4], 10h ;~ 17C5:0530
sub_26764:
	// 83565 
cs=0x17c5;eip=0x000534; 	J(JL(loc_26740));	// 83566                  jl      short loc_26740 ;~ 17C5:0534
cs=0x17c5;eip=0x000536; 	X(word_520cc = 0;);	// 83567                  mov     ds:word_520CC, 0 ;~ 17C5:0536
cs=0x17c5;eip=0x00053c; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 0));	// 83568                  mov     word ptr [bp-4], 0 ;~ 17C5:053C
cs=0x17c5;eip=0x000541; 	J(JMP(loc_26821));	// 83569                  jmp     loc_26821 ;~ 17C5:0541
loc_26774:
	// 4843 
cs=0x17c5;eip=0x000544; 	X(MOV(*(dw*)(raddr(ss,bp-0x9E)), 0x0A7B8));	// 83573                  mov     word ptr [bp-9Eh], 0A7B8h ;~ 17C5:0544
loc_2677a:
	// 4844 
cs=0x17c5;eip=0x00054a; 	X(PUSH(word_4a4a4));	// 83576                  push    word_4A4A4 ;~ 17C5:054A
cs=0x17c5;eip=0x00054e; 	T(ax = 0x0A7B8;);	// 83577                  mov     ax, 0A7B8h ;~ 17C5:054E
cs=0x17c5;eip=0x000551; 	X(PUSH(ax));	// 83578                  push    ax ;~ 17C5:0551
cs=0x17c5;eip=0x000552; 	J(CALL(sub_29d5f,0));	// 83579                  call    sub_29D5F ;~ 17C5:0552
cs=0x17c5;eip=0x000555; 	T(ADD(sp, 4));	// 83580                  add     sp, 4 ;~ 17C5:0555
cs=0x17c5;eip=0x000558; 	T(si = ax;);	// 83581                  mov     si, ax ;~ 17C5:0558
cs=0x17c5;eip=0x00055a; 	X(PUSH(word_4f1f6));	// 83582                  push    ds:word_4F1F6 ;~ 17C5:055A
cs=0x17c5;eip=0x00055e; 	X(PUSH(*(dw*)(raddr(ss,bp-0x9E))));	// 83583                  push    word ptr [bp-9Eh] ;~ 17C5:055E
cs=0x17c5;eip=0x000562; 	J(CALL(sub_29d5f,0));	// 83584                  call    sub_29D5F ;~ 17C5:0562
cs=0x17c5;eip=0x000565; 	T(ADD(sp, 4));	// 83585                  add     sp, 4 ;~ 17C5:0565
cs=0x17c5;eip=0x000568; 	T(di = ax;);	// 83586                  mov     di, ax ;~ 17C5:0568
cs=0x17c5;eip=0x00056a; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 83587                  mov     ax, [bp-4] ;~ 17C5:056A
cs=0x17c5;eip=0x00056d; 	T(SHL(ax, 1));	// 83588                  shl     ax, 1 ;~ 17C5:056D
cs=0x17c5;eip=0x00056f; 	T(ADD(ax, bp));	// 83589                  add     ax, bp ;~ 17C5:056F
cs=0x17c5;eip=0x000571; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A2)), ax));	// 83590                  mov     [bp-0A2h], ax ;~ 17C5:0571
cs=0x17c5;eip=0x000575; 	T(bx = ax;);	// 83591                  mov     bx, ax ;~ 17C5:0575
cs=0x17c5;eip=0x000577; 	T(ax = word_48bbc;);	// 83592                  mov     ax, word_48BBC ;~ 17C5:0577
cs=0x17c5;eip=0x00057a; 	T(ADD(ax, si));	// 83593                  add     ax, si ;~ 17C5:057A
cs=0x17c5;eip=0x00057c; 	T(SUB(ax, di));	// 83594                  sub     ax, di ;~ 17C5:057C
cs=0x17c5;eip=0x00057e; 	X(MOV(*(dw*)(raddr(ds,bx-0x26)), ax));	// 83595                  mov     [bx-26h], ax ;~ 17C5:057E
cs=0x17c5;eip=0x000581; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0A2))));	// 83596                  mov     bx, [bp-0A2h] ;~ 17C5:0581
cs=0x17c5;eip=0x000585; 	T(ax = si;);	// 83597                  mov     ax, si ;~ 17C5:0585
cs=0x17c5;eip=0x000587; 	T(NEG(ax));	// 83598                  neg     ax ;~ 17C5:0587
cs=0x17c5;eip=0x000589; 	T(ADD(ax, word_48bbc));	// 83599                  add     ax, word_48BBC ;~ 17C5:0589
cs=0x17c5;eip=0x00058d; 	T(SUB(ax, di));	// 83600                  sub     ax, di ;~ 17C5:058D
cs=0x17c5;eip=0x00058f; 	X(MOV(*(dw*)(raddr(ds,bx-0x6A)), ax));	// 83601                  mov     [bx-6Ah], ax ;~ 17C5:058F
cs=0x17c5;eip=0x000592; 	X(PUSH(word_4a4a4));	// 83602                  push    word_4A4A4 ;~ 17C5:0592
cs=0x17c5;eip=0x000596; 	X(PUSH(*(dw*)(raddr(ss,bp-0x9E))));	// 83603                  push    word ptr [bp-9Eh] ;~ 17C5:0596
cs=0x17c5;eip=0x00059a; 	J(CALL(sub_29d5f,0));	// 83604                  call    sub_29D5F ;~ 17C5:059A
cs=0x17c5;eip=0x00059d; 	T(ADD(sp, 4));	// 83605                  add     sp, 4 ;~ 17C5:059D
cs=0x17c5;eip=0x0005a0; 	T(si = ax;);	// 83606                  mov     si, ax ;~ 17C5:05A0
cs=0x17c5;eip=0x0005a2; 	X(PUSH(word_4f1f6));	// 83607                  push    ds:word_4F1F6 ;~ 17C5:05A2
cs=0x17c5;eip=0x0005a6; 	T(ax = 0x0A7B8;);	// 83608                  mov     ax, 0A7B8h ;~ 17C5:05A6
cs=0x17c5;eip=0x0005a9; 	X(PUSH(ax));	// 83609                  push    ax ;~ 17C5:05A9
cs=0x17c5;eip=0x0005aa; 	J(CALL(sub_29d5f,0));	// 83610                  call    sub_29D5F ;~ 17C5:05AA
cs=0x17c5;eip=0x0005ad; 	T(ADD(sp, 4));	// 83611                  add     sp, 4 ;~ 17C5:05AD
cs=0x17c5;eip=0x0005b0; 	T(di = ax;);	// 83612                  mov     di, ax ;~ 17C5:05B0
cs=0x17c5;eip=0x0005b2; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 83613                  mov     ax, [bp-4] ;~ 17C5:05B2
cs=0x17c5;eip=0x0005b5; 	T(SHL(ax, 1));	// 83614                  shl     ax, 1 ;~ 17C5:05B5
cs=0x17c5;eip=0x0005b7; 	T(ADD(ax, bp));	// 83615                  add     ax, bp ;~ 17C5:05B7
cs=0x17c5;eip=0x0005b9; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A0)), ax));	// 83616                  mov     [bp-0A0h], ax ;~ 17C5:05B9
cs=0x17c5;eip=0x0005bd; 	T(bx = ax;);	// 83617                  mov     bx, ax ;~ 17C5:05BD
cs=0x17c5;eip=0x0005bf; 	T(ax = si;);	// 83618                  mov     ax, si ;~ 17C5:05BF
cs=0x17c5;eip=0x0005c1; 	T(ADD(ax, di));	// 83619                  add     ax, di ;~ 17C5:05C1
cs=0x17c5;eip=0x0005c3; 	T(SAR(ax, 1));	// 83620                  sar     ax, 1 ;~ 17C5:05C3
cs=0x17c5;eip=0x0005c5; 	T(SAR(ax, 1));	// 83621                  sar     ax, 1 ;~ 17C5:05C5
cs=0x17c5;eip=0x0005c7; 	T(SUB(ax, si));	// 83622                  sub     ax, si ;~ 17C5:05C7
cs=0x17c5;eip=0x0005c9; 	T(NEG(ax));	// 83623                  neg     ax ;~ 17C5:05C9
cs=0x17c5;eip=0x0005cb; 	T(ADD(ax, di));	// 83624                  add     ax, di ;~ 17C5:05CB
cs=0x17c5;eip=0x0005cd; 	T(NEG(ax));	// 83625                  neg     ax ;~ 17C5:05CD
cs=0x17c5;eip=0x0005cf; 	T(ADD(ax, *(word_48bbe)));	// 83626                  add     ax, word_48BBE ;~ 17C5:05CF
cs=0x17c5;eip=0x0005d3; 	X(MOV(*(dw*)(raddr(ds,bx-0x48)), ax));	// 83627                  mov     [bx-48h], ax ;~ 17C5:05D3
cs=0x17c5;eip=0x0005d6; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0A0))));	// 83628                  mov     bx, [bp-0A0h] ;~ 17C5:05D6
cs=0x17c5;eip=0x0005da; 	T(ax = si;);	// 83629                  mov     ax, si ;~ 17C5:05DA
cs=0x17c5;eip=0x0005dc; 	T(SUB(ax, di));	// 83630                  sub     ax, di ;~ 17C5:05DC
cs=0x17c5;eip=0x0005de; 	T(SAR(ax, 1));	// 83631                  sar     ax, 1 ;~ 17C5:05DE
cs=0x17c5;eip=0x0005e0; 	T(SAR(ax, 1));	// 83632                  sar     ax, 1 ;~ 17C5:05E0
cs=0x17c5;eip=0x0005e2; 	T(ADD(ax, *(word_48bbe)));	// 83633                  add     ax, word_48BBE ;~ 17C5:05E2
cs=0x17c5;eip=0x0005e6; 	T(SUB(ax, si));	// 83634                  sub     ax, si ;~ 17C5:05E6
cs=0x17c5;eip=0x0005e8; 	T(ADD(ax, di));	// 83635                  add     ax, di ;~ 17C5:05E8
cs=0x17c5;eip=0x0005ea; 	X(MOV(*(dw*)(raddr(ds,bx-0x8C)), ax));	// 83636                  mov     [bx-8Ch], ax ;~ 17C5:05EA
cs=0x17c5;eip=0x0005ee; 	X(INC(*(dw*)(raddr(ss,bp-4))));	// 83637                  inc     word ptr [bp-4] ;~ 17C5:05EE
loc_26821:
	// 4845 
cs=0x17c5;eip=0x0005f1; 	T(CMP(*(dw*)(raddr(ss,bp-4)), 0x11));	// 83640                  cmp     word ptr [bp-4], 11h ;~ 17C5:05F1
cs=0x17c5;eip=0x0005f5; 	J(JGE(loc_26844));	// 83641                  jge     short loc_26844 ;~ 17C5:05F5
cs=0x17c5;eip=0x0005f7; 	T(CMP(*(dw*)(raddr(ss,bp-4)), 0x10));	// 83642                  cmp     word ptr [bp-4], 10h ;~ 17C5:05F7
cs=0x17c5;eip=0x0005fb; 	J(JL(loc_26830));	// 83643                  jl      short loc_26830 ;~ 17C5:05FB
cs=0x17c5;eip=0x0005fd; 	J(JMP(loc_26774));	// 83644                  jmp     loc_26774 ;~ 17C5:05FD
loc_26830:
	// 4846 
cs=0x17c5;eip=0x000600; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 83648                  mov     ax, [bp-2] ;~ 17C5:0600
cs=0x17c5;eip=0x000603; 	T(MOV(bx, *(dw*)(raddr(ss,bp-4))));	// 83649                  mov     bx, [bp-4] ;~ 17C5:0603
cs=0x17c5;eip=0x000606; 	T(SHL(bx, 1));	// 83650                  shl     bx, 1 ;~ 17C5:0606
cs=0x17c5;eip=0x000608; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x6A14))));	// 83651                  sub     ax, [bx-6A14h] ;~ 17C5:0608
cs=0x17c5;eip=0x00060c; 	X(MOV(*(dw*)(raddr(ss,bp-0x9E)), ax));	// 83652                  mov     [bp-9Eh], ax ;~ 17C5:060C
cs=0x17c5;eip=0x000610; 	J(JMP(loc_2677a));	// 83653                  jmp     loc_2677A ;~ 17C5:0610
loc_26844:
	// 4847 
cs=0x17c5;eip=0x000614; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 0));	// 83659                  mov     word ptr [bp-4], 0 ;~ 17C5:0614
loc_26849:
	// 4848 
cs=0x17c5;eip=0x000619; 	T(MOV(si, *(dw*)(raddr(ss,bp-4))));	// 83662                  mov     si, [bp-4] ;~ 17C5:0619
cs=0x17c5;eip=0x00061c; 	T(SHL(si, 1));	// 83663                  shl     si, 1 ;~ 17C5:061C
cs=0x17c5;eip=0x00061e; 	T(ADD(si, bp));	// 83664                  add     si, bp ;~ 17C5:061E
cs=0x17c5;eip=0x000620; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x26))));	// 83665                  mov     ax, [si-26h] ;~ 17C5:0620
cs=0x17c5;eip=0x000623; 	X(MOV(*(dw*)(raddr(ss,bp-0x9C)), ax));	// 83666                  mov     [bp-9Ch], ax ;~ 17C5:0623
cs=0x17c5;eip=0x000627; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x48))));	// 83667                  mov     ax, [si-48h] ;~ 17C5:0627
cs=0x17c5;eip=0x00062a; 	X(MOV(*(dw*)(raddr(ss,bp-0x9A)), ax));	// 83668                  mov     [bp-9Ah], ax ;~ 17C5:062A
cs=0x17c5;eip=0x00062e; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6A))));	// 83669                  mov     ax, [si-6Ah] ;~ 17C5:062E
cs=0x17c5;eip=0x000631; 	X(MOV(*(dw*)(raddr(ss,bp-0x98)), ax));	// 83670                  mov     [bp-98h], ax ;~ 17C5:0631
cs=0x17c5;eip=0x000635; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x8C))));	// 83671                  mov     ax, [si-8Ch] ;~ 17C5:0635
cs=0x17c5;eip=0x000639; 	X(MOV(*(dw*)(raddr(ss,bp-0x96)), ax));	// 83672                  mov     [bp-96h], ax ;~ 17C5:0639
cs=0x17c5;eip=0x00063d; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x68))));	// 83673                  mov     ax, [si-68h] ;~ 17C5:063D
cs=0x17c5;eip=0x000640; 	X(MOV(*(dw*)(raddr(ss,bp-0x94)), ax));	// 83674                  mov     [bp-94h], ax ;~ 17C5:0640
cs=0x17c5;eip=0x000644; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x8A))));	// 83675                  mov     ax, [si-8Ah] ;~ 17C5:0644
cs=0x17c5;eip=0x000648; 	X(MOV(*(dw*)(raddr(ss,bp-0x92)), ax));	// 83676                  mov     [bp-92h], ax ;~ 17C5:0648
cs=0x17c5;eip=0x00064c; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x24))));	// 83677                  mov     ax, [si-24h] ;~ 17C5:064C
cs=0x17c5;eip=0x00064f; 	X(MOV(*(dw*)(raddr(ss,bp-0x90)), ax));	// 83678                  mov     [bp-90h], ax ;~ 17C5:064F
cs=0x17c5;eip=0x000653; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x46))));	// 83679                  mov     ax, [si-46h] ;~ 17C5:0653
cs=0x17c5;eip=0x000656; 	X(MOV(*(dw*)(raddr(ss,bp-0x8E)), ax));	// 83680                  mov     [bp-8Eh], ax ;~ 17C5:0656
seg2623_65a_proc:
	// 83683 
cs=0x17c5;eip=0x00065a; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 83683                  mov     ax, [bp-4] ;~ 17C5:065A
cs=0x17c5;eip=0x00065d; 	T(ADD(ax, 0x70));	// 83684                  add     ax, 70h ; 'p' ;~ 17C5:065D
cs=0x17c5;eip=0x000660; 	X(PUSH(ax));	// 83685                  push    ax ;~ 17C5:0660
cs=0x17c5;eip=0x000661; 	T(ax = bp-0x9C);	// 83686                  lea     ax, [bp-9Ch] ;~ 17C5:0661
cs=0x17c5;eip=0x000665; 	X(PUSH(ax));	// 83687                  push    ax ;~ 17C5:0665
cs=0x17c5;eip=0x000666; 	T(ax = 4;);	// 83688                  mov     ax, 4 ;~ 17C5:0666
cs=0x17c5;eip=0x000669; 	X(PUSH(ax));	// 83689                  push    ax ;~ 17C5:0669
cs=0x17c5;eip=0x00066a; 	X(PUSH(word_48bba));	// 83690                  push    word_48BBA ;~ 17C5:066A
cs=0x17c5;eip=0x00066e; 	J(CALLF(sub_35ab2,0));	// 83691                  call    sub_35AB2 ;~ 17C5:066E
cs=0x17c5;eip=0x000673; 	T(ADD(sp, 8));	// 83693                  add     sp, 8 ;~ 17C5:0673
cs=0x17c5;eip=0x000676; 	X(INC(*(dw*)(raddr(ss,bp-4))));	// 83694                  inc     word ptr [bp-4] ;~ 17C5:0676
cs=0x17c5;eip=0x000679; 	T(CMP(*(dw*)(raddr(ss,bp-4)), 0x10));	// 83695                  cmp     word ptr [bp-4], 10h ;~ 17C5:0679
cs=0x17c5;eip=0x00067d; 	J(JL(loc_26849));	// 83696                  jl      short loc_26849 ;~ 17C5:067D
cs=0x17c5;eip=0x00067f; 	X(POP(si));	// 83697                  pop     si ;~ 17C5:067F
cs=0x17c5;eip=0x000680; 	X(POP(di));	// 83698                  pop     di ;~ 17C5:0680
cs=0x17c5;eip=0x000681; 	T(sp = bp;);	// 83699                  mov     sp, bp ;~ 17C5:0681
cs=0x17c5;eip=0x000683; 	X(POP(bp));	// 83700                  pop     bp ;~ 17C5:0683
cs=0x17c5;eip=0x000684; 	J(RETN(0));	// 83701                  retn ;~ 17C5:0684

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_265ec: 	goto loc_265ec;
        case m2c::kloc_265f2: 	goto loc_265f2;
        case m2c::kloc_266a8: 	goto loc_266a8;
        case m2c::kloc_266bc: 	goto loc_266bc;
        case m2c::kloc_266c1: 	goto loc_266c1;
        case m2c::kloc_26740: 	goto loc_26740;
        case m2c::kloc_26774: 	goto loc_26774;
        case m2c::kloc_2677a: 	goto loc_2677a;
        case m2c::kloc_26821: 	goto loc_26821;
        case m2c::kloc_26830: 	goto loc_26830;
        case m2c::kloc_26844: 	goto loc_26844;
        case m2c::kloc_26849: 	goto loc_26849;
        case m2c::kret_17c5_48b: 	goto ret_17c5_48b;
        case m2c::kseg2623_469_proc: 	goto seg2623_469_proc;
        case m2c::kseg2623_65a_proc: 	goto seg2623_65a_proc;
        case m2c::ksub_26610: 	goto sub_26610;
        case m2c::ksub_26764: 	goto sub_26764;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_268b8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_268b8:
    _begin:
#undef arg_0
#define arg_0 4
	// 83715 arg_0           = word ptr  4 ;~ 17C5:0688
cs=0x17c5;eip=0x000688; 	X(PUSH(bp));	// 83717                  push    bp ;~ 17C5:0688
cs=0x17c5;eip=0x000689; 	T(bp = sp;);	// 83718                  mov     bp, sp ;~ 17C5:0689
cs=0x17c5;eip=0x00068b; 	X(PUSH(di));	// 83719                  push    di ;~ 17C5:068B
cs=0x17c5;eip=0x00068c; 	X(PUSH(si));	// 83720                  push    si ;~ 17C5:068C
cs=0x17c5;eip=0x00068d; 	X(PUSH(es));	// 83721                  push    es ;~ 17C5:068D
cs=0x17c5;eip=0x00068e; 	X(PUSH(ds));	// 83722                  push    ds ;~ 17C5:068E
cs=0x17c5;eip=0x00068f; 	X(PUSH(bp));	// 83723                  push    bp ;~ 17C5:068F
cs=0x17c5;eip=0x000690; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 83724                  mov     dx, [bp+arg_0] ;~ 17C5:0690
cs=0x17c5;eip=0x000693; 	X(byte_48be4 = 0;);	// 83725                  mov     byte_48BE4, 0 ;~ 17C5:0693
cs=0x17c5;eip=0x000698; 	J(JMP(loc_268d0));	// 83726                  jmp     short loc_268D0 ;~ 17C5:0698
ret_17c5_69b:
	// 4849 
cs=0x17c5;eip=0x00069b; 	X(byte_48be4 = 1;);	// 83730                  mov     byte_48BE4, 1 ;~ 17C5:069B
loc_268d0:
	// 4850 
cs=0x17c5;eip=0x0006a0; 	T(es = dx;);	// 83733                  mov     es, dx ;~ 17C5:06A0
cs=0x17c5;eip=0x0006a2; 	T(bx = 0x0EBE;);	// 83735                  mov     bx, 0EBEh ;~ 17C5:06A2
cs=0x17c5;eip=0x0006a5; 	T(di = 0x1C;);	// 83736                  mov     di, 1Ch ;~ 17C5:06A5
cs=0x17c5;eip=0x0006a8; 	T(MOV(ax, *(dw*)(raddr(es,di))));	// 83737                  mov     ax, es:[di] ;~ 17C5:06A8
cs=0x17c5;eip=0x0006ab; 	T(dl = 5;);	// 83738                  mov     dl, 5 ;~ 17C5:06AB
cs=0x17c5;eip=0x0006ad; 	T(MUL1_1(dl));	// 83739                  mul     dl ;~ 17C5:06AD
cs=0x17c5;eip=0x0006af; 	T(ADD(bx, ax));	// 83740                  add     bx, ax ;~ 17C5:06AF
cs=0x17c5;eip=0x0006b1; 	T(di = 0x22;);	// 83741                  mov     di, 22h ; '"' ;~ 17C5:06B1
cs=0x17c5;eip=0x0006b4; 	T(MOV(cx, *(dw*)(raddr(es,di))));	// 83742                  mov     cx, es:[di] ;~ 17C5:06B4
cs=0x17c5;eip=0x0006b7; 	T(si = 0x24;);	// 83743                  mov     si, 24h ; '$' ;~ 17C5:06B7
cs=0x17c5;eip=0x0006ba; 	T(di = 0x18;);	// 83744                  mov     di, 18h ;~ 17C5:06BA
cs=0x17c5;eip=0x0006bd; 	T(MOV(di, *(dw*)(raddr(es,di))));	// 83745                  mov     di, es:[di] ;~ 17C5:06BD
loc_268f0:
	// 4851 
cs=0x17c5;eip=0x0006c0; 	T(MOV(ax, *(dw*)(raddr(es,si))));	// 83748                  mov     ax, es:[si] ;~ 17C5:06C0
cs=0x17c5;eip=0x0006c3; 	X(MOV(*(dw*)(raddr(ds,bx+1)), ax));	// 83749                  mov     [bx+1], ax ;~ 17C5:06C3
cs=0x17c5;eip=0x0006c6; 	X(MOV(*(dw*)(raddr(ds,bx+3)), di));	// 83750                  mov     [bx+3], di ;~ 17C5:06C6
cs=0x17c5;eip=0x0006c9; 	T(ADD(si, 2));	// 83751                  add     si, 2 ;~ 17C5:06C9
cs=0x17c5;eip=0x0006cc; 	T(ADD(bx, 5));	// 83752                  add     bx, 5 ;~ 17C5:06CC
cs=0x17c5;eip=0x0006cf; 	J(LOOP(loc_268f0));	// 83753                  loop    loc_268F0 ;~ 17C5:06CF
cs=0x17c5;eip=0x0006d1; 	T(CMP(byte_48be4, 0));	// 83754                  cmp     byte_48BE4, 0 ;~ 17C5:06D1
cs=0x17c5;eip=0x0006d6; 	J(JNZ(locret_26910));	// 83755                  jnz     short locret_26910 ;~ 17C5:06D6
cs=0x17c5;eip=0x0006d8; 	X(POP(bp));	// 83756                  pop     bp ;~ 17C5:06D8
cs=0x17c5;eip=0x0006d9; 	X(POP(ds));	// 83757                  pop     ds ;~ 17C5:06D9
cs=0x17c5;eip=0x0006da; 	X(POP(es));	// 83758                  pop     es ;~ 17C5:06DA
cs=0x17c5;eip=0x0006db; 	X(POP(si));	// 83760                  pop     si ;~ 17C5:06DB
cs=0x17c5;eip=0x0006dc; 	X(POP(di));	// 83761                  pop     di ;~ 17C5:06DC
cs=0x17c5;eip=0x0006dd; 	T(sp = bp;);	// 83762                  mov     sp, bp ;~ 17C5:06DD
cs=0x17c5;eip=0x0006df; 	X(POP(bp));	// 83763                  pop     bp ;~ 17C5:06DF
locret_26910:
	// 4852 
cs=0x17c5;eip=0x0006e0; 	J(RETN(0));	// 83766                  retn ;~ 17C5:06E0

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_268d0: 	goto loc_268d0;
        case m2c::kloc_268f0: 	goto loc_268f0;
        case m2c::klocret_26910: 	goto locret_26910;
        case m2c::kret_17c5_69b: 	goto ret_17c5_69b;
        case m2c::ksub_268b8: 	goto sub_268b8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group14(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group14:
    _begin:
seg2623_6e1_proc:
	// 83770 
cs=0x17c5;eip=0x0006e1; 	X(PUSH(bp));	// 83770                  push    bp ;~ 17C5:06E1
cs=0x17c5;eip=0x0006e2; 	T(bp = sp;);	// 83771                  mov     bp, sp ;~ 17C5:06E2
cs=0x17c5;eip=0x0006e4; 	X(PUSH(di));	// 83772                  push    di ;~ 17C5:06E4
cs=0x17c5;eip=0x0006e5; 	X(PUSH(si));	// 83773                  push    si ;~ 17C5:06E5
cs=0x17c5;eip=0x0006e6; 	X(PUSH(es));	// 83774                  push    es ;~ 17C5:06E6
cs=0x17c5;eip=0x0006e7; 	X(PUSH(ds));	// 83775                  push    ds ;~ 17C5:06E7
cs=0x17c5;eip=0x0006e8; 	X(PUSH(bp));	// 83776                  push    bp ;~ 17C5:06E8
cs=0x17c5;eip=0x0006e9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 83777                  mov     ax, [bp+4] ;~ 17C5:06E9
cs=0x17c5;eip=0x0006ec; 	X(byte_48be4 = 0;);	// 83778                  mov     byte_48BE4, 0 ;~ 17C5:06EC
cs=0x17c5;eip=0x0006f1; 	J(JMP(loc_26929));	// 83779                  jmp     short loc_26929 ;~ 17C5:06F1
ret_17c5_6f4:
	// 4853 
cs=0x17c5;eip=0x0006f4; 	X(byte_48be4 = 1;);	// 83783                  mov     byte_48BE4, 1 ;~ 17C5:06F4
loc_26929:
	// 4854 
cs=0x17c5;eip=0x0006f9; 	T(es = ax;);	// 83786                  mov     es, ax ;~ 17C5:06F9
cs=0x17c5;eip=0x0006fb; 	T(ah = 0x49;);	// 83788                  mov     ah, 49h ;~ 17C5:06FB
cs=0x17c5;eip=0x0006fd; 	S(_INT(0x21));	// 83789                  int     21h             ; DOS - 2+ - FREE MEMORY ;~ 17C5:06FD
cs=0x17c5;eip=0x0006ff; 	J(JNC(loc_2693b));	// 83791                  jnb     short loc_2693B ;~ 17C5:06FF
cs=0x17c5;eip=0x000701; 	T(dx = 0x105;);	// 83792                  mov     dx, 105h ;~ 17C5:0701
cs=0x17c5;eip=0x000704; 	T(ah = 9;);	// 83793                  mov     ah, 9 ;~ 17C5:0704
cs=0x17c5;eip=0x000706; 	S(_INT(0x21));	// 83794                  int     21h             ; DOS - PRINT STRING ;~ 17C5:0706
cs=0x17c5;eip=0x000708; 	J(JMP(loc_2694b));	// 83796                  jmp     short loc_2694B ;~ 17C5:0708
loc_2693b:
	// 4855 
cs=0x17c5;eip=0x00070b; 	T(CMP(byte_48be4, 0));	// 83802                  cmp     byte_48BE4, 0 ;~ 17C5:070B
cs=0x17c5;eip=0x000710; 	J(JNZ(locret_2694a));	// 83803                  jnz     short locret_2694A ;~ 17C5:0710
cs=0x17c5;eip=0x000712; 	X(POP(bp));	// 83804                  pop     bp ;~ 17C5:0712
cs=0x17c5;eip=0x000713; 	X(POP(ds));	// 83805                  pop     ds ;~ 17C5:0713
cs=0x17c5;eip=0x000714; 	X(POP(es));	// 83806                  pop     es ;~ 17C5:0714
cs=0x17c5;eip=0x000715; 	X(POP(si));	// 83807                  pop     si ;~ 17C5:0715
cs=0x17c5;eip=0x000716; 	X(POP(di));	// 83808                  pop     di ;~ 17C5:0716
cs=0x17c5;eip=0x000717; 	T(sp = bp;);	// 83809                  mov     sp, bp ;~ 17C5:0717
cs=0x17c5;eip=0x000719; 	X(POP(bp));	// 83810                  pop     bp ;~ 17C5:0719
locret_2694a:
	// 4856 
cs=0x17c5;eip=0x00071a; 	J(RETN(0));	// 83813                  retn ;~ 17C5:071A
loc_2694b:
	// 4857 
cs=0x17c5;eip=0x00071b; 	T(ax = 0x4C00;);	// 83817                  mov     ax, 4C00h ;~ 17C5:071B
cs=0x17c5;eip=0x00071e; 	S(_INT(0x21));	// 83818                  int     21h             ; DOS - 2+ - QUIT WITH EXIT CODE (EXIT) ;~ 17C5:071E
sub_26950:
	// 83825 
#undef var_a
#define var_a -0x0A
	// 83827 var_A           = word ptr -0Ah ;~ 17C5:0720
#undef var_2
#define var_2 -2
	// 83828 var_2           = word ptr -2 ;~ 17C5:0720
cs=0x17c5;eip=0x000720; 	X(PUSH(bp));	// 83830                  push    bp ;~ 17C5:0720
cs=0x17c5;eip=0x000721; 	T(bp = sp;);	// 83831                  mov     bp, sp ;~ 17C5:0721
cs=0x17c5;eip=0x000723; 	T(SUB(sp, 0x0C));	// 83832                  sub     sp, 0Ch ;~ 17C5:0723
cs=0x17c5;eip=0x000726; 	X(PUSH(di));	// 83833                  push    di ;~ 17C5:0726
cs=0x17c5;eip=0x000727; 	X(PUSH(si));	// 83834                  push    si ;~ 17C5:0727
cs=0x17c5;eip=0x000728; 	T(ax = word_51a0a;);	// 83835                  mov     ax, ds:word_51A0A ;~ 17C5:0728
cs=0x17c5;eip=0x00072b; 	T(dx = word_51a0c;);	// 83836                  mov     dx, ds:word_51A0C ;~ 17C5:072B
cs=0x17c5;eip=0x00072f; 	T(ADD(ax, 0x10));	// 83837                  add     ax, 10h ;~ 17C5:072F
cs=0x17c5;eip=0x000732; 	T(ADC(dx, 0));	// 83838                  adc     dx, 0 ;~ 17C5:0732
cs=0x17c5;eip=0x000735; 	T(cl = 5;);	// 83839                  mov     cl, 5 ;~ 17C5:0735
loc_26967:
	// 4858 
cs=0x17c5;eip=0x000737; 	T(SAR(dx, 1));	// 83842                  sar     dx, 1 ;~ 17C5:0737
cs=0x17c5;eip=0x000739; 	T(RCR(ax, 1));	// 83843                  rcr     ax, 1 ;~ 17C5:0739
cs=0x17c5;eip=0x00073b; 	T(DEC(cl));	// 83844                  dec     cl ;~ 17C5:073B
cs=0x17c5;eip=0x00073d; 	J(JZ(loc_26971));	// 83845                  jz      short loc_26971 ;~ 17C5:073D
cs=0x17c5;eip=0x00073f; 	J(JMP(loc_26967));	// 83846                  jmp     short loc_26967 ;~ 17C5:073F
loc_26971:
	// 4859 
cs=0x17c5;eip=0x000741; 	X(word_520f0 = ax;);	// 83850                  mov     ds:word_520F0, ax ;~ 17C5:0741
cs=0x17c5;eip=0x000744; 	T(ax = word_51a28;);	// 83851                  mov     ax, ds:word_51A28 ;~ 17C5:0744
cs=0x17c5;eip=0x000747; 	T(dx = word_51a2a;);	// 83852                  mov     dx, ds:word_51A2A ;~ 17C5:0747
cs=0x17c5;eip=0x00074b; 	T(ADD(ax, 0x10));	// 83853                  add     ax, 10h ;~ 17C5:074B
cs=0x17c5;eip=0x00074e; 	T(ADC(dx, 0));	// 83854                  adc     dx, 0 ;~ 17C5:074E
cs=0x17c5;eip=0x000751; 	T(cl = 5;);	// 83855                  mov     cl, 5 ;~ 17C5:0751
loc_26983:
	// 4860 
cs=0x17c5;eip=0x000753; 	T(SAR(dx, 1));	// 83858                  sar     dx, 1 ;~ 17C5:0753
cs=0x17c5;eip=0x000755; 	T(RCR(ax, 1));	// 83859                  rcr     ax, 1 ;~ 17C5:0755
cs=0x17c5;eip=0x000757; 	T(DEC(cl));	// 83860                  dec     cl ;~ 17C5:0757
cs=0x17c5;eip=0x000759; 	J(JZ(loc_2698d));	// 83861                  jz      short loc_2698D ;~ 17C5:0759
cs=0x17c5;eip=0x00075b; 	J(JMP(loc_26983));	// 83862                  jmp     short loc_26983 ;~ 17C5:075B
loc_2698d:
	// 4861 
cs=0x17c5;eip=0x00075d; 	T(SUB(ax, 0x8000));	// 83866                  sub     ax, 8000h ;~ 17C5:075D
cs=0x17c5;eip=0x000760; 	T(NEG(ax));	// 83867                  neg     ax ;~ 17C5:0760
cs=0x17c5;eip=0x000762; 	X(word_52100 = ax;);	// 83868                  mov     ds:word_52100, ax ;~ 17C5:0762
cs=0x17c5;eip=0x000765; 	T(CMP(word_520fc, 1));	// 83869                  cmp     ds:word_520FC, 1 ;~ 17C5:0765
cs=0x17c5;eip=0x00076a; 	J(JZ(loc_2699f));	// 83870                  jz      short loc_2699F ;~ 17C5:076A
cs=0x17c5;eip=0x00076c; 	J(return _group15(m2c::kloc_26cc4, _state););	// 83872                  jmp     loc_26CC4 ;~ 17C5:076C
loc_2699f:
	// 4862 
cs=0x17c5;eip=0x00076f; 	X(word_4f42e = 0;);	// 83877                  mov     ds:word_4F42E, 0 ;~ 17C5:076F
cs=0x17c5;eip=0x000775; 	T(LES(bx, dword_4f220));	// 83878                  les     bx, ds:dword_4F220 ;~ 17C5:0775
cs=0x17c5;eip=0x000779; 	T(CMP(*(dw*)(raddr(es,bx+0x3E)), 4));	// 83879                  cmp     word ptr es:[bx+3Eh], 4 ;~ 17C5:0779
cs=0x17c5;eip=0x00077e; 	J(JNZ(loc_269ca));	// 83880                  jnz     short loc_269CA ;~ 17C5:077E
cs=0x17c5;eip=0x000780; 	X(MOV(*(dw*)(raddr(es,bx+0x3E)), 2));	// 83881                  mov     word ptr es:[bx+3Eh], 2 ;~ 17C5:0780
cs=0x17c5;eip=0x000786; 	X(word_4991a = 1;);	// 83882                  mov     word_4991A, 1 ;~ 17C5:0786
cs=0x17c5;eip=0x00078c; 	X(OR(*(db*)(((db*)&word_4f42e)+1), 0x10));	// 83883                  or      byte ptr ds:word_4F42E+1, 10h ;~ 17C5:078C
cs=0x17c5;eip=0x000791; 	T(LES(bx, dword_528d6));	// 83884                  les     bx, ds:dword_528D6 ;~ 17C5:0791
cs=0x17c5;eip=0x000795; 	X(OR(*(raddr(es,bx+0x30)), 1));	// 83886                  or      byte ptr es:[bx+30h], 1 ;~ 17C5:0795
loc_269ca:
	// 4863 
cs=0x17c5;eip=0x00079a; 	T(LES(bx, dword_528d6));	// 83890                  les     bx, ds:dword_528D6 ;~ 17C5:079A
cs=0x17c5;eip=0x00079e; 	T(MOV(al, *(raddr(es,bx+0x0D))));	// 83891                  mov     al, es:[bx+0Dh] ;~ 17C5:079E
cs=0x17c5;eip=0x0007a2; 	T(SUB(ah, ah));	// 83892                  sub     ah, ah ;~ 17C5:07A2
cs=0x17c5;eip=0x0007a4; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 83893                  mov     [bp+var_A], ax ;~ 17C5:07A4
cs=0x17c5;eip=0x0007a7; 	T(CMP(ax, 0x69));	// 83894                  cmp     ax, 69h ; 'i' ;~ 17C5:07A7
cs=0x17c5;eip=0x0007aa; 	J(JZ(loc_269e1));	// 83895                  jz      short loc_269E1 ;~ 17C5:07AA
cs=0x17c5;eip=0x0007ac; 	T(CMP(ax, 0x49));	// 83896                  cmp     ax, 49h ; 'I' ;~ 17C5:07AC
cs=0x17c5;eip=0x0007af; 	J(JNZ(loc_269e7));	// 83897                  jnz     short loc_269E7 ;~ 17C5:07AF
loc_269e1:
	// 4864 
cs=0x17c5;eip=0x0007b1; 	X(word_4e83a = 1;);	// 83900                  mov     ds:word_4E83A, 1 ;~ 17C5:07B1
loc_269e7:
	// 4865 
cs=0x17c5;eip=0x0007b7; 	J(CALL(sub_2816e,0));	// 83903                  call    sub_2816E ;~ 17C5:07B7
cs=0x17c5;eip=0x0007ba; 	X(word_49920 = 0;);	// 83905                  mov     word_49920, 0 ;~ 17C5:07BA
cs=0x17c5;eip=0x0007c0; 	X(word_49928 = 1;);	// 83906                  mov     word_49928, 1 ;~ 17C5:07C0
cs=0x17c5;eip=0x0007c6; 	T(ax = 0x0FFFF;);	// 83907                  mov     ax, 0FFFFh ;~ 17C5:07C6
cs=0x17c5;eip=0x0007c9; 	X(word_49924 = ax;);	// 83908                  mov     word_49924, ax ;~ 17C5:07C9
cs=0x17c5;eip=0x0007cc; 	X(word_49922 = ax;);	// 83909                  mov     word_49922, ax ;~ 17C5:07CC
cs=0x17c5;eip=0x0007cf; 	T(SUB(ax, ax));	// 83910                  sub     ax, ax ;~ 17C5:07CF
cs=0x17c5;eip=0x0007d1; 	X(word_48c64 = ax;);	// 83911                  mov     word_48C64, ax ;~ 17C5:07D1
cs=0x17c5;eip=0x0007d4; 	X(word_48c62 = ax;);	// 83912                  mov     word_48C62, ax ;~ 17C5:07D4
cs=0x17c5;eip=0x0007d7; 	X(word_492e6 = ax;);	// 83913                  mov     word_492E6, ax ;~ 17C5:07D7
cs=0x17c5;eip=0x0007da; 	X(word_492e2 = ax;);	// 83914                  mov     word_492E2, ax ;~ 17C5:07DA
cs=0x17c5;eip=0x0007dd; 	X(word_492c6 = ax;);	// 83915                  mov     word_492C6, ax ;~ 17C5:07DD
cs=0x17c5;eip=0x0007e0; 	X(word_4e834 = ax;);	// 83916                  mov     ds:word_4E834, ax ;~ 17C5:07E0
cs=0x17c5;eip=0x0007e3; 	T(SUB(al, al));	// 83917                  sub     al, al ;~ 17C5:07E3
cs=0x17c5;eip=0x0007e5; 	X(byte_4de54 = al;);	// 83918                  mov     ds:byte_4DE54, al ;~ 17C5:07E5
cs=0x17c5;eip=0x0007e8; 	T(CBW);	// 83919                  cbw ;~ 17C5:07E8
cs=0x17c5;eip=0x0007e9; 	X(word_52244 = ax;);	// 83920                  mov     ds:word_52244, ax ;~ 17C5:07E9
cs=0x17c5;eip=0x0007ec; 	X(word_521d0 = ax;);	// 83921                  mov     ds:word_521D0, ax ;~ 17C5:07EC
cs=0x17c5;eip=0x0007ef; 	X(word_52104 = ax;);	// 83922                  mov     ds:word_52104, ax ;~ 17C5:07EF
cs=0x17c5;eip=0x0007f2; 	X(word_5239a = ax;);	// 83923                  mov     ds:word_5239A, ax ;~ 17C5:07F2
cs=0x17c5;eip=0x0007f5; 	T(SUB(ax, ax));	// 83924                  sub     ax, ax ;~ 17C5:07F5
cs=0x17c5;eip=0x0007f7; 	X(word_51806 = ax;);	// 83925                  mov     ds:word_51806, ax ;~ 17C5:07F7
cs=0x17c5;eip=0x0007fa; 	X(word_51710 = ax;);	// 83926                  mov     ds:word_51710, ax ;~ 17C5:07FA
cs=0x17c5;eip=0x0007fd; 	X(word_51708 = ax;);	// 83927                  mov     ds:word_51708, ax ;~ 17C5:07FD
cs=0x17c5;eip=0x000800; 	T(ax = 0x0FFFF;);	// 83928                  mov     ax, 0FFFFh ;~ 17C5:0800
cs=0x17c5;eip=0x000803; 	X(word_49926 = ax;);	// 83929                  mov     word_49926, ax ;~ 17C5:0803
cs=0x17c5;eip=0x000806; 	X(word_49930 = ax;);	// 83930                  mov     word_49930, ax ;~ 17C5:0806
cs=0x17c5;eip=0x000809; 	X(*(word_492c8) = 0x2710;);	// 83931                  mov     word_492C8, 2710h ;~ 17C5:0809
cs=0x17c5;eip=0x00080f; 	X(word_521c0 = 0;);	// 83932                  mov     ds:word_521C0, 0 ;~ 17C5:080F
cs=0x17c5;eip=0x000815; 	X(word_48c62 = 1;);	// 83933                  mov     word_48C62, 1 ;~ 17C5:0815
cs=0x17c5;eip=0x00081b; 	X(word_5268c = 1;);	// 83934                  mov     ds:word_5268C, 1 ;~ 17C5:081B
cs=0x17c5;eip=0x000821; 	T(SUB(ax, ax));	// 83935                  sub     ax, ax ;~ 17C5:0821
cs=0x17c5;eip=0x000823; 	X(PUSH(ax));	// 83936                  push    ax ;~ 17C5:0823
cs=0x17c5;eip=0x000824; 	J(CALL(sub_27cb8,0));	// 83937                  call    sub_27CB8 ;~ 17C5:0824
cs=0x17c5;eip=0x000827; 	T(ADD(sp, 2));	// 83938                  add     sp, 2 ;~ 17C5:0827
cs=0x17c5;eip=0x00082a; 	X(word_4db3a = 0x0C;);	// 83939                  mov     ds:word_4DB3A, 0Ch ;~ 17C5:082A
cs=0x17c5;eip=0x000830; 	X(word_492f4 = 4;);	// 83940                  mov     word_492F4, 4 ;~ 17C5:0830
cs=0x17c5;eip=0x000836; 	J(CALL(sub_33cde,0));	// 83941                  call    sub_33CDE ;~ 17C5:0836
cs=0x17c5;eip=0x000839; 	X(word_4e61a = 1;);	// 83942                  mov     ds:word_4E61A, 1 ;~ 17C5:0839
cs=0x17c5;eip=0x00083f; 	X(word_4e61c = 1;);	// 83943                  mov     ds:word_4E61C, 1 ;~ 17C5:083F
cs=0x17c5;eip=0x000845; 	T(LES(bx, dword_4f220));	// 83944                  les     bx, ds:dword_4F220 ;~ 17C5:0845
cs=0x17c5;eip=0x000849; 	T(CMP(*(dw*)(raddr(es,bx+0x38)), 6));	// 83946                  cmp     word ptr es:[bx+38h], 6 ;~ 17C5:0849
cs=0x17c5;eip=0x00084e; 	J(JNZ(loc_26a85));	// 83947                  jnz     short loc_26A85 ;~ 17C5:084E
cs=0x17c5;eip=0x000850; 	T(ax = 1;);	// 83948                  mov     ax, 1 ;~ 17C5:0850
cs=0x17c5;eip=0x000853; 	J(JMP(loc_26a94));	// 83949                  jmp     short loc_26A94 ;~ 17C5:0853
loc_26a85:
	// 4866 
cs=0x17c5;eip=0x000855; 	T(TEST(*(raddr(es,bx+0x38)), 1));	// 83953                  test    byte ptr es:[bx+38h], 1 ;~ 17C5:0855
cs=0x17c5;eip=0x00085a; 	J(JZ(loc_26a91));	// 83954                  jz      short loc_26A91 ;~ 17C5:085A
cs=0x17c5;eip=0x00085c; 	T(ax = 1;);	// 83955                  mov     ax, 1 ;~ 17C5:085C
cs=0x17c5;eip=0x00085f; 	J(JMP(loc_26a94));	// 83956                  jmp     short loc_26A94 ;~ 17C5:085F
loc_26a91:
	// 4867 
cs=0x17c5;eip=0x000861; 	T(ax = 0x0FFFF;);	// 83960                  mov     ax, 0FFFFh ;~ 17C5:0861
loc_26a94:
	// 4868 
cs=0x17c5;eip=0x000864; 	X(word_511d8 = ax;);	// 83964                  mov     ds:word_511D8, ax ;~ 17C5:0864
cs=0x17c5;eip=0x000867; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 83965                  mov     [bp+var_2], ax ;~ 17C5:0867
cs=0x17c5;eip=0x00086a; 	T(bx = word_51378;);	// 83966                  mov     bx, ds:word_51378 ;~ 17C5:086A
cs=0x17c5;eip=0x00086e; 	T(cl = 4;);	// 83967                  mov     cl, 4 ;~ 17C5:086E
cs=0x17c5;eip=0x000870; 	T(SHL(bx, cl));	// 83968                  shl     bx, cl ;~ 17C5:0870
cs=0x17c5;eip=0x000872; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 83969                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:0872
cs=0x17c5;eip=0x000878; 	J(JZ(loc_26abe));	// 83970                  jz      short loc_26ABE ;~ 17C5:0878
cs=0x17c5;eip=0x00087a; 	T(cl = 7;);	// 83971                  mov     cl, 7 ;~ 17C5:087A
cs=0x17c5;eip=0x00087c; 	T(SHL(ax, cl));	// 83972                  shl     ax, cl ;~ 17C5:087C
cs=0x17c5;eip=0x00087e; 	T(CWD);	// 83973                  cwd ;~ 17C5:087E
cs=0x17c5;eip=0x00087f; 	X(SUB(word_51a0a, ax));	// 83974                  sub     ds:word_51A0A, ax ;~ 17C5:087F
cs=0x17c5;eip=0x000883; 	X(SBB(word_51a0c, dx));	// 83975                  sbb     ds:word_51A0C, dx ;~ 17C5:0883
cs=0x17c5;eip=0x000887; 	X(OR(*(db*)(&word_4f42e), 8));	// 83976                  or      byte ptr ds:word_4F42E, 8 ;~ 17C5:0887
__unk_26abc:
	// 4869 
cs=0x17c5;eip=0x00088c; 	J(JMP(loc_26ace));	// 83979                  jmp     short loc_26ACE ;~ 17C5:088C
loc_26abe:
	// 4870 
cs=0x17c5;eip=0x00088e; 	T(ax = 0x708;);	// 83983                  mov     ax, 708h ;~ 17C5:088E
cs=0x17c5;eip=0x000891; 	X(IMUL1_2(word_511d8));	// 83984                  imul    ds:word_511D8 ;~ 17C5:0891
cs=0x17c5;eip=0x000895; 	T(CWD);	// 83985                  cwd ;~ 17C5:0895
cs=0x17c5;eip=0x000896; 	X(SUB(word_51a28, ax));	// 83986                  sub     ds:word_51A28, ax ;~ 17C5:0896
cs=0x17c5;eip=0x00089a; 	X(SBB(word_51a2a, dx));	// 83987                  sbb     ds:word_51A2A, dx ;~ 17C5:089A
loc_26ace:
	// 4871 
cs=0x17c5;eip=0x00089e; 	J(CALL(sub_27b26,0));	// 83990                  call    sub_27B26 ;~ 17C5:089E
cs=0x17c5;eip=0x0008a1; 	T(SUB(ax, ax));	// 83991                  sub     ax, ax ;~ 17C5:08A1
cs=0x17c5;eip=0x0008a3; 	X(PUSH(ax));	// 83992                  push    ax ;~ 17C5:08A3
cs=0x17c5;eip=0x0008a4; 	T(ax = 8;);	// 83993                  mov     ax, 8 ;~ 17C5:08A4
cs=0x17c5;eip=0x0008a7; 	X(PUSH(ax));	// 83994                  push    ax ;~ 17C5:08A7
cs=0x17c5;eip=0x0008a8; 	J(CALL(sub_27f40,0));	// 83995                  call    sub_27F40 ;~ 17C5:08A8
cs=0x17c5;eip=0x0008ab; 	T(ADD(sp, 4));	// 83996                  add     sp, 4 ;~ 17C5:08AB
cs=0x17c5;eip=0x0008ae; 	J(CALL(seg2623_9595_proc,m2c::kloc_2f7c5));	// 83997                  call    loc_2F7C5 ;~ 17C5:08AE
cs=0x17c5;eip=0x0008b1; 	T(ax = 0x0A;);	// 83998                  mov     ax, 0Ah ;~ 17C5:08B1
cs=0x17c5;eip=0x0008b4; 	X(PUSH(ax));	// 83999                  push    ax ;~ 17C5:08B4
cs=0x17c5;eip=0x0008b5; 	T(ax = 3;);	// 84000                  mov     ax, 3 ;~ 17C5:08B5
cs=0x17c5;eip=0x0008b8; 	X(PUSH(ax));	// 84001                  push    ax ;~ 17C5:08B8
cs=0x17c5;eip=0x0008b9; 	J(CALL(sub_300e6,0));	// 84002                  call    sub_300E6 ;~ 17C5:08B9
cs=0x17c5;eip=0x0008bc; 	T(ADD(sp, 4));	// 84003                  add     sp, 4 ;~ 17C5:08BC
cs=0x17c5;eip=0x0008bf; 	T(ax = 0x13;);	// 84004                  mov     ax, 13h ;~ 17C5:08BF
cs=0x17c5;eip=0x0008c2; 	X(PUSH(ax));	// 84005                  push    ax ;~ 17C5:08C2
cs=0x17c5;eip=0x0008c3; 	J(CALL(sub_2f700,0));	// 84006                  call    sub_2F700 ;~ 17C5:08C3
cs=0x17c5;eip=0x0008c6; 	T(ADD(sp, 2));	// 84008                  add     sp, 2 ;~ 17C5:08C6
cs=0x17c5;eip=0x0008c9; 	T(ax = 0x0FFFF;);	// 84009                  mov     ax, 0FFFFh ;~ 17C5:08C9
cs=0x17c5;eip=0x0008cc; 	X(word_49922 = ax;);	// 84010                  mov     word_49922, ax ;~ 17C5:08CC
cs=0x17c5;eip=0x0008cf; 	X(word_49924 = ax;);	// 84011                  mov     word_49924, ax ;~ 17C5:08CF
cs=0x17c5;eip=0x0008d2; 	X(word_492ea = 2;);	// 84012                  mov     word_492EA, 2 ;~ 17C5:08D2
cs=0x17c5;eip=0x0008d8; 	T(LES(bx, dword_4f220));	// 84013                  les     bx, ds:dword_4F220 ;~ 17C5:08D8
cs=0x17c5;eip=0x0008dc; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x3E))));	// 84015                  mov     ax, es:[bx+3Eh] ;~ 17C5:08DC
cs=0x17c5;eip=0x0008e0; 	X(word_492e8 = ax;);	// 84016                  mov     word_492E8, ax ;~ 17C5:08E0
cs=0x17c5;eip=0x0008e3; 	X(MOV(*(dw*)(raddr(es,bx+0x40)), 1));	// 84017                  mov     word ptr es:[bx+40h], 1 ;~ 17C5:08E3
cs=0x17c5;eip=0x0008e9; 	T(LES(bx, dword_528d6));	// 84018                  les     bx, ds:dword_528D6 ;~ 17C5:08E9
cs=0x17c5;eip=0x0008ed; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x32))));	// 84019                  mov     ax, es:[bx+32h] ;~ 17C5:08ED
cs=0x17c5;eip=0x0008f1; 	X(word_4f20c = ax;);	// 84020                  mov     ds:word_4F20C, ax ;~ 17C5:08F1
cs=0x17c5;eip=0x0008f4; 	J(CALL(sub_33d5b,0));	// 84021                  call    sub_33D5B ;~ 17C5:08F4
cs=0x17c5;eip=0x0008f7; 	T(LES(bx, dword_528d6));	// 84022                  les     bx, ds:dword_528D6 ;~ 17C5:08F7
cs=0x17c5;eip=0x0008fb; 	X(MOV(*(dw*)(raddr(es,bx+0x26)), 1));	// 84023                  mov     word ptr es:[bx+26h], 1 ;~ 17C5:08FB
cs=0x17c5;eip=0x000901; 	X(word_492e4 = 0x3E8;);	// 84024                  mov     word_492E4, 3E8h ;~ 17C5:0901
cs=0x17c5;eip=0x000907; 	T(CMP(word_492e8, 0));	// 84025                  cmp     word_492E8, 0 ;~ 17C5:0907
cs=0x17c5;eip=0x00090c; 	J(JZ(loc_26b48));	// 84026                  jz      short loc_26B48 ;~ 17C5:090C
cs=0x17c5;eip=0x00090e; 	T(CMP(word_4991a, 0));	// 84027                  cmp     word_4991A, 0 ;~ 17C5:090E
cs=0x17c5;eip=0x000913; 	J(JNZ(loc_26b48));	// 84028                  jnz     short loc_26B48 ;~ 17C5:0913
cs=0x17c5;eip=0x000915; 	J(return _group15(m2c::kloc_26c44, _state););	// 84029                  jmp     loc_26C44 ;~ 17C5:0915
loc_26b48:
	// 4872 
cs=0x17c5;eip=0x000918; 	T(ax = word_52100;);	// 84034                  mov     ax, ds:word_52100 ;~ 17C5:0918
cs=0x17c5;eip=0x00091b; 	T(SUB(ax, *(word_48c58)));	// 84035                  sub     ax, word_48C58 ;~ 17C5:091B
cs=0x17c5;eip=0x00091f; 	T(CMP(ax, 0x8000));	// 84036                  cmp     ax, 8000h ;~ 17C5:091F
cs=0x17c5;eip=0x000922; 	J(JNC(loc_26b59));	// 84037                  jnb     short loc_26B59 ;~ 17C5:0922
cs=0x17c5;eip=0x000924; 	T(ax = 1;);	// 84038                  mov     ax, 1 ;~ 17C5:0924
cs=0x17c5;eip=0x000927; 	J(JMP(loc_26b5c));	// 84039                  jmp     short loc_26B5C ;~ 17C5:0927
loc_26b59:
	// 4873 
cs=0x17c5;eip=0x000929; 	T(ax = 0x0FFFF;);	// 84043                  mov     ax, 0FFFFh ;~ 17C5:0929
loc_26b5c:
	// 4874 
cs=0x17c5;eip=0x00092c; 	X(word_511d8 = ax;);	// 84046                  mov     ds:word_511D8, ax ;~ 17C5:092C
cs=0x17c5;eip=0x00092f; 	X(word_4e300 = 0x7D0;);	// 84047                  mov     ds:word_4E300, 7D0h ;~ 17C5:092F
cs=0x17c5;eip=0x000935; 	X(word_50b74 = 0x1FA4;);	// 84048                  mov     ds:word_50B74, 1FA4h ;~ 17C5:0935
cs=0x17c5;eip=0x00093b; 	X(word_4e310 = 0x64;);	// 84049                  mov     ds:word_4E310, 64h ; 'd' ;~ 17C5:093B
cs=0x17c5;eip=0x000941; 	J(CALL(sub_2c20b,0));	// 84050                  call    sub_2C20B ;~ 17C5:0941
cs=0x17c5;eip=0x000944; 	X(OR(*(db*)(&word_4f42e), 1));	// 84052                  or      byte ptr ds:word_4F42E, 1 ;~ 17C5:0944
cs=0x17c5;eip=0x000949; 	X(AND(*(db*)(&word_4f42e), 0x0F7));	// 84053                  and     byte ptr ds:word_4F42E, 0F7h ;~ 17C5:0949
cs=0x17c5;eip=0x00094e; 	T(LES(bx, dword_4f220));	// 84054                  les     bx, ds:dword_4F220 ;~ 17C5:094E
cs=0x17c5;eip=0x000952; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x32))));	// 84056                  mov     ax, es:[bx+32h] ;~ 17C5:0952
cs=0x17c5;eip=0x000956; 	T(OR(ax, *(dw*)(raddr(es,bx+0x34))));	// 84057                  or      ax, es:[bx+34h] ;~ 17C5:0956
cs=0x17c5;eip=0x00095a; 	J(JZ(loc_26b8f));	// 84058                  jz      short loc_26B8F ;~ 17C5:095A
cs=0x17c5;eip=0x00095c; 	J(return _group15(m2c::kloc_26c44, _state););	// 84059                  jmp     loc_26C44 ;~ 17C5:095C
loc_26b8f:
	// 4875 
cs=0x17c5;eip=0x00095f; 	T(CMP(*(dw*)(raddr(es,bx+0x38)), 6));	// 84063                  cmp     word ptr es:[bx+38h], 6 ;~ 17C5:095F
cs=0x17c5;eip=0x000964; 	J(JNZ(loc_26b99));	// 84064                  jnz     short loc_26B99 ;~ 17C5:0964
cs=0x17c5;eip=0x000966; 	J(return _group15(m2c::kloc_26c44, _state););	// 84065                  jmp     loc_26C44 ;~ 17C5:0966
loc_26b99:
	// 4876 
cs=0x17c5;eip=0x000969; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), 0));	// 84069                  mov     [bp+var_A], 0 ;~ 17C5:0969
cs=0x17c5;eip=0x00096e; 	J(return _group15(m2c::kloc_26ba3, _state););	// 84070                  jmp     short loc_26BA3 ;~ 17C5:096E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::k__unk_26abc: 	goto __unk_26abc;
        case m2c::kloc_26929: 	goto loc_26929;
        case m2c::kloc_2693b: 	goto loc_2693b;
        case m2c::kloc_2694b: 	goto loc_2694b;
        case m2c::kloc_26967: 	goto loc_26967;
        case m2c::kloc_26971: 	goto loc_26971;
        case m2c::kloc_26983: 	goto loc_26983;
        case m2c::kloc_2698d: 	goto loc_2698d;
        case m2c::kloc_2699f: 	goto loc_2699f;
        case m2c::kloc_269ca: 	goto loc_269ca;
        case m2c::kloc_269e1: 	goto loc_269e1;
        case m2c::kloc_269e7: 	goto loc_269e7;
        case m2c::kloc_26a85: 	goto loc_26a85;
        case m2c::kloc_26a91: 	goto loc_26a91;
        case m2c::kloc_26a94: 	goto loc_26a94;
        case m2c::kloc_26abe: 	goto loc_26abe;
        case m2c::kloc_26ace: 	goto loc_26ace;
        case m2c::kloc_26b48: 	goto loc_26b48;
        case m2c::kloc_26b59: 	goto loc_26b59;
        case m2c::kloc_26b5c: 	goto loc_26b5c;
        case m2c::kloc_26b8f: 	goto loc_26b8f;
        case m2c::kloc_26b99: 	goto loc_26b99;
        case m2c::klocret_2694a: 	goto locret_2694a;
        case m2c::kret_17c5_6f4: 	goto ret_17c5_6f4;
        case m2c::kseg2623_6e1_proc: 	goto seg2623_6e1_proc;
        case m2c::ksub_26950: 	goto sub_26950;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group15(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group15:
    _begin:
sub_26ba0:
	// 84077 
cs=0x17c5;eip=0x000970; 	X(INC(*(dw*)(raddr(ss,bp-0x0A))));	// 84078                  inc     word ptr [bp-0Ah] ;~ 17C5:0970
loc_26ba3:
	// 4877 
cs=0x17c5;eip=0x000973; 	T(ax = word_52276;);	// 84081                  mov     ax, ds:word_52276 ;~ 17C5:0973
cs=0x17c5;eip=0x000976; 	T(SUB(ax, 4));	// 84082                  sub     ax, 4 ;~ 17C5:0976
cs=0x17c5;eip=0x000979; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 84083                  cmp     [bp-0Ah], ax ;~ 17C5:0979
cs=0x17c5;eip=0x00097c; 	J(JL(loc_26bb1));	// 84084                  jl      short loc_26BB1 ;~ 17C5:097C
cs=0x17c5;eip=0x00097e; 	J(JMP(loc_26c44));	// 84085                  jmp     loc_26C44 ;~ 17C5:097E
loc_26bb1:
	// 4878 
cs=0x17c5;eip=0x000981; 	T(TEST(*(raddr(ss,bp-0x0A)), 1));	// 84089                  test    byte ptr [bp-0Ah], 1 ;~ 17C5:0981
cs=0x17c5;eip=0x000985; 	J(JZ(loc_26bba));	// 84090                  jz      short loc_26BBA ;~ 17C5:0985
cs=0x17c5;eip=0x000987; 	J(JMP(loc_26c41));	// 84091                  jmp     loc_26C41 ;~ 17C5:0987
loc_26bba:
	// 4879 
cs=0x17c5;eip=0x00098a; 	T(ax = 0x24;);	// 84095                  mov     ax, 24h ; '$' ;~ 17C5:098A
cs=0x17c5;eip=0x00098d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0A))));	// 84096                  imul    word ptr [bp-0Ah] ;~ 17C5:098D
cs=0x17c5;eip=0x000990; 	T(si = ax;);	// 84097                  mov     si, ax ;~ 17C5:0990
cs=0x17c5;eip=0x000992; 	X(OR(*(raddr(ds,si-0x7696)), 2));	// 84098                  or      byte ptr [si-7696h], 2 ;~ 17C5:0992
cs=0x17c5;eip=0x000997; 	X(MOV(*(dw*)(raddr(ds,si-0x76A8)), 0x898));	// 84099                  mov     word ptr [si-76A8h], 898h ;~ 17C5:0997
cs=0x17c5;eip=0x00099d; 	X(MOV(*(dw*)(raddr(ds,si-0x7694)), 0x12C));	// 84100                  mov     word ptr [si-7694h], 12Ch ;~ 17C5:099D
cs=0x17c5;eip=0x0009a3; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84101                  mov     ax, [bp-0Ah] ;~ 17C5:09A3
cs=0x17c5;eip=0x0009a6; 	T(cx = ax;);	// 84102                  mov     cx, ax ;~ 17C5:09A6
cs=0x17c5;eip=0x0009a8; 	T(SHL(ax, 1));	// 84103                  shl     ax, 1 ;~ 17C5:09A8
cs=0x17c5;eip=0x0009aa; 	T(ADD(ax, cx));	// 84104                  add     ax, cx ;~ 17C5:09AA
cs=0x17c5;eip=0x0009ac; 	T(SHL(ax, 1));	// 84105                  shl     ax, 1 ;~ 17C5:09AC
cs=0x17c5;eip=0x0009ae; 	T(SHL(ax, 1));	// 84106                  shl     ax, 1 ;~ 17C5:09AE
cs=0x17c5;eip=0x0009b0; 	T(ADD(ax, word_520f0));	// 84107                  add     ax, ds:word_520F0 ;~ 17C5:09B0
cs=0x17c5;eip=0x0009b4; 	T(SUB(ax, 0x24));	// 84108                  sub     ax, 24h ; '$' ;~ 17C5:09B4
cs=0x17c5;eip=0x0009b7; 	X(MOV(*(dw*)(raddr(ds,si-0x76AC)), ax));	// 84109                  mov     [si-76ACh], ax ;~ 17C5:09B7
cs=0x17c5;eip=0x0009bb; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84110                  mov     ax, [bp-0Ah] ;~ 17C5:09BB
cs=0x17c5;eip=0x0009be; 	T(cl = 5;);	// 84111                  mov     cl, 5 ;~ 17C5:09BE
cs=0x17c5;eip=0x0009c0; 	T(SHL(ax, cl));	// 84112                  shl     ax, cl ;~ 17C5:09C0
cs=0x17c5;eip=0x0009c2; 	T(ADD(ax, 0x96));	// 84113                  add     ax, 96h ;~ 17C5:09C2
cs=0x17c5;eip=0x0009c5; 	X(IMUL1_2(word_511d8));	// 84114                  imul    ds:word_511D8 ;~ 17C5:09C5
cs=0x17c5;eip=0x0009c9; 	T(cx = word_52100;);	// 84115                  mov     cx, ds:word_52100 ;~ 17C5:09C9
cs=0x17c5;eip=0x0009cd; 	T(SUB(cx, ax));	// 84116                  sub     cx, ax ;~ 17C5:09CD
cs=0x17c5;eip=0x0009cf; 	X(MOV(*(dw*)(raddr(ds,si-0x76AA)), cx));	// 84117                  mov     [si-76AAh], cx ;~ 17C5:09CF
cs=0x17c5;eip=0x0009d3; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 84118                  mov     ax, [si-76ACh] ;~ 17C5:09D3
cs=0x17c5;eip=0x0009d7; 	T(SUB(dx, dx));	// 84119                  sub     dx, dx ;~ 17C5:09D7
cs=0x17c5;eip=0x0009d9; 	T(cl = 5;);	// 84120                  mov     cl, 5 ;~ 17C5:09D9
loc_26c0b:
	// 4880 
cs=0x17c5;eip=0x0009db; 	T(SHL(ax, 1));	// 84123                  shl     ax, 1 ;~ 17C5:09DB
cs=0x17c5;eip=0x0009dd; 	T(RCL(dx, 1));	// 84124                  rcl     dx, 1 ;~ 17C5:09DD
cs=0x17c5;eip=0x0009df; 	T(DEC(cl));	// 84125                  dec     cl ;~ 17C5:09DF
cs=0x17c5;eip=0x0009e1; 	J(JZ(loc_26c15));	// 84126                  jz      short loc_26C15 ;~ 17C5:09E1
cs=0x17c5;eip=0x0009e3; 	J(JMP(loc_26c0b));	// 84127                  jmp     short loc_26C0B ;~ 17C5:09E3
loc_26c15:
	// 4881 
cs=0x17c5;eip=0x0009e5; 	X(MOV(*(dw*)(raddr(ds,si-0x76A6)), ax));	// 84131                  mov     [si-76A6h], ax ;~ 17C5:09E5
cs=0x17c5;eip=0x0009e9; 	X(MOV(*(dw*)(raddr(ds,si-0x76A4)), dx));	// 84132                  mov     [si-76A4h], dx ;~ 17C5:09E9
cs=0x17c5;eip=0x0009ed; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 84133                  mov     ax, [si-76AAh] ;~ 17C5:09ED
cs=0x17c5;eip=0x0009f1; 	T(SUB(dx, dx));	// 84134                  sub     dx, dx ;~ 17C5:09F1
cs=0x17c5;eip=0x0009f3; 	T(cl = 5;);	// 84135                  mov     cl, 5 ;~ 17C5:09F3
loc_26c25:
	// 4882 
cs=0x17c5;eip=0x0009f5; 	T(SHL(ax, 1));	// 84138                  shl     ax, 1 ;~ 17C5:09F5
cs=0x17c5;eip=0x0009f7; 	T(RCL(dx, 1));	// 84139                  rcl     dx, 1 ;~ 17C5:09F7
cs=0x17c5;eip=0x0009f9; 	T(DEC(cl));	// 84140                  dec     cl ;~ 17C5:09F9
cs=0x17c5;eip=0x0009fb; 	J(JZ(loc_26c2f));	// 84141                  jz      short loc_26C2F ;~ 17C5:09FB
cs=0x17c5;eip=0x0009fd; 	J(JMP(loc_26c25));	// 84142                  jmp     short loc_26C25 ;~ 17C5:09FD
loc_26c2f:
	// 4883 
cs=0x17c5;eip=0x0009ff; 	X(MOV(*(dw*)(raddr(ds,si-0x76A2)), ax));	// 84146                  mov     [si-76A2h], ax ;~ 17C5:09FF
cs=0x17c5;eip=0x000a03; 	X(MOV(*(dw*)(raddr(ds,si-0x76A0)), dx));	// 84147                  mov     [si-76A0h], dx ;~ 17C5:0A03
cs=0x17c5;eip=0x000a07; 	T(ax = word_4e2f8;);	// 84148                  mov     ax, ds:word_4E2F8 ;~ 17C5:0A07
cs=0x17c5;eip=0x000a0a; 	T(ADD(ah, 0x80));	// 84149                  add     ah, 80h ;~ 17C5:0A0A
cs=0x17c5;eip=0x000a0d; 	X(MOV(*(dw*)(raddr(ds,si-0x769E)), ax));	// 84150                  mov     [si-769Eh], ax ;~ 17C5:0A0D
loc_26c41:
	// 4884 
cs=0x17c5;eip=0x000a11; 	J(JMP(sub_26ba0));	// 84153                  jmp     sub_26BA0 ;~ 17C5:0A11
loc_26c44:
	// 4885 
cs=0x17c5;eip=0x000a14; 	T(LES(bx, dword_4f220));	// 84158                  les     bx, ds:dword_4F220 ;~ 17C5:0A14
cs=0x17c5;eip=0x000a18; 	T(CMP(*(dw*)(raddr(es,bx+0x38)), 6));	// 84159                  cmp     word ptr es:[bx+38h], 6 ;~ 17C5:0A18
cs=0x17c5;eip=0x000a1d; 	J(JZ(loc_26caa));	// 84160                  jz      short loc_26CAA ;~ 17C5:0A1D
cs=0x17c5;eip=0x000a1f; 	X(OR(byte_5146e, 2));	// 84161                  or      ds:byte_5146E, 2 ;~ 17C5:0A1F
cs=0x17c5;eip=0x000a24; 	X(word_5145c = 0x834;);	// 84162                  mov     ds:word_5145C, 834h ;~ 17C5:0A24
cs=0x17c5;eip=0x000a2a; 	X(word_51470 = 0x2BC;);	// 84163                  mov     ds:word_51470, 2BCh ;~ 17C5:0A2A
cs=0x17c5;eip=0x000a30; 	T(ax = word_520f0;);	// 84164                  mov     ax, ds:word_520F0 ;~ 17C5:0A30
cs=0x17c5;eip=0x000a33; 	X(word_51458 = ax;);	// 84165                  mov     ds:word_51458, ax ;~ 17C5:0A33
cs=0x17c5;eip=0x000a36; 	T(ax = 0x50;);	// 84166                  mov     ax, 50h ; 'P' ;~ 17C5:0A36
cs=0x17c5;eip=0x000a39; 	X(IMUL1_2(word_511d8));	// 84167                  imul    ds:word_511D8 ;~ 17C5:0A39
cs=0x17c5;eip=0x000a3d; 	T(ADD(ax, word_52100));	// 84168                  add     ax, ds:word_52100 ;~ 17C5:0A3D
cs=0x17c5;eip=0x000a41; 	X(word_5145a = ax;);	// 84169                  mov     ds:word_5145A, ax ;~ 17C5:0A41
cs=0x17c5;eip=0x000a44; 	T(ax = word_51458;);	// 84170                  mov     ax, ds:word_51458 ;~ 17C5:0A44
cs=0x17c5;eip=0x000a47; 	T(SUB(dx, dx));	// 84171                  sub     dx, dx ;~ 17C5:0A47
cs=0x17c5;eip=0x000a49; 	T(cl = 5;);	// 84172                  mov     cl, 5 ;~ 17C5:0A49
loc_26c7b:
	// 4886 
cs=0x17c5;eip=0x000a4b; 	T(SHL(ax, 1));	// 84175                  shl     ax, 1 ;~ 17C5:0A4B
cs=0x17c5;eip=0x000a4d; 	T(RCL(dx, 1));	// 84176                  rcl     dx, 1 ;~ 17C5:0A4D
cs=0x17c5;eip=0x000a4f; 	T(DEC(cl));	// 84177                  dec     cl ;~ 17C5:0A4F
cs=0x17c5;eip=0x000a51; 	J(JZ(loc_26c85));	// 84178                  jz      short loc_26C85 ;~ 17C5:0A51
cs=0x17c5;eip=0x000a53; 	J(JMP(loc_26c7b));	// 84179                  jmp     short loc_26C7B ;~ 17C5:0A53
loc_26c85:
	// 4887 
cs=0x17c5;eip=0x000a55; 	X(word_5145e = ax;);	// 84183                  mov     ds:word_5145E, ax ;~ 17C5:0A55
sub_26c88:
	// 84191 
cs=0x17c5;eip=0x000a58; 	X(word_51460 = dx;);	// 84201                  mov     ds:word_51460, dx ;~ 17C5:0A58
cs=0x17c5;eip=0x000a5c; 	T(ax = word_5145a;);	// 84202                  mov     ax, ds:word_5145A ;~ 17C5:0A5C
cs=0x17c5;eip=0x000a5f; 	T(SUB(dx, dx));	// 84203                  sub     dx, dx ;~ 17C5:0A5F
cs=0x17c5;eip=0x000a61; 	T(cl = 5;);	// 84204                  mov     cl, 5 ;~ 17C5:0A61
loc_26c93:
	// 4888 
cs=0x17c5;eip=0x000a63; 	T(SHL(ax, 1));	// 84207                  shl     ax, 1 ;~ 17C5:0A63
cs=0x17c5;eip=0x000a65; 	T(RCL(dx, 1));	// 84208                  rcl     dx, 1 ;~ 17C5:0A65
cs=0x17c5;eip=0x000a67; 	T(DEC(cl));	// 84209                  dec     cl ;~ 17C5:0A67
cs=0x17c5;eip=0x000a69; 	J(JZ(loc_26c9d));	// 84210                  jz      short loc_26C9D ;~ 17C5:0A69
cs=0x17c5;eip=0x000a6b; 	J(JMP(loc_26c93));	// 84211                  jmp     short loc_26C93 ;~ 17C5:0A6B
loc_26c9d:
	// 4889 
cs=0x17c5;eip=0x000a6d; 	X(word_51462 = ax;);	// 84215                  mov     ds:word_51462, ax ;~ 17C5:0A6D
cs=0x17c5;eip=0x000a70; 	X(word_51464 = dx;);	// 84216                  mov     ds:word_51464, dx ;~ 17C5:0A70
cs=0x17c5;eip=0x000a74; 	T(ax = word_4e2f8;);	// 84217                  mov     ax, ds:word_4E2F8 ;~ 17C5:0A74
cs=0x17c5;eip=0x000a77; 	X(word_51466 = ax;);	// 84218                  mov     ds:word_51466, ax ;~ 17C5:0A77
loc_26caa:
	// 4890 
cs=0x17c5;eip=0x000a7a; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 84221                  mov     ax, [bp-2] ;~ 17C5:0A7A
cs=0x17c5;eip=0x000a7d; 	X(word_511d8 = ax;);	// 84222                  mov     ds:word_511D8, ax ;~ 17C5:0A7D
cs=0x17c5;eip=0x000a80; 	J(CALL(sub_27bd3,0));	// 84223                  call    sub_27BD3 ;~ 17C5:0A80
cs=0x17c5;eip=0x000a83; 	X(word_520fc = 2;);	// 84225                  mov     ds:word_520FC, 2 ;~ 17C5:0A83
cs=0x17c5;eip=0x000a89; 	J(CALLF(sub_49afc,0));	// 84226                  call    far ptr sub_49AFC ;~ 17C5:0A89
cs=0x17c5;eip=0x000a8e; 	J(CALL(sub_2c972,0));	// 84228                  call    sub_2C972 ;~ 17C5:0A8E
cs=0x17c5;eip=0x000a91; 	X(word_4f226 = ax;);	// 84229                  mov     ds:word_4F226, ax ;~ 17C5:0A91
loc_26cc4:
	// 4891 
cs=0x17c5;eip=0x000a94; 	T(ax = 0x7E00;);	// 84232                  mov     ax, 7E00h ;~ 17C5:0A94
cs=0x17c5;eip=0x000a97; 	X(PUSH(ax));	// 84233                  push    ax ;~ 17C5:0A97
cs=0x17c5;eip=0x000a98; 	T(ax = 0x100;);	// 84234                  mov     ax, 100h ;~ 17C5:0A98
cs=0x17c5;eip=0x000a9b; 	X(PUSH(ax));	// 84235                  push    ax ;~ 17C5:0A9B
cs=0x17c5;eip=0x000a9c; 	X(PUSH(word_520f0));	// 84236                  push    ds:word_520F0 ;~ 17C5:0A9C
cs=0x17c5;eip=0x000aa0; 	J(CALL(sub_33194,0));	// 84237                  call    sub_33194 ;~ 17C5:0AA0
cs=0x17c5;eip=0x000aa3; 	T(ADD(sp, 6));	// 84238                  add     sp, 6 ;~ 17C5:0AA3
cs=0x17c5;eip=0x000aa6; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 84239                  mov     [bp-6], ax ;~ 17C5:0AA6
cs=0x17c5;eip=0x000aa9; 	T(ax = word_520f0;);	// 84240                  mov     ax, ds:word_520F0 ;~ 17C5:0AA9
cs=0x17c5;eip=0x000aac; 	T(CMP(*(dw*)(raddr(ss,bp-6)), ax));	// 84241                  cmp     [bp-6], ax ;~ 17C5:0AAC
cs=0x17c5;eip=0x000aaf; 	J(JZ(loc_26cfc));	// 84242                  jz      short loc_26CFC ;~ 17C5:0AAF
cs=0x17c5;eip=0x000ab1; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 84243                  mov     ax, [bp-6] ;~ 17C5:0AB1
cs=0x17c5;eip=0x000ab4; 	X(word_520f0 = ax;);	// 84244                  mov     ds:word_520F0, ax ;~ 17C5:0AB4
cs=0x17c5;eip=0x000ab7; 	T(SUB(dx, dx));	// 84245                  sub     dx, dx ;~ 17C5:0AB7
cs=0x17c5;eip=0x000ab9; 	T(cl = 5;);	// 84246                  mov     cl, 5 ;~ 17C5:0AB9
loc_26ceb:
	// 4892 
cs=0x17c5;eip=0x000abb; 	T(SHL(ax, 1));	// 84249                  shl     ax, 1 ;~ 17C5:0ABB
cs=0x17c5;eip=0x000abd; 	T(RCL(dx, 1));	// 84250                  rcl     dx, 1 ;~ 17C5:0ABD
cs=0x17c5;eip=0x000abf; 	T(DEC(cl));	// 84251                  dec     cl ;~ 17C5:0ABF
cs=0x17c5;eip=0x000ac1; 	J(JZ(loc_26cf5));	// 84252                  jz      short loc_26CF5 ;~ 17C5:0AC1
cs=0x17c5;eip=0x000ac3; 	J(JMP(loc_26ceb));	// 84253                  jmp     short loc_26CEB ;~ 17C5:0AC3
loc_26cf5:
	// 4893 
cs=0x17c5;eip=0x000ac5; 	X(word_51a0a = ax;);	// 84257                  mov     ds:word_51A0A, ax ;~ 17C5:0AC5
cs=0x17c5;eip=0x000ac8; 	X(word_51a0c = dx;);	// 84258                  mov     ds:word_51A0C, dx ;~ 17C5:0AC8
loc_26cfc:
	// 4894 
cs=0x17c5;eip=0x000acc; 	T(ax = 0x7D00;);	// 84261                  mov     ax, 7D00h ;~ 17C5:0ACC
cs=0x17c5;eip=0x000acf; 	X(PUSH(ax));	// 84262                  push    ax ;~ 17C5:0ACF
cs=0x17c5;eip=0x000ad0; 	T(ax = 0x200;);	// 84263                  mov     ax, 200h ;~ 17C5:0AD0
cs=0x17c5;eip=0x000ad3; 	X(PUSH(ax));	// 84264                  push    ax ;~ 17C5:0AD3
cs=0x17c5;eip=0x000ad4; 	X(PUSH(word_52100));	// 84265                  push    ds:word_52100 ;~ 17C5:0AD4
cs=0x17c5;eip=0x000ad8; 	J(CALL(sub_33194,0));	// 84266                  call    sub_33194 ;~ 17C5:0AD8
cs=0x17c5;eip=0x000adb; 	T(ADD(sp, 6));	// 84267                  add     sp, 6 ;~ 17C5:0ADB
cs=0x17c5;eip=0x000ade; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 84268                  mov     [bp-6], ax ;~ 17C5:0ADE
cs=0x17c5;eip=0x000ae1; 	T(ax = word_52100;);	// 84269                  mov     ax, ds:word_52100 ;~ 17C5:0AE1
cs=0x17c5;eip=0x000ae4; 	T(CMP(*(dw*)(raddr(ss,bp-6)), ax));	// 84270                  cmp     [bp-6], ax ;~ 17C5:0AE4
cs=0x17c5;eip=0x000ae7; 	J(JZ(loc_26d3b));	// 84271                  jz      short loc_26D3B ;~ 17C5:0AE7
cs=0x17c5;eip=0x000ae9; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 84272                  mov     ax, [bp-6] ;~ 17C5:0AE9
cs=0x17c5;eip=0x000aec; 	X(word_52100 = ax;);	// 84273                  mov     ds:word_52100, ax ;~ 17C5:0AEC
cs=0x17c5;eip=0x000aef; 	T(ax = 0x8000;);	// 84274                  mov     ax, 8000h ;~ 17C5:0AEF
cs=0x17c5;eip=0x000af2; 	T(SUB(ax, word_52100));	// 84275                  sub     ax, ds:word_52100 ;~ 17C5:0AF2
cs=0x17c5;eip=0x000af6; 	T(SUB(dx, dx));	// 84276                  sub     dx, dx ;~ 17C5:0AF6
cs=0x17c5;eip=0x000af8; 	T(cl = 5;);	// 84277                  mov     cl, 5 ;~ 17C5:0AF8
loc_26d2a:
	// 4895 
cs=0x17c5;eip=0x000afa; 	T(SHL(ax, 1));	// 84280                  shl     ax, 1 ;~ 17C5:0AFA
cs=0x17c5;eip=0x000afc; 	T(RCL(dx, 1));	// 84281                  rcl     dx, 1 ;~ 17C5:0AFC
cs=0x17c5;eip=0x000afe; 	T(DEC(cl));	// 84282                  dec     cl ;~ 17C5:0AFE
cs=0x17c5;eip=0x000b00; 	J(JZ(loc_26d34));	// 84283                  jz      short loc_26D34 ;~ 17C5:0B00
sub_26d32:
	// 84290 
cs=0x17c5;eip=0x000b02; 	J(JMP(loc_26d2a));	// 84291                  jmp     short loc_26D2A ;~ 17C5:0B02
seg2623_b04_proc:
	// 84297 
loc_26d34:
	// 4896 
cs=0x17c5;eip=0x000b04; 	X(word_51a28 = ax;);	// 84298                  mov     ds:word_51A28, ax ;~ 17C5:0B04
cs=0x17c5;eip=0x000b07; 	X(word_51a2a = dx;);	// 84299                  mov     ds:word_51A2A, dx ;~ 17C5:0B07
loc_26d3b:
	// 4897 
cs=0x17c5;eip=0x000b0b; 	T(SUB(bx, bx));	// 84302                  sub     bx, bx ;~ 17C5:0B0B
cs=0x17c5;eip=0x000b0d; 	T(es = bx;);	// 84303                  mov     es, bx ;~ 17C5:0B0D
cs=0x17c5;eip=0x000b0f; 	T(bx = 0x417;);	// 84305                  mov     bx, 417h ;~ 17C5:0B0F
cs=0x17c5;eip=0x000b12; 	X(AND(*(raddr(es,bx)), 0x0F));	// 84306                  and     byte ptr es:[bx], 0Fh ;~ 17C5:0B12
cs=0x17c5;eip=0x000b16; 	J(CALL(sub_2c3a2,0));	// 84307                  call    sub_2C3A2 ;~ 17C5:0B16
cs=0x17c5;eip=0x000b19; 	J(CALL(sub_2c9e4,0));	// 84309                  call    sub_2C9E4 ;~ 17C5:0B19
cs=0x17c5;eip=0x000b1c; 	J(CALL(sub_2dc1e,0));	// 84310                  call    sub_2DC1E ;~ 17C5:0B1C
cs=0x17c5;eip=0x000b1f; 	J(CALL(sub_27866,0));	// 84311                  call    sub_27866 ;~ 17C5:0B1F
cs=0x17c5;eip=0x000b22; 	J(CALL(sub_278a6,0));	// 84312                  call    sub_278A6 ;~ 17C5:0B22
cs=0x17c5;eip=0x000b25; 	J(CALL(sub_27a71,0));	// 84313                  call    sub_27A71 ;~ 17C5:0B25
cs=0x17c5;eip=0x000b28; 	J(CALL(sub_27b05,0));	// 84314                  call    sub_27B05 ;~ 17C5:0B28
cs=0x17c5;eip=0x000b2b; 	T(ax = bp-8);	// 84315                  lea     ax, [bp-8] ;~ 17C5:0B2B
cs=0x17c5;eip=0x000b2e; 	X(PUSH(ax));	// 84316                  push    ax ;~ 17C5:0B2E
cs=0x17c5;eip=0x000b2f; 	T(ax = bp-6);	// 84317                  lea     ax, [bp-6] ;~ 17C5:0B2F
cs=0x17c5;eip=0x000b32; 	X(PUSH(ax));	// 84318                  push    ax ;~ 17C5:0B32
cs=0x17c5;eip=0x000b33; 	X(PUSH(word_52100));	// 84319                  push    ds:word_52100 ;~ 17C5:0B33
cs=0x17c5;eip=0x000b37; 	X(PUSH(word_520f0));	// 84320                  push    ds:word_520F0 ;~ 17C5:0B37
cs=0x17c5;eip=0x000b3b; 	J(CALL(sub_2fc1c,0));	// 84321                  call    sub_2FC1C ;~ 17C5:0B3B
cs=0x17c5;eip=0x000b3e; 	T(ADD(sp, 8));	// 84322                  add     sp, 8 ;~ 17C5:0B3E
cs=0x17c5;eip=0x000b41; 	T(OR(ax, ax));	// 84323                  or      ax, ax ;~ 17C5:0B41
cs=0x17c5;eip=0x000b43; 	J(JNZ(loc_26d78));	// 84324                  jnz     short loc_26D78 ;~ 17C5:0B43
cs=0x17c5;eip=0x000b45; 	J(JMP(loc_26e15));	// 84325                  jmp     loc_26E15 ;~ 17C5:0B45
loc_26d78:
	// 4898 
cs=0x17c5;eip=0x000b48; 	J(CALLF(sub_49a7f,0));	// 84329                  call    far ptr sub_49A7F ;~ 17C5:0B48
cs=0x17c5;eip=0x000b4d; 	T(SUB(al, 1));	// 84331                  sub     al, 1 ;~ 17C5:0B4D
cs=0x17c5;eip=0x000b4f; 	T(NEG(al));	// 84332                  neg     al ;~ 17C5:0B4F
cs=0x17c5;eip=0x000b51; 	X(byte_527d0 = al;);	// 84333                  mov     ds:byte_527D0, al ;~ 17C5:0B51
cs=0x17c5;eip=0x000b54; 	T(MOV(si, *(dw*)(raddr(ss,bp-6))));	// 84334                  mov     si, [bp-6] ;~ 17C5:0B54
cs=0x17c5;eip=0x000b57; 	T(SUB(si, 3));	// 84335                  sub     si, 3 ;~ 17C5:0B57
cs=0x17c5;eip=0x000b5a; 	T(MOV(di, *(dw*)(raddr(ss,bp-8))));	// 84336                  mov     di, [bp-8] ;~ 17C5:0B5A
cs=0x17c5;eip=0x000b5d; 	T(SUB(di, 3));	// 84337                  sub     di, 3 ;~ 17C5:0B5D
cs=0x17c5;eip=0x000b60; 	T(ax = 6;);	// 84338                  mov     ax, 6 ;~ 17C5:0B60
cs=0x17c5;eip=0x000b63; 	X(PUSH(ax));	// 84339                  push    ax ;~ 17C5:0B63
cs=0x17c5;eip=0x000b64; 	X(PUSH(ax));	// 84340                  push    ax ;~ 17C5:0B64
cs=0x17c5;eip=0x000b65; 	X(PUSH(di));	// 84341                  push    di ;~ 17C5:0B65
cs=0x17c5;eip=0x000b66; 	X(PUSH(si));	// 84342                  push    si ;~ 17C5:0B66
cs=0x17c5;eip=0x000b67; 	T(al = byte_527d0;);	// 84343                  mov     al, ds:byte_527D0 ;~ 17C5:0B67
cs=0x17c5;eip=0x000b6a; 	T(CBW);	// 84344                  cbw ;~ 17C5:0B6A
cs=0x17c5;eip=0x000b6b; 	X(PUSH(ax));	// 84345                  push    ax ;~ 17C5:0B6B
cs=0x17c5;eip=0x000b6c; 	X(PUSH(di));	// 84346                  push    di ;~ 17C5:0B6C
cs=0x17c5;eip=0x000b6d; 	X(PUSH(si));	// 84347                  push    si ;~ 17C5:0B6D
cs=0x17c5;eip=0x000b6e; 	T(ax = 2;);	// 84348                  mov     ax, 2 ;~ 17C5:0B6E
cs=0x17c5;eip=0x000b71; 	X(PUSH(ax));	// 84349                  push    ax ;~ 17C5:0B71
cs=0x17c5;eip=0x000b72; 	J(CALLF(sub_49a70,0));	// 84350                  call    far ptr sub_49A70 ;~ 17C5:0B72
cs=0x17c5;eip=0x000b77; 	T(ADD(sp, 0x10));	// 84352                  add     sp, 10h ;~ 17C5:0B77
cs=0x17c5;eip=0x000b7a; 	T(SUB(ax, ax));	// 84353                  sub     ax, ax ;~ 17C5:0B7A
cs=0x17c5;eip=0x000b7c; 	X(PUSH(ax));	// 84354                  push    ax ;~ 17C5:0B7C
cs=0x17c5;eip=0x000b7d; 	T(ax = 4;);	// 84355                  mov     ax, 4 ;~ 17C5:0B7D
cs=0x17c5;eip=0x000b80; 	X(PUSH(ax));	// 84356                  push    ax ;~ 17C5:0B80
cs=0x17c5;eip=0x000b81; 	X(PUSH(ax));	// 84357                  push    ax ;~ 17C5:0B81
cs=0x17c5;eip=0x000b82; 	X(PUSH(ax));	// 84358                  push    ax ;~ 17C5:0B82
cs=0x17c5;eip=0x000b83; 	T(ax = word_4e2f8;);	// 84359                  mov     ax, ds:word_4E2F8 ;~ 17C5:0B83
cs=0x17c5;eip=0x000b86; 	T(ADD(ah, 0x10));	// 84360                  add     ah, 10h ;~ 17C5:0B86
cs=0x17c5;eip=0x000b89; 	T(cl = 0x0D;);	// 84361                  mov     cl, 0Dh ;~ 17C5:0B89
cs=0x17c5;eip=0x000b8b; 	T(SAR(ax, cl));	// 84362                  sar     ax, cl ;~ 17C5:0B8B
cs=0x17c5;eip=0x000b8d; 	T(AND(ax, 7));	// 84363                  and     ax, 7 ;~ 17C5:0B8D
cs=0x17c5;eip=0x000b90; 	T(SHL(ax, 1));	// 84364                  shl     ax, 1 ;~ 17C5:0B90
cs=0x17c5;eip=0x000b92; 	T(SHL(ax, 1));	// 84365                  shl     ax, 1 ;~ 17C5:0B92
cs=0x17c5;eip=0x000b94; 	T(ADD(ax, 0x0A4));	// 84366                  add     ax, 0A4h ;~ 17C5:0B94
cs=0x17c5;eip=0x000b97; 	X(PUSH(ax));	// 84367                  push    ax ;~ 17C5:0B97
cs=0x17c5;eip=0x000b98; 	T(MOV(ax, *(dw*)(raddr(ss,bp-8))));	// 84368                  mov     ax, [bp-8] ;~ 17C5:0B98
cs=0x17c5;eip=0x000b9b; 	T(DEC(ax));	// 84369                  dec     ax ;~ 17C5:0B9B
cs=0x17c5;eip=0x000b9c; 	X(PUSH(ax));	// 84370                  push    ax ;~ 17C5:0B9C
cs=0x17c5;eip=0x000b9d; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 84371                  mov     ax, [bp-6] ;~ 17C5:0B9D
cs=0x17c5;eip=0x000ba0; 	T(DEC(ax));	// 84372                  dec     ax ;~ 17C5:0BA0
cs=0x17c5;eip=0x000ba1; 	X(PUSH(ax));	// 84373                  push    ax ;~ 17C5:0BA1
cs=0x17c5;eip=0x000ba2; 	J(CALL(sub_30af8,0));	// 84374                  call    sub_30AF8 ;~ 17C5:0BA2
cs=0x17c5;eip=0x000ba5; 	T(ADD(sp, 0x0E));	// 84376                  add     sp, 0Eh ;~ 17C5:0BA5
cs=0x17c5;eip=0x000ba8; 	T(al = 1;);	// 84377                  mov     al, 1 ;~ 17C5:0BA8
cs=0x17c5;eip=0x000baa; 	T(SUB(al, byte_527d0));	// 84378                  sub     al, ds:byte_527D0 ;~ 17C5:0BAA
sub_26dde:
	// 84384 
cs=0x17c5;eip=0x000bae; 	X(byte_527d0 = al;);	// 84388                  mov     ds:byte_527D0, al ;~ 17C5:0BAE
cs=0x17c5;eip=0x000bb1; 	T(CMP(*(dw*)(raddr(ss,bp-6)), 0x20));	// 84389                  cmp     word ptr [bp-6], 20h ; ' ' ;~ 17C5:0BB1
cs=0x17c5;eip=0x000bb5; 	J(JL(loc_26dfa));	// 84390                  jl      short loc_26DFA ;~ 17C5:0BB5
cs=0x17c5;eip=0x000bb7; 	T(CMP(*(dw*)(raddr(ss,bp-6)), 0x58));	// 84391                  cmp     word ptr [bp-6], 58h ; 'X' ;~ 17C5:0BB7
cs=0x17c5;eip=0x000bbb; 	J(JG(loc_26dfa));	// 84392                  jg      short loc_26DFA ;~ 17C5:0BBB
cs=0x17c5;eip=0x000bbd; 	T(CMP(*(dw*)(raddr(ss,bp-8)), 0x76));	// 84393                  cmp     word ptr [bp-8], 76h ; 'v' ;~ 17C5:0BBD
cs=0x17c5;eip=0x000bc1; 	J(JL(loc_26dfa));	// 84394                  jl      short loc_26DFA ;~ 17C5:0BC1
cs=0x17c5;eip=0x000bc3; 	T(CMP(*(dw*)(raddr(ss,bp-8)), 0x0A2));	// 84395                  cmp     word ptr [bp-8], 0A2h ;~ 17C5:0BC3
cs=0x17c5;eip=0x000bc8; 	J(JLE(loc_26e13));	// 84396                  jle     short loc_26E13 ;~ 17C5:0BC8
loc_26dfa:
	// 4899 
cs=0x17c5;eip=0x000bca; 	T(CMP(word_4e61a, 2));	// 84400                  cmp     ds:word_4E61A, 2 ;~ 17C5:0BCA
cs=0x17c5;eip=0x000bcf; 	J(JLE(loc_26e13));	// 84401                  jle     short loc_26E13 ;~ 17C5:0BCF
cs=0x17c5;eip=0x000bd1; 	X(DEC(word_4e61a));	// 84402                  dec     ds:word_4E61A ;~ 17C5:0BD1
cs=0x17c5;eip=0x000bd5; 	X(PUSH(word_52100));	// 84403                  push    ds:word_52100 ;~ 17C5:0BD5
cs=0x17c5;eip=0x000bd9; 	X(PUSH(word_520f0));	// 84404                  push    ds:word_520F0 ;~ 17C5:0BD9
cs=0x17c5;eip=0x000bdd; 	J(CALL(sub_2f7f9,0));	// 84405                  call    sub_2F7F9 ;~ 17C5:0BDD
seg2623_be0_proc:
	// 84408 
cs=0x17c5;eip=0x000be0; 	T(ADD(sp, 4));	// 84408                  add     sp, 4 ;~ 17C5:0BE0
loc_26e13:
	// 4900 
cs=0x17c5;eip=0x000be3; 	J(JMP(loc_26e23));	// 84413                  jmp     short loc_26E23 ;~ 17C5:0BE3
loc_26e15:
	// 4901 
cs=0x17c5;eip=0x000be5; 	X(PUSH(word_52100));	// 84419                  push    ds:word_52100 ;~ 17C5:0BE5
cs=0x17c5;eip=0x000be9; 	X(PUSH(word_520f0));	// 84420                  push    ds:word_520F0 ;~ 17C5:0BE9
cs=0x17c5;eip=0x000bed; 	J(CALL(sub_2f7f9,0));	// 84421                  call    sub_2F7F9 ;~ 17C5:0BED
cs=0x17c5;eip=0x000bf0; 	T(ADD(sp, 4));	// 84422                  add     sp, 4 ;~ 17C5:0BF0
loc_26e23:
	// 4902 
cs=0x17c5;eip=0x000bf3; 	T(ax = word_520f0;);	// 84425                  mov     ax, ds:word_520F0 ;~ 17C5:0BF3
cs=0x17c5;eip=0x000bf6; 	X(word_5113c = ax;);	// 84426                  mov     ds:word_5113C, ax ;~ 17C5:0BF6
cs=0x17c5;eip=0x000bf9; 	T(ax = word_52100;);	// 84427                  mov     ax, ds:word_52100 ;~ 17C5:0BF9
cs=0x17c5;eip=0x000bfc; 	X(word_511da = ax;);	// 84428                  mov     ds:word_511DA, ax ;~ 17C5:0BFC
cs=0x17c5;eip=0x000bff; 	T(ax = word_4993c;);	// 84429                  mov     ax, word_4993C ;~ 17C5:0BFF
cs=0x17c5;eip=0x000c02; 	T(CMP(word_49918, ax));	// 84430                  cmp     word_49918, ax ;~ 17C5:0C02
cs=0x17c5;eip=0x000c06; 	J(JNZ(loc_26e4b));	// 84431                  jnz     short loc_26E4B ;~ 17C5:0C06
cs=0x17c5;eip=0x000c08; 	T(CMP(word_4991a, 0));	// 84432                  cmp     word_4991A, 0 ;~ 17C5:0C08
cs=0x17c5;eip=0x000c0d; 	J(JNZ(loc_26e45));	// 84433                  jnz     short loc_26E45 ;~ 17C5:0C0D
cs=0x17c5;eip=0x000c0f; 	X(word_520c0 = 0;);	// 84434                  mov     ds:word_520C0, 0 ;~ 17C5:0C0F
loc_26e45:
	// 4903 
cs=0x17c5;eip=0x000c15; 	X(word_4993c = 0x0FFFF;);	// 84437                  mov     word_4993C, 0FFFFh ;~ 17C5:0C15
loc_26e4b:
	// 4904 
cs=0x17c5;eip=0x000c1b; 	T(CMP(word_49920, 0));	// 84440                  cmp     word_49920, 0 ;~ 17C5:0C1B
cs=0x17c5;eip=0x000c20; 	J(JZ(__unk_26e56));	// 84441                  jz      short __unk_26E56 ;~ 17C5:0C20
cs=0x17c5;eip=0x000c22; 	X(DEC(word_49920));	// 84442                  dec     word_49920 ;~ 17C5:0C22
__unk_26e56:
	// 4905 
cs=0x17c5;eip=0x000c26; 	T(CMP(_unk_4991e, 0));	// 84445                  cmp     _unk_4991E, 0 ;~ 17C5:0C26
cs=0x17c5;eip=0x000c2b; 	J(JZ(loc_26e76));	// 84446                  jz      short loc_26E76 ;~ 17C5:0C2B
cs=0x17c5;eip=0x000c2d; 	T(ax = _unk_4991e;);	// 84447                  mov     ax, _unk_4991E ;~ 17C5:0C2D
cs=0x17c5;eip=0x000c30; 	T(CMP(word_49918, ax));	// 84448                  cmp     word_49918, ax ;~ 17C5:0C30
cs=0x17c5;eip=0x000c34; 	J(JNZ(loc_26e76));	// 84449                  jnz     short loc_26E76 ;~ 17C5:0C34
cs=0x17c5;eip=0x000c36; 	X(_unk_4991e = 0;);	// 84450                  mov     _unk_4991E, 0 ;~ 17C5:0C36
cs=0x17c5;eip=0x000c3c; 	T(ax = 2;);	// 84451                  mov     ax, 2 ;~ 17C5:0C3C
cs=0x17c5;eip=0x000c3f; 	X(PUSH(ax));	// 84452                  push    ax ;~ 17C5:0C3F
cs=0x17c5;eip=0x000c40; 	J(CALL(sub_33c8f,0));	// 84453                  call    sub_33C8F ;~ 17C5:0C40
cs=0x17c5;eip=0x000c43; 	T(ADD(sp, 2));	// 84454                  add     sp, 2 ;~ 17C5:0C43
loc_26e76:
	// 4906 
cs=0x17c5;eip=0x000c46; 	T(TEST(*(db*)(&word_49918), 7));	// 84458                  test    byte ptr word_49918, 7 ;~ 17C5:0C46
cs=0x17c5;eip=0x000c4b; 	J(JZ(loc_26e80));	// 84459                  jz      short loc_26E80 ;~ 17C5:0C4B
cs=0x17c5;eip=0x000c4d; 	J(JMP(loc_2716b));	// 84460                  jmp     loc_2716B ;~ 17C5:0C4D
loc_26e80:
	// 4907 
cs=0x17c5;eip=0x000c50; 	T(ax = word_5239a;);	// 84464                  mov     ax, ds:word_5239A ;~ 17C5:0C50
cs=0x17c5;eip=0x000c53; 	X(word_49930 = ax;);	// 84465                  mov     word_49930, ax ;~ 17C5:0C53
cs=0x17c5;eip=0x000c56; 	X(word_4f21e = 0x7FFF;);	// 84466                  mov     ds:word_4F21E, 7FFFh ;~ 17C5:0C56
cs=0x17c5;eip=0x000c5c; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 0));	// 84467                  mov     word ptr [bp-0Ah], 0 ;~ 17C5:0C5C
cs=0x17c5;eip=0x000c61; 	J(JMP(loc_26e96));	// 84468                  jmp     short loc_26E96 ;~ 17C5:0C61
loc_26e93:
	// 4908 
cs=0x17c5;eip=0x000c63; 	X(INC(*(dw*)(raddr(ss,bp-0x0A))));	// 84472                  inc     word ptr [bp-0Ah] ;~ 17C5:0C63
loc_26e96:
	// 4909 
cs=0x17c5;eip=0x000c66; 	T(ax = word_52102;);	// 84475                  mov     ax, ds:word_52102 ;~ 17C5:0C66
cs=0x17c5;eip=0x000c69; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 84476                  cmp     [bp-0Ah], ax ;~ 17C5:0C69
cs=0x17c5;eip=0x000c6c; 	J(JGE(loc_26eec));	// 84477                  jge     short loc_26EEC ;~ 17C5:0C6C
cs=0x17c5;eip=0x000c6e; 	T(MOV(si, *(dw*)(raddr(ss,bp-0x0A))));	// 84478                  mov     si, [bp-0Ah] ;~ 17C5:0C6E
cs=0x17c5;eip=0x000c71; 	T(cl = 4;);	// 84479                  mov     cl, 4 ;~ 17C5:0C71
cs=0x17c5;eip=0x000c73; 	T(SHL(si, cl));	// 84480                  shl     si, cl ;~ 17C5:0C73
cs=0x17c5;eip=0x000c75; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x201));	// 84481                  test    word ptr [si-7E4Ch], 201h ;~ 17C5:0C75
cs=0x17c5;eip=0x000c7b; 	J(JZ(loc_26eea));	// 84482                  jz      short loc_26EEA ;~ 17C5:0C7B
cs=0x17c5;eip=0x000c7d; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x500));	// 84483                  test    word ptr [si-7E4Ch], 500h ;~ 17C5:0C7D
cs=0x17c5;eip=0x000c83; 	J(JZ(loc_26eea));	// 84484                  jz      short loc_26EEA ;~ 17C5:0C83
cs=0x17c5;eip=0x000c85; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x800));	// 84485                  test    word ptr [si-7E4Ch], 800h ;~ 17C5:0C85
cs=0x17c5;eip=0x000c8b; 	J(JNZ(loc_26eea));	// 84486                  jnz     short loc_26EEA ;~ 17C5:0C8B
cs=0x17c5;eip=0x000c8d; 	T(ax = word_52100;);	// 84487                  mov     ax, ds:word_52100 ;~ 17C5:0C8D
cs=0x17c5;eip=0x000c90; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 84488                  sub     ax, [si-7E50h] ;~ 17C5:0C90
cs=0x17c5;eip=0x000c94; 	X(PUSH(ax));	// 84489                  push    ax ;~ 17C5:0C94
cs=0x17c5;eip=0x000c95; 	T(ax = word_520f0;);	// 84490                  mov     ax, ds:word_520F0 ;~ 17C5:0C95
cs=0x17c5;eip=0x000c98; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 84491                  sub     ax, [si-7E52h] ;~ 17C5:0C98
cs=0x17c5;eip=0x000c9c; 	X(PUSH(ax));	// 84492                  push    ax ;~ 17C5:0C9C
cs=0x17c5;eip=0x000c9d; 	J(CALL(sub_331d6,0));	// 84493                  call    sub_331D6 ;~ 17C5:0C9D
cs=0x17c5;eip=0x000ca0; 	T(ADD(sp, 4));	// 84494                  add     sp, 4 ;~ 17C5:0CA0
cs=0x17c5;eip=0x000ca3; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 84495                  mov     [bp-2], ax ;~ 17C5:0CA3
cs=0x17c5;eip=0x000ca6; 	T(ax = word_4f21e;);	// 84496                  mov     ax, ds:word_4F21E ;~ 17C5:0CA6
cs=0x17c5;eip=0x000ca9; 	T(CMP(*(dw*)(raddr(ss,bp-2)), ax));	// 84497                  cmp     [bp-2], ax ;~ 17C5:0CA9
cs=0x17c5;eip=0x000cac; 	J(JGE(loc_26eea));	// 84498                  jge     short loc_26EEA ;~ 17C5:0CAC
cs=0x17c5;eip=0x000cae; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 84499                  mov     ax, [bp-2] ;~ 17C5:0CAE
cs=0x17c5;eip=0x000cb1; 	X(word_4f21e = ax;);	// 84500                  mov     ds:word_4F21E, ax ;~ 17C5:0CB1
cs=0x17c5;eip=0x000cb4; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84501                  mov     ax, [bp-0Ah] ;~ 17C5:0CB4
cs=0x17c5;eip=0x000cb7; 	X(word_5239a = ax;);	// 84502                  mov     ds:word_5239A, ax ;~ 17C5:0CB7
loc_26eea:
	// 4910 
cs=0x17c5;eip=0x000cba; 	J(JMP(loc_26e93));	// 84506                  jmp     short loc_26E93 ;~ 17C5:0CBA
loc_26eec:
	// 4911 
cs=0x17c5;eip=0x000cbc; 	T(ax = word_5239a;);	// 84510                  mov     ax, ds:word_5239A ;~ 17C5:0CBC
cs=0x17c5;eip=0x000cbf; 	T(CMP(word_49930, ax));	// 84511                  cmp     word_49930, ax ;~ 17C5:0CBF
cs=0x17c5;eip=0x000cc3; 	J(JZ(loc_26f0c));	// 84512                  jz      short loc_26F0C ;~ 17C5:0CC3
cs=0x17c5;eip=0x000cc5; 	X(word_5138a = ax;);	// 84513                  mov     ds:word_5138A, ax ;~ 17C5:0CC5
cs=0x17c5;eip=0x000cc8; 	T(si = ax;);	// 84514                  mov     si, ax ;~ 17C5:0CC8
cs=0x17c5;eip=0x000cca; 	T(cl = 4;);	// 84515                  mov     cl, 4 ;~ 17C5:0CCA
cs=0x17c5;eip=0x000ccc; 	T(SHL(si, cl));	// 84516                  shl     si, cl ;~ 17C5:0CCC
cs=0x17c5;eip=0x000cce; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 84517                  mov     ax, [si-7E52h] ;~ 17C5:0CCE
cs=0x17c5;eip=0x000cd2; 	X(word_48c5e = ax;);	// 84518                  mov     word_48C5E, ax ;~ 17C5:0CD2
cs=0x17c5;eip=0x000cd5; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 84519                  mov     ax, [si-7E50h] ;~ 17C5:0CD5
cs=0x17c5;eip=0x000cd9; 	X(word_48c60 = ax;);	// 84520                  mov     word_48C60, ax ;~ 17C5:0CD9
loc_26f0c:
	// 4912 
cs=0x17c5;eip=0x000cdc; 	T(CMP(*(db*)(&word_49918), 0));	// 84523                  cmp     byte ptr word_49918, 0 ;~ 17C5:0CDC
cs=0x17c5;eip=0x000ce1; 	J(JNZ(loc_26f50));	// 84524                  jnz     short loc_26F50 ;~ 17C5:0CE1
cs=0x17c5;eip=0x000ce3; 	T(CMP(word_49918, 0));	// 84525                  cmp     word_49918, 0 ;~ 17C5:0CE3
cs=0x17c5;eip=0x000ce8; 	J(JZ(loc_26f50));	// 84526                  jz      short loc_26F50 ;~ 17C5:0CE8
cs=0x17c5;eip=0x000cea; 	T(ax = 0x0FFFC;);	// 84527                  mov     ax, 0FFFCh ;~ 17C5:0CEA
cs=0x17c5;eip=0x000ced; 	T(CWD);	// 84528                  cwd ;~ 17C5:0CED
cs=0x17c5;eip=0x000cee; 	T(ADD(ax, *(dw*)(&dword_528d6)));	// 84529                  add     ax, word ptr ds:dword_528D6 ;~ 17C5:0CEE
cs=0x17c5;eip=0x000cf2; 	T(ADC(dx, 0));	// 84530                  adc     dx, 0 ;~ 17C5:0CF2
cs=0x17c5;eip=0x000cf5; 	T(cx = 0x0C;);	// 84531                  mov     cx, 0Ch ;~ 17C5:0CF5
cs=0x17c5;eip=0x000cf8; 	T(SHL(dx, cl));	// 84532                  shl     dx, cl ;~ 17C5:0CF8
cs=0x17c5;eip=0x000cfa; 	T(ADD(dx, *(dw*)(((db*)&dword_528d6)+2)));	// 84534                  add     dx, word ptr ds:dword_528D6+2 ;~ 17C5:0CFA
cs=0x17c5;eip=0x000cfe; 	T(es = dx;);	// 84535                  mov     es, dx ;~ 17C5:0CFE
cs=0x17c5;eip=0x000d00; 	T(bx = ax;);	// 84537                  mov     bx, ax ;~ 17C5:0D00
cs=0x17c5;eip=0x000d02; 	T(CMP(*(dw*)(raddr(es,bx)), 0x0CA01));	// 84538                  cmp     word ptr es:[bx], 0CA01h ;~ 17C5:0D02
cs=0x17c5;eip=0x000d07; 	J(JNZ(loc_26f41));	// 84539                  jnz     short loc_26F41 ;~ 17C5:0D07
cs=0x17c5;eip=0x000d09; 	T(CMP(*(dw*)(raddr(es,bx+2)), 0x3B9A));	// 84540                  cmp     word ptr es:[bx+2], 3B9Ah ;~ 17C5:0D09
cs=0x17c5;eip=0x000d0f; 	J(JZ(loc_26f50));	// 84541                  jz      short loc_26F50 ;~ 17C5:0D0F
loc_26f41:
	// 4913 
cs=0x17c5;eip=0x000d11; 	T(ax = 1;);	// 84544                  mov     ax, 1 ;~ 17C5:0D11
cs=0x17c5;eip=0x000d14; 	X(PUSH(ax));	// 84545                  push    ax ;~ 17C5:0D14
cs=0x17c5;eip=0x000d15; 	J(CALL(sub_27d67,0));	// 84546                  call    sub_27D67 ;~ 17C5:0D15
cs=0x17c5;eip=0x000d18; 	T(ADD(sp, 2));	// 84547                  add     sp, 2 ;~ 17C5:0D18
cs=0x17c5;eip=0x000d1b; 	X(byte_48b64 = 0;);	// 84548                  mov     byte_48B64, 0 ;~ 17C5:0D1B
loc_26f50:
	// 4914 
cs=0x17c5;eip=0x000d20; 	T(ax = word_5239a;);	// 84554                  mov     ax, ds:word_5239A ;~ 17C5:0D20
cs=0x17c5;eip=0x000d23; 	T(CMP(word_49930, ax));	// 84555                  cmp     word_49930, ax ;~ 17C5:0D23
cs=0x17c5;eip=0x000d27; 	J(JNZ(loc_26f5c));	// 84556                  jnz     short loc_26F5C ;~ 17C5:0D27
cs=0x17c5;eip=0x000d29; 	J(JMP(loc_270e6));	// 84557                  jmp     loc_270E6 ;~ 17C5:0D29
loc_26f5c:
	// 4915 
cs=0x17c5;eip=0x000d2c; 	T(bx = ax;);	// 84561                  mov     bx, ax ;~ 17C5:0D2C
cs=0x17c5;eip=0x000d2e; 	T(cl = 4;);	// 84562                  mov     cl, 4 ;~ 17C5:0D2E
cs=0x17c5;eip=0x000d30; 	T(SHL(bx, cl));	// 84563                  shl     bx, cl ;~ 17C5:0D30
cs=0x17c5;eip=0x000d32; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x800));	// 84564                  test    word ptr [bx-7E4Ch], 800h ;~ 17C5:0D32
cs=0x17c5;eip=0x000d38; 	J(JZ(loc_26f6d));	// 84565                  jz      short loc_26F6D ;~ 17C5:0D38
cs=0x17c5;eip=0x000d3a; 	J(JMP(loc_270e6));	// 84566                  jmp     loc_270E6 ;~ 17C5:0D3A
loc_26f6d:
	// 4916 
cs=0x17c5;eip=0x000d3d; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 1));	// 84570                  mov     word ptr [bp-0Ah], 1 ;~ 17C5:0D3D
cs=0x17c5;eip=0x000d42; 	J(JMP(loc_26f77));	// 84571                  jmp     short loc_26F77 ;~ 17C5:0D42
loc_26f74:
	// 4917 
cs=0x17c5;eip=0x000d44; 	X(INC(*(dw*)(raddr(ss,bp-0x0A))));	// 84575                  inc     word ptr [bp-0Ah] ;~ 17C5:0D44
loc_26f77:
	// 4918 
cs=0x17c5;eip=0x000d47; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), 2));	// 84578                  cmp     word ptr [bp-0Ah], 2 ;~ 17C5:0D47
cs=0x17c5;eip=0x000d4b; 	J(JG(loc_26fce));	// 84579                  jg      short loc_26FCE ;~ 17C5:0D4B
cs=0x17c5;eip=0x000d4d; 	T(ax = word_52276;);	// 84580                  mov     ax, ds:word_52276 ;~ 17C5:0D4D
cs=0x17c5;eip=0x000d50; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84581                  sub     ax, [bp-0Ah] ;~ 17C5:0D50
cs=0x17c5;eip=0x000d53; 	T(cx = 0x24;);	// 84582                  mov     cx, 24h ; '$' ;~ 17C5:0D53
cs=0x17c5;eip=0x000d56; 	T(IMUL1_2(cx));	// 84583                  imul    cx ;~ 17C5:0D56
cs=0x17c5;eip=0x000d58; 	T(si = ax;);	// 84584                  mov     si, ax ;~ 17C5:0D58
cs=0x17c5;eip=0x000d5a; 	X(AND(*(raddr(ds,si-0x7696)), 0x0FD));	// 84585                  and     byte ptr [si-7696h], 0FDh ;~ 17C5:0D5A
cs=0x17c5;eip=0x000d5f; 	T(bx = word_5239a;);	// 84586                  mov     bx, ds:word_5239A ;~ 17C5:0D5F
cs=0x17c5;eip=0x000d63; 	T(cl = 4;);	// 84587                  mov     cl, 4 ;~ 17C5:0D63
cs=0x17c5;eip=0x000d65; 	T(SHL(bx, cl));	// 84588                  shl     bx, cl ;~ 17C5:0D65
cs=0x17c5;eip=0x000d67; 	T(MOV(di, *(dw*)(raddr(ds,bx-0x7E4C))));	// 84589                  mov     di, [bx-7E4Ch] ;~ 17C5:0D67
cs=0x17c5;eip=0x000d6b; 	T(TEST(di, 0x400));	// 84590                  test    di, 400h ;~ 17C5:0D6B
cs=0x17c5;eip=0x000d6f; 	J(JZ(loc_26fa6));	// 84591                  jz      short loc_26FA6 ;~ 17C5:0D6F
cs=0x17c5;eip=0x000d71; 	T(ax = 0x0D;);	// 84592                  mov     ax, 0Dh ;~ 17C5:0D71
cs=0x17c5;eip=0x000d74; 	J(JMP(loc_26fa8));	// 84593                  jmp     short loc_26FA8 ;~ 17C5:0D74
loc_26fa6:
	// 4919 
cs=0x17c5;eip=0x000d76; 	T(SUB(ax, ax));	// 84597                  sub     ax, ax ;~ 17C5:0D76
loc_26fa8:
	// 4920 
cs=0x17c5;eip=0x000d78; 	X(MOV(*(dw*)(raddr(ds,si-0x7698)), ax));	// 84600                  mov     [si-7698h], ax ;~ 17C5:0D78
cs=0x17c5;eip=0x000d7c; 	T(TEST(di, 0x100));	// 84601                  test    di, 100h ;~ 17C5:0D7C
cs=0x17c5;eip=0x000d80; 	J(JZ(loc_26fb8));	// 84602                  jz      short loc_26FB8 ;~ 17C5:0D80
cs=0x17c5;eip=0x000d82; 	X(MOV(*(dw*)(raddr(ds,si-0x7698)), 0x12));	// 84603                  mov     word ptr [si-7698h], 12h ;~ 17C5:0D82
loc_26fb8:
	// 4921 
cs=0x17c5;eip=0x000d88; 	T(ax = word_52276;);	// 84606                  mov     ax, ds:word_52276 ;~ 17C5:0D88
cs=0x17c5;eip=0x000d8b; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84607                  sub     ax, [bp-0Ah] ;~ 17C5:0D8B
cs=0x17c5;eip=0x000d8e; 	T(cx = 0x24;);	// 84608                  mov     cx, 24h ; '$' ;~ 17C5:0D8E
cs=0x17c5;eip=0x000d91; 	T(IMUL1_2(cx));	// 84609                  imul    cx ;~ 17C5:0D91
cs=0x17c5;eip=0x000d93; 	T(bx = ax;);	// 84610                  mov     bx, ax ;~ 17C5:0D93
cs=0x17c5;eip=0x000d95; 	T(ax = word_5239a;);	// 84611                  mov     ax, ds:word_5239A ;~ 17C5:0D95
cs=0x17c5;eip=0x000d98; 	X(MOV(*(dw*)(raddr(ds,bx-0x76AE)), ax));	// 84612                  mov     [bx-76AEh], ax ;~ 17C5:0D98
cs=0x17c5;eip=0x000d9c; 	J(JMP(loc_26f74));	// 84613                  jmp     short loc_26F74 ;~ 17C5:0D9C
loc_26fce:
	// 4922 
cs=0x17c5;eip=0x000d9e; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 3));	// 84617                  mov     word ptr [bp-0Ah], 3 ;~ 17C5:0D9E
cs=0x17c5;eip=0x000da3; 	J(JMP(loc_26fd8));	// 84618                  jmp     short loc_26FD8 ;~ 17C5:0DA3
loc_26fd5:
	// 4923 
cs=0x17c5;eip=0x000da5; 	X(INC(*(dw*)(raddr(ss,bp-0x0A))));	// 84623                  inc     word ptr [bp-0Ah] ;~ 17C5:0DA5
loc_26fd8:
	// 4924 
cs=0x17c5;eip=0x000da8; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), 4));	// 84627                  cmp     word ptr [bp-0Ah], 4 ;~ 17C5:0DA8
cs=0x17c5;eip=0x000dac; 	J(JLE(loc_26fe1));	// 84628                  jle     short loc_26FE1 ;~ 17C5:0DAC
cs=0x17c5;eip=0x000dae; 	J(JMP(loc_270e6));	// 84629                  jmp     loc_270E6 ;~ 17C5:0DAE
loc_26fe1:
	// 4925 
cs=0x17c5;eip=0x000db1; 	T(ax = word_52276;);	// 84633                  mov     ax, ds:word_52276 ;~ 17C5:0DB1
cs=0x17c5;eip=0x000db4; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84634                  sub     ax, [bp-0Ah] ;~ 17C5:0DB4
cs=0x17c5;eip=0x000db7; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 84635                  mov     [bp-0Ch], ax ;~ 17C5:0DB7
cs=0x17c5;eip=0x000dba; 	T(ax = 0x24;);	// 84636                  mov     ax, 24h ; '$' ;~ 17C5:0DBA
cs=0x17c5;eip=0x000dbd; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0C))));	// 84637                  imul    word ptr [bp-0Ch] ;~ 17C5:0DBD
cs=0x17c5;eip=0x000dc0; 	T(si = ax;);	// 84638                  mov     si, ax ;~ 17C5:0DC0
cs=0x17c5;eip=0x000dc2; 	X(OR(*(raddr(ds,si-0x7696)), 2));	// 84639                  or      byte ptr [si-7696h], 2 ;~ 17C5:0DC2
cs=0x17c5;eip=0x000dc7; 	T(di = word_5239a;);	// 84640                  mov     di, ds:word_5239A ;~ 17C5:0DC7
cs=0x17c5;eip=0x000dcb; 	T(cl = 4;);	// 84641                  mov     cl, 4 ;~ 17C5:0DCB
cs=0x17c5;eip=0x000dcd; 	T(SHL(di, cl));	// 84642                  shl     di, cl ;~ 17C5:0DCD
cs=0x17c5;eip=0x000dcf; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E52))));	// 84643                  mov     ax, [di-7E52h] ;~ 17C5:0DCF
cs=0x17c5;eip=0x000dd3; 	X(MOV(*(dw*)(raddr(ds,si-0x76AC)), ax));	// 84644                  mov     [si-76ACh], ax ;~ 17C5:0DD3
cs=0x17c5;eip=0x000dd7; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E50))));	// 84645                  mov     ax, [di-7E50h] ;~ 17C5:0DD7
cs=0x17c5;eip=0x000ddb; 	X(MOV(*(dw*)(raddr(ds,si-0x76AA)), ax));	// 84646                  mov     [si-76AAh], ax ;~ 17C5:0DDB
cs=0x17c5;eip=0x000ddf; 	T(TEST(*(dw*)(raddr(ds,di-0x7E4C)), 0x200));	// 84647                  test    word ptr [di-7E4Ch], 200h ;~ 17C5:0DDF
cs=0x17c5;eip=0x000de5; 	J(JZ(loc_27040));	// 84648                  jz      short loc_27040 ;~ 17C5:0DE5
cs=0x17c5;eip=0x000de7; 	T(ax = word_511d8;);	// 84649                  mov     ax, ds:word_511D8 ;~ 17C5:0DE7
cs=0x17c5;eip=0x000dea; 	T(cx = ax;);	// 84650                  mov     cx, ax ;~ 17C5:0DEA
cs=0x17c5;eip=0x000dec; 	T(SHL(ax, 1));	// 84651                  shl     ax, 1 ;~ 17C5:0DEC
cs=0x17c5;eip=0x000dee; 	T(SHL(ax, 1));	// 84652                  shl     ax, 1 ;~ 17C5:0DEE
cs=0x17c5;eip=0x000df0; 	T(ADD(ax, cx));	// 84653                  add     ax, cx ;~ 17C5:0DF0
cs=0x17c5;eip=0x000df2; 	X(ADD(*(dw*)(raddr(ds,si-0x76AC)), ax));	// 84654                  add     [si-76ACh], ax ;~ 17C5:0DF2
cs=0x17c5;eip=0x000df6; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84655                  mov     ax, [bp-0Ah] ;~ 17C5:0DF6
cs=0x17c5;eip=0x000df9; 	T(AND(ax, 1));	// 84656                  and     ax, 1 ;~ 17C5:0DF9
cs=0x17c5;eip=0x000dfc; 	X(IMUL1_2(word_511d8));	// 84657                  imul    ds:word_511D8 ;~ 17C5:0DFC
cs=0x17c5;eip=0x000e00; 	T(cl = 4;);	// 84658                  mov     cl, 4 ;~ 17C5:0E00
cs=0x17c5;eip=0x000e02; 	T(SHL(ax, cl));	// 84659                  shl     ax, cl ;~ 17C5:0E02
cs=0x17c5;eip=0x000e04; 	X(ADD(*(dw*)(raddr(ds,si-0x76AA)), ax));	// 84660                  add     [si-76AAh], ax ;~ 17C5:0E04
cs=0x17c5;eip=0x000e08; 	X(MOV(*(dw*)(raddr(ds,si-0x76A8)), 0x84));	// 84661                  mov     word ptr [si-76A8h], 84h ;~ 17C5:0E08
cs=0x17c5;eip=0x000e0e; 	J(JMP(_unk_27065));	// 84662                  jmp     short _unk_27065 ;~ 17C5:0E0E
loc_27040:
	// 4926 
cs=0x17c5;eip=0x000e10; 	T(ax = 0x24;);	// 84666                  mov     ax, 24h ; '$' ;~ 17C5:0E10
cs=0x17c5;eip=0x000e13; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0C))));	// 84667                  imul    word ptr [bp-0Ch] ;~ 17C5:0E13
cs=0x17c5;eip=0x000e16; 	T(si = ax;);	// 84668                  mov     si, ax ;~ 17C5:0E16
cs=0x17c5;eip=0x000e18; 	X(ADD(*(dw*)(raddr(ds,si-0x76AC)), 0x0A));	// 84669                  add     word ptr [si-76ACh], 0Ah ;~ 17C5:0E18
cs=0x17c5;eip=0x000e1d; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 84670                  mov     ax, [bp-0Ah] ;~ 17C5:0E1D
cs=0x17c5;eip=0x000e20; 	T(ADD(ax, word_5239a));	// 84671                  add     ax, ds:word_5239A ;~ 17C5:0E20
cs=0x17c5;eip=0x000e24; 	T(AND(ax, 3));	// 84672                  and     ax, 3 ;~ 17C5:0E24
cs=0x17c5;eip=0x000e27; 	T(cl = 4;);	// 84673                  mov     cl, 4 ;~ 17C5:0E27
cs=0x17c5;eip=0x000e29; 	T(SHL(ax, cl));	// 84674                  shl     ax, cl ;~ 17C5:0E29
cs=0x17c5;eip=0x000e2b; 	X(ADD(*(dw*)(raddr(ds,si-0x76AA)), ax));	// 84675                  add     [si-76AAh], ax ;~ 17C5:0E2B
cs=0x17c5;eip=0x000e2f; 	X(MOV(*(dw*)(raddr(ds,si-0x76A8)), 4));	// 84676                  mov     word ptr [si-76A8h], 4 ;~ 17C5:0E2F
_unk_27065:
	// 4927 
cs=0x17c5;eip=0x000e35; 	T(ax = 0x24;);	// 84679                  mov     ax, 24h ; '$' ;~ 17C5:0E35
sub_27068:
	// 84685 
cs=0x17c5;eip=0x000e38; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0C))));	// 84689                  imul    word ptr [bp-0Ch] ;~ 17C5:0E38
cs=0x17c5;eip=0x000e3b; 	T(si = ax;);	// 84690                  mov     si, ax ;~ 17C5:0E3B
cs=0x17c5;eip=0x000e3d; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 84691                  mov     ax, [si-76ACh] ;~ 17C5:0E3D
cs=0x17c5;eip=0x000e41; 	T(SUB(dx, dx));	// 84692                  sub     dx, dx ;~ 17C5:0E41
cs=0x17c5;eip=0x000e43; 	T(cl = 5;);	// 84693                  mov     cl, 5 ;~ 17C5:0E43
loc_27075:
	// 4928 
cs=0x17c5;eip=0x000e45; 	T(SHL(ax, 1));	// 84696                  shl     ax, 1 ;~ 17C5:0E45
cs=0x17c5;eip=0x000e47; 	T(RCL(dx, 1));	// 84697                  rcl     dx, 1 ;~ 17C5:0E47
cs=0x17c5;eip=0x000e49; 	T(DEC(cl));	// 84698                  dec     cl ;~ 17C5:0E49
cs=0x17c5;eip=0x000e4b; 	J(JZ(loc_2707f));	// 84699                  jz      short loc_2707F ;~ 17C5:0E4B
sub_2707d:
	// 84706 
cs=0x17c5;eip=0x000e4d; 	J(JMP(loc_27075));	// 84707                  jmp     short loc_27075 ;~ 17C5:0E4D
seg2623_e4f_proc:
	// 84713 
loc_2707f:
	// 4929 
cs=0x17c5;eip=0x000e4f; 	X(MOV(*(dw*)(raddr(ds,si-0x76A6)), ax));	// 84714                  mov     [si-76A6h], ax ;~ 17C5:0E4F
cs=0x17c5;eip=0x000e53; 	X(MOV(*(dw*)(raddr(ds,si-0x76A4)), dx));	// 84715                  mov     [si-76A4h], dx ;~ 17C5:0E53
cs=0x17c5;eip=0x000e57; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 84716                  mov     ax, [si-76AAh] ;~ 17C5:0E57
cs=0x17c5;eip=0x000e5b; 	T(SUB(dx, dx));	// 84717                  sub     dx, dx ;~ 17C5:0E5B
cs=0x17c5;eip=0x000e5d; 	T(cl = 5;);	// 84718                  mov     cl, 5 ;~ 17C5:0E5D
loc_2708f:
	// 4930 
cs=0x17c5;eip=0x000e5f; 	T(SHL(ax, 1));	// 84721                  shl     ax, 1 ;~ 17C5:0E5F
cs=0x17c5;eip=0x000e61; 	T(RCL(dx, 1));	// 84722                  rcl     dx, 1 ;~ 17C5:0E61
cs=0x17c5;eip=0x000e63; 	T(DEC(cl));	// 84723                  dec     cl ;~ 17C5:0E63
cs=0x17c5;eip=0x000e65; 	J(JZ(loc_27099));	// 84725                  jz      short loc_27099 ;~ 17C5:0E65
cs=0x17c5;eip=0x000e67; 	J(JMP(loc_2708f));	// 84726                  jmp     short loc_2708F ;~ 17C5:0E67
loc_27099:
	// 4931 
cs=0x17c5;eip=0x000e69; 	X(MOV(*(dw*)(raddr(ds,si-0x76A2)), ax));	// 84730                  mov     [si-76A2h], ax ;~ 17C5:0E69
cs=0x17c5;eip=0x000e6d; 	X(MOV(*(dw*)(raddr(ds,si-0x76A0)), dx));	// 84731                  mov     [si-76A0h], dx ;~ 17C5:0E6D
cs=0x17c5;eip=0x000e71; 	T(ax = 0x4000;);	// 84732                  mov     ax, 4000h ;~ 17C5:0E71
cs=0x17c5;eip=0x000e74; 	X(PUSH(ax));	// 84733                  push    ax ;~ 17C5:0E74
cs=0x17c5;eip=0x000e75; 	J(CALL(sub_33430,0));	// 84734                  call    sub_33430 ;~ 17C5:0E75
cs=0x17c5;eip=0x000e78; 	T(ADD(sp, 2));	// 84735                  add     sp, 2 ;~ 17C5:0E78
cs=0x17c5;eip=0x000e7b; 	T(NEG(ax));	// 84736                  neg     ax ;~ 17C5:0E7B
cs=0x17c5;eip=0x000e7d; 	X(MOV(*(dw*)(raddr(ds,si-0x769E)), ax));	// 84737                  mov     [si-769Eh], ax ;~ 17C5:0E7D
cs=0x17c5;eip=0x000e81; 	T(bx = word_5239a;);	// 84738                  mov     bx, ds:word_5239A ;~ 17C5:0E81
cs=0x17c5;eip=0x000e85; 	T(cl = 4;);	// 84739                  mov     cl, 4 ;~ 17C5:0E85
cs=0x17c5;eip=0x000e87; 	T(SHL(bx, cl));	// 84740                  shl     bx, cl ;~ 17C5:0E87
cs=0x17c5;eip=0x000e89; 	T(MOV(si, *(dw*)(raddr(ds,bx-0x7E4C))));	// 84741                  mov     si, [bx-7E4Ch] ;~ 17C5:0E89
cs=0x17c5;eip=0x000e8d; 	T(ax = 0x24;);	// 84742                  mov     ax, 24h ; '$' ;~ 17C5:0E8D
cs=0x17c5;eip=0x000e90; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0C))));	// 84743                  imul    word ptr [bp-0Ch] ;~ 17C5:0E90
cs=0x17c5;eip=0x000e93; 	T(di = ax;);	// 84744                  mov     di, ax ;~ 17C5:0E93
cs=0x17c5;eip=0x000e95; 	T(ADD(di, 0x8968));	// 84745                  add     di, 8968h ;~ 17C5:0E95
cs=0x17c5;eip=0x000e99; 	T(TEST(si, 0x400));	// 84746                  test    si, 400h ;~ 17C5:0E99
cs=0x17c5;eip=0x000e9d; 	J(JZ(loc_270d4));	// 84747                  jz      short loc_270D4 ;~ 17C5:0E9D
cs=0x17c5;eip=0x000e9f; 	T(ax = 8;);	// 84748                  mov     ax, 8 ;~ 17C5:0E9F
cs=0x17c5;eip=0x000ea2; 	J(JMP(loc_270d7));	// 84749                  jmp     short loc_270D7 ;~ 17C5:0EA2
loc_270d4:
	// 4932 
cs=0x17c5;eip=0x000ea4; 	T(ax = 0x0B;);	// 84753                  mov     ax, 0Bh ;~ 17C5:0EA4
loc_270d7:
	// 4933 
cs=0x17c5;eip=0x000ea7; 	X(MOV(*(dw*)(raddr(ds,di)), ax));	// 84756                  mov     [di], ax ;~ 17C5:0EA7
cs=0x17c5;eip=0x000ea9; 	T(TEST(si, 0x100));	// 84757                  test    si, 100h ;~ 17C5:0EA9
cs=0x17c5;eip=0x000ead; 	J(JZ(loc_270e3));	// 84758                  jz      short loc_270E3 ;~ 17C5:0EAD
cs=0x17c5;eip=0x000eaf; 	X(MOV(*(dw*)(raddr(ds,di)), 9));	// 84759                  mov     word ptr [di], 9 ;~ 17C5:0EAF
loc_270e3:
	// 4934 
cs=0x17c5;eip=0x000eb3; 	J(JMP(loc_26fd5));	// 84762                  jmp     loc_26FD5 ;~ 17C5:0EB3
loc_270e6:
	// 4935 
cs=0x17c5;eip=0x000eb6; 	T(TEST(*(db*)(&word_49918), 0x7F));	// 84768                  test    byte ptr word_49918, 7Fh ;~ 17C5:0EB6
cs=0x17c5;eip=0x000ebb; 	J(JNZ(loc_2716b));	// 84769                  jnz     short loc_2716B ;~ 17C5:0EBB
cs=0x17c5;eip=0x000ebd; 	T(bx = word_5239a;);	// 84770                  mov     bx, ds:word_5239A ;~ 17C5:0EBD
cs=0x17c5;eip=0x000ec1; 	T(cl = 4;);	// 84771                  mov     cl, 4 ;~ 17C5:0EC1
cs=0x17c5;eip=0x000ec3; 	T(SHL(bx, cl));	// 84772                  shl     bx, cl ;~ 17C5:0EC3
cs=0x17c5;eip=0x000ec5; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x800));	// 84773                  test    word ptr [bx-7E4Ch], 800h ;~ 17C5:0EC5
cs=0x17c5;eip=0x000ecb; 	J(JNZ(loc_27159));	// 84774                  jnz     short loc_27159 ;~ 17C5:0ECB
cs=0x17c5;eip=0x000ecd; 	T(TEST(*(db*)(&word_49918), 0x80));	// 84775                  test    byte ptr word_49918, 80h ;~ 17C5:0ECD
cs=0x17c5;eip=0x000ed2; 	J(JZ(loc_2710a));	// 84776                  jz      short loc_2710A ;~ 17C5:0ED2
cs=0x17c5;eip=0x000ed4; 	T(ax = word_52276;);	// 84777                  mov     ax, ds:word_52276 ;~ 17C5:0ED4
cs=0x17c5;eip=0x000ed7; 	T(DEC(ax));	// 84778                  dec     ax ;~ 17C5:0ED7
cs=0x17c5;eip=0x000ed8; 	J(JMP(loc_27110));	// 84779                  jmp     short loc_27110 ;~ 17C5:0ED8
loc_2710a:
	// 4936 
cs=0x17c5;eip=0x000eda; 	T(ax = word_52276;);	// 84783                  mov     ax, ds:word_52276 ;~ 17C5:0EDA
cs=0x17c5;eip=0x000edd; 	T(SUB(ax, 2));	// 84784                  sub     ax, 2 ;~ 17C5:0EDD
loc_27110:
	// 4937 
cs=0x17c5;eip=0x000ee0; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 84787                  mov     [bp-0Ch], ax ;~ 17C5:0EE0
cs=0x17c5;eip=0x000ee3; 	T(ax = 0x24;);	// 84788                  mov     ax, 24h ; '$' ;~ 17C5:0EE3
cs=0x17c5;eip=0x000ee6; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0C))));	// 84789                  imul    word ptr [bp-0Ch] ;~ 17C5:0EE6
cs=0x17c5;eip=0x000ee9; 	T(bx = ax;);	// 84790                  mov     bx, ax ;~ 17C5:0EE9
cs=0x17c5;eip=0x000eeb; 	T(TEST(*(raddr(ds,bx-0x7696)), 2));	// 84791                  test    byte ptr [bx-7696h], 2 ;~ 17C5:0EEB
cs=0x17c5;eip=0x000ef0; 	J(JNZ(loc_27159));	// 84792                  jnz     short loc_27159 ;~ 17C5:0EF0
cs=0x17c5;eip=0x000ef2; 	X(PUSH(word_5239a));	// 84793                  push    ds:word_5239A ;~ 17C5:0EF2
cs=0x17c5;eip=0x000ef6; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0C))));	// 84794                  push    word ptr [bp-0Ch] ;~ 17C5:0EF6
cs=0x17c5;eip=0x000ef9; 	J(CALL(sub_2da6a,0));	// 84795                  call    sub_2DA6A ;~ 17C5:0EF9
cs=0x17c5;eip=0x000efc; 	T(ADD(sp, 4));	// 84797                  add     sp, 4 ;~ 17C5:0EFC
cs=0x17c5;eip=0x000eff; 	T(ax = 0x24;);	// 84798                  mov     ax, 24h ; '$' ;~ 17C5:0EFF
cs=0x17c5;eip=0x000f02; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0C))));	// 84799                  imul    word ptr [bp-0Ch] ;~ 17C5:0F02
cs=0x17c5;eip=0x000f05; 	T(si = ax;);	// 84800                  mov     si, ax ;~ 17C5:0F05
cs=0x17c5;eip=0x000f07; 	X(MOV(*(dw*)(raddr(ds,si-0x7696)), 0x207));	// 84801                  mov     word ptr [si-7696h], 207h ;~ 17C5:0F07
cs=0x17c5;eip=0x000f0d; 	X(MOV(*(dw*)(raddr(ds,si-0x76A8)), 0x3E8));	// 84802                  mov     word ptr [si-76A8h], 3E8h ;~ 17C5:0F0D
cs=0x17c5;eip=0x000f13; 	X(MOV(*(dw*)(raddr(ds,si-0x7694)), 0x0FA));	// 84803                  mov     word ptr [si-7694h], 0FAh ;~ 17C5:0F13
cs=0x17c5;eip=0x000f19; 	T(ax = 0x3000;);	// 84804                  mov     ax, 3000h ;~ 17C5:0F19
cs=0x17c5;eip=0x000f1c; 	X(IMUL1_2(word_511d8));	// 84805                  imul    ds:word_511D8 ;~ 17C5:0F1C
cs=0x17c5;eip=0x000f20; 	T(CWD);	// 84806                  cwd ;~ 17C5:0F20
cs=0x17c5;eip=0x000f21; 	X(ADD(*(dw*)(raddr(ds,si-0x76A2)), ax));	// 84807                  add     [si-76A2h], ax ;~ 17C5:0F21
cs=0x17c5;eip=0x000f25; 	X(ADC(*(dw*)(raddr(ds,si-0x76A0)), dx));	// 84808                  adc     [si-76A0h], dx ;~ 17C5:0F25
loc_27159:
	// 4938 
cs=0x17c5;eip=0x000f29; 	T(ax = word_521d0;);	// 84812                  mov     ax, ds:word_521D0 ;~ 17C5:0F29
cs=0x17c5;eip=0x000f2c; 	X(word_52244 = ax;);	// 84813                  mov     ds:word_52244, ax ;~ 17C5:0F2C
cs=0x17c5;eip=0x000f2f; 	T(ax = word_52104;);	// 84814                  mov     ax, ds:word_52104 ;~ 17C5:0F2F
cs=0x17c5;eip=0x000f32; 	X(word_521d0 = ax;);	// 84815                  mov     ds:word_521D0, ax ;~ 17C5:0F32
cs=0x17c5;eip=0x000f35; 	X(word_52104 = 0;);	// 84816                  mov     ds:word_52104, 0 ;~ 17C5:0F35
loc_2716b:
	// 4939 
cs=0x17c5;eip=0x000f3b; 	T(CMP(word_4f21e, 0x200));	// 84821                  cmp     ds:word_4F21E, 200h ;~ 17C5:0F3B
cs=0x17c5;eip=0x000f41; 	J(JL(loc_2717f));	// 84822                  jl      short loc_2717F ;~ 17C5:0F41
cs=0x17c5;eip=0x000f43; 	T(ax = word_4e2fe;);	// 84823                  mov     ax, ds:word_4E2FE ;~ 17C5:0F43
cs=0x17c5;eip=0x000f46; 	T(CMP(word_520ee, ax));	// 84824                  cmp     ds:word_520EE, ax ;~ 17C5:0F46
cs=0x17c5;eip=0x000f4a; 	J(JZ(loc_2717f));	// 84825                  jz      short loc_2717F ;~ 17C5:0F4A
cs=0x17c5;eip=0x000f4c; 	J(return _group16(m2c::kloc_274bd, _state););	// 84826                  jmp     loc_274BD ;~ 17C5:0F4C
loc_2717f:
	// 4940 
cs=0x17c5;eip=0x000f4f; 	X(word_520ee = 0;);	// 84831                  mov     ds:word_520EE, 0 ;~ 17C5:0F4F
cs=0x17c5;eip=0x000f55; 	X(word_4f22c = 0x0A0;);	// 84832                  mov     ds:word_4F22C, 0A0h ;~ 17C5:0F55
cs=0x17c5;eip=0x000f5b; 	X(word_4f430 = 0x800;);	// 84833                  mov     ds:word_4F430, 800h ;~ 17C5:0F5B
cs=0x17c5;eip=0x000f61; 	T(bx = word_5239a;);	// 84834                  mov     bx, ds:word_5239A ;~ 17C5:0F61
cs=0x17c5;eip=0x000f65; 	T(cl = 4;);	// 84835                  mov     cl, 4 ;~ 17C5:0F65
cs=0x17c5;eip=0x000f67; 	T(SHL(bx, cl));	// 84836                  shl     bx, cl ;~ 17C5:0F67
cs=0x17c5;eip=0x000f69; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x800));	// 84837                  test    word ptr [bx-7E4Ch], 800h ;~ 17C5:0F69
cs=0x17c5;eip=0x000f6f; 	J(JZ(loc_271a7));	// 84838                  jz      short loc_271A7 ;~ 17C5:0F6F
cs=0x17c5;eip=0x000f71; 	X(word_4f430 = 0x400;);	// 84839                  mov     ds:word_4F430, 400h ;~ 17C5:0F71
loc_271a7:
	// 4941 
cs=0x17c5;eip=0x000f77; 	T(si = word_5239a;);	// 84842                  mov     si, ds:word_5239A ;~ 17C5:0F77
cs=0x17c5;eip=0x000f7b; 	T(cl = 4;);	// 84843                  mov     cl, 4 ;~ 17C5:0F7B
cs=0x17c5;eip=0x000f7d; 	T(SHL(si, cl));	// 84844                  shl     si, cl ;~ 17C5:0F7D
cs=0x17c5;eip=0x000f7f; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x200));	// 84845                  test    word ptr [si-7E4Ch], 200h ;~ 17C5:0F7F
cs=0x17c5;eip=0x000f85; 	J(JZ(loc_2721f));	// 84846                  jz      short loc_2721F ;~ 17C5:0F85
cs=0x17c5;eip=0x000f87; 	X(word_520ee = 0x80;);	// 84847                  mov     ds:word_520EE, 80h ;~ 17C5:0F87
cs=0x17c5;eip=0x000f8d; 	X(word_4f22c = 0x100;);	// 84848                  mov     ds:word_4F22C, 100h ;~ 17C5:0F8D
cs=0x17c5;eip=0x000f93; 	X(word_4f430 = 0x3C0;);	// 84849                  mov     ds:word_4F430, 3C0h ;~ 17C5:0F93
cs=0x17c5;eip=0x000f99; 	T(CMP(word_4e2fe, 0x80));	// 84850                  cmp     ds:word_4E2FE, 80h ;~ 17C5:0F99
cs=0x17c5;eip=0x000f9f; 	J(JNZ(loc_2721f));	// 84851                  jnz     short loc_2721F ;~ 17C5:0F9F
cs=0x17c5;eip=0x000fa1; 	T(CMP(word_50c8a, 0x50));	// 84852                  cmp     ds:word_50C8A, 50h ; 'P' ;~ 17C5:0FA1
cs=0x17c5;eip=0x000fa6; 	J(JLE(loc_2721f));	// 84853                  jle     short loc_2721F ;~ 17C5:0FA6
cs=0x17c5;eip=0x000fa8; 	T(ax = word_52100;);	// 84854                  mov     ax, ds:word_52100 ;~ 17C5:0FA8
cs=0x17c5;eip=0x000fab; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 84855                  sub     ax, [si-7E50h] ;~ 17C5:0FAB
cs=0x17c5;eip=0x000faf; 	X(MUL1_2(word_511d8));	// 84856                  mul     ds:word_511D8 ;~ 17C5:0FAF
cs=0x17c5;eip=0x000fb3; 	T(di = ax;);	// 84857                  mov     di, ax ;~ 17C5:0FB3
cs=0x17c5;eip=0x000fb5; 	T(CMP(di, 0x10));	// 84858                  cmp     di, 10h ;~ 17C5:0FB5
cs=0x17c5;eip=0x000fb8; 	J(JC(loc_2721f));	// 84859                  jb      short loc_2721F ;~ 17C5:0FB8
cs=0x17c5;eip=0x000fba; 	T(CMP(di, 0x14));	// 84860                  cmp     di, 14h ;~ 17C5:0FBA
cs=0x17c5;eip=0x000fbd; 	J(JA(loc_2721f));	// 84861                  ja      short loc_2721F ;~ 17C5:0FBD
cs=0x17c5;eip=0x000fbf; 	T(ax = word_4e2f8;);	// 84862                  mov     ax, ds:word_4E2F8 ;~ 17C5:0FBF
cs=0x17c5;eip=0x000fc2; 	T(dx = 1;);	// 84863                  mov     dx, 1 ;~ 17C5:0FC2
cs=0x17c5;eip=0x000fc5; 	T(SUB(dx, word_511d8));	// 84864                  sub     dx, ds:word_511D8 ;~ 17C5:0FC5
cs=0x17c5;eip=0x000fc9; 	T(cl = 0x0E;);	// 84865                  mov     cl, 0Eh ;~ 17C5:0FC9
cs=0x17c5;eip=0x000fcb; 	T(SHL(dx, cl));	// 84866                  shl     dx, cl ;~ 17C5:0FCB
cs=0x17c5;eip=0x000fcd; 	T(SUB(ax, dx));	// 84867                  sub     ax, dx ;~ 17C5:0FCD
cs=0x17c5;eip=0x000fcf; 	X(PUSH(ax));	// 84868                  push    ax ;~ 17C5:0FCF
cs=0x17c5;eip=0x000fd0; 	J(CALL(sub_34dc0,0));	// 84869                  call    sub_34DC0 ;~ 17C5:0FD0
cs=0x17c5;eip=0x000fd3; 	T(ADD(sp, 2));	// 84870                  add     sp, 2 ;~ 17C5:0FD3
cs=0x17c5;eip=0x000fd6; 	T(CMP(ax, 0x2000));	// 84871                  cmp     ax, 2000h ;~ 17C5:0FD6
cs=0x17c5;eip=0x000fd9; 	J(JGE(loc_2721f));	// 84872                  jge     short loc_2721F ;~ 17C5:0FD9
cs=0x17c5;eip=0x000fdb; 	X(word_4f20e = 1;);	// 84874                  mov     ds:word_4F20E, 1 ;~ 17C5:0FDB
cs=0x17c5;eip=0x000fe1; 	T(ax = 2;);	// 84875                  mov     ax, 2 ;~ 17C5:0FE1
cs=0x17c5;eip=0x000fe4; 	X(PUSH(ax));	// 84876                  push    ax ;~ 17C5:0FE4
cs=0x17c5;eip=0x000fe5; 	T(ax = 0x16;);	// 84877                  mov     ax, 16h ;~ 17C5:0FE5
cs=0x17c5;eip=0x000fe8; 	X(PUSH(ax));	// 84878                  push    ax ;~ 17C5:0FE8
cs=0x17c5;eip=0x000fe9; 	J(CALL(sub_33c65,0));	// 84879                  call    sub_33C65 ;~ 17C5:0FE9
cs=0x17c5;eip=0x000fec; 	T(ADD(sp, 4));	// 84881                  add     sp, 4 ;~ 17C5:0FEC
loc_2721f:
	// 4942 
cs=0x17c5;eip=0x000fef; 	T(LES(bx, dword_4f220));	// 84886                  les     bx, ds:dword_4F220 ;~ 17C5:0FEF
cs=0x17c5;eip=0x000ff3; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 1));	// 84887                  cmp     word ptr es:[bx+40h], 1 ;~ 17C5:0FF3
cs=0x17c5;eip=0x000ff8; 	J(JNZ(loc_27234));	// 84888                  jnz     short loc_27234 ;~ 17C5:0FF8
cs=0x17c5;eip=0x000ffa; 	X(ADD(*(db*)(((db*)&word_4f22c)+1), 1));	// 84889                  add     byte ptr ds:word_4F22C+1, 1 ;~ 17C5:0FFA
cs=0x17c5;eip=0x000fff; 	X(ADD(*(db*)(((db*)&word_4f430)+1), 2));	// 84890                  add     byte ptr ds:word_4F430+1, 2 ;~ 17C5:0FFF
loc_27234:
	// 4943 
cs=0x17c5;eip=0x001004; 	T(ax = word_520f0;);	// 84893                  mov     ax, ds:word_520F0 ;~ 17C5:1004
cs=0x17c5;eip=0x001007; 	T(bx = word_5239a;);	// 84894                  mov     bx, ds:word_5239A ;~ 17C5:1007
cs=0x17c5;eip=0x00100b; 	T(cl = 4;);	// 84895                  mov     cl, 4 ;~ 17C5:100B
cs=0x17c5;eip=0x00100d; 	T(SHL(bx, cl));	// 84896                  shl     bx, cl ;~ 17C5:100D
cs=0x17c5;eip=0x00100f; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x7E52))));	// 84897                  sub     ax, [bx-7E52h] ;~ 17C5:100F
cs=0x17c5;eip=0x001013; 	X(PUSH(ax));	// 84898                  push    ax ;~ 17C5:1013
cs=0x17c5;eip=0x001014; 	J(CALL(sub_34dc0,0));	// 84899                  call    sub_34DC0 ;~ 17C5:1014
cs=0x17c5;eip=0x001017; 	T(ADD(sp, 2));	// 84900                  add     sp, 2 ;~ 17C5:1017
cs=0x17c5;eip=0x00101a; 	T(dx = word_4f22c;);	// 84901                  mov     dx, ds:word_4F22C ;~ 17C5:101A
cs=0x17c5;eip=0x00101e; 	T(cl = 5;);	// 84902                  mov     cl, 5 ;~ 17C5:101E
cs=0x17c5;eip=0x001020; 	T(SAR(dx, cl));	// 84903                  sar     dx, cl ;~ 17C5:1020
cs=0x17c5;eip=0x001022; 	T(CMP(ax, dx));	// 84904                  cmp     ax, dx ;~ 17C5:1022
cs=0x17c5;eip=0x001024; 	J(JG(loc_27278));	// 84905                  jg      short loc_27278 ;~ 17C5:1024
cs=0x17c5;eip=0x001026; 	T(ax = word_52100;);	// 84906                  mov     ax, ds:word_52100 ;~ 17C5:1026
cs=0x17c5;eip=0x001029; 	T(bx = word_5239a;);	// 84907                  mov     bx, ds:word_5239A ;~ 17C5:1029
cs=0x17c5;eip=0x00102d; 	T(cl = 4;);	// 84908                  mov     cl, 4 ;~ 17C5:102D
cs=0x17c5;eip=0x00102f; 	T(SHL(bx, cl));	// 84909                  shl     bx, cl ;~ 17C5:102F
cs=0x17c5;eip=0x001031; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x7E50))));	// 84910                  sub     ax, [bx-7E50h] ;~ 17C5:1031
cs=0x17c5;eip=0x001035; 	X(PUSH(ax));	// 84911                  push    ax ;~ 17C5:1035
cs=0x17c5;eip=0x001036; 	J(CALL(sub_34dc0,0));	// 84912                  call    sub_34DC0 ;~ 17C5:1036
cs=0x17c5;eip=0x001039; 	T(ADD(sp, 2));	// 84913                  add     sp, 2 ;~ 17C5:1039
cs=0x17c5;eip=0x00103c; 	T(dx = word_4f430;);	// 84914                  mov     dx, ds:word_4F430 ;~ 17C5:103C
cs=0x17c5;eip=0x001040; 	T(cl = 5;);	// 84915                  mov     cl, 5 ;~ 17C5:1040
cs=0x17c5;eip=0x001042; 	T(SAR(dx, cl));	// 84916                  sar     dx, cl ;~ 17C5:1042
cs=0x17c5;eip=0x001044; 	T(CMP(ax, dx));	// 84917                  cmp     ax, dx ;~ 17C5:1044
cs=0x17c5;eip=0x001046; 	J(JLE(loc_27287));	// 84918                  jle     short loc_27287 ;~ 17C5:1046
loc_27278:
	// 4944 
cs=0x17c5;eip=0x001048; 	X(word_520ee = 0;);	// 84921                  mov     ds:word_520EE, 0 ;~ 17C5:1048
cs=0x17c5;eip=0x00104e; 	X(word_49932 = 0;);	// 84922                  mov     word_49932, 0 ;~ 17C5:104E
cs=0x17c5;eip=0x001054; 	J(JMP(loc_27362));	// 84923                  jmp     loc_27362 ;~ 17C5:1054
loc_27287:
	// 4945 
cs=0x17c5;eip=0x001057; 	X(word_49932 = 1;);	// 84927                  mov     word_49932, 1 ;~ 17C5:1057
cs=0x17c5;eip=0x00105d; 	T(CMP(word_50c8a, 1));	// 84928                  cmp     ds:word_50C8A, 1 ;~ 17C5:105D
cs=0x17c5;eip=0x001062; 	J(JLE(loc_27297));	// 84929                  jle     short loc_27297 ;~ 17C5:1062
cs=0x17c5;eip=0x001064; 	J(JMP(loc_27362));	// 84930                  jmp     loc_27362 ;~ 17C5:1064
loc_27297:
	// 4946 
cs=0x17c5;eip=0x001067; 	T(TEST(*(db*)(&word_49918), 7));	// 84934                  test    byte ptr word_49918, 7 ;~ 17C5:1067
cs=0x17c5;eip=0x00106c; 	J(JZ(loc_272a1));	// 84935                  jz      short loc_272A1 ;~ 17C5:106C
cs=0x17c5;eip=0x00106e; 	J(JMP(loc_27362));	// 84936                  jmp     loc_27362 ;~ 17C5:106E
loc_272a1:
	// 4947 
cs=0x17c5;eip=0x001071; 	T(bx = word_5239a;);	// 84940                  mov     bx, ds:word_5239A ;~ 17C5:1071
cs=0x17c5;eip=0x001075; 	T(cl = 4;);	// 84941                  mov     cl, 4 ;~ 17C5:1075
cs=0x17c5;eip=0x001077; 	T(SHL(bx, cl));	// 84942                  shl     bx, cl ;~ 17C5:1077
cs=0x17c5;eip=0x001079; 	T(MOV(si, *(dw*)(raddr(ds,bx-0x7E4C))));	// 84943                  mov     si, [bx-7E4Ch] ;~ 17C5:1079
cs=0x17c5;eip=0x00107d; 	T(TEST(si, 0x500));	// 84944                  test    si, 500h ;~ 17C5:107D
cs=0x17c5;eip=0x001081; 	J(JNZ(loc_272b6));	// 84945                  jnz     short loc_272B6 ;~ 17C5:1081
cs=0x17c5;eip=0x001083; 	J(JMP(loc_27362));	// 84946                  jmp     loc_27362 ;~ 17C5:1083
loc_272b6:
	// 4948 
cs=0x17c5;eip=0x001086; 	T(CMP(word_49944, 0));	// 84950                  cmp     word_49944, 0 ;~ 17C5:1086
cs=0x17c5;eip=0x00108b; 	J(JNZ(loc_272c0));	// 84951                  jnz     short loc_272C0 ;~ 17C5:108B
cs=0x17c5;eip=0x00108d; 	J(JMP(loc_27362));	// 84952                  jmp     loc_27362 ;~ 17C5:108D
loc_272c0:
	// 4949 
cs=0x17c5;eip=0x001090; 	T(TEST(si, 0x800));	// 84956                  test    si, 800h ;~ 17C5:1090
cs=0x17c5;eip=0x001094; 	J(JZ(loc_272c9));	// 84957                  jz      short loc_272C9 ;~ 17C5:1094
cs=0x17c5;eip=0x001096; 	J(JMP(loc_27362));	// 84958                  jmp     loc_27362 ;~ 17C5:1096
loc_272c9:
	// 4950 
cs=0x17c5;eip=0x001099; 	X(word_4991c = 1;);	// 84962                  mov     word_4991C, 1 ;~ 17C5:1099
cs=0x17c5;eip=0x00109f; 	X(word_49936 = 1;);	// 84963                  mov     word_49936, 1 ;~ 17C5:109F
cs=0x17c5;eip=0x0010a5; 	T(ax = word_49944;);	// 84964                  mov     ax, word_49944 ;~ 17C5:10A5
cs=0x17c5;eip=0x0010a8; 	X(INC(word_49944));	// 84965                  inc     word_49944 ;~ 17C5:10A8
cs=0x17c5;eip=0x0010ac; 	T(CMP(ax, 1));	// 84966                  cmp     ax, 1 ;~ 17C5:10AC
cs=0x17c5;eip=0x0010af; 	J(JNZ(loc_27301));	// 84967                  jnz     short loc_27301 ;~ 17C5:10AF
cs=0x17c5;eip=0x0010b1; 	T(ax = 0x124;);	// 84968                  mov     ax, 124h ;~ 17C5:10B1
cs=0x17c5;eip=0x0010b4; 	X(PUSH(ax));	// 84969                  push    ax ;~ 17C5:10B4
cs=0x17c5;eip=0x0010b5; 	J(CALL(sub_30414,0));	// 84970                  call    sub_30414 ;~ 17C5:10B5
cs=0x17c5;eip=0x0010b8; 	T(ADD(sp, 2));	// 84971                  add     sp, 2 ;~ 17C5:10B8
cs=0x17c5;eip=0x0010bb; 	X(word_492e6 = 0;);	// 84972                  mov     word_492E6, 0 ;~ 17C5:10BB
cs=0x17c5;eip=0x0010c1; 	X(word_49942 = 0;);	// 84973                  mov     word_49942, 0 ;~ 17C5:10C1
cs=0x17c5;eip=0x0010c7; 	T(ax = 4;);	// 84974                  mov     ax, 4 ;~ 17C5:10C7
cs=0x17c5;eip=0x0010ca; 	X(PUSH(ax));	// 84975                  push    ax ;~ 17C5:10CA
cs=0x17c5;eip=0x0010cb; 	J(CALL(sub_33c8f,0));	// 84976                  call    sub_33C8F ;~ 17C5:10CB
cs=0x17c5;eip=0x0010ce; 	T(ADD(sp, 2));	// 84977                  add     sp, 2 ;~ 17C5:10CE
loc_27301:
	// 4951 
cs=0x17c5;eip=0x0010d1; 	T(ax = word_4f42e;);	// 84980                  mov     ax, ds:word_4F42E ;~ 17C5:10D1
cs=0x17c5;eip=0x0010d4; 	T(AND(ax, 0x6000));	// 84981                  and     ax, 6000h ;~ 17C5:10D4
cs=0x17c5;eip=0x0010d7; 	T(CMP(ax, 0x6000));	// 84982                  cmp     ax, 6000h ;~ 17C5:10D7
cs=0x17c5;eip=0x0010da; 	J(JNZ(loc_27320));	// 84983                  jnz     short loc_27320 ;~ 17C5:10DA
cs=0x17c5;eip=0x0010dc; 	T(ax = word_492f4;);	// 84984                  mov     ax, word_492F4 ;~ 17C5:10DC
cs=0x17c5;eip=0x0010df; 	T(CMP(word_49944, ax));	// 84985                  cmp     word_49944, ax ;~ 17C5:10DF
cs=0x17c5;eip=0x0010e3; 	J(JLE(loc_2731e));	// 84986                  jle     short loc_2731E ;~ 17C5:10E3
cs=0x17c5;eip=0x0010e5; 	T(SUB(ax, ax));	// 84987                  sub     ax, ax ;~ 17C5:10E5
cs=0x17c5;eip=0x0010e7; 	X(PUSH(ax));	// 84988                  push    ax ;~ 17C5:10E7
cs=0x17c5;eip=0x0010e8; 	J(CALL(sub_27d67,0));	// 84989                  call    sub_27D67 ;~ 17C5:10E8
cs=0x17c5;eip=0x0010eb; 	T(ADD(sp, 2));	// 84990                  add     sp, 2 ;~ 17C5:10EB
loc_2731e:
	// 4952 
cs=0x17c5;eip=0x0010ee; 	J(JMP(loc_27362));	// 84993                  jmp     short loc_27362 ;~ 17C5:10EE
loc_27320:
	// 4953 
cs=0x17c5;eip=0x0010f0; 	T(CMP(word_49944, 2));	// 84997                  cmp     word_49944, 2 ;~ 17C5:10F0
cs=0x17c5;eip=0x0010f5; 	J(JNZ(loc_27339));	// 84998                  jnz     short loc_27339 ;~ 17C5:10F5
cs=0x17c5;eip=0x0010f7; 	X(INC(word_49940));	// 84999                  inc     word_49940 ;~ 17C5:10F7
cs=0x17c5;eip=0x0010fb; 	X(PUSH(word_5239a));	// 85000                  push    ds:word_5239A ;~ 17C5:10FB
cs=0x17c5;eip=0x0010ff; 	T(ax = 0x0A;);	// 85001                  mov     ax, 0Ah ;~ 17C5:10FF
cs=0x17c5;eip=0x001102; 	X(PUSH(ax));	// 85002                  push    ax ;~ 17C5:1102
cs=0x17c5;eip=0x001103; 	J(CALL(sub_27f40,0));	// 85003                  call    sub_27F40 ;~ 17C5:1103
cs=0x17c5;eip=0x001106; 	T(ADD(sp, 4));	// 85004                  add     sp, 4 ;~ 17C5:1106
loc_27339:
	// 4954 
cs=0x17c5;eip=0x001109; 	T(ax = word_492f4;);	// 85007                  mov     ax, word_492F4 ;~ 17C5:1109
cs=0x17c5;eip=0x00110c; 	T(CMP(word_49944, ax));	// 85008                  cmp     word_49944, ax ;~ 17C5:110C
cs=0x17c5;eip=0x001110; 	J(JLE(loc_27362));	// 85009                  jle     short loc_27362 ;~ 17C5:1110
cs=0x17c5;eip=0x001112; 	J(CALL(sub_27bd3,0));	// 85010                  call    sub_27BD3 ;~ 17C5:1112
cs=0x17c5;eip=0x001115; 	T(TEST(*(db*)(&word_49918), 8));	// 85011                  test    byte ptr word_49918, 8 ;~ 17C5:1115
cs=0x17c5;eip=0x00111a; 	J(JZ(loc_27358));	// 85012                  jz      short loc_27358 ;~ 17C5:111A
cs=0x17c5;eip=0x00111c; 	T(ax = 0x131;);	// 85013                  mov     ax, 131h ;~ 17C5:111C
cs=0x17c5;eip=0x00111f; 	X(PUSH(ax));	// 85014                  push    ax ;~ 17C5:111F
cs=0x17c5;eip=0x001120; 	J(CALL(sub_30414,0));	// 85015                  call    sub_30414 ;~ 17C5:1120
cs=0x17c5;eip=0x001123; 	T(ADD(sp, 2));	// 85016                  add     sp, 2 ;~ 17C5:1123
cs=0x17c5;eip=0x001126; 	J(JMP(loc_27362));	// 85017                  jmp     short loc_27362 ;~ 17C5:1126
loc_27358:
	// 4955 
cs=0x17c5;eip=0x001128; 	T(ax = 0x143;);	// 85021                  mov     ax, 143h ;~ 17C5:1128
cs=0x17c5;eip=0x00112b; 	X(PUSH(ax));	// 85022                  push    ax ;~ 17C5:112B
cs=0x17c5;eip=0x00112c; 	J(CALL(sub_30414,0));	// 85023                  call    sub_30414 ;~ 17C5:112C
cs=0x17c5;eip=0x00112f; 	T(ADD(sp, 2));	// 85024                  add     sp, 2 ;~ 17C5:112F
loc_27362:
	// 4956 
cs=0x17c5;eip=0x001132; 	T(CMP(word_49936, 0));	// 85028                  cmp     word_49936, 0 ;~ 17C5:1132
cs=0x17c5;eip=0x001137; 	J(JZ(loc_2736c));	// 85029                  jz      short loc_2736C ;~ 17C5:1137
cs=0x17c5;eip=0x001139; 	J(JMP(loc_274bb));	// 85030                  jmp     loc_274BB ;~ 17C5:1139
loc_2736c:
	// 4957 
cs=0x17c5;eip=0x00113c; 	T(CMP(word_492e8, 0));	// 85034                  cmp     word_492E8, 0 ;~ 17C5:113C
cs=0x17c5;eip=0x001141; 	J(JZ(loc_27376));	// 85035                  jz      short loc_27376 ;~ 17C5:1141
cs=0x17c5;eip=0x001143; 	J(JMP(loc_274bb));	// 85036                  jmp     loc_274BB ;~ 17C5:1143
loc_27376:
	// 4958 
cs=0x17c5;eip=0x001146; 	T(TEST(word_4f42e, 0x6000));	// 85040                  test    ds:word_4F42E, 6000h ;~ 17C5:1146
cs=0x17c5;eip=0x00114c; 	J(JNZ(loc_27381));	// 85041                  jnz     short loc_27381 ;~ 17C5:114C
cs=0x17c5;eip=0x00114e; 	J(JMP(loc_274bb));	// 85042                  jmp     loc_274BB ;~ 17C5:114E
loc_27381:
	// 4959 
cs=0x17c5;eip=0x001151; 	T(ax = word_520f0;);	// 85046                  mov     ax, ds:word_520F0 ;~ 17C5:1151
cs=0x17c5;eip=0x001154; 	T(bx = word_5239a;);	// 85047                  mov     bx, ds:word_5239A ;~ 17C5:1154
cs=0x17c5;eip=0x001158; 	T(cl = 4;);	// 85048                  mov     cl, 4 ;~ 17C5:1158
cs=0x17c5;eip=0x00115a; 	T(SHL(bx, cl));	// 85049                  shl     bx, cl ;~ 17C5:115A
cs=0x17c5;eip=0x00115c; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x7E52))));	// 85050                  sub     ax, [bx-7E52h] ;~ 17C5:115C
cs=0x17c5;eip=0x001160; 	X(PUSH(ax));	// 85051                  push    ax ;~ 17C5:1160
cs=0x17c5;eip=0x001161; 	J(CALL(sub_34dc0,0));	// 85052                  call    sub_34DC0 ;~ 17C5:1161
cs=0x17c5;eip=0x001164; 	T(ADD(sp, 2));	// 85053                  add     sp, 2 ;~ 17C5:1164
cs=0x17c5;eip=0x001167; 	T(CMP(ax, 0x10));	// 85054                  cmp     ax, 10h ;~ 17C5:1167
cs=0x17c5;eip=0x00116a; 	J(JGE(loc_27402));	// 85055                  jge     short loc_27402 ;~ 17C5:116A
cs=0x17c5;eip=0x00116c; 	T(ax = word_52100;);	// 85056                  mov     ax, ds:word_52100 ;~ 17C5:116C
cs=0x17c5;eip=0x00116f; 	T(bx = word_5239a;);	// 85057                  mov     bx, ds:word_5239A ;~ 17C5:116F
cs=0x17c5;eip=0x001173; 	T(cl = 4;);	// 85058                  mov     cl, 4 ;~ 17C5:1173
cs=0x17c5;eip=0x001175; 	T(SHL(bx, cl));	// 85059                  shl     bx, cl ;~ 17C5:1175
cs=0x17c5;eip=0x001177; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x7E50))));	// 85060                  sub     ax, [bx-7E50h] ;~ 17C5:1177
cs=0x17c5;eip=0x00117b; 	X(PUSH(ax));	// 85061                  push    ax ;~ 17C5:117B
cs=0x17c5;eip=0x00117c; 	J(CALL(sub_34dc0,0));	// 85062                  call    sub_34DC0 ;~ 17C5:117C
cs=0x17c5;eip=0x00117f; 	T(ADD(sp, 2));	// 85063                  add     sp, 2 ;~ 17C5:117F
cs=0x17c5;eip=0x001182; 	T(CMP(ax, 0x10));	// 85064                  cmp     ax, 10h ;~ 17C5:1182
cs=0x17c5;eip=0x001185; 	J(JGE(loc_27402));	// 85065                  jge     short loc_27402 ;~ 17C5:1185
cs=0x17c5;eip=0x001187; 	T(SUB(ax, ax));	// 85066                  sub     ax, ax ;~ 17C5:1187
cs=0x17c5;eip=0x001189; 	X(word_4e300 = ax;);	// 85067                  mov     ds:word_4E300, ax ;~ 17C5:1189
cs=0x17c5;eip=0x00118c; 	X(word_50b74 = ax;);	// 85068                  mov     ds:word_50B74, ax ;~ 17C5:118C
cs=0x17c5;eip=0x00118f; 	X(word_4e310 = ax;);	// 85069                  mov     ds:word_4E310, ax ;~ 17C5:118F
cs=0x17c5;eip=0x001192; 	T(si = word_5239a;);	// 85070                  mov     si, ds:word_5239A ;~ 17C5:1192
cs=0x17c5;eip=0x001196; 	T(cl = 4;);	// 85071                  mov     cl, 4 ;~ 17C5:1196
cs=0x17c5;eip=0x001198; 	T(SHL(si, cl));	// 85072                  shl     si, cl ;~ 17C5:1198
cs=0x17c5;eip=0x00119a; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 85073                  mov     ax, [si-7E52h] ;~ 17C5:119A
cs=0x17c5;eip=0x00119e; 	T(SUB(dx, dx));	// 85074                  sub     dx, dx ;~ 17C5:119E
cs=0x17c5;eip=0x0011a0; 	T(cl = 5;);	// 85075                  mov     cl, 5 ;~ 17C5:11A0
loc_273d2:
	// 4960 
cs=0x17c5;eip=0x0011a2; 	T(SHL(ax, 1));	// 85078                  shl     ax, 1 ;~ 17C5:11A2
cs=0x17c5;eip=0x0011a4; 	T(RCL(dx, 1));	// 85079                  rcl     dx, 1 ;~ 17C5:11A4
cs=0x17c5;eip=0x0011a6; 	T(DEC(cl));	// 85080                  dec     cl ;~ 17C5:11A6
cs=0x17c5;eip=0x0011a8; 	J(JZ(loc_273dc));	// 85081                  jz      short loc_273DC ;~ 17C5:11A8
cs=0x17c5;eip=0x0011aa; 	J(JMP(loc_273d2));	// 85082                  jmp     short loc_273D2 ;~ 17C5:11AA
loc_273dc:
	// 4961 
cs=0x17c5;eip=0x0011ac; 	X(word_51a0a = ax;);	// 85086                  mov     ds:word_51A0A, ax ;~ 17C5:11AC
cs=0x17c5;eip=0x0011af; 	X(word_51a0c = dx;);	// 85087                  mov     ds:word_51A0C, dx ;~ 17C5:11AF
cs=0x17c5;eip=0x0011b3; 	T(ax = 0x8000;);	// 85088                  mov     ax, 8000h ;~ 17C5:11B3
cs=0x17c5;eip=0x0011b6; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 85089                  sub     ax, [si-7E50h] ;~ 17C5:11B6
sub_273ea:
	// 85096 
cs=0x17c5;eip=0x0011ba; 	T(SUB(dx, dx));	// 85097                  sub     dx, dx ;~ 17C5:11BA
cs=0x17c5;eip=0x0011bc; 	T(cl = 5;);	// 85098                  mov     cl, 5 ;~ 17C5:11BC
loc_273ee:
	// 4962 
cs=0x17c5;eip=0x0011be; 	T(SHL(ax, 1));	// 85101                  shl     ax, 1 ;~ 17C5:11BE
cs=0x17c5;eip=0x0011c0; 	T(RCL(dx, 1));	// 85102                  rcl     dx, 1 ;~ 17C5:11C0
cs=0x17c5;eip=0x0011c2; 	T(DEC(cl));	// 85103                  dec     cl ;~ 17C5:11C2
cs=0x17c5;eip=0x0011c4; 	J(JZ(loc_273f8));	// 85104                  jz      short loc_273F8 ;~ 17C5:11C4
cs=0x17c5;eip=0x0011c6; 	J(JMP(loc_273ee));	// 85105                  jmp     short loc_273EE ;~ 17C5:11C6
loc_273f8:
	// 4963 
cs=0x17c5;eip=0x0011c8; 	X(word_51a28 = ax;);	// 85109                  mov     ds:word_51A28, ax ;~ 17C5:11C8
cs=0x17c5;eip=0x0011cb; 	X(word_51a2a = dx;);	// 85110                  mov     ds:word_51A2A, dx ;~ 17C5:11CB
cs=0x17c5;eip=0x0011cf; 	J(JMP(loc_274bb));	// 85111                  jmp     loc_274BB ;~ 17C5:11CF
loc_27402:
	// 4964 
cs=0x17c5;eip=0x0011d2; 	T(ax = 0x157;);	// 85116                  mov     ax, 157h ;~ 17C5:11D2
cs=0x17c5;eip=0x0011d5; 	X(PUSH(ax));	// 85117                  push    ax ;~ 17C5:11D5
cs=0x17c5;eip=0x0011d6; 	J(CALL(sub_30414,0));	// 85118                  call    sub_30414 ;~ 17C5:11D6
cs=0x17c5;eip=0x0011d9; 	T(ADD(sp, 2));	// 85119                  add     sp, 2 ;~ 17C5:11D9
cs=0x17c5;eip=0x0011dc; 	X(word_49942 = 1;);	// 85120                  mov     word_49942, 1 ;~ 17C5:11DC
cs=0x17c5;eip=0x0011e2; 	T(ax = word_492f4;);	// 85121                  mov     ax, word_492F4 ;~ 17C5:11E2
cs=0x17c5;eip=0x0011e5; 	T(SHL(ax, 1));	// 85122                  shl     ax, 1 ;~ 17C5:11E5
cs=0x17c5;eip=0x0011e7; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 85123                  mov     [bp-0Ah], ax ;~ 17C5:11E7
cs=0x17c5;eip=0x0011ea; 	T(CMP(ax, 0x0E));	// 85124                  cmp     ax, 0Eh ;~ 17C5:11EA
cs=0x17c5;eip=0x0011ed; 	J(JLE(loc_27424));	// 85125                  jle     short loc_27424 ;~ 17C5:11ED
cs=0x17c5;eip=0x0011ef; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 0x0E));	// 85126                  mov     word ptr [bp-0Ah], 0Eh ;~ 17C5:11EF
loc_27424:
	// 4965 
cs=0x17c5;eip=0x0011f4; 	X(word_50b74 = 0x1518;);	// 85129                  mov     ds:word_50B74, 1518h ;~ 17C5:11F4
cs=0x17c5;eip=0x0011fa; 	T(ax = word_4e300;);	// 85130                  mov     ax, ds:word_4E300 ;~ 17C5:11FA
cs=0x17c5;eip=0x0011fd; 	T(SUB(ax, word_520ee));	// 85131                  sub     ax, ds:word_520EE ;~ 17C5:11FD
cs=0x17c5;eip=0x001201; 	T(SUB(dx, dx));	// 85132                  sub     dx, dx ;~ 17C5:1201
cs=0x17c5;eip=0x001203; 	X(DIV2(*(dw*)(raddr(ss,bp-0x0A))));	// 85133                  div     word ptr [bp-0Ah] ;~ 17C5:1203
cs=0x17c5;eip=0x001206; 	X(SUB(word_4e300, ax));	// 85134                  sub     ds:word_4E300, ax ;~ 17C5:1206
cs=0x17c5;eip=0x00120a; 	T(ax = word_520ee;);	// 85135                  mov     ax, ds:word_520EE ;~ 17C5:120A
cs=0x17c5;eip=0x00120d; 	T(ADD(ax, 5));	// 85136                  add     ax, 5 ;~ 17C5:120D
cs=0x17c5;eip=0x001210; 	T(si = ax;);	// 85137                  mov     si, ax ;~ 17C5:1210
cs=0x17c5;eip=0x001212; 	T(CMP(word_4e300, si));	// 85138                  cmp     ds:word_4E300, si ;~ 17C5:1212
cs=0x17c5;eip=0x001216; 	J(JNC(loc_2744c));	// 85139                  jnb     short loc_2744C ;~ 17C5:1216
cs=0x17c5;eip=0x001218; 	X(word_4e300 = si;);	// 85140                  mov     ds:word_4E300, si ;~ 17C5:1218
loc_2744c:
	// 4966 
cs=0x17c5;eip=0x00121c; 	T(si = word_5239a;);	// 85143                  mov     si, ds:word_5239A ;~ 17C5:121C
cs=0x17c5;eip=0x001220; 	T(cl = 4;);	// 85144                  mov     cl, 4 ;~ 17C5:1220
cs=0x17c5;eip=0x001222; 	T(SHL(si, cl));	// 85145                  shl     si, cl ;~ 17C5:1222
cs=0x17c5;eip=0x001224; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 85146                  mov     ax, [bp-0Ah] ;~ 17C5:1224
cs=0x17c5;eip=0x001227; 	T(CWD);	// 85147                  cwd ;~ 17C5:1227
cs=0x17c5;eip=0x001228; 	X(PUSH(dx));	// 85148                  push    dx ;~ 17C5:1228
cs=0x17c5;eip=0x001229; 	X(PUSH(ax));	// 85149                  push    ax ;~ 17C5:1229
cs=0x17c5;eip=0x00122a; 	T(ax = word_51a0a;);	// 85150                  mov     ax, ds:word_51A0A ;~ 17C5:122A
cs=0x17c5;eip=0x00122d; 	T(dx = word_51a0c;);	// 85151                  mov     dx, ds:word_51A0C ;~ 17C5:122D
cs=0x17c5;eip=0x001231; 	T(MOV(cx, *(dw*)(raddr(ds,si-0x7E52))));	// 85152                  mov     cx, [si-7E52h] ;~ 17C5:1231
cs=0x17c5;eip=0x001235; 	T(SUB(bx, bx));	// 85153                  sub     bx, bx ;~ 17C5:1235
cs=0x17c5;eip=0x001237; 	T(di = cx;);	// 85154                  mov     di, cx ;~ 17C5:1237
cs=0x17c5;eip=0x001239; 	T(cl = 5;);	// 85155                  mov     cl, 5 ;~ 17C5:1239
loc_2746b:
	// 4967 
cs=0x17c5;eip=0x00123b; 	T(SHL(di, 1));	// 85158                  shl     di, 1 ;~ 17C5:123B
cs=0x17c5;eip=0x00123d; 	T(RCL(bx, 1));	// 85159                  rcl     bx, 1 ;~ 17C5:123D
cs=0x17c5;eip=0x00123f; 	T(DEC(cl));	// 85160                  dec     cl ;~ 17C5:123F
cs=0x17c5;eip=0x001241; 	J(JZ(loc_27475));	// 85161                  jz      short loc_27475 ;~ 17C5:1241
cs=0x17c5;eip=0x001243; 	J(JMP(loc_2746b));	// 85162                  jmp     short loc_2746B ;~ 17C5:1243
loc_27475:
	// 4968 
cs=0x17c5;eip=0x001245; 	T(SUB(ax, di));	// 85166                  sub     ax, di ;~ 17C5:1245
cs=0x17c5;eip=0x001247; 	T(SBB(dx, bx));	// 85167                  sbb     dx, bx ;~ 17C5:1247
cs=0x17c5;eip=0x001249; 	X(PUSH(dx));	// 85168                  push    dx ;~ 17C5:1249
cs=0x17c5;eip=0x00124a; 	X(PUSH(ax));	// 85169                  push    ax ;~ 17C5:124A
cs=0x17c5;eip=0x00124b; 	J(CALL(sub_34e44,0));	// 85170                  call    sub_34E44 ;~ 17C5:124B
cs=0x17c5;eip=0x00124e; 	X(SUB(word_51a0a, ax));	// 85171                  sub     ds:word_51A0A, ax ;~ 17C5:124E
cs=0x17c5;eip=0x001252; 	X(SBB(word_51a0c, dx));	// 85172                  sbb     ds:word_51A0C, dx ;~ 17C5:1252
cs=0x17c5;eip=0x001256; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 85173                  mov     ax, [bp-0Ah] ;~ 17C5:1256
cs=0x17c5;eip=0x001259; 	T(CWD);	// 85174                  cwd ;~ 17C5:1259
cs=0x17c5;eip=0x00125a; 	X(PUSH(dx));	// 85175                  push    dx ;~ 17C5:125A
cs=0x17c5;eip=0x00125b; 	X(PUSH(ax));	// 85176                  push    ax ;~ 17C5:125B
cs=0x17c5;eip=0x00125c; 	T(ax = word_51a28;);	// 85177                  mov     ax, ds:word_51A28 ;~ 17C5:125C
cs=0x17c5;eip=0x00125f; 	T(dx = word_51a2a;);	// 85178                  mov     dx, ds:word_51A2A ;~ 17C5:125F
cs=0x17c5;eip=0x001263; 	T(cx = 0x8000;);	// 85179                  mov     cx, 8000h ;~ 17C5:1263
cs=0x17c5;eip=0x001266; 	T(SUB(cx, *(dw*)(raddr(ds,si-0x7E50))));	// 85180                  sub     cx, [si-7E50h] ;~ 17C5:1266
cs=0x17c5;eip=0x00126a; 	T(SUB(bx, bx));	// 85181                  sub     bx, bx ;~ 17C5:126A
cs=0x17c5;eip=0x00126c; 	T(di = cx;);	// 85182                  mov     di, cx ;~ 17C5:126C
cs=0x17c5;eip=0x00126e; 	T(cl = 5;);	// 85183                  mov     cl, 5 ;~ 17C5:126E
loc_274a0:
	// 4969 
cs=0x17c5;eip=0x001270; 	T(SHL(di, 1));	// 85186                  shl     di, 1 ;~ 17C5:1270
cs=0x17c5;eip=0x001272; 	T(RCL(bx, 1));	// 85187                  rcl     bx, 1 ;~ 17C5:1272
cs=0x17c5;eip=0x001274; 	T(DEC(cl));	// 85188                  dec     cl ;~ 17C5:1274
cs=0x17c5;eip=0x001276; 	J(JZ(loc_274aa));	// 85189                  jz      short loc_274AA ;~ 17C5:1276
cs=0x17c5;eip=0x001278; 	J(JMP(loc_274a0));	// 85190                  jmp     short loc_274A0 ;~ 17C5:1278
loc_274aa:
	// 4970 
cs=0x17c5;eip=0x00127a; 	T(SUB(ax, di));	// 85194                  sub     ax, di ;~ 17C5:127A
cs=0x17c5;eip=0x00127c; 	T(SBB(dx, bx));	// 85195                  sbb     dx, bx ;~ 17C5:127C
cs=0x17c5;eip=0x00127e; 	X(PUSH(dx));	// 85196                  push    dx ;~ 17C5:127E
cs=0x17c5;eip=0x00127f; 	X(PUSH(ax));	// 85197                  push    ax ;~ 17C5:127F
cs=0x17c5;eip=0x001280; 	J(CALL(sub_34e44,0));	// 85198                  call    sub_34E44 ;~ 17C5:1280
cs=0x17c5;eip=0x001283; 	X(SUB(word_51a28, ax));	// 85199                  sub     ds:word_51A28, ax ;~ 17C5:1283
cs=0x17c5;eip=0x001287; 	X(SBB(word_51a2a, dx));	// 85200                  sbb     ds:word_51A2A, dx ;~ 17C5:1287
loc_274bb:
	// 4971 
cs=0x17c5;eip=0x00128b; 	J(return _group16(m2c::kloc_274c9, _state););	// 85204                  jmp     short loc_274C9 ;~ 17C5:128B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::k__unk_26e56: 	goto __unk_26e56;
        case m2c::k_unk_27065: 	goto _unk_27065;
        case m2c::kloc_26ba3: 	goto loc_26ba3;
        case m2c::kloc_26bb1: 	goto loc_26bb1;
        case m2c::kloc_26bba: 	goto loc_26bba;
        case m2c::kloc_26c0b: 	goto loc_26c0b;
        case m2c::kloc_26c15: 	goto loc_26c15;
        case m2c::kloc_26c25: 	goto loc_26c25;
        case m2c::kloc_26c2f: 	goto loc_26c2f;
        case m2c::kloc_26c41: 	goto loc_26c41;
        case m2c::kloc_26c44: 	goto loc_26c44;
        case m2c::kloc_26c7b: 	goto loc_26c7b;
        case m2c::kloc_26c85: 	goto loc_26c85;
        case m2c::kloc_26c93: 	goto loc_26c93;
        case m2c::kloc_26c9d: 	goto loc_26c9d;
        case m2c::kloc_26caa: 	goto loc_26caa;
        case m2c::kloc_26cc4: 	goto loc_26cc4;
        case m2c::kloc_26ceb: 	goto loc_26ceb;
        case m2c::kloc_26cf5: 	goto loc_26cf5;
        case m2c::kloc_26cfc: 	goto loc_26cfc;
        case m2c::kloc_26d2a: 	goto loc_26d2a;
        case m2c::kloc_26d34: 	goto loc_26d34;
        case m2c::kloc_26d3b: 	goto loc_26d3b;
        case m2c::kloc_26d78: 	goto loc_26d78;
        case m2c::kloc_26dfa: 	goto loc_26dfa;
        case m2c::kloc_26e13: 	goto loc_26e13;
        case m2c::kloc_26e15: 	goto loc_26e15;
        case m2c::kloc_26e23: 	goto loc_26e23;
        case m2c::kloc_26e45: 	goto loc_26e45;
        case m2c::kloc_26e4b: 	goto loc_26e4b;
        case m2c::kloc_26e76: 	goto loc_26e76;
        case m2c::kloc_26e80: 	goto loc_26e80;
        case m2c::kloc_26e93: 	goto loc_26e93;
        case m2c::kloc_26e96: 	goto loc_26e96;
        case m2c::kloc_26eea: 	goto loc_26eea;
        case m2c::kloc_26eec: 	goto loc_26eec;
        case m2c::kloc_26f0c: 	goto loc_26f0c;
        case m2c::kloc_26f41: 	goto loc_26f41;
        case m2c::kloc_26f50: 	goto loc_26f50;
        case m2c::kloc_26f5c: 	goto loc_26f5c;
        case m2c::kloc_26f6d: 	goto loc_26f6d;
        case m2c::kloc_26f74: 	goto loc_26f74;
        case m2c::kloc_26f77: 	goto loc_26f77;
        case m2c::kloc_26fa6: 	goto loc_26fa6;
        case m2c::kloc_26fa8: 	goto loc_26fa8;
        case m2c::kloc_26fb8: 	goto loc_26fb8;
        case m2c::kloc_26fce: 	goto loc_26fce;
        case m2c::kloc_26fd5: 	goto loc_26fd5;
        case m2c::kloc_26fd8: 	goto loc_26fd8;
        case m2c::kloc_26fe1: 	goto loc_26fe1;
        case m2c::kloc_27040: 	goto loc_27040;
        case m2c::kloc_27075: 	goto loc_27075;
        case m2c::kloc_2708f: 	goto loc_2708f;
        case m2c::kloc_27099: 	goto loc_27099;
        case m2c::kloc_270d4: 	goto loc_270d4;
        case m2c::kloc_270d7: 	goto loc_270d7;
        case m2c::kloc_270e3: 	goto loc_270e3;
        case m2c::kloc_270e6: 	goto loc_270e6;
        case m2c::kloc_2710a: 	goto loc_2710a;
        case m2c::kloc_27110: 	goto loc_27110;
        case m2c::kloc_27159: 	goto loc_27159;
        case m2c::kloc_2716b: 	goto loc_2716b;
        case m2c::kloc_2717f: 	goto loc_2717f;
        case m2c::kloc_271a7: 	goto loc_271a7;
        case m2c::kloc_2721f: 	goto loc_2721f;
        case m2c::kloc_27234: 	goto loc_27234;
        case m2c::kloc_27278: 	goto loc_27278;
        case m2c::kloc_27287: 	goto loc_27287;
        case m2c::kloc_27297: 	goto loc_27297;
        case m2c::kloc_272a1: 	goto loc_272a1;
        case m2c::kloc_272b6: 	goto loc_272b6;
        case m2c::kloc_272c0: 	goto loc_272c0;
        case m2c::kloc_272c9: 	goto loc_272c9;
        case m2c::kloc_27301: 	goto loc_27301;
        case m2c::kloc_2731e: 	goto loc_2731e;
        case m2c::kloc_27320: 	goto loc_27320;
        case m2c::kloc_27339: 	goto loc_27339;
        case m2c::kloc_27358: 	goto loc_27358;
        case m2c::kloc_27362: 	goto loc_27362;
        case m2c::kloc_2736c: 	goto loc_2736c;
        case m2c::kloc_27376: 	goto loc_27376;
        case m2c::kloc_27381: 	goto loc_27381;
        case m2c::kloc_273d2: 	goto loc_273d2;
        case m2c::kloc_273dc: 	goto loc_273dc;
        case m2c::kloc_273ee: 	goto loc_273ee;
        case m2c::kloc_273f8: 	goto loc_273f8;
        case m2c::kloc_27402: 	goto loc_27402;
        case m2c::kloc_27424: 	goto loc_27424;
        case m2c::kloc_2744c: 	goto loc_2744c;
        case m2c::kloc_2746b: 	goto loc_2746b;
        case m2c::kloc_27475: 	goto loc_27475;
        case m2c::kloc_274a0: 	goto loc_274a0;
        case m2c::kloc_274aa: 	goto loc_274aa;
        case m2c::kloc_274bb: 	goto loc_274bb;
        case m2c::kseg2623_be0_proc: 	goto seg2623_be0_proc;
        case m2c::kseg2623_e4f_proc: 	goto seg2623_e4f_proc;
        case m2c::ksub_26ba0: 	goto sub_26ba0;
        case m2c::ksub_26c88: 	goto sub_26c88;
        case m2c::ksub_26d32: 	goto sub_26d32;
        case m2c::ksub_26dde: 	goto sub_26dde;
        case m2c::ksub_27068: 	goto sub_27068;
        case m2c::ksub_2707d: 	goto sub_2707d;
        case m2c::ksub_273ea: 	goto sub_273ea;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group16(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group16:
    _begin:
seg2623_128d_proc:
	// 85210 
loc_274bd:
	// 4972 
cs=0x17c5;eip=0x00128d; 	X(word_49936 = 0;);	// 85211                  mov     word_49936, 0 ;~ 17C5:128D
cs=0x17c5;eip=0x001293; 	X(word_49932 = 0;);	// 85212                  mov     word_49932, 0 ;~ 17C5:1293
loc_274c9:
	// 4973 
cs=0x17c5;eip=0x001299; 	T(CMP(word_49932, 0));	// 85215                  cmp     word_49932, 0 ;~ 17C5:1299
cs=0x17c5;eip=0x00129e; 	J(JNZ(loc_27542));	// 85216                  jnz     short loc_27542 ;~ 17C5:129E
cs=0x17c5;eip=0x0012a0; 	T(CMP(word_4e2fe, 0));	// 85217                  cmp     ds:word_4E2FE, 0 ;~ 17C5:12A0
cs=0x17c5;eip=0x0012a5; 	J(JNZ(loc_2753c));	// 85218                  jnz     short loc_2753C ;~ 17C5:12A5
cs=0x17c5;eip=0x0012a7; 	T(LES(bx, dword_4f220));	// 85219                  les     bx, ds:dword_4F220 ;~ 17C5:12A7
cs=0x17c5;eip=0x0012ab; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 0));	// 85220                  cmp     word ptr es:[bx+40h], 0 ;~ 17C5:12AB
cs=0x17c5;eip=0x0012b0; 	J(JNZ(loc_274f0));	// 85221                  jnz     short loc_274F0 ;~ 17C5:12B0
cs=0x17c5;eip=0x0012b2; 	T(CMP(word_521c0, 4));	// 85222                  cmp     ds:word_521C0, 4 ;~ 17C5:12B2
cs=0x17c5;eip=0x0012b7; 	J(JG(loc_274f0));	// 85223                  jg      short loc_274F0 ;~ 17C5:12B7
cs=0x17c5;eip=0x0012b9; 	T(CMP(*(word_492c8), 0));	// 85224                  cmp     word_492C8, 0 ;~ 17C5:12B9
cs=0x17c5;eip=0x0012be; 	J(JNZ(loc_2753a));	// 85225                  jnz     short loc_2753A ;~ 17C5:12BE
loc_274f0:
	// 4974 
cs=0x17c5;eip=0x0012c0; 	T(CMP(word_5206c, 0));	// 85229                  cmp     ds:word_5206C, 0 ;~ 17C5:12C0
cs=0x17c5;eip=0x0012c5; 	J(JNZ(loc_2753a));	// 85230                  jnz     short loc_2753A ;~ 17C5:12C5
cs=0x17c5;eip=0x0012c7; 	T(CMP(word_50c8a, 0x32));	// 85231                  cmp     ds:word_50C8A, 32h ; '2' ;~ 17C5:12C7
cs=0x17c5;eip=0x0012cc; 	J(JLE(loc_2753a));	// 85232                  jle     short loc_2753A ;~ 17C5:12CC
cs=0x17c5;eip=0x0012ce; 	T(ax = 2;);	// 85233                  mov     ax, 2 ;~ 17C5:12CE
cs=0x17c5;eip=0x0012d1; 	X(PUSH(ax));	// 85234                  push    ax ;~ 17C5:12D1
cs=0x17c5;eip=0x0012d2; 	T(SUB(ax, ax));	// 85235                  sub     ax, ax ;~ 17C5:12D2
cs=0x17c5;eip=0x0012d4; 	X(PUSH(ax));	// 85236                  push    ax ;~ 17C5:12D4
cs=0x17c5;eip=0x0012d5; 	J(CALL(sub_33c65,0));	// 85237                  call    sub_33C65 ;~ 17C5:12D5
cs=0x17c5;eip=0x0012d8; 	T(ADD(sp, 4));	// 85239                  add     sp, 4 ;~ 17C5:12D8
cs=0x17c5;eip=0x0012db; 	T(SUB(ax, ax));	// 85240                  sub     ax, ax ;~ 17C5:12DB
cs=0x17c5;eip=0x0012dd; 	X(PUSH(ax));	// 85241                  push    ax ;~ 17C5:12DD
cs=0x17c5;eip=0x0012de; 	J(CALL(sub_30074,0));	// 85242                  call    sub_30074 ;~ 17C5:12DE
cs=0x17c5;eip=0x0012e1; 	T(ADD(sp, 2));	// 85243                  add     sp, 2 ;~ 17C5:12E1
cs=0x17c5;eip=0x0012e4; 	T(ax = 0x0C7;);	// 85244                  mov     ax, 0C7h ;~ 17C5:12E4
cs=0x17c5;eip=0x0012e7; 	X(PUSH(ax));	// 85245                  push    ax ;~ 17C5:12E7
cs=0x17c5;eip=0x0012e8; 	T(ax = 0x13F;);	// 85246                  mov     ax, 13Fh ;~ 17C5:12E8
cs=0x17c5;eip=0x0012eb; 	X(PUSH(ax));	// 85247                  push    ax ;~ 17C5:12EB
cs=0x17c5;eip=0x0012ec; 	T(SUB(ax, ax));	// 85248                  sub     ax, ax ;~ 17C5:12EC
cs=0x17c5;eip=0x0012ee; 	X(PUSH(ax));	// 85249                  push    ax ;~ 17C5:12EE
cs=0x17c5;eip=0x0012ef; 	X(PUSH(ax));	// 85250                  push    ax ;~ 17C5:12EF
cs=0x17c5;eip=0x0012f0; 	J(CALL(sub_3008d,0));	// 85251                  call    sub_3008D ;~ 17C5:12F0
cs=0x17c5;eip=0x0012f3; 	T(ADD(sp, 8));	// 85253                  add     sp, 8 ;~ 17C5:12F3
cs=0x17c5;eip=0x0012f6; 	T(ax = 0x78;);	// 85254                  mov     ax, 78h ; 'x' ;~ 17C5:12F6
cs=0x17c5;eip=0x0012f9; 	X(PUSH(ax));	// 85255                  push    ax ;~ 17C5:12F9
cs=0x17c5;eip=0x0012fa; 	J(CALL(sub_284a8,0));	// 85256                  call    sub_284A8 ;~ 17C5:12FA
cs=0x17c5;eip=0x0012fd; 	T(ADD(sp, 2));	// 85257                  add     sp, 2 ;~ 17C5:12FD
cs=0x17c5;eip=0x001300; 	T(ax = 1;);	// 85258                  mov     ax, 1 ;~ 17C5:1300
cs=0x17c5;eip=0x001303; 	X(PUSH(ax));	// 85259                  push    ax ;~ 17C5:1303
cs=0x17c5;eip=0x001304; 	J(CALL(sub_27d67,0));	// 85260                  call    sub_27D67 ;~ 17C5:1304
cs=0x17c5;eip=0x001307; 	T(ADD(sp, 2));	// 85261                  add     sp, 2 ;~ 17C5:1307
loc_2753a:
	// 4975 
cs=0x17c5;eip=0x00130a; 	J(JMP(loc_27542));	// 85265                  jmp     short loc_27542 ;~ 17C5:130A
loc_2753c:
	// 4976 
cs=0x17c5;eip=0x00130c; 	X(word_49944 = 1;);	// 85269                  mov     word_49944, 1 ;~ 17C5:130C
loc_27542:
	// 4977 
cs=0x17c5;eip=0x001312; 	T(CMP(byte_4fb8a, 0));	// 85273                  cmp     ds:byte_4FB8A, 0 ;~ 17C5:1312
cs=0x17c5;eip=0x001317; 	J(JZ(loc_27596));	// 85274                  jz      short loc_27596 ;~ 17C5:1317
cs=0x17c5;eip=0x001319; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 85275                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:1319
cs=0x17c5;eip=0x00131e; 	J(JNZ(loc_27596));	// 85276                  jnz     short loc_27596 ;~ 17C5:131E
cs=0x17c5;eip=0x001320; 	T(LES(bx, dword_4f220));	// 85277                  les     bx, ds:dword_4F220 ;~ 17C5:1320
cs=0x17c5;eip=0x001324; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 0));	// 85279                  cmp     word ptr es:[bx+40h], 0 ;~ 17C5:1324
cs=0x17c5;eip=0x001329; 	J(JZ(loc_2758a));	// 85280                  jz      short loc_2758A ;~ 17C5:1329
cs=0x17c5;eip=0x00132b; 	T(CMP(word_4e300, 0));	// 85281                  cmp     ds:word_4E300, 0 ;~ 17C5:132B
cs=0x17c5;eip=0x001330; 	J(JZ(loc_2758a));	// 85282                  jz      short loc_2758A ;~ 17C5:1330
cs=0x17c5;eip=0x001332; 	T(ax = 2;);	// 85283                  mov     ax, 2 ;~ 17C5:1332
cs=0x17c5;eip=0x001335; 	X(PUSH(ax));	// 85284                  push    ax ;~ 17C5:1335
cs=0x17c5;eip=0x001336; 	T(SUB(ax, ax));	// 85285                  sub     ax, ax ;~ 17C5:1336
cs=0x17c5;eip=0x001338; 	X(PUSH(ax));	// 85286                  push    ax ;~ 17C5:1338
cs=0x17c5;eip=0x001339; 	J(CALL(sub_33c65,0));	// 85287                  call    sub_33C65 ;~ 17C5:1339
cs=0x17c5;eip=0x00133c; 	T(ADD(sp, 4));	// 85289                  add     sp, 4 ;~ 17C5:133C
cs=0x17c5;eip=0x00133f; 	J(CALLF(sub_49af7,0));	// 85290                  call    far ptr sub_49AF7 ;~ 17C5:133F
cs=0x17c5;eip=0x001344; 	T(ax = 0x78;);	// 85292                  mov     ax, 78h ; 'x' ;~ 17C5:1344
cs=0x17c5;eip=0x001347; 	X(PUSH(ax));	// 85293                  push    ax ;~ 17C5:1347
cs=0x17c5;eip=0x001348; 	J(CALL(sub_284a8,0));	// 85294                  call    sub_284A8 ;~ 17C5:1348
cs=0x17c5;eip=0x00134b; 	T(ADD(sp, 2));	// 85295                  add     sp, 2 ;~ 17C5:134B
cs=0x17c5;eip=0x00134e; 	T(ax = 2;);	// 85296                  mov     ax, 2 ;~ 17C5:134E
cs=0x17c5;eip=0x001351; 	X(PUSH(ax));	// 85297                  push    ax ;~ 17C5:1351
cs=0x17c5;eip=0x001352; 	J(CALL(sub_27d67,0));	// 85298                  call    sub_27D67 ;~ 17C5:1352
cs=0x17c5;eip=0x001355; 	T(ADD(sp, 2));	// 85299                  add     sp, 2 ;~ 17C5:1355
cs=0x17c5;eip=0x001358; 	J(JMP(loc_27596));	// 85300                  jmp     short loc_27596 ;~ 17C5:1358
loc_2758a:
	// 4978 
cs=0x17c5;eip=0x00135a; 	X(ADD(word_4e300, 0x1F4));	// 85305                  add     ds:word_4E300, 1F4h ;~ 17C5:135A
cs=0x17c5;eip=0x001360; 	X(word_492e6 = 0;);	// 85306                  mov     word_492E6, 0 ;~ 17C5:1360
loc_27596:
	// 4979 
cs=0x17c5;eip=0x001366; 	T(bx = word_5239a;);	// 85311                  mov     bx, ds:word_5239A ;~ 17C5:1366
cs=0x17c5;eip=0x00136a; 	T(cl = 4;);	// 85312                  mov     cl, 4 ;~ 17C5:136A
cs=0x17c5;eip=0x00136c; 	T(SHL(bx, cl));	// 85313                  shl     bx, cl ;~ 17C5:136C
cs=0x17c5;eip=0x00136e; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 85314                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:136E
cs=0x17c5;eip=0x001374; 	J(JZ(loc_275c4));	// 85315                  jz      short loc_275C4 ;~ 17C5:1374
cs=0x17c5;eip=0x001376; 	T(CMP(word_4f21e, 0x500));	// 85316                  cmp     ds:word_4F21E, 500h ;~ 17C5:1376
cs=0x17c5;eip=0x00137c; 	J(JGE(loc_275c4));	// 85317                  jge     short loc_275C4 ;~ 17C5:137C
cs=0x17c5;eip=0x00137e; 	T(ah = *(db*)(&word_511d8););	// 85318                  mov     ah, byte ptr ds:word_511D8 ;~ 17C5:137E
cs=0x17c5;eip=0x001382; 	T(SUB(al, al));	// 85319                  sub     al, al ;~ 17C5:1382
cs=0x17c5;eip=0x001384; 	T(CWD);	// 85320                  cwd ;~ 17C5:1384
cs=0x17c5;eip=0x001385; 	T(cx = word_492f4;);	// 85321                  mov     cx, word_492F4 ;~ 17C5:1385
cs=0x17c5;eip=0x001389; 	T(IDIV2(cx));	// 85322                  idiv    cx ;~ 17C5:1389
cs=0x17c5;eip=0x00138b; 	T(ADD(ax, word_522d0));	// 85323                  add     ax, ds:word_522D0 ;~ 17C5:138B
cs=0x17c5;eip=0x00138f; 	T(AND(ah, 0x0F));	// 85324                  and     ah, 0Fh ;~ 17C5:138F
cs=0x17c5;eip=0x001392; 	J(JMP(loc_275c6));	// 85325                  jmp     short loc_275C6 ;~ 17C5:1392
loc_275c4:
	// 4980 
cs=0x17c5;eip=0x001394; 	T(SUB(ax, ax));	// 85330                  sub     ax, ax ;~ 17C5:1394
loc_275c6:
	// 4981 
cs=0x17c5;eip=0x001396; 	X(word_522d0 = ax;);	// 85333                  mov     ds:word_522D0, ax ;~ 17C5:1396
cs=0x17c5;eip=0x001399; 	X(INC(word_49918));	// 85334                  inc     word_49918 ;~ 17C5:1399
cs=0x17c5;eip=0x00139d; 	T(ax = word_49918;);	// 85335                  mov     ax, word_49918 ;~ 17C5:139D
cs=0x17c5;eip=0x0013a0; 	T(CWD);	// 85336                  cwd ;~ 17C5:13A0
cs=0x17c5;eip=0x0013a1; 	T(cx = word_492f4;);	// 85337                  mov     cx, word_492F4 ;~ 17C5:13A1
cs=0x17c5;eip=0x0013a5; 	T(IDIV2(cx));	// 85338                  idiv    cx ;~ 17C5:13A5
cs=0x17c5;eip=0x0013a7; 	T(OR(dx, dx));	// 85339                  or      dx, dx ;~ 17C5:13A7
cs=0x17c5;eip=0x0013a9; 	J(JNZ(loc_27617));	// 85340                  jnz     short loc_27617 ;~ 17C5:13A9
cs=0x17c5;eip=0x0013ab; 	X(INC(word_4f210));	// 85341                  inc     ds:word_4F210 ;~ 17C5:13AB
cs=0x17c5;eip=0x0013af; 	T(TEST(*(db*)(&word_4f210), 0x1F));	// 85342                  test    byte ptr ds:word_4F210, 1Fh ;~ 17C5:13AF
cs=0x17c5;eip=0x0013b4; 	J(JNZ(loc_275f3));	// 85343                  jnz     short loc_275F3 ;~ 17C5:13B4
cs=0x17c5;eip=0x0013b6; 	T(SUB(ax, ax));	// 85344                  sub     ax, ax ;~ 17C5:13B6
cs=0x17c5;eip=0x0013b8; 	X(PUSH(ax));	// 85345                  push    ax ;~ 17C5:13B8
cs=0x17c5;eip=0x0013b9; 	T(ax = 9;);	// 85346                  mov     ax, 9 ;~ 17C5:13B9
cs=0x17c5;eip=0x0013bc; 	X(PUSH(ax));	// 85347                  push    ax ;~ 17C5:13BC
cs=0x17c5;eip=0x0013bd; 	J(CALL(sub_27f40,0));	// 85348                  call    sub_27F40 ;~ 17C5:13BD
cs=0x17c5;eip=0x0013c0; 	T(ADD(sp, 4));	// 85349                  add     sp, 4 ;~ 17C5:13C0
loc_275f3:
	// 4982 
cs=0x17c5;eip=0x0013c3; 	T(CMP(word_4f210, 1));	// 85352                  cmp     ds:word_4F210, 1 ;~ 17C5:13C3
cs=0x17c5;eip=0x0013c8; 	J(JNZ(loc_27606));	// 85353                  jnz     short loc_27606 ;~ 17C5:13C8
cs=0x17c5;eip=0x0013ca; 	T(SUB(ax, ax));	// 85354                  sub     ax, ax ;~ 17C5:13CA
cs=0x17c5;eip=0x0013cc; 	X(PUSH(ax));	// 85355                  push    ax ;~ 17C5:13CC
cs=0x17c5;eip=0x0013cd; 	J(CALL(sub_33c8f,0));	// 85356                  call    sub_33C8F ;~ 17C5:13CD
cs=0x17c5;eip=0x0013d0; 	T(ADD(sp, 2));	// 85357                  add     sp, 2 ;~ 17C5:13D0
cs=0x17c5;eip=0x0013d3; 	J(CALL(sub_33cbd,0));	// 85358                  call    sub_33CBD ;~ 17C5:13D3
loc_27606:
	// 4983 
cs=0x17c5;eip=0x0013d6; 	T(CMP(word_4991a, 0));	// 85362                  cmp     word_4991A, 0 ;~ 17C5:13D6
cs=0x17c5;eip=0x0013db; 	J(JZ(loc_27617));	// 85363                  jz      short loc_27617 ;~ 17C5:13DB
cs=0x17c5;eip=0x0013dd; 	T(TEST(*(db*)(&word_4f210), 3));	// 85364                  test    byte ptr ds:word_4F210, 3 ;~ 17C5:13DD
cs=0x17c5;eip=0x0013e2; 	J(JNZ(loc_27617));	// 85365                  jnz     short loc_27617 ;~ 17C5:13E2
cs=0x17c5;eip=0x0013e4; 	J(CALL(sub_27e51,0));	// 85366                  call    sub_27E51 ;~ 17C5:13E4
loc_27617:
	// 4984 
cs=0x17c5;eip=0x0013e7; 	T(ax = word_492f4;);	// 85370                  mov     ax, word_492F4 ;~ 17C5:13E7
cs=0x17c5;eip=0x0013ea; 	T(SHL(ax, 1));	// 85371                  shl     ax, 1 ;~ 17C5:13EA
cs=0x17c5;eip=0x0013ec; 	T(SHL(ax, 1));	// 85372                  shl     ax, 1 ;~ 17C5:13EC
cs=0x17c5;eip=0x0013ee; 	X(INC(word_49938));	// 85373                  inc     word_49938 ;~ 17C5:13EE
cs=0x17c5;eip=0x0013f2; 	T(CMP(ax, word_49938));	// 85374                  cmp     ax, word_49938 ;~ 17C5:13F2
cs=0x17c5;eip=0x0013f6; 	J(JBE(loc_2762b));	// 85375                  jbe     short loc_2762B ;~ 17C5:13F6
cs=0x17c5;eip=0x0013f8; 	J(JMP(loc_2770f));	// 85376                  jmp     loc_2770F ;~ 17C5:13F8
loc_2762b:
	// 4985 
cs=0x17c5;eip=0x0013fb; 	T(ax = word_4db3a;);	// 85380                  mov     ax, ds:word_4DB3A ;~ 17C5:13FB
cs=0x17c5;eip=0x0013fe; 	T(SUB(dx, dx));	// 85381                  sub     dx, dx ;~ 17C5:13FE
cs=0x17c5;eip=0x001400; 	X(DIV2(word_492f4));	// 85382                  div     word_492F4 ;~ 17C5:1400
cs=0x17c5;eip=0x001404; 	X(word_528de = ax;);	// 85383                  mov     ds:word_528DE, ax ;~ 17C5:1404
cs=0x17c5;eip=0x001407; 	T(ax = word_4e830;);	// 85384                  mov     ax, ds:word_4E830 ;~ 17C5:1407
cs=0x17c5;eip=0x00140a; 	T(SHL(ax, 1));	// 85385                  shl     ax, 1 ;~ 17C5:140A
cs=0x17c5;eip=0x00140c; 	T(DEC(ax));	// 85386                  dec     ax ;~ 17C5:140C
cs=0x17c5;eip=0x00140d; 	X(IMUL1_2(word_492f4));	// 85387                  imul    word_492F4 ;~ 17C5:140D
cs=0x17c5;eip=0x001411; 	T(SHL(ax, 1));	// 85388                  shl     ax, 1 ;~ 17C5:1411
cs=0x17c5;eip=0x001413; 	X(SUB(word_4db3a, ax));	// 85389                  sub     ds:word_4DB3A, ax ;~ 17C5:1413
cs=0x17c5;eip=0x001417; 	T(CMP(word_4db3a, 4));	// 85390                  cmp     ds:word_4DB3A, 4 ;~ 17C5:1417
cs=0x17c5;eip=0x00141c; 	J(JNC(loc_27654));	// 85391                  jnb     short loc_27654 ;~ 17C5:141C
cs=0x17c5;eip=0x00141e; 	X(word_4db3a = 4;);	// 85392                  mov     ds:word_4DB3A, 4 ;~ 17C5:141E
loc_27654:
	// 4986 
cs=0x17c5;eip=0x001424; 	T(ax = 0x0FF;);	// 85395                  mov     ax, 0FFh ;~ 17C5:1424
cs=0x17c5;eip=0x001427; 	X(PUSH(ax));	// 85396                  push    ax ;~ 17C5:1427
cs=0x17c5;eip=0x001428; 	T(ax = 1;);	// 85397                  mov     ax, 1 ;~ 17C5:1428
cs=0x17c5;eip=0x00142b; 	X(PUSH(ax));	// 85398                  push    ax ;~ 17C5:142B
cs=0x17c5;eip=0x00142c; 	T(ax = word_4db3a;);	// 85399                  mov     ax, ds:word_4DB3A ;~ 17C5:142C
cs=0x17c5;eip=0x00142f; 	X(MUL1_2(word_4993a));	// 85400                  mul     word_4993A ;~ 17C5:142F
cs=0x17c5;eip=0x001433; 	T(cx = ax;);	// 85401                  mov     cx, ax ;~ 17C5:1433
cs=0x17c5;eip=0x001435; 	T(ax = 0x3C0;);	// 85402                  mov     ax, 3C0h ;~ 17C5:1435
cs=0x17c5;eip=0x001438; 	X(IMUL1_2(word_492f4));	// 85403                  imul    word_492F4 ;~ 17C5:1438
cs=0x17c5;eip=0x00143c; 	T(SUB(dx, dx));	// 85404                  sub     dx, dx ;~ 17C5:143C
cs=0x17c5;eip=0x00143e; 	T(DIV2(cx));	// 85405                  div     cx ;~ 17C5:143E
cs=0x17c5;eip=0x001440; 	X(PUSH(ax));	// 85406                  push    ax ;~ 17C5:1440
cs=0x17c5;eip=0x001441; 	J(CALL(sub_33194,0));	// 85407                  call    sub_33194 ;~ 17C5:1441
sub_27674:
	// 85413 
cs=0x17c5;eip=0x001444; 	T(ADD(sp, 6));	// 85414                  add     sp, 6 ;~ 17C5:1444
cs=0x17c5;eip=0x001447; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 85415                  mov     [bp-6], ax ;~ 17C5:1447
cs=0x17c5;eip=0x00144a; 	T(SUB(ax, ax));	// 85416                  sub     ax, ax ;~ 17C5:144A
cs=0x17c5;eip=0x00144c; 	X(word_4db3a = ax;);	// 85417                  mov     ds:word_4DB3A, ax ;~ 17C5:144C
cs=0x17c5;eip=0x00144f; 	X(word_49938 = ax;);	// 85418                  mov     word_49938, ax ;~ 17C5:144F
cs=0x17c5;eip=0x001452; 	T(ax = word_492f4;);	// 85419                  mov     ax, word_492F4 ;~ 17C5:1452
cs=0x17c5;eip=0x001455; 	T(SHL(ax, 1));	// 85420                  shl     ax, 1 ;~ 17C5:1455
cs=0x17c5;eip=0x001457; 	T(SHL(ax, 1));	// 85421                  shl     ax, 1 ;~ 17C5:1457
cs=0x17c5;eip=0x001459; 	T(SUB(ax, *(dw*)(raddr(ss,bp-6))));	// 85422                  sub     ax, [bp-6] ;~ 17C5:1459
cs=0x17c5;eip=0x00145c; 	X(PUSH(ax));	// 85423                  push    ax ;~ 17C5:145C
cs=0x17c5;eip=0x00145d; 	J(CALL(sub_34dc0,0));	// 85424                  call    sub_34DC0 ;~ 17C5:145D
cs=0x17c5;eip=0x001460; 	T(ADD(sp, 2));	// 85425                  add     sp, 2 ;~ 17C5:1460
cs=0x17c5;eip=0x001463; 	T(CMP(ax, 3));	// 85426                  cmp     ax, 3 ;~ 17C5:1463
cs=0x17c5;eip=0x001466; 	J(JLE(loc_276a8));	// 85427                  jle     short loc_276A8 ;~ 17C5:1466
cs=0x17c5;eip=0x001468; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 85428                  mov     ax, [bp-6] ;~ 17C5:1468
cs=0x17c5;eip=0x00146b; 	T(ADD(ax, 2));	// 85429                  add     ax, 2 ;~ 17C5:146B
cs=0x17c5;eip=0x00146e; 	T(SAR(ax, 1));	// 85430                  sar     ax, 1 ;~ 17C5:146E
cs=0x17c5;eip=0x001470; 	T(SAR(ax, 1));	// 85431                  sar     ax, 1 ;~ 17C5:1470
cs=0x17c5;eip=0x001472; 	X(word_492f4 = ax;);	// 85432                  mov     word_492F4, ax ;~ 17C5:1472
cs=0x17c5;eip=0x001475; 	J(CALL(sub_33cde,0));	// 85433                  call    sub_33CDE ;~ 17C5:1475
loc_276a8:
	// 4987 
cs=0x17c5;eip=0x001478; 	X(word_522cc = 0;);	// 85436                  mov     ds:word_522CC, 0 ;~ 17C5:1478
cs=0x17c5;eip=0x00147e; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 3));	// 85437                  mov     word ptr [bp-0Ah], 3 ;~ 17C5:147E
cs=0x17c5;eip=0x001483; 	J(JMP(loc_276b8));	// 85438                  jmp     short loc_276B8 ;~ 17C5:1483
loc_276b5:
	// 4988 
cs=0x17c5;eip=0x001485; 	X(INC(*(dw*)(raddr(ss,bp-0x0A))));	// 85442                  inc     word ptr [bp-0Ah] ;~ 17C5:1485
loc_276b8:
	// 4989 
cs=0x17c5;eip=0x001488; 	T(ax = word_4f22a;);	// 85445                  mov     ax, ds:word_4F22A ;~ 17C5:1488
cs=0x17c5;eip=0x00148b; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 85446                  cmp     [bp-0Ah], ax ;~ 17C5:148B
cs=0x17c5;eip=0x00148e; 	J(JGE(loc_276de));	// 85447                  jge     short loc_276DE ;~ 17C5:148E
cs=0x17c5;eip=0x001490; 	T(MOV(si, *(dw*)(raddr(ss,bp-0x0A))));	// 85448                  mov     si, [bp-0Ah] ;~ 17C5:1490
cs=0x17c5;eip=0x001493; 	T(cl = 4;);	// 85449                  mov     cl, 4 ;~ 17C5:1493
cs=0x17c5;eip=0x001495; 	T(SHL(si, cl));	// 85450                  shl     si, cl ;~ 17C5:1495
cs=0x17c5;eip=0x001497; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4A)), 0x0C0));	// 85451                  cmp     word ptr [si-7E4Ah], 0C0h ;~ 17C5:1497
cs=0x17c5;eip=0x00149d; 	J(JLE(loc_276dc));	// 85452                  jle     short loc_276DC ;~ 17C5:149D
cs=0x17c5;eip=0x00149f; 	T(TEST(*(raddr(ds,si-0x7E4C)), 0x80));	// 85453                  test    byte ptr [si-7E4Ch], 80h ;~ 17C5:149F
cs=0x17c5;eip=0x0014a4; 	J(JNZ(loc_276dc));	// 85454                  jnz     short loc_276DC ;~ 17C5:14A4
cs=0x17c5;eip=0x0014a6; 	X(INC(word_522cc));	// 85455                  inc     ds:word_522CC ;~ 17C5:14A6
cs=0x17c5;eip=0x0014aa; 	J(JMP(loc_276de));	// 85456                  jmp     short loc_276DE ;~ 17C5:14AA
loc_276dc:
	// 4990 
cs=0x17c5;eip=0x0014ac; 	J(JMP(loc_276b5));	// 85461                  jmp     short loc_276B5 ;~ 17C5:14AC
loc_276de:
	// 4991 
cs=0x17c5;eip=0x0014ae; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 0));	// 85466                  mov     word ptr [bp-0Ah], 0 ;~ 17C5:14AE
cs=0x17c5;eip=0x0014b3; 	J(JMP(loc_276e8));	// 85467                  jmp     short loc_276E8 ;~ 17C5:14B3
loc_276e5:
	// 4992 
cs=0x17c5;eip=0x0014b5; 	X(INC(*(dw*)(raddr(ss,bp-0x0A))));	// 85471                  inc     word ptr [bp-0Ah] ;~ 17C5:14B5
loc_276e8:
	// 4993 
cs=0x17c5;eip=0x0014b8; 	T(ax = word_52276;);	// 85474                  mov     ax, ds:word_52276 ;~ 17C5:14B8
cs=0x17c5;eip=0x0014bb; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 85475                  cmp     [bp-0Ah], ax ;~ 17C5:14BB
cs=0x17c5;eip=0x0014be; 	J(JGE(loc_2770f));	// 85476                  jge     short loc_2770F ;~ 17C5:14BE
cs=0x17c5;eip=0x0014c0; 	T(ax = 0x24;);	// 85477                  mov     ax, 24h ; '$' ;~ 17C5:14C0
cs=0x17c5;eip=0x0014c3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0A))));	// 85478                  imul    word ptr [bp-0Ah] ;~ 17C5:14C3
cs=0x17c5;eip=0x0014c6; 	T(si = ax;);	// 85479                  mov     si, ax ;~ 17C5:14C6
cs=0x17c5;eip=0x0014c8; 	T(CMP(*(dw*)(raddr(ds,si-0x768C)), 0x0C0));	// 85480                  cmp     word ptr [si-768Ch], 0C0h ;~ 17C5:14C8
cs=0x17c5;eip=0x0014ce; 	J(JLE(loc_2770d));	// 85481                  jle     short loc_2770D ;~ 17C5:14CE
cs=0x17c5;eip=0x0014d0; 	T(TEST(*(raddr(ds,si-0x7696)), 2));	// 85482                  test    byte ptr [si-7696h], 2 ;~ 17C5:14D0
cs=0x17c5;eip=0x0014d5; 	J(JZ(loc_2770d));	// 85483                  jz      short loc_2770D ;~ 17C5:14D5
cs=0x17c5;eip=0x0014d7; 	X(INC(word_522cc));	// 85484                  inc     ds:word_522CC ;~ 17C5:14D7
cs=0x17c5;eip=0x0014db; 	J(JMP(loc_2770f));	// 85485                  jmp     short loc_2770F ;~ 17C5:14DB
loc_2770d:
	// 4994 
cs=0x17c5;eip=0x0014dd; 	J(JMP(loc_276e5));	// 85490                  jmp     short loc_276E5 ;~ 17C5:14DD
loc_2770f:
	// 4995 
cs=0x17c5;eip=0x0014df; 	J(CALL(sub_27718,0));	// 85495                  call    sub_27718 ;~ 17C5:14DF
cs=0x17c5;eip=0x0014e2; 	X(POP(si));	// 85496                  pop     si ;~ 17C5:14E2
cs=0x17c5;eip=0x0014e3; 	X(POP(di));	// 85497                  pop     di ;~ 17C5:14E3
cs=0x17c5;eip=0x0014e4; 	T(sp = bp;);	// 85498                  mov     sp, bp ;~ 17C5:14E4
cs=0x17c5;eip=0x0014e6; 	X(POP(bp));	// 85499                  pop     bp ;~ 17C5:14E6
cs=0x17c5;eip=0x0014e7; 	J(RETN(0));	// 85500                  retn ;~ 17C5:14E7

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_274c9: 	goto loc_274c9;
        case m2c::kloc_274f0: 	goto loc_274f0;
        case m2c::kloc_2753a: 	goto loc_2753a;
        case m2c::kloc_2753c: 	goto loc_2753c;
        case m2c::kloc_27542: 	goto loc_27542;
        case m2c::kloc_2758a: 	goto loc_2758a;
        case m2c::kloc_27596: 	goto loc_27596;
        case m2c::kloc_275c4: 	goto loc_275c4;
        case m2c::kloc_275c6: 	goto loc_275c6;
        case m2c::kloc_275f3: 	goto loc_275f3;
        case m2c::kloc_27606: 	goto loc_27606;
        case m2c::kloc_27617: 	goto loc_27617;
        case m2c::kloc_2762b: 	goto loc_2762b;
        case m2c::kloc_27654: 	goto loc_27654;
        case m2c::kloc_276a8: 	goto loc_276a8;
        case m2c::kloc_276b5: 	goto loc_276b5;
        case m2c::kloc_276b8: 	goto loc_276b8;
        case m2c::kloc_276dc: 	goto loc_276dc;
        case m2c::kloc_276de: 	goto loc_276de;
        case m2c::kloc_276e5: 	goto loc_276e5;
        case m2c::kloc_276e8: 	goto loc_276e8;
        case m2c::kloc_2770d: 	goto loc_2770d;
        case m2c::kloc_2770f: 	goto loc_2770f;
        case m2c::kseg2623_128d_proc: 	goto seg2623_128d_proc;
        case m2c::ksub_27674: 	goto sub_27674;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27718(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27718:
    _begin:
cs=0x17c5;eip=0x0014e8; 	X(PUSH(bp));	// 85509                  push    bp ;~ 17C5:14E8
cs=0x17c5;eip=0x0014e9; 	T(bp = sp;);	// 85510                  mov     bp, sp ;~ 17C5:14E9
cs=0x17c5;eip=0x0014eb; 	T(SUB(sp, 0x10));	// 85511                  sub     sp, 10h ;~ 17C5:14EB
cs=0x17c5;eip=0x0014ee; 	X(PUSH(word_52242));	// 85512                  push    ds:word_52242 ;~ 17C5:14EE
cs=0x17c5;eip=0x0014f2; 	J(CALL(seg2623_d260_proc,m2c::kloc_33490));	// 85513                  call    loc_33490 ;~ 17C5:14F2
cs=0x17c5;eip=0x0014f5; 	T(ADD(sp, 2));	// 85514                  add     sp, 2 ;~ 17C5:14F5
cs=0x17c5;eip=0x0014f8; 	T(sp = bp;);	// 85515                  mov     sp, bp ;~ 17C5:14F8
cs=0x17c5;eip=0x0014fa; 	X(POP(bp));	// 85516                  pop     bp ;~ 17C5:14FA
cs=0x17c5;eip=0x0014fb; 	J(RETN(0));	// 85517                  retn ;~ 17C5:14FB

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_27718: 	goto sub_27718;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group17(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group17:
    _begin:
sub_2772c:
	// 85525 
#undef var_6
#define var_6 -6
	// 85528 var_6           = word ptr -6 ;~ 17C5:14FC
#undef arg_0
#define arg_0 4
	// 85529 arg_0           = word ptr  4 ;~ 17C5:14FC
cs=0x17c5;eip=0x0014fc; 	X(PUSH(bp));	// 85533                  push    bp ;~ 17C5:14FC
cs=0x17c5;eip=0x0014fd; 	T(bp = sp;);	// 85534                  mov     bp, sp ;~ 17C5:14FD
cs=0x17c5;eip=0x0014ff; 	T(SUB(sp, 6));	// 85535                  sub     sp, 6 ;~ 17C5:14FF
cs=0x17c5;eip=0x001502; 	X(PUSH(si));	// 85536                  push    si ;~ 17C5:1502
cs=0x17c5;eip=0x001503; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0x0FFFF));	// 85537                  mov     [bp+var_6], 0FFFFh ;~ 17C5:1503
cs=0x17c5;eip=0x001508; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 85538                  mov     si, [bp+arg_0] ;~ 17C5:1508
cs=0x17c5;eip=0x00150b; 	T(SHL(si, 1));	// 85539                  shl     si, 1 ;~ 17C5:150B
cs=0x17c5;eip=0x00150d; 	T(ADD(si, 0x7EA));	// 85540                  add     si, 7EAh ;~ 17C5:150D
cs=0x17c5;eip=0x001511; 	T(MOV(ax, *(dw*)(raddr(ds,si))));	// 85541                  mov     ax, [si] ;~ 17C5:1511
cs=0x17c5;eip=0x001513; 	X(DEC(*(dw*)(raddr(ds,si))));	// 85542                  dec     word ptr [si] ;~ 17C5:1513
cs=0x17c5;eip=0x001515; 	T(OR(ax, ax));	// 85543                  or      ax, ax ;~ 17C5:1515
cs=0x17c5;eip=0x001517; 	J(JG(sub_2775a));	// 85544                  jg      short sub_2775A ;~ 17C5:1517
cs=0x17c5;eip=0x001519; 	X(MOV(*(dw*)(raddr(ds,si)), 0));	// 85545                  mov     word ptr [si], 0 ;~ 17C5:1519
cs=0x17c5;eip=0x00151d; 	T(ax = 0x0E66;);	// 85546                  mov     ax, 0E66h ;~ 17C5:151D
cs=0x17c5;eip=0x001520; 	X(PUSH(ax));	// 85547                  push    ax ;~ 17C5:1520
cs=0x17c5;eip=0x001521; 	J(CALL(sub_30414,0));	// 85548                  call    sub_30414 ;~ 17C5:1521
cs=0x17c5;eip=0x001524; 	T(ADD(sp, 2));	// 85549                  add     sp, 2 ;~ 17C5:1524
cs=0x17c5;eip=0x001527; 	J(JMP(loc_27861));	// 85550                  jmp     loc_27861 ;~ 17C5:1527
sub_2775a:
	// 85557 
cs=0x17c5;eip=0x00152a; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 1));	// 85558                  mov     word ptr [bp-4], 1 ;~ 17C5:152A
cs=0x17c5;eip=0x00152f; 	J(JMP(loc_27764));	// 85559                  jmp     short loc_27764 ;~ 17C5:152F
loc_27761:
	// 4996 
cs=0x17c5;eip=0x001531; 	X(INC(*(dw*)(raddr(ss,bp-4))));	// 85563                  inc     word ptr [bp-4] ;~ 17C5:1531
loc_27764:
	// 4997 
cs=0x17c5;eip=0x001534; 	T(CMP(*(dw*)(raddr(ss,bp-4)), 4));	// 85566                  cmp     word ptr [bp-4], 4 ;~ 17C5:1534
seg2623_1538_proc:
	// 85569 
cs=0x17c5;eip=0x001538; 	J(JGE(loc_27783));	// 85569                  jge     short loc_27783 ;~ 17C5:1538
cs=0x17c5;eip=0x00153a; 	T(MOV(bx, *(dw*)(raddr(ss,bp-4))));	// 85570                  mov     bx, [bp-4] ;~ 17C5:153A
cs=0x17c5;eip=0x00153d; 	T(ax = bx;);	// 85571                  mov     ax, bx ;~ 17C5:153D
cs=0x17c5;eip=0x00153f; 	T(SHL(bx, 1));	// 85572                  shl     bx, 1 ;~ 17C5:153F
cs=0x17c5;eip=0x001541; 	T(ADD(bx, ax));	// 85573                  add     bx, ax ;~ 17C5:1541
cs=0x17c5;eip=0x001543; 	T(SHL(bx, 1));	// 85574                  shl     bx, 1 ;~ 17C5:1543
cs=0x17c5;eip=0x001545; 	T(SHL(bx, 1));	// 85575                  shl     bx, 1 ;~ 17C5:1545
cs=0x17c5;eip=0x001547; 	T(CMP(*(dw*)(raddr(ds,bx+0x0B2A)), 0));	// 85576                  cmp     word ptr [bx+0B2Ah], 0 ;~ 17C5:1547
cs=0x17c5;eip=0x00154c; 	J(JNZ(loc_27781));	// 85577                  jnz     short loc_27781 ;~ 17C5:154C
cs=0x17c5;eip=0x00154e; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 85578                  mov     [bp-6], ax ;~ 17C5:154E
loc_27781:
	// 4998 
cs=0x17c5;eip=0x001551; 	J(JMP(loc_27761));	// 85581                  jmp     short loc_27761 ;~ 17C5:1551
loc_27783:
	// 4999 
cs=0x17c5;eip=0x001553; 	T(CMP(*(dw*)(raddr(ss,bp-6)), 0x0FFFF));	// 85585                  cmp     word ptr [bp-6], 0FFFFh ;~ 17C5:1553
cs=0x17c5;eip=0x001557; 	J(JNZ(loc_2778c));	// 85586                  jnz     short loc_2778C ;~ 17C5:1557
cs=0x17c5;eip=0x001559; 	J(JMP(loc_27853));	// 85587                  jmp     loc_27853 ;~ 17C5:1559
loc_2778c:
	// 5000 
cs=0x17c5;eip=0x00155c; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 85591                  mov     ax, [bp-6] ;~ 17C5:155C
cs=0x17c5;eip=0x00155f; 	T(cx = ax;);	// 85592                  mov     cx, ax ;~ 17C5:155F
cs=0x17c5;eip=0x001561; 	T(SHL(ax, 1));	// 85593                  shl     ax, 1 ;~ 17C5:1561
cs=0x17c5;eip=0x001563; 	T(ADD(ax, cx));	// 85594                  add     ax, cx ;~ 17C5:1563
cs=0x17c5;eip=0x001565; 	T(SHL(ax, 1));	// 85595                  shl     ax, 1 ;~ 17C5:1565
cs=0x17c5;eip=0x001567; 	T(SHL(ax, 1));	// 85596                  shl     ax, 1 ;~ 17C5:1567
cs=0x17c5;eip=0x001569; 	T(si = ax;);	// 85597                  mov     si, ax ;~ 17C5:1569
cs=0x17c5;eip=0x00156b; 	T(ax = word_520f0;);	// 85598                  mov     ax, ds:word_520F0 ;~ 17C5:156B
cs=0x17c5;eip=0x00156e; 	X(MOV(*(dw*)(raddr(ds,si+0x0B22)), ax));	// 85599                  mov     [si+0B22h], ax ;~ 17C5:156E
cs=0x17c5;eip=0x001572; 	T(ax = word_52100;);	// 85600                  mov     ax, ds:word_52100 ;~ 17C5:1572
cs=0x17c5;eip=0x001575; 	X(MOV(*(dw*)(raddr(ds,si+0x0B24)), ax));	// 85601                  mov     [si+0B24h], ax ;~ 17C5:1575
cs=0x17c5;eip=0x001579; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 85602                  mov     ax, [bp+4] ;~ 17C5:1579
cs=0x17c5;eip=0x00157c; 	X(MOV(*(dw*)(raddr(ds,si+0x0B28)), ax));	// 85603                  mov     [si+0B28h], ax ;~ 17C5:157C
cs=0x17c5;eip=0x001580; 	T(ax = word_492e8;);	// 85604                  mov     ax, word_492E8 ;~ 17C5:1580
cs=0x17c5;eip=0x001583; 	T(cx = ax;);	// 85605                  mov     cx, ax ;~ 17C5:1583
cs=0x17c5;eip=0x001585; 	T(SHL(ax, 1));	// 85606                  shl     ax, 1 ;~ 17C5:1585
cs=0x17c5;eip=0x001587; 	T(ADD(ax, cx));	// 85607                  add     ax, cx ;~ 17C5:1587
cs=0x17c5;eip=0x001589; 	T(SUB(ax, 0x0F));	// 85608                  sub     ax, 0Fh ;~ 17C5:1589
cs=0x17c5;eip=0x00158c; 	T(NEG(ax));	// 85609                  neg     ax ;~ 17C5:158C
cs=0x17c5;eip=0x00158e; 	X(IMUL1_2(word_492f4));	// 85610                  imul    word_492F4 ;~ 17C5:158E
cs=0x17c5;eip=0x001592; 	X(MOV(*(dw*)(raddr(ds,si+0x0B2A)), ax));	// 85611                  mov     [si+0B2Ah], ax ;~ 17C5:1592
cs=0x17c5;eip=0x001596; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 85612                  mov     ax, [bp+4] ;~ 17C5:1596
cs=0x17c5;eip=0x001599; 	J(JMP(loc_277db));	// 85613                  jmp     short loc_277DB ;~ 17C5:1599
loc_277cb:
	// 5001 
cs=0x17c5;eip=0x00159b; 	X(MOV(*(dw*)(raddr(ss,bp-2)), 0x0E77));	// 85617                  mov     word ptr [bp-2], 0E77h ;~ 17C5:159B
cs=0x17c5;eip=0x0015a0; 	J(JMP(loc_277e7));	// 85618                  jmp     short loc_277E7 ;~ 17C5:15A0
loc_277d2:
	// 5002 
cs=0x17c5;eip=0x0015a2; 	X(MOV(*(dw*)(raddr(ss,bp-2)), 0x0E7D));	// 85622                  mov     word ptr [bp-2], 0E7Dh ;~ 17C5:15A2
cs=0x17c5;eip=0x0015a7; 	J(JMP(loc_277e7));	// 85623                  jmp     short loc_277E7 ;~ 17C5:15A7
ret_17c5_15a9:
	// 5003 
cs=0x17c5;eip=0x0015a9; 	J(JMP(loc_277e7));	// 85625                  jmp     short loc_277E7 ;~ 17C5:15A9
loc_277db:
	// 5004 
cs=0x17c5;eip=0x0015ab; 	T(CMP(ax, 1));	// 85629                  cmp     ax, 1 ;~ 17C5:15AB
cs=0x17c5;eip=0x0015ae; 	J(JZ(loc_277cb));	// 85630                  jz      short loc_277CB ;~ 17C5:15AE
cs=0x17c5;eip=0x0015b0; 	T(CMP(ax, 2));	// 85631                  cmp     ax, 2 ;~ 17C5:15B0
cs=0x17c5;eip=0x0015b3; 	J(JZ(loc_277d2));	// 85632                  jz      short loc_277D2 ;~ 17C5:15B3
cs=0x17c5;eip=0x0015b5; 	J({;});	// 85633                  jmp     short $+2 ;~ 17C5:15B5
loc_277e7:
	// 5005 
cs=0x17c5;eip=0x0015b7; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 85638                  push    word ptr [bp-2] ;~ 17C5:15B7
cs=0x17c5;eip=0x0015ba; 	T(ax = 0x66C4;);	// 85639                  mov     ax, 66C4h ;~ 17C5:15BA
cs=0x17c5;eip=0x0015bd; 	X(PUSH(ax));	// 85640                  push    ax ;~ 17C5:15BD
cs=0x17c5;eip=0x0015be; 	J(CALL(sub_34c1c,0));	// 85641                  call    sub_34C1C ;~ 17C5:15BE
cs=0x17c5;eip=0x0015c1; 	T(ADD(sp, 4));	// 85642                  add     sp, 4 ;~ 17C5:15C1
cs=0x17c5;eip=0x0015c4; 	T(ax = 0x0E83;);	// 85643                  mov     ax, 0E83h ;~ 17C5:15C4
cs=0x17c5;eip=0x0015c7; 	X(PUSH(ax));	// 85644                  push    ax ;~ 17C5:15C7
cs=0x17c5;eip=0x0015c8; 	T(ax = 0x66C4;);	// 85645                  mov     ax, 66C4h ;~ 17C5:15C8
cs=0x17c5;eip=0x0015cb; 	X(PUSH(ax));	// 85646                  push    ax ;~ 17C5:15CB
cs=0x17c5;eip=0x0015cc; 	J(CALL(sub_34bdc,0));	// 85647                  call    sub_34BDC ;~ 17C5:15CC
cs=0x17c5;eip=0x0015cf; 	T(ADD(sp, 4));	// 85648                  add     sp, 4 ;~ 17C5:15CF
cs=0x17c5;eip=0x0015d2; 	T(ax = 0x66C4;);	// 85649                  mov     ax, 66C4h ;~ 17C5:15D2
cs=0x17c5;eip=0x0015d5; 	X(PUSH(ax));	// 85650                  push    ax ;~ 17C5:15D5
cs=0x17c5;eip=0x0015d6; 	J(CALL(sub_30414,0));	// 85651                  call    sub_30414 ;~ 17C5:15D6
cs=0x17c5;eip=0x0015d9; 	T(ADD(sp, 2));	// 85652                  add     sp, 2 ;~ 17C5:15D9
cs=0x17c5;eip=0x0015dc; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 85653                  push    word ptr [bp-2] ;~ 17C5:15DC
cs=0x17c5;eip=0x0015df; 	T(ax = 0x66C4;);	// 85654                  mov     ax, 66C4h ;~ 17C5:15DF
cs=0x17c5;eip=0x0015e2; 	X(PUSH(ax));	// 85655                  push    ax ;~ 17C5:15E2
cs=0x17c5;eip=0x0015e3; 	J(CALL(sub_34c1c,0));	// 85656                  call    sub_34C1C ;~ 17C5:15E3
cs=0x17c5;eip=0x0015e6; 	T(ADD(sp, 4));	// 85657                  add     sp, 4 ;~ 17C5:15E6
cs=0x17c5;eip=0x0015e9; 	T(ax = 0x0E8D;);	// 85658                  mov     ax, 0E8Dh ;~ 17C5:15E9
cs=0x17c5;eip=0x0015ec; 	X(PUSH(ax));	// 85659                  push    ax ;~ 17C5:15EC
cs=0x17c5;eip=0x0015ed; 	T(ax = 0x66C4;);	// 85660                  mov     ax, 66C4h ;~ 17C5:15ED
cs=0x17c5;eip=0x0015f0; 	X(PUSH(ax));	// 85661                  push    ax ;~ 17C5:15F0
cs=0x17c5;eip=0x0015f1; 	J(CALL(sub_34bdc,0));	// 85662                  call    sub_34BDC ;~ 17C5:15F1
cs=0x17c5;eip=0x0015f4; 	T(ADD(sp, 4));	// 85663                  add     sp, 4 ;~ 17C5:15F4
cs=0x17c5;eip=0x0015f7; 	T(ax = 0x0A;);	// 85664                  mov     ax, 0Ah ;~ 17C5:15F7
cs=0x17c5;eip=0x0015fa; 	X(PUSH(ax));	// 85665                  push    ax ;~ 17C5:15FA
cs=0x17c5;eip=0x0015fb; 	T(ax = 0x9780;);	// 85666                  mov     ax, 9780h ;~ 17C5:15FB
cs=0x17c5;eip=0x0015fe; 	X(PUSH(ax));	// 85667                  push    ax ;~ 17C5:15FE
cs=0x17c5;eip=0x0015ff; 	T(MOV(bx, *(dw*)(raddr(ss,bp+4))));	// 85668                  mov     bx, [bp+4] ;~ 17C5:15FF
cs=0x17c5;eip=0x001602; 	T(SHL(bx, 1));	// 85669                  shl     bx, 1 ;~ 17C5:1602
cs=0x17c5;eip=0x001604; 	X(PUSH(*(dw*)(raddr(ds,bx+0x7EA))));	// 85670                  push    word ptr [bx+7EAh] ;~ 17C5:1604
cs=0x17c5;eip=0x001608; 	J(CALL(sub_34c6a,0));	// 85671                  call    sub_34C6A ;~ 17C5:1608
cs=0x17c5;eip=0x00160b; 	T(ADD(sp, 6));	// 85672                  add     sp, 6 ;~ 17C5:160B
cs=0x17c5;eip=0x00160e; 	X(PUSH(ax));	// 85673                  push    ax ;~ 17C5:160E
cs=0x17c5;eip=0x00160f; 	T(ax = 0x66C4;);	// 85674                  mov     ax, 66C4h ;~ 17C5:160F
cs=0x17c5;eip=0x001612; 	X(PUSH(ax));	// 85675                  push    ax ;~ 17C5:1612
cs=0x17c5;eip=0x001613; 	J(CALL(sub_34bdc,0));	// 85676                  call    sub_34BDC ;~ 17C5:1613
cs=0x17c5;eip=0x001616; 	T(ADD(sp, 4));	// 85677                  add     sp, 4 ;~ 17C5:1616
cs=0x17c5;eip=0x001619; 	T(ax = 0x66C4;);	// 85678                  mov     ax, 66C4h ;~ 17C5:1619
cs=0x17c5;eip=0x00161c; 	X(PUSH(ax));	// 85679                  push    ax ;~ 17C5:161C
cs=0x17c5;eip=0x00161d; 	J(CALL(sub_30434,0));	// 85680                  call    sub_30434 ;~ 17C5:161D
cs=0x17c5;eip=0x001620; 	T(ADD(sp, 2));	// 85681                  add     sp, 2 ;~ 17C5:1620
loc_27853:
	// 5006 
cs=0x17c5;eip=0x001623; 	T(ax = 2;);	// 85684                  mov     ax, 2 ;~ 17C5:1623
cs=0x17c5;eip=0x001626; 	X(PUSH(ax));	// 85685                  push    ax ;~ 17C5:1626
cs=0x17c5;eip=0x001627; 	T(ax = 0x16;);	// 85686                  mov     ax, 16h ;~ 17C5:1627
cs=0x17c5;eip=0x00162a; 	X(PUSH(ax));	// 85687                  push    ax ;~ 17C5:162A
cs=0x17c5;eip=0x00162b; 	J(CALL(sub_33c65,0));	// 85688                  call    sub_33C65 ;~ 17C5:162B
cs=0x17c5;eip=0x00162e; 	T(ADD(sp, 4));	// 85690                  add     sp, 4 ;~ 17C5:162E
loc_27861:
	// 5007 
cs=0x17c5;eip=0x001631; 	X(POP(si));	// 85694                  pop     si ;~ 17C5:1631
cs=0x17c5;eip=0x001632; 	T(sp = bp;);	// 85695                  mov     sp, bp ;~ 17C5:1632
cs=0x17c5;eip=0x001634; 	X(POP(bp));	// 85696                  pop     bp ;~ 17C5:1634
cs=0x17c5;eip=0x001635; 	J(RETN(0));	// 85697                  retn ;~ 17C5:1635

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27761: 	goto loc_27761;
        case m2c::kloc_27764: 	goto loc_27764;
        case m2c::kloc_27781: 	goto loc_27781;
        case m2c::kloc_27783: 	goto loc_27783;
        case m2c::kloc_2778c: 	goto loc_2778c;
        case m2c::kloc_277cb: 	goto loc_277cb;
        case m2c::kloc_277d2: 	goto loc_277d2;
        case m2c::kloc_277db: 	goto loc_277db;
        case m2c::kloc_277e7: 	goto loc_277e7;
        case m2c::kloc_27853: 	goto loc_27853;
        case m2c::kloc_27861: 	goto loc_27861;
        case m2c::kret_17c5_15a9: 	goto ret_17c5_15a9;
        case m2c::kseg2623_1538_proc: 	goto seg2623_1538_proc;
        case m2c::ksub_2772c: 	goto sub_2772c;
        case m2c::ksub_2775a: 	goto sub_2775a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27866(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27866:
    _begin:
#undef var_2
#define var_2 -2
	// 85706 var_2           = word ptr -2 ;~ 17C5:1636
cs=0x17c5;eip=0x001636; 	X(PUSH(bp));	// 85708                  push    bp ;~ 17C5:1636
cs=0x17c5;eip=0x001637; 	T(bp = sp;);	// 85709                  mov     bp, sp ;~ 17C5:1637
cs=0x17c5;eip=0x001639; 	T(SUB(sp, 2));	// 85710                  sub     sp, 2 ;~ 17C5:1639
cs=0x17c5;eip=0x00163c; 	X(PUSH(si));	// 85711                  push    si ;~ 17C5:163C
cs=0x17c5;eip=0x00163d; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 85712                  mov     [bp+var_2], 0 ;~ 17C5:163D
cs=0x17c5;eip=0x001642; 	J(JMP(loc_27877));	// 85713                  jmp     short loc_27877 ;~ 17C5:1642
loc_27874:
	// 5008 
cs=0x17c5;eip=0x001644; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 85717                  inc     [bp+var_2] ;~ 17C5:1644
loc_27877:
	// 5009 
cs=0x17c5;eip=0x001647; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 4));	// 85720                  cmp     [bp+var_2], 4 ;~ 17C5:1647
cs=0x17c5;eip=0x00164b; 	J(JGE(loc_278a1));	// 85721                  jge     short loc_278A1 ;~ 17C5:164B
cs=0x17c5;eip=0x00164d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 85722                  mov     ax, [bp+var_2] ;~ 17C5:164D
cs=0x17c5;eip=0x001650; 	T(cx = ax;);	// 85723                  mov     cx, ax ;~ 17C5:1650
cs=0x17c5;eip=0x001652; 	T(SHL(ax, 1));	// 85724                  shl     ax, 1 ;~ 17C5:1652
cs=0x17c5;eip=0x001654; 	T(ADD(ax, cx));	// 85725                  add     ax, cx ;~ 17C5:1654
cs=0x17c5;eip=0x001656; 	T(SHL(ax, 1));	// 85726                  shl     ax, 1 ;~ 17C5:1656
cs=0x17c5;eip=0x001658; 	T(SHL(ax, 1));	// 85727                  shl     ax, 1 ;~ 17C5:1658
cs=0x17c5;eip=0x00165a; 	T(si = ax;);	// 85728                  mov     si, ax ;~ 17C5:165A
cs=0x17c5;eip=0x00165c; 	T(CMP(*(dw*)(raddr(ds,si+0x0B2A)), 0));	// 85729                  cmp     word ptr [si+0B2Ah], 0 ;~ 17C5:165C
cs=0x17c5;eip=0x001661; 	J(JZ(loc_2789f));	// 85730                  jz      short loc_2789F ;~ 17C5:1661
cs=0x17c5;eip=0x001663; 	X(DEC(*(dw*)(raddr(ds,si+0x0B2A))));	// 85731                  dec     word ptr [si+0B2Ah] ;~ 17C5:1663
cs=0x17c5;eip=0x001667; 	J(JNZ(loc_2789f));	// 85732                  jnz     short loc_2789F ;~ 17C5:1667
cs=0x17c5;eip=0x001669; 	X(MOV(*(dw*)(raddr(ds,si+0x0B28)), 0));	// 85733                  mov     word ptr [si+0B28h], 0 ;~ 17C5:1669
loc_2789f:
	// 5010 
cs=0x17c5;eip=0x00166f; 	J(JMP(loc_27874));	// 85737                  jmp     short loc_27874 ;~ 17C5:166F
loc_278a1:
	// 5011 
cs=0x17c5;eip=0x001671; 	X(POP(si));	// 85741                  pop     si ;~ 17C5:1671
cs=0x17c5;eip=0x001672; 	T(sp = bp;);	// 85742                  mov     sp, bp ;~ 17C5:1672
cs=0x17c5;eip=0x001674; 	X(POP(bp));	// 85743                  pop     bp ;~ 17C5:1674
cs=0x17c5;eip=0x001675; 	J(RETN(0));	// 85744                  retn ;~ 17C5:1675

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27874: 	goto loc_27874;
        case m2c::kloc_27877: 	goto loc_27877;
        case m2c::kloc_2789f: 	goto loc_2789f;
        case m2c::kloc_278a1: 	goto loc_278a1;
        case m2c::ksub_27866: 	goto sub_27866;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group18(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group18:
    _begin:
sub_278a6:
	// 85752 
#undef var_c
#define var_c -0x0C
	// 85754 var_C           = word ptr -0Ch ;~ 17C5:1676
#undef var_8
#define var_8 -8
	// 85755 var_8           = word ptr -8 ;~ 17C5:1676
#undef var_4
#define var_4 -4
	// 85756 var_4           = word ptr -4 ;~ 17C5:1676
cs=0x17c5;eip=0x001676; 	X(PUSH(bp));	// 85758                  push    bp ;~ 17C5:1676
cs=0x17c5;eip=0x001677; 	T(bp = sp;);	// 85759                  mov     bp, sp ;~ 17C5:1677
cs=0x17c5;eip=0x001679; 	T(SUB(sp, 0x0C));	// 85760                  sub     sp, 0Ch ;~ 17C5:1679
cs=0x17c5;eip=0x00167c; 	X(PUSH(si));	// 85761                  push    si ;~ 17C5:167C
cs=0x17c5;eip=0x00167d; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), 0));	// 85762                  mov     [bp+var_8], 0 ;~ 17C5:167D
cs=0x17c5;eip=0x001682; 	J(JMP(loc_278b7));	// 85763                  jmp     short loc_278B7 ;~ 17C5:1682
loc_278b4:
	// 5012 
cs=0x17c5;eip=0x001684; 	X(INC(*(dw*)(raddr(ss,bp+var_8))));	// 85767                  inc     [bp+var_8] ;~ 17C5:1684
loc_278b7:
	// 5013 
cs=0x17c5;eip=0x001687; 	T(ax = word_511d4;);	// 85770                  mov     ax, ds:word_511D4 ;~ 17C5:1687
cs=0x17c5;eip=0x00168a; 	T(ADD(ax, 4));	// 85771                  add     ax, 4 ;~ 17C5:168A
cs=0x17c5;eip=0x00168d; 	T(CMP(*(dw*)(raddr(ss,bp+var_8)), ax));	// 85772                  cmp     [bp+var_8], ax ;~ 17C5:168D
cs=0x17c5;eip=0x001690; 	J(JGE(loc_278f2));	// 85773                  jge     short loc_278F2 ;~ 17C5:1690
cs=0x17c5;eip=0x001692; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 85774                  mov     ax, [bp+var_8] ;~ 17C5:1692
cs=0x17c5;eip=0x001695; 	T(cx = ax;);	// 85775                  mov     cx, ax ;~ 17C5:1695
cs=0x17c5;eip=0x001697; 	T(SHL(ax, 1));	// 85776                  shl     ax, 1 ;~ 17C5:1697
cs=0x17c5;eip=0x001699; 	T(ADD(ax, cx));	// 85777                  add     ax, cx ;~ 17C5:1699
cs=0x17c5;eip=0x00169b; 	T(SHL(ax, 1));	// 85778                  shl     ax, 1 ;~ 17C5:169B
cs=0x17c5;eip=0x00169d; 	T(SHL(ax, 1));	// 85779                  shl     ax, 1 ;~ 17C5:169D
cs=0x17c5;eip=0x00169f; 	T(si = ax;);	// 85780                  mov     si, ax ;~ 17C5:169F
cs=0x17c5;eip=0x0016a1; 	T(CMP(*(dw*)(raddr(ds,si-0x6304)), 0));	// 85781                  cmp     word ptr [si-6304h], 0 ;~ 17C5:16A1
cs=0x17c5;eip=0x0016a6; 	J(JZ(loc_278f0));	// 85782                  jz      short loc_278F0 ;~ 17C5:16A6
cs=0x17c5;eip=0x0016a8; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FE))));	// 85783                  mov     ax, [si-62FEh] ;~ 17C5:16A8
cs=0x17c5;eip=0x0016ac; 	X(ADD(*(dw*)(raddr(ds,si-0x6304)), ax));	// 85784                  add     [si-6304h], ax ;~ 17C5:16AC
cs=0x17c5;eip=0x0016b0; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FC))));	// 85785                  mov     ax, [si-62FCh] ;~ 17C5:16B0
cs=0x17c5;eip=0x0016b4; 	X(ADD(*(dw*)(raddr(ds,si-0x6302)), ax));	// 85786                  add     [si-6302h], ax ;~ 17C5:16B4
cs=0x17c5;eip=0x0016b8; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FA))));	// 85787                  mov     ax, [si-62FAh] ;~ 17C5:16B8
cs=0x17c5;eip=0x0016bc; 	X(ADD(*(dw*)(raddr(ds,si-0x6300)), ax));	// 85788                  add     [si-6300h], ax ;~ 17C5:16BC
loc_278f0:
	// 5014 
cs=0x17c5;eip=0x0016c0; 	J(JMP(loc_278b4));	// 85791                  jmp     short loc_278B4 ;~ 17C5:16C0
loc_278f2:
	// 5015 
cs=0x17c5;eip=0x0016c2; 	T(TEST(*(db*)(&word_49918), 1));	// 85795                  test    byte ptr word_49918, 1 ;~ 17C5:16C2
cs=0x17c5;eip=0x0016c7; 	J(JNZ(loc_278fc));	// 85796                  jnz     short loc_278FC ;~ 17C5:16C7
cs=0x17c5;eip=0x0016c9; 	J(JMP(loc_27a6c));	// 85797                  jmp     loc_27A6C ;~ 17C5:16C9
loc_278fc:
	// 5016 
cs=0x17c5;eip=0x0016cc; 	T(ax = word_49918;);	// 85801                  mov     ax, word_49918 ;~ 17C5:16CC
cs=0x17c5;eip=0x0016cf; 	T(SAR(ax, 1));	// 85802                  sar     ax, 1 ;~ 17C5:16CF
cs=0x17c5;eip=0x0016d1; 	T(CWD);	// 85803                  cwd ;~ 17C5:16D1
cs=0x17c5;eip=0x0016d2; 	T(cx = word_511d4;);	// 85804                  mov     cx, ds:word_511D4 ;~ 17C5:16D2
cs=0x17c5;eip=0x0016d6; 	T(IDIV2(cx));	// 85805                  idiv    cx ;~ 17C5:16D6
cs=0x17c5;eip=0x0016d8; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), dx));	// 85806                  mov     [bp+var_C], dx ;~ 17C5:16D8
cs=0x17c5;eip=0x0016db; 	T(SUB(ax, ax));	// 85807                  sub     ax, ax ;~ 17C5:16DB
cs=0x17c5;eip=0x0016dd; 	X(PUSH(ax));	// 85808                  push    ax ;~ 17C5:16DD
cs=0x17c5;eip=0x0016de; 	J(CALL(sub_3344e,0));	// 85809                  call    sub_3344E ;~ 17C5:16DE
cs=0x17c5;eip=0x0016e1; 	T(ADD(sp, 2));	// 85810                  add     sp, 2 ;~ 17C5:16E1
cs=0x17c5;eip=0x0016e4; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 85811                  mov     [bp+var_4], ax ;~ 17C5:16E4
cs=0x17c5;eip=0x0016e7; 	T(OR(ax, ax));	// 85812                  or      ax, ax ;~ 17C5:16E7
cs=0x17c5;eip=0x0016e9; 	J(JNZ(loc_2791e));	// 85813                  jnz     short loc_2791E ;~ 17C5:16E9
cs=0x17c5;eip=0x0016eb; 	J(JMP(loc_27a18));	// 85814                  jmp     loc_27A18 ;~ 17C5:16EB
loc_2791e:
	// 5017 
cs=0x17c5;eip=0x0016ee; 	T(CMP(word_492e4, 0));	// 85818                  cmp     word_492E4, 0 ;~ 17C5:16EE
cs=0x17c5;eip=0x0016f3; 	J(JG(loc_27928));	// 85819                  jg      short loc_27928 ;~ 17C5:16F3
cs=0x17c5;eip=0x0016f5; 	J(JMP(loc_27a18));	// 85820                  jmp     loc_27A18 ;~ 17C5:16F5
loc_27928:
	// 5018 
cs=0x17c5;eip=0x0016f8; 	T(CMP(word_5206c, 0));	// 85824                  cmp     ds:word_5206C, 0 ;~ 17C5:16F8
cs=0x17c5;eip=0x0016fd; 	J(JZ(loc_27932));	// 85825                  jz      short loc_27932 ;~ 17C5:16FD
cs=0x17c5;eip=0x0016ff; 	J(JMP(loc_27a18));	// 85826                  jmp     loc_27A18 ;~ 17C5:16FF
loc_27932:
	// 5019 
cs=0x17c5;eip=0x001702; 	T(ax = 0x3E8;);	// 85830                  mov     ax, 3E8h ;~ 17C5:1702
seg2623_1705_proc:
	// 85833 
cs=0x17c5;eip=0x001705; 	X(PUSH(ax));	// 85833                  push    ax ;~ 17C5:1705
cs=0x17c5;eip=0x001706; 	T(SUB(ax, ax));	// 85834                  sub     ax, ax ;~ 17C5:1706
cs=0x17c5;eip=0x001708; 	X(PUSH(ax));	// 85835                  push    ax ;~ 17C5:1708
cs=0x17c5;eip=0x001709; 	T(ax = 0x28;);	// 85836                  mov     ax, 28h ; '(' ;~ 17C5:1709
cs=0x17c5;eip=0x00170c; 	T(CWD);	// 85837                  cwd ;~ 17C5:170C
cs=0x17c5;eip=0x00170d; 	T(cx = word_492f4;);	// 85838                  mov     cx, word_492F4 ;~ 17C5:170D
cs=0x17c5;eip=0x001711; 	T(IDIV2(cx));	// 85839                  idiv    cx ;~ 17C5:1711
cs=0x17c5;eip=0x001713; 	T(cx = word_492e4;);	// 85840                  mov     cx, word_492E4 ;~ 17C5:1713
cs=0x17c5;eip=0x001717; 	T(SUB(cx, ax));	// 85841                  sub     cx, ax ;~ 17C5:1717
cs=0x17c5;eip=0x001719; 	X(PUSH(cx));	// 85842                  push    cx ;~ 17C5:1719
sub_2794a:
	// 85847 
cs=0x17c5;eip=0x00171a; 	J(CALL(sub_33194,0));	// 85848                  call    sub_33194 ;~ 17C5:171A
cs=0x17c5;eip=0x00171d; 	T(ADD(sp, 6));	// 85849                  add     sp, 6 ;~ 17C5:171D
sub_27950:
	// 85857 
cs=0x17c5;eip=0x001720; 	X(word_492e4 = ax;);	// 85858                  mov     word_492E4, ax ;~ 17C5:1720
cs=0x17c5;eip=0x001723; 	T(ax = 2;);	// 85859                  mov     ax, 2 ;~ 17C5:1723
cs=0x17c5;eip=0x001726; 	X(PUSH(ax));	// 85860                  push    ax ;~ 17C5:1726
cs=0x17c5;eip=0x001727; 	T(ax = 4;);	// 85861                  mov     ax, 4 ;~ 17C5:1727
cs=0x17c5;eip=0x00172a; 	X(PUSH(ax));	// 85862                  push    ax ;~ 17C5:172A
cs=0x17c5;eip=0x00172b; 	J(CALL(sub_33c65,0));	// 85863                  call    sub_33C65 ;~ 17C5:172B
cs=0x17c5;eip=0x00172e; 	T(ADD(sp, 4));	// 85865                  add     sp, 4 ;~ 17C5:172E
cs=0x17c5;eip=0x001731; 	T(ax = 0x0BA;);	// 85866                  mov     ax, 0BAh ;~ 17C5:1731
cs=0x17c5;eip=0x001734; 	T(CWD);	// 85867                  cwd ;~ 17C5:1734
cs=0x17c5;eip=0x001735; 	T(cx = word_492f4;);	// 85868                  mov     cx, word_492F4 ;~ 17C5:1735
cs=0x17c5;eip=0x001739; 	T(IDIV2(cx));	// 85869                  idiv    cx ;~ 17C5:1739
cs=0x17c5;eip=0x00173b; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 85870                  mov     [bp-0Ah], ax ;~ 17C5:173B
cs=0x17c5;eip=0x00173e; 	X(PUSH(ax));	// 85871                  push    ax ;~ 17C5:173E
cs=0x17c5;eip=0x00173f; 	X(PUSH(word_4e2fa));	// 85872                  push    ds:word_4E2FA ;~ 17C5:173F
cs=0x17c5;eip=0x001743; 	J(CALL(sub_333a8,0));	// 85873                  call    sub_333A8 ;~ 17C5:1743
cs=0x17c5;eip=0x001746; 	T(ADD(sp, 4));	// 85874                  add     sp, 4 ;~ 17C5:1746
cs=0x17c5;eip=0x001749; 	T(cl = 5;);	// 85875                  mov     cl, 5 ;~ 17C5:1749
cs=0x17c5;eip=0x00174b; 	T(SHL(ax, cl));	// 85876                  shl     ax, cl ;~ 17C5:174B
cs=0x17c5;eip=0x00174d; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0C))));	// 85877                  mov     bx, [bp-0Ch] ;~ 17C5:174D
cs=0x17c5;eip=0x001750; 	T(cx = bx;);	// 85878                  mov     cx, bx ;~ 17C5:1750
cs=0x17c5;eip=0x001752; 	T(SHL(bx, 1));	// 85879                  shl     bx, 1 ;~ 17C5:1752
cs=0x17c5;eip=0x001754; 	T(ADD(bx, cx));	// 85880                  add     bx, cx ;~ 17C5:1754
cs=0x17c5;eip=0x001756; 	T(SHL(bx, 1));	// 85881                  shl     bx, 1 ;~ 17C5:1756
cs=0x17c5;eip=0x001758; 	T(SHL(bx, 1));	// 85882                  shl     bx, 1 ;~ 17C5:1758
cs=0x17c5;eip=0x00175a; 	X(MOV(*(dw*)(raddr(ds,bx-0x62FA)), ax));	// 85883                  mov     [bx-62FAh], ax ;~ 17C5:175A
cs=0x17c5;eip=0x00175e; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0A))));	// 85884                  push    word ptr [bp-0Ah] ;~ 17C5:175E
cs=0x17c5;eip=0x001761; 	X(PUSH(word_4e2fa));	// 85885                  push    ds:word_4E2FA ;~ 17C5:1761
cs=0x17c5;eip=0x001765; 	J(CALL(sub_333c0,0));	// 85886                  call    sub_333C0 ;~ 17C5:1765
cs=0x17c5;eip=0x001768; 	T(ADD(sp, 4));	// 85887                  add     sp, 4 ;~ 17C5:1768
cs=0x17c5;eip=0x00176b; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 85888                  mov     [bp-0Ah], ax ;~ 17C5:176B
cs=0x17c5;eip=0x00176e; 	X(PUSH(ax));	// 85889                  push    ax ;~ 17C5:176E
cs=0x17c5;eip=0x00176f; 	X(PUSH(word_4e2f8));	// 85890                  push    ds:word_4E2F8 ;~ 17C5:176F
cs=0x17c5;eip=0x001773; 	J(CALL(sub_333a8,0));	// 85891                  call    sub_333A8 ;~ 17C5:1773
cs=0x17c5;eip=0x001776; 	T(ADD(sp, 4));	// 85892                  add     sp, 4 ;~ 17C5:1776
cs=0x17c5;eip=0x001779; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0C))));	// 85893                  mov     bx, [bp-0Ch] ;~ 17C5:1779
cs=0x17c5;eip=0x00177c; 	T(cx = bx;);	// 85894                  mov     cx, bx ;~ 17C5:177C
cs=0x17c5;eip=0x00177e; 	T(SHL(bx, 1));	// 85895                  shl     bx, 1 ;~ 17C5:177E
cs=0x17c5;eip=0x001780; 	T(ADD(bx, cx));	// 85896                  add     bx, cx ;~ 17C5:1780
cs=0x17c5;eip=0x001782; 	T(SHL(bx, 1));	// 85897                  shl     bx, 1 ;~ 17C5:1782
cs=0x17c5;eip=0x001784; 	T(SHL(bx, 1));	// 85898                  shl     bx, 1 ;~ 17C5:1784
cs=0x17c5;eip=0x001786; 	X(MOV(*(dw*)(raddr(ds,bx-0x62FE)), ax));	// 85899                  mov     [bx-62FEh], ax ;~ 17C5:1786
cs=0x17c5;eip=0x00178a; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0A))));	// 85900                  push    word ptr [bp-0Ah] ;~ 17C5:178A
cs=0x17c5;eip=0x00178d; 	X(PUSH(word_4e2f8));	// 85901                  push    ds:word_4E2F8 ;~ 17C5:178D
cs=0x17c5;eip=0x001791; 	J(CALL(sub_333c0,0));	// 85902                  call    sub_333C0 ;~ 17C5:1791
cs=0x17c5;eip=0x001794; 	T(ADD(sp, 4));	// 85903                  add     sp, 4 ;~ 17C5:1794
cs=0x17c5;eip=0x001797; 	T(NEG(ax));	// 85904                  neg     ax ;~ 17C5:1797
cs=0x17c5;eip=0x001799; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0C))));	// 85905                  mov     bx, [bp-0Ch] ;~ 17C5:1799
cs=0x17c5;eip=0x00179c; 	T(cx = bx;);	// 85906                  mov     cx, bx ;~ 17C5:179C
cs=0x17c5;eip=0x00179e; 	T(SHL(bx, 1));	// 85907                  shl     bx, 1 ;~ 17C5:179E
cs=0x17c5;eip=0x0017a0; 	T(ADD(bx, cx));	// 85908                  add     bx, cx ;~ 17C5:17A0
cs=0x17c5;eip=0x0017a2; 	T(SHL(bx, 1));	// 85909                  shl     bx, 1 ;~ 17C5:17A2
cs=0x17c5;eip=0x0017a4; 	T(SHL(bx, 1));	// 85910                  shl     bx, 1 ;~ 17C5:17A4
cs=0x17c5;eip=0x0017a6; 	X(MOV(*(dw*)(raddr(ds,bx-0x62FC)), ax));	// 85911                  mov     [bx-62FCh], ax ;~ 17C5:17A6
cs=0x17c5;eip=0x0017aa; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0C))));	// 85912                  mov     ax, [bp-0Ch] ;~ 17C5:17AA
cs=0x17c5;eip=0x0017ad; 	T(cx = ax;);	// 85913                  mov     cx, ax ;~ 17C5:17AD
cs=0x17c5;eip=0x0017af; 	T(SHL(ax, 1));	// 85914                  shl     ax, 1 ;~ 17C5:17AF
cs=0x17c5;eip=0x0017b1; 	T(ADD(ax, cx));	// 85915                  add     ax, cx ;~ 17C5:17B1
cs=0x17c5;eip=0x0017b3; 	T(SHL(ax, 1));	// 85916                  shl     ax, 1 ;~ 17C5:17B3
cs=0x17c5;eip=0x0017b5; 	T(SHL(ax, 1));	// 85917                  shl     ax, 1 ;~ 17C5:17B5
cs=0x17c5;eip=0x0017b7; 	T(si = ax;);	// 85918                  mov     si, ax ;~ 17C5:17B7
cs=0x17c5;eip=0x0017b9; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FE))));	// 85919                  mov     ax, [si-62FEh] ;~ 17C5:17B9
cs=0x17c5;eip=0x0017bd; 	T(ADD(ax, word_520f0));	// 85920                  add     ax, ds:word_520F0 ;~ 17C5:17BD
cs=0x17c5;eip=0x0017c1; 	X(MOV(*(dw*)(raddr(ds,si-0x6304)), ax));	// 85921                  mov     [si-6304h], ax ;~ 17C5:17C1
cs=0x17c5;eip=0x0017c5; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FC))));	// 85922                  mov     ax, [si-62FCh] ;~ 17C5:17C5
cs=0x17c5;eip=0x0017c9; 	T(ADD(ax, word_52100));	// 85923                  add     ax, ds:word_52100 ;~ 17C5:17C9
cs=0x17c5;eip=0x0017cd; 	X(MOV(*(dw*)(raddr(ds,si-0x6302)), ax));	// 85924                  mov     [si-6302h], ax ;~ 17C5:17CD
cs=0x17c5;eip=0x0017d1; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FA))));	// 85925                  mov     ax, [si-62FAh] ;~ 17C5:17D1
cs=0x17c5;eip=0x0017d5; 	T(ADD(ax, word_4e2fe));	// 85926                  add     ax, ds:word_4E2FE ;~ 17C5:17D5
cs=0x17c5;eip=0x0017d9; 	T(SUB(ax, 2));	// 85927                  sub     ax, 2 ;~ 17C5:17D9
cs=0x17c5;eip=0x0017dc; 	X(MOV(*(dw*)(raddr(ds,si-0x6300)), ax));	// 85928                  mov     [si-6300h], ax ;~ 17C5:17DC
cs=0x17c5;eip=0x0017e0; 	X(word_4f218 = 1;);	// 85929                  mov     ds:word_4F218, 1 ;~ 17C5:17E0
cs=0x17c5;eip=0x0017e6; 	J(JMP(loc_27a31));	// 85930                  jmp     short loc_27A31 ;~ 17C5:17E6
loc_27a18:
	// 5020 
cs=0x17c5;eip=0x0017e8; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0C))));	// 85935                  mov     bx, [bp-0Ch] ;~ 17C5:17E8
cs=0x17c5;eip=0x0017eb; 	T(ax = bx;);	// 85936                  mov     ax, bx ;~ 17C5:17EB
cs=0x17c5;eip=0x0017ed; 	T(SHL(bx, 1));	// 85937                  shl     bx, 1 ;~ 17C5:17ED
cs=0x17c5;eip=0x0017ef; 	T(ADD(bx, ax));	// 85938                  add     bx, ax ;~ 17C5:17EF
cs=0x17c5;eip=0x0017f1; 	T(SHL(bx, 1));	// 85939                  shl     bx, 1 ;~ 17C5:17F1
cs=0x17c5;eip=0x0017f3; 	T(SHL(bx, 1));	// 85940                  shl     bx, 1 ;~ 17C5:17F3
cs=0x17c5;eip=0x0017f5; 	X(MOV(*(dw*)(raddr(ds,bx-0x6304)), 0));	// 85941                  mov     word ptr [bx-6304h], 0 ;~ 17C5:17F5
cs=0x17c5;eip=0x0017fb; 	X(word_4f218 = 0;);	// 85942                  mov     ds:word_4F218, 0 ;~ 17C5:17FB
loc_27a31:
	// 5021 
cs=0x17c5;eip=0x001801; 	T(CMP(*(dw*)(raddr(ss,bp-4)), 0));	// 85945                  cmp     word ptr [bp-4], 0 ;~ 17C5:1801
cs=0x17c5;eip=0x001805; 	J(JZ(loc_27a6c));	// 85946                  jz      short loc_27A6C ;~ 17C5:1805
cs=0x17c5;eip=0x001807; 	T(ax = 0x0E8F;);	// 85947                  mov     ax, 0E8Fh ;~ 17C5:1807
cs=0x17c5;eip=0x00180a; 	X(PUSH(ax));	// 85948                  push    ax ;~ 17C5:180A
cs=0x17c5;eip=0x00180b; 	T(ax = 0x66C4;);	// 85949                  mov     ax, 66C4h ;~ 17C5:180B
cs=0x17c5;eip=0x00180e; 	X(PUSH(ax));	// 85950                  push    ax ;~ 17C5:180E
cs=0x17c5;eip=0x00180f; 	J(CALL(sub_34c1c,0));	// 85951                  call    sub_34C1C ;~ 17C5:180F
cs=0x17c5;eip=0x001812; 	T(ADD(sp, 4));	// 85953                  add     sp, 4 ;~ 17C5:1812
cs=0x17c5;eip=0x001815; 	T(ax = 0x0A;);	// 85954                  mov     ax, 0Ah ;~ 17C5:1815
cs=0x17c5;eip=0x001818; 	X(PUSH(ax));	// 85955                  push    ax ;~ 17C5:1818
cs=0x17c5;eip=0x001819; 	T(ax = 0x9780;);	// 85956                  mov     ax, 9780h ;~ 17C5:1819
cs=0x17c5;eip=0x00181c; 	X(PUSH(ax));	// 85957                  push    ax ;~ 17C5:181C
cs=0x17c5;eip=0x00181d; 	X(PUSH(word_492e4));	// 85958                  push    word_492E4 ;~ 17C5:181D
cs=0x17c5;eip=0x001821; 	J(CALL(sub_34c6a,0));	// 85959                  call    sub_34C6A ;~ 17C5:1821
cs=0x17c5;eip=0x001824; 	T(ADD(sp, 6));	// 85960                  add     sp, 6 ;~ 17C5:1824
cs=0x17c5;eip=0x001827; 	X(PUSH(ax));	// 85961                  push    ax ;~ 17C5:1827
cs=0x17c5;eip=0x001828; 	T(ax = 0x66C4;);	// 85962                  mov     ax, 66C4h ;~ 17C5:1828
cs=0x17c5;eip=0x00182b; 	X(PUSH(ax));	// 85963                  push    ax ;~ 17C5:182B
cs=0x17c5;eip=0x00182c; 	J(CALL(sub_34bdc,0));	// 85964                  call    sub_34BDC ;~ 17C5:182C
cs=0x17c5;eip=0x00182f; 	T(ADD(sp, 4));	// 85965                  add     sp, 4 ;~ 17C5:182F
cs=0x17c5;eip=0x001832; 	T(ax = 0x66C4;);	// 85966                  mov     ax, 66C4h ;~ 17C5:1832
cs=0x17c5;eip=0x001835; 	X(PUSH(ax));	// 85967                  push    ax ;~ 17C5:1835
cs=0x17c5;eip=0x001836; 	J(CALL(sub_30434,0));	// 85968                  call    sub_30434 ;~ 17C5:1836
cs=0x17c5;eip=0x001839; 	T(ADD(sp, 2));	// 85969                  add     sp, 2 ;~ 17C5:1839
loc_27a6c:
	// 5022 
cs=0x17c5;eip=0x00183c; 	X(POP(si));	// 85974                  pop     si ;~ 17C5:183C
cs=0x17c5;eip=0x00183d; 	T(sp = bp;);	// 85975                  mov     sp, bp ;~ 17C5:183D
cs=0x17c5;eip=0x00183f; 	X(POP(bp));	// 85976                  pop     bp ;~ 17C5:183F
cs=0x17c5;eip=0x001840; 	J(RETN(0));	// 85977                  retn ;~ 17C5:1840

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_278b4: 	goto loc_278b4;
        case m2c::kloc_278b7: 	goto loc_278b7;
        case m2c::kloc_278f0: 	goto loc_278f0;
        case m2c::kloc_278f2: 	goto loc_278f2;
        case m2c::kloc_278fc: 	goto loc_278fc;
        case m2c::kloc_2791e: 	goto loc_2791e;
        case m2c::kloc_27928: 	goto loc_27928;
        case m2c::kloc_27932: 	goto loc_27932;
        case m2c::kloc_27a18: 	goto loc_27a18;
        case m2c::kloc_27a31: 	goto loc_27a31;
        case m2c::kloc_27a6c: 	goto loc_27a6c;
        case m2c::kseg2623_1705_proc: 	goto seg2623_1705_proc;
        case m2c::ksub_278a6: 	goto sub_278a6;
        case m2c::ksub_2794a: 	goto sub_2794a;
        case m2c::ksub_27950: 	goto sub_27950;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group19(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group19:
    _begin:
sub_27a71:
	// 85985 
#undef var_4
#define var_4 -4
	// 85987 var_4           = word ptr -4 ;~ 17C5:1841
#undef var_2
#define var_2 -2
	// 85988 var_2           = word ptr -2 ;~ 17C5:1841
cs=0x17c5;eip=0x001841; 	X(PUSH(bp));	// 85992                  push    bp ;~ 17C5:1841
cs=0x17c5;eip=0x001842; 	T(bp = sp;);	// 85993                  mov     bp, sp ;~ 17C5:1842
cs=0x17c5;eip=0x001844; 	T(SUB(sp, 4));	// 85994                  sub     sp, 4 ;~ 17C5:1844
cs=0x17c5;eip=0x001847; 	X(PUSH(di));	// 85995                  push    di ;~ 17C5:1847
cs=0x17c5;eip=0x001848; 	X(PUSH(si));	// 85996                  push    si ;~ 17C5:1848
cs=0x17c5;eip=0x001849; 	T(CMP(word_49926, 0x0FFFF));	// 85997                  cmp     word_49926, 0FFFFh ;~ 17C5:1849
cs=0x17c5;eip=0x00184e; 	J(JZ(loc_27aff));	// 85998                  jz      short loc_27AFF ;~ 17C5:184E
cs=0x17c5;eip=0x001850; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 85999                  mov     [bp+var_2], 0 ;~ 17C5:1850
cs=0x17c5;eip=0x001855; 	J(JMP(loc_27a8a));	// 86000                  jmp     short loc_27A8A ;~ 17C5:1855
loc_27a87:
	// 5023 
cs=0x17c5;eip=0x001857; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 86004                  inc     [bp+var_2] ;~ 17C5:1857
loc_27a8a:
	// 5024 
cs=0x17c5;eip=0x00185a; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 8));	// 86007                  cmp     [bp+var_2], 8 ;~ 17C5:185A
cs=0x17c5;eip=0x00185e; 	J(JGE(loc_27aaf));	// 86008                  jge     short loc_27AAF ;~ 17C5:185E
cs=0x17c5;eip=0x001860; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_2))));	// 86009                  mov     si, [bp+var_2] ;~ 17C5:1860
cs=0x17c5;eip=0x001863; 	T(cl = 3;);	// 86010                  mov     cl, 3 ;~ 17C5:1863
cs=0x17c5;eip=0x001865; 	T(SHL(si, cl));	// 86011                  shl     si, cl ;~ 17C5:1865
cs=0x17c5;eip=0x001867; 	X(ADD(*(dw*)(raddr(ds,si+0x0B56)), 0x0A));	// 86012                  add     word ptr [si+0B56h], 0Ah ;~ 17C5:1867
cs=0x17c5;eip=0x00186c; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0B56))));	// 86013                  mov     ax, [si+0B56h] ;~ 17C5:186C
cs=0x17c5;eip=0x001870; 	T(cl = 9;);	// 86014                  mov     cl, 9 ;~ 17C5:1870
cs=0x17c5;eip=0x001872; 	T(SAR(ax, cl));	// 86015                  sar     ax, cl ;~ 17C5:1872
cs=0x17c5;eip=0x001874; 	X(ADD(*(dw*)(raddr(ds,si+0x0B54)), ax));	// 86016                  add     [si+0B54h], ax ;~ 17C5:1874
cs=0x17c5;eip=0x001878; 	X(ADD(*(raddr(ds,si+0x0B59)), 6));	// 86017                  add     byte ptr [si+0B59h], 6 ;~ 17C5:1878
cs=0x17c5;eip=0x00187d; 	J(JMP(loc_27a87));	// 86018                  jmp     short loc_27A87 ;~ 17C5:187D
loc_27aaf:
	// 5025 
cs=0x17c5;eip=0x00187f; 	T(TEST(*(db*)(&word_49918), 0x0F));	// 86022                  test    byte ptr word_49918, 0Fh ;~ 17C5:187F
cs=0x17c5;eip=0x001884; 	J(JNZ(loc_27aff));	// 86023                  jnz     short loc_27AFF ;~ 17C5:1884
cs=0x17c5;eip=0x001886; 	T(ax = word_49918;);	// 86024                  mov     ax, word_49918 ;~ 17C5:1886
cs=0x17c5;eip=0x001889; 	T(cl = 4;);	// 86025                  mov     cl, 4 ;~ 17C5:1889
cs=0x17c5;eip=0x00188b; 	T(SAR(ax, cl));	// 86026                  sar     ax, cl ;~ 17C5:188B
cs=0x17c5;eip=0x00188d; 	T(AND(ax, 7));	// 86027                  and     ax, 7 ;~ 17C5:188D
cs=0x17c5;eip=0x001890; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 86028                  mov     [bp+var_4], ax ;~ 17C5:1890
cs=0x17c5;eip=0x001893; 	T(si = ax;);	// 86029                  mov     si, ax ;~ 17C5:1893
cs=0x17c5;eip=0x001895; 	T(cl = 3;);	// 86030                  mov     cl, 3 ;~ 17C5:1895
cs=0x17c5;eip=0x001897; 	T(SHL(si, cl));	// 86031                  shl     si, cl ;~ 17C5:1897
cs=0x17c5;eip=0x001899; 	T(di = word_49926;);	// 86032                  mov     di, word_49926 ;~ 17C5:1899
seg2623_189d_proc:
	// 86035 
cs=0x17c5;eip=0x00189d; 	T(cl = 4;);	// 86035                  mov     cl, 4 ;~ 17C5:189D
cs=0x17c5;eip=0x00189f; 	T(SHL(di, cl));	// 86036                  shl     di, cl ;~ 17C5:189F
cs=0x17c5;eip=0x0018a1; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E52))));	// 86037                  mov     ax, [di-7E52h] ;~ 17C5:18A1
cs=0x17c5;eip=0x0018a5; 	X(MOV(*(dw*)(raddr(ds,si+0x0B52)), ax));	// 86038                  mov     [si+0B52h], ax ;~ 17C5:18A5
cs=0x17c5;eip=0x0018a9; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E50))));	// 86039                  mov     ax, [di-7E50h] ;~ 17C5:18A9
cs=0x17c5;eip=0x0018ad; 	X(MOV(*(dw*)(raddr(ds,si+0x0B54)), ax));	// 86040                  mov     [si+0B54h], ax ;~ 17C5:18AD
cs=0x17c5;eip=0x0018b1; 	X(MOV(*(dw*)(raddr(ds,si+0x0B56)), 0x80));	// 86041                  mov     word ptr [si+0B56h], 80h ;~ 17C5:18B1
cs=0x17c5;eip=0x0018b7; 	T(ax = 0x100;);	// 86042                  mov     ax, 100h ;~ 17C5:18B7
cs=0x17c5;eip=0x0018ba; 	X(PUSH(ax));	// 86043                  push    ax ;~ 17C5:18BA
cs=0x17c5;eip=0x0018bb; 	J(CALL(sub_33430,0));	// 86044                  call    sub_33430 ;~ 17C5:18BB
cs=0x17c5;eip=0x0018be; 	T(ADD(sp, 2));	// 86045                  add     sp, 2 ;~ 17C5:18BE
cs=0x17c5;eip=0x0018c1; 	T(ch = al;);	// 86046                  mov     ch, al ;~ 17C5:18C1
cs=0x17c5;eip=0x0018c3; 	T(SUB(cl, cl));	// 86047                  sub     cl, cl ;~ 17C5:18C3
cs=0x17c5;eip=0x0018c5; 	X(MOV(*(dw*)(raddr(ds,si+0x0B58)), cx));	// 86048                  mov     [si+0B58h], cx ;~ 17C5:18C5
cs=0x17c5;eip=0x0018c9; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 86049                  mov     ax, [bp-4] ;~ 17C5:18C9
cs=0x17c5;eip=0x0018cc; 	X(word_49672 = ax;);	// 86050                  mov     word_49672, ax ;~ 17C5:18CC
loc_27aff:
	// 5026 
cs=0x17c5;eip=0x0018cf; 	X(POP(si));	// 86055                  pop     si ;~ 17C5:18CF
cs=0x17c5;eip=0x0018d0; 	X(POP(di));	// 86056                  pop     di ;~ 17C5:18D0
cs=0x17c5;eip=0x0018d1; 	T(sp = bp;);	// 86057                  mov     sp, bp ;~ 17C5:18D1
cs=0x17c5;eip=0x0018d3; 	X(POP(bp));	// 86058                  pop     bp ;~ 17C5:18D3
cs=0x17c5;eip=0x0018d4; 	J(RETN(0));	// 86059                  retn ;~ 17C5:18D4

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27a87: 	goto loc_27a87;
        case m2c::kloc_27a8a: 	goto loc_27a8a;
        case m2c::kloc_27aaf: 	goto loc_27aaf;
        case m2c::kloc_27aff: 	goto loc_27aff;
        case m2c::kseg2623_189d_proc: 	goto seg2623_189d_proc;
        case m2c::ksub_27a71: 	goto sub_27a71;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27b05(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27b05:
    _begin:
cs=0x17c5;eip=0x0018d5; 	X(PUSH(bp));	// 86067                  push    bp ;~ 17C5:18D5
cs=0x17c5;eip=0x0018d6; 	T(bp = sp;);	// 86068                  mov     bp, sp ;~ 17C5:18D6
cs=0x17c5;eip=0x0018d8; 	T(CMP(word_521d2, 0));	// 86069                  cmp     ds:word_521D2, 0 ;~ 17C5:18D8
cs=0x17c5;eip=0x0018dd; 	J(JLE(loc_27b22));	// 86070                  jle     short loc_27B22 ;~ 17C5:18DD
cs=0x17c5;eip=0x0018df; 	T(CMP(word_5170c, 0x0FFF0));	// 86071                  cmp     ds:word_5170C, 0FFF0h ;~ 17C5:18DF
cs=0x17c5;eip=0x0018e4; 	J(JLE(loc_27b1b));	// 86072                  jle     short loc_27B1B ;~ 17C5:18E4
cs=0x17c5;eip=0x0018e6; 	X(SUB(word_5170c, 0x0C));	// 86073                  sub     ds:word_5170C, 0Ch ;~ 17C5:18E6
loc_27b1b:
	// 5027 
cs=0x17c5;eip=0x0018eb; 	T(ax = word_5170c;);	// 86076                  mov     ax, ds:word_5170C ;~ 17C5:18EB
cs=0x17c5;eip=0x0018ee; 	X(ADD(word_521d2, ax));	// 86077                  add     ds:word_521D2, ax ;~ 17C5:18EE
loc_27b22:
	// 5028 
cs=0x17c5;eip=0x0018f2; 	T(sp = bp;);	// 86080                  mov     sp, bp ;~ 17C5:18F2
cs=0x17c5;eip=0x0018f4; 	X(POP(bp));	// 86081                  pop     bp ;~ 17C5:18F4
cs=0x17c5;eip=0x0018f5; 	J(RETN(0));	// 86082                  retn ;~ 17C5:18F5

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27b1b: 	goto loc_27b1b;
        case m2c::kloc_27b22: 	goto loc_27b22;
        case m2c::ksub_27b05: 	goto sub_27b05;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27b26(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27b26:
    _begin:
#undef var_2
#define var_2 -2
	// 86092 var_2           = word ptr -2 ;~ 17C5:18F6
cs=0x17c5;eip=0x0018f6; 	X(PUSH(bp));	// 86094                  push    bp ;~ 17C5:18F6
cs=0x17c5;eip=0x0018f7; 	T(bp = sp;);	// 86095                  mov     bp, sp ;~ 17C5:18F7
cs=0x17c5;eip=0x0018f9; 	T(SUB(sp, 8));	// 86096                  sub     sp, 8 ;~ 17C5:18F9
cs=0x17c5;eip=0x0018fc; 	X(PUSH(si));	// 86097                  push    si ;~ 17C5:18FC
cs=0x17c5;eip=0x0018fd; 	J(CALL(seg2623_d1e8_proc,m2c::kloc_33418));	// 86098                  call    loc_33418 ;~ 17C5:18FD
cs=0x17c5;eip=0x001900; 	J(CALL(seg2623_8e38_proc,m2c::kloc_2f068));	// 86099                  call    loc_2F068 ;~ 17C5:1900
cs=0x17c5;eip=0x001903; 	T(ax = 0x1000;);	// 86101                  mov     ax, 1000h ;~ 17C5:1903
cs=0x17c5;eip=0x001906; 	X(PUSH(ax));	// 86102                  push    ax ;~ 17C5:1906
cs=0x17c5;eip=0x001907; 	J(CALL(sub_33430,0));	// 86103                  call    sub_33430 ;~ 17C5:1907
cs=0x17c5;eip=0x00190a; 	T(ADD(sp, 2));	// 86104                  add     sp, 2 ;~ 17C5:190A
cs=0x17c5;eip=0x00190d; 	T(AND(ax, 0x7FF8));	// 86105                  and     ax, 7FF8h ;~ 17C5:190D
cs=0x17c5;eip=0x001910; 	X(word_49918 = ax;);	// 86106                  mov     word_49918, ax ;~ 17C5:1910
cs=0x17c5;eip=0x001913; 	T(ax = word_5137c;);	// 86107                  mov     ax, ds:word_5137C ;~ 17C5:1913
cs=0x17c5;eip=0x001916; 	T(ADD(ax, *(dw*)(asc_5138e)));	// 86108                  add     ax, word ptr ds:asc_5138E ; "\v\v\v\v\v\v\v\v\v\v\v\v\v" ;~ 17C5:1916
cs=0x17c5;eip=0x00191a; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 86109                  mov     [bp+var_2], ax ;~ 17C5:191A
cs=0x17c5;eip=0x00191d; 	T(ax = 0x10;);	// 86110                  mov     ax, 10h ;~ 17C5:191D
cs=0x17c5;eip=0x001920; 	X(PUSH(ax));	// 86111                  push    ax ;~ 17C5:1920
cs=0x17c5;eip=0x001921; 	J(CALL(sub_33430,0));	// 86112                  call    sub_33430 ;~ 17C5:1921
cs=0x17c5;eip=0x001924; 	T(ADD(sp, 2));	// 86113                  add     sp, 2 ;~ 17C5:1924
cs=0x17c5;eip=0x001927; 	T(LES(bx, dword_4f220));	// 86114                  les     bx, ds:dword_4F220 ;~ 17C5:1927
cs=0x17c5;eip=0x00192b; 	T(si = ax;);	// 86116                  mov     si, ax ;~ 17C5:192B
cs=0x17c5;eip=0x00192d; 	T(CMP(*(dw*)(raddr(es,bx+0x38)), 6));	// 86117                  cmp     word ptr es:[bx+38h], 6 ;~ 17C5:192D
cs=0x17c5;eip=0x001932; 	J(JNZ(loc_27b69));	// 86118                  jnz     short loc_27B69 ;~ 17C5:1932
cs=0x17c5;eip=0x001934; 	T(ax = 5;);	// 86119                  mov     ax, 5 ;~ 17C5:1934
cs=0x17c5;eip=0x001937; 	J(JMP(loc_27b6c));	// 86120                  jmp     short loc_27B6C ;~ 17C5:1937
loc_27b69:
	// 5029 
cs=0x17c5;eip=0x001939; 	T(ax = 9;);	// 86124                  mov     ax, 9 ;~ 17C5:1939
loc_27b6c:
	// 5030 
cs=0x17c5;eip=0x00193c; 	T(CMP(ax, si));	// 86127                  cmp     ax, si ;~ 17C5:193C
cs=0x17c5;eip=0x00193e; 	J(JGE(loc_27b75));	// 86128                  jge     short loc_27B75 ;~ 17C5:193E
cs=0x17c5;eip=0x001940; 	T(ax = 1;);	// 86129                  mov     ax, 1 ;~ 17C5:1940
cs=0x17c5;eip=0x001943; 	J(JMP(loc_27b77));	// 86130                  jmp     short loc_27B77 ;~ 17C5:1943
loc_27b75:
	// 5031 
cs=0x17c5;eip=0x001945; 	T(SUB(ax, ax));	// 86134                  sub     ax, ax ;~ 17C5:1945
loc_27b77:
	// 5032 
cs=0x17c5;eip=0x001947; 	X(word_492ec = ax;);	// 86137                  mov     word_492EC, ax ;~ 17C5:1947
cs=0x17c5;eip=0x00194a; 	T(OR(ax, ax));	// 86138                  or      ax, ax ;~ 17C5:194A
cs=0x17c5;eip=0x00194c; 	J(JZ(loc_27b88));	// 86139                  jz      short loc_27B88 ;~ 17C5:194C
cs=0x17c5;eip=0x00194e; 	T(CMP(byte_48b63, 0));	// 86140                  cmp     byte_48B63, 0 ;~ 17C5:194E
cs=0x17c5;eip=0x001953; 	J(JZ(loc_27b88));	// 86141                  jz      short loc_27B88 ;~ 17C5:1953
cs=0x17c5;eip=0x001955; 	J(CALL(sub_29d1e,0));	// 86142                  call    sub_29D1E ;~ 17C5:1955
loc_27b88:
	// 5033 
cs=0x17c5;eip=0x001958; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 86146                  mov     ax, [bp+var_2] ;~ 17C5:1958
cs=0x17c5;eip=0x00195b; 	T(AND(ax, 0x0F));	// 86147                  and     ax, 0Fh ;~ 17C5:195B
cs=0x17c5;eip=0x00195e; 	T(ch = al;);	// 86148                  mov     ch, al ;~ 17C5:195E
cs=0x17c5;eip=0x001960; 	T(SUB(cl, cl));	// 86149                  sub     cl, cl ;~ 17C5:1960
cs=0x17c5;eip=0x001962; 	X(word_4f1a0 = cx;);	// 86150                  mov     ds:word_4F1A0, cx ;~ 17C5:1962
cs=0x17c5;eip=0x001966; 	X(word_4f210 = 0;);	// 86151                  mov     ds:word_4F210, 0 ;~ 17C5:1966
cs=0x17c5;eip=0x00196c; 	X(POP(si));	// 86152                  pop     si ;~ 17C5:196C
cs=0x17c5;eip=0x00196d; 	T(sp = bp;);	// 86153                  mov     sp, bp ;~ 17C5:196D
cs=0x17c5;eip=0x00196f; 	X(POP(bp));	// 86154                  pop     bp ;~ 17C5:196F
cs=0x17c5;eip=0x001970; 	J(RETN(0));	// 86155                  retn ;~ 17C5:1970

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27b69: 	goto loc_27b69;
        case m2c::kloc_27b6c: 	goto loc_27b6c;
        case m2c::kloc_27b75: 	goto loc_27b75;
        case m2c::kloc_27b77: 	goto loc_27b77;
        case m2c::kloc_27b88: 	goto loc_27b88;
        case m2c::ksub_27b26: 	goto sub_27b26;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27ba1(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27ba1:
    _begin:
#undef var_2
#define var_2 -2
	// 86165 var_2           = word ptr -2 ;~ 17C5:1971
cs=0x17c5;eip=0x001971; 	X(PUSH(bp));	// 86167                  push    bp ;~ 17C5:1971
cs=0x17c5;eip=0x001972; 	T(bp = sp;);	// 86168                  mov     bp, sp ;~ 17C5:1972
cs=0x17c5;eip=0x001974; 	T(SUB(sp, 2));	// 86169                  sub     sp, 2 ;~ 17C5:1974
cs=0x17c5;eip=0x001977; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 86170                  mov     [bp+var_2], 0 ;~ 17C5:1977
cs=0x17c5;eip=0x00197c; 	J(JMP(loc_27bb1));	// 86171                  jmp     short loc_27BB1 ;~ 17C5:197C
loc_27bae:
	// 5034 
cs=0x17c5;eip=0x00197e; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 86175                  inc     [bp+var_2] ;~ 17C5:197E
loc_27bb1:
	// 5035 
cs=0x17c5;eip=0x001981; 	T(ax = word_52276;);	// 86178                  mov     ax, ds:word_52276 ;~ 17C5:1981
cs=0x17c5;eip=0x001984; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 86179                  cmp     [bp+var_2], ax ;~ 17C5:1984
cs=0x17c5;eip=0x001987; 	J(JGE(loc_27bc9));	// 86180                  jge     short loc_27BC9 ;~ 17C5:1987
cs=0x17c5;eip=0x001989; 	T(ax = 0x24;);	// 86181                  mov     ax, 24h ; '$' ;~ 17C5:1989
cs=0x17c5;eip=0x00198c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 86182                  imul    [bp+var_2] ;~ 17C5:198C
cs=0x17c5;eip=0x00198f; 	T(bx = ax;);	// 86183                  mov     bx, ax ;~ 17C5:198F
cs=0x17c5;eip=0x001991; 	X(MOV(*(dw*)(raddr(ds,bx-0x768E)), 0x0FFFF));	// 86184                  mov     word ptr [bx-768Eh], 0FFFFh ;~ 17C5:1991
cs=0x17c5;eip=0x001997; 	J(JMP(loc_27bae));	// 86185                  jmp     short loc_27BAE ;~ 17C5:1997
loc_27bc9:
	// 5036 
cs=0x17c5;eip=0x001999; 	X(word_49916 = 0x0FFFF;);	// 86189                  mov     word_49916, 0FFFFh ;~ 17C5:1999
cs=0x17c5;eip=0x00199f; 	T(sp = bp;);	// 86190                  mov     sp, bp ;~ 17C5:199F
cs=0x17c5;eip=0x0019a1; 	X(POP(bp));	// 86191                  pop     bp ;~ 17C5:19A1
cs=0x17c5;eip=0x0019a2; 	J(RETN(0));	// 86192                  retn ;~ 17C5:19A2

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27bae: 	goto loc_27bae;
        case m2c::kloc_27bb1: 	goto loc_27bb1;
        case m2c::kloc_27bc9: 	goto loc_27bc9;
        case m2c::ksub_27ba1: 	goto sub_27ba1;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27bd3(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27bd3:
    _begin:
#undef var_6
#define var_6 -6
	// 86203 var_6           = dword ptr -6 ;~ 17C5:19A3
#undef var_2
#define var_2 -2
	// 86204 var_2           = word ptr -2 ;~ 17C5:19A3
cs=0x17c5;eip=0x0019a3; 	X(PUSH(bp));	// 86206                  push    bp ;~ 17C5:19A3
cs=0x17c5;eip=0x0019a4; 	T(bp = sp;);	// 86207                  mov     bp, sp ;~ 17C5:19A4
cs=0x17c5;eip=0x0019a6; 	T(SUB(sp, 6));	// 86208                  sub     sp, 6 ;~ 17C5:19A6
cs=0x17c5;eip=0x0019a9; 	X(PUSH(si));	// 86209                  push    si ;~ 17C5:19A9
cs=0x17c5;eip=0x0019aa; 	T(SUB(ax, ax));	// 86210                  sub     ax, ax ;~ 17C5:19AA
cs=0x17c5;eip=0x0019ac; 	X(word_492c6 = ax;);	// 86211                  mov     word_492C6, ax ;~ 17C5:19AC
cs=0x17c5;eip=0x0019af; 	X(word_521c0 = ax;);	// 86212                  mov     ds:word_521C0, ax ;~ 17C5:19AF
cs=0x17c5;eip=0x0019b2; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 86213                  mov     [bp+var_2], ax ;~ 17C5:19B2
cs=0x17c5;eip=0x0019b5; 	J(JMP(loc_27bea));	// 86214                  jmp     short loc_27BEA ;~ 17C5:19B5
_unk_27be7:
	// 5037 
cs=0x17c5;eip=0x0019b7; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 86218                  inc     [bp+var_2] ;~ 17C5:19B7
loc_27bea:
	// 5038 
cs=0x17c5;eip=0x0019ba; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 3));	// 86221                  cmp     [bp+var_2], 3 ;~ 17C5:19BA
cs=0x17c5;eip=0x0019be; 	J(JGE(loc_27c22));	// 86222                  jge     short loc_27C22 ;~ 17C5:19BE
cs=0x17c5;eip=0x0019c0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 86223                  mov     ax, [bp+var_2] ;~ 17C5:19C0
cs=0x17c5;eip=0x0019c3; 	T(SHL(ax, 1));	// 86224                  shl     ax, 1 ;~ 17C5:19C3
cs=0x17c5;eip=0x0019c5; 	T(ADD(ax, *(dw*)(&dword_528d6)));	// 86225                  add     ax, word ptr ds:dword_528D6 ;~ 17C5:19C5
cs=0x17c5;eip=0x0019c9; 	T(dx = *(dw*)(((db*)&dword_528d6)+2););	// 86226                  mov     dx, word ptr ds:dword_528D6+2 ;~ 17C5:19C9
cs=0x17c5;eip=0x0019cd; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 86227                  mov     word ptr [bp+var_6], ax ;~ 17C5:19CD
cs=0x17c5;eip=0x0019d0; 	X(MOV(*(dw*)(raddr(ss,bp+var_6+2)), dx));	// 86228                  mov     word ptr [bp+var_6+2], dx ;~ 17C5:19D0
cs=0x17c5;eip=0x0019d3; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_2))));	// 86229                  mov     si, [bp+var_2] ;~ 17C5:19D3
cs=0x17c5;eip=0x0019d6; 	T(cl = 2;);	// 86230                  mov     cl, 2 ;~ 17C5:19D6
cs=0x17c5;eip=0x0019d8; 	T(SHL(si, cl));	// 86231                  shl     si, cl ;~ 17C5:19D8
cs=0x17c5;eip=0x0019da; 	T(LES(bx, *(dd*)(raddr(ss,bp+var_6))));	// 86232                  les     bx, [bp+var_6] ;~ 17C5:19DA
cs=0x17c5;eip=0x0019dd; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x38))));	// 86233                  mov     ax, es:[bx+38h] ;~ 17C5:19DD
cs=0x17c5;eip=0x0019e1; 	X(MOV(*(dw*)(raddr(ds,si+0x7F2)), ax));	// 86234                  mov     [si+7F2h], ax ;~ 17C5:19E1
cs=0x17c5;eip=0x0019e5; 	T(LES(bx, *(dd*)(raddr(ss,bp+var_6))));	// 86235                  les     bx, [bp+var_6] ;~ 17C5:19E5
cs=0x17c5;eip=0x0019e8; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x40))));	// 86236                  mov     ax, es:[bx+40h] ;~ 17C5:19E8
cs=0x17c5;eip=0x0019ec; 	X(MOV(*(dw*)(raddr(ds,si+0x7F4)), ax));	// 86237                  mov     [si+7F4h], ax ;~ 17C5:19EC
cs=0x17c5;eip=0x0019f0; 	J(JMP(_unk_27be7));	// 86238                  jmp     short _unk_27BE7 ;~ 17C5:19F0
loc_27c22:
	// 5039 
cs=0x17c5;eip=0x0019f2; 	X(word_492e4 = 0x3E8;);	// 86242                  mov     word_492E4, 3E8h ;~ 17C5:19F2
cs=0x17c5;eip=0x0019f8; 	X(*(word_492c8) = 0x2710;);	// 86243                  mov     word_492C8, 2710h ;~ 17C5:19F8
cs=0x17c5;eip=0x0019fe; 	X(*(word_492ce) = 0x12;);	// 86244                  mov     word_492CE, 12h ;~ 17C5:19FE
cs=0x17c5;eip=0x001a04; 	X(word_492cc = 0x0C;);	// 86245                  mov     word_492CC, 0Ch ;~ 17C5:1A04
cs=0x17c5;eip=0x001a0a; 	J(CALL(sub_27c48,0));	// 86246                  call    sub_27C48 ;~ 17C5:1A0A
cs=0x17c5;eip=0x001a0d; 	J(CALL(sub_2c29c,0));	// 86248                  call    sub_2C29C ;~ 17C5:1A0D
cs=0x17c5;eip=0x001a10; 	J(CALL(sub_2c20b,0));	// 86249                  call    sub_2C20B ;~ 17C5:1A10
cs=0x17c5;eip=0x001a13; 	X(POP(si));	// 86250                  pop     si ;~ 17C5:1A13
cs=0x17c5;eip=0x001a14; 	T(sp = bp;);	// 86251                  mov     sp, bp ;~ 17C5:1A14
cs=0x17c5;eip=0x001a16; 	X(POP(bp));	// 86252                  pop     bp ;~ 17C5:1A16
cs=0x17c5;eip=0x001a17; 	J(RETN(0));	// 86253                  retn ;~ 17C5:1A17

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::k_unk_27be7: 	goto _unk_27be7;
        case m2c::kloc_27bea: 	goto loc_27bea;
        case m2c::kloc_27c22: 	goto loc_27c22;
        case m2c::ksub_27bd3: 	goto sub_27bd3;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27c48(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27c48:
    _begin:
#undef var_4
#define var_4 -4
	// 86265 var_4           = word ptr -4 ;~ 17C5:1A18
#undef var_2
#define var_2 -2
	// 86266 var_2           = word ptr -2 ;~ 17C5:1A18
cs=0x17c5;eip=0x001a18; 	X(PUSH(bp));	// 86268                  push    bp ;~ 17C5:1A18
cs=0x17c5;eip=0x001a19; 	T(bp = sp;);	// 86269                  mov     bp, sp ;~ 17C5:1A19
cs=0x17c5;eip=0x001a1b; 	T(SUB(sp, 4));	// 86270                  sub     sp, 4 ;~ 17C5:1A1B
cs=0x17c5;eip=0x001a1e; 	T(CMP(word_492f2, 0));	// 86271                  cmp     word_492F2, 0 ;~ 17C5:1A1E
cs=0x17c5;eip=0x001a23; 	J(JNZ(loc_27c57));	// 86272                  jnz     short loc_27C57 ;~ 17C5:1A23
cs=0x17c5;eip=0x001a25; 	J(JMP(loc_27cb4));	// 86273                  jmp     short loc_27CB4 ;~ 17C5:1A25
loc_27c57:
	// 5040 
cs=0x17c5;eip=0x001a27; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 86277                  mov     [bp+var_4], 0 ;~ 17C5:1A27
cs=0x17c5;eip=0x001a2c; 	J(JMP(loc_27c61));	// 86278                  jmp     short loc_27C61 ;~ 17C5:1A2C
loc_27c5e:
	// 5041 
cs=0x17c5;eip=0x001a2e; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 86283                  inc     [bp+var_4] ;~ 17C5:1A2E
loc_27c61:
	// 5042 
cs=0x17c5;eip=0x001a31; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 3));	// 86286                  cmp     [bp+var_4], 3 ;~ 17C5:1A31
cs=0x17c5;eip=0x001a35; 	J(JGE(loc_27cb4));	// 86287                  jge     short loc_27CB4 ;~ 17C5:1A35
cs=0x17c5;eip=0x001a37; 	T(SUB(ax, ax));	// 86288                  sub     ax, ax ;~ 17C5:1A37
cs=0x17c5;eip=0x001a39; 	X(PUSH(ax));	// 86289                  push    ax ;~ 17C5:1A39
cs=0x17c5;eip=0x001a3a; 	J(CALL(sub_30074,0));	// 86290                  call    sub_30074 ;~ 17C5:1A3A
cs=0x17c5;eip=0x001a3d; 	T(ADD(sp, 2));	// 86291                  add     sp, 2 ;~ 17C5:1A3D
cs=0x17c5;eip=0x001a40; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 86292                  mov     bx, [bp+var_4] ;~ 17C5:1A40
cs=0x17c5;eip=0x001a43; 	T(SHL(bx, 1));	// 86293                  shl     bx, 1 ;~ 17C5:1A43
cs=0x17c5;eip=0x001a45; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x5952))));	// 86294                  mov     ax, [bx+5952h] ;~ 17C5:1A45
cs=0x17c5;eip=0x001a49; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 86295                  mov     [bp+var_2], ax ;~ 17C5:1A49
cs=0x17c5;eip=0x001a4c; 	T(ax = 0x0C2;);	// 86296                  mov     ax, 0C2h ;~ 17C5:1A4C
cs=0x17c5;eip=0x001a4f; 	X(PUSH(ax));	// 86297                  push    ax ;~ 17C5:1A4F
cs=0x17c5;eip=0x001a50; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 86298                  mov     ax, [bp+var_2] ;~ 17C5:1A50
cs=0x17c5;eip=0x001a53; 	T(ADD(ax, 2));	// 86299                  add     ax, 2 ;~ 17C5:1A53
cs=0x17c5;eip=0x001a56; 	X(PUSH(ax));	// 86300                  push    ax ;~ 17C5:1A56
cs=0x17c5;eip=0x001a57; 	T(ax = 0x0BE;);	// 86301                  mov     ax, 0BEh ;~ 17C5:1A57
cs=0x17c5;eip=0x001a5a; 	X(PUSH(ax));	// 86302                  push    ax ;~ 17C5:1A5A
cs=0x17c5;eip=0x001a5b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 86303                  mov     ax, [bp+var_2] ;~ 17C5:1A5B
cs=0x17c5;eip=0x001a5e; 	T(DEC(ax));	// 86304                  dec     ax ;~ 17C5:1A5E
cs=0x17c5;eip=0x001a5f; 	X(PUSH(ax));	// 86305                  push    ax ;~ 17C5:1A5F
cs=0x17c5;eip=0x001a60; 	J(CALL(sub_3008d,0));	// 86306                  call    sub_3008D ;~ 17C5:1A60
cs=0x17c5;eip=0x001a63; 	T(ADD(sp, 8));	// 86308                  add     sp, 8 ;~ 17C5:1A63
cs=0x17c5;eip=0x001a66; 	T(ax = 0x0C;);	// 86309                  mov     ax, 0Ch ;~ 17C5:1A66
cs=0x17c5;eip=0x001a69; 	X(PUSH(ax));	// 86310                  push    ax ;~ 17C5:1A69
cs=0x17c5;eip=0x001a6a; 	T(ax = 0x0BE;);	// 86311                  mov     ax, 0BEh ;~ 17C5:1A6A
cs=0x17c5;eip=0x001a6d; 	X(PUSH(ax));	// 86312                  push    ax ;~ 17C5:1A6D
cs=0x17c5;eip=0x001a6e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 86313                  push    [bp+var_2] ;~ 17C5:1A6E
cs=0x17c5;eip=0x001a71; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 86314                  mov     bx, [bp+var_4] ;~ 17C5:1A71
cs=0x17c5;eip=0x001a74; 	T(SHL(bx, 1));	// 86315                  shl     bx, 1 ;~ 17C5:1A74
cs=0x17c5;eip=0x001a76; 	T(SHL(bx, 1));	// 86316                  shl     bx, 1 ;~ 17C5:1A76
cs=0x17c5;eip=0x001a78; 	X(PUSH(*(dw*)(raddr(ds,bx+0x7F4))));	// 86317                  push    word ptr [bx+7F4h] ;~ 17C5:1A78
cs=0x17c5;eip=0x001a7c; 	J(CALL(sub_303b3,0));	// 86318                  call    sub_303B3 ;~ 17C5:1A7C
cs=0x17c5;eip=0x001a7f; 	T(ADD(sp, 8));	// 86320                  add     sp, 8 ;~ 17C5:1A7F
cs=0x17c5;eip=0x001a82; 	J(JMP(loc_27c5e));	// 86321                  jmp     short loc_27C5E ;~ 17C5:1A82
loc_27cb4:
	// 5043 
cs=0x17c5;eip=0x001a84; 	T(sp = bp;);	// 86326                  mov     sp, bp ;~ 17C5:1A84
cs=0x17c5;eip=0x001a86; 	X(POP(bp));	// 86327                  pop     bp ;~ 17C5:1A86
cs=0x17c5;eip=0x001a87; 	J(RETN(0));	// 86328                  retn ;~ 17C5:1A87

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27c57: 	goto loc_27c57;
        case m2c::kloc_27c5e: 	goto loc_27c5e;
        case m2c::kloc_27c61: 	goto loc_27c61;
        case m2c::kloc_27cb4: 	goto loc_27cb4;
        case m2c::ksub_27c48: 	goto sub_27c48;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27cb8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27cb8:
    _begin:
#undef arg_0
#define arg_0 4
	// 86339 arg_0           = word ptr  4 ;~ 17C5:1A88
cs=0x17c5;eip=0x001a88; 	X(PUSH(bp));	// 86341                  push    bp ;~ 17C5:1A88
cs=0x17c5;eip=0x001a89; 	T(bp = sp;);	// 86342                  mov     bp, sp ;~ 17C5:1A89
cs=0x17c5;eip=0x001a8b; 	X(PUSH(si));	// 86343                  push    si ;~ 17C5:1A8B
cs=0x17c5;eip=0x001a8c; 	T(CMP(word_492f2, 0));	// 86344                  cmp     word_492F2, 0 ;~ 17C5:1A8C
cs=0x17c5;eip=0x001a91; 	J(JNZ(loc_27cc6));	// 86345                  jnz     short loc_27CC6 ;~ 17C5:1A91
cs=0x17c5;eip=0x001a93; 	J(JMP(loc_27d62));	// 86346                  jmp     loc_27D62 ;~ 17C5:1A93
loc_27cc6:
	// 5044 
cs=0x17c5;eip=0x001a96; 	T(bx = word_4e564;);	// 86350                  mov     bx, ds:word_4E564 ;~ 17C5:1A96
cs=0x17c5;eip=0x001a9a; 	X(MOV(*(dw*)(raddr(ds,bx+4)), 0));	// 86351                  mov     word ptr [bx+4], 0 ;~ 17C5:1A9A
cs=0x17c5;eip=0x001a9f; 	T(bx = word_4997a;);	// 86352                  mov     bx, word_4997A ;~ 17C5:1A9F
cs=0x17c5;eip=0x001aa3; 	T(SHL(bx, 1));	// 86353                  shl     bx, 1 ;~ 17C5:1AA3
cs=0x17c5;eip=0x001aa5; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x0E94))));	// 86354                  mov     si, [bx+0E94h] ;~ 17C5:1AA5
cs=0x17c5;eip=0x001aa9; 	T(ax = 0x0C4;);	// 86355                  mov     ax, 0C4h ;~ 17C5:1AA9
cs=0x17c5;eip=0x001aac; 	X(PUSH(ax));	// 86356                  push    ax ;~ 17C5:1AAC
cs=0x17c5;eip=0x001aad; 	T(ax = si+6);	// 86357                  lea     ax, [si+6] ;~ 17C5:1AAD
cs=0x17c5;eip=0x001ab0; 	X(PUSH(ax));	// 86358                  push    ax ;~ 17C5:1AB0
cs=0x17c5;eip=0x001ab1; 	T(ax = 0x0C4;);	// 86359                  mov     ax, 0C4h ;~ 17C5:1AB1
cs=0x17c5;eip=0x001ab4; 	X(PUSH(ax));	// 86360                  push    ax ;~ 17C5:1AB4
cs=0x17c5;eip=0x001ab5; 	X(PUSH(si));	// 86361                  push    si ;~ 17C5:1AB5
cs=0x17c5;eip=0x001ab6; 	J(CALL(sub_2fe11,0));	// 86362                  call    sub_2FE11 ;~ 17C5:1AB6
cs=0x17c5;eip=0x001ab9; 	T(ADD(sp, 8));	// 86364                  add     sp, 8 ;~ 17C5:1AB9
cs=0x17c5;eip=0x001abc; 	T(bx = word_4e564;);	// 86365                  mov     bx, ds:word_4E564 ;~ 17C5:1ABC
cs=0x17c5;eip=0x001ac0; 	X(MOV(*(dw*)(raddr(ds,bx+4)), 7));	// 86366                  mov     word ptr [bx+4], 7 ;~ 17C5:1AC0
cs=0x17c5;eip=0x001ac5; 	T(bx = word_4997a;);	// 86367                  mov     bx, word_4997A ;~ 17C5:1AC5
cs=0x17c5;eip=0x001ac9; 	T(SHL(bx, 1));	// 86368                  shl     bx, 1 ;~ 17C5:1AC9
cs=0x17c5;eip=0x001acb; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x0E94))));	// 86369                  mov     si, [bx+0E94h] ;~ 17C5:1ACB
cs=0x17c5;eip=0x001acf; 	T(ax = 0x0C5;);	// 86370                  mov     ax, 0C5h ;~ 17C5:1ACF
cs=0x17c5;eip=0x001ad2; 	X(PUSH(ax));	// 86371                  push    ax ;~ 17C5:1AD2
cs=0x17c5;eip=0x001ad3; 	T(ax = si+6);	// 86372                  lea     ax, [si+6] ;~ 17C5:1AD3
cs=0x17c5;eip=0x001ad6; 	X(PUSH(ax));	// 86373                  push    ax ;~ 17C5:1AD6
cs=0x17c5;eip=0x001ad7; 	T(ax = 0x0C5;);	// 86374                  mov     ax, 0C5h ;~ 17C5:1AD7
cs=0x17c5;eip=0x001ada; 	X(PUSH(ax));	// 86375                  push    ax ;~ 17C5:1ADA
cs=0x17c5;eip=0x001adb; 	X(PUSH(si));	// 86376                  push    si ;~ 17C5:1ADB
cs=0x17c5;eip=0x001adc; 	J(CALL(sub_2fe11,0));	// 86377                  call    sub_2FE11 ;~ 17C5:1ADC
cs=0x17c5;eip=0x001adf; 	T(ADD(sp, 8));	// 86379                  add     sp, 8 ;~ 17C5:1ADF
cs=0x17c5;eip=0x001ae2; 	T(bx = word_4e564;);	// 86380                  mov     bx, ds:word_4E564 ;~ 17C5:1AE2
cs=0x17c5;eip=0x001ae6; 	X(MOV(*(dw*)(raddr(ds,bx+4)), 0x0C));	// 86381                  mov     word ptr [bx+4], 0Ch ;~ 17C5:1AE6
cs=0x17c5;eip=0x001aeb; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 86382                  mov     bx, [bp+arg_0] ;~ 17C5:1AEB
cs=0x17c5;eip=0x001aee; 	T(SHL(bx, 1));	// 86383                  shl     bx, 1 ;~ 17C5:1AEE
cs=0x17c5;eip=0x001af0; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x0E94))));	// 86384                  mov     si, [bx+0E94h] ;~ 17C5:1AF0
cs=0x17c5;eip=0x001af4; 	T(ax = 0x0C4;);	// 86385                  mov     ax, 0C4h ;~ 17C5:1AF4
cs=0x17c5;eip=0x001af7; 	X(PUSH(ax));	// 86386                  push    ax ;~ 17C5:1AF7
cs=0x17c5;eip=0x001af8; 	T(ax = si+6);	// 86387                  lea     ax, [si+6] ;~ 17C5:1AF8
cs=0x17c5;eip=0x001afb; 	X(PUSH(ax));	// 86388                  push    ax ;~ 17C5:1AFB
cs=0x17c5;eip=0x001afc; 	T(ax = 0x0C4;);	// 86389                  mov     ax, 0C4h ;~ 17C5:1AFC
cs=0x17c5;eip=0x001aff; 	X(PUSH(ax));	// 86390                  push    ax ;~ 17C5:1AFF
cs=0x17c5;eip=0x001b00; 	X(PUSH(si));	// 86391                  push    si ;~ 17C5:1B00
cs=0x17c5;eip=0x001b01; 	J(CALL(sub_2fe11,0));	// 86392                  call    sub_2FE11 ;~ 17C5:1B01
cs=0x17c5;eip=0x001b04; 	T(ADD(sp, 8));	// 86394                  add     sp, 8 ;~ 17C5:1B04
cs=0x17c5;eip=0x001b07; 	T(bx = word_4e564;);	// 86395                  mov     bx, ds:word_4E564 ;~ 17C5:1B07
cs=0x17c5;eip=0x001b0b; 	X(MOV(*(dw*)(raddr(ds,bx+4)), 4));	// 86396                  mov     word ptr [bx+4], 4 ;~ 17C5:1B0B
cs=0x17c5;eip=0x001b10; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 86397                  mov     bx, [bp+arg_0] ;~ 17C5:1B10
cs=0x17c5;eip=0x001b13; 	T(SHL(bx, 1));	// 86398                  shl     bx, 1 ;~ 17C5:1B13
cs=0x17c5;eip=0x001b15; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x0E94))));	// 86399                  mov     si, [bx+0E94h] ;~ 17C5:1B15
cs=0x17c5;eip=0x001b19; 	T(ax = 0x0C5;);	// 86400                  mov     ax, 0C5h ;~ 17C5:1B19
cs=0x17c5;eip=0x001b1c; 	X(PUSH(ax));	// 86401                  push    ax ;~ 17C5:1B1C
cs=0x17c5;eip=0x001b1d; 	T(ax = si+6);	// 86402                  lea     ax, [si+6] ;~ 17C5:1B1D
cs=0x17c5;eip=0x001b20; 	X(PUSH(ax));	// 86403                  push    ax ;~ 17C5:1B20
cs=0x17c5;eip=0x001b21; 	T(ax = 0x0C5;);	// 86404                  mov     ax, 0C5h ;~ 17C5:1B21
cs=0x17c5;eip=0x001b24; 	X(PUSH(ax));	// 86405                  push    ax ;~ 17C5:1B24
cs=0x17c5;eip=0x001b25; 	X(PUSH(si));	// 86406                  push    si ;~ 17C5:1B25
cs=0x17c5;eip=0x001b26; 	J(CALL(sub_2fe11,0));	// 86407                  call    sub_2FE11 ;~ 17C5:1B26
cs=0x17c5;eip=0x001b29; 	T(ADD(sp, 8));	// 86409                  add     sp, 8 ;~ 17C5:1B29
cs=0x17c5;eip=0x001b2c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 86410                  mov     ax, [bp+arg_0] ;~ 17C5:1B2C
cs=0x17c5;eip=0x001b2f; 	X(word_4997a = ax;);	// 86411                  mov     word_4997A, ax ;~ 17C5:1B2F
loc_27d62:
	// 5045 
cs=0x17c5;eip=0x001b32; 	X(POP(si));	// 86414                  pop     si ;~ 17C5:1B32
cs=0x17c5;eip=0x001b33; 	T(sp = bp;);	// 86415                  mov     sp, bp ;~ 17C5:1B33
cs=0x17c5;eip=0x001b35; 	X(POP(bp));	// 86416                  pop     bp ;~ 17C5:1B35
cs=0x17c5;eip=0x001b36; 	J(RETN(0));	// 86417                  retn ;~ 17C5:1B36

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27cc6: 	goto loc_27cc6;
        case m2c::kloc_27d62: 	goto loc_27d62;
        case m2c::ksub_27cb8: 	goto sub_27cb8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27d67(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27d67:
    _begin:
#undef arg_0
#define arg_0 4
	// 86429 arg_0           = word ptr  4 ;~ 17C5:1B37
cs=0x17c5;eip=0x001b37; 	X(PUSH(bp));	// 86431                  push    bp ;~ 17C5:1B37
cs=0x17c5;eip=0x001b38; 	T(bp = sp;);	// 86432                  mov     bp, sp ;~ 17C5:1B38
cs=0x17c5;eip=0x001b3a; 	T(CMP(word_5206c, 0));	// 86433                  cmp     ds:word_5206C, 0 ;~ 17C5:1B3A
cs=0x17c5;eip=0x001b3f; 	J(JZ(loc_27d79));	// 86434                  jz      short loc_27D79 ;~ 17C5:1B3F
cs=0x17c5;eip=0x001b41; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 86435                  cmp     [bp+arg_0], 0 ;~ 17C5:1B41
cs=0x17c5;eip=0x001b45; 	J(JZ(loc_27d79));	// 86436                  jz      short loc_27D79 ;~ 17C5:1B45
cs=0x17c5;eip=0x001b47; 	J(JMP(loc_27def));	// 86437                  jmp     short loc_27DEF ;~ 17C5:1B47
loc_27d79:
	// 5046 
cs=0x17c5;eip=0x001b49; 	X(byte_52ae0 = 1;);	// 86442                  mov     ds:byte_52AE0, 1 ;~ 17C5:1B49
cs=0x17c5;eip=0x001b4e; 	T(LES(bx, dword_528d6));	// 86443                  les     bx, ds:dword_528D6 ;~ 17C5:1B4E
cs=0x17c5;eip=0x001b52; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 86445                  mov     ax, [bp+arg_0] ;~ 17C5:1B52
cs=0x17c5;eip=0x001b55; 	X(MOV(*(dw*)(raddr(es,bx+0x28)), ax));	// 86446                  mov     es:[bx+28h], ax ;~ 17C5:1B55
cs=0x17c5;eip=0x001b59; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 86447                  cmp     [bp+arg_0], 0 ;~ 17C5:1B59
cs=0x17c5;eip=0x001b5d; 	J(JNZ(loc_27da0));	// 86448                  jnz     short loc_27DA0 ;~ 17C5:1B5D
cs=0x17c5;eip=0x001b5f; 	T(CMP(word_5206c, 0));	// 86449                  cmp     ds:word_5206C, 0 ;~ 17C5:1B5F
cs=0x17c5;eip=0x001b64; 	J(JNZ(loc_27da0));	// 86450                  jnz     short loc_27DA0 ;~ 17C5:1B64
cs=0x17c5;eip=0x001b66; 	T(LES(bx, dword_528d6));	// 86451                  les     bx, ds:dword_528D6 ;~ 17C5:1B66
cs=0x17c5;eip=0x001b6a; 	X(MOV(*(dw*)(raddr(es,bx+0x26)), 3));	// 86453                  mov     word ptr es:[bx+26h], 3 ;~ 17C5:1B6A
loc_27da0:
	// 5047 
cs=0x17c5;eip=0x001b70; 	T(LES(bx, dword_528d6));	// 86458                  les     bx, ds:dword_528D6 ;~ 17C5:1B70
cs=0x17c5;eip=0x001b74; 	T(ax = word_520f0;);	// 86459                  mov     ax, ds:word_520F0 ;~ 17C5:1B74
cs=0x17c5;eip=0x001b77; 	X(MOV(*(dw*)(raddr(es,bx+0x74)), ax));	// 86460                  mov     es:[bx+74h], ax ;~ 17C5:1B77
cs=0x17c5;eip=0x001b7b; 	T(LES(bx, dword_528d6));	// 86461                  les     bx, ds:dword_528D6 ;~ 17C5:1B7B
cs=0x17c5;eip=0x001b7f; 	T(ax = word_52100;);	// 86462                  mov     ax, ds:word_52100 ;~ 17C5:1B7F
cs=0x17c5;eip=0x001b82; 	X(MOV(*(dw*)(raddr(es,bx+0x76)), ax));	// 86463                  mov     es:[bx+76h], ax ;~ 17C5:1B82
cs=0x17c5;eip=0x001b86; 	T(LES(bx, dword_528d6));	// 86464                  les     bx, ds:dword_528D6 ;~ 17C5:1B86
cs=0x17c5;eip=0x001b8a; 	T(ax = word_492c6;);	// 86465                  mov     ax, word_492C6 ;~ 17C5:1B8A
cs=0x17c5;eip=0x001b8d; 	X(MOV(*(dw*)(raddr(es,bx+0x34)), ax));	// 86466                  mov     es:[bx+34h], ax ;~ 17C5:1B8D
cs=0x17c5;eip=0x001b91; 	T(LES(bx, dword_528d6));	// 86467                  les     bx, ds:dword_528D6 ;~ 17C5:1B91
cs=0x17c5;eip=0x001b95; 	T(ax = word_521c0;);	// 86468                  mov     ax, ds:word_521C0 ;~ 17C5:1B95
cs=0x17c5;eip=0x001b98; 	X(MOV(*(dw*)(raddr(es,bx+0x36)), ax));	// 86469                  mov     es:[bx+36h], ax ;~ 17C5:1B98
cs=0x17c5;eip=0x001b9c; 	T(LES(bx, dword_528d6));	// 86470                  les     bx, ds:dword_528D6 ;~ 17C5:1B9C
cs=0x17c5;eip=0x001ba0; 	T(ax = word_4f226;);	// 86471                  mov     ax, ds:word_4F226 ;~ 17C5:1BA0
cs=0x17c5;eip=0x001ba3; 	X(MOV(*(dw*)(raddr(es,bx+0x40)), ax));	// 86472                  mov     es:[bx+40h], ax ;~ 17C5:1BA3
cs=0x17c5;eip=0x001ba7; 	T(LES(bx, dword_528d6));	// 86473                  les     bx, ds:dword_528D6 ;~ 17C5:1BA7
cs=0x17c5;eip=0x001bab; 	T(ax = word_49940;);	// 86474                  mov     ax, word_49940 ;~ 17C5:1BAB
cs=0x17c5;eip=0x001bae; 	X(MOV(*(dw*)(raddr(es,bx+0x42)), ax));	// 86475                  mov     es:[bx+42h], ax ;~ 17C5:1BAE
cs=0x17c5;eip=0x001bb2; 	T(SUB(ax, ax));	// 86476                  sub     ax, ax ;~ 17C5:1BB2
cs=0x17c5;eip=0x001bb4; 	X(PUSH(ax));	// 86477                  push    ax ;~ 17C5:1BB4
cs=0x17c5;eip=0x001bb5; 	T(ax = 8;);	// 86478                  mov     ax, 8 ;~ 17C5:1BB5
cs=0x17c5;eip=0x001bb8; 	X(PUSH(ax));	// 86479                  push    ax ;~ 17C5:1BB8
cs=0x17c5;eip=0x001bb9; 	J(CALL(sub_27f40,0));	// 86480                  call    sub_27F40 ;~ 17C5:1BB9
cs=0x17c5;eip=0x001bbc; 	T(ADD(sp, 4));	// 86481                  add     sp, 4 ;~ 17C5:1BBC
loc_27def:
	// 5048 
cs=0x17c5;eip=0x001bbf; 	T(sp = bp;);	// 86484                  mov     sp, bp ;~ 17C5:1BBF
cs=0x17c5;eip=0x001bc1; 	X(POP(bp));	// 86485                  pop     bp ;~ 17C5:1BC1
cs=0x17c5;eip=0x001bc2; 	J(RETN(0));	// 86486                  retn ;~ 17C5:1BC2

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27d79: 	goto loc_27d79;
        case m2c::kloc_27da0: 	goto loc_27da0;
        case m2c::kloc_27def: 	goto loc_27def;
        case m2c::ksub_27d67: 	goto sub_27d67;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27df3(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27df3:
    _begin:
#undef arg_0
#define arg_0 4
	// 86497 arg_0           = word ptr  4 ;~ 17C5:1BC3
#undef arg_2
#define arg_2 6
	// 86498 arg_2           = word ptr  6 ;~ 17C5:1BC3
cs=0x17c5;eip=0x001bc3; 	X(PUSH(bp));	// 86500                  push    bp ;~ 17C5:1BC3
cs=0x17c5;eip=0x001bc4; 	T(bp = sp;);	// 86501                  mov     bp, sp ;~ 17C5:1BC4
cs=0x17c5;eip=0x001bc6; 	T(ax = word_4993e;);	// 86502                  mov     ax, word_4993E ;~ 17C5:1BC6
cs=0x17c5;eip=0x001bc9; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), ax));	// 86503                  cmp     [bp+arg_2], ax ;~ 17C5:1BC9
cs=0x17c5;eip=0x001bcc; 	J(JBE(loc_27e00));	// 86504                  jbe     short loc_27E00 ;~ 17C5:1BCC
cs=0x17c5;eip=0x001bce; 	J(JMP(loc_27e29));	// 86505                  jmp     short loc_27E29 ;~ 17C5:1BCE
loc_27e00:
	// 5049 
cs=0x17c5;eip=0x001bd0; 	T(CMP(word_4993c, 0x0FFFF));	// 86509                  cmp     word_4993C, 0FFFFh ;~ 17C5:1BD0
cs=0x17c5;eip=0x001bd5; 	J(JZ(loc_27e09));	// 86510                  jz      short loc_27E09 ;~ 17C5:1BD5
cs=0x17c5;eip=0x001bd7; 	J(JMP(loc_27e29));	// 86511                  jmp     short loc_27E29 ;~ 17C5:1BD7
loc_27e09:
	// 5050 
cs=0x17c5;eip=0x001bd9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 86515                  mov     ax, [bp+arg_0] ;~ 17C5:1BD9
cs=0x17c5;eip=0x001bdc; 	X(word_5225e = ax;);	// 86516                  mov     ds:word_5225E, ax ;~ 17C5:1BDC
cs=0x17c5;eip=0x001bdf; 	T(CMP(word_4993e, 1));	// 86517                  cmp     word_4993E, 1 ;~ 17C5:1BDF
cs=0x17c5;eip=0x001be4; 	J(JNZ(loc_27e1b));	// 86518                  jnz     short loc_27E1B ;~ 17C5:1BE4
cs=0x17c5;eip=0x001be6; 	T(ax = 3;);	// 86519                  mov     ax, 3 ;~ 17C5:1BE6
cs=0x17c5;eip=0x001be9; 	J(JMP(loc_27e1e));	// 86520                  jmp     short loc_27E1E ;~ 17C5:1BE9
loc_27e1b:
	// 5051 
cs=0x17c5;eip=0x001beb; 	T(ax = 4;);	// 86524                  mov     ax, 4 ;~ 17C5:1BEB
loc_27e1e:
	// 5052 
cs=0x17c5;eip=0x001bee; 	X(PUSH(ax));	// 86527                  push    ax ;~ 17C5:1BEE
cs=0x17c5;eip=0x001bef; 	T(ax = 0x89;);	// 86528                  mov     ax, 89h ;~ 17C5:1BEF
cs=0x17c5;eip=0x001bf2; 	X(PUSH(ax));	// 86529                  push    ax ;~ 17C5:1BF2
cs=0x17c5;eip=0x001bf3; 	J(CALL(sub_27e2d,0));	// 86530                  call    sub_27E2D ;~ 17C5:1BF3
cs=0x17c5;eip=0x001bf6; 	T(ADD(sp, 4));	// 86531                  add     sp, 4 ;~ 17C5:1BF6
loc_27e29:
	// 5053 
cs=0x17c5;eip=0x001bf9; 	T(sp = bp;);	// 86535                  mov     sp, bp ;~ 17C5:1BF9
cs=0x17c5;eip=0x001bfb; 	X(POP(bp));	// 86536                  pop     bp ;~ 17C5:1BFB
cs=0x17c5;eip=0x001bfc; 	J(RETN(0));	// 86537                  retn ;~ 17C5:1BFC

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27e00: 	goto loc_27e00;
        case m2c::kloc_27e09: 	goto loc_27e09;
        case m2c::kloc_27e1b: 	goto loc_27e1b;
        case m2c::kloc_27e1e: 	goto loc_27e1e;
        case m2c::kloc_27e29: 	goto loc_27e29;
        case m2c::ksub_27df3: 	goto sub_27df3;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27e2d(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27e2d:
    _begin:
#undef arg_0
#define arg_0 4
	// 86548 arg_0           = word ptr  4 ;~ 17C5:1BFD
#undef arg_2
#define arg_2 6
	// 86549 arg_2           = word ptr  6 ;~ 17C5:1BFD
cs=0x17c5;eip=0x001bfd; 	X(PUSH(bp));	// 86551                  push    bp ;~ 17C5:1BFD
cs=0x17c5;eip=0x001bfe; 	T(bp = sp;);	// 86552                  mov     bp, sp ;~ 17C5:1BFE
cs=0x17c5;eip=0x001c00; 	T(CMP(word_4993e, 0));	// 86553                  cmp     word_4993E, 0 ;~ 17C5:1C00
cs=0x17c5;eip=0x001c05; 	J(JNZ(loc_27e39));	// 86554                  jnz     short loc_27E39 ;~ 17C5:1C05
cs=0x17c5;eip=0x001c07; 	J(JMP(loc_27e4d));	// 86555                  jmp     short loc_27E4D ;~ 17C5:1C07
loc_27e39:
	// 5054 
cs=0x17c5;eip=0x001c09; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 86559                  mov     ax, [bp+arg_0] ;~ 17C5:1C09
cs=0x17c5;eip=0x001c0c; 	X(word_520c0 = ax;);	// 86560                  mov     ds:word_520C0, ax ;~ 17C5:1C0C
cs=0x17c5;eip=0x001c0f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 86561                  mov     ax, [bp+arg_2] ;~ 17C5:1C0F
cs=0x17c5;eip=0x001c12; 	X(IMUL1_2(word_492f4));	// 86562                  imul    word_492F4 ;~ 17C5:1C12
cs=0x17c5;eip=0x001c16; 	T(ADD(ax, word_49918));	// 86563                  add     ax, word_49918 ;~ 17C5:1C16
cs=0x17c5;eip=0x001c1a; 	X(word_4993c = ax;);	// 86564                  mov     word_4993C, ax ;~ 17C5:1C1A
loc_27e4d:
	// 5055 
cs=0x17c5;eip=0x001c1d; 	T(sp = bp;);	// 86567                  mov     sp, bp ;~ 17C5:1C1D
cs=0x17c5;eip=0x001c1f; 	X(POP(bp));	// 86568                  pop     bp ;~ 17C5:1C1F
cs=0x17c5;eip=0x001c20; 	J(RETN(0));	// 86569                  retn ;~ 17C5:1C20

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27e39: 	goto loc_27e39;
        case m2c::kloc_27e4d: 	goto loc_27e4d;
        case m2c::ksub_27e2d: 	goto sub_27e2d;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27e51(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27e51:
    _begin:
#undef var_2
#define var_2 -2
	// 86579 var_2           = word ptr -2 ;~ 17C5:1C21
cs=0x17c5;eip=0x001c21; 	X(PUSH(bp));	// 86581                  push    bp ;~ 17C5:1C21
cs=0x17c5;eip=0x001c22; 	T(bp = sp;);	// 86582                  mov     bp, sp ;~ 17C5:1C22
cs=0x17c5;eip=0x001c24; 	T(SUB(sp, 2));	// 86583                  sub     sp, 2 ;~ 17C5:1C24
cs=0x17c5;eip=0x001c27; 	T(CMP(word_4993c, 0x0FFFF));	// 86584                  cmp     word_4993C, 0FFFFh ;~ 17C5:1C27
cs=0x17c5;eip=0x001c2c; 	J(JZ(loc_27e61));	// 86585                  jz      short loc_27E61 ;~ 17C5:1C2C
cs=0x17c5;eip=0x001c2e; 	J(JMP(loc_27f3c));	// 86586                  jmp     loc_27F3C ;~ 17C5:1C2E
loc_27e61:
	// 5056 
cs=0x17c5;eip=0x001c31; 	X(word_492e6 = 0x1F4;);	// 86590                  mov     word_492E6, 1F4h ;~ 17C5:1C31
cs=0x17c5;eip=0x001c37; 	X(word_4993e = 2;);	// 86591                  mov     word_4993E, 2 ;~ 17C5:1C37
cs=0x17c5;eip=0x001c3d; 	T(ax = 3;);	// 86592                  mov     ax, 3 ;~ 17C5:1C3D
cs=0x17c5;eip=0x001c40; 	X(PUSH(ax));	// 86593                  push    ax ;~ 17C5:1C40
cs=0x17c5;eip=0x001c41; 	J(CALL(sub_33430,0));	// 86594                  call    sub_33430 ;~ 17C5:1C41
cs=0x17c5;eip=0x001c44; 	T(ADD(sp, 2));	// 86595                  add     sp, 2 ;~ 17C5:1C44
cs=0x17c5;eip=0x001c47; 	J(JMP(loc_27f26));	// 86596                  jmp     loc_27F26 ;~ 17C5:1C47
loc_27e7a:
	// 5057 
cs=0x17c5;eip=0x001c4a; 	T(ax = word_52102;);	// 86600                  mov     ax, ds:word_52102 ;~ 17C5:1C4A
cs=0x17c5;eip=0x001c4d; 	T(SUB(ax, 3));	// 86601                  sub     ax, 3 ;~ 17C5:1C4D
cs=0x17c5;eip=0x001c50; 	X(PUSH(ax));	// 86602                  push    ax ;~ 17C5:1C50
cs=0x17c5;eip=0x001c51; 	J(CALL(sub_33430,0));	// 86603                  call    sub_33430 ;~ 17C5:1C51
cs=0x17c5;eip=0x001c54; 	T(ADD(sp, 2));	// 86604                  add     sp, 2 ;~ 17C5:1C54
cs=0x17c5;eip=0x001c57; 	T(ADD(ax, 3));	// 86605                  add     ax, 3 ;~ 17C5:1C57
cs=0x17c5;eip=0x001c5a; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 86606                  mov     [bp+var_2], ax ;~ 17C5:1C5A
cs=0x17c5;eip=0x001c5d; 	T(ADD(ax, 0x40));	// 86607                  add     ax, 40h ; '@' ;~ 17C5:1C5D
cs=0x17c5;eip=0x001c60; 	X(word_5225e = ax;);	// 86608                  mov     ds:word_5225E, ax ;~ 17C5:1C60
cs=0x17c5;eip=0x001c63; 	X(word_520c0 = 0x89;);	// 86609                  mov     ds:word_520C0, 89h ;~ 17C5:1C63
cs=0x17c5;eip=0x001c69; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 86610                  push    [bp+var_2] ;~ 17C5:1C69
cs=0x17c5;eip=0x001c6c; 	J(CALL(sub_27f9e,0));	// 86611                  call    sub_27F9E ;~ 17C5:1C6C
cs=0x17c5;eip=0x001c6f; 	T(ADD(sp, 2));	// 86612                  add     sp, 2 ;~ 17C5:1C6F
cs=0x17c5;eip=0x001c72; 	T(ax = 0x66C4;);	// 86613                  mov     ax, 66C4h ;~ 17C5:1C72
cs=0x17c5;eip=0x001c75; 	X(PUSH(ax));	// 86614                  push    ax ;~ 17C5:1C75
cs=0x17c5;eip=0x001c76; 	J(CALL(sub_30414,0));	// 86615                  call    sub_30414 ;~ 17C5:1C76
cs=0x17c5;eip=0x001c79; 	T(ADD(sp, 2));	// 86616                  add     sp, 2 ;~ 17C5:1C79
cs=0x17c5;eip=0x001c7c; 	J(JMP(loc_27f3c));	// 86617                  jmp     loc_27F3C ;~ 17C5:1C7C
loc_27eaf:
	// 5058 
cs=0x17c5;eip=0x001c7f; 	X(PUSH(word_52276));	// 86622                  push    ds:word_52276 ;~ 17C5:1C7F
cs=0x17c5;eip=0x001c83; 	J(CALL(sub_33430,0));	// 86623                  call    sub_33430 ;~ 17C5:1C83
cs=0x17c5;eip=0x001c86; 	T(ADD(sp, 2));	// 86624                  add     sp, 2 ;~ 17C5:1C86
cs=0x17c5;eip=0x001c89; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 86625                  mov     [bp+var_2], ax ;~ 17C5:1C89
cs=0x17c5;eip=0x001c8c; 	T(ax = 0x24;);	// 86626                  mov     ax, 24h ; '$' ;~ 17C5:1C8C
cs=0x17c5;eip=0x001c8f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 86627                  imul    [bp+var_2] ;~ 17C5:1C8F
cs=0x17c5;eip=0x001c92; 	T(bx = ax;);	// 86628                  mov     bx, ax ;~ 17C5:1C92
cs=0x17c5;eip=0x001c94; 	T(CMP(*(dw*)(raddr(ds,bx-0x7694)), 0));	// 86629                  cmp     word ptr [bx-7694h], 0 ;~ 17C5:1C94
cs=0x17c5;eip=0x001c99; 	J(JZ(loc_27eaf));	// 86630                  jz      short loc_27EAF ;~ 17C5:1C99
cs=0x17c5;eip=0x001c9b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 86631                  mov     ax, [bp+var_2] ;~ 17C5:1C9B
cs=0x17c5;eip=0x001c9e; 	T(ADD(ax, 0x20));	// 86632                  add     ax, 20h ; ' ' ;~ 17C5:1C9E
cs=0x17c5;eip=0x001ca1; 	X(word_5225e = ax;);	// 86633                  mov     ds:word_5225E, ax ;~ 17C5:1CA1
cs=0x17c5;eip=0x001ca4; 	X(word_520c0 = 0x89;);	// 86634                  mov     ds:word_520C0, 89h ;~ 17C5:1CA4
cs=0x17c5;eip=0x001caa; 	T(ax = 0x24;);	// 86635                  mov     ax, 24h ; '$' ;~ 17C5:1CAA
cs=0x17c5;eip=0x001cad; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 86636                  imul    [bp+var_2] ;~ 17C5:1CAD
cs=0x17c5;eip=0x001cb0; 	T(bx = ax;);	// 86637                  mov     bx, ax ;~ 17C5:1CB0
cs=0x17c5;eip=0x001cb2; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7698))));	// 86638                  mov     ax, [bx-7698h] ;~ 17C5:1CB2
cs=0x17c5;eip=0x001cb6; 	T(cl = 5;);	// 86639                  mov     cl, 5 ;~ 17C5:1CB6
cs=0x17c5;eip=0x001cb8; 	T(SHL(ax, cl));	// 86640                  shl     ax, cl ;~ 17C5:1CB8
cs=0x17c5;eip=0x001cba; 	T(ADD(ax, 0x2C8));	// 86641                  add     ax, 2C8h ;~ 17C5:1CBA
cs=0x17c5;eip=0x001cbd; 	X(PUSH(ax));	// 86642                  push    ax ;~ 17C5:1CBD
cs=0x17c5;eip=0x001cbe; 	T(ax = 0x66C4;);	// 86643                  mov     ax, 66C4h ;~ 17C5:1CBE
cs=0x17c5;eip=0x001cc1; 	X(PUSH(ax));	// 86644                  push    ax ;~ 17C5:1CC1
cs=0x17c5;eip=0x001cc2; 	J(CALL(sub_34c1c,0));	// 86645                  call    sub_34C1C ;~ 17C5:1CC2
cs=0x17c5;eip=0x001cc5; 	T(ADD(sp, 4));	// 86646                  add     sp, 4 ;~ 17C5:1CC5
cs=0x17c5;eip=0x001cc8; 	T(ax = 0x0E9C;);	// 86647                  mov     ax, 0E9Ch ;~ 17C5:1CC8
cs=0x17c5;eip=0x001ccb; 	X(PUSH(ax));	// 86648                  push    ax ;~ 17C5:1CCB
cs=0x17c5;eip=0x001ccc; 	T(ax = 0x66C4;);	// 86649                  mov     ax, 66C4h ;~ 17C5:1CCC
cs=0x17c5;eip=0x001ccf; 	X(PUSH(ax));	// 86650                  push    ax ;~ 17C5:1CCF
cs=0x17c5;eip=0x001cd0; 	J(CALL(sub_34bdc,0));	// 86651                  call    sub_34BDC ;~ 17C5:1CD0
cs=0x17c5;eip=0x001cd3; 	T(ADD(sp, 4));	// 86652                  add     sp, 4 ;~ 17C5:1CD3
cs=0x17c5;eip=0x001cd6; 	T(ax = 0x66C4;);	// 86653                  mov     ax, 66C4h ;~ 17C5:1CD6
cs=0x17c5;eip=0x001cd9; 	X(PUSH(ax));	// 86654                  push    ax ;~ 17C5:1CD9
cs=0x17c5;eip=0x001cda; 	J(CALL(sub_30414,0));	// 86655                  call    sub_30414 ;~ 17C5:1CDA
cs=0x17c5;eip=0x001cdd; 	T(ADD(sp, 2));	// 86656                  add     sp, 2 ;~ 17C5:1CDD
cs=0x17c5;eip=0x001ce0; 	J(JMP(loc_27f3c));	// 86657                  jmp     short loc_27F3C ;~ 17C5:1CE0
loc_27f12:
	// 5059 
cs=0x17c5;eip=0x001ce2; 	X(word_520c0 = 0x87;);	// 86661                  mov     ds:word_520C0, 87h ;~ 17C5:1CE2
cs=0x17c5;eip=0x001ce8; 	T(ax = 0x0EA7;);	// 86662                  mov     ax, 0EA7h ;~ 17C5:1CE8
cs=0x17c5;eip=0x001ceb; 	X(PUSH(ax));	// 86663                  push    ax ;~ 17C5:1CEB
cs=0x17c5;eip=0x001cec; 	J(CALL(sub_30414,0));	// 86664                  call    sub_30414 ;~ 17C5:1CEC
cs=0x17c5;eip=0x001cef; 	T(ADD(sp, 2));	// 86665                  add     sp, 2 ;~ 17C5:1CEF
cs=0x17c5;eip=0x001cf2; 	J(JMP(loc_27f3c));	// 86666                  jmp     short loc_27F3C ;~ 17C5:1CF2
ret_17c5_1cf4:
	// 5060 
cs=0x17c5;eip=0x001cf4; 	J(JMP(loc_27f3c));	// 86668                  jmp     short loc_27F3C ;~ 17C5:1CF4
loc_27f26:
	// 5061 
cs=0x17c5;eip=0x001cf6; 	T(OR(ax, ax));	// 86672                  or      ax, ax ;~ 17C5:1CF6
cs=0x17c5;eip=0x001cf8; 	J(JNZ(loc_27f2d));	// 86673                  jnz     short loc_27F2D ;~ 17C5:1CF8
cs=0x17c5;eip=0x001cfa; 	J(JMP(loc_27e7a));	// 86674                  jmp     loc_27E7A ;~ 17C5:1CFA
loc_27f2d:
	// 5062 
cs=0x17c5;eip=0x001cfd; 	T(CMP(ax, 1));	// 86678                  cmp     ax, 1 ;~ 17C5:1CFD
cs=0x17c5;eip=0x001d00; 	J(JNZ(loc_27f35));	// 86679                  jnz     short loc_27F35 ;~ 17C5:1D00
cs=0x17c5;eip=0x001d02; 	J(JMP(loc_27eaf));	// 86680                  jmp     loc_27EAF ;~ 17C5:1D02
loc_27f35:
	// 5063 
cs=0x17c5;eip=0x001d05; 	T(CMP(ax, 2));	// 86684                  cmp     ax, 2 ;~ 17C5:1D05
cs=0x17c5;eip=0x001d08; 	J(JZ(loc_27f12));	// 86685                  jz      short loc_27F12 ;~ 17C5:1D08
cs=0x17c5;eip=0x001d0a; 	J({;});	// 86686                  jmp     short $+2 ;~ 17C5:1D0A
loc_27f3c:
	// 5064 
cs=0x17c5;eip=0x001d0c; 	T(sp = bp;);	// 86691                  mov     sp, bp ;~ 17C5:1D0C
cs=0x17c5;eip=0x001d0e; 	X(POP(bp));	// 86692                  pop     bp ;~ 17C5:1D0E
cs=0x17c5;eip=0x001d0f; 	J(RETN(0));	// 86693                  retn ;~ 17C5:1D0F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27e61: 	goto loc_27e61;
        case m2c::kloc_27e7a: 	goto loc_27e7a;
        case m2c::kloc_27eaf: 	goto loc_27eaf;
        case m2c::kloc_27f12: 	goto loc_27f12;
        case m2c::kloc_27f26: 	goto loc_27f26;
        case m2c::kloc_27f2d: 	goto loc_27f2d;
        case m2c::kloc_27f35: 	goto loc_27f35;
        case m2c::kloc_27f3c: 	goto loc_27f3c;
        case m2c::kret_17c5_1cf4: 	goto ret_17c5_1cf4;
        case m2c::ksub_27e51: 	goto sub_27e51;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27f40(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27f40:
    _begin:
#undef arg_0
#define arg_0 4
	// 86704 arg_0           = byte ptr  4 ;~ 17C5:1D10
#undef arg_2
#define arg_2 6
	// 86705 arg_2           = byte ptr  6 ;~ 17C5:1D10
cs=0x17c5;eip=0x001d10; 	X(PUSH(bp));	// 86707                  push    bp ;~ 17C5:1D10
cs=0x17c5;eip=0x001d11; 	T(bp = sp;);	// 86708                  mov     bp, sp ;~ 17C5:1D11
cs=0x17c5;eip=0x001d13; 	X(PUSH(si));	// 86709                  push    si ;~ 17C5:1D13
cs=0x17c5;eip=0x001d14; 	T(CMP(word_4ef02, 0x0FF));	// 86710                  cmp     ds:word_4EF02, 0FFh ;~ 17C5:1D14
cs=0x17c5;eip=0x001d1a; 	J(JL(loc_27f4e));	// 86711                  jl      short loc_27F4E ;~ 17C5:1D1A
cs=0x17c5;eip=0x001d1c; 	J(JMP(loc_27f99));	// 86712                  jmp     short loc_27F99 ;~ 17C5:1D1C
loc_27f4e:
	// 5065 
cs=0x17c5;eip=0x001d1e; 	T(ax = word_4ef02;);	// 86716                  mov     ax, ds:word_4EF02 ;~ 17C5:1D1E
cs=0x17c5;eip=0x001d21; 	T(cx = ax;);	// 86717                  mov     cx, ax ;~ 17C5:1D21
cs=0x17c5;eip=0x001d23; 	T(SHL(ax, 1));	// 86718                  shl     ax, 1 ;~ 17C5:1D23
cs=0x17c5;eip=0x001d25; 	T(ADD(ax, cx));	// 86719                  add     ax, cx ;~ 17C5:1D25
cs=0x17c5;eip=0x001d27; 	T(SHL(ax, 1));	// 86720                  shl     ax, 1 ;~ 17C5:1D27
cs=0x17c5;eip=0x001d29; 	T(si = ax;);	// 86721                  mov     si, ax ;~ 17C5:1D29
cs=0x17c5;eip=0x001d2b; 	T(ax = word_4f210;);	// 86722                  mov     ax, ds:word_4F210 ;~ 17C5:1D2B
cs=0x17c5;eip=0x001d2e; 	X(MOV(*(dw*)(raddr(ds,si-0x70B4)), ax));	// 86723                  mov     [si-70B4h], ax ;~ 17C5:1D2E
cs=0x17c5;eip=0x001d32; 	T(ax = word_520f0;);	// 86724                  mov     ax, ds:word_520F0 ;~ 17C5:1D32
cs=0x17c5;eip=0x001d35; 	T(cl = 7;);	// 86725                  mov     cl, 7 ;~ 17C5:1D35
cs=0x17c5;eip=0x001d37; 	T(SHR(ax, cl));	// 86726                  shr     ax, cl ;~ 17C5:1D37
cs=0x17c5;eip=0x001d39; 	X(MOV(*(raddr(ds,si-0x70B2)), al));	// 86727                  mov     [si-70B2h], al ;~ 17C5:1D39
cs=0x17c5;eip=0x001d3d; 	T(ax = word_52100;);	// 86728                  mov     ax, ds:word_52100 ;~ 17C5:1D3D
cs=0x17c5;eip=0x001d40; 	T(SHR(ax, cl));	// 86729                  shr     ax, cl ;~ 17C5:1D40
cs=0x17c5;eip=0x001d42; 	X(MOV(*(raddr(ds,si-0x70B1)), al));	// 86730                  mov     [si-70B1h], al ;~ 17C5:1D42
cs=0x17c5;eip=0x001d46; 	T(MOV(al, *(raddr(ss,bp+arg_0))));	// 86731                  mov     al, [bp+arg_0] ;~ 17C5:1D46
cs=0x17c5;eip=0x001d49; 	X(MOV(*(raddr(ds,si-0x70B0)), al));	// 86732                  mov     [si-70B0h], al ;~ 17C5:1D49
cs=0x17c5;eip=0x001d4d; 	T(MOV(al, *(raddr(ss,bp+arg_2))));	// 86733                  mov     al, [bp+arg_2] ;~ 17C5:1D4D
cs=0x17c5;eip=0x001d50; 	X(MOV(*(raddr(ds,si-0x70AF)), al));	// 86734                  mov     [si-70AFh], al ;~ 17C5:1D50
cs=0x17c5;eip=0x001d54; 	X(INC(word_4ef02));	// 86735                  inc     ds:word_4EF02 ;~ 17C5:1D54
cs=0x17c5;eip=0x001d58; 	T(bx = word_4ef02;);	// 86736                  mov     bx, ds:word_4EF02 ;~ 17C5:1D58
cs=0x17c5;eip=0x001d5c; 	T(ax = bx;);	// 86737                  mov     ax, bx ;~ 17C5:1D5C
cs=0x17c5;eip=0x001d5e; 	T(SHL(bx, 1));	// 86738                  shl     bx, 1 ;~ 17C5:1D5E
cs=0x17c5;eip=0x001d60; 	T(ADD(bx, ax));	// 86739                  add     bx, ax ;~ 17C5:1D60
cs=0x17c5;eip=0x001d62; 	T(SHL(bx, 1));	// 86740                  shl     bx, 1 ;~ 17C5:1D62
cs=0x17c5;eip=0x001d64; 	X(MOV(*(raddr(ds,bx-0x70B0)), 0));	// 86741                  mov     byte ptr [bx-70B0h], 0 ;~ 17C5:1D64
loc_27f99:
	// 5066 
cs=0x17c5;eip=0x001d69; 	X(POP(si));	// 86744                  pop     si ;~ 17C5:1D69
cs=0x17c5;eip=0x001d6a; 	T(sp = bp;);	// 86745                  mov     sp, bp ;~ 17C5:1D6A
cs=0x17c5;eip=0x001d6c; 	X(POP(bp));	// 86746                  pop     bp ;~ 17C5:1D6C
cs=0x17c5;eip=0x001d6d; 	J(RETN(0));	// 86747                  retn ;~ 17C5:1D6D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_27f4e: 	goto loc_27f4e;
        case m2c::kloc_27f99: 	goto loc_27f99;
        case m2c::ksub_27f40: 	goto sub_27f40;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_27f9e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_27f9e:
    _begin:
#undef arg_0
#define arg_0 4
	// 86758 arg_0           = word ptr  4 ;~ 17C5:1D6E
cs=0x17c5;eip=0x001d6e; 	X(PUSH(bp));	// 86760                  push    bp ;~ 17C5:1D6E
cs=0x17c5;eip=0x001d6f; 	T(bp = sp;);	// 86761                  mov     bp, sp ;~ 17C5:1D6F
cs=0x17c5;eip=0x001d71; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 86762                  mov     bx, [bp+arg_0] ;~ 17C5:1D71
cs=0x17c5;eip=0x001d74; 	T(cl = 4;);	// 86763                  mov     cl, 4 ;~ 17C5:1D74
cs=0x17c5;eip=0x001d76; 	T(SHL(bx, cl));	// 86764                  shl     bx, cl ;~ 17C5:1D76
cs=0x17c5;eip=0x001d78; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E46))));	// 86765                  mov     bx, [bx-7E46h] ;~ 17C5:1D78
cs=0x17c5;eip=0x001d7c; 	T(AND(bx, 0x7F));	// 86766                  and     bx, 7Fh ;~ 17C5:1D7C
cs=0x17c5;eip=0x001d7f; 	T(SHL(bx, 1));	// 86767                  shl     bx, 1 ;~ 17C5:1D7F
cs=0x17c5;eip=0x001d81; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 86768                  push    word ptr [bx-680Eh] ;~ 17C5:1D81
cs=0x17c5;eip=0x001d85; 	T(ax = 0x66C4;);	// 86769                  mov     ax, 66C4h ;~ 17C5:1D85
cs=0x17c5;eip=0x001d88; 	X(PUSH(ax));	// 86770                  push    ax ;~ 17C5:1D88
cs=0x17c5;eip=0x001d89; 	J(CALL(sub_34c1c,0));	// 86771                  call    sub_34C1C ;~ 17C5:1D89
cs=0x17c5;eip=0x001d8c; 	T(ADD(sp, 4));	// 86773                  add     sp, 4 ;~ 17C5:1D8C
cs=0x17c5;eip=0x001d8f; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 86774                  mov     bx, [bp+arg_0] ;~ 17C5:1D8F
cs=0x17c5;eip=0x001d92; 	T(cl = 4;);	// 86775                  mov     cl, 4 ;~ 17C5:1D92
cs=0x17c5;eip=0x001d94; 	T(SHL(bx, cl));	// 86776                  shl     bx, cl ;~ 17C5:1D94
cs=0x17c5;eip=0x001d96; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E54))));	// 86777                  mov     bx, [bx-7E54h] ;~ 17C5:1D96
cs=0x17c5;eip=0x001d9a; 	T(SHL(bx, 1));	// 86778                  shl     bx, 1 ;~ 17C5:1D9A
cs=0x17c5;eip=0x001d9c; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 86779                  push    word ptr [bx-680Eh] ;~ 17C5:1D9C
cs=0x17c5;eip=0x001da0; 	J(CALL(sub_34c4e,0));	// 86780                  call    sub_34C4E ;~ 17C5:1DA0
cs=0x17c5;eip=0x001da3; 	T(ADD(sp, 2));	// 86781                  add     sp, 2 ;~ 17C5:1DA3
cs=0x17c5;eip=0x001da6; 	T(OR(ax, ax));	// 86782                  or      ax, ax ;~ 17C5:1DA6
cs=0x17c5;eip=0x001da8; 	J(JZ(loc_28021));	// 86783                  jz      short loc_28021 ;~ 17C5:1DA8
cs=0x17c5;eip=0x001daa; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 86784                  mov     bx, [bp+arg_0] ;~ 17C5:1DAA
cs=0x17c5;eip=0x001dad; 	T(cl = 4;);	// 86785                  mov     cl, 4 ;~ 17C5:1DAD
cs=0x17c5;eip=0x001daf; 	T(SHL(bx, cl));	// 86786                  shl     bx, cl ;~ 17C5:1DAF
cs=0x17c5;eip=0x001db1; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E46))));	// 86787                  mov     bx, [bx-7E46h] ;~ 17C5:1DB1
cs=0x17c5;eip=0x001db5; 	T(AND(bx, 0x7F));	// 86788                  and     bx, 7Fh ;~ 17C5:1DB5
cs=0x17c5;eip=0x001db8; 	T(SHL(bx, 1));	// 86789                  shl     bx, 1 ;~ 17C5:1DB8
cs=0x17c5;eip=0x001dba; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 86790                  push    word ptr [bx-680Eh] ;~ 17C5:1DBA
cs=0x17c5;eip=0x001dbe; 	J(CALL(sub_34c4e,0));	// 86791                  call    sub_34C4E ;~ 17C5:1DBE
cs=0x17c5;eip=0x001dc1; 	T(ADD(sp, 2));	// 86792                  add     sp, 2 ;~ 17C5:1DC1
cs=0x17c5;eip=0x001dc4; 	T(OR(ax, ax));	// 86793                  or      ax, ax ;~ 17C5:1DC4
cs=0x17c5;eip=0x001dc6; 	J(JZ(loc_28006));	// 86794                  jz      short loc_28006 ;~ 17C5:1DC6
cs=0x17c5;eip=0x001dc8; 	T(ax = 0x0EB8;);	// 86795                  mov     ax, 0EB8h ;~ 17C5:1DC8
cs=0x17c5;eip=0x001dcb; 	X(PUSH(ax));	// 86796                  push    ax ;~ 17C5:1DCB
cs=0x17c5;eip=0x001dcc; 	T(ax = 0x66C4;);	// 86797                  mov     ax, 66C4h ;~ 17C5:1DCC
cs=0x17c5;eip=0x001dcf; 	X(PUSH(ax));	// 86798                  push    ax ;~ 17C5:1DCF
cs=0x17c5;eip=0x001dd0; 	J(CALL(sub_34bdc,0));	// 86799                  call    sub_34BDC ;~ 17C5:1DD0
cs=0x17c5;eip=0x001dd3; 	T(ADD(sp, 4));	// 86800                  add     sp, 4 ;~ 17C5:1DD3
loc_28006:
	// 5067 
cs=0x17c5;eip=0x001dd6; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 86803                  mov     bx, [bp+arg_0] ;~ 17C5:1DD6
cs=0x17c5;eip=0x001dd9; 	T(cl = 4;);	// 86804                  mov     cl, 4 ;~ 17C5:1DD9
cs=0x17c5;eip=0x001ddb; 	T(SHL(bx, cl));	// 86805                  shl     bx, cl ;~ 17C5:1DDB
cs=0x17c5;eip=0x001ddd; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E54))));	// 86806                  mov     bx, [bx-7E54h] ;~ 17C5:1DDD
cs=0x17c5;eip=0x001de1; 	T(SHL(bx, 1));	// 86807                  shl     bx, 1 ;~ 17C5:1DE1
cs=0x17c5;eip=0x001de3; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 86808                  push    word ptr [bx-680Eh] ;~ 17C5:1DE3
cs=0x17c5;eip=0x001de7; 	T(ax = 0x66C4;);	// 86809                  mov     ax, 66C4h ;~ 17C5:1DE7
cs=0x17c5;eip=0x001dea; 	X(PUSH(ax));	// 86810                  push    ax ;~ 17C5:1DEA
cs=0x17c5;eip=0x001deb; 	J(CALL(sub_34bdc,0));	// 86811                  call    sub_34BDC ;~ 17C5:1DEB
cs=0x17c5;eip=0x001dee; 	T(ADD(sp, 4));	// 86812                  add     sp, 4 ;~ 17C5:1DEE
loc_28021:
	// 5068 
cs=0x17c5;eip=0x001df1; 	T(ax = 0x66C4;);	// 86815                  mov     ax, 66C4h ;~ 17C5:1DF1
cs=0x17c5;eip=0x001df4; 	X(PUSH(ax));	// 86816                  push    ax ;~ 17C5:1DF4
cs=0x17c5;eip=0x001df5; 	J(CALL(sub_34c4e,0));	// 86817                  call    sub_34C4E ;~ 17C5:1DF5
cs=0x17c5;eip=0x001df8; 	T(ADD(sp, 2));	// 86818                  add     sp, 2 ;~ 17C5:1DF8
cs=0x17c5;eip=0x001dfb; 	T(CMP(ax, 0x19));	// 86819                  cmp     ax, 19h ;~ 17C5:1DFB
cs=0x17c5;eip=0x001dfe; 	J(JLE(loc_2803a));	// 86820                  jle     short loc_2803A ;~ 17C5:1DFE
cs=0x17c5;eip=0x001e00; 	X(byte_4f1bc = 0x2E;);	// 86821                  mov     ds:byte_4F1BC, 2Eh ; '.' ;~ 17C5:1E00
cs=0x17c5;eip=0x001e05; 	X(byte_4f1bd = 0;);	// 86822                  mov     ds:byte_4F1BD, 0 ;~ 17C5:1E05
loc_2803a:
	// 5069 
cs=0x17c5;eip=0x001e0a; 	T(sp = bp;);	// 86825                  mov     sp, bp ;~ 17C5:1E0A
cs=0x17c5;eip=0x001e0c; 	X(POP(bp));	// 86826                  pop     bp ;~ 17C5:1E0C
cs=0x17c5;eip=0x001e0d; 	J(RETN(0));	// 86827                  retn ;~ 17C5:1E0D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_28006: 	goto loc_28006;
        case m2c::kloc_28021: 	goto loc_28021;
        case m2c::kloc_2803a: 	goto loc_2803a;
        case m2c::ksub_27f9e: 	goto sub_27f9e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group20(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group20:
    _begin:
sub_2803e:
	// 86836 
#undef var_4
#define var_4 -4
	// 86838 var_4           = word ptr -4 ;~ 17C5:1E0E
#undef var_2
#define var_2 -2
	// 86839 var_2           = word ptr -2 ;~ 17C5:1E0E
cs=0x17c5;eip=0x001e0e; 	X(PUSH(bp));	// 86843                  push    bp ;~ 17C5:1E0E
cs=0x17c5;eip=0x001e0f; 	T(bp = sp;);	// 86844                  mov     bp, sp ;~ 17C5:1E0F
cs=0x17c5;eip=0x001e11; 	T(SUB(sp, 4));	// 86845                  sub     sp, 4 ;~ 17C5:1E11
cs=0x17c5;eip=0x001e14; 	X(PUSH(si));	// 86846                  push    si ;~ 17C5:1E14
cs=0x17c5;eip=0x001e15; 	J(CALL(sub_283d9,0));	// 86847                  call    sub_283D9 ;~ 17C5:1E15
cs=0x17c5;eip=0x001e18; 	X(word_52240 = 1;);	// 86848                  mov     ds:word_52240, 1 ;~ 17C5:1E18
cs=0x17c5;eip=0x001e1e; 	J(CALL(sub_2829d,0));	// 86849                  call    sub_2829D ;~ 17C5:1E1E
cs=0x17c5;eip=0x001e21; 	X(word_522d2 = 0x98BE;);	// 86851                  mov     ds:word_522D2, 98BEh ;~ 17C5:1E21
cs=0x17c5;eip=0x001e27; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 1));	// 86852                  mov     [bp+var_2], 1 ;~ 17C5:1E27
cs=0x17c5;eip=0x001e2c; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 86853                  mov     [bp+var_4], 0 ;~ 17C5:1E2C
cs=0x17c5;eip=0x001e31; 	J(JMP(loc_28066));	// 86854                  jmp     short loc_28066 ;~ 17C5:1E31
loc_28063:
	// 5070 
cs=0x17c5;eip=0x001e33; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 86858                  inc     [bp+var_4] ;~ 17C5:1E33
loc_28066:
	// 5071 
cs=0x17c5;eip=0x001e36; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x2EE));	// 86861                  cmp     [bp+var_4], 2EEh ;~ 17C5:1E36
cs=0x17c5;eip=0x001e3b; 	J(JGE(loc_28091));	// 86862                  jge     short loc_28091 ;~ 17C5:1E3B
cs=0x17c5;eip=0x001e3d; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 86863                  mov     bx, [bp+var_4] ;~ 17C5:1E3D
cs=0x17c5;eip=0x001e40; 	T(CMP(*(raddr(ds,bx-0x6742)), 0));	// 86864                  cmp     byte ptr [bx-6742h], 0 ;~ 17C5:1E40
cs=0x17c5;eip=0x001e45; 	J(JNZ(loc_2808f));	// 86865                  jnz     short loc_2808F ;~ 17C5:1E45
cs=0x17c5;eip=0x001e47; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0x64));	// 86866                  cmp     [bp+var_2], 64h ; 'd' ;~ 17C5:1E47
cs=0x17c5;eip=0x001e4b; 	J(JGE(loc_2808f));	// 86867                  jge     short loc_2808F ;~ 17C5:1E4B
cs=0x17c5;eip=0x001e4d; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2))));	// 86868                  mov     bx, [bp+var_2] ;~ 17C5:1E4D
cs=0x17c5;eip=0x001e50; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 86869                  inc     [bp+var_2] ;~ 17C5:1E50
cs=0x17c5;eip=0x001e53; 	T(SHL(bx, 1));	// 86870                  shl     bx, 1 ;~ 17C5:1E53
cs=0x17c5;eip=0x001e55; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 86871                  mov     ax, [bp+var_4] ;~ 17C5:1E55
cs=0x17c5;eip=0x001e58; 	T(ADD(ax, 0x98BF));	// 86872                  add     ax, 98BFh ;~ 17C5:1E58
cs=0x17c5;eip=0x001e5b; 	X(MOV(*(dw*)(raddr(ds,bx-0x680E)), ax));	// 86873                  mov     [bx-680Eh], ax ;~ 17C5:1E5B
loc_2808f:
	// 5072 
cs=0x17c5;eip=0x001e5f; 	J(JMP(loc_28063));	// 86877                  jmp     short loc_28063 ;~ 17C5:1E5F
loc_28091:
	// 5073 
cs=0x17c5;eip=0x001e61; 	T(LES(bx, dword_4f220));	// 86881                  les     bx, ds:dword_4F220 ;~ 17C5:1E61
cs=0x17c5;eip=0x001e65; 	T(CMP(*(dw*)(raddr(es,bx+0x3E)), 0));	// 86883                  cmp     word ptr es:[bx+3Eh], 0 ;~ 17C5:1E65
cs=0x17c5;eip=0x001e6a; 	J(JZ(loc_280ea));	// 86884                  jz      short loc_280EA ;~ 17C5:1E6A
cs=0x17c5;eip=0x001e6c; 	T(si = word_51378;);	// 86885                  mov     si, ds:word_51378 ;~ 17C5:1E6C
cs=0x17c5;eip=0x001e70; 	T(cl = 4;);	// 86886                  mov     cl, 4 ;~ 17C5:1E70
cs=0x17c5;eip=0x001e72; 	T(SHL(si, cl));	// 86887                  shl     si, cl ;~ 17C5:1E72
cs=0x17c5;eip=0x001e74; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 86888                  mov     ax, [si-7E52h] ;~ 17C5:1E74
cs=0x17c5;eip=0x001e78; 	T(SUB(dx, dx));	// 86889                  sub     dx, dx ;~ 17C5:1E78
cs=0x17c5;eip=0x001e7a; 	T(cl = 5;);	// 86890                  mov     cl, 5 ;~ 17C5:1E7A
loc_280ac:
	// 5074 
cs=0x17c5;eip=0x001e7c; 	T(SHL(ax, 1));	// 86893                  shl     ax, 1 ;~ 17C5:1E7C
cs=0x17c5;eip=0x001e7e; 	T(RCL(dx, 1));	// 86894                  rcl     dx, 1 ;~ 17C5:1E7E
cs=0x17c5;eip=0x001e80; 	T(DEC(cl));	// 86895                  dec     cl ;~ 17C5:1E80
cs=0x17c5;eip=0x001e82; 	J(JZ(loc_280b6));	// 86896                  jz      short loc_280B6 ;~ 17C5:1E82
cs=0x17c5;eip=0x001e84; 	J(JMP(loc_280ac));	// 86897                  jmp     short loc_280AC ;~ 17C5:1E84
loc_280b6:
	// 5075 
cs=0x17c5;eip=0x001e86; 	T(ADD(ax, 2));	// 86901                  add     ax, 2 ;~ 17C5:1E86
cs=0x17c5;eip=0x001e89; 	T(ADC(dx, 0));	// 86902                  adc     dx, 0 ;~ 17C5:1E89
seg2623_1e8c_proc:
	// 86905 
cs=0x17c5;eip=0x001e8c; 	X(word_51a0a = ax;);	// 86905                  mov     ds:word_51A0A, ax ;~ 17C5:1E8C
cs=0x17c5;eip=0x001e8f; 	X(word_51a0c = dx;);	// 86906                  mov     ds:word_51A0C, dx ;~ 17C5:1E8F
cs=0x17c5;eip=0x001e93; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 86907                  mov     ax, [si-7E50h] ;~ 17C5:1E93
cs=0x17c5;eip=0x001e97; 	T(SUB(dx, dx));	// 86908                  sub     dx, dx ;~ 17C5:1E97
cs=0x17c5;eip=0x001e99; 	T(SUB(ax, 0x8000));	// 86909                  sub     ax, 8000h ;~ 17C5:1E99
cs=0x17c5;eip=0x001e9c; 	T(SBB(dx, dx));	// 86910                  sbb     dx, dx ;~ 17C5:1E9C
cs=0x17c5;eip=0x001e9e; 	T(NEG(ax));	// 86911                  neg     ax ;~ 17C5:1E9E
cs=0x17c5;eip=0x001ea0; 	T(ADC(dx, 0));	// 86912                  adc     dx, 0 ;~ 17C5:1EA0
cs=0x17c5;eip=0x001ea3; 	T(NEG(dx));	// 86913                  neg     dx ;~ 17C5:1EA3
cs=0x17c5;eip=0x001ea5; 	T(cl = 5;);	// 86914                  mov     cl, 5 ;~ 17C5:1EA5
loc_280d7:
	// 5076 
cs=0x17c5;eip=0x001ea7; 	T(SHL(ax, 1));	// 86917                  shl     ax, 1 ;~ 17C5:1EA7
cs=0x17c5;eip=0x001ea9; 	T(RCL(dx, 1));	// 86918                  rcl     dx, 1 ;~ 17C5:1EA9
cs=0x17c5;eip=0x001eab; 	T(DEC(cl));	// 86919                  dec     cl ;~ 17C5:1EAB
cs=0x17c5;eip=0x001ead; 	J(JZ(loc_280e1));	// 86920                  jz      short loc_280E1 ;~ 17C5:1EAD
cs=0x17c5;eip=0x001eaf; 	J(JMP(loc_280d7));	// 86921                  jmp     short loc_280D7 ;~ 17C5:1EAF
loc_280e1:
	// 5077 
cs=0x17c5;eip=0x001eb1; 	X(word_51a28 = ax;);	// 86925                  mov     ds:word_51A28, ax ;~ 17C5:1EB1
cs=0x17c5;eip=0x001eb4; 	X(word_51a2a = dx;);	// 86926                  mov     ds:word_51A2A, dx ;~ 17C5:1EB4
cs=0x17c5;eip=0x001eb8; 	J(JMP(loc_2812c));	// 86927                  jmp     short loc_2812C ;~ 17C5:1EB8
loc_280ea:
	// 5078 
cs=0x17c5;eip=0x001eba; 	T(ax = word_48c52;);	// 86932                  mov     ax, word_48C52 ;~ 17C5:1EBA
cs=0x17c5;eip=0x001ebd; 	T(SUB(dx, dx));	// 86933                  sub     dx, dx ;~ 17C5:1EBD
cs=0x17c5;eip=0x001ebf; 	T(cl = 5;);	// 86934                  mov     cl, 5 ;~ 17C5:1EBF
loc_280f1:
	// 5079 
cs=0x17c5;eip=0x001ec1; 	T(SHL(ax, 1));	// 86937                  shl     ax, 1 ;~ 17C5:1EC1
cs=0x17c5;eip=0x001ec3; 	T(RCL(dx, 1));	// 86938                  rcl     dx, 1 ;~ 17C5:1EC3
cs=0x17c5;eip=0x001ec5; 	T(DEC(cl));	// 86939                  dec     cl ;~ 17C5:1EC5
cs=0x17c5;eip=0x001ec7; 	J(JZ(loc_280fb));	// 86940                  jz      short loc_280FB ;~ 17C5:1EC7
cs=0x17c5;eip=0x001ec9; 	J(JMP(loc_280f1));	// 86941                  jmp     short loc_280F1 ;~ 17C5:1EC9
loc_280fb:
	// 5080 
cs=0x17c5;eip=0x001ecb; 	T(ADD(ax, 2));	// 86945                  add     ax, 2 ;~ 17C5:1ECB
cs=0x17c5;eip=0x001ece; 	T(ADC(dx, 0));	// 86946                  adc     dx, 0 ;~ 17C5:1ECE
cs=0x17c5;eip=0x001ed1; 	X(word_51a0a = ax;);	// 86947                  mov     ds:word_51A0A, ax ;~ 17C5:1ED1
cs=0x17c5;eip=0x001ed4; 	X(word_51a0c = dx;);	// 86948                  mov     ds:word_51A0C, dx ;~ 17C5:1ED4
cs=0x17c5;eip=0x001ed8; 	T(ax = *(word_48c54););	// 86949                  mov     ax, word_48C54 ;~ 17C5:1ED8
cs=0x17c5;eip=0x001edb; 	T(SUB(dx, dx));	// 86950                  sub     dx, dx ;~ 17C5:1EDB
cs=0x17c5;eip=0x001edd; 	T(SUB(ax, 0x8000));	// 86951                  sub     ax, 8000h ;~ 17C5:1EDD
cs=0x17c5;eip=0x001ee0; 	T(SBB(dx, dx));	// 86952                  sbb     dx, dx ;~ 17C5:1EE0
cs=0x17c5;eip=0x001ee2; 	T(NEG(ax));	// 86953                  neg     ax ;~ 17C5:1EE2
cs=0x17c5;eip=0x001ee4; 	T(ADC(dx, 0));	// 86954                  adc     dx, 0 ;~ 17C5:1EE4
cs=0x17c5;eip=0x001ee7; 	T(NEG(dx));	// 86955                  neg     dx ;~ 17C5:1EE7
cs=0x17c5;eip=0x001ee9; 	T(cl = 5;);	// 86956                  mov     cl, 5 ;~ 17C5:1EE9
loc_2811b:
	// 5081 
cs=0x17c5;eip=0x001eeb; 	T(SHL(ax, 1));	// 86959                  shl     ax, 1 ;~ 17C5:1EEB
cs=0x17c5;eip=0x001eed; 	T(RCL(dx, 1));	// 86960                  rcl     dx, 1 ;~ 17C5:1EED
cs=0x17c5;eip=0x001eef; 	T(DEC(cl));	// 86961                  dec     cl ;~ 17C5:1EEF
cs=0x17c5;eip=0x001ef1; 	J(JZ(loc_28125));	// 86962                  jz      short loc_28125 ;~ 17C5:1EF1
cs=0x17c5;eip=0x001ef3; 	J(JMP(loc_2811b));	// 86963                  jmp     short loc_2811B ;~ 17C5:1EF3
loc_28125:
	// 5082 
cs=0x17c5;eip=0x001ef5; 	X(word_51a28 = ax;);	// 86967                  mov     ds:word_51A28, ax ;~ 17C5:1EF5
cs=0x17c5;eip=0x001ef8; 	X(word_51a2a = dx;);	// 86968                  mov     ds:word_51A2A, dx ;~ 17C5:1EF8
loc_2812c:
	// 5083 
cs=0x17c5;eip=0x001efc; 	T(ax = word_51a0a;);	// 86971                  mov     ax, ds:word_51A0A ;~ 17C5:1EFC
cs=0x17c5;eip=0x001eff; 	T(dx = word_51a0c;);	// 86972                  mov     dx, ds:word_51A0C ;~ 17C5:1EFF
cs=0x17c5;eip=0x001f03; 	T(ADD(ax, 0x10));	// 86973                  add     ax, 10h ;~ 17C5:1F03
cs=0x17c5;eip=0x001f06; 	T(ADC(dx, 0));	// 86974                  adc     dx, 0 ;~ 17C5:1F06
cs=0x17c5;eip=0x001f09; 	T(cl = 5;);	// 86975                  mov     cl, 5 ;~ 17C5:1F09
loc_2813b:
	// 5084 
cs=0x17c5;eip=0x001f0b; 	T(SAR(dx, 1));	// 86978                  sar     dx, 1 ;~ 17C5:1F0B
cs=0x17c5;eip=0x001f0d; 	T(RCR(ax, 1));	// 86979                  rcr     ax, 1 ;~ 17C5:1F0D
cs=0x17c5;eip=0x001f0f; 	T(DEC(cl));	// 86980                  dec     cl ;~ 17C5:1F0F
cs=0x17c5;eip=0x001f11; 	J(JZ(loc_28145));	// 86981                  jz      short loc_28145 ;~ 17C5:1F11
cs=0x17c5;eip=0x001f13; 	J(JMP(loc_2813b));	// 86982                  jmp     short loc_2813B ;~ 17C5:1F13
loc_28145:
	// 5085 
cs=0x17c5;eip=0x001f15; 	X(word_520f0 = ax;);	// 86986                  mov     ds:word_520F0, ax ;~ 17C5:1F15
cs=0x17c5;eip=0x001f18; 	T(ax = word_51a28;);	// 86987                  mov     ax, ds:word_51A28 ;~ 17C5:1F18
cs=0x17c5;eip=0x001f1b; 	T(dx = word_51a2a;);	// 86988                  mov     dx, ds:word_51A2A ;~ 17C5:1F1B
cs=0x17c5;eip=0x001f1f; 	T(ADD(ax, 0x10));	// 86989                  add     ax, 10h ;~ 17C5:1F1F
cs=0x17c5;eip=0x001f22; 	T(ADC(dx, 0));	// 86990                  adc     dx, 0 ;~ 17C5:1F22
cs=0x17c5;eip=0x001f25; 	T(cl = 5;);	// 86991                  mov     cl, 5 ;~ 17C5:1F25
loc_28157:
	// 5086 
cs=0x17c5;eip=0x001f27; 	T(SAR(dx, 1));	// 86994                  sar     dx, 1 ;~ 17C5:1F27
cs=0x17c5;eip=0x001f29; 	T(RCR(ax, 1));	// 86995                  rcr     ax, 1 ;~ 17C5:1F29
cs=0x17c5;eip=0x001f2b; 	T(DEC(cl));	// 86996                  dec     cl ;~ 17C5:1F2B
cs=0x17c5;eip=0x001f2d; 	J(JZ(loc_28161));	// 86997                  jz      short loc_28161 ;~ 17C5:1F2D
cs=0x17c5;eip=0x001f2f; 	J(JMP(loc_28157));	// 86998                  jmp     short loc_28157 ;~ 17C5:1F2F
loc_28161:
	// 5087 
cs=0x17c5;eip=0x001f31; 	T(SUB(ax, 0x8000));	// 87002                  sub     ax, 8000h ;~ 17C5:1F31
cs=0x17c5;eip=0x001f34; 	T(NEG(ax));	// 87003                  neg     ax ;~ 17C5:1F34
cs=0x17c5;eip=0x001f36; 	X(word_52100 = ax;);	// 87004                  mov     ds:word_52100, ax ;~ 17C5:1F36
cs=0x17c5;eip=0x001f39; 	X(POP(si));	// 87005                  pop     si ;~ 17C5:1F39
cs=0x17c5;eip=0x001f3a; 	T(sp = bp;);	// 87006                  mov     sp, bp ;~ 17C5:1F3A
cs=0x17c5;eip=0x001f3c; 	X(POP(bp));	// 87007                  pop     bp ;~ 17C5:1F3C
cs=0x17c5;eip=0x001f3d; 	J(RETN(0));	// 87008                  retn ;~ 17C5:1F3D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_28063: 	goto loc_28063;
        case m2c::kloc_28066: 	goto loc_28066;
        case m2c::kloc_2808f: 	goto loc_2808f;
        case m2c::kloc_28091: 	goto loc_28091;
        case m2c::kloc_280ac: 	goto loc_280ac;
        case m2c::kloc_280b6: 	goto loc_280b6;
        case m2c::kloc_280d7: 	goto loc_280d7;
        case m2c::kloc_280e1: 	goto loc_280e1;
        case m2c::kloc_280ea: 	goto loc_280ea;
        case m2c::kloc_280f1: 	goto loc_280f1;
        case m2c::kloc_280fb: 	goto loc_280fb;
        case m2c::kloc_2811b: 	goto loc_2811b;
        case m2c::kloc_28125: 	goto loc_28125;
        case m2c::kloc_2812c: 	goto loc_2812c;
        case m2c::kloc_2813b: 	goto loc_2813b;
        case m2c::kloc_28145: 	goto loc_28145;
        case m2c::kloc_28157: 	goto loc_28157;
        case m2c::kloc_28161: 	goto loc_28161;
        case m2c::kseg2623_1e8c_proc: 	goto seg2623_1e8c_proc;
        case m2c::ksub_2803e: 	goto sub_2803e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2816e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2816e:
    _begin:
#undef var_4
#define var_4 -4
	// 87017 var_4           = word ptr -4 ;~ 17C5:1F3E
#undef var_2
#define var_2 -2
	// 87018 var_2           = word ptr -2 ;~ 17C5:1F3E
cs=0x17c5;eip=0x001f3e; 	X(PUSH(bp));	// 87020                  push    bp ;~ 17C5:1F3E
cs=0x17c5;eip=0x001f3f; 	T(bp = sp;);	// 87021                  mov     bp, sp ;~ 17C5:1F3F
cs=0x17c5;eip=0x001f41; 	T(SUB(sp, 4));	// 87022                  sub     sp, 4 ;~ 17C5:1F41
cs=0x17c5;eip=0x001f44; 	X(PUSH(di));	// 87023                  push    di ;~ 17C5:1F44
cs=0x17c5;eip=0x001f45; 	X(PUSH(si));	// 87024                  push    si ;~ 17C5:1F45
cs=0x17c5;eip=0x001f46; 	T(ax = *(word_49de8););	// 87025                  mov     ax, word_49DE8 ;~ 17C5:1F46
cs=0x17c5;eip=0x001f49; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 87026                  mov     [bp+var_4], ax ;~ 17C5:1F49
cs=0x17c5;eip=0x001f4c; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 87027                  mov     [bp+var_2], 0 ;~ 17C5:1F4C
cs=0x17c5;eip=0x001f51; 	J(JMP(loc_28186));	// 87028                  jmp     short loc_28186 ;~ 17C5:1F51
loc_28183:
	// 5088 
cs=0x17c5;eip=0x001f53; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 87033                  inc     [bp+var_2] ;~ 17C5:1F53
loc_28186:
	// 5089 
cs=0x17c5;eip=0x001f56; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 2));	// 87036                  cmp     [bp+var_2], 2 ;~ 17C5:1F56
cs=0x17c5;eip=0x001f5a; 	J(JL(loc_2818f));	// 87037                  jl      short loc_2818F ;~ 17C5:1F5A
cs=0x17c5;eip=0x001f5c; 	J(JMP(loc_2826d));	// 87038                  jmp     loc_2826D ;~ 17C5:1F5C
loc_2818f:
	// 5090 
cs=0x17c5;eip=0x001f5f; 	T(ax = 0x12;);	// 87042                  mov     ax, 12h ;~ 17C5:1F5F
cs=0x17c5;eip=0x001f62; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 87043                  imul    [bp+var_2] ;~ 17C5:1F62
cs=0x17c5;eip=0x001f65; 	T(si = ax;);	// 87044                  mov     si, ax ;~ 17C5:1F65
cs=0x17c5;eip=0x001f67; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7766))));	// 87045                  mov     ax, [si-7766h] ;~ 17C5:1F67
cs=0x17c5;eip=0x001f6b; 	T(cl = 8;);	// 87046                  mov     cl, 8 ;~ 17C5:1F6B
cs=0x17c5;eip=0x001f6d; 	T(SAR(ax, cl));	// 87047                  sar     ax, cl ;~ 17C5:1F6D
cs=0x17c5;eip=0x001f6f; 	T(OR(ax, ax));	// 87048                  or      ax, ax ;~ 17C5:1F6F
cs=0x17c5;eip=0x001f71; 	J(JNZ(loc_281a6));	// 87049                  jnz     short loc_281A6 ;~ 17C5:1F71
cs=0x17c5;eip=0x001f73; 	J(JMP(loc_2826a));	// 87050                  jmp     loc_2826A ;~ 17C5:1F73
loc_281a6:
	// 5091 
cs=0x17c5;eip=0x001f76; 	T(MOV(di, *(dw*)(raddr(ds,si-0x776A))));	// 87055                  mov     di, [si-776Ah] ;~ 17C5:1F76
cs=0x17c5;eip=0x001f7a; 	T(cl = 4;);	// 87056                  mov     cl, 4 ;~ 17C5:1F7A
cs=0x17c5;eip=0x001f7c; 	T(SHL(di, cl));	// 87057                  shl     di, cl ;~ 17C5:1F7C
cs=0x17c5;eip=0x001f7e; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E50))));	// 87058                  mov     ax, [di-7E50h] ;~ 17C5:1F7E
cs=0x17c5;eip=0x001f82; 	T(SUB(dx, dx));	// 87059                  sub     dx, dx ;~ 17C5:1F82
cs=0x17c5;eip=0x001f84; 	T(SUB(ax, 0x8000));	// 87060                  sub     ax, 8000h ;~ 17C5:1F84
cs=0x17c5;eip=0x001f87; 	T(SBB(dx, dx));	// 87061                  sbb     dx, dx ;~ 17C5:1F87
cs=0x17c5;eip=0x001f89; 	T(NEG(ax));	// 87062                  neg     ax ;~ 17C5:1F89
cs=0x17c5;eip=0x001f8b; 	T(ADC(dx, 0));	// 87063                  adc     dx, 0 ;~ 17C5:1F8B
cs=0x17c5;eip=0x001f8e; 	T(NEG(dx));	// 87064                  neg     dx ;~ 17C5:1F8E
cs=0x17c5;eip=0x001f90; 	T(cl = 5;);	// 87065                  mov     cl, 5 ;~ 17C5:1F90
loc_281c2:
	// 5092 
cs=0x17c5;eip=0x001f92; 	T(SHL(ax, 1));	// 87068                  shl     ax, 1 ;~ 17C5:1F92
cs=0x17c5;eip=0x001f94; 	T(RCL(dx, 1));	// 87069                  rcl     dx, 1 ;~ 17C5:1F94
cs=0x17c5;eip=0x001f96; 	T(DEC(cl));	// 87070                  dec     cl ;~ 17C5:1F96
cs=0x17c5;eip=0x001f98; 	J(JZ(loc_281cc));	// 87071                  jz      short loc_281CC ;~ 17C5:1F98
cs=0x17c5;eip=0x001f9a; 	J(JMP(loc_281c2));	// 87072                  jmp     short loc_281C2 ;~ 17C5:1F9A
loc_281cc:
	// 5093 
cs=0x17c5;eip=0x001f9c; 	X(PUSH(dx));	// 87076                  push    dx ;~ 17C5:1F9C
cs=0x17c5;eip=0x001f9d; 	X(PUSH(ax));	// 87077                  push    ax ;~ 17C5:1F9D
cs=0x17c5;eip=0x001f9e; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E52))));	// 87078                  mov     ax, [di-7E52h] ;~ 17C5:1F9E
cs=0x17c5;eip=0x001fa2; 	T(SUB(dx, dx));	// 87079                  sub     dx, dx ;~ 17C5:1FA2
cs=0x17c5;eip=0x001fa4; 	T(cl = 5;);	// 87080                  mov     cl, 5 ;~ 17C5:1FA4
loc_281d6:
	// 5094 
cs=0x17c5;eip=0x001fa6; 	T(SHL(ax, 1));	// 87083                  shl     ax, 1 ;~ 17C5:1FA6
cs=0x17c5;eip=0x001fa8; 	T(RCL(dx, 1));	// 87084                  rcl     dx, 1 ;~ 17C5:1FA8
cs=0x17c5;eip=0x001faa; 	T(DEC(cl));	// 87085                  dec     cl ;~ 17C5:1FAA
cs=0x17c5;eip=0x001fac; 	J(JZ(loc_281e0));	// 87086                  jz      short loc_281E0 ;~ 17C5:1FAC
cs=0x17c5;eip=0x001fae; 	J(JMP(loc_281d6));	// 87087                  jmp     short loc_281D6 ;~ 17C5:1FAE
loc_281e0:
	// 5095 
cs=0x17c5;eip=0x001fb0; 	X(PUSH(dx));	// 87091                  push    dx ;~ 17C5:1FB0
cs=0x17c5;eip=0x001fb1; 	X(PUSH(ax));	// 87092                  push    ax ;~ 17C5:1FB1
cs=0x17c5;eip=0x001fb2; 	J(CALL(sub_2920a,0));	// 87093                  call    sub_2920A ;~ 17C5:1FB2
cs=0x17c5;eip=0x001fb5; 	T(ADD(sp, 8));	// 87095                  add     sp, 8 ;~ 17C5:1FB5
cs=0x17c5;eip=0x001fb8; 	X(word_4fa38 = ax;);	// 87096                  mov     ds:word_4FA38, ax ;~ 17C5:1FB8
cs=0x17c5;eip=0x001fbb; 	T(OR(ax, ax));	// 87097                  or      ax, ax ;~ 17C5:1FBB
cs=0x17c5;eip=0x001fbd; 	J(JZ(loc_2824d));	// 87098                  jz      short loc_2824D ;~ 17C5:1FBD
cs=0x17c5;eip=0x001fbf; 	T(bx = ax;);	// 87099                  mov     bx, ax ;~ 17C5:1FBF
cs=0x17c5;eip=0x001fc1; 	T(MOV(bx, *(dw*)(raddr(ds,bx))));	// 87100                  mov     bx, [bx] ;~ 17C5:1FC1
cs=0x17c5;eip=0x001fc3; 	T(MOV(al, *(raddr(ds,bx-0x690C))));	// 87101                  mov     al, [bx-690Ch] ;~ 17C5:1FC3
cs=0x17c5;eip=0x001fc7; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 87102                  mov     bx, [bp+var_4] ;~ 17C5:1FC7
cs=0x17c5;eip=0x001fca; 	X(MOV(*(raddr(ds,bx-0x690C)), al));	// 87103                  mov     [bx-690Ch], al ;~ 17C5:1FCA
cs=0x17c5;eip=0x001fce; 	T(bx = word_4fa38;);	// 87104                  mov     bx, ds:word_4FA38 ;~ 17C5:1FCE
cs=0x17c5;eip=0x001fd2; 	T(MOV(bx, *(dw*)(raddr(ds,bx))));	// 87105                  mov     bx, [bx] ;~ 17C5:1FD2
cs=0x17c5;eip=0x001fd4; 	T(SHL(bx, 1));	// 87106                  shl     bx, 1 ;~ 17C5:1FD4
cs=0x17c5;eip=0x001fd6; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 87107                  push    word ptr [bx-680Eh] ;~ 17C5:1FD6
cs=0x17c5;eip=0x001fda; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 87108                  mov     bx, [bp+var_4] ;~ 17C5:1FDA
cs=0x17c5;eip=0x001fdd; 	T(SHL(bx, 1));	// 87109                  shl     bx, 1 ;~ 17C5:1FDD
cs=0x17c5;eip=0x001fdf; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 87110                  push    word ptr [bx-680Eh] ;~ 17C5:1FDF
cs=0x17c5;eip=0x001fe3; 	J(CALL(sub_34c1c,0));	// 87111                  call    sub_34C1C ;~ 17C5:1FE3
cs=0x17c5;eip=0x001fe6; 	T(ADD(sp, 4));	// 87113                  add     sp, 4 ;~ 17C5:1FE6
cs=0x17c5;eip=0x001fe9; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_4))));	// 87114                  mov     si, [bp+var_4] ;~ 17C5:1FE9
cs=0x17c5;eip=0x001fec; 	T(SHL(si, 1));	// 87115                  shl     si, 1 ;~ 17C5:1FEC
cs=0x17c5;eip=0x001fee; 	X(PUSH(*(dw*)(raddr(ds,si-0x680E))));	// 87116                  push    word ptr [si-680Eh] ;~ 17C5:1FEE
cs=0x17c5;eip=0x001ff2; 	J(CALL(sub_34c4e,0));	// 87117                  call    sub_34C4E ;~ 17C5:1FF2
cs=0x17c5;eip=0x001ff5; 	T(ADD(sp, 2));	// 87118                  add     sp, 2 ;~ 17C5:1FF5
cs=0x17c5;eip=0x001ff8; 	T(MOV(cx, *(dw*)(raddr(ds,si-0x680E))));	// 87119                  mov     cx, [si-680Eh] ;~ 17C5:1FF8
cs=0x17c5;eip=0x001ffc; 	T(ADD(cx, ax));	// 87120                  add     cx, ax ;~ 17C5:1FFC
cs=0x17c5;eip=0x001ffe; 	T(INC(cx));	// 87121                  inc     cx ;~ 17C5:1FFE
cs=0x17c5;eip=0x001fff; 	X(MOV(*(dw*)(raddr(ds,si-0x680C)), cx));	// 87122                  mov     [si-680Ch], cx ;~ 17C5:1FFF
cs=0x17c5;eip=0x002003; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_4))));	// 87123                  mov     si, [bp+var_4] ;~ 17C5:2003
cs=0x17c5;eip=0x002006; 	T(ADD(si, 0x100));	// 87124                  add     si, 100h ;~ 17C5:2006
cs=0x17c5;eip=0x00200a; 	X(PUSH(si));	// 87125                  push    si ;~ 17C5:200A
cs=0x17c5;eip=0x00200b; 	X(PUSH(si));	// 87126                  push    si ;~ 17C5:200B
cs=0x17c5;eip=0x00200c; 	J(CALL(sub_33162,0));	// 87127                  call    sub_33162 ;~ 17C5:200C
cs=0x17c5;eip=0x00200f; 	T(ADD(sp, 2));	// 87128                  add     sp, 2 ;~ 17C5:200F
cs=0x17c5;eip=0x002012; 	X(PUSH(ax));	// 87129                  push    ax ;~ 17C5:2012
cs=0x17c5;eip=0x002013; 	X(PUSH(word_4fa38));	// 87130                  push    ds:word_4FA38 ;~ 17C5:2013
cs=0x17c5;eip=0x002017; 	J(CALL(sub_29454,0));	// 87131                  call    sub_29454 ;~ 17C5:2017
cs=0x17c5;eip=0x00201a; 	T(ADD(sp, 6));	// 87132                  add     sp, 6 ;~ 17C5:201A
loc_2824d:
	// 5096 
cs=0x17c5;eip=0x00201d; 	T(ax = 0x12;);	// 87135                  mov     ax, 12h ;~ 17C5:201D
cs=0x17c5;eip=0x002020; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 87136                  imul    [bp+var_2] ;~ 17C5:2020
cs=0x17c5;eip=0x002023; 	T(bx = ax;);	// 87137                  mov     bx, ax ;~ 17C5:2023
cs=0x17c5;eip=0x002025; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x776A))));	// 87138                  mov     bx, [bx-776Ah] ;~ 17C5:2025
cs=0x17c5;eip=0x002029; 	T(cl = 4;);	// 87139                  mov     cl, 4 ;~ 17C5:2029
cs=0x17c5;eip=0x00202b; 	T(SHL(bx, cl));	// 87140                  shl     bx, cl ;~ 17C5:202B
cs=0x17c5;eip=0x00202d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 87141                  mov     ax, [bp+var_4] ;~ 17C5:202D
cs=0x17c5;eip=0x002030; 	T(ADD(ah, 1));	// 87142                  add     ah, 1 ;~ 17C5:2030
cs=0x17c5;eip=0x002033; 	X(MOV(*(dw*)(raddr(ds,bx-0x7E46)), ax));	// 87143                  mov     [bx-7E46h], ax ;~ 17C5:2033
cs=0x17c5;eip=0x002037; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 87144                  inc     [bp+var_4] ;~ 17C5:2037
loc_2826a:
	// 5097 
cs=0x17c5;eip=0x00203a; 	J(JMP(loc_28183));	// 87147                  jmp     loc_28183 ;~ 17C5:203A
loc_2826d:
	// 5098 
cs=0x17c5;eip=0x00203d; 	X(word_49934 = 0;);	// 87151                  mov     word_49934, 0 ;~ 17C5:203D
cs=0x17c5;eip=0x002043; 	X(POP(si));	// 87152                  pop     si ;~ 17C5:2043
cs=0x17c5;eip=0x002044; 	X(POP(di));	// 87153                  pop     di ;~ 17C5:2044
cs=0x17c5;eip=0x002045; 	T(sp = bp;);	// 87154                  mov     sp, bp ;~ 17C5:2045
cs=0x17c5;eip=0x002047; 	X(POP(bp));	// 87155                  pop     bp ;~ 17C5:2047
cs=0x17c5;eip=0x002048; 	J(RETN(0));	// 87156                  retn ;~ 17C5:2048

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_28183: 	goto loc_28183;
        case m2c::kloc_28186: 	goto loc_28186;
        case m2c::kloc_2818f: 	goto loc_2818f;
        case m2c::kloc_281a6: 	goto loc_281a6;
        case m2c::kloc_281c2: 	goto loc_281c2;
        case m2c::kloc_281cc: 	goto loc_281cc;
        case m2c::kloc_281d6: 	goto loc_281d6;
        case m2c::kloc_281e0: 	goto loc_281e0;
        case m2c::kloc_2824d: 	goto loc_2824d;
        case m2c::kloc_2826a: 	goto loc_2826a;
        case m2c::kloc_2826d: 	goto loc_2826d;
        case m2c::ksub_2816e: 	goto sub_2816e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_28279(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_28279:
    _begin:
cs=0x17c5;eip=0x002049; 	X(PUSH(bp));	// 87166                  push    bp ;~ 17C5:2049
cs=0x17c5;eip=0x00204a; 	T(bp = sp;);	// 87167                  mov     bp, sp ;~ 17C5:204A
cs=0x17c5;eip=0x00204c; 	T(SUB(sp, 4));	// 87168                  sub     sp, 4 ;~ 17C5:204C
cs=0x17c5;eip=0x00204f; 	J(CALL(sub_283d9,0));	// 87169                  call    sub_283D9 ;~ 17C5:204F
cs=0x17c5;eip=0x002052; 	X(word_52240 = 0;);	// 87170                  mov     ds:word_52240, 0 ;~ 17C5:2052
cs=0x17c5;eip=0x002058; 	J(CALL(sub_2829d,0));	// 87171                  call    sub_2829D ;~ 17C5:2058
cs=0x17c5;eip=0x00205b; 	T(ax = 0x600;);	// 87172                  mov     ax, 600h ;~ 17C5:205B
cs=0x17c5;eip=0x00205e; 	X(PUSH(ax));	// 87173                  push    ax ;~ 17C5:205E
cs=0x17c5;eip=0x00205f; 	T(ax = 0x8F4C;);	// 87174                  mov     ax, 8F4Ch ;~ 17C5:205F
cs=0x17c5;eip=0x002062; 	X(PUSH(ax));	// 87175                  push    ax ;~ 17C5:2062
cs=0x17c5;eip=0x002063; 	J(CALL(sub_2838c,0));	// 87176                  call    sub_2838C ;~ 17C5:2063
cs=0x17c5;eip=0x002066; 	T(ADD(sp, 4));	// 87177                  add     sp, 4 ;~ 17C5:2066
cs=0x17c5;eip=0x002069; 	T(sp = bp;);	// 87178                  mov     sp, bp ;~ 17C5:2069
cs=0x17c5;eip=0x00206b; 	X(POP(bp));	// 87179                  pop     bp ;~ 17C5:206B
cs=0x17c5;eip=0x00206c; 	J(RETN(0));	// 87180                  retn ;~ 17C5:206C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_28279: 	goto sub_28279;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2829d(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2829d:
    _begin:
cs=0x17c5;eip=0x00206d; 	X(PUSH(bp));	// 87190                  push    bp ;~ 17C5:206D
cs=0x17c5;eip=0x00206e; 	T(bp = sp;);	// 87191                  mov     bp, sp ;~ 17C5:206E
cs=0x17c5;eip=0x002070; 	T(ax = 1;);	// 87192                  mov     ax, 1 ;~ 17C5:2070
cs=0x17c5;eip=0x002073; 	X(PUSH(ax));	// 87193                  push    ax ;~ 17C5:2073
cs=0x17c5;eip=0x002074; 	T(ax = 0x977A;);	// 87194                  mov     ax, 977Ah ;~ 17C5:2074
cs=0x17c5;eip=0x002077; 	X(PUSH(ax));	// 87195                  push    ax ;~ 17C5:2077
cs=0x17c5;eip=0x002078; 	J(CALL(sub_2838c,0));	// 87196                  call    sub_2838C ;~ 17C5:2078
cs=0x17c5;eip=0x00207b; 	T(ADD(sp, 4));	// 87198                  add     sp, 4 ;~ 17C5:207B
cs=0x17c5;eip=0x00207e; 	T(ax = 1;);	// 87199                  mov     ax, 1 ;~ 17C5:207E
cs=0x17c5;eip=0x002081; 	X(PUSH(ax));	// 87200                  push    ax ;~ 17C5:2081
cs=0x17c5;eip=0x002082; 	T(ax = 0x9614;);	// 87201                  mov     ax, 9614h ;~ 17C5:2082
cs=0x17c5;eip=0x002085; 	X(PUSH(ax));	// 87202                  push    ax ;~ 17C5:2085
cs=0x17c5;eip=0x002086; 	J(CALL(sub_2838c,0));	// 87203                  call    sub_2838C ;~ 17C5:2086
cs=0x17c5;eip=0x002089; 	T(ADD(sp, 4));	// 87204                  add     sp, 4 ;~ 17C5:2089
cs=0x17c5;eip=0x00208c; 	T(ax = 2;);	// 87205                  mov     ax, 2 ;~ 17C5:208C
cs=0x17c5;eip=0x00208f; 	X(PUSH(ax));	// 87206                  push    ax ;~ 17C5:208F
cs=0x17c5;eip=0x002090; 	T(ax = 0x9622;);	// 87207                  mov     ax, 9622h ;~ 17C5:2090
cs=0x17c5;eip=0x002093; 	X(PUSH(ax));	// 87208                  push    ax ;~ 17C5:2093
cs=0x17c5;eip=0x002094; 	J(CALL(sub_2838c,0));	// 87209                  call    sub_2838C ;~ 17C5:2094
cs=0x17c5;eip=0x002097; 	T(ADD(sp, 4));	// 87210                  add     sp, 4 ;~ 17C5:2097
cs=0x17c5;eip=0x00209a; 	T(ax = 2;);	// 87211                  mov     ax, 2 ;~ 17C5:209A
cs=0x17c5;eip=0x00209d; 	X(PUSH(ax));	// 87212                  push    ax ;~ 17C5:209D
cs=0x17c5;eip=0x00209e; 	T(ax = 0x674A;);	// 87213                  mov     ax, 674Ah ;~ 17C5:209E
cs=0x17c5;eip=0x0020a1; 	X(PUSH(ax));	// 87214                  push    ax ;~ 17C5:20A1
cs=0x17c5;eip=0x0020a2; 	J(CALL(sub_2838c,0));	// 87215                  call    sub_2838C ;~ 17C5:20A2
cs=0x17c5;eip=0x0020a5; 	T(ADD(sp, 4));	// 87216                  add     sp, 4 ;~ 17C5:20A5
cs=0x17c5;eip=0x0020a8; 	T(ax = 2;);	// 87217                  mov     ax, 2 ;~ 17C5:20A8
cs=0x17c5;eip=0x0020ab; 	X(PUSH(ax));	// 87218                  push    ax ;~ 17C5:20AB
cs=0x17c5;eip=0x0020ac; 	T(ax = 0x9DEE;);	// 87219                  mov     ax, 9DEEh ;~ 17C5:20AC
cs=0x17c5;eip=0x0020af; 	X(PUSH(ax));	// 87220                  push    ax ;~ 17C5:20AF
cs=0x17c5;eip=0x0020b0; 	J(CALL(sub_2838c,0));	// 87221                  call    sub_2838C ;~ 17C5:20B0
cs=0x17c5;eip=0x0020b3; 	T(ADD(sp, 4));	// 87222                  add     sp, 4 ;~ 17C5:20B3
cs=0x17c5;eip=0x0020b6; 	T(ax = word_52102;);	// 87223                  mov     ax, ds:word_52102 ;~ 17C5:20B6
cs=0x17c5;eip=0x0020b9; 	T(cl = 4;);	// 87224                  mov     cl, 4 ;~ 17C5:20B9
cs=0x17c5;eip=0x0020bb; 	T(SHL(ax, cl));	// 87225                  shl     ax, cl ;~ 17C5:20BB
cs=0x17c5;eip=0x0020bd; 	X(PUSH(ax));	// 87226                  push    ax ;~ 17C5:20BD
cs=0x17c5;eip=0x0020be; 	T(ax = 0x81AC;);	// 87227                  mov     ax, 81ACh ;~ 17C5:20BE
cs=0x17c5;eip=0x0020c1; 	X(PUSH(ax));	// 87228                  push    ax ;~ 17C5:20C1
cs=0x17c5;eip=0x0020c2; 	J(CALL(sub_2838c,0));	// 87229                  call    sub_2838C ;~ 17C5:20C2
cs=0x17c5;eip=0x0020c5; 	T(ADD(sp, 4));	// 87230                  add     sp, 4 ;~ 17C5:20C5
cs=0x17c5;eip=0x0020c8; 	T(ax = 2;);	// 87231                  mov     ax, 2 ;~ 17C5:20C8
cs=0x17c5;eip=0x0020cb; 	X(PUSH(ax));	// 87232                  push    ax ;~ 17C5:20CB
cs=0x17c5;eip=0x0020cc; 	T(ax = 0x9796;);	// 87233                  mov     ax, 9796h ;~ 17C5:20CC
cs=0x17c5;eip=0x0020cf; 	X(PUSH(ax));	// 87234                  push    ax ;~ 17C5:20CF
cs=0x17c5;eip=0x0020d0; 	J(CALL(sub_2838c,0));	// 87235                  call    sub_2838C ;~ 17C5:20D0
cs=0x17c5;eip=0x0020d3; 	T(ADD(sp, 4));	// 87236                  add     sp, 4 ;~ 17C5:20D3
cs=0x17c5;eip=0x0020d6; 	T(ax = 0x24;);	// 87237                  mov     ax, 24h ; '$' ;~ 17C5:20D6
cs=0x17c5;eip=0x0020d9; 	X(IMUL1_2(word_52276));	// 87238                  imul    ds:word_52276 ;~ 17C5:20D9
cs=0x17c5;eip=0x0020dd; 	X(PUSH(ax));	// 87239                  push    ax ;~ 17C5:20DD
cs=0x17c5;eip=0x0020de; 	T(ax = 0x8952;);	// 87240                  mov     ax, 8952h ;~ 17C5:20DE
cs=0x17c5;eip=0x0020e1; 	X(PUSH(ax));	// 87241                  push    ax ;~ 17C5:20E1
cs=0x17c5;eip=0x0020e2; 	J(CALL(sub_2838c,0));	// 87242                  call    sub_2838C ;~ 17C5:20E2
cs=0x17c5;eip=0x0020e5; 	T(ADD(sp, 4));	// 87243                  add     sp, 4 ;~ 17C5:20E5
cs=0x17c5;eip=0x0020e8; 	T(ax = 0x64;);	// 87244                  mov     ax, 64h ; 'd' ;~ 17C5:20E8
cs=0x17c5;eip=0x0020eb; 	X(PUSH(ax));	// 87245                  push    ax ;~ 17C5:20EB
cs=0x17c5;eip=0x0020ec; 	T(ax = 0x96F4;);	// 87246                  mov     ax, 96F4h ;~ 17C5:20EC
cs=0x17c5;eip=0x0020ef; 	X(PUSH(ax));	// 87247                  push    ax ;~ 17C5:20EF
cs=0x17c5;eip=0x0020f0; 	J(CALL(sub_2838c,0));	// 87248                  call    sub_2838C ;~ 17C5:20F0
cs=0x17c5;eip=0x0020f3; 	T(ADD(sp, 4));	// 87249                  add     sp, 4 ;~ 17C5:20F3
cs=0x17c5;eip=0x0020f6; 	T(ax = 0x64;);	// 87250                  mov     ax, 64h ; 'd' ;~ 17C5:20F6
cs=0x17c5;eip=0x0020f9; 	X(PUSH(ax));	// 87251                  push    ax ;~ 17C5:20F9
cs=0x17c5;eip=0x0020fa; 	T(ax = 0x9628;);	// 87252                  mov     ax, 9628h ;~ 17C5:20FA
cs=0x17c5;eip=0x0020fd; 	X(PUSH(ax));	// 87253                  push    ax ;~ 17C5:20FD
cs=0x17c5;eip=0x0020fe; 	J(CALL(sub_2838c,0));	// 87254                  call    sub_2838C ;~ 17C5:20FE
cs=0x17c5;eip=0x002101; 	T(ADD(sp, 4));	// 87255                  add     sp, 4 ;~ 17C5:2101
cs=0x17c5;eip=0x002104; 	T(ax = 0x2EE;);	// 87256                  mov     ax, 2EEh ;~ 17C5:2104
cs=0x17c5;eip=0x002107; 	X(PUSH(ax));	// 87257                  push    ax ;~ 17C5:2107
cs=0x17c5;eip=0x002108; 	T(ax = 0x98BE;);	// 87258                  mov     ax, 98BEh ;~ 17C5:2108
cs=0x17c5;eip=0x00210b; 	X(PUSH(ax));	// 87259                  push    ax ;~ 17C5:210B
cs=0x17c5;eip=0x00210c; 	J(CALL(sub_2838c,0));	// 87260                  call    sub_2838C ;~ 17C5:210C
cs=0x17c5;eip=0x00210f; 	T(ADD(sp, 4));	// 87261                  add     sp, 4 ;~ 17C5:210F
cs=0x17c5;eip=0x002112; 	T(ax = 0x100;);	// 87262                  mov     ax, 100h ;~ 17C5:2112
cs=0x17c5;eip=0x002115; 	X(PUSH(ax));	// 87263                  push    ax ;~ 17C5:2115
cs=0x17c5;eip=0x002116; 	T(ax = 0x86FC;);	// 87264                  mov     ax, 86FCh ;~ 17C5:2116
cs=0x17c5;eip=0x002119; 	X(PUSH(ax));	// 87265                  push    ax ;~ 17C5:2119
cs=0x17c5;eip=0x00211a; 	J(CALL(sub_2838c,0));	// 87266                  call    sub_2838C ;~ 17C5:211A
cs=0x17c5;eip=0x00211d; 	T(ADD(sp, 4));	// 87267                  add     sp, 4 ;~ 17C5:211D
cs=0x17c5;eip=0x002120; 	T(ax = 2;);	// 87268                  mov     ax, 2 ;~ 17C5:2120
cs=0x17c5;eip=0x002123; 	X(PUSH(ax));	// 87269                  push    ax ;~ 17C5:2123
cs=0x17c5;eip=0x002124; 	T(ax = 0x975C;);	// 87270                  mov     ax, 975Ch ;~ 17C5:2124
cs=0x17c5;eip=0x002127; 	X(PUSH(ax));	// 87271                  push    ax ;~ 17C5:2127
cs=0x17c5;eip=0x002128; 	J(CALL(sub_2838c,0));	// 87272                  call    sub_2838C ;~ 17C5:2128
cs=0x17c5;eip=0x00212b; 	T(ADD(sp, 4));	// 87273                  add     sp, 4 ;~ 17C5:212B
cs=0x17c5;eip=0x00212e; 	T(ax = 2;);	// 87274                  mov     ax, 2 ;~ 17C5:212E
cs=0x17c5;eip=0x002131; 	X(PUSH(ax));	// 87275                  push    ax ;~ 17C5:2131
cs=0x17c5;eip=0x002132; 	T(ax = 0x0E4C;);	// 87276                  mov     ax, 0E4Ch ;~ 17C5:2132
cs=0x17c5;eip=0x002135; 	X(PUSH(ax));	// 87277                  push    ax ;~ 17C5:2135
cs=0x17c5;eip=0x002136; 	J(CALL(sub_2838c,0));	// 87278                  call    sub_2838C ;~ 17C5:2136
cs=0x17c5;eip=0x002139; 	T(ADD(sp, 4));	// 87279                  add     sp, 4 ;~ 17C5:2139
cs=0x17c5;eip=0x00213c; 	T(ax = 0x10;);	// 87280                  mov     ax, 10h ;~ 17C5:213C
cs=0x17c5;eip=0x00213f; 	X(PUSH(ax));	// 87281                  push    ax ;~ 17C5:213F
cs=0x17c5;eip=0x002140; 	T(ax = 0x172;);	// 87282                  mov     ax, 172h ;~ 17C5:2140
cs=0x17c5;eip=0x002143; 	X(PUSH(ax));	// 87283                  push    ax ;~ 17C5:2143
cs=0x17c5;eip=0x002144; 	J(CALL(sub_2838c,0));	// 87284                  call    sub_2838C ;~ 17C5:2144
cs=0x17c5;eip=0x002147; 	T(ADD(sp, 4));	// 87285                  add     sp, 4 ;~ 17C5:2147
cs=0x17c5;eip=0x00214a; 	T(ax = 0x24;);	// 87286                  mov     ax, 24h ; '$' ;~ 17C5:214A
cs=0x17c5;eip=0x00214d; 	X(PUSH(ax));	// 87287                  push    ax ;~ 17C5:214D
cs=0x17c5;eip=0x00214e; 	T(ax = 0x8894;);	// 87288                  mov     ax, 8894h ;~ 17C5:214E
cs=0x17c5;eip=0x002151; 	X(PUSH(ax));	// 87289                  push    ax ;~ 17C5:2151
cs=0x17c5;eip=0x002152; 	J(CALL(sub_2838c,0));	// 87290                  call    sub_2838C ;~ 17C5:2152
cs=0x17c5;eip=0x002155; 	T(ADD(sp, 4));	// 87291                  add     sp, 4 ;~ 17C5:2155
cs=0x17c5;eip=0x002158; 	T(sp = bp;);	// 87292                  mov     sp, bp ;~ 17C5:2158
cs=0x17c5;eip=0x00215a; 	X(POP(bp));	// 87293                  pop     bp ;~ 17C5:215A
cs=0x17c5;eip=0x00215b; 	J(RETN(0));	// 87294                  retn ;~ 17C5:215B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_2829d: 	goto sub_2829d;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2838c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2838c:
    _begin:
#undef var_4
#define var_4 -4
	// 87305 var_4           = word ptr -4 ;~ 17C5:215C
#undef var_2
#define var_2 -2
	// 87306 var_2           = word ptr -2 ;~ 17C5:215C
#undef arg_0
#define arg_0 4
	// 87307 arg_0           = word ptr  4 ;~ 17C5:215C
#undef arg_2
#define arg_2 6
	// 87308 arg_2           = word ptr  6 ;~ 17C5:215C
cs=0x17c5;eip=0x00215c; 	X(PUSH(bp));	// 87310                  push    bp ;~ 17C5:215C
cs=0x17c5;eip=0x00215d; 	T(bp = sp;);	// 87311                  mov     bp, sp ;~ 17C5:215D
cs=0x17c5;eip=0x00215f; 	T(SUB(sp, 4));	// 87312                  sub     sp, 4 ;~ 17C5:215F
cs=0x17c5;eip=0x002162; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 87313                  mov     ax, [bp+arg_0] ;~ 17C5:2162
cs=0x17c5;eip=0x002165; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 87314                  mov     [bp+var_4], ax ;~ 17C5:2165
cs=0x17c5;eip=0x002168; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ds));	// 87315                  mov     [bp+var_2], ds ;~ 17C5:2168
cs=0x17c5;eip=0x00216b; 	T(CMP(word_52240, 0));	// 87316                  cmp     ds:word_52240, 0 ;~ 17C5:216B
cs=0x17c5;eip=0x002170; 	J(JZ(loc_283b7));	// 87317                  jz      short loc_283B7 ;~ 17C5:2170
cs=0x17c5;eip=0x002172; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 87318                  push    [bp+arg_2] ;~ 17C5:2172
cs=0x17c5;eip=0x002175; 	X(PUSH(ax));	// 87319                  push    ax ;~ 17C5:2175
cs=0x17c5;eip=0x002176; 	X(PUSH(ds));	// 87320                  push    ds ;~ 17C5:2176
cs=0x17c5;eip=0x002177; 	X(PUSH(word_4ef04));	// 87321                  push    ds:word_4EF04 ;~ 17C5:2177
cs=0x17c5;eip=0x00217b; 	X(PUSH(word_4ef06));	// 87322                  push    ds:word_4EF06 ;~ 17C5:217B
cs=0x17c5;eip=0x00217f; 	J(CALL(sub_34d30,0));	// 87323                  call    sub_34D30 ;~ 17C5:217F
cs=0x17c5;eip=0x002182; 	T(ADD(sp, 0x0A));	// 87324                  add     sp, 0Ah ;~ 17C5:2182
cs=0x17c5;eip=0x002185; 	J(JMP(loc_283ce));	// 87325                  jmp     short loc_283CE ;~ 17C5:2185
loc_283b7:
	// 5099 
cs=0x17c5;eip=0x002187; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 87330                  push    [bp+arg_2] ;~ 17C5:2187
cs=0x17c5;eip=0x00218a; 	X(PUSH(word_4ef04));	// 87331                  push    ds:word_4EF04 ;~ 17C5:218A
cs=0x17c5;eip=0x00218e; 	X(PUSH(word_4ef06));	// 87332                  push    ds:word_4EF06 ;~ 17C5:218E
cs=0x17c5;eip=0x002192; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 87333                  push    [bp+var_4] ;~ 17C5:2192
cs=0x17c5;eip=0x002195; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 87334                  push    [bp+var_2] ;~ 17C5:2195
cs=0x17c5;eip=0x002198; 	J(CALL(sub_34d30,0));	// 87335                  call    sub_34D30 ;~ 17C5:2198
cs=0x17c5;eip=0x00219b; 	T(ADD(sp, 0x0A));	// 87336                  add     sp, 0Ah ;~ 17C5:219B
loc_283ce:
	// 5100 
cs=0x17c5;eip=0x00219e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 87340                  mov     ax, [bp+arg_2] ;~ 17C5:219E
cs=0x17c5;eip=0x0021a1; 	X(ADD(word_4ef04, ax));	// 87341                  add     ds:word_4EF04, ax ;~ 17C5:21A1
cs=0x17c5;eip=0x0021a5; 	T(sp = bp;);	// 87342                  mov     sp, bp ;~ 17C5:21A5
cs=0x17c5;eip=0x0021a7; 	X(POP(bp));	// 87343                  pop     bp ;~ 17C5:21A7
cs=0x17c5;eip=0x0021a8; 	J(RETN(0));	// 87344                  retn ;~ 17C5:21A8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_283b7: 	goto loc_283b7;
        case m2c::kloc_283ce: 	goto loc_283ce;
        case m2c::ksub_2838c: 	goto sub_2838c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_283d9(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_283d9:
    _begin:
cs=0x17c5;eip=0x0021a9; 	X(PUSH(bp));	// 87355                  push    bp ;~ 17C5:21A9
cs=0x17c5;eip=0x0021aa; 	T(bp = sp;);	// 87356                  mov     bp, sp ;~ 17C5:21AA
cs=0x17c5;eip=0x0021ac; 	T(ax = *(dw*)(&dword_528d6););	// 87357                  mov     ax, word ptr ds:dword_528D6 ;~ 17C5:21AC
cs=0x17c5;eip=0x0021af; 	T(dx = *(dw*)(((db*)&dword_528d6)+2););	// 87358                  mov     dx, word ptr ds:dword_528D6+2 ;~ 17C5:21AF
cs=0x17c5;eip=0x0021b3; 	T(ADD(ax, 0x7A));	// 87359                  add     ax, 7Ah ; 'z' ;~ 17C5:21B3
cs=0x17c5;eip=0x0021b6; 	X(word_4ef04 = ax;);	// 87360                  mov     ds:word_4EF04, ax ;~ 17C5:21B6
cs=0x17c5;eip=0x0021b9; 	X(word_4ef06 = dx;);	// 87361                  mov     ds:word_4EF06, dx ;~ 17C5:21B9
cs=0x17c5;eip=0x0021bd; 	T(SUB(ax, ax));	// 87362                  sub     ax, ax ;~ 17C5:21BD
cs=0x17c5;eip=0x0021bf; 	J({;});	// 87363                  jmp     short $+2 ;~ 17C5:21BF
loc_283f1:
	// 5101 
cs=0x17c5;eip=0x0021c1; 	T(sp = bp;);	// 87367                  mov     sp, bp ;~ 17C5:21C1
cs=0x17c5;eip=0x0021c3; 	X(POP(bp));	// 87368                  pop     bp ;~ 17C5:21C3
cs=0x17c5;eip=0x0021c4; 	J(RETN(0));	// 87369                  retn ;~ 17C5:21C4

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_283f1: 	goto loc_283f1;
        case m2c::ksub_283d9: 	goto sub_283d9;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group21(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group21:
    _begin:
sub_283f6:
	// 87380 
cs=0x17c5;eip=0x0021c6; 	J(CALL(sub_28aa4,0));	// 87381                  call    sub_28AA4 ;~ 17C5:21C6
seg2623_21c9_proc:
	// 87386 
cs=0x17c5;eip=0x0021c9; 	J(RETN(0));	// 87386                  retn ;~ 17C5:21C9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_21c9_proc: 	goto seg2623_21c9_proc;
        case m2c::ksub_283f6: 	goto sub_283f6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group22(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group22:
    _begin:
sub_283fa:
	// 87393 
#undef arg_12
#define arg_12 0x16
	// 87395 arg_12          = word ptr  16h ;~ 17C5:21CA
#undef arg_14
#define arg_14 0x18
	// 87396 arg_14          = word ptr  18h ;~ 17C5:21CA
#undef arg_16
#define arg_16 0x1A
	// 87397 arg_16          = word ptr  1Ah ;~ 17C5:21CA
#undef arg_18
#define arg_18 0x1C
	// 87398 arg_18          = word ptr  1Ch ;~ 17C5:21CA
cs=0x17c5;eip=0x0021ca; 	X(PUSH(bp));	// 87400                  push    bp ;~ 17C5:21CA
cs=0x17c5;eip=0x0021cb; 	T(bp = sp;);	// 87401                  mov     bp, sp ;~ 17C5:21CB
cs=0x17c5;eip=0x0021cd; 	X(PUSH(si));	// 87402                  push    si ;~ 17C5:21CD
cs=0x17c5;eip=0x0021ce; 	T(bx = word_49be0;);	// 87403                  mov     bx, word_49BE0 ;~ 17C5:21CE
cs=0x17c5;eip=0x0021d2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_14))));	// 87404                  mov     ax, [bp+arg_14] ;~ 17C5:21D2
cs=0x17c5;eip=0x0021d5; 	X(MOV(*(dw*)(raddr(ds,bx+0x0E)), ax));	// 87405                  mov     [bx+0Eh], ax ;~ 17C5:21D5
cs=0x17c5;eip=0x0021d8; 	T(bx = word_49be0;);	// 87406                  mov     bx, word_49BE0 ;~ 17C5:21D8
cs=0x17c5;eip=0x0021dc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_14))));	// 87407                  mov     ax, [bp+arg_14] ;~ 17C5:21DC
cs=0x17c5;eip=0x0021df; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_18))));	// 87408                  add     ax, [bp+arg_18] ;~ 17C5:21DF
cs=0x17c5;eip=0x0021e2; 	T(DEC(ax));	// 87409                  dec     ax ;~ 17C5:21E2
cs=0x17c5;eip=0x0021e3; 	X(MOV(*(dw*)(raddr(ds,bx+0x10)), ax));	// 87410                  mov     [bx+10h], ax ;~ 17C5:21E3
cs=0x17c5;eip=0x0021e6; 	T(bx = word_49be0;);	// 87411                  mov     bx, word_49BE0 ;~ 17C5:21E6
cs=0x17c5;eip=0x0021ea; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_12))));	// 87412                  mov     ax, [bp+arg_12] ;~ 17C5:21EA
cs=0x17c5;eip=0x0021ed; 	X(MOV(*(dw*)(raddr(ds,bx+0x12)), ax));	// 87413                  mov     [bx+12h], ax ;~ 17C5:21ED
cs=0x17c5;eip=0x0021f0; 	T(bx = word_49be0;);	// 87414                  mov     bx, word_49BE0 ;~ 17C5:21F0
cs=0x17c5;eip=0x0021f4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_12))));	// 87415                  mov     ax, [bp+arg_12] ;~ 17C5:21F4
cs=0x17c5;eip=0x0021f7; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_16))));	// 87416                  add     ax, [bp+arg_16] ;~ 17C5:21F7
cs=0x17c5;eip=0x0021fa; 	T(DEC(ax));	// 87417                  dec     ax ;~ 17C5:21FA
cs=0x17c5;eip=0x0021fb; 	X(MOV(*(dw*)(raddr(ds,bx+0x14)), ax));	// 87418                  mov     [bx+14h], ax ;~ 17C5:21FB
cs=0x17c5;eip=0x0021fe; 	J(CALLF(sub_49a7f,0));	// 87419                  call    far ptr sub_49A7F ;~ 17C5:21FE
seg2623_2203_proc:
	// 87423 
cs=0x17c5;eip=0x002203; 	T(SUB(ah, ah));	// 87423                  sub     ah, ah ;~ 17C5:2203
cs=0x17c5;eip=0x002205; 	T(bx = word_49be0;);	// 87424                  mov     bx, word_49BE0 ;~ 17C5:2205
cs=0x17c5;eip=0x002209; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 87425                  mov     [bx], ax ;~ 17C5:2209
cs=0x17c5;eip=0x00220b; 	X(PUSH(word_4e830));	// 87426                  push    ds:word_4E830 ;~ 17C5:220B
cs=0x17c5;eip=0x00220f; 	J(CALL(sub_284a8,0));	// 87427                  call    sub_284A8 ;~ 17C5:220F
cs=0x17c5;eip=0x002212; 	T(ADD(sp, 2));	// 87428                  add     sp, 2 ;~ 17C5:2212
cs=0x17c5;eip=0x002215; 	T(bx = word_49be0;);	// 87429                  mov     bx, word_49BE0 ;~ 17C5:2215
cs=0x17c5;eip=0x002219; 	T(si = word_520c8;);	// 87430                  mov     si, ds:word_520C8 ;~ 17C5:2219
cs=0x17c5;eip=0x00221d; 	T(AND(si, 0x0FF));	// 87431                  and     si, 0FFh ;~ 17C5:221D
cs=0x17c5;eip=0x002221; 	T(MOV(al, *(raddr(ds,si+0x18EC))));	// 87432                  mov     al, [si+18ECh] ;~ 17C5:2221
cs=0x17c5;eip=0x002225; 	T(SUB(ah, ah));	// 87433                  sub     ah, ah ;~ 17C5:2225
cs=0x17c5;eip=0x002227; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 87434                  mov     [bx+4], ax ;~ 17C5:2227
cs=0x17c5;eip=0x00222a; 	T(ax = 1;);	// 87435                  mov     ax, 1 ;~ 17C5:222A
cs=0x17c5;eip=0x00222d; 	X(PUSH(ax));	// 87436                  push    ax ;~ 17C5:222D
cs=0x17c5;eip=0x00222e; 	X(PUSH(*(dw*)(raddr(ss,bp+0x12))));	// 87437                  push    word ptr [bp+12h] ;~ 17C5:222E
cs=0x17c5;eip=0x002231; 	T(SUB(ax, ax));	// 87438                  sub     ax, ax ;~ 17C5:2231
cs=0x17c5;eip=0x002233; 	X(PUSH(ax));	// 87439                  push    ax ;~ 17C5:2233
cs=0x17c5;eip=0x002234; 	X(PUSH(ax));	// 87440                  push    ax ;~ 17C5:2234
cs=0x17c5;eip=0x002235; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 87441                  push    word ptr [bp+8] ;~ 17C5:2235
cs=0x17c5;eip=0x002238; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 87442                  push    word ptr [bp+6] ;~ 17C5:2238
cs=0x17c5;eip=0x00223b; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 87443                  push    word ptr [bp+4] ;~ 17C5:223B
cs=0x17c5;eip=0x00223e; 	X(PUSH(word_49be0));	// 87444                  push    word_49BE0 ;~ 17C5:223E
cs=0x17c5;eip=0x002242; 	J(CALL(sub_29b62,0));	// 87445                  call    sub_29B62 ;~ 17C5:2242
cs=0x17c5;eip=0x002245; 	T(ADD(sp, 0x10));	// 87447                  add     sp, 10h ;~ 17C5:2245
cs=0x17c5;eip=0x002248; 	X(PUSH(*(dw*)(raddr(ss,bp+0x14))));	// 87448                  push    word ptr [bp+14h] ;~ 17C5:2248
cs=0x17c5;eip=0x00224b; 	X(PUSH(*(dw*)(raddr(ss,bp+0x12))));	// 87449                  push    word ptr [bp+12h] ;~ 17C5:224B
cs=0x17c5;eip=0x00224e; 	X(PUSH(*(dw*)(raddr(ss,bp+0x10))));	// 87450                  push    word ptr [bp+10h] ;~ 17C5:224E
cs=0x17c5;eip=0x002251; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0E))));	// 87451                  push    word ptr [bp+0Eh] ;~ 17C5:2251
cs=0x17c5;eip=0x002254; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0C))));	// 87452                  push    word ptr [bp+0Ch] ;~ 17C5:2254
cs=0x17c5;eip=0x002257; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 87453                  push    word ptr [bp+0Ah] ;~ 17C5:2257
cs=0x17c5;eip=0x00225a; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 87454                  push    word ptr [bp+6] ;~ 17C5:225A
cs=0x17c5;eip=0x00225d; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 87455                  push    word ptr [bp+4] ;~ 17C5:225D
cs=0x17c5;eip=0x002260; 	J(CALL(sub_284e8,0));	// 87456                  call    sub_284E8 ;~ 17C5:2260
cs=0x17c5;eip=0x002263; 	T(ADD(sp, 0x10));	// 87458                  add     sp, 10h ;~ 17C5:2263
cs=0x17c5;eip=0x002266; 	J(CALL(_group59,m2c::kloc_30c28));	// 87459                  call    loc_30C28 ;~ 17C5:2266
cs=0x17c5;eip=0x002269; 	J(CALL(sub_29bda,0));	// 87460                  call    sub_29BDA ;~ 17C5:2269
cs=0x17c5;eip=0x00226c; 	J(CALL(_group59,m2c::kloc_31377));	// 87462                  call    loc_31377 ;~ 17C5:226C
cs=0x17c5;eip=0x00226f; 	X(XOR(*(byte_49be2), 1));	// 87463                  xor     byte_49BE2, 1 ;~ 17C5:226F
cs=0x17c5;eip=0x002274; 	X(POP(si));	// 87464                  pop     si ;~ 17C5:2274
cs=0x17c5;eip=0x002275; 	X(POP(bp));	// 87465                  pop     bp ;~ 17C5:2275
cs=0x17c5;eip=0x002276; 	J(RETN(0));	// 87466                  retn ;~ 17C5:2276

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_2203_proc: 	goto seg2623_2203_proc;
        case m2c::ksub_283fa: 	goto sub_283fa;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_284a8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_284a8:
    _begin:
#undef var_2
#define var_2 -2
	// 87478 var_2           = byte ptr -2 ;~ 17C5:2278
#undef arg_0
#define arg_0 4
	// 87479 arg_0           = word ptr  4 ;~ 17C5:2278
cs=0x17c5;eip=0x002278; 	X(PUSH(bp));	// 87481                  push    bp ;~ 17C5:2278
cs=0x17c5;eip=0x002279; 	T(bp = sp;);	// 87482                  mov     bp, sp ;~ 17C5:2279
cs=0x17c5;eip=0x00227b; 	T(SUB(sp, 2));	// 87483                  sub     sp, 2 ;~ 17C5:227B
cs=0x17c5;eip=0x00227e; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 87484                  cmp     [bp+arg_0], 0 ;~ 17C5:227E
cs=0x17c5;eip=0x002282; 	J(JLE(loc_284c6));	// 87485                  jle     short loc_284C6 ;~ 17C5:2282
cs=0x17c5;eip=0x002284; 	T(MOV(al, *(raddr(ss,bp+arg_0))));	// 87486                  mov     al, byte ptr [bp+arg_0] ;~ 17C5:2284
cs=0x17c5;eip=0x002287; 	T(ADD(al, byte_4db3c));	// 87487                  add     al, ds:byte_4DB3C ;~ 17C5:2287
cs=0x17c5;eip=0x00228b; 	X(MOV(*(raddr(ss,bp+var_2)), al));	// 87488                  mov     [bp+var_2], al ;~ 17C5:228B
loc_284be:
	// 5102 
cs=0x17c5;eip=0x00228e; 	T(al = byte_4db3c;);	// 87491                  mov     al, ds:byte_4DB3C ;~ 17C5:228E
cs=0x17c5;eip=0x002291; 	T(CMP(*(raddr(ss,bp+var_2)), al));	// 87492                  cmp     [bp+var_2], al ;~ 17C5:2291
cs=0x17c5;eip=0x002294; 	J(JNZ(loc_284be));	// 87493                  jnz     short loc_284BE ;~ 17C5:2294
loc_284c6:
	// 5103 
cs=0x17c5;eip=0x002296; 	T(sp = bp;);	// 87496                  mov     sp, bp ;~ 17C5:2296
cs=0x17c5;eip=0x002298; 	X(POP(bp));	// 87497                  pop     bp ;~ 17C5:2298
cs=0x17c5;eip=0x002299; 	J(RETN(0));	// 87498                  retn ;~ 17C5:2299

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_284be: 	goto loc_284be;
        case m2c::kloc_284c6: 	goto loc_284c6;
        case m2c::ksub_284a8: 	goto sub_284a8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_284ca(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_284ca:
    _begin:
#undef arg_0
#define arg_0 4
	// 87509 arg_0           = word ptr  4 ;~ 17C5:229A
cs=0x17c5;eip=0x00229a; 	X(PUSH(bp));	// 87511                  push    bp ;~ 17C5:229A
cs=0x17c5;eip=0x00229b; 	T(bp = sp;);	// 87512                  mov     bp, sp ;~ 17C5:229B
cs=0x17c5;eip=0x00229d; 	T(ax = 0x10;);	// 87513                  mov     ax, 10h ;~ 17C5:229D
cs=0x17c5;eip=0x0022a0; 	X(PUSH(ax));	// 87514                  push    ax ;~ 17C5:22A0
cs=0x17c5;eip=0x0022a1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 87515                  mov     ax, [bp+arg_0] ;~ 17C5:22A1
cs=0x17c5;eip=0x0022a4; 	T(cl = 4;);	// 87516                  mov     cl, 4 ;~ 17C5:22A4
cs=0x17c5;eip=0x0022a6; 	T(SHL(ax, cl));	// 87517                  shl     ax, cl ;~ 17C5:22A6
cs=0x17c5;eip=0x0022a8; 	T(ADD(ax, 0x1104));	// 87518                  add     ax, 1104h ;~ 17C5:22A8
cs=0x17c5;eip=0x0022ab; 	X(PUSH(ax));	// 87519                  push    ax ;~ 17C5:22AB
cs=0x17c5;eip=0x0022ac; 	T(ax = 0x18EC;);	// 87520                  mov     ax, 18ECh ;~ 17C5:22AC
cs=0x17c5;eip=0x0022af; 	X(PUSH(ax));	// 87521                  push    ax ;~ 17C5:22AF
cs=0x17c5;eip=0x0022b0; 	J(CALL(sub_34d94,0));	// 87522                  call    sub_34D94 ;~ 17C5:22B0
cs=0x17c5;eip=0x0022b3; 	T(ADD(sp, 6));	// 87523                  add     sp, 6 ;~ 17C5:22B3
cs=0x17c5;eip=0x0022b6; 	X(POP(bp));	// 87524                  pop     bp ;~ 17C5:22B6
cs=0x17c5;eip=0x0022b7; 	J(RETN(0));	// 87525                  retn ;~ 17C5:22B7

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_284ca: 	goto sub_284ca;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group23(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group23:
    _begin:
sub_284e8:
	// 87533 
#undef var_1a
#define var_1a -0x1A
	// 87535 var_1A          = word ptr -1Ah ;~ 17C5:22B8
#undef var_18
#define var_18 -0x18
	// 87536 var_18          = word ptr -18h ;~ 17C5:22B8
#undef var_16
#define var_16 -0x16
	// 87537 var_16          = word ptr -16h ;~ 17C5:22B8
#undef var_14
#define var_14 -0x14
	// 87538 var_14          = word ptr -14h ;~ 17C5:22B8
#undef var_12
#define var_12 -0x12
	// 87539 var_12          = word ptr -12h ;~ 17C5:22B8
#undef var_e
#define var_e -0x0E
	// 87540 var_E           = word ptr -0Eh ;~ 17C5:22B8
#undef var_c
#define var_c -0x0C
	// 87541 var_C           = word ptr -0Ch ;~ 17C5:22B8
#undef var_a
#define var_a -0x0A
	// 87542 var_A           = word ptr -0Ah ;~ 17C5:22B8
#undef var_8
#define var_8 -8
	// 87543 var_8           = word ptr -8 ;~ 17C5:22B8
#undef var_6
#define var_6 -6
	// 87544 var_6           = word ptr -6 ;~ 17C5:22B8
#undef var_4
#define var_4 -4
	// 87545 var_4           = word ptr -4 ;~ 17C5:22B8
#undef var_2
#define var_2 -2
	// 87546 var_2           = word ptr -2 ;~ 17C5:22B8
#undef arg_0
#define arg_0 4
	// 87547 arg_0           = word ptr  4 ;~ 17C5:22B8
#undef arg_2
#define arg_2 6
	// 87548 arg_2           = word ptr  6 ;~ 17C5:22B8
#undef arg_4
#define arg_4 8
	// 87549 arg_4           = word ptr  8 ;~ 17C5:22B8
#undef arg_6
#define arg_6 0x0A
	// 87550 arg_6           = word ptr  0Ah ;~ 17C5:22B8
#undef arg_8
#define arg_8 0x0C
	// 87551 arg_8           = word ptr  0Ch ;~ 17C5:22B8
#undef arg_a
#define arg_a 0x0E
	// 87552 arg_A           = word ptr  0Eh ;~ 17C5:22B8
#undef arg_c
#define arg_c 0x10
	// 87553 arg_C           = word ptr  10h ;~ 17C5:22B8
#undef arg_e
#define arg_e 0x12
	// 87554 arg_E           = word ptr  12h ;~ 17C5:22B8
cs=0x17c5;eip=0x0022b8; 	X(PUSH(bp));	// 87558                  push    bp ;~ 17C5:22B8
cs=0x17c5;eip=0x0022b9; 	T(bp = sp;);	// 87559                  mov     bp, sp ;~ 17C5:22B9
cs=0x17c5;eip=0x0022bb; 	T(SUB(sp, 0x1C));	// 87560                  sub     sp, 1Ch ;~ 17C5:22BB
cs=0x17c5;eip=0x0022be; 	X(PUSH(si));	// 87561                  push    si ;~ 17C5:22BE
cs=0x17c5;eip=0x0022bf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 87562                  mov     ax, [bp+arg_4] ;~ 17C5:22BF
cs=0x17c5;eip=0x0022c2; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_6))));	// 87563                  mov     dx, [bp+arg_6] ;~ 17C5:22C2
cs=0x17c5;eip=0x0022c5; 	X(word_52ae8 = ax;);	// 87564                  mov     ds:word_52AE8, ax ;~ 17C5:22C5
cs=0x17c5;eip=0x0022c8; 	X(word_52aea = dx;);	// 87565                  mov     ds:word_52AEA, dx ;~ 17C5:22C8
cs=0x17c5;eip=0x0022cc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_8))));	// 87566                  mov     ax, [bp+arg_8] ;~ 17C5:22CC
cs=0x17c5;eip=0x0022cf; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_a))));	// 87567                  mov     dx, [bp+arg_A] ;~ 17C5:22CF
cs=0x17c5;eip=0x0022d2; 	X(word_52aec = ax;);	// 87568                  mov     ds:word_52AEC, ax ;~ 17C5:22D2
cs=0x17c5;eip=0x0022d5; 	X(word_52aee = dx;);	// 87569                  mov     ds:word_52AEE, dx ;~ 17C5:22D5
cs=0x17c5;eip=0x0022d9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_c))));	// 87570                  mov     ax, [bp+arg_C] ;~ 17C5:22D9
cs=0x17c5;eip=0x0022dc; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_e))));	// 87571                  mov     dx, [bp+arg_E] ;~ 17C5:22DC
cs=0x17c5;eip=0x0022df; 	X(word_52af0 = ax;);	// 87572                  mov     ds:word_52AF0, ax ;~ 17C5:22DF
cs=0x17c5;eip=0x0022e2; 	X(word_52af2 = dx;);	// 87573                  mov     ds:word_52AF2, dx ;~ 17C5:22E2
cs=0x17c5;eip=0x0022e6; 	T(ax = word_52ae8;);	// 87574                  mov     ax, ds:word_52AE8 ;~ 17C5:22E6
cs=0x17c5;eip=0x0022e9; 	T(dx = word_52aea;);	// 87575                  mov     dx, ds:word_52AEA ;~ 17C5:22E9
cs=0x17c5;eip=0x0022ed; 	X(MOV(*(dw*)(raddr(ss,bp+arg_4)), ax));	// 87576                  mov     [bp+arg_4], ax ;~ 17C5:22ED
cs=0x17c5;eip=0x0022f0; 	X(MOV(*(dw*)(raddr(ss,bp+arg_6)), dx));	// 87577                  mov     [bp+arg_6], dx ;~ 17C5:22F0
cs=0x17c5;eip=0x0022f3; 	T(ax = word_52aec;);	// 87578                  mov     ax, ds:word_52AEC ;~ 17C5:22F3
cs=0x17c5;eip=0x0022f6; 	T(dx = word_52aee;);	// 87579                  mov     dx, ds:word_52AEE ;~ 17C5:22F6
cs=0x17c5;eip=0x0022fa; 	X(MOV(*(dw*)(raddr(ss,bp+arg_8)), ax));	// 87580                  mov     [bp+arg_8], ax ;~ 17C5:22FA
cs=0x17c5;eip=0x0022fd; 	X(MOV(*(dw*)(raddr(ss,bp+arg_a)), dx));	// 87581                  mov     [bp+arg_A], dx ;~ 17C5:22FD
cs=0x17c5;eip=0x002300; 	T(ax = word_52af0;);	// 87582                  mov     ax, ds:word_52AF0 ;~ 17C5:2300
cs=0x17c5;eip=0x002303; 	T(dx = word_52af2;);	// 87583                  mov     dx, ds:word_52AF2 ;~ 17C5:2303
cs=0x17c5;eip=0x002307; 	X(MOV(*(dw*)(raddr(ss,bp+arg_c)), ax));	// 87584                  mov     [bp+arg_C], ax ;~ 17C5:2307
cs=0x17c5;eip=0x00230a; 	X(MOV(*(dw*)(raddr(ss,bp+arg_e)), dx));	// 87585                  mov     [bp+arg_E], dx ;~ 17C5:230A
cs=0x17c5;eip=0x00230d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 87586                  mov     ax, [bp+arg_0] ;~ 17C5:230D
cs=0x17c5;eip=0x002310; 	T(NEG(ax));	// 87587                  neg     ax ;~ 17C5:2310
cs=0x17c5;eip=0x002312; 	T(ADD(ah, 0x10));	// 87588                  add     ah, 10h ;~ 17C5:2312
cs=0x17c5;eip=0x002315; 	T(cl = 0x0D;);	// 87589                  mov     cl, 0Dh ;~ 17C5:2315
cs=0x17c5;eip=0x002317; 	T(SHR(ax, cl));	// 87590                  shr     ax, cl ;~ 17C5:2317
cs=0x17c5;eip=0x002319; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 87591                  mov     [bp+var_6], ax ;~ 17C5:2319
cs=0x17c5;eip=0x00231c; 	T(CMP(word_4f20c, 0));	// 87592                  cmp     ds:word_4F20C, 0 ;~ 17C5:231C
cs=0x17c5;eip=0x002321; 	J(JZ(loc_28558));	// 87593                  jz      short loc_28558 ;~ 17C5:2321
cs=0x17c5;eip=0x002323; 	T(ax = 4;);	// 87594                  mov     ax, 4 ;~ 17C5:2323
cs=0x17c5;eip=0x002326; 	J(JMP(loc_2855b));	// 87595                  jmp     short loc_2855B ;~ 17C5:2326
loc_28558:
	// 5104 
cs=0x17c5;eip=0x002328; 	T(ax = 3;);	// 87599                  mov     ax, 3 ;~ 17C5:2328
loc_2855b:
	// 5105 
cs=0x17c5;eip=0x00232b; 	X(word_5239c = ax;);	// 87602                  mov     ds:word_5239C, ax ;~ 17C5:232B
cs=0x17c5;eip=0x00232e; 	J(JMP(loc_28564));	// 87603                  jmp     short loc_28564 ;~ 17C5:232E
loc_28560:
	// 5106 
cs=0x17c5;eip=0x002330; 	X(DEC(word_5239c));	// 87608                  dec     ds:word_5239C ;~ 17C5:2330
loc_28564:
	// 5107 
cs=0x17c5;eip=0x002334; 	T(CMP(word_5239c, 1));	// 87611                  cmp     ds:word_5239C, 1 ;~ 17C5:2334
cs=0x17c5;eip=0x002339; 	J(JGE(loc_2856e));	// 87612                  jge     short loc_2856E ;~ 17C5:2339
cs=0x17c5;eip=0x00233b; 	J(JMP(loc_288df));	// 87613                  jmp     loc_288DF ;~ 17C5:233B
loc_2856e:
	// 5108 
cs=0x17c5;eip=0x00233e; 	T(bx = word_5239c;);	// 87617                  mov     bx, ds:word_5239C ;~ 17C5:233E
cs=0x17c5;eip=0x002342; 	T(SHL(bx, 1));	// 87618                  shl     bx, 1 ;~ 17C5:2342
cs=0x17c5;eip=0x002344; 	T(CMP(*(dw*)(raddr(ds,bx+0x12F2)), 0));	// 87619                  cmp     word ptr [bx+12F2h], 0 ;~ 17C5:2344
cs=0x17c5;eip=0x002349; 	J(JNZ(loc_2857e));	// 87620                  jnz     short loc_2857E ;~ 17C5:2349
cs=0x17c5;eip=0x00234b; 	J(JMP(loc_288dc));	// 87621                  jmp     loc_288DC ;~ 17C5:234B
loc_2857e:
	// 5109 
cs=0x17c5;eip=0x00234e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 87625                  push    [bp+arg_6] ;~ 17C5:234E
cs=0x17c5;eip=0x002351; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 87626                  push    [bp+arg_4] ;~ 17C5:2351
cs=0x17c5;eip=0x002354; 	X(PUSH(word_5239c));	// 87627                  push    ds:word_5239C ;~ 17C5:2354
cs=0x17c5;eip=0x002358; 	J(CALL(sub_288e4,0));	// 87628                  call    sub_288E4 ;~ 17C5:2358
cs=0x17c5;eip=0x00235b; 	T(ADD(sp, 6));	// 87629                  add     sp, 6 ;~ 17C5:235B
cs=0x17c5;eip=0x00235e; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 87630                  mov     [bp+var_18], ax ;~ 17C5:235E
cs=0x17c5;eip=0x002361; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), dx));	// 87631                  mov     [bp+var_16], dx ;~ 17C5:2361
cs=0x17c5;eip=0x002364; 	T(cl = 0x0C;);	// 87632                  mov     cl, 0Ch ;~ 17C5:2364
loc_28596:
	// 5110 
cs=0x17c5;eip=0x002366; 	T(SHR(dx, 1));	// 87635                  shr     dx, 1 ;~ 17C5:2366
cs=0x17c5;eip=0x002368; 	T(RCR(ax, 1));	// 87636                  rcr     ax, 1 ;~ 17C5:2368
cs=0x17c5;eip=0x00236a; 	T(DEC(cl));	// 87637                  dec     cl ;~ 17C5:236A
cs=0x17c5;eip=0x00236c; 	J(JZ(loc_285a0));	// 87638                  jz      short loc_285A0 ;~ 17C5:236C
cs=0x17c5;eip=0x00236e; 	J(JMP(loc_28596));	// 87639                  jmp     short loc_28596 ;~ 17C5:236E
loc_285a0:
	// 5111 
cs=0x17c5;eip=0x002370; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), ax));	// 87643                  mov     [bp+var_12], ax ;~ 17C5:2370
cs=0x17c5;eip=0x002373; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_18))));	// 87644                  mov     ax, [bp+var_18] ;~ 17C5:2373
cs=0x17c5;eip=0x002376; 	T(AND(ah, 0x0F));	// 87645                  and     ah, 0Fh ;~ 17C5:2376
cs=0x17c5;eip=0x002379; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 87646                  mov     [bp+var_8], ax ;~ 17C5:2379
cs=0x17c5;eip=0x00237c; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_a))));	// 87647                  push    [bp+arg_A] ;~ 17C5:237C
cs=0x17c5;eip=0x00237f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_8))));	// 87648                  push    [bp+arg_8] ;~ 17C5:237F
cs=0x17c5;eip=0x002382; 	X(PUSH(word_5239c));	// 87649                  push    ds:word_5239C ;~ 17C5:2382
cs=0x17c5;eip=0x002386; 	J(CALL(sub_288e4,0));	// 87650                  call    sub_288E4 ;~ 17C5:2386
cs=0x17c5;eip=0x002389; 	T(ADD(sp, 6));	// 87651                  add     sp, 6 ;~ 17C5:2389
cs=0x17c5;eip=0x00238c; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 87652                  mov     [bp+var_18], ax ;~ 17C5:238C
cs=0x17c5;eip=0x00238f; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), dx));	// 87653                  mov     [bp+var_16], dx ;~ 17C5:238F
cs=0x17c5;eip=0x002392; 	T(cl = 0x0C;);	// 87654                  mov     cl, 0Ch ;~ 17C5:2392
loc_285c4:
	// 5112 
cs=0x17c5;eip=0x002394; 	T(SHR(dx, 1));	// 87657                  shr     dx, 1 ;~ 17C5:2394
cs=0x17c5;eip=0x002396; 	T(RCR(ax, 1));	// 87658                  rcr     ax, 1 ;~ 17C5:2396
cs=0x17c5;eip=0x002398; 	T(DEC(cl));	// 87659                  dec     cl ;~ 17C5:2398
cs=0x17c5;eip=0x00239a; 	J(JZ(loc_285ce));	// 87660                  jz      short loc_285CE ;~ 17C5:239A
cs=0x17c5;eip=0x00239c; 	J(JMP(loc_285c4));	// 87661                  jmp     short loc_285C4 ;~ 17C5:239C
loc_285ce:
	// 5113 
cs=0x17c5;eip=0x00239e; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 87665                  mov     [bp+var_14], ax ;~ 17C5:239E
cs=0x17c5;eip=0x0023a1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_18))));	// 87666                  mov     ax, [bp+var_18] ;~ 17C5:23A1
cs=0x17c5;eip=0x0023a4; 	T(AND(ah, 0x0F));	// 87667                  and     ah, 0Fh ;~ 17C5:23A4
cs=0x17c5;eip=0x0023a7; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 87668                  mov     [bp+var_C], ax ;~ 17C5:23A7
cs=0x17c5;eip=0x0023aa; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_e))));	// 87669                  push    [bp+arg_E] ;~ 17C5:23AA
cs=0x17c5;eip=0x0023ad; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_c))));	// 87670                  push    [bp+arg_C] ;~ 17C5:23AD
cs=0x17c5;eip=0x0023b0; 	X(PUSH(word_5239c));	// 87671                  push    ds:word_5239C ;~ 17C5:23B0
cs=0x17c5;eip=0x0023b4; 	J(CALL(sub_288e4,0));	// 87672                  call    sub_288E4 ;~ 17C5:23B4
cs=0x17c5;eip=0x0023b7; 	T(ADD(sp, 6));	// 87673                  add     sp, 6 ;~ 17C5:23B7
cs=0x17c5;eip=0x0023ba; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 87674                  mov     [bp+var_18], ax ;~ 17C5:23BA
cs=0x17c5;eip=0x0023bd; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), dx));	// 87675                  mov     [bp+var_16], dx ;~ 17C5:23BD
cs=0x17c5;eip=0x0023c0; 	T(OR(dx, dx));	// 87676                  or      dx, dx ;~ 17C5:23C0
cs=0x17c5;eip=0x0023c2; 	J(JZ(loc_285f7));	// 87677                  jz      short loc_285F7 ;~ 17C5:23C2
cs=0x17c5;eip=0x0023c4; 	J(JMP(loc_288dc));	// 87678                  jmp     loc_288DC ;~ 17C5:23C4
loc_285f7:
	// 5114 
cs=0x17c5;eip=0x0023c7; 	J(JC(loc_28601));	// 87682                  jb      short loc_28601 ;~ 17C5:23C7
cs=0x17c5;eip=0x0023c9; 	T(CMP(ax, 0x7FFF));	// 87683                  cmp     ax, 7FFFh ;~ 17C5:23C9
cs=0x17c5;eip=0x0023cc; 	J(JC(loc_28601));	// 87684                  jb      short loc_28601 ;~ 17C5:23CC
cs=0x17c5;eip=0x0023ce; 	J(JMP(loc_288dc));	// 87685                  jmp     loc_288DC ;~ 17C5:23CE
loc_28601:
	// 5115 
cs=0x17c5;eip=0x0023d1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_18))));	// 87690                  mov     ax, [bp+var_18] ;~ 17C5:23D1
cs=0x17c5;eip=0x0023d4; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_16))));	// 87691                  mov     dx, [bp+var_16] ;~ 17C5:23D4
cs=0x17c5;eip=0x0023d7; 	T(OR(dx, dx));	// 87692                  or      dx, dx ;~ 17C5:23D7
cs=0x17c5;eip=0x0023d9; 	J(JNZ(loc_28617));	// 87693                  jnz     short loc_28617 ;~ 17C5:23D9
cs=0x17c5;eip=0x0023db; 	J(JC(loc_28612));	// 87694                  jb      short loc_28612 ;~ 17C5:23DB
cs=0x17c5;eip=0x0023dd; 	T(CMP(ax, 2));	// 87695                  cmp     ax, 2 ;~ 17C5:23DD
cs=0x17c5;eip=0x0023e0; 	J(JNC(loc_28617));	// 87696                  jnb     short loc_28617 ;~ 17C5:23E0
loc_28612:
	// 5116 
cs=0x17c5;eip=0x0023e2; 	T(SUB(dx, dx));	// 87700                  sub     dx, dx ;~ 17C5:23E2
cs=0x17c5;eip=0x0023e4; 	T(ax = 2;);	// 87701                  mov     ax, 2 ;~ 17C5:23E4
loc_28617:
	// 5117 
cs=0x17c5;eip=0x0023e7; 	X(word_4ef0c = ax;);	// 87705                  mov     ds:word_4EF0C, ax ;~ 17C5:23E7
cs=0x17c5;eip=0x0023ea; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), 0));	// 87706                  mov     [bp+var_E], 0 ;~ 17C5:23EA
cs=0x17c5;eip=0x0023ef; 	J(JMP(loc_28624));	// 87707                  jmp     short loc_28624 ;~ 17C5:23EF
loc_28621:
	// 5118 
cs=0x17c5;eip=0x0023f1; 	X(INC(*(dw*)(raddr(ss,bp+var_e))));	// 87711                  inc     [bp+var_E] ;~ 17C5:23F1
loc_28624:
	// 5119 
cs=0x17c5;eip=0x0023f4; 	T(CMP(word_5239c, 4));	// 87714                  cmp     ds:word_5239C, 4 ;~ 17C5:23F4
cs=0x17c5;eip=0x0023f9; 	J(JZ(loc_2862e));	// 87715                  jz      short loc_2862E ;~ 17C5:23F9
cs=0x17c5;eip=0x0023fb; 	J(JMP(loc_286ba));	// 87716                  jmp     loc_286BA ;~ 17C5:23FB
loc_2862e:
	// 5120 
cs=0x17c5;eip=0x0023fe; 	T(CMP(word_4f20c, 2));	// 87720                  cmp     ds:word_4F20C, 2 ;~ 17C5:23FE
cs=0x17c5;eip=0x002403; 	J(JGE(loc_28638));	// 87721                  jge     short loc_28638 ;~ 17C5:2403
cs=0x17c5;eip=0x002405; 	J(JMP(loc_286ba));	// 87722                  jmp     loc_286BA ;~ 17C5:2405
loc_28638:
	// 5121 
cs=0x17c5;eip=0x002408; 	T(CMP(*(dw*)(raddr(ss,bp+var_e)), 0x0F));	// 87726                  cmp     [bp+var_E], 0Fh ;~ 17C5:2408
cs=0x17c5;eip=0x00240c; 	J(JNZ(loc_28641));	// 87727                  jnz     short loc_28641 ;~ 17C5:240C
cs=0x17c5;eip=0x00240e; 	J(JMP(loc_288dc));	// 87729                  jmp     loc_288DC ;~ 17C5:240E
loc_28641:
	// 5122 
cs=0x17c5;eip=0x002411; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 87733                  mov     ax, [bp+var_E] ;~ 17C5:2411
cs=0x17c5;eip=0x002414; 	T(SHL(ax, 1));	// 87734                  shl     ax, 1 ;~ 17C5:2414
cs=0x17c5;eip=0x002416; 	T(si = ax;);	// 87735                  mov     si, ax ;~ 17C5:2416
cs=0x17c5;eip=0x002418; 	T(ax = 0x12;);	// 87736                  mov     ax, 12h ;~ 17C5:2418
cs=0x17c5;eip=0x00241b; 	X(MUL1_2(*(dw*)(raddr(ss,bp+var_6))));	// 87737                  mul     [bp+var_6] ;~ 17C5:241B
cs=0x17c5;eip=0x00241e; 	T(bx = ax;);	// 87738                  mov     bx, ax ;~ 17C5:241E
cs=0x17c5;eip=0x002420; 	T(MOV(ax, *(dw*)(raddr(ds,bx+si+0x1144))));	// 87739                  mov     ax, [bx+si+1144h] ;~ 17C5:2420
cs=0x17c5;eip=0x002424; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 87740                  mov     [bp+var_2], ax ;~ 17C5:2424
cs=0x17c5;eip=0x002427; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 87741                  mov     ax, [bp+var_6] ;~ 17C5:2427
cs=0x17c5;eip=0x00242a; 	T(ADD(ax, 2));	// 87742                  add     ax, 2 ;~ 17C5:242A
cs=0x17c5;eip=0x00242d; 	T(AND(ax, 7));	// 87743                  and     ax, 7 ;~ 17C5:242D
cs=0x17c5;eip=0x002430; 	T(cx = 0x12;);	// 87744                  mov     cx, 12h ;~ 17C5:2430
cs=0x17c5;eip=0x002433; 	T(MUL1_2(cx));	// 87745                  mul     cx ;~ 17C5:2433
cs=0x17c5;eip=0x002435; 	T(bx = ax;);	// 87746                  mov     bx, ax ;~ 17C5:2435
cs=0x17c5;eip=0x002437; 	T(MOV(ax, *(dw*)(raddr(ds,bx+si+0x1144))));	// 87747                  mov     ax, [bx+si+1144h] ;~ 17C5:2437
cs=0x17c5;eip=0x00243b; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 87748                  mov     [bp+var_4], ax ;~ 17C5:243B
cs=0x17c5;eip=0x00243e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 87749                  mov     ax, [bp+var_8] ;~ 17C5:243E
cs=0x17c5;eip=0x002441; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_2))));	// 87750                  mov     dx, [bp+var_2] ;~ 17C5:2441
cs=0x17c5;eip=0x002444; 	T(cl = 0x0C;);	// 87751                  mov     cl, 0Ch ;~ 17C5:2444
cs=0x17c5;eip=0x002446; 	T(SHL(dx, cl));	// 87752                  shl     dx, cl ;~ 17C5:2446
cs=0x17c5;eip=0x002448; 	T(SUB(ax, dx));	// 87753                  sub     ax, dx ;~ 17C5:2448
cs=0x17c5;eip=0x00244a; 	T(SUB(ax, 0x800));	// 87754                  sub     ax, 800h ;~ 17C5:244A
cs=0x17c5;eip=0x00244d; 	X(word_4ef08 = ax;);	// 87755                  mov     ds:word_4EF08, ax ;~ 17C5:244D
cs=0x17c5;eip=0x002450; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 87756                  mov     ax, [bp+var_C] ;~ 17C5:2450
cs=0x17c5;eip=0x002453; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_4))));	// 87757                  mov     dx, [bp+var_4] ;~ 17C5:2453
cs=0x17c5;eip=0x002456; 	T(SHL(dx, cl));	// 87758                  shl     dx, cl ;~ 17C5:2456
cs=0x17c5;eip=0x002458; 	T(SUB(ax, dx));	// 87759                  sub     ax, dx ;~ 17C5:2458
cs=0x17c5;eip=0x00245a; 	T(SUB(ax, 0x800));	// 87760                  sub     ax, 800h ;~ 17C5:245A
cs=0x17c5;eip=0x00245d; 	X(word_4ef0a = ax;);	// 87761                  mov     ds:word_4EF0A, ax ;~ 17C5:245D
cs=0x17c5;eip=0x002460; 	X(word_4a492 = 7;);	// 87762                  mov     word_4A492, 7 ;~ 17C5:2460
cs=0x17c5;eip=0x002466; 	T(ax = word_4ef0c;);	// 87763                  mov     ax, ds:word_4EF0C ;~ 17C5:2466
cs=0x17c5;eip=0x002469; 	T(NEG(ax));	// 87764                  neg     ax ;~ 17C5:2469
cs=0x17c5;eip=0x00246b; 	X(PUSH(ax));	// 87765                  push    ax ;~ 17C5:246B
cs=0x17c5;eip=0x00246c; 	T(ax = word_4ef0a;);	// 87766                  mov     ax, ds:word_4EF0A ;~ 17C5:246C
cs=0x17c5;eip=0x00246f; 	T(NEG(ax));	// 87767                  neg     ax ;~ 17C5:246F
cs=0x17c5;eip=0x002471; 	X(PUSH(ax));	// 87768                  push    ax ;~ 17C5:2471
cs=0x17c5;eip=0x002472; 	T(ax = word_4ef08;);	// 87769                  mov     ax, ds:word_4EF08 ;~ 17C5:2472
cs=0x17c5;eip=0x002475; 	T(NEG(ax));	// 87770                  neg     ax ;~ 17C5:2475
cs=0x17c5;eip=0x002477; 	X(PUSH(ax));	// 87771                  push    ax ;~ 17C5:2477
cs=0x17c5;eip=0x002478; 	J(CALLF(sub_364f7,0));	// 87772                  call    sub_364F7 ;~ 17C5:2478
cs=0x17c5;eip=0x00247d; 	T(ADD(sp, 6));	// 87773                  add     sp, 6 ;~ 17C5:247D
cs=0x17c5;eip=0x002480; 	T(OR(ax, ax));	// 87774                  or      ax, ax ;~ 17C5:2480
cs=0x17c5;eip=0x002482; 	J(JZ(loc_286b7));	// 87775                  jz      short loc_286B7 ;~ 17C5:2482
cs=0x17c5;eip=0x002484; 	J(JMP(loc_288d9));	// 87776                  jmp     loc_288D9 ;~ 17C5:2484
loc_286b7:
	// 5123 
cs=0x17c5;eip=0x002487; 	J(JMP(loc_28745));	// 87780                  jmp     loc_28745 ;~ 17C5:2487
loc_286ba:
	// 5124 
cs=0x17c5;eip=0x00248a; 	T(CMP(*(dw*)(raddr(ss,bp+var_e)), 9));	// 87785                  cmp     [bp+var_E], 9 ;~ 17C5:248A
cs=0x17c5;eip=0x00248e; 	J(JNZ(loc_286c3));	// 87786                  jnz     short loc_286C3 ;~ 17C5:248E
cs=0x17c5;eip=0x002490; 	J(JMP(loc_288dc));	// 87787                  jmp     loc_288DC ;~ 17C5:2490
loc_286c3:
	// 5125 
cs=0x17c5;eip=0x002493; 	T(CMP(word_5239c, 4));	// 87791                  cmp     ds:word_5239C, 4 ;~ 17C5:2493
cs=0x17c5;eip=0x002498; 	J(JZ(loc_286da));	// 87792                  jz      short loc_286DA ;~ 17C5:2498
cs=0x17c5;eip=0x00249a; 	T(CMP(word_4f20c, 2));	// 87793                  cmp     ds:word_4F20C, 2 ;~ 17C5:249A
cs=0x17c5;eip=0x00249f; 	J(JGE(loc_286da));	// 87794                  jge     short loc_286DA ;~ 17C5:249F
cs=0x17c5;eip=0x0024a1; 	T(CMP(*(dw*)(raddr(ss,bp+var_e)), 4));	// 87795                  cmp     [bp+var_E], 4 ;~ 17C5:24A1
cs=0x17c5;eip=0x0024a5; 	J(JGE(loc_286da));	// 87796                  jge     short loc_286DA ;~ 17C5:24A5
cs=0x17c5;eip=0x0024a7; 	J(JMP(loc_288d9));	// 87797                  jmp     loc_288D9 ;~ 17C5:24A7
loc_286da:
	// 5126 
cs=0x17c5;eip=0x0024aa; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0x0D555));	// 87802                  cmp     [bp+arg_2], 0D555h ;~ 17C5:24AA
cs=0x17c5;eip=0x0024af; 	J(JGE(loc_286f6));	// 87803                  jge     short loc_286F6 ;~ 17C5:24AF
cs=0x17c5;eip=0x0024b1; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_e))));	// 87804                  mov     si, [bp+var_E] ;~ 17C5:24B1
cs=0x17c5;eip=0x0024b4; 	T(SHL(si, 1));	// 87805                  shl     si, 1 ;~ 17C5:24B4
cs=0x17c5;eip=0x0024b6; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x12C4))));	// 87806                  mov     ax, [si+12C4h] ;~ 17C5:24B6
cs=0x17c5;eip=0x0024ba; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 87807                  mov     [bp+var_2], ax ;~ 17C5:24BA
cs=0x17c5;eip=0x0024bd; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x12D6))));	// 87808                  mov     ax, [si+12D6h] ;~ 17C5:24BD
cs=0x17c5;eip=0x0024c1; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 87809                  mov     [bp+var_4], ax ;~ 17C5:24C1
cs=0x17c5;eip=0x0024c4; 	J(JMP(loc_28723));	// 87810                  jmp     short loc_28723 ;~ 17C5:24C4
loc_286f6:
	// 5127 
cs=0x17c5;eip=0x0024c6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 87814                  mov     ax, [bp+var_E] ;~ 17C5:24C6
cs=0x17c5;eip=0x0024c9; 	T(SHL(ax, 1));	// 87815                  shl     ax, 1 ;~ 17C5:24C9
cs=0x17c5;eip=0x0024cb; 	T(si = ax;);	// 87816                  mov     si, ax ;~ 17C5:24CB
cs=0x17c5;eip=0x0024cd; 	T(ax = 0x12;);	// 87817                  mov     ax, 12h ;~ 17C5:24CD
cs=0x17c5;eip=0x0024d0; 	X(MUL1_2(*(dw*)(raddr(ss,bp+var_6))));	// 87818                  mul     [bp+var_6] ;~ 17C5:24D0
cs=0x17c5;eip=0x0024d3; 	T(bx = ax;);	// 87819                  mov     bx, ax ;~ 17C5:24D3
cs=0x17c5;eip=0x0024d5; 	T(MOV(ax, *(dw*)(raddr(ds,bx+si+0x1144))));	// 87820                  mov     ax, [bx+si+1144h] ;~ 17C5:24D5
cs=0x17c5;eip=0x0024d9; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 87821                  mov     [bp+var_2], ax ;~ 17C5:24D9
cs=0x17c5;eip=0x0024dc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 87822                  mov     ax, [bp+var_6] ;~ 17C5:24DC
cs=0x17c5;eip=0x0024df; 	T(ADD(ax, 2));	// 87823                  add     ax, 2 ;~ 17C5:24DF
cs=0x17c5;eip=0x0024e2; 	T(AND(ax, 7));	// 87824                  and     ax, 7 ;~ 17C5:24E2
cs=0x17c5;eip=0x0024e5; 	T(cx = 0x12;);	// 87825                  mov     cx, 12h ;~ 17C5:24E5
cs=0x17c5;eip=0x0024e8; 	T(MUL1_2(cx));	// 87826                  mul     cx ;~ 17C5:24E8
cs=0x17c5;eip=0x0024ea; 	T(bx = ax;);	// 87827                  mov     bx, ax ;~ 17C5:24EA
cs=0x17c5;eip=0x0024ec; 	T(MOV(ax, *(dw*)(raddr(ds,bx+si+0x1144))));	// 87828                  mov     ax, [bx+si+1144h] ;~ 17C5:24EC
cs=0x17c5;eip=0x0024f0; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 87829                  mov     [bp+var_4], ax ;~ 17C5:24F0
loc_28723:
	// 5128 
cs=0x17c5;eip=0x0024f3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 87832                  mov     ax, [bp+var_8] ;~ 17C5:24F3
cs=0x17c5;eip=0x0024f6; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_2))));	// 87833                  mov     dx, [bp+var_2] ;~ 17C5:24F6
cs=0x17c5;eip=0x0024f9; 	T(cl = 0x0C;);	// 87834                  mov     cl, 0Ch ;~ 17C5:24F9
cs=0x17c5;eip=0x0024fb; 	T(SHL(dx, cl));	// 87835                  shl     dx, cl ;~ 17C5:24FB
cs=0x17c5;eip=0x0024fd; 	T(SUB(ax, dx));	// 87836                  sub     ax, dx ;~ 17C5:24FD
cs=0x17c5;eip=0x0024ff; 	T(SUB(ax, 0x800));	// 87837                  sub     ax, 800h ;~ 17C5:24FF
cs=0x17c5;eip=0x002502; 	X(word_4ef08 = ax;);	// 87838                  mov     ds:word_4EF08, ax ;~ 17C5:2502
cs=0x17c5;eip=0x002505; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 87839                  mov     ax, [bp+var_C] ;~ 17C5:2505
cs=0x17c5;eip=0x002508; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_4))));	// 87840                  mov     dx, [bp+var_4] ;~ 17C5:2508
cs=0x17c5;eip=0x00250b; 	T(SHL(dx, cl));	// 87841                  shl     dx, cl ;~ 17C5:250B
cs=0x17c5;eip=0x00250d; 	T(SUB(ax, dx));	// 87842                  sub     ax, dx ;~ 17C5:250D
cs=0x17c5;eip=0x00250f; 	T(SUB(ax, 0x800));	// 87843                  sub     ax, 800h ;~ 17C5:250F
cs=0x17c5;eip=0x002512; 	X(word_4ef0a = ax;);	// 87844                  mov     ds:word_4EF0A, ax ;~ 17C5:2512
loc_28745:
	// 5129 
cs=0x17c5;eip=0x002515; 	X(PUSH(word_4ef0c));	// 87847                  push    ds:word_4EF0C ;~ 17C5:2515
cs=0x17c5;eip=0x002519; 	X(PUSH(word_4ef0a));	// 87848                  push    ds:word_4EF0A ;~ 17C5:2519
cs=0x17c5;eip=0x00251d; 	X(PUSH(word_4ef08));	// 87849                  push    ds:word_4EF08 ;~ 17C5:251D
cs=0x17c5;eip=0x002521; 	J(CALL(sub_29cc0,0));	// 87850                  call    sub_29CC0 ;~ 17C5:2521
cs=0x17c5;eip=0x002524; 	T(ADD(sp, 6));	// 87851                  add     sp, 6 ;~ 17C5:2524
cs=0x17c5;eip=0x002527; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 87852                  mov     ax, [bp+var_14] ;~ 17C5:2527
cs=0x17c5;eip=0x00252a; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_4))));	// 87853                  add     ax, [bp+var_4] ;~ 17C5:252A
cs=0x17c5;eip=0x00252d; 	X(PUSH(ax));	// 87854                  push    ax ;~ 17C5:252D
cs=0x17c5;eip=0x00252e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_12))));	// 87855                  mov     ax, [bp+var_12] ;~ 17C5:252E
cs=0x17c5;eip=0x002531; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_2))));	// 87856                  add     ax, [bp+var_2] ;~ 17C5:2531
cs=0x17c5;eip=0x002534; 	X(PUSH(ax));	// 87857                  push    ax ;~ 17C5:2534
cs=0x17c5;eip=0x002535; 	X(PUSH(word_5239c));	// 87858                  push    ds:word_5239C ;~ 17C5:2535
cs=0x17c5;eip=0x002539; 	J(CALL(sub_2896e,0));	// 87859                  call    sub_2896E ;~ 17C5:2539
cs=0x17c5;eip=0x00253c; 	T(ADD(sp, 6));	// 87860                  add     sp, 6 ;~ 17C5:253C
cs=0x17c5;eip=0x00253f; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 87861                  mov     [bp+var_1A], ax ;~ 17C5:253F
cs=0x17c5;eip=0x002542; 	T(CMP(ax, 0x0FFFF));	// 87862                  cmp     ax, 0FFFFh ;~ 17C5:2542
cs=0x17c5;eip=0x002545; 	J(JNZ(loc_2877a));	// 87863                  jnz     short loc_2877A ;~ 17C5:2545
cs=0x17c5;eip=0x002547; 	J(JMP(loc_288d9));	// 87864                  jmp     loc_288D9 ;~ 17C5:2547
loc_2877a:
	// 5130 
cs=0x17c5;eip=0x00254a; 	T(CMP(*(dw*)(raddr(ss,bp+var_e)), 4));	// 87868                  cmp     [bp+var_E], 4 ;~ 17C5:254A
cs=0x17c5;eip=0x00254e; 	J(JGE(loc_2878a));	// 87869                  jge     short loc_2878A ;~ 17C5:254E
cs=0x17c5;eip=0x002550; 	T(CMP(word_4f20c, 2));	// 87870                  cmp     ds:word_4F20C, 2 ;~ 17C5:2550
cs=0x17c5;eip=0x002555; 	J(JGE(loc_2878a));	// 87871                  jge     short loc_2878A ;~ 17C5:2555
cs=0x17c5;eip=0x002557; 	J(JMP(loc_2887e));	// 87872                  jmp     loc_2887E ;~ 17C5:2557
loc_2878a:
	// 5131 
cs=0x17c5;eip=0x00255a; 	T(CMP(word_4f20c, 2));	// 87877                  cmp     ds:word_4F20C, 2 ;~ 17C5:255A
cs=0x17c5;eip=0x00255f; 	J(JNZ(loc_28795));	// 87878                  jnz     short loc_28795 ;~ 17C5:255F
cs=0x17c5;eip=0x002561; 	T(SUB(ax, ax));	// 87879                  sub     ax, ax ;~ 17C5:2561
cs=0x17c5;eip=0x002563; 	J(JMP(loc_2879b));	// 87880                  jmp     short loc_2879B ;~ 17C5:2563
loc_28795:
	// 5132 
cs=0x17c5;eip=0x002565; 	T(ah = *(db*)(&word_5239c););	// 87884                  mov     ah, byte ptr ds:word_5239C ;~ 17C5:2565
cs=0x17c5;eip=0x002569; 	T(SUB(al, al));	// 87885                  sub     al, al ;~ 17C5:2569
loc_2879b:
	// 5133 
cs=0x17c5;eip=0x00256b; 	X(word_49ddc = ax;);	// 87888                  mov     word_49DDC, ax ;~ 17C5:256B
cs=0x17c5;eip=0x00256e; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_1a))));	// 87889                  mov     si, [bp+var_1A] ;~ 17C5:256E
cs=0x17c5;eip=0x002571; 	T(SHL(si, 1));	// 87890                  shl     si, 1 ;~ 17C5:2571
cs=0x17c5;eip=0x002573; 	T(bx = word_5239c;);	// 87891                  mov     bx, ds:word_5239C ;~ 17C5:2573
cs=0x17c5;eip=0x002577; 	T(cl = 6;);	// 87892                  mov     cl, 6 ;~ 17C5:2577
cs=0x17c5;eip=0x002579; 	T(SHL(bx, cl));	// 87893                  shl     bx, cl ;~ 17C5:2579
cs=0x17c5;eip=0x00257b; 	T(MOV(ax, *(dw*)(raddr(ds,bx+si-0x6450))));	// 87894                  mov     ax, [bx+si-6450h] ;~ 17C5:257B
cs=0x17c5;eip=0x00257f; 	X(word_527d8 = ax;);	// 87895                  mov     ds:word_527D8, ax ;~ 17C5:257F
cs=0x17c5;eip=0x002582; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), 0));	// 87896                  mov     [bp+var_A], 0 ;~ 17C5:2582
cs=0x17c5;eip=0x002587; 	J(JMP(loc_287bc));	// 87897                  jmp     short loc_287BC ;~ 17C5:2587
loc_287b9:
	// 5134 
cs=0x17c5;eip=0x002589; 	X(INC(*(dw*)(raddr(ss,bp+var_a))));	// 87901                  inc     [bp+var_A] ;~ 17C5:2589
loc_287bc:
	// 5135 
cs=0x17c5;eip=0x00258c; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_1a))));	// 87904                  mov     si, [bp+var_1A] ;~ 17C5:258C
cs=0x17c5;eip=0x00258f; 	T(SHL(si, 1));	// 87905                  shl     si, 1 ;~ 17C5:258F
cs=0x17c5;eip=0x002591; 	T(bx = word_5239c;);	// 87906                  mov     bx, ds:word_5239C ;~ 17C5:2591
cs=0x17c5;eip=0x002595; 	T(cl = 6;);	// 87907                  mov     cl, 6 ;~ 17C5:2595
cs=0x17c5;eip=0x002597; 	T(SHL(bx, cl));	// 87908                  shl     bx, cl ;~ 17C5:2597
cs=0x17c5;eip=0x002599; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 87909                  mov     ax, [bp+var_A] ;~ 17C5:2599
cs=0x17c5;eip=0x00259c; 	T(CMP(*(dw*)(raddr(ds,bx+si+0x13E0)), ax));	// 87910                  cmp     [bx+si+13E0h], ax ;~ 17C5:259C
cs=0x17c5;eip=0x0025a0; 	J(JA(loc_287d5));	// 87911                  ja      short loc_287D5 ;~ 17C5:25A0
cs=0x17c5;eip=0x0025a2; 	J(JMP(loc_2887c));	// 87912                  jmp     loc_2887C ;~ 17C5:25A2
loc_287d5:
	// 5136 
cs=0x17c5;eip=0x0025a5; 	T(bx = word_527d8;);	// 87916                  mov     bx, ds:word_527D8 ;~ 17C5:25A5
cs=0x17c5;eip=0x0025a9; 	T(TEST(*(raddr(ds,bx+6)), 0x80));	// 87917                  test    byte ptr [bx+6], 80h ;~ 17C5:25A9
cs=0x17c5;eip=0x0025ad; 	J(JZ(loc_28834));	// 87918                  jz      short loc_28834 ;~ 17C5:25AD
cs=0x17c5;eip=0x0025af; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 87919                  mov     ax, [bp+var_14] ;~ 17C5:25AF
cs=0x17c5;eip=0x0025b2; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_4))));	// 87920                  add     ax, [bp+var_4] ;~ 17C5:25B2
cs=0x17c5;eip=0x0025b5; 	X(PUSH(ax));	// 87921                  push    ax ;~ 17C5:25B5
cs=0x17c5;eip=0x0025b6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_12))));	// 87922                  mov     ax, [bp+var_12] ;~ 17C5:25B6
cs=0x17c5;eip=0x0025b9; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_2))));	// 87923                  add     ax, [bp+var_2] ;~ 17C5:25B9
cs=0x17c5;eip=0x0025bc; 	X(PUSH(ax));	// 87924                  push    ax ;~ 17C5:25BC
cs=0x17c5;eip=0x0025bd; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 87925                  push    [bp+var_A] ;~ 17C5:25BD
cs=0x17c5;eip=0x0025c0; 	X(PUSH(word_5239c));	// 87926                  push    ds:word_5239C ;~ 17C5:25C0
cs=0x17c5;eip=0x0025c4; 	J(CALL(sub_29496,0));	// 87927                  call    sub_29496 ;~ 17C5:25C4
cs=0x17c5;eip=0x0025c7; 	T(ADD(sp, 8));	// 87928                  add     sp, 8 ;~ 17C5:25C7
cs=0x17c5;eip=0x0025ca; 	T(ADD(ax, 0));	// 87929                  add     ax, 0 ;~ 17C5:25CA
cs=0x17c5;eip=0x0025cd; 	X(*(dw*)(&dword_4a46c) = ax;);	// 87930                  mov     word ptr dword_4A46C, ax ;~ 17C5:25CD
cs=0x17c5;eip=0x0025d0; 	X(*(dw*)(((db*)&dword_4a46c)+2) = seg_offset(seg38b0););	// 87931                  mov     word ptr dword_4A46C+2, seg seg38b0 ;~ 17C5:25D0
cs=0x17c5;eip=0x0025d6; 	T(ax = 0;);	// 87932                  mov     ax, 0 ;~ 17C5:25D6
cs=0x17c5;eip=0x0025d9; 	T(dx = seg_offset(seg38b0););	// 87933                  mov     dx, seg seg38b0 ;~ 17C5:25D9
cs=0x17c5;eip=0x0025dc; 	T(CMP(ax, *(dw*)(&dword_4a46c)));	// 87934                  cmp     ax, word ptr dword_4A46C ;~ 17C5:25DC
cs=0x17c5;eip=0x0025e0; 	J(JNZ(loc_28832));	// 87935                  jnz     short loc_28832 ;~ 17C5:25E0
cs=0x17c5;eip=0x0025e2; 	T(CMP(dx, *(dw*)(((db*)&dword_4a46c)+2)));	// 87936                  cmp     dx, word ptr dword_4A46C+2 ;~ 17C5:25E2
cs=0x17c5;eip=0x0025e6; 	J(JNZ(loc_28832));	// 87937                  jnz     short loc_28832 ;~ 17C5:25E6
cs=0x17c5;eip=0x0025e8; 	T(bx = word_527d8;);	// 87938                  mov     bx, ds:word_527D8 ;~ 17C5:25E8
cs=0x17c5;eip=0x0025ec; 	T(MOV(bl, *(raddr(ds,bx+6))));	// 87939                  mov     bl, [bx+6] ;~ 17C5:25EC
cs=0x17c5;eip=0x0025ef; 	T(AND(bx, 0x7F));	// 87940                  and     bx, 7Fh ;~ 17C5:25EF
cs=0x17c5;eip=0x0025f2; 	T(SHL(bx, 1));	// 87941                  shl     bx, 1 ;~ 17C5:25F2
cs=0x17c5;eip=0x0025f4; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x130A))));	// 87942                  mov     ax, [bx+130Ah] ;~ 17C5:25F4
cs=0x17c5;eip=0x0025f8; 	T(ADD(ax, 0));	// 87943                  add     ax, 0 ;~ 17C5:25F8
cs=0x17c5;eip=0x0025fb; 	X(*(dw*)(&dword_4a46c) = ax;);	// 87944                  mov     word ptr dword_4A46C, ax ;~ 17C5:25FB
cs=0x17c5;eip=0x0025fe; 	X(*(dw*)(((db*)&dword_4a46c)+2) = dx;);	// 87945                  mov     word ptr dword_4A46C+2, dx ;~ 17C5:25FE
loc_28832:
	// 5137 
cs=0x17c5;eip=0x002602; 	J(JMP(loc_2884f));	// 87949                  jmp     short loc_2884F ;~ 17C5:2602
loc_28834:
	// 5138 
cs=0x17c5;eip=0x002604; 	T(bx = word_527d8;);	// 87953                  mov     bx, ds:word_527D8 ;~ 17C5:2604
cs=0x17c5;eip=0x002608; 	T(MOV(bl, *(raddr(ds,bx+6))));	// 87954                  mov     bl, [bx+6] ;~ 17C5:2608
cs=0x17c5;eip=0x00260b; 	T(SUB(bh, bh));	// 87955                  sub     bh, bh ;~ 17C5:260B
cs=0x17c5;eip=0x00260d; 	T(SHL(bx, 1));	// 87956                  shl     bx, 1 ;~ 17C5:260D
cs=0x17c5;eip=0x00260f; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x130A))));	// 87957                  mov     ax, [bx+130Ah] ;~ 17C5:260F
cs=0x17c5;eip=0x002613; 	T(ADD(ax, 0));	// 87958                  add     ax, 0 ;~ 17C5:2613
cs=0x17c5;eip=0x002616; 	X(*(dw*)(&dword_4a46c) = ax;);	// 87959                  mov     word ptr dword_4A46C, ax ;~ 17C5:2616
cs=0x17c5;eip=0x002619; 	X(*(dw*)(((db*)&dword_4a46c)+2) = seg_offset(seg38b0););	// 87960                  mov     word ptr dword_4A46C+2, seg seg38b0 ;~ 17C5:2619
loc_2884f:
	// 5139 
cs=0x17c5;eip=0x00261f; 	T(bx = word_527d8;);	// 87963                  mov     bx, ds:word_527D8 ;~ 17C5:261F
cs=0x17c5;eip=0x002623; 	X(PUSH(*(dw*)(raddr(ds,bx+4))));	// 87964                  push    word ptr [bx+4] ;~ 17C5:2623
cs=0x17c5;eip=0x002626; 	X(PUSH(*(dw*)(raddr(ds,bx+2))));	// 87965                  push    word ptr [bx+2] ;~ 17C5:2626
cs=0x17c5;eip=0x002629; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 87966                  push    word ptr [bx] ;~ 17C5:2629
cs=0x17c5;eip=0x00262b; 	T(SUB(ax, ax));	// 87967                  sub     ax, ax ;~ 17C5:262B
cs=0x17c5;eip=0x00262d; 	X(PUSH(ax));	// 87968                  push    ax ;~ 17C5:262D
cs=0x17c5;eip=0x00262e; 	X(PUSH(ax));	// 87969                  push    ax ;~ 17C5:262E
cs=0x17c5;eip=0x00262f; 	X(PUSH(ax));	// 87970                  push    ax ;~ 17C5:262F
cs=0x17c5;eip=0x002630; 	X(PUSH(*(dw*)(((db*)&dword_4a46c)+2)));	// 87971                  push    word ptr dword_4A46C+2 ;~ 17C5:2630
cs=0x17c5;eip=0x002634; 	X(PUSH(*(dw*)(&dword_4a46c)));	// 87972                  push    word ptr dword_4A46C ;~ 17C5:2634
cs=0x17c5;eip=0x002638; 	J(CALLF(sub_36334,0));	// 87973                  call    sub_36334 ;~ 17C5:2638
cs=0x17c5;eip=0x00263d; 	T(ADD(sp, 0x10));	// 87974                  add     sp, 10h ;~ 17C5:263D
cs=0x17c5;eip=0x002640; 	X(ADD(word_527d8, 7));	// 87975                  add     ds:word_527D8, 7 ;~ 17C5:2640
cs=0x17c5;eip=0x002645; 	X(INC(word_49ddc));	// 87976                  inc     word_49DDC ;~ 17C5:2645
cs=0x17c5;eip=0x002649; 	J(JMP(loc_287b9));	// 87977                  jmp     loc_287B9 ;~ 17C5:2649
loc_2887c:
	// 5140 
cs=0x17c5;eip=0x00264c; 	J(JMP(loc_288d9));	// 87981                  jmp     short loc_288D9 ;~ 17C5:264C
loc_2887e:
	// 5141 
cs=0x17c5;eip=0x00264e; 	T(CMP(word_5239c, 4));	// 87985                  cmp     ds:word_5239C, 4 ;~ 17C5:264E
cs=0x17c5;eip=0x002653; 	J(JNZ(loc_288d9));	// 87986                  jnz     short loc_288D9 ;~ 17C5:2653
cs=0x17c5;eip=0x002655; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_1a))));	// 87987                  mov     si, [bp+var_1A] ;~ 17C5:2655
cs=0x17c5;eip=0x002658; 	T(SHL(si, 1));	// 87988                  shl     si, 1 ;~ 17C5:2658
cs=0x17c5;eip=0x00265a; 	T(bx = word_5239c;);	// 87989                  mov     bx, ds:word_5239C ;~ 17C5:265A
seg2623_265e_proc:
	// 87992 
cs=0x17c5;eip=0x00265e; 	T(cl = 6;);	// 87992                  mov     cl, 6 ;~ 17C5:265E
cs=0x17c5;eip=0x002660; 	T(SHL(bx, cl));	// 87993                  shl     bx, cl ;~ 17C5:2660
cs=0x17c5;eip=0x002662; 	T(MOV(ax, *(dw*)(raddr(ds,bx+si-0x6450))));	// 87994                  mov     ax, [bx+si-6450h] ;~ 17C5:2662
cs=0x17c5;eip=0x002666; 	X(word_527d8 = ax;);	// 87995                  mov     ds:word_527D8, ax ;~ 17C5:2666
cs=0x17c5;eip=0x002669; 	T(bx = ax;);	// 87996                  mov     bx, ax ;~ 17C5:2669
sub_2889b:
	// 88001 
cs=0x17c5;eip=0x00266b; 	T(MOV(bl, *(raddr(ds,bx+6))));	// 88002                  mov     bl, [bx+6] ;~ 17C5:266B
cs=0x17c5;eip=0x00266e; 	T(SUB(bh, bh));	// 88003                  sub     bh, bh ;~ 17C5:266E
cs=0x17c5;eip=0x002670; 	T(SHL(bx, 1));	// 88004                  shl     bx, 1 ;~ 17C5:2670
cs=0x17c5;eip=0x002672; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x130A))));	// 88005                  mov     ax, [bx+130Ah] ;~ 17C5:2672
cs=0x17c5;eip=0x002676; 	T(ADD(ax, 0));	// 88006                  add     ax, 0 ;~ 17C5:2676
cs=0x17c5;eip=0x002679; 	X(*(dw*)(&dword_4a46c) = ax;);	// 88007                  mov     word ptr dword_4A46C, ax ;~ 17C5:2679
cs=0x17c5;eip=0x00267c; 	X(*(dw*)(((db*)&dword_4a46c)+2) = seg_offset(seg38b0););	// 88008                  mov     word ptr dword_4A46C+2, seg seg38b0 ;~ 17C5:267C
cs=0x17c5;eip=0x002682; 	X(word_49ddc = 0x400;);	// 88009                  mov     word_49DDC, 400h ;~ 17C5:2682
cs=0x17c5;eip=0x002688; 	T(bx = word_527d8;);	// 88010                  mov     bx, ds:word_527D8 ;~ 17C5:2688
cs=0x17c5;eip=0x00268c; 	X(PUSH(*(dw*)(raddr(ds,bx+4))));	// 88011                  push    word ptr [bx+4] ;~ 17C5:268C
cs=0x17c5;eip=0x00268f; 	X(PUSH(*(dw*)(raddr(ds,bx+2))));	// 88012                  push    word ptr [bx+2] ;~ 17C5:268F
seg2623_2692_proc:
	// 88015 
cs=0x17c5;eip=0x002692; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 88015                  push    word ptr [bx] ;~ 17C5:2692
cs=0x17c5;eip=0x002694; 	T(SUB(ax, ax));	// 88016                  sub     ax, ax ;~ 17C5:2694
cs=0x17c5;eip=0x002696; 	X(PUSH(ax));	// 88017                  push    ax ;~ 17C5:2696
cs=0x17c5;eip=0x002697; 	X(PUSH(ax));	// 88018                  push    ax ;~ 17C5:2697
cs=0x17c5;eip=0x002698; 	X(PUSH(ax));	// 88019                  push    ax ;~ 17C5:2698
cs=0x17c5;eip=0x002699; 	X(PUSH(*(dw*)(((db*)&dword_4a46c)+2)));	// 88020                  push    word ptr dword_4A46C+2 ;~ 17C5:2699
cs=0x17c5;eip=0x00269d; 	X(PUSH(*(dw*)(&dword_4a46c)));	// 88021                  push    word ptr dword_4A46C ;~ 17C5:269D
cs=0x17c5;eip=0x0026a1; 	J(CALLF(sub_36334,0));	// 88022                  call    sub_36334 ;~ 17C5:26A1
cs=0x17c5;eip=0x0026a6; 	T(ADD(sp, 0x10));	// 88023                  add     sp, 10h ;~ 17C5:26A6
loc_288d9:
	// 5142 
cs=0x17c5;eip=0x0026a9; 	J(JMP(loc_28621));	// 88028                  jmp     loc_28621 ;~ 17C5:26A9
loc_288dc:
	// 5143 
cs=0x17c5;eip=0x0026ac; 	J(JMP(loc_28560));	// 88033                  jmp     loc_28560 ;~ 17C5:26AC
loc_288df:
	// 5144 
cs=0x17c5;eip=0x0026af; 	X(POP(si));	// 88037                  pop     si ;~ 17C5:26AF
cs=0x17c5;eip=0x0026b0; 	T(sp = bp;);	// 88038                  mov     sp, bp ;~ 17C5:26B0
cs=0x17c5;eip=0x0026b2; 	X(POP(bp));	// 88039                  pop     bp ;~ 17C5:26B2
cs=0x17c5;eip=0x0026b3; 	J(RETN(0));	// 88040                  retn ;~ 17C5:26B3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_28558: 	goto loc_28558;
        case m2c::kloc_2855b: 	goto loc_2855b;
        case m2c::kloc_28560: 	goto loc_28560;
        case m2c::kloc_28564: 	goto loc_28564;
        case m2c::kloc_2856e: 	goto loc_2856e;
        case m2c::kloc_2857e: 	goto loc_2857e;
        case m2c::kloc_28596: 	goto loc_28596;
        case m2c::kloc_285a0: 	goto loc_285a0;
        case m2c::kloc_285c4: 	goto loc_285c4;
        case m2c::kloc_285ce: 	goto loc_285ce;
        case m2c::kloc_285f7: 	goto loc_285f7;
        case m2c::kloc_28601: 	goto loc_28601;
        case m2c::kloc_28612: 	goto loc_28612;
        case m2c::kloc_28617: 	goto loc_28617;
        case m2c::kloc_28621: 	goto loc_28621;
        case m2c::kloc_28624: 	goto loc_28624;
        case m2c::kloc_2862e: 	goto loc_2862e;
        case m2c::kloc_28638: 	goto loc_28638;
        case m2c::kloc_28641: 	goto loc_28641;
        case m2c::kloc_286b7: 	goto loc_286b7;
        case m2c::kloc_286ba: 	goto loc_286ba;
        case m2c::kloc_286c3: 	goto loc_286c3;
        case m2c::kloc_286da: 	goto loc_286da;
        case m2c::kloc_286f6: 	goto loc_286f6;
        case m2c::kloc_28723: 	goto loc_28723;
        case m2c::kloc_28745: 	goto loc_28745;
        case m2c::kloc_2877a: 	goto loc_2877a;
        case m2c::kloc_2878a: 	goto loc_2878a;
        case m2c::kloc_28795: 	goto loc_28795;
        case m2c::kloc_2879b: 	goto loc_2879b;
        case m2c::kloc_287b9: 	goto loc_287b9;
        case m2c::kloc_287bc: 	goto loc_287bc;
        case m2c::kloc_287d5: 	goto loc_287d5;
        case m2c::kloc_28832: 	goto loc_28832;
        case m2c::kloc_28834: 	goto loc_28834;
        case m2c::kloc_2884f: 	goto loc_2884f;
        case m2c::kloc_2887c: 	goto loc_2887c;
        case m2c::kloc_2887e: 	goto loc_2887e;
        case m2c::kloc_288d9: 	goto loc_288d9;
        case m2c::kloc_288dc: 	goto loc_288dc;
        case m2c::kloc_288df: 	goto loc_288df;
        case m2c::kseg2623_265e_proc: 	goto seg2623_265e_proc;
        case m2c::kseg2623_2692_proc: 	goto seg2623_2692_proc;
        case m2c::ksub_284e8: 	goto sub_284e8;
        case m2c::ksub_2889b: 	goto sub_2889b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_288e4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_288e4:
    _begin:
#undef arg_0
#define arg_0 4
	// 88050 arg_0           = word ptr  4 ;~ 17C5:26B4
#undef arg_2
#define arg_2 6
	// 88051 arg_2           = word ptr  6 ;~ 17C5:26B4
#undef arg_4
#define arg_4 8
	// 88052 arg_4           = word ptr  8 ;~ 17C5:26B4
cs=0x17c5;eip=0x0026b4; 	X(PUSH(bp));	// 88054                  push    bp ;~ 17C5:26B4
cs=0x17c5;eip=0x0026b5; 	T(bp = sp;);	// 88055                  mov     bp, sp ;~ 17C5:26B5
cs=0x17c5;eip=0x0026b7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 88056                  mov     ax, [bp+arg_0] ;~ 17C5:26B7
cs=0x17c5;eip=0x0026ba; 	J(JMP(loc_28950));	// 88057                  jmp     short loc_28950 ;~ 17C5:26BA
loc_288ec:
	// 5145 
cs=0x17c5;eip=0x0026bc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 88061                  mov     ax, [bp+arg_2] ;~ 17C5:26BC
cs=0x17c5;eip=0x0026bf; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 88062                  mov     dx, [bp+arg_4] ;~ 17C5:26BF
cs=0x17c5;eip=0x0026c2; 	T(ADD(ax, 0x20));	// 88063                  add     ax, 20h ; ' ' ;~ 17C5:26C2
cs=0x17c5;eip=0x0026c5; 	T(ADC(dx, 0));	// 88064                  adc     dx, 0 ;~ 17C5:26C5
cs=0x17c5;eip=0x0026c8; 	T(cl = 6;);	// 88065                  mov     cl, 6 ;~ 17C5:26C8
loc_288fa:
	// 5146 
cs=0x17c5;eip=0x0026ca; 	T(SHR(dx, 1));	// 88068                  shr     dx, 1 ;~ 17C5:26CA
cs=0x17c5;eip=0x0026cc; 	T(RCR(ax, 1));	// 88069                  rcr     ax, 1 ;~ 17C5:26CC
cs=0x17c5;eip=0x0026ce; 	T(DEC(cl));	// 88070                  dec     cl ;~ 17C5:26CE
cs=0x17c5;eip=0x0026d0; 	J(JZ(loc_28904));	// 88071                  jz      short loc_28904 ;~ 17C5:26D0
cs=0x17c5;eip=0x0026d2; 	J(JMP(loc_288fa));	// 88072                  jmp     short loc_288FA ;~ 17C5:26D2
loc_28904:
	// 5147 
cs=0x17c5;eip=0x0026d4; 	J(JMP(loc_2896a));	// 88076                  jmp     short loc_2896A ;~ 17C5:26D4
loc_28906:
	// 5148 
cs=0x17c5;eip=0x0026d6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 88080                  mov     ax, [bp+arg_2] ;~ 17C5:26D6
cs=0x17c5;eip=0x0026d9; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 88081                  mov     dx, [bp+arg_4] ;~ 17C5:26D9
cs=0x17c5;eip=0x0026dc; 	T(ADD(ax, 8));	// 88082                  add     ax, 8 ;~ 17C5:26DC
cs=0x17c5;eip=0x0026df; 	T(ADC(dx, 0));	// 88083                  adc     dx, 0 ;~ 17C5:26DF
cs=0x17c5;eip=0x0026e2; 	T(cl = 4;);	// 88084                  mov     cl, 4 ;~ 17C5:26E2
loc_28914:
	// 5149 
cs=0x17c5;eip=0x0026e4; 	T(SHR(dx, 1));	// 88087                  shr     dx, 1 ;~ 17C5:26E4
cs=0x17c5;eip=0x0026e6; 	T(RCR(ax, 1));	// 88088                  rcr     ax, 1 ;~ 17C5:26E6
cs=0x17c5;eip=0x0026e8; 	T(DEC(cl));	// 88089                  dec     cl ;~ 17C5:26E8
cs=0x17c5;eip=0x0026ea; 	J(JZ(loc_2891e));	// 88090                  jz      short loc_2891E ;~ 17C5:26EA
cs=0x17c5;eip=0x0026ec; 	J(JMP(loc_28914));	// 88091                  jmp     short loc_28914 ;~ 17C5:26EC
loc_2891e:
	// 5150 
cs=0x17c5;eip=0x0026ee; 	J(JMP(loc_2896a));	// 88095                  jmp     short loc_2896A ;~ 17C5:26EE
loc_28920:
	// 5151 
cs=0x17c5;eip=0x0026f0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 88099                  mov     ax, [bp+arg_2] ;~ 17C5:26F0
cs=0x17c5;eip=0x0026f3; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 88100                  mov     dx, [bp+arg_4] ;~ 17C5:26F3
cs=0x17c5;eip=0x0026f6; 	T(ADD(ax, 2));	// 88101                  add     ax, 2 ;~ 17C5:26F6
cs=0x17c5;eip=0x0026f9; 	T(ADC(dx, 0));	// 88102                  adc     dx, 0 ;~ 17C5:26F9
cs=0x17c5;eip=0x0026fc; 	T(cl = 2;);	// 88103                  mov     cl, 2 ;~ 17C5:26FC
loc_2892e:
	// 5152 
cs=0x17c5;eip=0x0026fe; 	T(SHR(dx, 1));	// 88106                  shr     dx, 1 ;~ 17C5:26FE
cs=0x17c5;eip=0x002700; 	T(RCR(ax, 1));	// 88107                  rcr     ax, 1 ;~ 17C5:2700
cs=0x17c5;eip=0x002702; 	T(DEC(cl));	// 88108                  dec     cl ;~ 17C5:2702
cs=0x17c5;eip=0x002704; 	J(JZ(loc_28938));	// 88109                  jz      short loc_28938 ;~ 17C5:2704
cs=0x17c5;eip=0x002706; 	J(JMP(loc_2892e));	// 88110                  jmp     short loc_2892E ;~ 17C5:2706
loc_28938:
	// 5153 
cs=0x17c5;eip=0x002708; 	J(JMP(loc_2896a));	// 88114                  jmp     short loc_2896A ;~ 17C5:2708
loc_2893a:
	// 5154 
cs=0x17c5;eip=0x00270a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 88118                  mov     ax, [bp+arg_2] ;~ 17C5:270A
cs=0x17c5;eip=0x00270d; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 88119                  mov     dx, [bp+arg_4] ;~ 17C5:270D
cs=0x17c5;eip=0x002710; 	J(JMP(loc_2896a));	// 88120                  jmp     short loc_2896A ;~ 17C5:2710
loc_28942:
	// 5155 
cs=0x17c5;eip=0x002712; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 88124                  mov     ax, [bp+arg_2] ;~ 17C5:2712
cs=0x17c5;eip=0x002715; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 88125                  mov     dx, [bp+arg_4] ;~ 17C5:2715
cs=0x17c5;eip=0x002718; 	T(SHL(ax, 1));	// 88126                  shl     ax, 1 ;~ 17C5:2718
cs=0x17c5;eip=0x00271a; 	T(RCL(dx, 1));	// 88127                  rcl     dx, 1 ;~ 17C5:271A
cs=0x17c5;eip=0x00271c; 	J(JMP(loc_2896a));	// 88128                  jmp     short loc_2896A ;~ 17C5:271C
ret_17c5_271e:
	// 5156 
cs=0x17c5;eip=0x00271e; 	J(JMP(loc_2896a));	// 88130                  jmp     short loc_2896A ;~ 17C5:271E
loc_28950:
	// 5157 
cs=0x17c5;eip=0x002720; 	T(OR(ax, ax));	// 88134                  or      ax, ax ;~ 17C5:2720
cs=0x17c5;eip=0x002722; 	J(JZ(loc_28942));	// 88135                  jz      short loc_28942 ;~ 17C5:2722
cs=0x17c5;eip=0x002724; 	T(CMP(ax, 1));	// 88136                  cmp     ax, 1 ;~ 17C5:2724
cs=0x17c5;eip=0x002727; 	J(JZ(loc_2893a));	// 88137                  jz      short loc_2893A ;~ 17C5:2727
cs=0x17c5;eip=0x002729; 	T(CMP(ax, 2));	// 88138                  cmp     ax, 2 ;~ 17C5:2729
cs=0x17c5;eip=0x00272c; 	J(JZ(loc_28920));	// 88139                  jz      short loc_28920 ;~ 17C5:272C
cs=0x17c5;eip=0x00272e; 	T(CMP(ax, 3));	// 88140                  cmp     ax, 3 ;~ 17C5:272E
cs=0x17c5;eip=0x002731; 	J(JZ(loc_28906));	// 88141                  jz      short loc_28906 ;~ 17C5:2731
cs=0x17c5;eip=0x002733; 	T(CMP(ax, 4));	// 88142                  cmp     ax, 4 ;~ 17C5:2733
cs=0x17c5;eip=0x002736; 	J(JZ(loc_288ec));	// 88143                  jz      short loc_288EC ;~ 17C5:2736
cs=0x17c5;eip=0x002738; 	J({;});	// 88144                  jmp     short $+2 ;~ 17C5:2738
loc_2896a:
	// 5158 
cs=0x17c5;eip=0x00273a; 	T(sp = bp;);	// 88149                  mov     sp, bp ;~ 17C5:273A
cs=0x17c5;eip=0x00273c; 	X(POP(bp));	// 88150                  pop     bp ;~ 17C5:273C
cs=0x17c5;eip=0x00273d; 	J(RETN(0));	// 88151                  retn ;~ 17C5:273D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_288ec: 	goto loc_288ec;
        case m2c::kloc_288fa: 	goto loc_288fa;
        case m2c::kloc_28904: 	goto loc_28904;
        case m2c::kloc_28906: 	goto loc_28906;
        case m2c::kloc_28914: 	goto loc_28914;
        case m2c::kloc_2891e: 	goto loc_2891e;
        case m2c::kloc_28920: 	goto loc_28920;
        case m2c::kloc_2892e: 	goto loc_2892e;
        case m2c::kloc_28938: 	goto loc_28938;
        case m2c::kloc_2893a: 	goto loc_2893a;
        case m2c::kloc_28942: 	goto loc_28942;
        case m2c::kloc_28950: 	goto loc_28950;
        case m2c::kloc_2896a: 	goto loc_2896a;
        case m2c::kret_17c5_271e: 	goto ret_17c5_271e;
        case m2c::ksub_288e4: 	goto sub_288e4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group24(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group24:
    _begin:
sub_2896e:
	// 88159 
#undef arg_0
#define arg_0 4
	// 88162 arg_0           = word ptr  4 ;~ 17C5:273E
cs=0x17c5;eip=0x00273e; 	X(PUSH(bp));	// 88164                  push    bp ;~ 17C5:273E
cs=0x17c5;eip=0x00273f; 	T(bp = sp;);	// 88165                  mov     bp, sp ;~ 17C5:273F
cs=0x17c5;eip=0x002741; 	X(PUSH(si));	// 88166                  push    si ;~ 17C5:2741
cs=0x17c5;eip=0x002742; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 4));	// 88167                  cmp     [bp+arg_0], 4 ;~ 17C5:2742
seg2623_2746_proc:
	// 88170 
cs=0x17c5;eip=0x002746; 	J(JNZ(loc_28980));	// 88170                  jnz     short loc_28980 ;~ 17C5:2746
cs=0x17c5;eip=0x002748; 	X(ADD(*(dw*)(raddr(ss,bp+6)), 2));	// 88171                  add     word ptr [bp+6], 2 ;~ 17C5:2748
cs=0x17c5;eip=0x00274c; 	X(ADD(*(dw*)(raddr(ss,bp+8)), 2));	// 88172                  add     word ptr [bp+8], 2 ;~ 17C5:274C
loc_28980:
	// 5159 
cs=0x17c5;eip=0x002750; 	T(CMP(*(dw*)(raddr(ss,bp+6)), 0));	// 88175                  cmp     word ptr [bp+6], 0 ;~ 17C5:2750
cs=0x17c5;eip=0x002754; 	J(JL(loc_2899f));	// 88176                  jl      short loc_2899F ;~ 17C5:2754
cs=0x17c5;eip=0x002756; 	T(CMP(*(dw*)(raddr(ss,bp+8)), 0));	// 88177                  cmp     word ptr [bp+8], 0 ;~ 17C5:2756
cs=0x17c5;eip=0x00275a; 	J(JL(loc_2899f));	// 88178                  jl      short loc_2899F ;~ 17C5:275A
cs=0x17c5;eip=0x00275c; 	T(MOV(bx, *(dw*)(raddr(ss,bp+4))));	// 88179                  mov     bx, [bp+4] ;~ 17C5:275C
cs=0x17c5;eip=0x00275f; 	T(SHL(bx, 1));	// 88180                  shl     bx, 1 ;~ 17C5:275F
cs=0x17c5;eip=0x002761; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x12FE))));	// 88181                  mov     si, [bx+12FEh] ;~ 17C5:2761
cs=0x17c5;eip=0x002765; 	T(CMP(*(dw*)(raddr(ss,bp+6)), si));	// 88182                  cmp     [bp+6], si ;~ 17C5:2765
cs=0x17c5;eip=0x002768; 	J(JGE(loc_2899f));	// 88183                  jge     short loc_2899F ;~ 17C5:2768
cs=0x17c5;eip=0x00276a; 	T(CMP(*(dw*)(raddr(ss,bp+8)), si));	// 88184                  cmp     [bp+8], si ;~ 17C5:276A
cs=0x17c5;eip=0x00276d; 	J(JL(loc_289a4));	// 88185                  jl      short loc_289A4 ;~ 17C5:276D
loc_2899f:
	// 5160 
cs=0x17c5;eip=0x00276f; 	T(SUB(ax, ax));	// 88189                  sub     ax, ax ;~ 17C5:276F
cs=0x17c5;eip=0x002771; 	J(JMP(loc_28a9e));	// 88190                  jmp     loc_28A9E ;~ 17C5:2771
loc_289a4:
	// 5161 
cs=0x17c5;eip=0x002774; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 88194                  mov     ax, [bp+4] ;~ 17C5:2774
cs=0x17c5;eip=0x002777; 	J(JMP(loc_28a7b));	// 88195                  jmp     loc_28A7B ;~ 17C5:2777
loc_289aa:
	// 5162 
cs=0x17c5;eip=0x00277a; 	T(MOV(si, *(dw*)(raddr(ss,bp+8))));	// 88199                  mov     si, [bp+8] ;~ 17C5:277A
cs=0x17c5;eip=0x00277d; 	T(cl = 3;);	// 88200                  mov     cl, 3 ;~ 17C5:277D
cs=0x17c5;eip=0x00277f; 	T(SHL(si, cl));	// 88201                  shl     si, cl ;~ 17C5:277F
cs=0x17c5;eip=0x002781; 	T(MOV(bx, *(dw*)(raddr(ss,bp+6))));	// 88202                  mov     bx, [bp+6] ;~ 17C5:2781
cs=0x17c5;eip=0x002784; 	T(MOV(al, *(raddr(ds,bx+si-0x7FB0))));	// 88203                  mov     al, [bx+si-7FB0h] ;~ 17C5:2784
cs=0x17c5;eip=0x002788; 	T(SUB(ah, ah));	// 88204                  sub     ah, ah ;~ 17C5:2788
cs=0x17c5;eip=0x00278a; 	J(JMP(loc_28a9e));	// 88205                  jmp     loc_28A9E ;~ 17C5:278A
loc_289bd:
	// 5163 
cs=0x17c5;eip=0x00278d; 	T(MOV(si, *(dw*)(raddr(ss,bp+8))));	// 88209                  mov     si, [bp+8] ;~ 17C5:278D
cs=0x17c5;eip=0x002790; 	T(cl = 4;);	// 88210                  mov     cl, 4 ;~ 17C5:2790
cs=0x17c5;eip=0x002792; 	T(SHL(si, cl));	// 88211                  shl     si, cl ;~ 17C5:2792
cs=0x17c5;eip=0x002794; 	T(MOV(bx, *(dw*)(raddr(ss,bp+6))));	// 88212                  mov     bx, [bp+6] ;~ 17C5:2794
cs=0x17c5;eip=0x002797; 	T(MOV(al, *(raddr(ds,bx+si+0x6FAA))));	// 88213                  mov     al, [bx+si+6FAAh] ;~ 17C5:2797
cs=0x17c5;eip=0x00279b; 	T(SUB(ah, ah));	// 88214                  sub     ah, ah ;~ 17C5:279B
cs=0x17c5;eip=0x00279d; 	J(JMP(loc_28a9e));	// 88215                  jmp     loc_28A9E ;~ 17C5:279D
loc_289d0:
	// 5164 
cs=0x17c5;eip=0x0027a0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 88219                  mov     ax, [bp+8] ;~ 17C5:27A0
cs=0x17c5;eip=0x0027a3; 	T(SAR(ax, 1));	// 88220                  sar     ax, 1 ;~ 17C5:27A3
cs=0x17c5;eip=0x0027a5; 	T(SAR(ax, 1));	// 88221                  sar     ax, 1 ;~ 17C5:27A5
cs=0x17c5;eip=0x0027a7; 	X(PUSH(ax));	// 88222                  push    ax ;~ 17C5:27A7
cs=0x17c5;eip=0x0027a8; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 88223                  mov     ax, [bp+6] ;~ 17C5:27A8
cs=0x17c5;eip=0x0027ab; 	T(SAR(ax, 1));	// 88224                  sar     ax, 1 ;~ 17C5:27AB
cs=0x17c5;eip=0x0027ad; 	T(SAR(ax, 1));	// 88225                  sar     ax, 1 ;~ 17C5:27AD
cs=0x17c5;eip=0x0027af; 	X(PUSH(ax));	// 88226                  push    ax ;~ 17C5:27AF
cs=0x17c5;eip=0x0027b0; 	T(ax = 3;);	// 88227                  mov     ax, 3 ;~ 17C5:27B0
cs=0x17c5;eip=0x0027b3; 	X(PUSH(ax));	// 88228                  push    ax ;~ 17C5:27B3
cs=0x17c5;eip=0x0027b4; 	J(CALL(sub_2896e,0));	// 88229                  call    sub_2896E ;~ 17C5:27B4
cs=0x17c5;eip=0x0027b7; 	T(ADD(sp, 6));	// 88230                  add     sp, 6 ;~ 17C5:27B7
cs=0x17c5;eip=0x0027ba; 	T(cl = 4;);	// 88231                  mov     cl, 4 ;~ 17C5:27BA
cs=0x17c5;eip=0x0027bc; 	T(SHL(ax, cl));	// 88232                  shl     ax, cl ;~ 17C5:27BC
cs=0x17c5;eip=0x0027be; 	T(MOV(si, *(dw*)(raddr(ss,bp+8))));	// 88233                  mov     si, [bp+8] ;~ 17C5:27BE
cs=0x17c5;eip=0x0027c1; 	T(AND(si, 3));	// 88234                  and     si, 3 ;~ 17C5:27C1
cs=0x17c5;eip=0x0027c4; 	T(SHL(si, 1));	// 88235                  shl     si, 1 ;~ 17C5:27C4
cs=0x17c5;eip=0x0027c6; 	T(SHL(si, 1));	// 88236                  shl     si, 1 ;~ 17C5:27C6
cs=0x17c5;eip=0x0027c8; 	T(ADD(si, ax));	// 88237                  add     si, ax ;~ 17C5:27C8
cs=0x17c5;eip=0x0027ca; 	T(MOV(bx, *(dw*)(raddr(ss,bp+6))));	// 88238                  mov     bx, [bp+6] ;~ 17C5:27CA
cs=0x17c5;eip=0x0027cd; 	T(AND(bx, 3));	// 88239                  and     bx, 3 ;~ 17C5:27CD
cs=0x17c5;eip=0x0027d0; 	T(MOV(al, *(raddr(ds,bx+si+0x6D58))));	// 88240                  mov     al, [bx+si+6D58h] ;~ 17C5:27D0
cs=0x17c5;eip=0x0027d4; 	T(SUB(ah, ah));	// 88241                  sub     ah, ah ;~ 17C5:27D4
cs=0x17c5;eip=0x0027d6; 	J(JMP(loc_28a9e));	// 88242                  jmp     loc_28A9E ;~ 17C5:27D6
loc_28a09:
	// 5165 
cs=0x17c5;eip=0x0027d9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 88246                  mov     ax, [bp+8] ;~ 17C5:27D9
cs=0x17c5;eip=0x0027dc; 	T(SAR(ax, 1));	// 88247                  sar     ax, 1 ;~ 17C5:27DC
cs=0x17c5;eip=0x0027de; 	T(SAR(ax, 1));	// 88248                  sar     ax, 1 ;~ 17C5:27DE
cs=0x17c5;eip=0x0027e0; 	X(PUSH(ax));	// 88249                  push    ax ;~ 17C5:27E0
cs=0x17c5;eip=0x0027e1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 88250                  mov     ax, [bp+6] ;~ 17C5:27E1
cs=0x17c5;eip=0x0027e4; 	T(SAR(ax, 1));	// 88251                  sar     ax, 1 ;~ 17C5:27E4
cs=0x17c5;eip=0x0027e6; 	T(SAR(ax, 1));	// 88252                  sar     ax, 1 ;~ 17C5:27E6
cs=0x17c5;eip=0x0027e8; 	X(PUSH(ax));	// 88253                  push    ax ;~ 17C5:27E8
cs=0x17c5;eip=0x0027e9; 	T(ax = 2;);	// 88254                  mov     ax, 2 ;~ 17C5:27E9
cs=0x17c5;eip=0x0027ec; 	X(PUSH(ax));	// 88255                  push    ax ;~ 17C5:27EC
cs=0x17c5;eip=0x0027ed; 	J(CALL(sub_2896e,0));	// 88256                  call    sub_2896E ;~ 17C5:27ED
cs=0x17c5;eip=0x0027f0; 	T(ADD(sp, 6));	// 88257                  add     sp, 6 ;~ 17C5:27F0
cs=0x17c5;eip=0x0027f3; 	T(cl = 4;);	// 88258                  mov     cl, 4 ;~ 17C5:27F3
cs=0x17c5;eip=0x0027f5; 	T(SHL(ax, cl));	// 88259                  shl     ax, cl ;~ 17C5:27F5
cs=0x17c5;eip=0x0027f7; 	T(MOV(si, *(dw*)(raddr(ss,bp+8))));	// 88260                  mov     si, [bp+8] ;~ 17C5:27F7
loc_28a2a:
	// 5166 
cs=0x17c5;eip=0x0027fa; 	T(AND(si, 3));	// 88263                  and     si, 3 ;~ 17C5:27FA
cs=0x17c5;eip=0x0027fd; 	T(SHL(si, 1));	// 88264                  shl     si, 1 ;~ 17C5:27FD
cs=0x17c5;eip=0x0027ff; 	T(SHL(si, 1));	// 88265                  shl     si, 1 ;~ 17C5:27FF
cs=0x17c5;eip=0x002801; 	T(ADD(si, ax));	// 88266                  add     si, ax ;~ 17C5:2801
cs=0x17c5;eip=0x002803; 	T(MOV(bx, *(dw*)(raddr(ss,bp+6))));	// 88267                  mov     bx, [bp+6] ;~ 17C5:2803
cs=0x17c5;eip=0x002806; 	T(AND(bx, 3));	// 88268                  and     bx, 3 ;~ 17C5:2806
cs=0x17c5;eip=0x002809; 	T(MOV(al, *(raddr(ds,bx+si+0x6952))));	// 88269                  mov     al, [bx+si+6952h] ;~ 17C5:2809
cs=0x17c5;eip=0x00280d; 	T(SUB(ah, ah));	// 88270                  sub     ah, ah ;~ 17C5:280D
cs=0x17c5;eip=0x00280f; 	J(JMP(loc_28a9e));	// 88271                  jmp     short loc_28A9E ;~ 17C5:280F
loc_28a41:
	// 5167 
cs=0x17c5;eip=0x002811; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 88275                  mov     ax, [bp+8] ;~ 17C5:2811
cs=0x17c5;eip=0x002814; 	T(SAR(ax, 1));	// 88276                  sar     ax, 1 ;~ 17C5:2814
cs=0x17c5;eip=0x002816; 	T(SAR(ax, 1));	// 88277                  sar     ax, 1 ;~ 17C5:2816
cs=0x17c5;eip=0x002818; 	X(PUSH(ax));	// 88278                  push    ax ;~ 17C5:2818
cs=0x17c5;eip=0x002819; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 88279                  mov     ax, [bp+6] ;~ 17C5:2819
cs=0x17c5;eip=0x00281c; 	T(SAR(ax, 1));	// 88280                  sar     ax, 1 ;~ 17C5:281C
cs=0x17c5;eip=0x00281e; 	T(SAR(ax, 1));	// 88281                  sar     ax, 1 ;~ 17C5:281E
cs=0x17c5;eip=0x002820; 	X(PUSH(ax));	// 88282                  push    ax ;~ 17C5:2820
cs=0x17c5;eip=0x002821; 	T(ax = 1;);	// 88283                  mov     ax, 1 ;~ 17C5:2821
cs=0x17c5;eip=0x002824; 	X(PUSH(ax));	// 88284                  push    ax ;~ 17C5:2824
cs=0x17c5;eip=0x002825; 	J(CALL(sub_2896e,0));	// 88285                  call    sub_2896E ;~ 17C5:2825
cs=0x17c5;eip=0x002828; 	T(ADD(sp, 6));	// 88286                  add     sp, 6 ;~ 17C5:2828
cs=0x17c5;eip=0x00282b; 	T(cl = 4;);	// 88287                  mov     cl, 4 ;~ 17C5:282B
cs=0x17c5;eip=0x00282d; 	T(SHL(ax, cl));	// 88288                  shl     ax, cl ;~ 17C5:282D
cs=0x17c5;eip=0x00282f; 	T(MOV(si, *(dw*)(raddr(ss,bp+8))));	// 88289                  mov     si, [bp+8] ;~ 17C5:282F
cs=0x17c5;eip=0x002832; 	T(AND(si, 3));	// 88290                  and     si, 3 ;~ 17C5:2832
cs=0x17c5;eip=0x002835; 	T(SHL(si, 1));	// 88291                  shl     si, 1 ;~ 17C5:2835
cs=0x17c5;eip=0x002837; 	T(SHL(si, 1));	// 88292                  shl     si, 1 ;~ 17C5:2837
cs=0x17c5;eip=0x002839; 	T(ADD(si, ax));	// 88293                  add     si, ax ;~ 17C5:2839
cs=0x17c5;eip=0x00283b; 	T(MOV(bx, *(dw*)(raddr(ss,bp+6))));	// 88294                  mov     bx, [bp+6] ;~ 17C5:283B
cs=0x17c5;eip=0x00283e; 	T(AND(bx, 3));	// 88295                  and     bx, 3 ;~ 17C5:283E
cs=0x17c5;eip=0x002841; 	T(MOV(al, *(raddr(ds,bx+si+0x674E))));	// 88296                  mov     al, [bx+si+674Eh] ;~ 17C5:2841
cs=0x17c5;eip=0x002845; 	T(SUB(ah, ah));	// 88297                  sub     ah, ah ;~ 17C5:2845
cs=0x17c5;eip=0x002847; 	J(JMP(loc_28a9e));	// 88298                  jmp     short loc_28A9E ;~ 17C5:2847
ret_17c5_2849:
	// 5168 
cs=0x17c5;eip=0x002849; 	J(JMP(loc_28a9e));	// 88300                  jmp     short loc_28A9E ;~ 17C5:2849
loc_28a7b:
	// 5169 
cs=0x17c5;eip=0x00284b; 	T(OR(ax, ax));	// 88304                  or      ax, ax ;~ 17C5:284B
cs=0x17c5;eip=0x00284d; 	J(JZ(loc_28a41));	// 88305                  jz      short loc_28A41 ;~ 17C5:284D
cs=0x17c5;eip=0x00284f; 	T(CMP(ax, 1));	// 88306                  cmp     ax, 1 ;~ 17C5:284F
cs=0x17c5;eip=0x002852; 	J(JZ(loc_28a09));	// 88307                  jz      short loc_28A09 ;~ 17C5:2852
cs=0x17c5;eip=0x002854; 	T(CMP(ax, 2));	// 88308                  cmp     ax, 2 ;~ 17C5:2854
cs=0x17c5;eip=0x002857; 	J(JNZ(loc_28a8c));	// 88309                  jnz     short loc_28A8C ;~ 17C5:2857
cs=0x17c5;eip=0x002859; 	J(JMP(loc_289d0));	// 88310                  jmp     loc_289D0 ;~ 17C5:2859
loc_28a8c:
	// 5170 
cs=0x17c5;eip=0x00285c; 	T(CMP(ax, 3));	// 88314                  cmp     ax, 3 ;~ 17C5:285C
cs=0x17c5;eip=0x00285f; 	J(JNZ(loc_28a94));	// 88315                  jnz     short loc_28A94 ;~ 17C5:285F
cs=0x17c5;eip=0x002861; 	J(JMP(loc_289bd));	// 88316                  jmp     loc_289BD ;~ 17C5:2861
loc_28a94:
	// 5171 
cs=0x17c5;eip=0x002864; 	T(CMP(ax, 4));	// 88320                  cmp     ax, 4 ;~ 17C5:2864
cs=0x17c5;eip=0x002867; 	J(JNZ(loc_28a9c));	// 88321                  jnz     short loc_28A9C ;~ 17C5:2867
cs=0x17c5;eip=0x002869; 	J(JMP(loc_289aa));	// 88322                  jmp     loc_289AA ;~ 17C5:2869
loc_28a9c:
	// 5172 
cs=0x17c5;eip=0x00286c; 	J({;});	// 88326                  jmp     short $+2 ;~ 17C5:286C
loc_28a9e:
	// 5173 
cs=0x17c5;eip=0x00286e; 	X(POP(si));	// 88331                  pop     si ;~ 17C5:286E
cs=0x17c5;eip=0x00286f; 	T(sp = bp;);	// 88332                  mov     sp, bp ;~ 17C5:286F
cs=0x17c5;eip=0x002871; 	X(POP(bp));	// 88333                  pop     bp ;~ 17C5:2871
cs=0x17c5;eip=0x002872; 	J(RETN(0));	// 88334                  retn ;~ 17C5:2872

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_28980: 	goto loc_28980;
        case m2c::kloc_2899f: 	goto loc_2899f;
        case m2c::kloc_289a4: 	goto loc_289a4;
        case m2c::kloc_289aa: 	goto loc_289aa;
        case m2c::kloc_289bd: 	goto loc_289bd;
        case m2c::kloc_289d0: 	goto loc_289d0;
        case m2c::kloc_28a09: 	goto loc_28a09;
        case m2c::kloc_28a2a: 	goto loc_28a2a;
        case m2c::kloc_28a41: 	goto loc_28a41;
        case m2c::kloc_28a7b: 	goto loc_28a7b;
        case m2c::kloc_28a8c: 	goto loc_28a8c;
        case m2c::kloc_28a94: 	goto loc_28a94;
        case m2c::kloc_28a9c: 	goto loc_28a9c;
        case m2c::kloc_28a9e: 	goto loc_28a9e;
        case m2c::kret_17c5_2849: 	goto ret_17c5_2849;
        case m2c::kseg2623_2746_proc: 	goto seg2623_2746_proc;
        case m2c::ksub_2896e: 	goto sub_2896e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group25(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group25:
    _begin:
sub_28aa4:
	// 88343 
cs=0x17c5;eip=0x002874; 	X(PUSH(bp));	// 88344                  push    bp ;~ 17C5:2874
cs=0x17c5;eip=0x002875; 	T(bp = sp;);	// 88345                  mov     bp, sp ;~ 17C5:2875
cs=0x17c5;eip=0x002877; 	J(CALL(sub_29084,0));	// 88346                  call    sub_29084 ;~ 17C5:2877
seg2623_287a_proc:
	// 88350 
cs=0x17c5;eip=0x00287a; 	X(PUSH(word_48b6a));	// 88350                  push    word_48B6A ;~ 17C5:287A
cs=0x17c5;eip=0x00287e; 	J(CALL(sub_28eb2,0));	// 88351                  call    sub_28EB2 ;~ 17C5:287E
cs=0x17c5;eip=0x002881; 	T(ADD(sp, 2));	// 88352                  add     sp, 2 ;~ 17C5:2881
cs=0x17c5;eip=0x002884; 	X(PUSH(word_48b6a));	// 88353                  push    word_48B6A ;~ 17C5:2884
cs=0x17c5;eip=0x002888; 	J(CALL(sub_28ac8,0));	// 88354                  call    sub_28AC8 ;~ 17C5:2888
cs=0x17c5;eip=0x00288b; 	T(ADD(sp, 2));	// 88357                  add     sp, 2 ;~ 17C5:288B
cs=0x17c5;eip=0x00288e; 	X(*(word_4a24a) = 0;);	// 88358                  mov     word_4A24A, 0 ;~ 17C5:288E
cs=0x17c5;eip=0x002894; 	T(sp = bp;);	// 88359                  mov     sp, bp ;~ 17C5:2894
cs=0x17c5;eip=0x002896; 	X(POP(bp));	// 88360                  pop     bp ;~ 17C5:2896
cs=0x17c5;eip=0x002897; 	J(RETN(0));	// 88361                  retn ;~ 17C5:2897

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_287a_proc: 	goto seg2623_287a_proc;
        case m2c::ksub_28aa4: 	goto sub_28aa4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_28ac8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_28ac8:
    _begin:
#undef var_18
#define var_18 -0x18
	// 88369 var_18          = word ptr -18h ;~ 17C5:2898
#undef var_16
#define var_16 -0x16
	// 88370 var_16          = word ptr -16h ;~ 17C5:2898
#undef var_14
#define var_14 -0x14
	// 88371 var_14          = word ptr -14h ;~ 17C5:2898
#undef var_12
#define var_12 -0x12
	// 88372 var_12          = word ptr -12h ;~ 17C5:2898
#undef var_10
#define var_10 -0x10
	// 88373 var_10          = word ptr -10h ;~ 17C5:2898
#undef var_e
#define var_e -0x0E
	// 88374 var_E           = word ptr -0Eh ;~ 17C5:2898
#undef var_c
#define var_c -0x0C
	// 88375 var_C           = word ptr -0Ch ;~ 17C5:2898
#undef var_a
#define var_a -0x0A
	// 88376 var_A           = word ptr -0Ah ;~ 17C5:2898
#undef var_8
#define var_8 -8
	// 88377 var_8           = byte ptr -8 ;~ 17C5:2898
#undef var_2
#define var_2 -2
	// 88378 var_2           = word ptr -2 ;~ 17C5:2898
#undef arg_0
#define arg_0 4
	// 88379 arg_0           = word ptr  4 ;~ 17C5:2898
cs=0x17c5;eip=0x002898; 	X(PUSH(bp));	// 88381                  push    bp ;~ 17C5:2898
cs=0x17c5;eip=0x002899; 	T(bp = sp;);	// 88383                  mov     bp, sp ;~ 17C5:2899
cs=0x17c5;eip=0x00289b; 	T(SUB(sp, 0x18));	// 88384                  sub     sp, 18h ;~ 17C5:289B
cs=0x17c5;eip=0x00289e; 	X(PUSH(si));	// 88385                  push    si ;~ 17C5:289E
cs=0x17c5;eip=0x00289f; 	T(ax = 0x176E;);	// 88386                  mov     ax, 176Eh ;~ 17C5:289F
cs=0x17c5;eip=0x0028a2; 	X(PUSH(ax));	// 88387                  push    ax ;~ 17C5:28A2
cs=0x17c5;eip=0x0028a3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 88388                  push    [bp+arg_0] ;~ 17C5:28A3
cs=0x17c5;eip=0x0028a6; 	J(CALL(sub_291df,0));	// 88389                  call    sub_291DF ;~ 17C5:28A6
cs=0x17c5;eip=0x0028a9; 	T(ADD(sp, 4));	// 88390                  add     sp, 4 ;~ 17C5:28A9
cs=0x17c5;eip=0x0028ac; 	T(ax = 0x1773;);	// 88391                  mov     ax, 1773h ;~ 17C5:28AC
cs=0x17c5;eip=0x0028af; 	X(PUSH(ax));	// 88392                  push    ax ;~ 17C5:28AF
cs=0x17c5;eip=0x0028b0; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 88393                  push    [bp+arg_0] ;~ 17C5:28B0
cs=0x17c5;eip=0x0028b3; 	J(CALL(sub_34954,0));	// 88394                  call    sub_34954 ;~ 17C5:28B3
cs=0x17c5;eip=0x0028b6; 	T(ADD(sp, 4));	// 88395                  add     sp, 4 ;~ 17C5:28B6
cs=0x17c5;eip=0x0028b9; 	X(word_4f216 = ax;);	// 88396                  mov     ds:word_4F216, ax ;~ 17C5:28B9
cs=0x17c5;eip=0x0028bc; 	T(OR(ax, ax));	// 88397                  or      ax, ax ;~ 17C5:28BC
cs=0x17c5;eip=0x0028be; 	J(JNZ(loc_28afd));	// 88398                  jnz     short loc_28AFD ;~ 17C5:28BE
cs=0x17c5;eip=0x0028c0; 	T(ax = offset(seg48ae,aopenerroron3d3););	// 88399                  mov     ax, offset aOpenErrorOn3d3 ; "Open Error on *.3D3" ;~ 17C5:28C0
cs=0x17c5;eip=0x0028c3; 	X(PUSH(ax));	// 88400                  push    ax              ; char * ;~ 17C5:28C3
cs=0x17c5;eip=0x0028c4; 	J(CALL(print_line,0));	// 88401                  call    print_line ;~ 17C5:28C4
cs=0x17c5;eip=0x0028c7; 	T(ADD(sp, 2));	// 88403                  add     sp, 2 ;~ 17C5:28C7
cs=0x17c5;eip=0x0028ca; 	J(JMP(loc_28ead));	// 88404                  jmp     loc_28EAD ;~ 17C5:28CA
loc_28afd:
	// 5174 
cs=0x17c5;eip=0x0028cd; 	X(PUSH(word_4f216));	// 88408                  push    ds:word_4F216 ;~ 17C5:28CD
cs=0x17c5;eip=0x0028d1; 	T(ax = 1;);	// 88409                  mov     ax, 1 ;~ 17C5:28D1
cs=0x17c5;eip=0x0028d4; 	X(PUSH(ax));	// 88410                  push    ax ;~ 17C5:28D4
cs=0x17c5;eip=0x0028d5; 	T(ax = 2;);	// 88411                  mov     ax, 2 ;~ 17C5:28D5
cs=0x17c5;eip=0x0028d8; 	X(PUSH(ax));	// 88412                  push    ax ;~ 17C5:28D8
cs=0x17c5;eip=0x0028d9; 	T(ax = 0x961A;);	// 88413                  mov     ax, 961Ah ;~ 17C5:28D9
cs=0x17c5;eip=0x0028dc; 	X(PUSH(ax));	// 88414                  push    ax ;~ 17C5:28DC
cs=0x17c5;eip=0x0028dd; 	J(CALL(sub_3497c,0));	// 88415                  call    sub_3497C ;~ 17C5:28DD
cs=0x17c5;eip=0x0028e0; 	T(ADD(sp, 8));	// 88416                  add     sp, 8 ;~ 17C5:28E0
cs=0x17c5;eip=0x0028e3; 	T(CMP(word_520fa, '33'));	// 88417                  cmp     ds:word_520FA, '33' ;~ 17C5:28E3
cs=0x17c5;eip=0x0028e9; 	J(JZ(loc_28b32));	// 88418                  jz      short loc_28B32 ;~ 17C5:28E9
cs=0x17c5;eip=0x0028eb; 	T(ax = offset(seg48ae,abadobjfileform););	// 88419                  mov     ax, offset aBadObjFileForm ; "Bad Obj file format." ;~ 17C5:28EB
cs=0x17c5;eip=0x0028ee; 	X(PUSH(ax));	// 88420                  push    ax              ; char * ;~ 17C5:28EE
cs=0x17c5;eip=0x0028ef; 	J(CALL(print_line,0));	// 88421                  call    print_line ;~ 17C5:28EF
cs=0x17c5;eip=0x0028f2; 	T(ADD(sp, 2));	// 88423                  add     sp, 2 ;~ 17C5:28F2
cs=0x17c5;eip=0x0028f5; 	X(PUSH(word_4f216));	// 88424                  push    ds:word_4F216 ;~ 17C5:28F5
cs=0x17c5;eip=0x0028f9; 	J(CALL(sub_3489a,0));	// 88425                  call    sub_3489A ;~ 17C5:28F9
cs=0x17c5;eip=0x0028fc; 	T(ADD(sp, 2));	// 88426                  add     sp, 2 ;~ 17C5:28FC
cs=0x17c5;eip=0x0028ff; 	J(JMP(loc_28ead));	// 88427                  jmp     loc_28EAD ;~ 17C5:28FF
loc_28b32:
	// 5175 
cs=0x17c5;eip=0x002902; 	X(PUSH(word_4f216));	// 88431                  push    ds:word_4F216 ;~ 17C5:2902
cs=0x17c5;eip=0x002906; 	T(ax = 1;);	// 88432                  mov     ax, 1 ;~ 17C5:2906
cs=0x17c5;eip=0x002909; 	X(PUSH(ax));	// 88433                  push    ax ;~ 17C5:2909
cs=0x17c5;eip=0x00290a; 	T(ax = 2;);	// 88434                  mov     ax, 2 ;~ 17C5:290A
cs=0x17c5;eip=0x00290d; 	X(PUSH(ax));	// 88435                  push    ax ;~ 17C5:290D
cs=0x17c5;eip=0x00290e; 	T(ax = 0x1308;);	// 88436                  mov     ax, 1308h ;~ 17C5:290E
cs=0x17c5;eip=0x002911; 	X(PUSH(ax));	// 88437                  push    ax ;~ 17C5:2911
cs=0x17c5;eip=0x002912; 	J(CALL(sub_3497c,0));	// 88438                  call    sub_3497C ;~ 17C5:2912
cs=0x17c5;eip=0x002915; 	T(ADD(sp, 8));	// 88439                  add     sp, 8 ;~ 17C5:2915
cs=0x17c5;eip=0x002918; 	X(PUSH(word_4f216));	// 88440                  push    ds:word_4F216 ;~ 17C5:2918
cs=0x17c5;eip=0x00291c; 	X(PUSH(*(word_49de8)));	// 88441                  push    word_49DE8 ;~ 17C5:291C
cs=0x17c5;eip=0x002920; 	T(ax = 2;);	// 88442                  mov     ax, 2 ;~ 17C5:2920
cs=0x17c5;eip=0x002923; 	X(PUSH(ax));	// 88443                  push    ax ;~ 17C5:2923
cs=0x17c5;eip=0x002924; 	T(ax = 0x130A;);	// 88444                  mov     ax, 130Ah ;~ 17C5:2924
cs=0x17c5;eip=0x002927; 	X(PUSH(ax));	// 88445                  push    ax ;~ 17C5:2927
cs=0x17c5;eip=0x002928; 	J(CALL(sub_3497c,0));	// 88446                  call    sub_3497C ;~ 17C5:2928
cs=0x17c5;eip=0x00292b; 	T(ADD(sp, 8));	// 88447                  add     sp, 8 ;~ 17C5:292B
cs=0x17c5;eip=0x00292e; 	X(PUSH(word_4f216));	// 88448                  push    ds:word_4F216 ;~ 17C5:292E
cs=0x17c5;eip=0x002932; 	T(ax = 1;);	// 88449                  mov     ax, 1 ;~ 17C5:2932
cs=0x17c5;eip=0x002935; 	X(PUSH(ax));	// 88450                  push    ax ;~ 17C5:2935
cs=0x17c5;eip=0x002936; 	T(ax = 2;);	// 88451                  mov     ax, 2 ;~ 17C5:2936
cs=0x17c5;eip=0x002939; 	X(PUSH(ax));	// 88452                  push    ax ;~ 17C5:2939
cs=0x17c5;eip=0x00293a; 	T(ax = 0x13D2;);	// 88453                  mov     ax, 13D2h ;~ 17C5:293A
cs=0x17c5;eip=0x00293d; 	X(PUSH(ax));	// 88454                  push    ax ;~ 17C5:293D
cs=0x17c5;eip=0x00293e; 	J(CALL(sub_3497c,0));	// 88455                  call    sub_3497C ;~ 17C5:293E
cs=0x17c5;eip=0x002941; 	T(ADD(sp, 8));	// 88456                  add     sp, 8 ;~ 17C5:2941
cs=0x17c5;eip=0x002944; 	T(CMP(word_49eb2, 0x0ADD4));	// 88457                  cmp     word_49EB2, 0ADD4h ;~ 17C5:2944
cs=0x17c5;eip=0x00294a; 	J(JBE(loc_28b93));	// 88458                  jbe     short loc_28B93 ;~ 17C5:294A
cs=0x17c5;eip=0x00294c; 	T(ax = offset(seg48ae,aobjectdatatoob););	// 88459                  mov     ax, offset aObjectDataTooB ; "Object data too big." ;~ 17C5:294C
cs=0x17c5;eip=0x00294f; 	X(PUSH(ax));	// 88460                  push    ax              ; char * ;~ 17C5:294F
cs=0x17c5;eip=0x002950; 	J(CALL(print_line,0));	// 88461                  call    print_line ;~ 17C5:2950
cs=0x17c5;eip=0x002953; 	T(ADD(sp, 2));	// 88463                  add     sp, 2 ;~ 17C5:2953
cs=0x17c5;eip=0x002956; 	X(PUSH(word_4f216));	// 88464                  push    ds:word_4F216 ;~ 17C5:2956
cs=0x17c5;eip=0x00295a; 	J(CALL(sub_3489a,0));	// 88465                  call    sub_3489A ;~ 17C5:295A
cs=0x17c5;eip=0x00295d; 	T(ADD(sp, 2));	// 88466                  add     sp, 2 ;~ 17C5:295D
cs=0x17c5;eip=0x002960; 	J(JMP(loc_28ead));	// 88467                  jmp     loc_28EAD ;~ 17C5:2960
loc_28b93:
	// 5176 
cs=0x17c5;eip=0x002963; 	T(ax = word_49eb2;);	// 88471                  mov     ax, word_49EB2 ;~ 17C5:2963
cs=0x17c5;eip=0x002966; 	T(ADD(ax, 0));	// 88472                  add     ax, 0 ;~ 17C5:2966
cs=0x17c5;eip=0x002969; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 88473                  mov     [bp+var_E], ax ;~ 17C5:2969
cs=0x17c5;eip=0x00296c; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), seg_offset(seg38b0)));	// 88474                  mov     [bp+var_C], seg seg38b0 ;~ 17C5:296C
cs=0x17c5;eip=0x002971; 	T(bx = *(word_49de8););	// 88475                  mov     bx, word_49DE8 ;~ 17C5:2971
cs=0x17c5;eip=0x002975; 	T(SHL(bx, 1));	// 88476                  shl     bx, 1 ;~ 17C5:2975
cs=0x17c5;eip=0x002977; 	T(ax = word_49eb2;);	// 88477                  mov     ax, word_49EB2 ;~ 17C5:2977
cs=0x17c5;eip=0x00297a; 	X(MOV(*(dw*)(raddr(ds,bx+0x130A)), ax));	// 88478                  mov     [bx+130Ah], ax ;~ 17C5:297A
cs=0x17c5;eip=0x00297e; 	T(ax = bp+var_8);	// 88479                  lea     ax, [bp+var_8] ;~ 17C5:297E
cs=0x17c5;eip=0x002981; 	X(PUSH(ax));	// 88480                  push    ax ;~ 17C5:2981
cs=0x17c5;eip=0x002982; 	J(CALL(sub_34d4e,0));	// 88481                  call    sub_34D4E ;~ 17C5:2982
cs=0x17c5;eip=0x002985; 	T(ADD(sp, 2));	// 88482                  add     sp, 2 ;~ 17C5:2985
cs=0x17c5;eip=0x002988; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), offset(seg38b0,unk_38b00)));	// 88483                  mov     [bp+var_16], offset unk_38B00 ;~ 17C5:2988
cs=0x17c5;eip=0x00298d; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), seg_offset(seg38b0)));	// 88484                  mov     [bp+var_14], seg seg38b0 ;~ 17C5:298D
cs=0x17c5;eip=0x002992; 	J(JMP(loc_28bcf));	// 88485                  jmp     short loc_28BCF ;~ 17C5:2992
loc_28bc4:
	// 5177 
cs=0x17c5;eip=0x002994; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 88490                  mov     ax, [bp+var_A] ;~ 17C5:2994
cs=0x17c5;eip=0x002997; 	X(SUB(word_49eb2, ax));	// 88491                  sub     word_49EB2, ax ;~ 17C5:2997
cs=0x17c5;eip=0x00299b; 	X(ADD(*(raddr(ss,bp+var_16+1)), 8));	// 88492                  add     byte ptr [bp+var_16+1], 8 ;~ 17C5:299B
loc_28bcf:
	// 5178 
cs=0x17c5;eip=0x00299f; 	T(CMP(word_49eb2, 0));	// 88495                  cmp     word_49EB2, 0 ;~ 17C5:299F
cs=0x17c5;eip=0x0029a4; 	J(JZ(loc_28c11));	// 88496                  jz      short loc_28C11 ;~ 17C5:29A4
cs=0x17c5;eip=0x0029a6; 	T(ax = word_49eb2;);	// 88497                  mov     ax, word_49EB2 ;~ 17C5:29A6
cs=0x17c5;eip=0x0029a9; 	T(SUB(ax, 0x800));	// 88498                  sub     ax, 800h ;~ 17C5:29A9
cs=0x17c5;eip=0x0029ac; 	T(SBB(cx, cx));	// 88499                  sbb     cx, cx ;~ 17C5:29AC
cs=0x17c5;eip=0x0029ae; 	T(AND(ax, cx));	// 88500                  and     ax, cx ;~ 17C5:29AE
cs=0x17c5;eip=0x0029b0; 	T(ADD(ah, 8));	// 88501                  add     ah, 8 ;~ 17C5:29B0
cs=0x17c5;eip=0x0029b3; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 88502                  mov     [bp+var_A], ax ;~ 17C5:29B3
cs=0x17c5;eip=0x0029b6; 	X(PUSH(word_4f216));	// 88503                  push    ds:word_4F216 ;~ 17C5:29B6
cs=0x17c5;eip=0x0029ba; 	X(PUSH(ax));	// 88504                  push    ax ;~ 17C5:29BA
cs=0x17c5;eip=0x0029bb; 	T(ax = 1;);	// 88505                  mov     ax, 1 ;~ 17C5:29BB
cs=0x17c5;eip=0x0029be; 	X(PUSH(ax));	// 88506                  push    ax ;~ 17C5:29BE
cs=0x17c5;eip=0x0029bf; 	T(ax = 0x328E;);	// 88507                  mov     ax, 328Eh ;~ 17C5:29BF
cs=0x17c5;eip=0x0029c2; 	X(PUSH(ax));	// 88508                  push    ax ;~ 17C5:29C2
cs=0x17c5;eip=0x0029c3; 	J(CALL(sub_3497c,0));	// 88509                  call    sub_3497C ;~ 17C5:29C3
cs=0x17c5;eip=0x0029c6; 	T(ADD(sp, 8));	// 88511                  add     sp, 8 ;~ 17C5:29C6
cs=0x17c5;eip=0x0029c9; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 88512                  push    [bp+var_A] ;~ 17C5:29C9
cs=0x17c5;eip=0x0029cc; 	X(PUSH(*(dw*)(raddr(ss,bp+var_16))));	// 88513                  push    [bp+var_16] ;~ 17C5:29CC
cs=0x17c5;eip=0x0029cf; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 88514                  push    [bp+var_14] ;~ 17C5:29CF
cs=0x17c5;eip=0x0029d2; 	T(ax = 0x328E;);	// 88515                  mov     ax, 328Eh ;~ 17C5:29D2
cs=0x17c5;eip=0x0029d5; 	X(PUSH(ax));	// 88516                  push    ax ;~ 17C5:29D5
cs=0x17c5;eip=0x0029d6; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 88517                  push    [bp+var_2] ;~ 17C5:29D6
cs=0x17c5;eip=0x0029d9; 	J(CALL(sub_34d30,0));	// 88518                  call    sub_34D30 ;~ 17C5:29D9
cs=0x17c5;eip=0x0029dc; 	T(ADD(sp, 0x0A));	// 88520                  add     sp, 0Ah ;~ 17C5:29DC
cs=0x17c5;eip=0x0029df; 	J(JMP(loc_28bc4));	// 88521                  jmp     short loc_28BC4 ;~ 17C5:29DF
loc_28c11:
	// 5179 
cs=0x17c5;eip=0x0029e1; 	X(PUSH(word_4f216));	// 88525                  push    ds:word_4F216 ;~ 17C5:29E1
cs=0x17c5;eip=0x0029e5; 	T(ax = 1;);	// 88526                  mov     ax, 1 ;~ 17C5:29E5
cs=0x17c5;eip=0x0029e8; 	X(PUSH(ax));	// 88527                  push    ax ;~ 17C5:29E8
cs=0x17c5;eip=0x0029e9; 	X(PUSH(ax));	// 88528                  push    ax ;~ 17C5:29E9
cs=0x17c5;eip=0x0029ea; 	T(ax = 0x1566;);	// 88529                  mov     ax, 1566h ;~ 17C5:29EA
cs=0x17c5;eip=0x0029ed; 	X(PUSH(ax));	// 88530                  push    ax ;~ 17C5:29ED
cs=0x17c5;eip=0x0029ee; 	J(CALL(sub_3497c,0));	// 88531                  call    sub_3497C ;~ 17C5:29EE
cs=0x17c5;eip=0x0029f1; 	T(ADD(sp, 8));	// 88533                  add     sp, 8 ;~ 17C5:29F1
cs=0x17c5;eip=0x0029f4; 	T(CMP(word_4a046, 0));	// 88534                  cmp     word_4A046, 0 ;~ 17C5:29F4
cs=0x17c5;eip=0x0029f9; 	J(JNZ(loc_28c2e));	// 88535                  jnz     short loc_28C2E ;~ 17C5:29F9
cs=0x17c5;eip=0x0029fb; 	J(JMP(loc_28ceb));	// 88536                  jmp     loc_28CEB ;~ 17C5:29FB
loc_28c2e:
	// 5180 
cs=0x17c5;eip=0x0029fe; 	X(PUSH(word_4f216));	// 88540                  push    ds:word_4F216 ;~ 17C5:29FE
cs=0x17c5;eip=0x002a02; 	X(PUSH(word_4a046));	// 88541                  push    word_4A046 ;~ 17C5:2A02
cs=0x17c5;eip=0x002a06; 	T(ax = 1;);	// 88542                  mov     ax, 1 ;~ 17C5:2A06
cs=0x17c5;eip=0x002a09; 	X(PUSH(ax));	// 88543                  push    ax ;~ 17C5:2A09
cs=0x17c5;eip=0x002a0a; 	T(ax = 0x865E;);	// 88544                  mov     ax, 865Eh ;~ 17C5:2A0A
cs=0x17c5;eip=0x002a0d; 	X(PUSH(ax));	// 88545                  push    ax ;~ 17C5:2A0D
cs=0x17c5;eip=0x002a0e; 	J(CALL(sub_3497c,0));	// 88546                  call    sub_3497C ;~ 17C5:2A0E
cs=0x17c5;eip=0x002a11; 	T(ADD(sp, 8));	// 88547                  add     sp, 8 ;~ 17C5:2A11
cs=0x17c5;eip=0x002a14; 	X(PUSH(word_4f216));	// 88548                  push    ds:word_4F216 ;~ 17C5:2A14
cs=0x17c5;eip=0x002a18; 	X(PUSH(word_4a046));	// 88549                  push    word_4A046 ;~ 17C5:2A18
cs=0x17c5;eip=0x002a1c; 	T(ax = 1;);	// 88550                  mov     ax, 1 ;~ 17C5:2A1C
cs=0x17c5;eip=0x002a1f; 	X(PUSH(ax));	// 88551                  push    ax ;~ 17C5:2A1F
cs=0x17c5;eip=0x002a20; 	T(ax = 0x87FE;);	// 88552                  mov     ax, 87FEh ;~ 17C5:2A20
cs=0x17c5;eip=0x002a23; 	X(PUSH(ax));	// 88553                  push    ax ;~ 17C5:2A23
cs=0x17c5;eip=0x002a24; 	J(CALL(sub_3497c,0));	// 88554                  call    sub_3497C ;~ 17C5:2A24
cs=0x17c5;eip=0x002a27; 	T(ADD(sp, 8));	// 88555                  add     sp, 8 ;~ 17C5:2A27
cs=0x17c5;eip=0x002a2a; 	X(PUSH(word_4f216));	// 88556                  push    ds:word_4F216 ;~ 17C5:2A2A
cs=0x17c5;eip=0x002a2e; 	X(PUSH(word_4a046));	// 88557                  push    word_4A046 ;~ 17C5:2A2E
cs=0x17c5;eip=0x002a32; 	T(ax = 1;);	// 88558                  mov     ax, 1 ;~ 17C5:2A32
cs=0x17c5;eip=0x002a35; 	X(PUSH(ax));	// 88559                  push    ax ;~ 17C5:2A35
cs=0x17c5;eip=0x002a36; 	T(ax = 0x88B8;);	// 88560                  mov     ax, 88B8h ;~ 17C5:2A36
cs=0x17c5;eip=0x002a39; 	X(PUSH(ax));	// 88561                  push    ax ;~ 17C5:2A39
cs=0x17c5;eip=0x002a3a; 	J(CALL(sub_3497c,0));	// 88562                  call    sub_3497C ;~ 17C5:2A3A
cs=0x17c5;eip=0x002a3d; 	T(ADD(sp, 8));	// 88563                  add     sp, 8 ;~ 17C5:2A3D
cs=0x17c5;eip=0x002a40; 	X(PUSH(word_4f216));	// 88564                  push    ds:word_4F216 ;~ 17C5:2A40
cs=0x17c5;eip=0x002a44; 	T(ax = 1;);	// 88565                  mov     ax, 1 ;~ 17C5:2A44
cs=0x17c5;eip=0x002a47; 	X(PUSH(ax));	// 88566                  push    ax ;~ 17C5:2A47
cs=0x17c5;eip=0x002a48; 	X(PUSH(ax));	// 88567                  push    ax ;~ 17C5:2A48
cs=0x17c5;eip=0x002a49; 	T(ax = 0x1560;);	// 88568                  mov     ax, 1560h ;~ 17C5:2A49
cs=0x17c5;eip=0x002a4c; 	X(PUSH(ax));	// 88569                  push    ax ;~ 17C5:2A4C
cs=0x17c5;eip=0x002a4d; 	J(CALL(sub_3497c,0));	// 88570                  call    sub_3497C ;~ 17C5:2A4D
cs=0x17c5;eip=0x002a50; 	T(ADD(sp, 8));	// 88571                  add     sp, 8 ;~ 17C5:2A50
cs=0x17c5;eip=0x002a53; 	X(PUSH(word_4f216));	// 88572                  push    ds:word_4F216 ;~ 17C5:2A53
cs=0x17c5;eip=0x002a57; 	X(PUSH(word_4a040));	// 88573                  push    word_4A040 ;~ 17C5:2A57
cs=0x17c5;eip=0x002a5b; 	T(ax = 2;);	// 88574                  mov     ax, 2 ;~ 17C5:2A5B
cs=0x17c5;eip=0x002a5e; 	X(PUSH(ax));	// 88575                  push    ax ;~ 17C5:2A5E
cs=0x17c5;eip=0x002a5f; 	T(ax = 0x954C;);	// 88576                  mov     ax, 954Ch ;~ 17C5:2A5F
cs=0x17c5;eip=0x002a62; 	X(PUSH(ax));	// 88577                  push    ax ;~ 17C5:2A62
cs=0x17c5;eip=0x002a63; 	J(CALL(sub_3497c,0));	// 88578                  call    sub_3497C ;~ 17C5:2A63
cs=0x17c5;eip=0x002a66; 	T(ADD(sp, 8));	// 88579                  add     sp, 8 ;~ 17C5:2A66
cs=0x17c5;eip=0x002a69; 	X(PUSH(word_4f216));	// 88580                  push    ds:word_4F216 ;~ 17C5:2A69
cs=0x17c5;eip=0x002a6d; 	T(ax = 1;);	// 88581                  mov     ax, 1 ;~ 17C5:2A6D
cs=0x17c5;eip=0x002a70; 	X(PUSH(ax));	// 88582                  push    ax ;~ 17C5:2A70
cs=0x17c5;eip=0x002a71; 	X(PUSH(ax));	// 88583                  push    ax ;~ 17C5:2A71
cs=0x17c5;eip=0x002a72; 	T(ax = 0x1562;);	// 88584                  mov     ax, 1562h ;~ 17C5:2A72
cs=0x17c5;eip=0x002a75; 	X(PUSH(ax));	// 88585                  push    ax ;~ 17C5:2A75
cs=0x17c5;eip=0x002a76; 	J(CALL(sub_3497c,0));	// 88586                  call    sub_3497C ;~ 17C5:2A76
cs=0x17c5;eip=0x002a79; 	T(ADD(sp, 8));	// 88587                  add     sp, 8 ;~ 17C5:2A79
cs=0x17c5;eip=0x002a7c; 	X(PUSH(word_4f216));	// 88588                  push    ds:word_4F216 ;~ 17C5:2A7C
cs=0x17c5;eip=0x002a80; 	X(PUSH(word_4a042));	// 88589                  push    word_4A042 ;~ 17C5:2A80
cs=0x17c5;eip=0x002a84; 	T(ax = 2;);	// 88590                  mov     ax, 2 ;~ 17C5:2A84
cs=0x17c5;eip=0x002a87; 	X(PUSH(ax));	// 88591                  push    ax ;~ 17C5:2A87
cs=0x17c5;eip=0x002a88; 	T(ax = 0x958E;);	// 88592                  mov     ax, 958Eh ;~ 17C5:2A88
cs=0x17c5;eip=0x002a8b; 	X(PUSH(ax));	// 88593                  push    ax ;~ 17C5:2A8B
cs=0x17c5;eip=0x002a8c; 	J(CALL(sub_3497c,0));	// 88594                  call    sub_3497C ;~ 17C5:2A8C
cs=0x17c5;eip=0x002a8f; 	T(ADD(sp, 8));	// 88595                  add     sp, 8 ;~ 17C5:2A8F
cs=0x17c5;eip=0x002a92; 	X(PUSH(word_4f216));	// 88596                  push    ds:word_4F216 ;~ 17C5:2A92
cs=0x17c5;eip=0x002a96; 	T(ax = 1;);	// 88597                  mov     ax, 1 ;~ 17C5:2A96
cs=0x17c5;eip=0x002a99; 	X(PUSH(ax));	// 88598                  push    ax ;~ 17C5:2A99
cs=0x17c5;eip=0x002a9a; 	X(PUSH(ax));	// 88599                  push    ax ;~ 17C5:2A9A
cs=0x17c5;eip=0x002a9b; 	T(ax = 0x1564;);	// 88600                  mov     ax, 1564h ;~ 17C5:2A9B
cs=0x17c5;eip=0x002a9e; 	X(PUSH(ax));	// 88601                  push    ax ;~ 17C5:2A9E
cs=0x17c5;eip=0x002a9f; 	J(CALL(sub_3497c,0));	// 88602                  call    sub_3497C ;~ 17C5:2A9F
cs=0x17c5;eip=0x002aa2; 	T(ADD(sp, 8));	// 88603                  add     sp, 8 ;~ 17C5:2AA2
cs=0x17c5;eip=0x002aa5; 	X(PUSH(word_4f216));	// 88604                  push    ds:word_4F216 ;~ 17C5:2AA5
cs=0x17c5;eip=0x002aa9; 	X(PUSH(word_4a044));	// 88605                  push    word_4A044 ;~ 17C5:2AA9
cs=0x17c5;eip=0x002aad; 	T(ax = 2;);	// 88606                  mov     ax, 2 ;~ 17C5:2AAD
cs=0x17c5;eip=0x002ab0; 	X(PUSH(ax));	// 88607                  push    ax ;~ 17C5:2AB0
cs=0x17c5;eip=0x002ab1; 	T(ax = 0x95D0;);	// 88608                  mov     ax, 95D0h ;~ 17C5:2AB1
cs=0x17c5;eip=0x002ab4; 	X(PUSH(ax));	// 88609                  push    ax ;~ 17C5:2AB4
cs=0x17c5;eip=0x002ab5; 	J(CALL(sub_3497c,0));	// 88610                  call    sub_3497C ;~ 17C5:2AB5
cs=0x17c5;eip=0x002ab8; 	T(ADD(sp, 8));	// 88611                  add     sp, 8 ;~ 17C5:2AB8
loc_28ceb:
	// 5181 
cs=0x17c5;eip=0x002abb; 	X(PUSH(word_4f216));	// 88614                  push    ds:word_4F216 ;~ 17C5:2ABB
cs=0x17c5;eip=0x002abf; 	J(CALL(sub_3489a,0));	// 88615                  call    sub_3489A ;~ 17C5:2ABF
cs=0x17c5;eip=0x002ac2; 	T(ADD(sp, 2));	// 88616                  add     sp, 2 ;~ 17C5:2AC2
loc_28cf5:
	// 5182 
cs=0x17c5;eip=0x002ac5; 	T(ax = 0x17B4;);	// 88619                  mov     ax, 17B4h ;~ 17C5:2AC5
cs=0x17c5;eip=0x002ac8; 	X(PUSH(ax));	// 88620                  push    ax ;~ 17C5:2AC8
cs=0x17c5;eip=0x002ac9; 	T(ax = 0x17B7;);	// 88621                  mov     ax, 17B7h ;~ 17C5:2AC9
cs=0x17c5;eip=0x002acc; 	X(PUSH(ax));	// 88622                  push    ax ;~ 17C5:2ACC
cs=0x17c5;eip=0x002acd; 	J(CALL(sub_34954,0));	// 88623                  call    sub_34954 ;~ 17C5:2ACD
cs=0x17c5;eip=0x002ad0; 	T(ADD(sp, 4));	// 88624                  add     sp, 4 ;~ 17C5:2AD0
cs=0x17c5;eip=0x002ad3; 	X(word_4f216 = ax;);	// 88625                  mov     ds:word_4F216, ax ;~ 17C5:2AD3
cs=0x17c5;eip=0x002ad6; 	T(OR(ax, ax));	// 88626                  or      ax, ax ;~ 17C5:2AD6
cs=0x17c5;eip=0x002ad8; 	J(JNZ(loc_28d4a));	// 88627                  jnz     short loc_28D4A ;~ 17C5:2AD8
cs=0x17c5;eip=0x002ada; 	T(SUB(ax, ax));	// 88628                  sub     ax, ax ;~ 17C5:2ADA
cs=0x17c5;eip=0x002adc; 	X(PUSH(ax));	// 88629                  push    ax ;~ 17C5:2ADC
cs=0x17c5;eip=0x002add; 	J(CALL(sub_30074,0));	// 88630                  call    sub_30074 ;~ 17C5:2ADD
cs=0x17c5;eip=0x002ae0; 	T(ADD(sp, 2));	// 88631                  add     sp, 2 ;~ 17C5:2AE0
cs=0x17c5;eip=0x002ae3; 	T(ax = 0x2D;);	// 88632                  mov     ax, 2Dh ; '-' ;~ 17C5:2AE3
cs=0x17c5;eip=0x002ae6; 	X(PUSH(ax));	// 88633                  push    ax ;~ 17C5:2AE6
cs=0x17c5;eip=0x002ae7; 	T(ax = 0x13F;);	// 88634                  mov     ax, 13Fh ;~ 17C5:2AE7
cs=0x17c5;eip=0x002aea; 	X(PUSH(ax));	// 88635                  push    ax ;~ 17C5:2AEA
cs=0x17c5;eip=0x002aeb; 	T(ax = 0x28;);	// 88636                  mov     ax, 28h ; '(' ;~ 17C5:2AEB
cs=0x17c5;eip=0x002aee; 	X(PUSH(ax));	// 88637                  push    ax ;~ 17C5:2AEE
cs=0x17c5;eip=0x002aef; 	T(SUB(ax, ax));	// 88638                  sub     ax, ax ;~ 17C5:2AEF
cs=0x17c5;eip=0x002af1; 	X(PUSH(ax));	// 88639                  push    ax ;~ 17C5:2AF1
cs=0x17c5;eip=0x002af2; 	J(CALL(sub_3008d,0));	// 88640                  call    sub_3008D ;~ 17C5:2AF2
cs=0x17c5;eip=0x002af5; 	T(ADD(sp, 8));	// 88642                  add     sp, 8 ;~ 17C5:2AF5
cs=0x17c5;eip=0x002af8; 	T(ax = 0x0F;);	// 88643                  mov     ax, 0Fh ;~ 17C5:2AF8
cs=0x17c5;eip=0x002afb; 	X(PUSH(ax));	// 88644                  push    ax ;~ 17C5:2AFB
cs=0x17c5;eip=0x002afc; 	T(ax = 0x28;);	// 88645                  mov     ax, 28h ; '(' ;~ 17C5:2AFC
cs=0x17c5;eip=0x002aff; 	X(PUSH(ax));	// 88646                  push    ax ;~ 17C5:2AFF
cs=0x17c5;eip=0x002b00; 	T(ax = 0x6C;);	// 88647                  mov     ax, 6Ch ; 'l' ;~ 17C5:2B00
cs=0x17c5;eip=0x002b03; 	X(PUSH(ax));	// 88648                  push    ax ;~ 17C5:2B03
cs=0x17c5;eip=0x002b04; 	T(ax = 0x17C1;);	// 88649                  mov     ax, 17C1h ;~ 17C5:2B04
cs=0x17c5;eip=0x002b07; 	X(PUSH(ax));	// 88650                  push    ax ;~ 17C5:2B07
cs=0x17c5;eip=0x002b08; 	J(CALL(sub_302fb,0));	// 88651                  call    sub_302FB ;~ 17C5:2B08
cs=0x17c5;eip=0x002b0b; 	T(ADD(sp, 8));	// 88653                  add     sp, 8 ;~ 17C5:2B0B
cs=0x17c5;eip=0x002b0e; 	J(CALLF(sub_49afc,0));	// 88654                  call    far ptr sub_49AFC ;~ 17C5:2B0E
cs=0x17c5;eip=0x002b13; 	J(CALLF(sub_49b65,0));	// 88656                  call    far ptr sub_49B65 ;~ 17C5:2B13
cs=0x17c5;eip=0x002b18; 	J(JMP(loc_28cf5));	// 88658                  jmp     short loc_28CF5 ;~ 17C5:2B18
loc_28d4a:
	// 5183 
cs=0x17c5;eip=0x002b1a; 	J(CALLF(sub_49af7,0));	// 88662                  call    far ptr sub_49AF7 ;~ 17C5:2B1A
cs=0x17c5;eip=0x002b1f; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), 0));	// 88664                  mov     [bp+var_10], 0 ;~ 17C5:2B1F
cs=0x17c5;eip=0x002b24; 	J(JMP(loc_28d59));	// 88665                  jmp     short loc_28D59 ;~ 17C5:2B24
loc_28d56:
	// 5184 
cs=0x17c5;eip=0x002b26; 	X(INC(*(dw*)(raddr(ss,bp+var_10))));	// 88670                  inc     [bp+var_10] ;~ 17C5:2B26
loc_28d59:
	// 5185 
cs=0x17c5;eip=0x002b29; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 2));	// 88673                  cmp     [bp+var_10], 2 ;~ 17C5:2B29
cs=0x17c5;eip=0x002b2d; 	J(JL(loc_28d62));	// 88674                  jl      short loc_28D62 ;~ 17C5:2B2D
cs=0x17c5;eip=0x002b2f; 	J(JMP(loc_28e93));	// 88675                  jmp     loc_28E93 ;~ 17C5:2B2F
loc_28d62:
	// 5186 
cs=0x17c5;eip=0x002b32; 	T(ax = 0x12;);	// 88679                  mov     ax, 12h ;~ 17C5:2B32
cs=0x17c5;eip=0x002b35; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_10))));	// 88680                  imul    [bp+var_10] ;~ 17C5:2B35
cs=0x17c5;eip=0x002b38; 	T(bx = ax;);	// 88681                  mov     bx, ax ;~ 17C5:2B38
cs=0x17c5;eip=0x002b3a; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7766))));	// 88682                  mov     ax, [bx-7766h] ;~ 17C5:2B3A
cs=0x17c5;eip=0x002b3e; 	T(cl = 8;);	// 88683                  mov     cl, 8 ;~ 17C5:2B3E
cs=0x17c5;eip=0x002b40; 	T(SAR(ax, cl));	// 88684                  sar     ax, cl ;~ 17C5:2B40
cs=0x17c5;eip=0x002b42; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 88685                  mov     [bp+var_18], ax ;~ 17C5:2B42
cs=0x17c5;eip=0x002b45; 	T(OR(ax, ax));	// 88686                  or      ax, ax ;~ 17C5:2B45
cs=0x17c5;eip=0x002b47; 	J(JNZ(loc_28d7c));	// 88687                  jnz     short loc_28D7C ;~ 17C5:2B47
cs=0x17c5;eip=0x002b49; 	J(JMP(loc_28e90));	// 88688                  jmp     loc_28E90 ;~ 17C5:2B49
loc_28d7c:
	// 5187 
cs=0x17c5;eip=0x002b4c; 	T(ax = 0x17DA;);	// 88693                  mov     ax, 17DAh ;~ 17C5:2B4C
cs=0x17c5;eip=0x002b4f; 	X(PUSH(ax));	// 88694                  push    ax ;~ 17C5:2B4F
cs=0x17c5;eip=0x002b50; 	T(ax = 0x17DD;);	// 88695                  mov     ax, 17DDh ;~ 17C5:2B50
cs=0x17c5;eip=0x002b53; 	X(PUSH(ax));	// 88696                  push    ax ;~ 17C5:2B53
cs=0x17c5;eip=0x002b54; 	J(CALL(sub_34954,0));	// 88697                  call    sub_34954 ;~ 17C5:2B54
cs=0x17c5;eip=0x002b57; 	T(ADD(sp, 4));	// 88698                  add     sp, 4 ;~ 17C5:2B57
cs=0x17c5;eip=0x002b5a; 	X(word_4f216 = ax;);	// 88699                  mov     ds:word_4F216, ax ;~ 17C5:2B5A
cs=0x17c5;eip=0x002b5d; 	X(PUSH(ax));	// 88700                  push    ax ;~ 17C5:2B5D
cs=0x17c5;eip=0x002b5e; 	T(ax = 1;);	// 88701                  mov     ax, 1 ;~ 17C5:2B5E
cs=0x17c5;eip=0x002b61; 	X(PUSH(ax));	// 88702                  push    ax ;~ 17C5:2B61
cs=0x17c5;eip=0x002b62; 	T(ax = 2;);	// 88703                  mov     ax, 2 ;~ 17C5:2B62
cs=0x17c5;eip=0x002b65; 	X(PUSH(ax));	// 88704                  push    ax ;~ 17C5:2B65
cs=0x17c5;eip=0x002b66; 	T(ax = 0x961A;);	// 88705                  mov     ax, 961Ah ;~ 17C5:2B66
cs=0x17c5;eip=0x002b69; 	X(PUSH(ax));	// 88706                  push    ax ;~ 17C5:2B69
cs=0x17c5;eip=0x002b6a; 	J(CALL(sub_3497c,0));	// 88707                  call    sub_3497C ;~ 17C5:2B6A
cs=0x17c5;eip=0x002b6d; 	T(ADD(sp, 8));	// 88708                  add     sp, 8 ;~ 17C5:2B6D
cs=0x17c5;eip=0x002b70; 	X(PUSH(word_4f216));	// 88709                  push    ds:word_4F216 ;~ 17C5:2B70
cs=0x17c5;eip=0x002b74; 	T(ax = 1;);	// 88710                  mov     ax, 1 ;~ 17C5:2B74
cs=0x17c5;eip=0x002b77; 	X(PUSH(ax));	// 88711                  push    ax ;~ 17C5:2B77
cs=0x17c5;eip=0x002b78; 	T(ax = 2;);	// 88712                  mov     ax, 2 ;~ 17C5:2B78
cs=0x17c5;eip=0x002b7b; 	X(PUSH(ax));	// 88713                  push    ax ;~ 17C5:2B7B
cs=0x17c5;eip=0x002b7c; 	T(ax = 0x0A014;);	// 88714                  mov     ax, 0A014h ;~ 17C5:2B7C
cs=0x17c5;eip=0x002b7f; 	X(PUSH(ax));	// 88715                  push    ax ;~ 17C5:2B7F
cs=0x17c5;eip=0x002b80; 	J(CALL(sub_3497c,0));	// 88716                  call    sub_3497C ;~ 17C5:2B80
cs=0x17c5;eip=0x002b83; 	T(ADD(sp, 8));	// 88717                  add     sp, 8 ;~ 17C5:2B83
cs=0x17c5;eip=0x002b86; 	X(PUSH(word_4f216));	// 88718                  push    ds:word_4F216 ;~ 17C5:2B86
cs=0x17c5;eip=0x002b8a; 	X(PUSH(word_52af4));	// 88719                  push    ds:word_52AF4 ;~ 17C5:2B8A
cs=0x17c5;eip=0x002b8e; 	T(ax = 2;);	// 88720                  mov     ax, 2 ;~ 17C5:2B8E
cs=0x17c5;eip=0x002b91; 	X(PUSH(ax));	// 88721                  push    ax ;~ 17C5:2B91
cs=0x17c5;eip=0x002b92; 	T(ax = 0x1520;);	// 88722                  mov     ax, 1520h ;~ 17C5:2B92
cs=0x17c5;eip=0x002b95; 	X(PUSH(ax));	// 88723                  push    ax ;~ 17C5:2B95
cs=0x17c5;eip=0x002b96; 	J(CALL(sub_3497c,0));	// 88724                  call    sub_3497C ;~ 17C5:2B96
cs=0x17c5;eip=0x002b99; 	T(ADD(sp, 8));	// 88725                  add     sp, 8 ;~ 17C5:2B99
cs=0x17c5;eip=0x002b9c; 	X(PUSH(word_4f216));	// 88726                  push    ds:word_4F216 ;~ 17C5:2B9C
cs=0x17c5;eip=0x002ba0; 	T(ax = 1;);	// 88727                  mov     ax, 1 ;~ 17C5:2BA0
cs=0x17c5;eip=0x002ba3; 	X(PUSH(ax));	// 88728                  push    ax ;~ 17C5:2BA3
cs=0x17c5;eip=0x002ba4; 	T(ax = 2;);	// 88729                  mov     ax, 2 ;~ 17C5:2BA4
cs=0x17c5;eip=0x002ba7; 	X(PUSH(ax));	// 88730                  push    ax ;~ 17C5:2BA7
cs=0x17c5;eip=0x002ba8; 	T(ax = 0x13D2;);	// 88731                  mov     ax, 13D2h ;~ 17C5:2BA8
cs=0x17c5;eip=0x002bab; 	X(PUSH(ax));	// 88732                  push    ax ;~ 17C5:2BAB
cs=0x17c5;eip=0x002bac; 	J(CALL(sub_3497c,0));	// 88733                  call    sub_3497C ;~ 17C5:2BAC
cs=0x17c5;eip=0x002baf; 	T(ADD(sp, 8));	// 88734                  add     sp, 8 ;~ 17C5:2BAF
cs=0x17c5;eip=0x002bb2; 	T(bx = word_52af4;);	// 88735                  mov     bx, ds:word_52AF4 ;~ 17C5:2BB2
cs=0x17c5;eip=0x002bb6; 	T(SHL(bx, 1));	// 88736                  shl     bx, 1 ;~ 17C5:2BB6
cs=0x17c5;eip=0x002bb8; 	T(ax = word_49eb2;);	// 88737                  mov     ax, word_49EB2 ;~ 17C5:2BB8
cs=0x17c5;eip=0x002bbb; 	X(MOV(*(dw*)(raddr(ds,bx+0x1520)), ax));	// 88738                  mov     [bx+1520h], ax ;~ 17C5:2BBB
cs=0x17c5;eip=0x002bbf; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), 0));	// 88739                  mov     [bp+var_12], 0 ;~ 17C5:2BBF
cs=0x17c5;eip=0x002bc4; 	J(JMP(loc_28df9));	// 88740                  jmp     short loc_28DF9 ;~ 17C5:2BC4
loc_28df6:
	// 5188 
cs=0x17c5;eip=0x002bc6; 	X(INC(*(dw*)(raddr(ss,bp+var_12))));	// 88745                  inc     [bp+var_12] ;~ 17C5:2BC6
loc_28df9:
	// 5189 
cs=0x17c5;eip=0x002bc9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_18))));	// 88748                  mov     ax, [bp+var_18] ;~ 17C5:2BC9
cs=0x17c5;eip=0x002bcc; 	T(CMP(*(dw*)(raddr(ss,bp+var_12)), ax));	// 88749                  cmp     [bp+var_12], ax ;~ 17C5:2BCC
cs=0x17c5;eip=0x002bcf; 	J(JG(loc_28e6c));	// 88750                  jg      short loc_28E6C ;~ 17C5:2BCF
cs=0x17c5;eip=0x002bd1; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_12))));	// 88751                  mov     si, [bp+var_12] ;~ 17C5:2BD1
cs=0x17c5;eip=0x002bd4; 	T(SHL(si, 1));	// 88752                  shl     si, 1 ;~ 17C5:2BD4
cs=0x17c5;eip=0x002bd6; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x1522))));	// 88753                  mov     ax, [si+1522h] ;~ 17C5:2BD6
cs=0x17c5;eip=0x002bda; 	T(SUB(ax, *(dw*)(raddr(ds,si+0x1520))));	// 88754                  sub     ax, [si+1520h] ;~ 17C5:2BDA
cs=0x17c5;eip=0x002bde; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 88755                  mov     [bp+var_A], ax ;~ 17C5:2BDE
loc_28e11:
	// 5190 
cs=0x17c5;eip=0x002be1; 	T(CMP(*(dw*)(raddr(ss,bp+var_a)), 0x800));	// 88758                  cmp     [bp+var_A], 800h ;~ 17C5:2BE1
cs=0x17c5;eip=0x002be6; 	J(JLE(loc_28e35));	// 88759                  jle     short loc_28E35 ;~ 17C5:2BE6
cs=0x17c5;eip=0x002be8; 	X(PUSH(word_4f216));	// 88760                  push    ds:word_4F216 ;~ 17C5:2BE8
cs=0x17c5;eip=0x002bec; 	T(ax = 0x800;);	// 88761                  mov     ax, 800h ;~ 17C5:2BEC
cs=0x17c5;eip=0x002bef; 	X(PUSH(ax));	// 88762                  push    ax ;~ 17C5:2BEF
cs=0x17c5;eip=0x002bf0; 	T(ax = 1;);	// 88763                  mov     ax, 1 ;~ 17C5:2BF0
cs=0x17c5;eip=0x002bf3; 	X(PUSH(ax));	// 88764                  push    ax ;~ 17C5:2BF3
cs=0x17c5;eip=0x002bf4; 	T(ax = 0x328E;);	// 88765                  mov     ax, 328Eh ;~ 17C5:2BF4
cs=0x17c5;eip=0x002bf7; 	X(PUSH(ax));	// 88766                  push    ax ;~ 17C5:2BF7
cs=0x17c5;eip=0x002bf8; 	J(CALL(sub_3497c,0));	// 88767                  call    sub_3497C ;~ 17C5:2BF8
cs=0x17c5;eip=0x002bfb; 	T(ADD(sp, 8));	// 88769                  add     sp, 8 ;~ 17C5:2BFB
cs=0x17c5;eip=0x002bfe; 	X(SUB(*(dw*)(raddr(ss,bp+var_a)), 0x800));	// 88770                  sub     [bp+var_A], 800h ;~ 17C5:2BFE
cs=0x17c5;eip=0x002c03; 	J(JMP(loc_28e11));	// 88771                  jmp     short loc_28E11 ;~ 17C5:2C03
loc_28e35:
	// 5191 
cs=0x17c5;eip=0x002c05; 	T(ax = bp+var_8);	// 88775                  lea     ax, [bp+var_8] ;~ 17C5:2C05
cs=0x17c5;eip=0x002c08; 	X(PUSH(ax));	// 88776                  push    ax ;~ 17C5:2C08
cs=0x17c5;eip=0x002c09; 	J(CALL(sub_34d4e,0));	// 88777                  call    sub_34D4E ;~ 17C5:2C09
cs=0x17c5;eip=0x002c0c; 	T(ADD(sp, 2));	// 88778                  add     sp, 2 ;~ 17C5:2C0C
cs=0x17c5;eip=0x002c0f; 	X(PUSH(word_4f216));	// 88779                  push    ds:word_4F216 ;~ 17C5:2C0F
cs=0x17c5;eip=0x002c13; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 88780                  push    [bp+var_A] ;~ 17C5:2C13
cs=0x17c5;eip=0x002c16; 	T(ax = 1;);	// 88781                  mov     ax, 1 ;~ 17C5:2C16
cs=0x17c5;eip=0x002c19; 	X(PUSH(ax));	// 88782                  push    ax ;~ 17C5:2C19
cs=0x17c5;eip=0x002c1a; 	T(ax = 0x328E;);	// 88783                  mov     ax, 328Eh ;~ 17C5:2C1A
cs=0x17c5;eip=0x002c1d; 	X(PUSH(ax));	// 88784                  push    ax ;~ 17C5:2C1D
cs=0x17c5;eip=0x002c1e; 	J(CALL(sub_3497c,0));	// 88785                  call    sub_3497C ;~ 17C5:2C1E
cs=0x17c5;eip=0x002c21; 	T(ADD(sp, 8));	// 88786                  add     sp, 8 ;~ 17C5:2C21
cs=0x17c5;eip=0x002c24; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 88787                  push    [bp+var_A] ;~ 17C5:2C24
cs=0x17c5;eip=0x002c27; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 88788                  push    [bp+var_E] ;~ 17C5:2C27
cs=0x17c5;eip=0x002c2a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_c))));	// 88789                  push    [bp+var_C] ;~ 17C5:2C2A
cs=0x17c5;eip=0x002c2d; 	T(ax = 0x328E;);	// 88790                  mov     ax, 328Eh ;~ 17C5:2C2D
cs=0x17c5;eip=0x002c30; 	X(PUSH(ax));	// 88791                  push    ax ;~ 17C5:2C30
cs=0x17c5;eip=0x002c31; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 88792                  push    [bp+var_2] ;~ 17C5:2C31
cs=0x17c5;eip=0x002c34; 	J(CALL(sub_34d30,0));	// 88793                  call    sub_34D30 ;~ 17C5:2C34
cs=0x17c5;eip=0x002c37; 	T(ADD(sp, 0x0A));	// 88795                  add     sp, 0Ah ;~ 17C5:2C37
cs=0x17c5;eip=0x002c3a; 	J(JMP(loc_28df6));	// 88796                  jmp     short loc_28DF6 ;~ 17C5:2C3A
loc_28e6c:
	// 5192 
cs=0x17c5;eip=0x002c3c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 88800                  mov     ax, [bp+var_A] ;~ 17C5:2C3C
cs=0x17c5;eip=0x002c3f; 	X(ADD(*(dw*)(raddr(ss,bp+var_e)), ax));	// 88801                  add     [bp+var_E], ax ;~ 17C5:2C3F
cs=0x17c5;eip=0x002c42; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 0));	// 88802                  cmp     [bp+var_10], 0 ;~ 17C5:2C42
cs=0x17c5;eip=0x002c46; 	J(JNZ(loc_28e86));	// 88803                  jnz     short loc_28E86 ;~ 17C5:2C46
cs=0x17c5;eip=0x002c48; 	T(si = *(word_49de8););	// 88804                  mov     si, word_49DE8 ;~ 17C5:2C48
cs=0x17c5;eip=0x002c4c; 	T(SHL(si, 1));	// 88805                  shl     si, 1 ;~ 17C5:2C4C
cs=0x17c5;eip=0x002c4e; 	T(ADD(ax, *(dw*)(raddr(ds,si+0x130A))));	// 88806                  add     ax, [si+130Ah] ;~ 17C5:2C4E
cs=0x17c5;eip=0x002c52; 	X(MOV(*(dw*)(raddr(ds,si+0x130C)), ax));	// 88807                  mov     [si+130Ch], ax ;~ 17C5:2C52
loc_28e86:
	// 5193 
cs=0x17c5;eip=0x002c56; 	X(PUSH(word_4f216));	// 88810                  push    ds:word_4F216 ;~ 17C5:2C56
cs=0x17c5;eip=0x002c5a; 	J(CALL(sub_3489a,0));	// 88811                  call    sub_3489A ;~ 17C5:2C5A
cs=0x17c5;eip=0x002c5d; 	T(ADD(sp, 2));	// 88812                  add     sp, 2 ;~ 17C5:2C5D
loc_28e90:
	// 5194 
cs=0x17c5;eip=0x002c60; 	J(JMP(loc_28d56));	// 88815                  jmp     loc_28D56 ;~ 17C5:2C60
loc_28e93:
	// 5195 
cs=0x17c5;eip=0x002c63; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 88819                  mov     ax, [bp+var_E] ;~ 17C5:2C63
cs=0x17c5;eip=0x002c66; 	T(cx = 0;);	// 88820                  mov     cx, 0 ;~ 17C5:2C66
cs=0x17c5;eip=0x002c69; 	T(bx = seg_offset(seg38b0););	// 88821                  mov     bx, seg seg38b0 ;~ 17C5:2C69
cs=0x17c5;eip=0x002c6c; 	T(SUB(ax, cx));	// 88822                  sub     ax, cx ;~ 17C5:2C6C
cs=0x17c5;eip=0x002c6e; 	T(CMP(ax, 0x0ADD4));	// 88823                  cmp     ax, 0ADD4h ;~ 17C5:2C6E
cs=0x17c5;eip=0x002c71; 	J(JBE(loc_28ead));	// 88824                  jbe     short loc_28EAD ;~ 17C5:2C71
cs=0x17c5;eip=0x002c73; 	T(ax = offset(seg48ae,aobjdataoverflo););	// 88825                  mov     ax, offset aObjdataOverflo ; "ObjData overflow" ;~ 17C5:2C73
cs=0x17c5;eip=0x002c76; 	X(PUSH(ax));	// 88826                  push    ax              ; char * ;~ 17C5:2C76
cs=0x17c5;eip=0x002c77; 	J(CALL(print_line,0));	// 88827                  call    print_line ;~ 17C5:2C77
cs=0x17c5;eip=0x002c7a; 	T(ADD(sp, 2));	// 88829                  add     sp, 2 ;~ 17C5:2C7A
loc_28ead:
	// 5196 
cs=0x17c5;eip=0x002c7d; 	X(POP(si));	// 88833                  pop     si ;~ 17C5:2C7D
cs=0x17c5;eip=0x002c7e; 	T(sp = bp;);	// 88834                  mov     sp, bp ;~ 17C5:2C7E
cs=0x17c5;eip=0x002c80; 	X(POP(bp));	// 88835                  pop     bp ;~ 17C5:2C80
cs=0x17c5;eip=0x002c81; 	J(RETN(0));	// 88836                  retn ;~ 17C5:2C81

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_28afd: 	goto loc_28afd;
        case m2c::kloc_28b32: 	goto loc_28b32;
        case m2c::kloc_28b93: 	goto loc_28b93;
        case m2c::kloc_28bc4: 	goto loc_28bc4;
        case m2c::kloc_28bcf: 	goto loc_28bcf;
        case m2c::kloc_28c11: 	goto loc_28c11;
        case m2c::kloc_28c2e: 	goto loc_28c2e;
        case m2c::kloc_28ceb: 	goto loc_28ceb;
        case m2c::kloc_28cf5: 	goto loc_28cf5;
        case m2c::kloc_28d4a: 	goto loc_28d4a;
        case m2c::kloc_28d56: 	goto loc_28d56;
        case m2c::kloc_28d59: 	goto loc_28d59;
        case m2c::kloc_28d62: 	goto loc_28d62;
        case m2c::kloc_28d7c: 	goto loc_28d7c;
        case m2c::kloc_28df6: 	goto loc_28df6;
        case m2c::kloc_28df9: 	goto loc_28df9;
        case m2c::kloc_28e11: 	goto loc_28e11;
        case m2c::kloc_28e35: 	goto loc_28e35;
        case m2c::kloc_28e6c: 	goto loc_28e6c;
        case m2c::kloc_28e86: 	goto loc_28e86;
        case m2c::kloc_28e90: 	goto loc_28e90;
        case m2c::kloc_28e93: 	goto loc_28e93;
        case m2c::kloc_28ead: 	goto loc_28ead;
        case m2c::ksub_28ac8: 	goto sub_28ac8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_28eb2(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_28eb2:
    _begin:
#undef var_a
#define var_a -0x0A
	// 88847 var_A           = word ptr -0Ah ;~ 17C5:2C82
#undef var_8
#define var_8 -8
	// 88848 var_8           = word ptr -8 ;~ 17C5:2C82
#undef var_6
#define var_6 -6
	// 88849 var_6           = word ptr -6 ;~ 17C5:2C82
#undef var_4
#define var_4 -4
	// 88850 var_4           = word ptr -4 ;~ 17C5:2C82
#undef var_2
#define var_2 -2
	// 88851 var_2           = byte ptr -2 ;~ 17C5:2C82
#undef arg_0
#define arg_0 4
	// 88852 arg_0           = word ptr  4 ;~ 17C5:2C82
cs=0x17c5;eip=0x002c82; 	X(PUSH(bp));	// 88854                  push    bp ;~ 17C5:2C82
cs=0x17c5;eip=0x002c83; 	T(bp = sp;);	// 88855                  mov     bp, sp ;~ 17C5:2C83
cs=0x17c5;eip=0x002c85; 	T(SUB(sp, 0x0A));	// 88856                  sub     sp, 0Ah ;~ 17C5:2C85
cs=0x17c5;eip=0x002c88; 	X(PUSH(si));	// 88857                  push    si ;~ 17C5:2C88
cs=0x17c5;eip=0x002c89; 	T(ax = 0x17F8;);	// 88858                  mov     ax, 17F8h ;~ 17C5:2C89
cs=0x17c5;eip=0x002c8c; 	X(PUSH(ax));	// 88859                  push    ax ;~ 17C5:2C8C
cs=0x17c5;eip=0x002c8d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 88860                  push    [bp+arg_0] ;~ 17C5:2C8D
cs=0x17c5;eip=0x002c90; 	J(CALL(sub_291df,0));	// 88861                  call    sub_291DF ;~ 17C5:2C90
cs=0x17c5;eip=0x002c93; 	T(ADD(sp, 4));	// 88862                  add     sp, 4 ;~ 17C5:2C93
cs=0x17c5;eip=0x002c96; 	T(ax = 0x17FD;);	// 88863                  mov     ax, 17FDh ;~ 17C5:2C96
cs=0x17c5;eip=0x002c99; 	X(PUSH(ax));	// 88864                  push    ax ;~ 17C5:2C99
cs=0x17c5;eip=0x002c9a; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 88865                  push    [bp+arg_0] ;~ 17C5:2C9A
cs=0x17c5;eip=0x002c9d; 	J(CALL(sub_34954,0));	// 88866                  call    sub_34954 ;~ 17C5:2C9D
cs=0x17c5;eip=0x002ca0; 	T(ADD(sp, 4));	// 88867                  add     sp, 4 ;~ 17C5:2CA0
cs=0x17c5;eip=0x002ca3; 	X(word_4f216 = ax;);	// 88868                  mov     ds:word_4F216, ax ;~ 17C5:2CA3
cs=0x17c5;eip=0x002ca6; 	T(OR(ax, ax));	// 88869                  or      ax, ax ;~ 17C5:2CA6
cs=0x17c5;eip=0x002ca8; 	J(JNZ(loc_28ee7));	// 88870                  jnz     short loc_28EE7 ;~ 17C5:2CA8
cs=0x17c5;eip=0x002caa; 	T(ax = offset(seg48ae,aopenerroron3dt););	// 88871                  mov     ax, offset aOpenErrorOn3dt ; "Open Error on *.3DT" ;~ 17C5:2CAA
cs=0x17c5;eip=0x002cad; 	X(PUSH(ax));	// 88872                  push    ax              ; char * ;~ 17C5:2CAD
cs=0x17c5;eip=0x002cae; 	J(CALL(print_line,0));	// 88873                  call    print_line ;~ 17C5:2CAE
cs=0x17c5;eip=0x002cb1; 	T(ADD(sp, 2));	// 88875                  add     sp, 2 ;~ 17C5:2CB1
cs=0x17c5;eip=0x002cb4; 	J(JMP(loc_2907f));	// 88876                  jmp     loc_2907F ;~ 17C5:2CB4
loc_28ee7:
	// 5197 
cs=0x17c5;eip=0x002cb7; 	X(PUSH(word_4f216));	// 88880                  push    ds:word_4F216 ;~ 17C5:2CB7
cs=0x17c5;eip=0x002cbb; 	T(ax = 1;);	// 88881                  mov     ax, 1 ;~ 17C5:2CBB
cs=0x17c5;eip=0x002cbe; 	X(PUSH(ax));	// 88882                  push    ax ;~ 17C5:2CBE
cs=0x17c5;eip=0x002cbf; 	T(ax = 2;);	// 88883                  mov     ax, 2 ;~ 17C5:2CBF
cs=0x17c5;eip=0x002cc2; 	X(PUSH(ax));	// 88884                  push    ax ;~ 17C5:2CC2
cs=0x17c5;eip=0x002cc3; 	T(ax = 0x13D4;);	// 88885                  mov     ax, 13D4h ;~ 17C5:2CC3
cs=0x17c5;eip=0x002cc6; 	X(PUSH(ax));	// 88886                  push    ax ;~ 17C5:2CC6
cs=0x17c5;eip=0x002cc7; 	J(CALL(sub_3497c,0));	// 88887                  call    sub_3497C ;~ 17C5:2CC7
cs=0x17c5;eip=0x002cca; 	T(ADD(sp, 8));	// 88888                  add     sp, 8 ;~ 17C5:2CCA
cs=0x17c5;eip=0x002ccd; 	T(CMP(*(word_49eb4), 0x3131));	// 88889                  cmp     word_49EB4, 3131h ;~ 17C5:2CCD
cs=0x17c5;eip=0x002cd3; 	J(JZ(loc_28f1c));	// 88890                  jz      short loc_28F1C ;~ 17C5:2CD3
cs=0x17c5;eip=0x002cd5; 	T(ax = 0x1814;);	// 88891                  mov     ax, 1814h ;~ 17C5:2CD5
cs=0x17c5;eip=0x002cd8; 	X(PUSH(ax));	// 88892                  push    ax              ; char * ;~ 17C5:2CD8
cs=0x17c5;eip=0x002cd9; 	J(CALL(print_line,0));	// 88893                  call    print_line ;~ 17C5:2CD9
cs=0x17c5;eip=0x002cdc; 	T(ADD(sp, 2));	// 88895                  add     sp, 2 ;~ 17C5:2CDC
cs=0x17c5;eip=0x002cdf; 	X(PUSH(word_4f216));	// 88896                  push    ds:word_4F216 ;~ 17C5:2CDF
cs=0x17c5;eip=0x002ce3; 	J(CALL(sub_3489a,0));	// 88897                  call    sub_3489A ;~ 17C5:2CE3
cs=0x17c5;eip=0x002ce6; 	T(ADD(sp, 2));	// 88898                  add     sp, 2 ;~ 17C5:2CE6
cs=0x17c5;eip=0x002ce9; 	J(JMP(loc_2907f));	// 88899                  jmp     loc_2907F ;~ 17C5:2CE9
loc_28f1c:
	// 5198 
cs=0x17c5;eip=0x002cec; 	X(PUSH(word_4f216));	// 88903                  push    ds:word_4F216 ;~ 17C5:2CEC
cs=0x17c5;eip=0x002cf0; 	T(ax = 5;);	// 88904                  mov     ax, 5 ;~ 17C5:2CF0
cs=0x17c5;eip=0x002cf3; 	X(PUSH(ax));	// 88905                  push    ax ;~ 17C5:2CF3
cs=0x17c5;eip=0x002cf4; 	T(ax = 2;);	// 88906                  mov     ax, 2 ;~ 17C5:2CF4
cs=0x17c5;eip=0x002cf7; 	X(PUSH(ax));	// 88907                  push    ax ;~ 17C5:2CF7
cs=0x17c5;eip=0x002cf8; 	T(ax = 0x13D6;);	// 88908                  mov     ax, 13D6h ;~ 17C5:2CF8
cs=0x17c5;eip=0x002cfb; 	X(PUSH(ax));	// 88909                  push    ax ;~ 17C5:2CFB
cs=0x17c5;eip=0x002cfc; 	J(CALL(sub_3497c,0));	// 88910                  call    sub_3497C ;~ 17C5:2CFC
cs=0x17c5;eip=0x002cff; 	T(ADD(sp, 8));	// 88911                  add     sp, 8 ;~ 17C5:2CFF
cs=0x17c5;eip=0x002d02; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 88912                  mov     [bp+var_4], 0 ;~ 17C5:2D02
cs=0x17c5;eip=0x002d07; 	J(JMP(loc_28f3c));	// 88913                  jmp     short loc_28F3C ;~ 17C5:2D07
loc_28f39:
	// 5199 
cs=0x17c5;eip=0x002d09; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 88917                  inc     [bp+var_4] ;~ 17C5:2D09
loc_28f3c:
	// 5200 
cs=0x17c5;eip=0x002d0c; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 5));	// 88920                  cmp     [bp+var_4], 5 ;~ 17C5:2D0C
cs=0x17c5;eip=0x002d10; 	J(JGE(loc_28f7f));	// 88921                  jge     short loc_28F7F ;~ 17C5:2D10
cs=0x17c5;eip=0x002d12; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 88922                  mov     bx, [bp+var_4] ;~ 17C5:2D12
cs=0x17c5;eip=0x002d15; 	T(SHL(bx, 1));	// 88923                  shl     bx, 1 ;~ 17C5:2D15
cs=0x17c5;eip=0x002d17; 	T(CMP(*(dw*)(raddr(ds,bx+0x13D6)), 0x20));	// 88924                  cmp     word ptr [bx+13D6h], 20h ; ' ' ;~ 17C5:2D17
cs=0x17c5;eip=0x002d1c; 	J(JBE(loc_28f5b));	// 88925                  jbe     short loc_28F5B ;~ 17C5:2D1C
cs=0x17c5;eip=0x002d1e; 	T(ax = offset(seg48ae,atoomanytiles););	// 88926                  mov     ax, offset aTooManyTiles ; "Too many tiles." ;~ 17C5:2D1E
cs=0x17c5;eip=0x002d21; 	X(PUSH(ax));	// 88927                  push    ax              ; char * ;~ 17C5:2D21
cs=0x17c5;eip=0x002d22; 	J(CALL(print_line,0));	// 88928                  call    print_line ;~ 17C5:2D22
cs=0x17c5;eip=0x002d25; 	T(ADD(sp, 2));	// 88930                  add     sp, 2 ;~ 17C5:2D25
cs=0x17c5;eip=0x002d28; 	J(JMP(loc_2907f));	// 88931                  jmp     loc_2907F ;~ 17C5:2D28
loc_28f5b:
	// 5201 
cs=0x17c5;eip=0x002d2b; 	X(PUSH(word_4f216));	// 88935                  push    ds:word_4F216 ;~ 17C5:2D2B
cs=0x17c5;eip=0x002d2f; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 88936                  mov     bx, [bp+var_4] ;~ 17C5:2D2F
cs=0x17c5;eip=0x002d32; 	T(SHL(bx, 1));	// 88937                  shl     bx, 1 ;~ 17C5:2D32
cs=0x17c5;eip=0x002d34; 	X(PUSH(*(dw*)(raddr(ds,bx+0x13D6))));	// 88938                  push    word ptr [bx+13D6h] ;~ 17C5:2D34
cs=0x17c5;eip=0x002d38; 	T(ax = 2;);	// 88939                  mov     ax, 2 ;~ 17C5:2D38
cs=0x17c5;eip=0x002d3b; 	X(PUSH(ax));	// 88940                  push    ax ;~ 17C5:2D3B
cs=0x17c5;eip=0x002d3c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 88941                  mov     ax, [bp+var_4] ;~ 17C5:2D3C
cs=0x17c5;eip=0x002d3f; 	T(cl = 6;);	// 88942                  mov     cl, 6 ;~ 17C5:2D3F
cs=0x17c5;eip=0x002d41; 	T(SHL(ax, cl));	// 88943                  shl     ax, cl ;~ 17C5:2D41
cs=0x17c5;eip=0x002d43; 	T(ADD(ax, 0x13E0));	// 88944                  add     ax, 13E0h ;~ 17C5:2D43
cs=0x17c5;eip=0x002d46; 	X(PUSH(ax));	// 88945                  push    ax ;~ 17C5:2D46
cs=0x17c5;eip=0x002d47; 	J(CALL(sub_3497c,0));	// 88946                  call    sub_3497C ;~ 17C5:2D47
cs=0x17c5;eip=0x002d4a; 	T(ADD(sp, 8));	// 88947                  add     sp, 8 ;~ 17C5:2D4A
cs=0x17c5;eip=0x002d4d; 	J(JMP(loc_28f39));	// 88948                  jmp     short loc_28F39 ;~ 17C5:2D4D
loc_28f7f:
	// 5202 
cs=0x17c5;eip=0x002d4f; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0));	// 88952                  mov     [bp+var_6], 0 ;~ 17C5:2D4F
cs=0x17c5;eip=0x002d54; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 88953                  mov     [bp+var_4], 0 ;~ 17C5:2D54
cs=0x17c5;eip=0x002d59; 	J(JMP(loc_28f8e));	// 88954                  jmp     short loc_28F8E ;~ 17C5:2D59
loc_28f8b:
	// 5203 
cs=0x17c5;eip=0x002d5b; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 88958                  inc     [bp+var_4] ;~ 17C5:2D5B
loc_28f8e:
	// 5204 
cs=0x17c5;eip=0x002d5e; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 5));	// 88961                  cmp     [bp+var_4], 5 ;~ 17C5:2D5E
cs=0x17c5;eip=0x002d62; 	J(JL(loc_28f97));	// 88962                  jl      short loc_28F97 ;~ 17C5:2D62
cs=0x17c5;eip=0x002d64; 	J(JMP(loc_29075));	// 88963                  jmp     loc_29075 ;~ 17C5:2D64
loc_28f97:
	// 5205 
cs=0x17c5;eip=0x002d67; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), 0));	// 88967                  mov     [bp+var_8], 0 ;~ 17C5:2D67
cs=0x17c5;eip=0x002d6c; 	J(JMP(loc_28fa1));	// 88968                  jmp     short loc_28FA1 ;~ 17C5:2D6C
loc_28f9e:
	// 5206 
cs=0x17c5;eip=0x002d6e; 	X(INC(*(dw*)(raddr(ss,bp+var_8))));	// 88972                  inc     [bp+var_8] ;~ 17C5:2D6E
loc_28fa1:
	// 5207 
cs=0x17c5;eip=0x002d71; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 88975                  mov     bx, [bp+var_4] ;~ 17C5:2D71
cs=0x17c5;eip=0x002d74; 	T(SHL(bx, 1));	// 88976                  shl     bx, 1 ;~ 17C5:2D74
cs=0x17c5;eip=0x002d76; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 88977                  mov     ax, [bp+var_8] ;~ 17C5:2D76
cs=0x17c5;eip=0x002d79; 	T(CMP(*(dw*)(raddr(ds,bx+0x13D6)), ax));	// 88978                  cmp     [bx+13D6h], ax ;~ 17C5:2D79
cs=0x17c5;eip=0x002d7d; 	J(JA(loc_28fb2));	// 88979                  ja      short loc_28FB2 ;~ 17C5:2D7D
cs=0x17c5;eip=0x002d7f; 	J(JMP(loc_29072));	// 88980                  jmp     loc_29072 ;~ 17C5:2D7F
loc_28fb2:
	// 5208 
cs=0x17c5;eip=0x002d82; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_4))));	// 88984                  mov     si, [bp+var_4] ;~ 17C5:2D82
cs=0x17c5;eip=0x002d85; 	T(cl = 6;);	// 88985                  mov     cl, 6 ;~ 17C5:2D85
cs=0x17c5;eip=0x002d87; 	T(SHL(si, cl));	// 88986                  shl     si, cl ;~ 17C5:2D87
cs=0x17c5;eip=0x002d89; 	T(bx = ax;);	// 88987                  mov     bx, ax ;~ 17C5:2D89
cs=0x17c5;eip=0x002d8b; 	T(SHL(bx, 1));	// 88988                  shl     bx, 1 ;~ 17C5:2D8B
cs=0x17c5;eip=0x002d8d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 88989                  mov     ax, [bp+var_6] ;~ 17C5:2D8D
cs=0x17c5;eip=0x002d90; 	T(ADD(ax, 0x70AE));	// 88990                  add     ax, 70AEh ;~ 17C5:2D90
cs=0x17c5;eip=0x002d93; 	X(MOV(*(dw*)(raddr(ds,bx+si-0x6450)), ax));	// 88991                  mov     [bx+si-6450h], ax ;~ 17C5:2D93
cs=0x17c5;eip=0x002d97; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), 0));	// 88992                  mov     [bp+var_A], 0 ;~ 17C5:2D97
cs=0x17c5;eip=0x002d9c; 	J(JMP(loc_28fd1));	// 88993                  jmp     short loc_28FD1 ;~ 17C5:2D9C
loc_28fce:
	// 5209 
cs=0x17c5;eip=0x002d9e; 	X(INC(*(dw*)(raddr(ss,bp+var_a))));	// 88997                  inc     [bp+var_A] ;~ 17C5:2D9E
loc_28fd1:
	// 5210 
cs=0x17c5;eip=0x002da1; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_4))));	// 89000                  mov     si, [bp+var_4] ;~ 17C5:2DA1
cs=0x17c5;eip=0x002da4; 	T(cl = 6;);	// 89001                  mov     cl, 6 ;~ 17C5:2DA4
cs=0x17c5;eip=0x002da6; 	T(SHL(si, cl));	// 89002                  shl     si, cl ;~ 17C5:2DA6
cs=0x17c5;eip=0x002da8; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_8))));	// 89003                  mov     bx, [bp+var_8] ;~ 17C5:2DA8
cs=0x17c5;eip=0x002dab; 	T(SHL(bx, 1));	// 89004                  shl     bx, 1 ;~ 17C5:2DAB
cs=0x17c5;eip=0x002dad; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 89005                  mov     ax, [bp+var_A] ;~ 17C5:2DAD
cs=0x17c5;eip=0x002db0; 	T(CMP(*(dw*)(raddr(ds,bx+si+0x13E0)), ax));	// 89006                  cmp     [bx+si+13E0h], ax ;~ 17C5:2DB0
cs=0x17c5;eip=0x002db4; 	J(JA(loc_28fe9));	// 89007                  ja      short loc_28FE9 ;~ 17C5:2DB4
cs=0x17c5;eip=0x002db6; 	J(JMP(loc_2906f));	// 89008                  jmp     loc_2906F ;~ 17C5:2DB6
loc_28fe9:
	// 5211 
cs=0x17c5;eip=0x002db9; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), 0x0FA0));	// 89012                  cmp     [bp+var_6], 0FA0h ;~ 17C5:2DB9
cs=0x17c5;eip=0x002dbe; 	J(JLE(loc_28ffd));	// 89013                  jle     short loc_28FFD ;~ 17C5:2DBE
cs=0x17c5;eip=0x002dc0; 	T(ax = offset(seg48ae,atoomuchtiledat););	// 89014                  mov     ax, offset aTooMuchTileDat ; "Too much tile data" ;~ 17C5:2DC0
cs=0x17c5;eip=0x002dc3; 	X(PUSH(ax));	// 89015                  push    ax              ; char * ;~ 17C5:2DC3
cs=0x17c5;eip=0x002dc4; 	J(CALL(print_line,0));	// 89016                  call    print_line ;~ 17C5:2DC4
cs=0x17c5;eip=0x002dc7; 	T(ADD(sp, 2));	// 89018                  add     sp, 2 ;~ 17C5:2DC7
cs=0x17c5;eip=0x002dca; 	J(JMP(loc_2907f));	// 89019                  jmp     loc_2907F ;~ 17C5:2DCA
loc_28ffd:
	// 5212 
cs=0x17c5;eip=0x002dcd; 	X(PUSH(word_4f216));	// 89023                  push    ds:word_4F216 ;~ 17C5:2DCD
cs=0x17c5;eip=0x002dd1; 	T(ax = 1;);	// 89024                  mov     ax, 1 ;~ 17C5:2DD1
cs=0x17c5;eip=0x002dd4; 	X(PUSH(ax));	// 89025                  push    ax ;~ 17C5:2DD4
cs=0x17c5;eip=0x002dd5; 	T(ax = 2;);	// 89026                  mov     ax, 2 ;~ 17C5:2DD5
cs=0x17c5;eip=0x002dd8; 	X(PUSH(ax));	// 89027                  push    ax ;~ 17C5:2DD8
cs=0x17c5;eip=0x002dd9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 89028                  mov     ax, [bp+var_6] ;~ 17C5:2DD9
cs=0x17c5;eip=0x002ddc; 	T(ADD(ax, 0x70AE));	// 89029                  add     ax, 70AEh ;~ 17C5:2DDC
cs=0x17c5;eip=0x002ddf; 	X(PUSH(ax));	// 89030                  push    ax ;~ 17C5:2DDF
cs=0x17c5;eip=0x002de0; 	J(CALL(sub_3497c,0));	// 89031                  call    sub_3497C ;~ 17C5:2DE0
cs=0x17c5;eip=0x002de3; 	T(ADD(sp, 8));	// 89032                  add     sp, 8 ;~ 17C5:2DE3
cs=0x17c5;eip=0x002de6; 	X(PUSH(word_4f216));	// 89033                  push    ds:word_4F216 ;~ 17C5:2DE6
cs=0x17c5;eip=0x002dea; 	T(ax = 1;);	// 89034                  mov     ax, 1 ;~ 17C5:2DEA
cs=0x17c5;eip=0x002ded; 	X(PUSH(ax));	// 89035                  push    ax ;~ 17C5:2DED
cs=0x17c5;eip=0x002dee; 	T(ax = 2;);	// 89036                  mov     ax, 2 ;~ 17C5:2DEE
cs=0x17c5;eip=0x002df1; 	X(PUSH(ax));	// 89037                  push    ax ;~ 17C5:2DF1
cs=0x17c5;eip=0x002df2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 89038                  mov     ax, [bp+var_6] ;~ 17C5:2DF2
cs=0x17c5;eip=0x002df5; 	T(ADD(ax, 0x70B0));	// 89039                  add     ax, 70B0h ;~ 17C5:2DF5
cs=0x17c5;eip=0x002df8; 	X(PUSH(ax));	// 89040                  push    ax ;~ 17C5:2DF8
cs=0x17c5;eip=0x002df9; 	J(CALL(sub_3497c,0));	// 89041                  call    sub_3497C ;~ 17C5:2DF9
cs=0x17c5;eip=0x002dfc; 	T(ADD(sp, 8));	// 89042                  add     sp, 8 ;~ 17C5:2DFC
cs=0x17c5;eip=0x002dff; 	X(PUSH(word_4f216));	// 89043                  push    ds:word_4F216 ;~ 17C5:2DFF
cs=0x17c5;eip=0x002e03; 	T(ax = 1;);	// 89044                  mov     ax, 1 ;~ 17C5:2E03
cs=0x17c5;eip=0x002e06; 	X(PUSH(ax));	// 89045                  push    ax ;~ 17C5:2E06
cs=0x17c5;eip=0x002e07; 	T(ax = 2;);	// 89046                  mov     ax, 2 ;~ 17C5:2E07
cs=0x17c5;eip=0x002e0a; 	X(PUSH(ax));	// 89047                  push    ax ;~ 17C5:2E0A
cs=0x17c5;eip=0x002e0b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 89048                  mov     ax, [bp+var_6] ;~ 17C5:2E0B
cs=0x17c5;eip=0x002e0e; 	T(ADD(ax, 0x70B2));	// 89049                  add     ax, 70B2h ;~ 17C5:2E0E
cs=0x17c5;eip=0x002e11; 	X(PUSH(ax));	// 89050                  push    ax ;~ 17C5:2E11
cs=0x17c5;eip=0x002e12; 	J(CALL(sub_3497c,0));	// 89051                  call    sub_3497C ;~ 17C5:2E12
cs=0x17c5;eip=0x002e15; 	T(ADD(sp, 8));	// 89052                  add     sp, 8 ;~ 17C5:2E15
cs=0x17c5;eip=0x002e18; 	X(PUSH(word_4f216));	// 89053                  push    ds:word_4F216 ;~ 17C5:2E18
cs=0x17c5;eip=0x002e1c; 	T(ax = 1;);	// 89054                  mov     ax, 1 ;~ 17C5:2E1C
cs=0x17c5;eip=0x002e1f; 	X(PUSH(ax));	// 89055                  push    ax ;~ 17C5:2E1F
cs=0x17c5;eip=0x002e20; 	T(ax = 2;);	// 89056                  mov     ax, 2 ;~ 17C5:2E20
cs=0x17c5;eip=0x002e23; 	X(PUSH(ax));	// 89057                  push    ax ;~ 17C5:2E23
cs=0x17c5;eip=0x002e24; 	T(ax = bp+var_2);	// 89058                  lea     ax, [bp+var_2] ;~ 17C5:2E24
cs=0x17c5;eip=0x002e27; 	X(PUSH(ax));	// 89059                  push    ax ;~ 17C5:2E27
cs=0x17c5;eip=0x002e28; 	J(CALL(sub_3497c,0));	// 89060                  call    sub_3497C ;~ 17C5:2E28
cs=0x17c5;eip=0x002e2b; 	T(ADD(sp, 8));	// 89061                  add     sp, 8 ;~ 17C5:2E2B
cs=0x17c5;eip=0x002e2e; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_6))));	// 89062                  mov     bx, [bp+var_6] ;~ 17C5:2E2E
cs=0x17c5;eip=0x002e31; 	T(MOV(al, *(raddr(ss,bp+var_2))));	// 89063                  mov     al, [bp+var_2] ;~ 17C5:2E31
cs=0x17c5;eip=0x002e34; 	X(MOV(*(raddr(ds,bx+0x70B4)), al));	// 89064                  mov     [bx+70B4h], al ;~ 17C5:2E34
cs=0x17c5;eip=0x002e38; 	X(ADD(*(dw*)(raddr(ss,bp+var_6)), 7));	// 89065                  add     [bp+var_6], 7 ;~ 17C5:2E38
cs=0x17c5;eip=0x002e3c; 	J(JMP(loc_28fce));	// 89066                  jmp     loc_28FCE ;~ 17C5:2E3C
loc_2906f:
	// 5213 
cs=0x17c5;eip=0x002e3f; 	J(JMP(loc_28f9e));	// 89070                  jmp     loc_28F9E ;~ 17C5:2E3F
loc_29072:
	// 5214 
cs=0x17c5;eip=0x002e42; 	J(JMP(loc_28f8b));	// 89074                  jmp     loc_28F8B ;~ 17C5:2E42
loc_29075:
	// 5215 
cs=0x17c5;eip=0x002e45; 	X(PUSH(word_4f216));	// 89078                  push    ds:word_4F216 ;~ 17C5:2E45
cs=0x17c5;eip=0x002e49; 	J(CALL(sub_3489a,0));	// 89079                  call    sub_3489A ;~ 17C5:2E49
cs=0x17c5;eip=0x002e4c; 	T(ADD(sp, 2));	// 89080                  add     sp, 2 ;~ 17C5:2E4C
loc_2907f:
	// 5216 
cs=0x17c5;eip=0x002e4f; 	X(POP(si));	// 89084                  pop     si ;~ 17C5:2E4F
cs=0x17c5;eip=0x002e50; 	T(sp = bp;);	// 89085                  mov     sp, bp ;~ 17C5:2E50
cs=0x17c5;eip=0x002e52; 	X(POP(bp));	// 89086                  pop     bp ;~ 17C5:2E52
cs=0x17c5;eip=0x002e53; 	J(RETN(0));	// 89087                  retn ;~ 17C5:2E53

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_28ee7: 	goto loc_28ee7;
        case m2c::kloc_28f1c: 	goto loc_28f1c;
        case m2c::kloc_28f39: 	goto loc_28f39;
        case m2c::kloc_28f3c: 	goto loc_28f3c;
        case m2c::kloc_28f5b: 	goto loc_28f5b;
        case m2c::kloc_28f7f: 	goto loc_28f7f;
        case m2c::kloc_28f8b: 	goto loc_28f8b;
        case m2c::kloc_28f8e: 	goto loc_28f8e;
        case m2c::kloc_28f97: 	goto loc_28f97;
        case m2c::kloc_28f9e: 	goto loc_28f9e;
        case m2c::kloc_28fa1: 	goto loc_28fa1;
        case m2c::kloc_28fb2: 	goto loc_28fb2;
        case m2c::kloc_28fce: 	goto loc_28fce;
        case m2c::kloc_28fd1: 	goto loc_28fd1;
        case m2c::kloc_28fe9: 	goto loc_28fe9;
        case m2c::kloc_28ffd: 	goto loc_28ffd;
        case m2c::kloc_2906f: 	goto loc_2906f;
        case m2c::kloc_29072: 	goto loc_29072;
        case m2c::kloc_29075: 	goto loc_29075;
        case m2c::kloc_2907f: 	goto loc_2907f;
        case m2c::ksub_28eb2: 	goto sub_28eb2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group26(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group26:
    _begin:
sub_29084:
	// 89095 
cs=0x17c5;eip=0x002e54; 	X(PUSH(bp));	// 89096                  push    bp ;~ 17C5:2E54
cs=0x17c5;eip=0x002e55; 	T(bp = sp;);	// 89097                  mov     bp, sp ;~ 17C5:2E55
cs=0x17c5;eip=0x002e57; 	T(SUB(sp, 6));	// 89098                  sub     sp, 6 ;~ 17C5:2E57
cs=0x17c5;eip=0x002e5a; 	T(ax = 0x184D;);	// 89099                  mov     ax, 184Dh ;~ 17C5:2E5A
cs=0x17c5;eip=0x002e5d; 	X(PUSH(ax));	// 89100                  push    ax ;~ 17C5:2E5D
cs=0x17c5;eip=0x002e5e; 	X(PUSH(word_48b6a));	// 89101                  push    word_48B6A ;~ 17C5:2E5E
cs=0x17c5;eip=0x002e62; 	J(CALL(sub_291df,0));	// 89102                  call    sub_291DF ;~ 17C5:2E62
cs=0x17c5;eip=0x002e65; 	T(ADD(sp, 4));	// 89103                  add     sp, 4 ;~ 17C5:2E65
loc_29098:
	// 5217 
cs=0x17c5;eip=0x002e68; 	T(ax = 0x1852;);	// 89106                  mov     ax, 1852h ;~ 17C5:2E68
cs=0x17c5;eip=0x002e6b; 	X(PUSH(ax));	// 89107                  push    ax ;~ 17C5:2E6B
cs=0x17c5;eip=0x002e6c; 	X(PUSH(word_48b6a));	// 89108                  push    word_48B6A ;~ 17C5:2E6C
cs=0x17c5;eip=0x002e70; 	J(CALL(sub_34954,0));	// 89109                  call    sub_34954 ;~ 17C5:2E70
cs=0x17c5;eip=0x002e73; 	T(ADD(sp, 4));	// 89110                  add     sp, 4 ;~ 17C5:2E73
cs=0x17c5;eip=0x002e76; 	X(word_4f216 = ax;);	// 89111                  mov     ds:word_4F216, ax ;~ 17C5:2E76
cs=0x17c5;eip=0x002e79; 	T(OR(ax, ax));	// 89112                  or      ax, ax ;~ 17C5:2E79
cs=0x17c5;eip=0x002e7b; 	J(JNZ(loc_290e5));	// 89113                  jnz     short loc_290E5 ;~ 17C5:2E7B
cs=0x17c5;eip=0x002e7d; 	T(ax = 0x0F;);	// 89114                  mov     ax, 0Fh ;~ 17C5:2E7D
cs=0x17c5;eip=0x002e80; 	X(PUSH(ax));	// 89115                  push    ax ;~ 17C5:2E80
cs=0x17c5;eip=0x002e81; 	T(ax = 0x28;);	// 89116                  mov     ax, 28h ; '(' ;~ 17C5:2E81
cs=0x17c5;eip=0x002e84; 	X(PUSH(ax));	// 89117                  push    ax ;~ 17C5:2E84
cs=0x17c5;eip=0x002e85; 	T(ax = 0x68;);	// 89118                  mov     ax, 68h ; 'h' ;~ 17C5:2E85
cs=0x17c5;eip=0x002e88; 	X(PUSH(ax));	// 89119                  push    ax ;~ 17C5:2E88
cs=0x17c5;eip=0x002e89; 	T(ax = 0x1855;);	// 89120                  mov     ax, 1855h ;~ 17C5:2E89
cs=0x17c5;eip=0x002e8c; 	X(PUSH(ax));	// 89121                  push    ax ;~ 17C5:2E8C
cs=0x17c5;eip=0x002e8d; 	J(CALL(sub_302fb,0));	// 89122                  call    sub_302FB ;~ 17C5:2E8D
cs=0x17c5;eip=0x002e90; 	T(ADD(sp, 8));	// 89124                  add     sp, 8 ;~ 17C5:2E90
cs=0x17c5;eip=0x002e93; 	T(ax = 0x0F;);	// 89125                  mov     ax, 0Fh ;~ 17C5:2E93
cs=0x17c5;eip=0x002e96; 	X(PUSH(ax));	// 89126                  push    ax ;~ 17C5:2E96
cs=0x17c5;eip=0x002e97; 	T(ax = 0x32;);	// 89127                  mov     ax, 32h ; '2' ;~ 17C5:2E97
cs=0x17c5;eip=0x002e9a; 	X(PUSH(ax));	// 89128                  push    ax ;~ 17C5:2E9A
cs=0x17c5;eip=0x002e9b; 	T(ax = 0x68;);	// 89129                  mov     ax, 68h ; 'h' ;~ 17C5:2E9B
cs=0x17c5;eip=0x002e9e; 	X(PUSH(ax));	// 89130                  push    ax ;~ 17C5:2E9E
cs=0x17c5;eip=0x002e9f; 	T(ax = 0x1871;);	// 89131                  mov     ax, 1871h ;~ 17C5:2E9F
cs=0x17c5;eip=0x002ea2; 	X(PUSH(ax));	// 89132                  push    ax ;~ 17C5:2EA2
cs=0x17c5;eip=0x002ea3; 	J(CALL(sub_302fb,0));	// 89133                  call    sub_302FB ;~ 17C5:2EA3
cs=0x17c5;eip=0x002ea6; 	T(ADD(sp, 8));	// 89135                  add     sp, 8 ;~ 17C5:2EA6
cs=0x17c5;eip=0x002ea9; 	J(CALLF(sub_49afc,0));	// 89136                  call    far ptr sub_49AFC ;~ 17C5:2EA9
cs=0x17c5;eip=0x002eae; 	J(CALLF(sub_49b65,0));	// 89138                  call    far ptr sub_49B65 ;~ 17C5:2EAE
cs=0x17c5;eip=0x002eb3; 	J(JMP(loc_29098));	// 89140                  jmp     short loc_29098 ;~ 17C5:2EB3
loc_290e5:
	// 5218 
cs=0x17c5;eip=0x002eb5; 	J(CALLF(sub_49af7,0));	// 89144                  call    far ptr sub_49AF7 ;~ 17C5:2EB5
seg2623_2eba_proc:
	// 89148 
cs=0x17c5;eip=0x002eba; 	X(PUSH(word_4f216));	// 89148                  push    ds:word_4F216 ;~ 17C5:2EBA
cs=0x17c5;eip=0x002ebe; 	T(ax = 1;);	// 89149                  mov     ax, 1 ;~ 17C5:2EBE
cs=0x17c5;eip=0x002ec1; 	X(PUSH(ax));	// 89150                  push    ax ;~ 17C5:2EC1
cs=0x17c5;eip=0x002ec2; 	T(ax = 2;);	// 89151                  mov     ax, 2 ;~ 17C5:2EC2
cs=0x17c5;eip=0x002ec5; 	X(PUSH(ax));	// 89152                  push    ax ;~ 17C5:2EC5
cs=0x17c5;eip=0x002ec6; 	T(ax = 0x1568;);	// 89153                  mov     ax, 1568h ;~ 17C5:2EC6
cs=0x17c5;eip=0x002ec9; 	X(PUSH(ax));	// 89154                  push    ax ;~ 17C5:2EC9
cs=0x17c5;eip=0x002eca; 	J(CALL(sub_3497c,0));	// 89155                  call    sub_3497C ;~ 17C5:2ECA
cs=0x17c5;eip=0x002ecd; 	T(ADD(sp, 8));	// 89156                  add     sp, 8 ;~ 17C5:2ECD
cs=0x17c5;eip=0x002ed0; 	T(CMP(*(word_4a048), 0x3232));	// 89157                  cmp     word_4A048, 3232h ;~ 17C5:2ED0
cs=0x17c5;eip=0x002ed6; 	J(JZ(loc_2911f));	// 89158                  jz      short loc_2911F ;~ 17C5:2ED6
cs=0x17c5;eip=0x002ed8; 	T(ax = 0x188A;);	// 89159                  mov     ax, 188Ah ;~ 17C5:2ED8
cs=0x17c5;eip=0x002edb; 	X(PUSH(ax));	// 89160                  push    ax ;~ 17C5:2EDB
cs=0x17c5;eip=0x002edc; 	J(CALL(print_line,0));	// 89161                  call    print_line ;~ 17C5:2EDC
cs=0x17c5;eip=0x002edf; 	T(ADD(sp, 2));	// 89163                  add     sp, 2 ;~ 17C5:2EDF
cs=0x17c5;eip=0x002ee2; 	X(PUSH(word_4f216));	// 89164                  push    ds:word_4F216 ;~ 17C5:2EE2
cs=0x17c5;eip=0x002ee6; 	J(CALL(sub_3489a,0));	// 89165                  call    sub_3489A ;~ 17C5:2EE6
cs=0x17c5;eip=0x002ee9; 	T(ADD(sp, 2));	// 89166                  add     sp, 2 ;~ 17C5:2EE9
cs=0x17c5;eip=0x002eec; 	J(JMP(loc_291b8));	// 89167                  jmp     loc_291B8 ;~ 17C5:2EEC
loc_2911f:
	// 5219 
cs=0x17c5;eip=0x002eef; 	X(PUSH(word_4f216));	// 89171                  push    ds:word_4F216 ;~ 17C5:2EEF
cs=0x17c5;eip=0x002ef3; 	T(ax = 0x10;);	// 89172                  mov     ax, 10h ;~ 17C5:2EF3
cs=0x17c5;eip=0x002ef6; 	X(PUSH(ax));	// 89173                  push    ax ;~ 17C5:2EF6
cs=0x17c5;eip=0x002ef7; 	T(ax = 1;);	// 89174                  mov     ax, 1 ;~ 17C5:2EF7
cs=0x17c5;eip=0x002efa; 	X(PUSH(ax));	// 89175                  push    ax ;~ 17C5:2EFA
cs=0x17c5;eip=0x002efb; 	T(ax = 0x6FAA;);	// 89176                  mov     ax, 6FAAh ;~ 17C5:2EFB
cs=0x17c5;eip=0x002efe; 	X(PUSH(ax));	// 89177                  push    ax ;~ 17C5:2EFE
cs=0x17c5;eip=0x002eff; 	J(CALL(sub_3497c,0));	// 89178                  call    sub_3497C ;~ 17C5:2EFF
cs=0x17c5;eip=0x002f02; 	T(ADD(sp, 8));	// 89179                  add     sp, 8 ;~ 17C5:2F02
cs=0x17c5;eip=0x002f05; 	X(PUSH(word_4f216));	// 89180                  push    ds:word_4F216 ;~ 17C5:2F05
cs=0x17c5;eip=0x002f09; 	T(ax = 0x100;);	// 89181                  mov     ax, 100h ;~ 17C5:2F09
cs=0x17c5;eip=0x002f0c; 	X(PUSH(ax));	// 89182                  push    ax ;~ 17C5:2F0C
cs=0x17c5;eip=0x002f0d; 	T(ax = 1;);	// 89183                  mov     ax, 1 ;~ 17C5:2F0D
cs=0x17c5;eip=0x002f10; 	X(PUSH(ax));	// 89184                  push    ax ;~ 17C5:2F10
cs=0x17c5;eip=0x002f11; 	T(ax = 0x6FAA;);	// 89185                  mov     ax, 6FAAh ;~ 17C5:2F11
cs=0x17c5;eip=0x002f14; 	X(PUSH(ax));	// 89186                  push    ax ;~ 17C5:2F14
cs=0x17c5;eip=0x002f15; 	J(CALL(sub_3497c,0));	// 89187                  call    sub_3497C ;~ 17C5:2F15
cs=0x17c5;eip=0x002f18; 	T(ADD(sp, 8));	// 89188                  add     sp, 8 ;~ 17C5:2F18
cs=0x17c5;eip=0x002f1b; 	X(PUSH(word_4f216));	// 89189                  push    ds:word_4F216 ;~ 17C5:2F1B
cs=0x17c5;eip=0x002f1f; 	T(ax = 0x200;);	// 89190                  mov     ax, 200h ;~ 17C5:2F1F
cs=0x17c5;eip=0x002f22; 	X(PUSH(ax));	// 89191                  push    ax ;~ 17C5:2F22
cs=0x17c5;eip=0x002f23; 	T(ax = 1;);	// 89192                  mov     ax, 1 ;~ 17C5:2F23
cs=0x17c5;eip=0x002f26; 	X(PUSH(ax));	// 89193                  push    ax ;~ 17C5:2F26
cs=0x17c5;eip=0x002f27; 	T(ax = 0x6D58;);	// 89194                  mov     ax, 6D58h ;~ 17C5:2F27
cs=0x17c5;eip=0x002f2a; 	X(PUSH(ax));	// 89195                  push    ax ;~ 17C5:2F2A
cs=0x17c5;eip=0x002f2b; 	J(CALL(sub_3497c,0));	// 89196                  call    sub_3497C ;~ 17C5:2F2B
cs=0x17c5;eip=0x002f2e; 	T(ADD(sp, 8));	// 89197                  add     sp, 8 ;~ 17C5:2F2E
cs=0x17c5;eip=0x002f31; 	X(PUSH(word_4f216));	// 89198                  push    ds:word_4F216 ;~ 17C5:2F31
cs=0x17c5;eip=0x002f35; 	T(ax = 0x200;);	// 89199                  mov     ax, 200h ;~ 17C5:2F35
cs=0x17c5;eip=0x002f38; 	X(PUSH(ax));	// 89200                  push    ax ;~ 17C5:2F38
cs=0x17c5;eip=0x002f39; 	T(ax = 1;);	// 89201                  mov     ax, 1 ;~ 17C5:2F39
cs=0x17c5;eip=0x002f3c; 	X(PUSH(ax));	// 89202                  push    ax ;~ 17C5:2F3C
cs=0x17c5;eip=0x002f3d; 	T(ax = 0x6952;);	// 89203                  mov     ax, 6952h ;~ 17C5:2F3D
cs=0x17c5;eip=0x002f40; 	X(PUSH(ax));	// 89204                  push    ax ;~ 17C5:2F40
cs=0x17c5;eip=0x002f41; 	J(CALL(sub_3497c,0));	// 89205                  call    sub_3497C ;~ 17C5:2F41
cs=0x17c5;eip=0x002f44; 	T(ADD(sp, 8));	// 89206                  add     sp, 8 ;~ 17C5:2F44
cs=0x17c5;eip=0x002f47; 	X(PUSH(word_4f216));	// 89207                  push    ds:word_4F216 ;~ 17C5:2F47
cs=0x17c5;eip=0x002f4b; 	T(ax = 0x200;);	// 89208                  mov     ax, 200h ;~ 17C5:2F4B
cs=0x17c5;eip=0x002f4e; 	X(PUSH(ax));	// 89209                  push    ax ;~ 17C5:2F4E
cs=0x17c5;eip=0x002f4f; 	T(ax = 1;);	// 89210                  mov     ax, 1 ;~ 17C5:2F4F
cs=0x17c5;eip=0x002f52; 	X(PUSH(ax));	// 89211                  push    ax ;~ 17C5:2F52
cs=0x17c5;eip=0x002f53; 	T(ax = 0x674E;);	// 89212                  mov     ax, 674Eh ;~ 17C5:2F53
cs=0x17c5;eip=0x002f56; 	X(PUSH(ax));	// 89213                  push    ax ;~ 17C5:2F56
cs=0x17c5;eip=0x002f57; 	J(CALL(sub_3497c,0));	// 89214                  call    sub_3497C ;~ 17C5:2F57
cs=0x17c5;eip=0x002f5a; 	T(ADD(sp, 8));	// 89215                  add     sp, 8 ;~ 17C5:2F5A
cs=0x17c5;eip=0x002f5d; 	X(PUSH(word_4f216));	// 89216                  push    ds:word_4F216 ;~ 17C5:2F5D
cs=0x17c5;eip=0x002f61; 	J(CALL(sub_3489a,0));	// 89217                  call    sub_3489A ;~ 17C5:2F61
cs=0x17c5;eip=0x002f64; 	T(ADD(sp, 2));	// 89218                  add     sp, 2 ;~ 17C5:2F64
cs=0x17c5;eip=0x002f67; 	T(ax = 0x40;);	// 89219                  mov     ax, 40h ; '@' ;~ 17C5:2F67
cs=0x17c5;eip=0x002f6a; 	X(PUSH(ax));	// 89220                  push    ax ;~ 17C5:2F6A
cs=0x17c5;eip=0x002f6b; 	T(LES(bx, dword_4f220));	// 89221                  les     bx, ds:dword_4F220 ;~ 17C5:2F6B
cs=0x17c5;eip=0x002f6f; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x38))));	// 89223                  mov     ax, es:[bx+38h] ;~ 17C5:2F6F
cs=0x17c5;eip=0x002f73; 	T(AND(ax, 7));	// 89224                  and     ax, 7 ;~ 17C5:2F73
cs=0x17c5;eip=0x002f76; 	T(cl = 6;);	// 89225                  mov     cl, 6 ;~ 17C5:2F76
cs=0x17c5;eip=0x002f78; 	T(SHL(ax, cl));	// 89226                  shl     ax, cl ;~ 17C5:2F78
cs=0x17c5;eip=0x002f7a; 	T(ADD(ax, 0x156A));	// 89227                  add     ax, 156Ah ;~ 17C5:2F7A
cs=0x17c5;eip=0x002f7d; 	X(PUSH(ax));	// 89228                  push    ax ;~ 17C5:2F7D
cs=0x17c5;eip=0x002f7e; 	T(ax = 0x8050;);	// 89229                  mov     ax, 8050h ;~ 17C5:2F7E
cs=0x17c5;eip=0x002f81; 	X(PUSH(ax));	// 89230                  push    ax ;~ 17C5:2F81
cs=0x17c5;eip=0x002f82; 	J(CALL(sub_34d94,0));	// 89231                  call    sub_34D94 ;~ 17C5:2F82
cs=0x17c5;eip=0x002f85; 	T(ADD(sp, 6));	// 89233                  add     sp, 6 ;~ 17C5:2F85
loc_291b8:
	// 5220 
cs=0x17c5;eip=0x002f88; 	T(sp = bp;);	// 89236                  mov     sp, bp ;~ 17C5:2F88
cs=0x17c5;eip=0x002f8a; 	X(POP(bp));	// 89237                  pop     bp ;~ 17C5:2F8A
cs=0x17c5;eip=0x002f8b; 	J(RETN(0));	// 89238                  retn ;~ 17C5:2F8B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29098: 	goto loc_29098;
        case m2c::kloc_290e5: 	goto loc_290e5;
        case m2c::kloc_2911f: 	goto loc_2911f;
        case m2c::kloc_291b8: 	goto loc_291b8;
        case m2c::kseg2623_2eba_proc: 	goto seg2623_2eba_proc;
        case m2c::ksub_29084: 	goto sub_29084;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group27(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group27:
    _begin:
print_line:
	// 89245 
#undef arg_0
#define arg_0 4
	// 89248 arg_0           = dword ptr  4 ;~ 17C5:2F8C
cs=0x17c5;eip=0x002f8c; 	X(PUSH(bp));	// 89250                  push    bp ;~ 17C5:2F8C
cs=0x17c5;eip=0x002f8d; 	T(bp = sp;);	// 89251                  mov     bp, sp ;~ 17C5:2F8D
cs=0x17c5;eip=0x002f8f; 	J(CALLF(sub_49afc,0));	// 89252                  call    far ptr sub_49AFC ;~ 17C5:2F8F
cs=0x17c5;eip=0x002f94; 	T(ax = 0x0F;);	// 89254                  mov     ax, 0Fh ;~ 17C5:2F94
cs=0x17c5;eip=0x002f97; 	X(PUSH(ax));	// 89255                  push    ax ;~ 17C5:2F97
cs=0x17c5;eip=0x002f98; 	T(ax = 0x60;);	// 89256                  mov     ax, 60h ; '`' ;~ 17C5:2F98
cs=0x17c5;eip=0x002f9b; 	X(PUSH(ax));	// 89257                  push    ax ;~ 17C5:2F9B
cs=0x17c5;eip=0x002f9c; 	T(SUB(ax, ax));	// 89258                  sub     ax, ax ;~ 17C5:2F9C
cs=0x17c5;eip=0x002f9e; 	X(PUSH(ax));	// 89259                  push    ax ;~ 17C5:2F9E
cs=0x17c5;eip=0x002f9f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 89260                  push    word ptr [bp+arg_0] ;~ 17C5:2F9F
cs=0x17c5;eip=0x002fa2; 	J(CALL(sub_302fb,0));	// 89261                  call    sub_302FB ;~ 17C5:2FA2
seg2623_2fa5_proc:
	// 89265 
cs=0x17c5;eip=0x002fa5; 	T(ADD(sp, 8));	// 89265                  add     sp, 8 ;~ 17C5:2FA5
cs=0x17c5;eip=0x002fa8; 	J(CALL(sub_34c9a,0));	// 89266                  call    sub_34C9A ;~ 17C5:2FA8
cs=0x17c5;eip=0x002fab; 	T(sp = bp;);	// 89267                  mov     sp, bp ;~ 17C5:2FAB
cs=0x17c5;eip=0x002fad; 	X(POP(bp));	// 89268                  pop     bp ;~ 17C5:2FAD
cs=0x17c5;eip=0x002fae; 	J(RETN(0));	// 89269                  retn ;~ 17C5:2FAE

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kprint_line: 	goto print_line;
        case m2c::kseg2623_2fa5_proc: 	goto seg2623_2fa5_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_291df(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_291df:
    _begin:
#undef var_2
#define var_2 -2
	// 89278 var_2           = byte ptr -2 ;~ 17C5:2FAF
#undef arg_0
#define arg_0 4
	// 89279 arg_0           = word ptr  4 ;~ 17C5:2FAF
#undef arg_2
#define arg_2 6
	// 89280 arg_2           = word ptr  6 ;~ 17C5:2FAF
cs=0x17c5;eip=0x002faf; 	X(PUSH(bp));	// 89282                  push    bp ;~ 17C5:2FAF
cs=0x17c5;eip=0x002fb0; 	T(bp = sp;);	// 89283                  mov     bp, sp ;~ 17C5:2FB0
cs=0x17c5;eip=0x002fb2; 	T(SUB(sp, 2));	// 89284                  sub     sp, 2 ;~ 17C5:2FB2
loc_291e5:
	// 5221 
cs=0x17c5;eip=0x002fb5; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 89287                  mov     bx, [bp+arg_0] ;~ 17C5:2FB5
cs=0x17c5;eip=0x002fb8; 	T(MOV(al, *(raddr(ds,bx))));	// 89288                  mov     al, [bx] ;~ 17C5:2FB8
cs=0x17c5;eip=0x002fba; 	X(MOV(*(raddr(ss,bp+var_2)), al));	// 89289                  mov     [bp+var_2], al ;~ 17C5:2FBA
cs=0x17c5;eip=0x002fbd; 	T(CMP(al, 0x2E));	// 89290                  cmp     al, 2Eh ; '.' ;~ 17C5:2FBD
cs=0x17c5;eip=0x002fbf; 	J(JZ(loc_291fa));	// 89291                  jz      short loc_291FA ;~ 17C5:2FBF
cs=0x17c5;eip=0x002fc1; 	T(OR(al, al));	// 89292                  or      al, al ;~ 17C5:2FC1
cs=0x17c5;eip=0x002fc3; 	J(JZ(loc_291fa));	// 89293                  jz      short loc_291FA ;~ 17C5:2FC3
cs=0x17c5;eip=0x002fc5; 	X(INC(*(dw*)(raddr(ss,bp+arg_0))));	// 89294                  inc     [bp+arg_0] ;~ 17C5:2FC5
cs=0x17c5;eip=0x002fc8; 	J(JMP(loc_291e5));	// 89295                  jmp     short loc_291E5 ;~ 17C5:2FC8
loc_291fa:
	// 5222 
cs=0x17c5;eip=0x002fca; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 89300                  push    [bp+arg_2] ;~ 17C5:2FCA
cs=0x17c5;eip=0x002fcd; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 89301                  push    [bp+arg_0] ;~ 17C5:2FCD
cs=0x17c5;eip=0x002fd0; 	J(CALL(sub_34c1c,0));	// 89302                  call    sub_34C1C ;~ 17C5:2FD0
cs=0x17c5;eip=0x002fd3; 	T(ADD(sp, 4));	// 89303                  add     sp, 4 ;~ 17C5:2FD3
cs=0x17c5;eip=0x002fd6; 	T(sp = bp;);	// 89304                  mov     sp, bp ;~ 17C5:2FD6
cs=0x17c5;eip=0x002fd8; 	X(POP(bp));	// 89305                  pop     bp ;~ 17C5:2FD8
cs=0x17c5;eip=0x002fd9; 	J(RETN(0));	// 89306                  retn ;~ 17C5:2FD9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_291e5: 	goto loc_291e5;
        case m2c::kloc_291fa: 	goto loc_291fa;
        case m2c::ksub_291df: 	goto sub_291df;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2920a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2920a:
    _begin:
#undef var_24
#define var_24 -0x24
	// 89318 var_24          = word ptr -24h ;~ 17C5:2FDA
#undef var_22
#define var_22 -0x22
	// 89319 var_22          = word ptr -22h ;~ 17C5:2FDA
#undef var_20
#define var_20 -0x20
	// 89320 var_20          = word ptr -20h ;~ 17C5:2FDA
#undef var_1e
#define var_1e -0x1E
	// 89321 var_1E          = word ptr -1Eh ;~ 17C5:2FDA
#undef var_1c
#define var_1c -0x1C
	// 89322 var_1C          = word ptr -1Ch ;~ 17C5:2FDA
#undef var_1a
#define var_1a -0x1A
	// 89323 var_1A          = word ptr -1Ah ;~ 17C5:2FDA
#undef var_18
#define var_18 -0x18
	// 89324 var_18          = word ptr -18h ;~ 17C5:2FDA
#undef var_16
#define var_16 -0x16
	// 89325 var_16          = word ptr -16h ;~ 17C5:2FDA
#undef var_14
#define var_14 -0x14
	// 89326 var_14          = word ptr -14h ;~ 17C5:2FDA
#undef var_12
#define var_12 -0x12
	// 89327 var_12          = word ptr -12h ;~ 17C5:2FDA
#undef var_10
#define var_10 -0x10
	// 89328 var_10          = word ptr -10h ;~ 17C5:2FDA
#undef var_e
#define var_e -0x0E
	// 89329 var_E           = word ptr -0Eh ;~ 17C5:2FDA
#undef var_c
#define var_c -0x0C
	// 89330 var_C           = word ptr -0Ch ;~ 17C5:2FDA
#undef var_a
#define var_a -0x0A
	// 89331 var_A           = word ptr -0Ah ;~ 17C5:2FDA
#undef var_8
#define var_8 -8
	// 89332 var_8           = word ptr -8 ;~ 17C5:2FDA
#undef var_6
#define var_6 -6
	// 89333 var_6           = word ptr -6 ;~ 17C5:2FDA
#undef var_4
#define var_4 -4
	// 89334 var_4           = word ptr -4 ;~ 17C5:2FDA
#undef var_2
#define var_2 -2
	// 89335 var_2           = word ptr -2 ;~ 17C5:2FDA
#undef arg_0
#define arg_0 4
	// 89336 arg_0           = word ptr  4 ;~ 17C5:2FDA
#undef arg_2
#define arg_2 6
	// 89337 arg_2           = word ptr  6 ;~ 17C5:2FDA
#undef arg_4
#define arg_4 8
	// 89338 arg_4           = word ptr  8 ;~ 17C5:2FDA
#undef arg_6
#define arg_6 0x0A
	// 89339 arg_6           = word ptr  0Ah ;~ 17C5:2FDA
cs=0x17c5;eip=0x002fda; 	X(PUSH(bp));	// 89341                  push    bp ;~ 17C5:2FDA
cs=0x17c5;eip=0x002fdb; 	T(bp = sp;);	// 89342                  mov     bp, sp ;~ 17C5:2FDB
cs=0x17c5;eip=0x002fdd; 	T(SUB(sp, 0x24));	// 89343                  sub     sp, 24h ;~ 17C5:2FDD
cs=0x17c5;eip=0x002fe0; 	X(PUSH(di));	// 89344                  push    di ;~ 17C5:2FE0
cs=0x17c5;eip=0x002fe1; 	X(PUSH(si));	// 89345                  push    si ;~ 17C5:2FE1
cs=0x17c5;eip=0x002fe2; 	X(word_51a12 = 0x7FFF;);	// 89346                  mov     ds:word_51A12, 7FFFh ;~ 17C5:2FE2
cs=0x17c5;eip=0x002fe8; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), 1));	// 89347                  mov     [bp+var_C], 1 ;~ 17C5:2FE8
cs=0x17c5;eip=0x002fed; 	J(JMP(loc_2942b));	// 89348                  jmp     loc_2942B ;~ 17C5:2FED
loc_29220:
	// 5223 
cs=0x17c5;eip=0x002ff0; 	T(cl = 2;);	// 89352                  mov     cl, 2 ;~ 17C5:2FF0
cs=0x17c5;eip=0x002ff2; 	X(SHL(*(dw*)(raddr(ss,bp+var_16)), cl));	// 89353                  shl     [bp+var_16], cl ;~ 17C5:2FF2
cs=0x17c5;eip=0x002ff5; 	X(SHL(*(dw*)(raddr(ss,bp+var_1a)), cl));	// 89354                  shl     [bp+var_1A], cl ;~ 17C5:2FF5
loc_29228:
	// 5224 
cs=0x17c5;eip=0x002ff8; 	T(bx = word_527d8;);	// 89357                  mov     bx, ds:word_527D8 ;~ 17C5:2FF8
cs=0x17c5;eip=0x002ffc; 	T(MOV(al, *(raddr(ds,bx+6))));	// 89358                  mov     al, [bx+6] ;~ 17C5:2FFC
cs=0x17c5;eip=0x002fff; 	T(SUB(ah, ah));	// 89359                  sub     ah, ah ;~ 17C5:2FFF
cs=0x17c5;eip=0x003001; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 89360                  mov     [bp+var_14], ax ;~ 17C5:3001
cs=0x17c5;eip=0x003004; 	T(TEST(*(raddr(ds,bx+6)), 0x80));	// 89361                  test    byte ptr [bx+6], 80h ;~ 17C5:3004
cs=0x17c5;eip=0x003008; 	J(JZ(loc_29261));	// 89362                  jz      short loc_29261 ;~ 17C5:3008
cs=0x17c5;eip=0x00300a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 89363                  push    [bp+var_1C] ;~ 17C5:300A
cs=0x17c5;eip=0x00300d; 	X(PUSH(*(dw*)(raddr(ss,bp+var_18))));	// 89364                  push    [bp+var_18] ;~ 17C5:300D
cs=0x17c5;eip=0x003010; 	X(PUSH(*(dw*)(raddr(ss,bp+var_12))));	// 89365                  push    [bp+var_12] ;~ 17C5:3010
cs=0x17c5;eip=0x003013; 	X(PUSH(*(dw*)(raddr(ss,bp+var_c))));	// 89366                  push    [bp+var_C] ;~ 17C5:3013
cs=0x17c5;eip=0x003016; 	J(CALL(sub_29496,0));	// 89367                  call    sub_29496 ;~ 17C5:3016
cs=0x17c5;eip=0x003019; 	T(ADD(sp, 8));	// 89368                  add     sp, 8 ;~ 17C5:3019
cs=0x17c5;eip=0x00301c; 	T(OR(ax, ax));	// 89369                  or      ax, ax ;~ 17C5:301C
cs=0x17c5;eip=0x00301e; 	J(JZ(loc_29261));	// 89370                  jz      short loc_29261 ;~ 17C5:301E
cs=0x17c5;eip=0x003020; 	T(bx = word_4ef0e;);	// 89371                  mov     bx, ds:word_4EF0E ;~ 17C5:3020
cs=0x17c5;eip=0x003024; 	T(cl = 3;);	// 89372                  mov     cl, 3 ;~ 17C5:3024
cs=0x17c5;eip=0x003026; 	T(SHL(bx, cl));	// 89373                  shl     bx, cl ;~ 17C5:3026
cs=0x17c5;eip=0x003028; 	T(MOV(al, *(raddr(ds,bx-0x73C4))));	// 89374                  mov     al, [bx-73C4h] ;~ 17C5:3028
cs=0x17c5;eip=0x00302c; 	T(SUB(ah, ah));	// 89375                  sub     ah, ah ;~ 17C5:302C
cs=0x17c5;eip=0x00302e; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 89376                  mov     [bp+var_14], ax ;~ 17C5:302E
loc_29261:
	// 5225 
cs=0x17c5;eip=0x003031; 	T(ax = word_51a12;);	// 89380                  mov     ax, ds:word_51A12 ;~ 17C5:3031
cs=0x17c5;eip=0x003034; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), ax));	// 89381                  cmp     [bp+var_6], ax ;~ 17C5:3034
cs=0x17c5;eip=0x003037; 	J(JGE(loc_292e2));	// 89382                  jge     short loc_292E2 ;~ 17C5:3037
cs=0x17c5;eip=0x003039; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_14))));	// 89383                  mov     bx, [bp+var_14] ;~ 17C5:3039
cs=0x17c5;eip=0x00303c; 	T(SHL(bx, 1));	// 89384                  shl     bx, 1 ;~ 17C5:303C
cs=0x17c5;eip=0x00303e; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x130A))));	// 89385                  mov     ax, [bx+130Ah] ;~ 17C5:303E
cs=0x17c5;eip=0x003042; 	T(ADD(ax, 0));	// 89386                  add     ax, 0 ;~ 17C5:3042
cs=0x17c5;eip=0x003045; 	X(*(dw*)(&dword_4a46c) = ax;);	// 89387                  mov     word ptr dword_4A46C, ax ;~ 17C5:3045
cs=0x17c5;eip=0x003048; 	X(*(dw*)(((db*)&dword_4a46c)+2) = seg_offset(seg38b0););	// 89388                  mov     word ptr dword_4A46C+2, seg seg38b0 ;~ 17C5:3048
cs=0x17c5;eip=0x00304e; 	T(LES(bx, dword_4a46c));	// 89389                  les     bx, dword_4A46C ;~ 17C5:304E
cs=0x17c5;eip=0x003052; 	T(CMP(*(dw*)(raddr(es,bx)), 0));	// 89391                  cmp     word ptr es:[bx], 0 ;~ 17C5:3052
cs=0x17c5;eip=0x003056; 	J(JNZ(loc_29296));	// 89392                  jnz     short loc_29296 ;~ 17C5:3056
cs=0x17c5;eip=0x003058; 	T(CMP(*(raddr(es,bx+2)), 0));	// 89393                  cmp     byte ptr es:[bx+2], 0 ;~ 17C5:3058
cs=0x17c5;eip=0x00305d; 	J(JNZ(loc_29296));	// 89394                  jnz     short loc_29296 ;~ 17C5:305D
cs=0x17c5;eip=0x00305f; 	T(CMP(word_49934, 0));	// 89395                  cmp     word_49934, 0 ;~ 17C5:305F
cs=0x17c5;eip=0x003064; 	J(JZ(loc_292e2));	// 89396                  jz      short loc_292E2 ;~ 17C5:3064
loc_29296:
	// 5226 
cs=0x17c5;eip=0x003066; 	T(MOV(al, *(raddr(ss,bp+var_c))));	// 89400                  mov     al, byte ptr [bp+var_C] ;~ 17C5:3066
cs=0x17c5;eip=0x003069; 	X(byte_51a1e = al;);	// 89401                  mov     ds:byte_51A1E, al ;~ 17C5:3069
cs=0x17c5;eip=0x00306c; 	T(MOV(al, *(raddr(ss,bp+var_12))));	// 89402                  mov     al, byte ptr [bp+var_12] ;~ 17C5:306C
cs=0x17c5;eip=0x00306f; 	X(byte_51a1f = al;);	// 89403                  mov     ds:byte_51A1F, al ;~ 17C5:306F
cs=0x17c5;eip=0x003072; 	T(MOV(al, *(raddr(ss,bp+var_18))));	// 89404                  mov     al, byte ptr [bp+var_18] ;~ 17C5:3072
cs=0x17c5;eip=0x003075; 	X(byte_51a20 = al;);	// 89405                  mov     ds:byte_51A20, al ;~ 17C5:3075
cs=0x17c5;eip=0x003078; 	T(MOV(al, *(raddr(ss,bp+var_1c))));	// 89406                  mov     al, byte ptr [bp+var_1C] ;~ 17C5:3078
cs=0x17c5;eip=0x00307b; 	X(byte_51a21 = al;);	// 89407                  mov     ds:byte_51A21, al ;~ 17C5:307B
cs=0x17c5;eip=0x00307e; 	T(ax = word_527d8;);	// 89408                  mov     ax, ds:word_527D8 ;~ 17C5:307E
cs=0x17c5;eip=0x003081; 	X(word_51a1c = ax;);	// 89409                  mov     ds:word_51A1C, ax ;~ 17C5:3081
cs=0x17c5;eip=0x003084; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 89410                  mov     ax, [bp+var_14] ;~ 17C5:3084
cs=0x17c5;eip=0x003087; 	X(word_51a10 = ax;);	// 89411                  mov     ds:word_51A10, ax ;~ 17C5:3087
cs=0x17c5;eip=0x00308a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 89412                  mov     ax, [bp+var_6] ;~ 17C5:308A
cs=0x17c5;eip=0x00308d; 	X(word_51a12 = ax;);	// 89413                  mov     ds:word_51A12, ax ;~ 17C5:308D
cs=0x17c5;eip=0x003090; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_16))));	// 89414                  mov     ax, [bp+var_16] ;~ 17C5:3090
cs=0x17c5;eip=0x003093; 	T(CWD);	// 89415                  cwd ;~ 17C5:3093
cs=0x17c5;eip=0x003094; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 89416                  add     ax, [bp+arg_0] ;~ 17C5:3094
cs=0x17c5;eip=0x003097; 	T(ADC(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 89417                  adc     dx, [bp+arg_2] ;~ 17C5:3097
cs=0x17c5;eip=0x00309a; 	X(word_51a14 = ax;);	// 89418                  mov     ds:word_51A14, ax ;~ 17C5:309A
cs=0x17c5;eip=0x00309d; 	X(word_51a16 = dx;);	// 89419                  mov     ds:word_51A16, dx ;~ 17C5:309D
cs=0x17c5;eip=0x0030a1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1a))));	// 89420                  mov     ax, [bp+var_1A] ;~ 17C5:30A1
cs=0x17c5;eip=0x0030a4; 	T(CWD);	// 89421                  cwd ;~ 17C5:30A4
cs=0x17c5;eip=0x0030a5; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 89422                  add     ax, [bp+arg_4] ;~ 17C5:30A5
cs=0x17c5;eip=0x0030a8; 	T(ADC(dx, *(dw*)(raddr(ss,bp+arg_6))));	// 89423                  adc     dx, [bp+arg_6] ;~ 17C5:30A8
cs=0x17c5;eip=0x0030ab; 	X(word_51a18 = ax;);	// 89424                  mov     ds:word_51A18, ax ;~ 17C5:30AB
cs=0x17c5;eip=0x0030ae; 	X(word_51a1a = dx;);	// 89425                  mov     ds:word_51A1A, dx ;~ 17C5:30AE
loc_292e2:
	// 5227 
cs=0x17c5;eip=0x0030b2; 	X(ADD(word_527d8, 7));	// 89429                  add     ds:word_527D8, 7 ;~ 17C5:30B2
cs=0x17c5;eip=0x0030b7; 	X(INC(*(dw*)(raddr(ss,bp+var_12))));	// 89430                  inc     [bp+var_12] ;~ 17C5:30B7
loc_292ea:
	// 5228 
cs=0x17c5;eip=0x0030ba; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_c))));	// 89433                  mov     si, [bp+var_C] ;~ 17C5:30BA
cs=0x17c5;eip=0x0030bd; 	T(cl = 6;);	// 89434                  mov     cl, 6 ;~ 17C5:30BD
cs=0x17c5;eip=0x0030bf; 	T(SHL(si, cl));	// 89435                  shl     si, cl ;~ 17C5:30BF
cs=0x17c5;eip=0x0030c1; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_22))));	// 89436                  mov     bx, [bp+var_22] ;~ 17C5:30C1
cs=0x17c5;eip=0x0030c4; 	T(SHL(bx, 1));	// 89437                  shl     bx, 1 ;~ 17C5:30C4
cs=0x17c5;eip=0x0030c6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_12))));	// 89438                  mov     ax, [bp+var_12] ;~ 17C5:30C6
cs=0x17c5;eip=0x0030c9; 	T(CMP(*(dw*)(raddr(ds,bx+si+0x13E0)), ax));	// 89439                  cmp     [bx+si+13E0h], ax ;~ 17C5:30C9
cs=0x17c5;eip=0x0030cd; 	J(JBE(loc_2934e));	// 89440                  jbe     short loc_2934E ;~ 17C5:30CD
cs=0x17c5;eip=0x0030cf; 	T(bx = word_527d8;);	// 89441                  mov     bx, ds:word_527D8 ;~ 17C5:30CF
cs=0x17c5;eip=0x0030d3; 	T(MOV(bl, *(raddr(ds,bx+6))));	// 89442                  mov     bl, [bx+6] ;~ 17C5:30D3
cs=0x17c5;eip=0x0030d6; 	T(AND(bx, 0x7F));	// 89443                  and     bx, 7Fh ;~ 17C5:30D6
cs=0x17c5;eip=0x0030d9; 	T(CMP(*(raddr(ds,bx-0x690C)), 0));	// 89444                  cmp     byte ptr [bx-690Ch], 0 ;~ 17C5:30D9
cs=0x17c5;eip=0x0030de; 	J(JZ(loc_292e2));	// 89445                  jz      short loc_292E2 ;~ 17C5:30DE
cs=0x17c5;eip=0x0030e0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_24))));	// 89446                  mov     ax, [bp+var_24] ;~ 17C5:30E0
cs=0x17c5;eip=0x0030e3; 	T(bx = word_527d8;);	// 89447                  mov     bx, ds:word_527D8 ;~ 17C5:30E3
cs=0x17c5;eip=0x0030e7; 	T(ADD(ax, *(dw*)(raddr(ds,bx))));	// 89448                  add     ax, [bx] ;~ 17C5:30E7
cs=0x17c5;eip=0x0030e9; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), ax));	// 89449                  mov     [bp+var_16], ax ;~ 17C5:30E9
cs=0x17c5;eip=0x0030ec; 	T(MOV(ax, *(dw*)(raddr(ds,bx+2))));	// 89450                  mov     ax, [bx+2] ;~ 17C5:30EC
cs=0x17c5;eip=0x0030ef; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_2))));	// 89451                  add     ax, [bp+var_2] ;~ 17C5:30EF
cs=0x17c5;eip=0x0030f2; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 89452                  mov     [bp+var_1A], ax ;~ 17C5:30F2
cs=0x17c5;eip=0x0030f5; 	X(PUSH(ax));	// 89453                  push    ax ;~ 17C5:30F5
cs=0x17c5;eip=0x0030f6; 	J(CALL(sub_34dc0,0));	// 89454                  call    sub_34DC0 ;~ 17C5:30F6
cs=0x17c5;eip=0x0030f9; 	T(ADD(sp, 2));	// 89455                  add     sp, 2 ;~ 17C5:30F9
cs=0x17c5;eip=0x0030fc; 	X(PUSH(*(dw*)(raddr(ss,bp+var_16))));	// 89456                  push    [bp+var_16] ;~ 17C5:30FC
cs=0x17c5;eip=0x0030ff; 	T(si = ax;);	// 89457                  mov     si, ax ;~ 17C5:30FF
cs=0x17c5;eip=0x003101; 	J(CALL(sub_34dc0,0));	// 89458                  call    sub_34DC0 ;~ 17C5:3101
cs=0x17c5;eip=0x003104; 	T(ADD(sp, 2));	// 89459                  add     sp, 2 ;~ 17C5:3104
cs=0x17c5;eip=0x003107; 	T(ADD(ax, si));	// 89460                  add     ax, si ;~ 17C5:3107
cs=0x17c5;eip=0x003109; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 89461                  mov     [bp+var_6], ax ;~ 17C5:3109
cs=0x17c5;eip=0x00310c; 	T(CMP(*(dw*)(raddr(ss,bp+var_c)), 1));	// 89462                  cmp     [bp+var_C], 1 ;~ 17C5:310C
cs=0x17c5;eip=0x003110; 	J(JZ(loc_29345));	// 89463                  jz      short loc_29345 ;~ 17C5:3110
cs=0x17c5;eip=0x003112; 	J(JMP(loc_29220));	// 89464                  jmp     loc_29220 ;~ 17C5:3112
loc_29345:
	// 5229 
cs=0x17c5;eip=0x003115; 	T(cl = 2;);	// 89468                  mov     cl, 2 ;~ 17C5:3115
cs=0x17c5;eip=0x003117; 	X(SAR(*(dw*)(raddr(ss,bp+var_6)), cl));	// 89469                  sar     [bp+var_6], cl ;~ 17C5:3117
cs=0x17c5;eip=0x00311a; 	J(JMP(loc_29228));	// 89470                  jmp     loc_29228 ;~ 17C5:311A
loc_2934e:
	// 5230 
cs=0x17c5;eip=0x00311e; 	X(INC(*(dw*)(raddr(ss,bp+var_10))));	// 89477                  inc     [bp+var_10] ;~ 17C5:311E
loc_29351:
	// 5231 
cs=0x17c5;eip=0x003121; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 9));	// 89480                  cmp     [bp+var_10], 9 ;~ 17C5:3121
cs=0x17c5;eip=0x003125; 	J(JL(loc_2935a));	// 89481                  jl      short loc_2935A ;~ 17C5:3125
cs=0x17c5;eip=0x003127; 	J(JMP(loc_29428));	// 89482                  jmp     loc_29428 ;~ 17C5:3127
loc_2935a:
	// 5232 
cs=0x17c5;eip=0x00312a; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 89486                  push    [bp+arg_2] ;~ 17C5:312A
cs=0x17c5;eip=0x00312d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 89487                  push    [bp+arg_0] ;~ 17C5:312D
cs=0x17c5;eip=0x003130; 	X(PUSH(*(dw*)(raddr(ss,bp+var_c))));	// 89488                  push    [bp+var_C] ;~ 17C5:3130
cs=0x17c5;eip=0x003133; 	J(CALL(sub_288e4,0));	// 89489                  call    sub_288E4 ;~ 17C5:3133
cs=0x17c5;eip=0x003136; 	T(ADD(sp, 6));	// 89490                  add     sp, 6 ;~ 17C5:3136
cs=0x17c5;eip=0x003139; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), ax));	// 89491                  mov     [bp+var_20], ax ;~ 17C5:3139
cs=0x17c5;eip=0x00313c; 	X(MOV(*(dw*)(raddr(ss,bp+var_1e)), dx));	// 89492                  mov     [bp+var_1E], dx ;~ 17C5:313C
cs=0x17c5;eip=0x00313f; 	T(cl = 0x0C;);	// 89493                  mov     cl, 0Ch ;~ 17C5:313F
loc_29371:
	// 5233 
cs=0x17c5;eip=0x003141; 	T(SHR(dx, 1));	// 89496                  shr     dx, 1 ;~ 17C5:3141
cs=0x17c5;eip=0x003143; 	T(RCR(ax, 1));	// 89497                  rcr     ax, 1 ;~ 17C5:3143
cs=0x17c5;eip=0x003145; 	T(DEC(cl));	// 89498                  dec     cl ;~ 17C5:3145
cs=0x17c5;eip=0x003147; 	J(JNZ(loc_29371));	// 89499                  jnz     short loc_29371 ;~ 17C5:3147
cs=0x17c5;eip=0x003149; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 89500                  mov     [bp+var_18], ax ;~ 17C5:3149
cs=0x17c5;eip=0x00314c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 89501                  mov     ax, [bp+var_20] ;~ 17C5:314C
cs=0x17c5;eip=0x00314f; 	T(AND(ah, 0x0F));	// 89502                  and     ah, 0Fh ;~ 17C5:314F
cs=0x17c5;eip=0x003152; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 89503                  mov     [bp+var_A], ax ;~ 17C5:3152
cs=0x17c5;eip=0x003155; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 89504                  push    [bp+arg_6] ;~ 17C5:3155
cs=0x17c5;eip=0x003158; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 89505                  push    [bp+arg_4] ;~ 17C5:3158
cs=0x17c5;eip=0x00315b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_c))));	// 89506                  push    [bp+var_C] ;~ 17C5:315B
cs=0x17c5;eip=0x00315e; 	J(CALL(sub_288e4,0));	// 89507                  call    sub_288E4 ;~ 17C5:315E
cs=0x17c5;eip=0x003161; 	T(ADD(sp, 6));	// 89508                  add     sp, 6 ;~ 17C5:3161
cs=0x17c5;eip=0x003164; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), ax));	// 89509                  mov     [bp+var_20], ax ;~ 17C5:3164
cs=0x17c5;eip=0x003167; 	X(MOV(*(dw*)(raddr(ss,bp+var_1e)), dx));	// 89510                  mov     [bp+var_1E], dx ;~ 17C5:3167
cs=0x17c5;eip=0x00316a; 	T(cl = 0x0C;);	// 89511                  mov     cl, 0Ch ;~ 17C5:316A
loc_2939c:
	// 5234 
cs=0x17c5;eip=0x00316c; 	T(SHR(dx, 1));	// 89514                  shr     dx, 1 ;~ 17C5:316C
cs=0x17c5;eip=0x00316e; 	T(RCR(ax, 1));	// 89515                  rcr     ax, 1 ;~ 17C5:316E
cs=0x17c5;eip=0x003170; 	T(DEC(cl));	// 89516                  dec     cl ;~ 17C5:3170
cs=0x17c5;eip=0x003172; 	J(JNZ(loc_2939c));	// 89517                  jnz     short loc_2939C ;~ 17C5:3172
cs=0x17c5;eip=0x003174; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 89518                  mov     [bp+var_1C], ax ;~ 17C5:3174
cs=0x17c5;eip=0x003177; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 89519                  mov     ax, [bp+var_20] ;~ 17C5:3177
cs=0x17c5;eip=0x00317a; 	T(AND(ah, 0x0F));	// 89520                  and     ah, 0Fh ;~ 17C5:317A
cs=0x17c5;eip=0x00317d; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 89521                  mov     [bp+var_E], ax ;~ 17C5:317D
cs=0x17c5;eip=0x003180; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_10))));	// 89522                  mov     si, [bp+var_10] ;~ 17C5:3180
cs=0x17c5;eip=0x003183; 	T(SHL(si, 1));	// 89523                  shl     si, 1 ;~ 17C5:3183
cs=0x17c5;eip=0x003185; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x12C4))));	// 89524                  mov     ax, [si+12C4h] ;~ 17C5:3185
cs=0x17c5;eip=0x003189; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 89525                  mov     [bp+var_4], ax ;~ 17C5:3189
cs=0x17c5;eip=0x00318c; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x12D6))));	// 89526                  mov     ax, [si+12D6h] ;~ 17C5:318C
cs=0x17c5;eip=0x003190; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 89527                  mov     [bp+var_8], ax ;~ 17C5:3190
cs=0x17c5;eip=0x003193; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 89528                  mov     bx, [bp+var_4] ;~ 17C5:3193
cs=0x17c5;eip=0x003196; 	T(SHL(bx, 1));	// 89529                  shl     bx, 1 ;~ 17C5:3196
cs=0x17c5;eip=0x003198; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x12EC))));	// 89530                  mov     ax, [bx+12ECh] ;~ 17C5:3198
cs=0x17c5;eip=0x00319c; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_a))));	// 89531                  sub     ax, [bp+var_A] ;~ 17C5:319C
cs=0x17c5;eip=0x00319f; 	T(ADD(ah, 8));	// 89532                  add     ah, 8 ;~ 17C5:319F
cs=0x17c5;eip=0x0031a2; 	X(MOV(*(dw*)(raddr(ss,bp+var_24)), ax));	// 89533                  mov     [bp+var_24], ax ;~ 17C5:31A2
cs=0x17c5;eip=0x0031a5; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_8))));	// 89534                  mov     bx, [bp+var_8] ;~ 17C5:31A5
cs=0x17c5;eip=0x0031a8; 	T(SHL(bx, 1));	// 89535                  shl     bx, 1 ;~ 17C5:31A8
cs=0x17c5;eip=0x0031aa; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x12EC))));	// 89536                  mov     ax, [bx+12ECh] ;~ 17C5:31AA
cs=0x17c5;eip=0x0031ae; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_e))));	// 89537                  sub     ax, [bp+var_E] ;~ 17C5:31AE
cs=0x17c5;eip=0x0031b1; 	T(ADD(ah, 8));	// 89538                  add     ah, 8 ;~ 17C5:31B1
cs=0x17c5;eip=0x0031b4; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 89539                  mov     [bp+var_2], ax ;~ 17C5:31B4
cs=0x17c5;eip=0x0031b7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 89540                  mov     ax, [bp+var_8] ;~ 17C5:31B7
cs=0x17c5;eip=0x0031ba; 	X(ADD(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 89541                  add     [bp+var_1C], ax ;~ 17C5:31BA
cs=0x17c5;eip=0x0031bd; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 89542                  push    [bp+var_1C] ;~ 17C5:31BD
cs=0x17c5;eip=0x0031c0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 89543                  mov     ax, [bp+var_4] ;~ 17C5:31C0
cs=0x17c5;eip=0x0031c3; 	X(ADD(*(dw*)(raddr(ss,bp+var_18)), ax));	// 89544                  add     [bp+var_18], ax ;~ 17C5:31C3
cs=0x17c5;eip=0x0031c6; 	X(PUSH(*(dw*)(raddr(ss,bp+var_18))));	// 89545                  push    [bp+var_18] ;~ 17C5:31C6
cs=0x17c5;eip=0x0031c9; 	X(PUSH(*(dw*)(raddr(ss,bp+var_c))));	// 89546                  push    [bp+var_C] ;~ 17C5:31C9
cs=0x17c5;eip=0x0031cc; 	J(CALL(sub_2896e,0));	// 89547                  call    sub_2896E ;~ 17C5:31CC
cs=0x17c5;eip=0x0031cf; 	T(ADD(sp, 6));	// 89548                  add     sp, 6 ;~ 17C5:31CF
cs=0x17c5;eip=0x0031d2; 	X(MOV(*(dw*)(raddr(ss,bp+var_22)), ax));	// 89549                  mov     [bp+var_22], ax ;~ 17C5:31D2
cs=0x17c5;eip=0x0031d5; 	T(CMP(ax, 0x0FFFF));	// 89550                  cmp     ax, 0FFFFh ;~ 17C5:31D5
cs=0x17c5;eip=0x0031d8; 	J(JNZ(loc_2940d));	// 89551                  jnz     short loc_2940D ;~ 17C5:31D8
cs=0x17c5;eip=0x0031da; 	J(JMP(loc_2934e));	// 89552                  jmp     loc_2934E ;~ 17C5:31DA
loc_2940d:
	// 5235 
cs=0x17c5;eip=0x0031dd; 	T(MOV(di, *(dw*)(raddr(ss,bp+var_c))));	// 89556                  mov     di, [bp+var_C] ;~ 17C5:31DD
cs=0x17c5;eip=0x0031e0; 	T(cl = 6;);	// 89557                  mov     cl, 6 ;~ 17C5:31E0
cs=0x17c5;eip=0x0031e2; 	T(SHL(di, cl));	// 89558                  shl     di, cl ;~ 17C5:31E2
cs=0x17c5;eip=0x0031e4; 	T(bx = ax;);	// 89559                  mov     bx, ax ;~ 17C5:31E4
cs=0x17c5;eip=0x0031e6; 	T(SHL(bx, 1));	// 89560                  shl     bx, 1 ;~ 17C5:31E6
cs=0x17c5;eip=0x0031e8; 	T(MOV(ax, *(dw*)(raddr(ds,bx+di-0x6450))));	// 89561                  mov     ax, [bx+di-6450h] ;~ 17C5:31E8
cs=0x17c5;eip=0x0031ec; 	X(word_527d8 = ax;);	// 89562                  mov     ds:word_527D8, ax ;~ 17C5:31EC
cs=0x17c5;eip=0x0031ef; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), 0));	// 89563                  mov     [bp+var_12], 0 ;~ 17C5:31EF
cs=0x17c5;eip=0x0031f4; 	J(JMP(loc_292ea));	// 89564                  jmp     loc_292EA ;~ 17C5:31F4
loc_29428:
	// 5236 
cs=0x17c5;eip=0x0031f8; 	X(INC(*(dw*)(raddr(ss,bp+var_c))));	// 89570                  inc     [bp+var_C] ;~ 17C5:31F8
loc_2942b:
	// 5237 
cs=0x17c5;eip=0x0031fb; 	T(CMP(*(dw*)(raddr(ss,bp+var_c)), 2));	// 89573                  cmp     [bp+var_C], 2 ;~ 17C5:31FB
cs=0x17c5;eip=0x0031ff; 	J(JG(loc_2943a));	// 89574                  jg      short loc_2943A ;~ 17C5:31FF
cs=0x17c5;eip=0x003201; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), 0));	// 89575                  mov     [bp+var_10], 0 ;~ 17C5:3201
cs=0x17c5;eip=0x003206; 	J(JMP(loc_29351));	// 89576                  jmp     loc_29351 ;~ 17C5:3206
loc_2943a:
	// 5238 
cs=0x17c5;eip=0x00320a; 	T(CMP(word_51a12, 0x7FFF));	// 89582                  cmp     ds:word_51A12, 7FFFh ;~ 17C5:320A
cs=0x17c5;eip=0x003210; 	J(JZ(loc_2944c));	// 89583                  jz      short loc_2944C ;~ 17C5:3210
cs=0x17c5;eip=0x003212; 	T(ax = 0x8F30;);	// 89584                  mov     ax, 8F30h ;~ 17C5:3212
cs=0x17c5;eip=0x003215; 	X(POP(si));	// 89585                  pop     si ;~ 17C5:3215
cs=0x17c5;eip=0x003216; 	X(POP(di));	// 89586                  pop     di ;~ 17C5:3216
cs=0x17c5;eip=0x003217; 	T(sp = bp;);	// 89587                  mov     sp, bp ;~ 17C5:3217
cs=0x17c5;eip=0x003219; 	X(POP(bp));	// 89588                  pop     bp ;~ 17C5:3219
cs=0x17c5;eip=0x00321a; 	J(RETN(0));	// 89589                  retn ;~ 17C5:321A
loc_2944c:
	// 5239 
cs=0x17c5;eip=0x00321c; 	T(SUB(ax, ax));	// 89595                  sub     ax, ax ;~ 17C5:321C
cs=0x17c5;eip=0x00321e; 	X(POP(si));	// 89596                  pop     si ;~ 17C5:321E
cs=0x17c5;eip=0x00321f; 	X(POP(di));	// 89597                  pop     di ;~ 17C5:321F
cs=0x17c5;eip=0x003220; 	T(sp = bp;);	// 89598                  mov     sp, bp ;~ 17C5:3220
cs=0x17c5;eip=0x003222; 	X(POP(bp));	// 89599                  pop     bp ;~ 17C5:3222
cs=0x17c5;eip=0x003223; 	J(RETN(0));	// 89600                  retn ;~ 17C5:3223

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29220: 	goto loc_29220;
        case m2c::kloc_29228: 	goto loc_29228;
        case m2c::kloc_29261: 	goto loc_29261;
        case m2c::kloc_29296: 	goto loc_29296;
        case m2c::kloc_292e2: 	goto loc_292e2;
        case m2c::kloc_292ea: 	goto loc_292ea;
        case m2c::kloc_29345: 	goto loc_29345;
        case m2c::kloc_2934e: 	goto loc_2934e;
        case m2c::kloc_29351: 	goto loc_29351;
        case m2c::kloc_2935a: 	goto loc_2935a;
        case m2c::kloc_29371: 	goto loc_29371;
        case m2c::kloc_2939c: 	goto loc_2939c;
        case m2c::kloc_2940d: 	goto loc_2940d;
        case m2c::kloc_29428: 	goto loc_29428;
        case m2c::kloc_2942b: 	goto loc_2942b;
        case m2c::kloc_2943a: 	goto loc_2943a;
        case m2c::kloc_2944c: 	goto loc_2944c;
        case m2c::ksub_2920a: 	goto sub_2920a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29454(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29454:
    _begin:
#undef arg_0
#define arg_0 4
	// 89612 arg_0           = word ptr  4 ;~ 17C5:3224
#undef arg_2
#define arg_2 6
	// 89613 arg_2           = word ptr  6 ;~ 17C5:3224
#undef arg_4
#define arg_4 8
	// 89614 arg_4           = byte ptr  8 ;~ 17C5:3224
cs=0x17c5;eip=0x003224; 	X(PUSH(bp));	// 89616                  push    bp ;~ 17C5:3224
cs=0x17c5;eip=0x003225; 	T(bp = sp;);	// 89617                  mov     bp, sp ;~ 17C5:3225
cs=0x17c5;eip=0x003227; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 89618                  mov     bx, [bp+arg_0] ;~ 17C5:3227
cs=0x17c5;eip=0x00322a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 89619                  mov     ax, [bp+arg_2] ;~ 17C5:322A
cs=0x17c5;eip=0x00322d; 	X(MOV(*(dw*)(raddr(ds,bx+0x12)), ax));	// 89620                  mov     [bx+12h], ax ;~ 17C5:322D
cs=0x17c5;eip=0x003230; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 89621                  mov     bx, [bp+arg_0] ;~ 17C5:3230
cs=0x17c5;eip=0x003233; 	T(MOV(al, *(raddr(ss,bp+arg_4))));	// 89622                  mov     al, [bp+arg_4] ;~ 17C5:3233
cs=0x17c5;eip=0x003236; 	X(MOV(*(raddr(ds,bx+0x14)), al));	// 89623                  mov     [bx+14h], al ;~ 17C5:3236
cs=0x17c5;eip=0x003239; 	T(ax = 8;);	// 89624                  mov     ax, 8 ;~ 17C5:3239
cs=0x17c5;eip=0x00323c; 	X(PUSH(ax));	// 89625                  push    ax ;~ 17C5:323C
cs=0x17c5;eip=0x00323d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 89626                  mov     ax, [bp+arg_0] ;~ 17C5:323D
cs=0x17c5;eip=0x003240; 	T(ADD(ax, 0x0E));	// 89627                  add     ax, 0Eh ;~ 17C5:3240
cs=0x17c5;eip=0x003243; 	X(PUSH(ax));	// 89628                  push    ax ;~ 17C5:3243
cs=0x17c5;eip=0x003244; 	T(ax = word_4f228;);	// 89629                  mov     ax, ds:word_4F228 ;~ 17C5:3244
cs=0x17c5;eip=0x003247; 	X(INC(word_4f228));	// 89630                  inc     ds:word_4F228 ;~ 17C5:3247
cs=0x17c5;eip=0x00324b; 	T(cl = 3;);	// 89631                  mov     cl, 3 ;~ 17C5:324B
cs=0x17c5;eip=0x00324d; 	T(SHL(ax, cl));	// 89632                  shl     ax, cl ;~ 17C5:324D
cs=0x17c5;eip=0x00324f; 	T(ADD(ax, 0x8C36));	// 89633                  add     ax, 8C36h ;~ 17C5:324F
cs=0x17c5;eip=0x003252; 	X(PUSH(ax));	// 89634                  push    ax ;~ 17C5:3252
cs=0x17c5;eip=0x003253; 	J(CALL(sub_34d94,0));	// 89635                  call    sub_34D94 ;~ 17C5:3253
cs=0x17c5;eip=0x003256; 	T(ADD(sp, 6));	// 89636                  add     sp, 6 ;~ 17C5:3256
cs=0x17c5;eip=0x003259; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 89637                  mov     bx, [bp+arg_0] ;~ 17C5:3259
cs=0x17c5;eip=0x00325c; 	T(MOV(bx, *(dw*)(raddr(ds,bx+0x0C))));	// 89638                  mov     bx, [bx+0Ch] ;~ 17C5:325C
cs=0x17c5;eip=0x00325f; 	X(OR(*(raddr(ds,bx+6)), 0x80));	// 89639                  or      byte ptr [bx+6], 80h ;~ 17C5:325F
cs=0x17c5;eip=0x003263; 	X(POP(bp));	// 89640                  pop     bp ;~ 17C5:3263
cs=0x17c5;eip=0x003264; 	J(RETN(0));	// 89641                  retn ;~ 17C5:3264

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29454: 	goto sub_29454;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29496(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29496:
    _begin:
#undef arg_0
#define arg_0 4
	// 89654 arg_0           = word ptr  4 ;~ 17C5:3266
#undef arg_2
#define arg_2 6
	// 89655 arg_2           = word ptr  6 ;~ 17C5:3266
#undef arg_4
#define arg_4 8
	// 89656 arg_4           = word ptr  8 ;~ 17C5:3266
#undef arg_6
#define arg_6 0x0A
	// 89657 arg_6           = word ptr  0Ah ;~ 17C5:3266
cs=0x17c5;eip=0x003266; 	X(PUSH(bp));	// 89659                  push    bp ;~ 17C5:3266
cs=0x17c5;eip=0x003267; 	T(bp = sp;);	// 89660                  mov     bp, sp ;~ 17C5:3267
cs=0x17c5;eip=0x003269; 	X(PUSH(si));	// 89661                  push    si ;~ 17C5:3269
cs=0x17c5;eip=0x00326a; 	T(ax = word_4f228;);	// 89662                  mov     ax, ds:word_4F228 ;~ 17C5:326A
cs=0x17c5;eip=0x00326d; 	T(DEC(ax));	// 89663                  dec     ax ;~ 17C5:326D
cs=0x17c5;eip=0x00326e; 	X(word_4ef0e = ax;);	// 89664                  mov     ds:word_4EF0E, ax ;~ 17C5:326E
cs=0x17c5;eip=0x003271; 	J(JMP(loc_294a8));	// 89665                  jmp     short loc_294A8 ;~ 17C5:3271
loc_294a4:
	// 5240 
cs=0x17c5;eip=0x003274; 	X(DEC(word_4ef0e));	// 89672                  dec     ds:word_4EF0E ;~ 17C5:3274
loc_294a8:
	// 5241 
cs=0x17c5;eip=0x003278; 	T(CMP(word_4ef0e, 0));	// 89675                  cmp     ds:word_4EF0E, 0 ;~ 17C5:3278
cs=0x17c5;eip=0x00327d; 	J(JL(loc_294e4));	// 89676                  jl      short loc_294E4 ;~ 17C5:327D
cs=0x17c5;eip=0x00327f; 	T(si = word_4ef0e;);	// 89677                  mov     si, ds:word_4EF0E ;~ 17C5:327F
cs=0x17c5;eip=0x003283; 	T(cl = 3;);	// 89678                  mov     cl, 3 ;~ 17C5:3283
cs=0x17c5;eip=0x003285; 	T(SHL(si, cl));	// 89679                  shl     si, cl ;~ 17C5:3285
cs=0x17c5;eip=0x003287; 	T(MOV(al, *(raddr(ds,si-0x73CA))));	// 89680                  mov     al, [si-73CAh] ;~ 17C5:3287
cs=0x17c5;eip=0x00328b; 	T(SUB(ah, ah));	// 89681                  sub     ah, ah ;~ 17C5:328B
cs=0x17c5;eip=0x00328d; 	T(CMP(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 89682                  cmp     ax, [bp+arg_0] ;~ 17C5:328D
cs=0x17c5;eip=0x003290; 	J(JNZ(loc_294a4));	// 89683                  jnz     short loc_294A4 ;~ 17C5:3290
cs=0x17c5;eip=0x003292; 	T(MOV(al, *(raddr(ds,si-0x73C9))));	// 89684                  mov     al, [si-73C9h] ;~ 17C5:3292
cs=0x17c5;eip=0x003296; 	T(CMP(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 89685                  cmp     ax, [bp+arg_2] ;~ 17C5:3296
cs=0x17c5;eip=0x003299; 	J(JNZ(loc_294a4));	// 89686                  jnz     short loc_294A4 ;~ 17C5:3299
cs=0x17c5;eip=0x00329b; 	T(MOV(al, *(raddr(ds,si-0x73C8))));	// 89687                  mov     al, [si-73C8h] ;~ 17C5:329B
cs=0x17c5;eip=0x00329f; 	T(CMP(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 89688                  cmp     ax, [bp+arg_4] ;~ 17C5:329F
cs=0x17c5;eip=0x0032a2; 	J(JNZ(loc_294a4));	// 89689                  jnz     short loc_294A4 ;~ 17C5:32A2
cs=0x17c5;eip=0x0032a4; 	T(MOV(al, *(raddr(ds,si-0x73C7))));	// 89690                  mov     al, [si-73C7h] ;~ 17C5:32A4
cs=0x17c5;eip=0x0032a8; 	T(CMP(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 89691                  cmp     ax, [bp+arg_6] ;~ 17C5:32A8
cs=0x17c5;eip=0x0032ab; 	J(JNZ(loc_294a4));	// 89692                  jnz     short loc_294A4 ;~ 17C5:32AB
cs=0x17c5;eip=0x0032ad; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x73C6))));	// 89693                  mov     ax, [si-73C6h] ;~ 17C5:32AD
cs=0x17c5;eip=0x0032b1; 	X(POP(si));	// 89694                  pop     si ;~ 17C5:32B1
cs=0x17c5;eip=0x0032b2; 	X(POP(bp));	// 89695                  pop     bp ;~ 17C5:32B2
cs=0x17c5;eip=0x0032b3; 	J(RETN(0));	// 89696                  retn ;~ 17C5:32B3
loc_294e4:
	// 5242 
cs=0x17c5;eip=0x0032b4; 	T(SUB(ax, ax));	// 89700                  sub     ax, ax ;~ 17C5:32B4
cs=0x17c5;eip=0x0032b6; 	X(POP(si));	// 89701                  pop     si ;~ 17C5:32B6
cs=0x17c5;eip=0x0032b7; 	X(POP(bp));	// 89702                  pop     bp ;~ 17C5:32B7
cs=0x17c5;eip=0x0032b8; 	J(RETN(0));	// 89703                  retn ;~ 17C5:32B8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_294a4: 	goto loc_294a4;
        case m2c::kloc_294a8: 	goto loc_294a8;
        case m2c::kloc_294e4: 	goto loc_294e4;
        case m2c::ksub_29496: 	goto sub_29496;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_294ea(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_294ea:
    _begin:
#undef var_1c
#define var_1c -0x1C
	// 89716 var_1C          = word ptr -1Ch ;~ 17C5:32BA
#undef var_1a
#define var_1a -0x1A
	// 89717 var_1A          = word ptr -1Ah ;~ 17C5:32BA
#undef var_18
#define var_18 -0x18
	// 89718 var_18          = word ptr -18h ;~ 17C5:32BA
#undef var_16
#define var_16 -0x16
	// 89719 var_16          = word ptr -16h ;~ 17C5:32BA
#undef var_14
#define var_14 -0x14
	// 89720 var_14          = word ptr -14h ;~ 17C5:32BA
#undef var_12
#define var_12 -0x12
	// 89721 var_12          = word ptr -12h ;~ 17C5:32BA
#undef var_10
#define var_10 -0x10
	// 89722 var_10          = word ptr -10h ;~ 17C5:32BA
#undef var_e
#define var_e -0x0E
	// 89723 var_E           = word ptr -0Eh ;~ 17C5:32BA
#undef var_c
#define var_c -0x0C
	// 89724 var_C           = word ptr -0Ch ;~ 17C5:32BA
#undef var_8
#define var_8 -8
	// 89725 var_8           = word ptr -8 ;~ 17C5:32BA
#undef var_6
#define var_6 -6
	// 89726 var_6           = word ptr -6 ;~ 17C5:32BA
#undef var_4
#define var_4 -4
	// 89727 var_4           = word ptr -4 ;~ 17C5:32BA
#undef var_2
#define var_2 -2
	// 89728 var_2           = word ptr -2 ;~ 17C5:32BA
#undef arg_0
#define arg_0 4
	// 89729 arg_0           = word ptr  4 ;~ 17C5:32BA
#undef arg_2
#define arg_2 6
	// 89730 arg_2           = word ptr  6 ;~ 17C5:32BA
#undef arg_4
#define arg_4 8
	// 89731 arg_4           = word ptr  8 ;~ 17C5:32BA
#undef arg_6
#define arg_6 0x0A
	// 89732 arg_6           = word ptr  0Ah ;~ 17C5:32BA
#undef arg_8
#define arg_8 0x0C
	// 89733 arg_8           = word ptr  0Ch ;~ 17C5:32BA
#undef arg_a
#define arg_a 0x0E
	// 89734 arg_A           = word ptr  0Eh ;~ 17C5:32BA
cs=0x17c5;eip=0x0032ba; 	X(PUSH(bp));	// 89736                  push    bp ;~ 17C5:32BA
cs=0x17c5;eip=0x0032bb; 	T(bp = sp;);	// 89737                  mov     bp, sp ;~ 17C5:32BB
cs=0x17c5;eip=0x0032bd; 	T(SUB(sp, 0x1C));	// 89738                  sub     sp, 1Ch ;~ 17C5:32BD
cs=0x17c5;eip=0x0032c0; 	X(PUSH(si));	// 89739                  push    si ;~ 17C5:32C0
cs=0x17c5;eip=0x0032c1; 	X(*(db*)(&word_4cdb6) = 0;);	// 89740                  mov     byte ptr ds:word_4CDB6, 0 ;~ 17C5:32C1
cs=0x17c5;eip=0x0032c6; 	X(word_51a12 = 0x7FFF;);	// 89741                  mov     ds:word_51A12, 7FFFh ;~ 17C5:32C6
cs=0x17c5;eip=0x0032cc; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 4));	// 89742                  mov     [bp+var_6], 4 ;~ 17C5:32CC
cs=0x17c5;eip=0x0032d1; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 89743                  push    [bp+arg_2] ;~ 17C5:32D1
cs=0x17c5;eip=0x0032d4; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 89744                  push    [bp+arg_0] ;~ 17C5:32D4
cs=0x17c5;eip=0x0032d7; 	T(ax = 4;);	// 89745                  mov     ax, 4 ;~ 17C5:32D7
cs=0x17c5;eip=0x0032da; 	X(PUSH(ax));	// 89746                  push    ax ;~ 17C5:32DA
cs=0x17c5;eip=0x0032db; 	J(CALL(sub_288e4,0));	// 89747                  call    sub_288E4 ;~ 17C5:32DB
cs=0x17c5;eip=0x0032de; 	T(ADD(sp, 6));	// 89748                  add     sp, 6 ;~ 17C5:32DE
cs=0x17c5;eip=0x0032e1; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 89749                  mov     [bp+var_18], ax ;~ 17C5:32E1
cs=0x17c5;eip=0x0032e4; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), dx));	// 89750                  mov     [bp+var_16], dx ;~ 17C5:32E4
cs=0x17c5;eip=0x0032e7; 	T(cl = 0x0C;);	// 89751                  mov     cl, 0Ch ;~ 17C5:32E7
loc_29519:
	// 5243 
cs=0x17c5;eip=0x0032e9; 	T(SHR(dx, 1));	// 89754                  shr     dx, 1 ;~ 17C5:32E9
cs=0x17c5;eip=0x0032eb; 	T(RCR(ax, 1));	// 89755                  rcr     ax, 1 ;~ 17C5:32EB
cs=0x17c5;eip=0x0032ed; 	T(DEC(cl));	// 89756                  dec     cl ;~ 17C5:32ED
cs=0x17c5;eip=0x0032ef; 	J(JNZ(loc_29519));	// 89757                  jnz     short loc_29519 ;~ 17C5:32EF
cs=0x17c5;eip=0x0032f1; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 89758                  mov     [bp+var_10], ax ;~ 17C5:32F1
cs=0x17c5;eip=0x0032f4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_18))));	// 89759                  mov     ax, [bp+var_18] ;~ 17C5:32F4
cs=0x17c5;eip=0x0032f7; 	T(AND(ah, 0x0F));	// 89760                  and     ah, 0Fh ;~ 17C5:32F7
cs=0x17c5;eip=0x0032fa; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 89761                  mov     [bp+var_4], ax ;~ 17C5:32FA
cs=0x17c5;eip=0x0032fd; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 89762                  push    [bp+arg_6] ;~ 17C5:32FD
cs=0x17c5;eip=0x003300; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 89763                  push    [bp+arg_4] ;~ 17C5:3300
cs=0x17c5;eip=0x003303; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 89764                  push    [bp+var_6] ;~ 17C5:3303
cs=0x17c5;eip=0x003306; 	J(CALL(sub_288e4,0));	// 89765                  call    sub_288E4 ;~ 17C5:3306
cs=0x17c5;eip=0x003309; 	T(ADD(sp, 6));	// 89766                  add     sp, 6 ;~ 17C5:3309
cs=0x17c5;eip=0x00330c; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 89767                  mov     [bp+var_18], ax ;~ 17C5:330C
cs=0x17c5;eip=0x00330f; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), dx));	// 89768                  mov     [bp+var_16], dx ;~ 17C5:330F
cs=0x17c5;eip=0x003312; 	T(cl = 0x0C;);	// 89769                  mov     cl, 0Ch ;~ 17C5:3312
loc_29544:
	// 5244 
cs=0x17c5;eip=0x003314; 	T(SHR(dx, 1));	// 89772                  shr     dx, 1 ;~ 17C5:3314
cs=0x17c5;eip=0x003316; 	T(RCR(ax, 1));	// 89773                  rcr     ax, 1 ;~ 17C5:3316
cs=0x17c5;eip=0x003318; 	T(DEC(cl));	// 89774                  dec     cl ;~ 17C5:3318
cs=0x17c5;eip=0x00331a; 	J(JNZ(loc_29544));	// 89775                  jnz     short loc_29544 ;~ 17C5:331A
cs=0x17c5;eip=0x00331c; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 89776                  mov     [bp+var_14], ax ;~ 17C5:331C
cs=0x17c5;eip=0x00331f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_18))));	// 89777                  mov     ax, [bp+var_18] ;~ 17C5:331F
cs=0x17c5;eip=0x003322; 	T(AND(ah, 0x0F));	// 89778                  and     ah, 0Fh ;~ 17C5:3322
cs=0x17c5;eip=0x003325; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 89779                  mov     [bp+var_8], ax ;~ 17C5:3325
cs=0x17c5;eip=0x003328; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_a))));	// 89780                  push    [bp+arg_A] ;~ 17C5:3328
cs=0x17c5;eip=0x00332b; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_8))));	// 89781                  push    [bp+arg_8] ;~ 17C5:332B
cs=0x17c5;eip=0x00332e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 89782                  push    [bp+var_6] ;~ 17C5:332E
cs=0x17c5;eip=0x003331; 	J(CALL(sub_288e4,0));	// 89783                  call    sub_288E4 ;~ 17C5:3331
cs=0x17c5;eip=0x003334; 	T(ADD(sp, 6));	// 89784                  add     sp, 6 ;~ 17C5:3334
cs=0x17c5;eip=0x003337; 	X(word_4a498 = ax;);	// 89785                  mov     word_4A498, ax ;~ 17C5:3337
cs=0x17c5;eip=0x00333a; 	T(ax = 0x800;);	// 89786                  mov     ax, 800h ;~ 17C5:333A
cs=0x17c5;eip=0x00333d; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_4))));	// 89787                  sub     ax, [bp+var_4] ;~ 17C5:333D
cs=0x17c5;eip=0x003340; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 89788                  mov     [bp+var_1C], ax ;~ 17C5:3340
cs=0x17c5;eip=0x003343; 	T(ax = 0x800;);	// 89789                  mov     ax, 800h ;~ 17C5:3343
cs=0x17c5;eip=0x003346; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_8))));	// 89790                  sub     ax, [bp+var_8] ;~ 17C5:3346
cs=0x17c5;eip=0x003349; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 89791                  mov     [bp+var_2], ax ;~ 17C5:3349
cs=0x17c5;eip=0x00334c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 89792                  mov     ax, [bp+var_4] ;~ 17C5:334C
cs=0x17c5;eip=0x00334f; 	T(SUB(ax, 0x800));	// 89793                  sub     ax, 800h ;~ 17C5:334F
cs=0x17c5;eip=0x003352; 	X(word_4a494 = ax;);	// 89794                  mov     word_4A494, ax ;~ 17C5:3352
cs=0x17c5;eip=0x003355; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 89795                  mov     ax, [bp+var_8] ;~ 17C5:3355
cs=0x17c5;eip=0x003358; 	T(SUB(ax, 0x800));	// 89796                  sub     ax, 800h ;~ 17C5:3358
cs=0x17c5;eip=0x00335b; 	X(word_4a496 = ax;);	// 89797                  mov     word_4A496, ax ;~ 17C5:335B
cs=0x17c5;eip=0x00335e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 89798                  push    [bp+var_14] ;~ 17C5:335E
cs=0x17c5;eip=0x003361; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 89799                  push    [bp+var_10] ;~ 17C5:3361
cs=0x17c5;eip=0x003364; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 89800                  push    [bp+var_6] ;~ 17C5:3364
cs=0x17c5;eip=0x003367; 	J(CALL(sub_2896e,0));	// 89801                  call    sub_2896E ;~ 17C5:3367
cs=0x17c5;eip=0x00336a; 	T(ADD(sp, 6));	// 89802                  add     sp, 6 ;~ 17C5:336A
cs=0x17c5;eip=0x00336d; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 89803                  mov     [bp+var_1A], ax ;~ 17C5:336D
cs=0x17c5;eip=0x003370; 	T(CMP(ax, 0x0FFFF));	// 89804                  cmp     ax, 0FFFFh ;~ 17C5:3370
cs=0x17c5;eip=0x003373; 	J(JZ(loc_29619));	// 89805                  jz      short loc_29619 ;~ 17C5:3373
cs=0x17c5;eip=0x003375; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_6))));	// 89806                  mov     si, [bp+var_6] ;~ 17C5:3375
cs=0x17c5;eip=0x003378; 	T(cl = 6;);	// 89807                  mov     cl, 6 ;~ 17C5:3378
cs=0x17c5;eip=0x00337a; 	T(SHL(si, cl));	// 89808                  shl     si, cl ;~ 17C5:337A
cs=0x17c5;eip=0x00337c; 	T(bx = ax;);	// 89809                  mov     bx, ax ;~ 17C5:337C
cs=0x17c5;eip=0x00337e; 	T(SHL(bx, 1));	// 89810                  shl     bx, 1 ;~ 17C5:337E
cs=0x17c5;eip=0x003380; 	T(MOV(ax, *(dw*)(raddr(ds,bx+si-0x6450))));	// 89811                  mov     ax, [bx+si-6450h] ;~ 17C5:3380
cs=0x17c5;eip=0x003384; 	X(word_527d8 = ax;);	// 89812                  mov     ds:word_527D8, ax ;~ 17C5:3384
cs=0x17c5;eip=0x003387; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), 1));	// 89813                  mov     [bp+var_C], 1 ;~ 17C5:3387
cs=0x17c5;eip=0x00338c; 	J(JMP(loc_29604));	// 89814                  jmp     short loc_29604 ;~ 17C5:338C
loc_295be:
	// 5245 
cs=0x17c5;eip=0x00338e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1c))));	// 89818                  mov     ax, [bp+var_1C] ;~ 17C5:338E
cs=0x17c5;eip=0x003391; 	T(bx = word_527d8;);	// 89819                  mov     bx, ds:word_527D8 ;~ 17C5:3391
cs=0x17c5;eip=0x003395; 	T(ADD(ax, *(dw*)(raddr(ds,bx))));	// 89820                  add     ax, [bx] ;~ 17C5:3395
cs=0x17c5;eip=0x003397; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 89821                  mov     [bp+var_E], ax ;~ 17C5:3397
cs=0x17c5;eip=0x00339a; 	T(MOV(ax, *(dw*)(raddr(ds,bx+2))));	// 89822                  mov     ax, [bx+2] ;~ 17C5:339A
cs=0x17c5;eip=0x00339d; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_2))));	// 89823                  add     ax, [bp+var_2] ;~ 17C5:339D
cs=0x17c5;eip=0x0033a0; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), ax));	// 89824                  mov     [bp+var_12], ax ;~ 17C5:33A0
cs=0x17c5;eip=0x0033a3; 	X(PUSH(ax));	// 89825                  push    ax ;~ 17C5:33A3
cs=0x17c5;eip=0x0033a4; 	J(CALL(sub_34dc0,0));	// 89826                  call    sub_34DC0 ;~ 17C5:33A4
cs=0x17c5;eip=0x0033a7; 	T(ADD(sp, 2));	// 89827                  add     sp, 2 ;~ 17C5:33A7
cs=0x17c5;eip=0x0033aa; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 89828                  push    [bp+var_E] ;~ 17C5:33AA
cs=0x17c5;eip=0x0033ad; 	T(si = ax;);	// 89829                  mov     si, ax ;~ 17C5:33AD
cs=0x17c5;eip=0x0033af; 	J(CALL(sub_34dc0,0));	// 89830                  call    sub_34DC0 ;~ 17C5:33AF
cs=0x17c5;eip=0x0033b2; 	T(ADD(sp, 2));	// 89831                  add     sp, 2 ;~ 17C5:33B2
cs=0x17c5;eip=0x0033b5; 	T(ADD(ax, si));	// 89832                  add     ax, si ;~ 17C5:33B5
cs=0x17c5;eip=0x0033b7; 	X(word_4a490 = ax;);	// 89833                  mov     word_4A490, ax ;~ 17C5:33B7
cs=0x17c5;eip=0x0033ba; 	T(CMP(word_51a12, ax));	// 89834                  cmp     ds:word_51A12, ax ;~ 17C5:33BA
cs=0x17c5;eip=0x0033be; 	J(JLE(loc_295fc));	// 89835                  jle     short loc_295FC ;~ 17C5:33BE
cs=0x17c5;eip=0x0033c0; 	T(ax = word_527d8;);	// 89836                  mov     ax, ds:word_527D8 ;~ 17C5:33C0
cs=0x17c5;eip=0x0033c3; 	X(word_51a1c = ax;);	// 89837                  mov     ds:word_51A1C, ax ;~ 17C5:33C3
cs=0x17c5;eip=0x0033c6; 	T(ax = word_4a490;);	// 89838                  mov     ax, word_4A490 ;~ 17C5:33C6
cs=0x17c5;eip=0x0033c9; 	X(word_51a12 = ax;);	// 89839                  mov     ds:word_51A12, ax ;~ 17C5:33C9
loc_295fc:
	// 5246 
cs=0x17c5;eip=0x0033cc; 	X(ADD(word_527d8, 7));	// 89842                  add     ds:word_527D8, 7 ;~ 17C5:33CC
cs=0x17c5;eip=0x0033d1; 	X(INC(*(dw*)(raddr(ss,bp+var_c))));	// 89843                  inc     [bp+var_C] ;~ 17C5:33D1
loc_29604:
	// 5247 
cs=0x17c5;eip=0x0033d4; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_6))));	// 89846                  mov     si, [bp+var_6] ;~ 17C5:33D4
cs=0x17c5;eip=0x0033d7; 	T(cl = 6;);	// 89847                  mov     cl, 6 ;~ 17C5:33D7
cs=0x17c5;eip=0x0033d9; 	T(SHL(si, cl));	// 89848                  shl     si, cl ;~ 17C5:33D9
cs=0x17c5;eip=0x0033db; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_1a))));	// 89849                  mov     bx, [bp+var_1A] ;~ 17C5:33DB
cs=0x17c5;eip=0x0033de; 	T(SHL(bx, 1));	// 89850                  shl     bx, 1 ;~ 17C5:33DE
cs=0x17c5;eip=0x0033e0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 89851                  mov     ax, [bp+var_C] ;~ 17C5:33E0
cs=0x17c5;eip=0x0033e3; 	T(CMP(*(dw*)(raddr(ds,bx+si+0x13E0)), ax));	// 89852                  cmp     [bx+si+13E0h], ax ;~ 17C5:33E3
cs=0x17c5;eip=0x0033e7; 	J(JA(loc_295be));	// 89853                  ja      short loc_295BE ;~ 17C5:33E7
loc_29619:
	// 5248 
cs=0x17c5;eip=0x0033e9; 	T(CMP(word_51a12, 0x7FFF));	// 89856                  cmp     ds:word_51A12, 7FFFh ;~ 17C5:33E9
cs=0x17c5;eip=0x0033ef; 	J(JZ(loc_29689));	// 89857                  jz      short loc_29689 ;~ 17C5:33EF
cs=0x17c5;eip=0x0033f1; 	T(ax = word_51a1c;);	// 89858                  mov     ax, ds:word_51A1C ;~ 17C5:33F1
cs=0x17c5;eip=0x0033f4; 	X(word_527d8 = ax;);	// 89859                  mov     ds:word_527D8, ax ;~ 17C5:33F4
cs=0x17c5;eip=0x0033f7; 	T(bx = ax;);	// 89860                  mov     bx, ax ;~ 17C5:33F7
cs=0x17c5;eip=0x0033f9; 	T(MOV(bl, *(raddr(ds,bx+6))));	// 89861                  mov     bl, [bx+6] ;~ 17C5:33F9
cs=0x17c5;eip=0x0033fc; 	T(SUB(bh, bh));	// 89862                  sub     bh, bh ;~ 17C5:33FC
cs=0x17c5;eip=0x0033fe; 	T(SHL(bx, 1));	// 89863                  shl     bx, 1 ;~ 17C5:33FE
cs=0x17c5;eip=0x003400; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x130A))));	// 89864                  mov     ax, [bx+130Ah] ;~ 17C5:3400
cs=0x17c5;eip=0x003404; 	T(ADD(ax, 0));	// 89865                  add     ax, 0 ;~ 17C5:3404
cs=0x17c5;eip=0x003407; 	X(*(dw*)(&dword_4a46c) = ax;);	// 89866                  mov     word ptr dword_4A46C, ax ;~ 17C5:3407
cs=0x17c5;eip=0x00340a; 	X(*(dw*)(((db*)&dword_4a46c)+2) = seg_offset(seg38b0););	// 89867                  mov     word ptr dword_4A46C+2, seg seg38b0 ;~ 17C5:340A
cs=0x17c5;eip=0x003410; 	T(bx = word_527d8;);	// 89868                  mov     bx, ds:word_527D8 ;~ 17C5:3410
cs=0x17c5;eip=0x003414; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 89869                  mov     ax, [bx] ;~ 17C5:3414
cs=0x17c5;eip=0x003416; 	T(SUB(ax, word_4a494));	// 89870                  sub     ax, word_4A494 ;~ 17C5:3416
cs=0x17c5;eip=0x00341a; 	X(word_4a470 = ax;);	// 89871                  mov     word_4A470, ax ;~ 17C5:341A
cs=0x17c5;eip=0x00341d; 	T(MOV(ax, *(dw*)(raddr(ds,bx+2))));	// 89872                  mov     ax, [bx+2] ;~ 17C5:341D
cs=0x17c5;eip=0x003420; 	T(SUB(ax, word_4a496));	// 89873                  sub     ax, word_4A496 ;~ 17C5:3420
cs=0x17c5;eip=0x003424; 	X(word_4a472 = ax;);	// 89874                  mov     word_4A472, ax ;~ 17C5:3424
cs=0x17c5;eip=0x003427; 	T(MOV(ax, *(dw*)(raddr(ds,bx+4))));	// 89875                  mov     ax, [bx+4] ;~ 17C5:3427
cs=0x17c5;eip=0x00342a; 	T(SUB(ax, word_4a498));	// 89876                  sub     ax, word_4A498 ;~ 17C5:342A
cs=0x17c5;eip=0x00342e; 	X(word_4a474 = ax;);	// 89877                  mov     word_4A474, ax ;~ 17C5:342E
cs=0x17c5;eip=0x003431; 	X(INC(*(dw*)(&dword_4a46c)));	// 89878                  inc     word ptr dword_4A46C ;~ 17C5:3431
cs=0x17c5;eip=0x003435; 	X(*(db*)(&word_4a492) = 0;);	// 89879                  mov     byte ptr word_4A492, 0 ;~ 17C5:3435
cs=0x17c5;eip=0x00343a; 	X(word_4a490 = 0;);	// 89880                  mov     word_4A490, 0 ;~ 17C5:343A
cs=0x17c5;eip=0x003440; 	J(CALLF(sub_3650a,0));	// 89881                  call    sub_3650A ;~ 17C5:3440
cs=0x17c5;eip=0x003445; 	T(LES(bx, dword_4a46c));	// 89882                  les     bx, dword_4A46C ;~ 17C5:3445
cs=0x17c5;eip=0x003449; 	T(TEST(*(raddr(es,bx)), 0x40));	// 89884                  test    byte ptr es:[bx], 40h ;~ 17C5:3449
cs=0x17c5;eip=0x00344d; 	J(JZ(loc_29689));	// 89885                  jz      short loc_29689 ;~ 17C5:344D
cs=0x17c5;eip=0x00344f; 	X(*(byte_4a488) = 0;);	// 89886                  mov     byte_4A488, 0 ;~ 17C5:344F
cs=0x17c5;eip=0x003454; 	J(CALLF(sub_3667a,0));	// 89887                  call    sub_3667A ;~ 17C5:3454
loc_29689:
	// 5249 
cs=0x17c5;eip=0x003459; 	X(POP(si));	// 89892                  pop     si ;~ 17C5:3459
cs=0x17c5;eip=0x00345a; 	T(sp = bp;);	// 89893                  mov     sp, bp ;~ 17C5:345A
cs=0x17c5;eip=0x00345c; 	X(POP(bp));	// 89894                  pop     bp ;~ 17C5:345C
cs=0x17c5;eip=0x00345d; 	J(RETN(0));	// 89895                  retn ;~ 17C5:345D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29519: 	goto loc_29519;
        case m2c::kloc_29544: 	goto loc_29544;
        case m2c::kloc_295be: 	goto loc_295be;
        case m2c::kloc_295fc: 	goto loc_295fc;
        case m2c::kloc_29604: 	goto loc_29604;
        case m2c::kloc_29619: 	goto loc_29619;
        case m2c::kloc_29689: 	goto loc_29689;
        case m2c::ksub_294ea: 	goto sub_294ea;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group28(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group28:
    _begin:
sub_2968e:
	// 89904 
#undef arg_0
#define arg_0 4
	// 89906 arg_0           = word ptr  4 ;~ 17C5:345E
cs=0x17c5;eip=0x00345e; 	X(PUSH(bp));	// 89908                  push    bp ;~ 17C5:345E
cs=0x17c5;eip=0x00345f; 	T(bp = sp;);	// 89909                  mov     bp, sp ;~ 17C5:345F
cs=0x17c5;eip=0x003461; 	T(SUB(sp, 4));	// 89910                  sub     sp, 4 ;~ 17C5:3461
cs=0x17c5;eip=0x003464; 	X(*(byte_4a3ca) = 0;);	// 89911                  mov     byte_4A3CA, 0 ;~ 17C5:3464
cs=0x17c5;eip=0x003469; 	T(SUB(ax, ax));	// 89912                  sub     ax, ax ;~ 17C5:3469
cs=0x17c5;eip=0x00346b; 	X(PUSH(ax));	// 89913                  push    ax ;~ 17C5:346B
cs=0x17c5;eip=0x00346c; 	X(PUSH(ax));	// 89914                  push    ax ;~ 17C5:346C
cs=0x17c5;eip=0x00346d; 	X(PUSH(ax));	// 89915                  push    ax ;~ 17C5:346D
cs=0x17c5;eip=0x00346e; 	X(PUSH(ax));	// 89916                  push    ax ;~ 17C5:346E
cs=0x17c5;eip=0x00346f; 	X(PUSH(ax));	// 89917                  push    ax ;~ 17C5:346F
cs=0x17c5;eip=0x003470; 	X(PUSH(ax));	// 89918                  push    ax ;~ 17C5:3470
cs=0x17c5;eip=0x003471; 	X(PUSH(ax));	// 89919                  push    ax ;~ 17C5:3471
cs=0x17c5;eip=0x003472; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 89920                  push    [bp+arg_0] ;~ 17C5:3472
cs=0x17c5;eip=0x003475; 	J(CALL(sub_29b62,0));	// 89921                  call    sub_29B62 ;~ 17C5:3475
seg2623_3478_proc:
	// 89925 
cs=0x17c5;eip=0x003478; 	T(ADD(sp, 0x10));	// 89925                  add     sp, 10h ;~ 17C5:3478
cs=0x17c5;eip=0x00347b; 	T(MOV(bx, *(dw*)(raddr(ss,bp+4))));	// 89926                  mov     bx, [bp+4] ;~ 17C5:347B
cs=0x17c5;eip=0x00347e; 	X(PUSH(*(dw*)(raddr(ds,bx+0x0E))));	// 89927                  push    word ptr [bx+0Eh] ;~ 17C5:347E
cs=0x17c5;eip=0x003481; 	X(PUSH(*(dw*)(raddr(ds,bx+0x12))));	// 89928                  push    word ptr [bx+12h] ;~ 17C5:3481
cs=0x17c5;eip=0x003484; 	J(CALLF(sub_49ad4,0));	// 89929                  call    far ptr sub_49AD4 ;~ 17C5:3484
cs=0x17c5;eip=0x003489; 	T(ADD(sp, 4));	// 89931                  add     sp, 4 ;~ 17C5:3489
cs=0x17c5;eip=0x00348c; 	X(PUSH(ax));	// 89932                  push    ax ;~ 17C5:348C
cs=0x17c5;eip=0x00348d; 	J(CALLF(sub_49a20,0));	// 89933                  call    far ptr sub_49A20 ;~ 17C5:348D
cs=0x17c5;eip=0x003492; 	T(ADD(sp, 2));	// 89935                  add     sp, 2 ;~ 17C5:3492
cs=0x17c5;eip=0x003495; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 89936                  push    word ptr [bp+0Ah] ;~ 17C5:3495
cs=0x17c5;eip=0x003498; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 89937                  push    word ptr [bp+8] ;~ 17C5:3498
cs=0x17c5;eip=0x00349b; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 89938                  push    word ptr [bp+6] ;~ 17C5:349B
cs=0x17c5;eip=0x00349e; 	J(CALL(sub_296dc,0));	// 89939                  call    sub_296DC ;~ 17C5:349E
cs=0x17c5;eip=0x0034a1; 	T(ADD(sp, 6));	// 89941                  add     sp, 6 ;~ 17C5:34A1
cs=0x17c5;eip=0x0034a4; 	J(CALL(sub_29bda,0));	// 89942                  call    sub_29BDA ;~ 17C5:34A4
cs=0x17c5;eip=0x0034a7; 	T(sp = bp;);	// 89944                  mov     sp, bp ;~ 17C5:34A7
cs=0x17c5;eip=0x0034a9; 	X(POP(bp));	// 89945                  pop     bp ;~ 17C5:34A9
cs=0x17c5;eip=0x0034aa; 	J(RETN(0));	// 89946                  retn ;~ 17C5:34AA

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_3478_proc: 	goto seg2623_3478_proc;
        case m2c::ksub_2968e: 	goto sub_2968e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_296dc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_296dc:
    _begin:
#undef var_14
#define var_14 -0x14
	// 89957 var_14          = word ptr -14h ;~ 17C5:34AC
#undef var_12
#define var_12 -0x12
	// 89958 var_12          = word ptr -12h ;~ 17C5:34AC
#undef var_10
#define var_10 -0x10
	// 89959 var_10          = word ptr -10h ;~ 17C5:34AC
#undef var_e
#define var_e -0x0E
	// 89960 var_E           = word ptr -0Eh ;~ 17C5:34AC
#undef var_c
#define var_c -0x0C
	// 89961 var_C           = word ptr -0Ch ;~ 17C5:34AC
#undef var_a
#define var_a -0x0A
	// 89962 var_A           = word ptr -0Ah ;~ 17C5:34AC
#undef var_8
#define var_8 -8
	// 89963 var_8           = word ptr -8 ;~ 17C5:34AC
#undef var_6
#define var_6 -6
	// 89964 var_6           = word ptr -6 ;~ 17C5:34AC
#undef var_4
#define var_4 -4
	// 89965 var_4           = word ptr -4 ;~ 17C5:34AC
#undef var_2
#define var_2 -2
	// 89966 var_2           = word ptr -2 ;~ 17C5:34AC
#undef arg_0
#define arg_0 4
	// 89967 arg_0           = word ptr  4 ;~ 17C5:34AC
#undef arg_2
#define arg_2 6
	// 89968 arg_2           = word ptr  6 ;~ 17C5:34AC
#undef arg_4
#define arg_4 8
	// 89969 arg_4           = word ptr  8 ;~ 17C5:34AC
cs=0x17c5;eip=0x0034ac; 	X(PUSH(bp));	// 89971                  push    bp ;~ 17C5:34AC
cs=0x17c5;eip=0x0034ad; 	T(bp = sp;);	// 89972                  mov     bp, sp ;~ 17C5:34AD
cs=0x17c5;eip=0x0034af; 	T(SUB(sp, 0x14));	// 89973                  sub     sp, 14h ;~ 17C5:34AF
cs=0x17c5;eip=0x0034b2; 	X(PUSH(di));	// 89974                  push    di ;~ 17C5:34B2
cs=0x17c5;eip=0x0034b3; 	X(PUSH(si));	// 89975                  push    si ;~ 17C5:34B3
cs=0x17c5;eip=0x0034b4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 89976                  mov     ax, [bp+arg_0] ;~ 17C5:34B4
cs=0x17c5;eip=0x0034b7; 	T(MOV(cl, *(raddr(ss,bp+arg_4))));	// 89977                  mov     cl, byte ptr [bp+arg_4] ;~ 17C5:34B7
cs=0x17c5;eip=0x0034ba; 	T(SAR(ax, cl));	// 89978                  sar     ax, cl ;~ 17C5:34BA
cs=0x17c5;eip=0x0034bc; 	X(word_4ef14 = ax;);	// 89979                  mov     ds:word_4EF14, ax ;~ 17C5:34BC
cs=0x17c5;eip=0x0034bf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 89980                  mov     ax, [bp+arg_2] ;~ 17C5:34BF
cs=0x17c5;eip=0x0034c2; 	T(SAR(ax, cl));	// 89981                  sar     ax, cl ;~ 17C5:34C2
cs=0x17c5;eip=0x0034c4; 	X(word_4ef16 = ax;);	// 89982                  mov     ds:word_4EF16, ax ;~ 17C5:34C4
cs=0x17c5;eip=0x0034c7; 	X(word_4ef1a = 4;);	// 89983                  mov     ds:word_4EF1A, 4 ;~ 17C5:34C7
cs=0x17c5;eip=0x0034cd; 	J(JMP(loc_2983e));	// 89984                  jmp     loc_2983E ;~ 17C5:34CD
loc_29700:
	// 5250 
cs=0x17c5;eip=0x0034d0; 	T(SUB(ax, ax));	// 89988                  sub     ax, ax ;~ 17C5:34D0
loc_29702:
	// 5251 
cs=0x17c5;eip=0x0034d2; 	X(word_4ef18 = ax;);	// 89991                  mov     ds:word_4EF18, ax ;~ 17C5:34D2
cs=0x17c5;eip=0x0034d5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 89992                  mov     ax, [bp+arg_4] ;~ 17C5:34D5
cs=0x17c5;eip=0x0034d8; 	T(cx = word_5239c;);	// 89993                  mov     cx, ds:word_5239C ;~ 17C5:34D8
cs=0x17c5;eip=0x0034dc; 	T(SHL(cx, 1));	// 89994                  shl     cx, 1 ;~ 17C5:34DC
cs=0x17c5;eip=0x0034de; 	T(SUB(ax, cx));	// 89995                  sub     ax, cx ;~ 17C5:34DE
cs=0x17c5;eip=0x0034e0; 	T(ADD(ax, 8));	// 89996                  add     ax, 8 ;~ 17C5:34E0
cs=0x17c5;eip=0x0034e3; 	X(word_52272 = ax;);	// 89997                  mov     ds:word_52272, ax ;~ 17C5:34E3
cs=0x17c5;eip=0x0034e6; 	T(ax = 0x1000;);	// 89998                  mov     ax, 1000h ;~ 17C5:34E6
cs=0x17c5;eip=0x0034e9; 	T(cl = *(db*)(&word_52272););	// 89999                  mov     cl, byte ptr ds:word_52272 ;~ 17C5:34E9
cs=0x17c5;eip=0x0034ed; 	T(SAR(ax, cl));	// 90000                  sar     ax, cl ;~ 17C5:34ED
cs=0x17c5;eip=0x0034ef; 	X(word_4ef10 = ax;);	// 90001                  mov     ds:word_4EF10, ax ;~ 17C5:34EF
cs=0x17c5;eip=0x0034f2; 	T(CMP(ax, 0x10));	// 90002                  cmp     ax, 10h ;~ 17C5:34F2
cs=0x17c5;eip=0x0034f5; 	J(JG(loc_2972a));	// 90003                  jg      short loc_2972A ;~ 17C5:34F5
cs=0x17c5;eip=0x0034f7; 	J(JMP(loc_2983a));	// 90005                  jmp     loc_2983A ;~ 17C5:34F7
loc_2972a:
	// 5252 
cs=0x17c5;eip=0x0034fa; 	T(ax = 4;);	// 90009                  mov     ax, 4 ;~ 17C5:34FA
cs=0x17c5;eip=0x0034fd; 	T(cl = *(db*)(&word_5239c););	// 90010                  mov     cl, byte ptr ds:word_5239C ;~ 17C5:34FD
cs=0x17c5;eip=0x003501; 	T(SHL(cl, 1));	// 90011                  shl     cl, 1 ;~ 17C5:3501
cs=0x17c5;eip=0x003503; 	T(SUB(cl, 8));	// 90012                  sub     cl, 8 ;~ 17C5:3503
cs=0x17c5;eip=0x003506; 	T(NEG(cl));	// 90013                  neg     cl ;~ 17C5:3506
cs=0x17c5;eip=0x003508; 	T(SHL(ax, cl));	// 90014                  shl     ax, cl ;~ 17C5:3508
cs=0x17c5;eip=0x00350a; 	X(word_4ef12 = ax;);	// 90015                  mov     ds:word_4EF12, ax ;~ 17C5:350A
cs=0x17c5;eip=0x00350d; 	T(ax = bp+var_2);	// 90016                  lea     ax, [bp+var_2] ;~ 17C5:350D
cs=0x17c5;eip=0x003510; 	X(PUSH(ax));	// 90017                  push    ax ;~ 17C5:3510
cs=0x17c5;eip=0x003511; 	T(ax = bp+var_8);	// 90018                  lea     ax, [bp+var_8] ;~ 17C5:3511
cs=0x17c5;eip=0x003514; 	X(PUSH(ax));	// 90019                  push    ax ;~ 17C5:3514
cs=0x17c5;eip=0x003515; 	T(ax = bp+var_12);	// 90020                  lea     ax, [bp+var_12] ;~ 17C5:3515
cs=0x17c5;eip=0x003518; 	X(PUSH(ax));	// 90021                  push    ax ;~ 17C5:3518
cs=0x17c5;eip=0x003519; 	T(ax = bp+var_6);	// 90022                  lea     ax, [bp+var_6] ;~ 17C5:3519
cs=0x17c5;eip=0x00351c; 	X(PUSH(ax));	// 90023                  push    ax ;~ 17C5:351C
cs=0x17c5;eip=0x00351d; 	J(CALL(sub_29868,0));	// 90024                  call    sub_29868 ;~ 17C5:351D
cs=0x17c5;eip=0x003520; 	T(ADD(sp, 8));	// 90025                  add     sp, 8 ;~ 17C5:3520
cs=0x17c5;eip=0x003523; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 90026                  mov     ax, [bp+var_8] ;~ 17C5:3523
cs=0x17c5;eip=0x003526; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 90027                  mov     [bp+var_E], ax ;~ 17C5:3526
cs=0x17c5;eip=0x003529; 	J(JMP(loc_29829));	// 90028                  jmp     loc_29829 ;~ 17C5:3529
loc_2975c:
	// 5253 
cs=0x17c5;eip=0x00352c; 	T(bx = word_527d8;);	// 90032                  mov     bx, ds:word_527D8 ;~ 17C5:352C
cs=0x17c5;eip=0x003530; 	T(CMP(*(dw*)(raddr(ds,bx+4)), 0));	// 90033                  cmp     word ptr [bx+4], 0 ;~ 17C5:3530
cs=0x17c5;eip=0x003534; 	J(JNZ(loc_297a4));	// 90034                  jnz     short loc_297A4 ;~ 17C5:3534
cs=0x17c5;eip=0x003536; 	T(MOV(bl, *(raddr(ds,bx+6))));	// 90035                  mov     bl, [bx+6] ;~ 17C5:3536
cs=0x17c5;eip=0x003539; 	T(SUB(bh, bh));	// 90036                  sub     bh, bh ;~ 17C5:3539
cs=0x17c5;eip=0x00353b; 	T(SHL(bx, 1));	// 90037                  shl     bx, 1 ;~ 17C5:353B
cs=0x17c5;eip=0x00353d; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x130A))));	// 90038                  mov     ax, [bx+130Ah] ;~ 17C5:353D
cs=0x17c5;eip=0x003541; 	T(ADD(ax, 0));	// 90039                  add     ax, 0 ;~ 17C5:3541
cs=0x17c5;eip=0x003544; 	X(*(dw*)(&dword_4a46c) = ax;);	// 90040                  mov     word ptr dword_4A46C, ax ;~ 17C5:3544
cs=0x17c5;eip=0x003547; 	X(*(dw*)(((db*)&dword_4a46c)+2) = seg_offset(seg38b0););	// 90041                  mov     word ptr dword_4A46C+2, seg seg38b0 ;~ 17C5:3547
cs=0x17c5;eip=0x00354d; 	T(bx = word_527d8;);	// 90042                  mov     bx, ds:word_527D8 ;~ 17C5:354D
cs=0x17c5;eip=0x003551; 	T(MOV(ax, *(dw*)(raddr(ds,bx+2))));	// 90043                  mov     ax, [bx+2] ;~ 17C5:3551
cs=0x17c5;eip=0x003554; 	T(cl = *(db*)(&word_52272););	// 90044                  mov     cl, byte ptr ds:word_52272 ;~ 17C5:3554
cs=0x17c5;eip=0x003558; 	T(SAR(ax, cl));	// 90045                  sar     ax, cl ;~ 17C5:3558
cs=0x17c5;eip=0x00355a; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_4))));	// 90046                  add     ax, [bp+var_4] ;~ 17C5:355A
cs=0x17c5;eip=0x00355d; 	X(PUSH(ax));	// 90047                  push    ax ;~ 17C5:355D
cs=0x17c5;eip=0x00355e; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 90048                  mov     ax, [bx] ;~ 17C5:355E
cs=0x17c5;eip=0x003560; 	T(SAR(ax, cl));	// 90049                  sar     ax, cl ;~ 17C5:3560
cs=0x17c5;eip=0x003562; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_14))));	// 90050                  add     ax, [bp+var_14] ;~ 17C5:3562
cs=0x17c5;eip=0x003565; 	X(PUSH(ax));	// 90051                  push    ax ;~ 17C5:3565
cs=0x17c5;eip=0x003566; 	X(PUSH(*(dw*)(((db*)&dword_4a46c)+2)));	// 90052                  push    word ptr dword_4A46C+2 ;~ 17C5:3566
cs=0x17c5;eip=0x00356a; 	X(PUSH(*(dw*)(&dword_4a46c)));	// 90053                  push    word ptr dword_4A46C ;~ 17C5:356A
cs=0x17c5;eip=0x00356e; 	J(CALL(sub_29902,0));	// 90054                  call    sub_29902 ;~ 17C5:356E
cs=0x17c5;eip=0x003571; 	T(ADD(sp, 8));	// 90055                  add     sp, 8 ;~ 17C5:3571
loc_297a4:
	// 5254 
cs=0x17c5;eip=0x003574; 	X(ADD(word_527d8, 7));	// 90058                  add     ds:word_527D8, 7 ;~ 17C5:3574
cs=0x17c5;eip=0x003579; 	X(INC(*(dw*)(raddr(ss,bp+var_a))));	// 90059                  inc     [bp+var_A] ;~ 17C5:3579
loc_297ac:
	// 5255 
cs=0x17c5;eip=0x00357c; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_10))));	// 90062                  mov     si, [bp+var_10] ;~ 17C5:357C
cs=0x17c5;eip=0x00357f; 	T(SHL(si, 1));	// 90063                  shl     si, 1 ;~ 17C5:357F
cs=0x17c5;eip=0x003581; 	T(bx = word_5239c;);	// 90064                  mov     bx, ds:word_5239C ;~ 17C5:3581
cs=0x17c5;eip=0x003585; 	T(cl = 6;);	// 90065                  mov     cl, 6 ;~ 17C5:3585
cs=0x17c5;eip=0x003587; 	T(SHL(bx, cl));	// 90066                  shl     bx, cl ;~ 17C5:3587
cs=0x17c5;eip=0x003589; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 90067                  mov     ax, [bp+var_A] ;~ 17C5:3589
cs=0x17c5;eip=0x00358c; 	T(CMP(*(dw*)(raddr(ds,bx+si+0x13E0)), ax));	// 90068                  cmp     [bx+si+13E0h], ax ;~ 17C5:358C
cs=0x17c5;eip=0x003590; 	J(JA(loc_2975c));	// 90069                  ja      short loc_2975C ;~ 17C5:3590
loc_297c2:
	// 5256 
cs=0x17c5;eip=0x003592; 	X(INC(*(dw*)(raddr(ss,bp+var_c))));	// 90072                  inc     [bp+var_C] ;~ 17C5:3592
loc_297c5:
	// 5257 
cs=0x17c5;eip=0x003595; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_12))));	// 90075                  mov     ax, [bp+var_12] ;~ 17C5:3595
cs=0x17c5;eip=0x003598; 	T(CMP(*(dw*)(raddr(ss,bp+var_c)), ax));	// 90076                  cmp     [bp+var_C], ax ;~ 17C5:3598
cs=0x17c5;eip=0x00359b; 	J(JG(loc_29826));	// 90077                  jg      short loc_29826 ;~ 17C5:359B
cs=0x17c5;eip=0x00359d; 	T(si = word_4ef10;);	// 90078                  mov     si, ds:word_4EF10 ;~ 17C5:359D
cs=0x17c5;eip=0x0035a1; 	T(SAR(si, 1));	// 90079                  sar     si, 1 ;~ 17C5:35A1
cs=0x17c5;eip=0x0035a3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 90080                  mov     ax, [bp+var_C] ;~ 17C5:35A3
cs=0x17c5;eip=0x0035a6; 	X(IMUL1_2(word_4ef10));	// 90081                  imul    ds:word_4EF10 ;~ 17C5:35A6
cs=0x17c5;eip=0x0035aa; 	T(SUB(ax, word_4ef14));	// 90082                  sub     ax, ds:word_4EF14 ;~ 17C5:35AA
cs=0x17c5;eip=0x0035ae; 	T(ADD(ax, si));	// 90083                  add     ax, si ;~ 17C5:35AE
cs=0x17c5;eip=0x0035b0; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 90084                  mov     [bp+var_14], ax ;~ 17C5:35B0
cs=0x17c5;eip=0x0035b3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 90085                  mov     ax, [bp+var_E] ;~ 17C5:35B3
cs=0x17c5;eip=0x0035b6; 	X(IMUL1_2(word_4ef10));	// 90086                  imul    ds:word_4EF10 ;~ 17C5:35B6
cs=0x17c5;eip=0x0035ba; 	T(SUB(ax, word_4ef16));	// 90087                  sub     ax, ds:word_4EF16 ;~ 17C5:35BA
cs=0x17c5;eip=0x0035be; 	T(ADD(ax, si));	// 90088                  add     ax, si ;~ 17C5:35BE
cs=0x17c5;eip=0x0035c0; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 90089                  mov     [bp+var_4], ax ;~ 17C5:35C0
cs=0x17c5;eip=0x0035c3; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 90090                  push    [bp+var_E] ;~ 17C5:35C3
cs=0x17c5;eip=0x0035c6; 	X(PUSH(*(dw*)(raddr(ss,bp+var_c))));	// 90091                  push    [bp+var_C] ;~ 17C5:35C6
cs=0x17c5;eip=0x0035c9; 	X(PUSH(word_5239c));	// 90092                  push    ds:word_5239C ;~ 17C5:35C9
cs=0x17c5;eip=0x0035cd; 	J(CALL(sub_2896e,0));	// 90093                  call    sub_2896E ;~ 17C5:35CD
cs=0x17c5;eip=0x0035d0; 	T(ADD(sp, 6));	// 90094                  add     sp, 6 ;~ 17C5:35D0
cs=0x17c5;eip=0x0035d3; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 90095                  mov     [bp+var_10], ax ;~ 17C5:35D3
cs=0x17c5;eip=0x0035d6; 	T(CMP(ax, 0x0FFFF));	// 90096                  cmp     ax, 0FFFFh ;~ 17C5:35D6
cs=0x17c5;eip=0x0035d9; 	J(JZ(loc_297c2));	// 90097                  jz      short loc_297C2 ;~ 17C5:35D9
cs=0x17c5;eip=0x0035db; 	T(di = ax;);	// 90098                  mov     di, ax ;~ 17C5:35DB
cs=0x17c5;eip=0x0035dd; 	T(SHL(di, 1));	// 90099                  shl     di, 1 ;~ 17C5:35DD
cs=0x17c5;eip=0x0035df; 	T(bx = word_5239c;);	// 90100                  mov     bx, ds:word_5239C ;~ 17C5:35DF
cs=0x17c5;eip=0x0035e3; 	T(cl = 6;);	// 90101                  mov     cl, 6 ;~ 17C5:35E3
cs=0x17c5;eip=0x0035e5; 	T(SHL(bx, cl));	// 90102                  shl     bx, cl ;~ 17C5:35E5
cs=0x17c5;eip=0x0035e7; 	T(MOV(ax, *(dw*)(raddr(ds,bx+di-0x6450))));	// 90103                  mov     ax, [bx+di-6450h] ;~ 17C5:35E7
cs=0x17c5;eip=0x0035eb; 	X(word_527d8 = ax;);	// 90104                  mov     ds:word_527D8, ax ;~ 17C5:35EB
cs=0x17c5;eip=0x0035ee; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), 0));	// 90105                  mov     [bp+var_A], 0 ;~ 17C5:35EE
cs=0x17c5;eip=0x0035f3; 	J(JMP(loc_297ac));	// 90106                  jmp     short loc_297AC ;~ 17C5:35F3
loc_29826:
	// 5258 
cs=0x17c5;eip=0x0035f6; 	X(INC(*(dw*)(raddr(ss,bp+var_e))));	// 90112                  inc     [bp+var_E] ;~ 17C5:35F6
loc_29829:
	// 5259 
cs=0x17c5;eip=0x0035f9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 90115                  mov     ax, [bp+var_2] ;~ 17C5:35F9
cs=0x17c5;eip=0x0035fc; 	T(CMP(*(dw*)(raddr(ss,bp+var_e)), ax));	// 90116                  cmp     [bp+var_E], ax ;~ 17C5:35FC
cs=0x17c5;eip=0x0035ff; 	J(JG(loc_2983a));	// 90117                  jg      short loc_2983A ;~ 17C5:35FF
cs=0x17c5;eip=0x003601; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 90118                  mov     ax, [bp+var_6] ;~ 17C5:3601
cs=0x17c5;eip=0x003604; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 90119                  mov     [bp+var_C], ax ;~ 17C5:3604
cs=0x17c5;eip=0x003607; 	J(JMP(loc_297c5));	// 90120                  jmp     short loc_297C5 ;~ 17C5:3607
loc_2983a:
	// 5260 
cs=0x17c5;eip=0x00360a; 	X(DEC(word_4ef1a));	// 90127                  dec     ds:word_4EF1A ;~ 17C5:360A
loc_2983e:
	// 5261 
cs=0x17c5;eip=0x00360e; 	T(CMP(word_4ef1a, 0));	// 90130                  cmp     ds:word_4EF1A, 0 ;~ 17C5:360E
cs=0x17c5;eip=0x003613; 	J(JL(loc_29862));	// 90131                  jl      short loc_29862 ;~ 17C5:3613
cs=0x17c5;eip=0x003615; 	T(bx = word_4ef1a;);	// 90132                  mov     bx, ds:word_4EF1A ;~ 17C5:3615
cs=0x17c5;eip=0x003619; 	T(SHL(bx, 1));	// 90133                  shl     bx, 1 ;~ 17C5:3619
cs=0x17c5;eip=0x00361b; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x18D6))));	// 90134                  mov     ax, [bx+18D6h] ;~ 17C5:361B
cs=0x17c5;eip=0x00361f; 	X(word_5239c = ax;);	// 90135                  mov     ds:word_5239C, ax ;~ 17C5:361F
cs=0x17c5;eip=0x003622; 	T(CMP(word_4ef1a, 1));	// 90136                  cmp     ds:word_4EF1A, 1 ;~ 17C5:3622
cs=0x17c5;eip=0x003627; 	J(JLE(loc_2985c));	// 90137                  jle     short loc_2985C ;~ 17C5:3627
cs=0x17c5;eip=0x003629; 	J(JMP(loc_29700));	// 90138                  jmp     loc_29700 ;~ 17C5:3629
loc_2985c:
	// 5262 
cs=0x17c5;eip=0x00362c; 	T(ax = 0x40;);	// 90142                  mov     ax, 40h ; '@' ;~ 17C5:362C
cs=0x17c5;eip=0x00362f; 	J(JMP(loc_29702));	// 90143                  jmp     loc_29702 ;~ 17C5:362F
loc_29862:
	// 5263 
cs=0x17c5;eip=0x003632; 	X(POP(si));	// 90147                  pop     si ;~ 17C5:3632
cs=0x17c5;eip=0x003633; 	X(POP(di));	// 90148                  pop     di ;~ 17C5:3633
cs=0x17c5;eip=0x003634; 	T(sp = bp;);	// 90149                  mov     sp, bp ;~ 17C5:3634
cs=0x17c5;eip=0x003636; 	X(POP(bp));	// 90150                  pop     bp ;~ 17C5:3636
cs=0x17c5;eip=0x003637; 	J(RETN(0));	// 90151                  retn ;~ 17C5:3637

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29700: 	goto loc_29700;
        case m2c::kloc_29702: 	goto loc_29702;
        case m2c::kloc_2972a: 	goto loc_2972a;
        case m2c::kloc_2975c: 	goto loc_2975c;
        case m2c::kloc_297a4: 	goto loc_297a4;
        case m2c::kloc_297ac: 	goto loc_297ac;
        case m2c::kloc_297c2: 	goto loc_297c2;
        case m2c::kloc_297c5: 	goto loc_297c5;
        case m2c::kloc_29826: 	goto loc_29826;
        case m2c::kloc_29829: 	goto loc_29829;
        case m2c::kloc_2983a: 	goto loc_2983a;
        case m2c::kloc_2983e: 	goto loc_2983e;
        case m2c::kloc_2985c: 	goto loc_2985c;
        case m2c::kloc_29862: 	goto loc_29862;
        case m2c::ksub_296dc: 	goto sub_296dc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29868(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29868:
    _begin:
#undef arg_0
#define arg_0 4
	// 90161 arg_0           = word ptr  4 ;~ 17C5:3638
#undef arg_2
#define arg_2 6
	// 90162 arg_2           = word ptr  6 ;~ 17C5:3638
#undef arg_4
#define arg_4 8
	// 90163 arg_4           = word ptr  8 ;~ 17C5:3638
#undef arg_6
#define arg_6 0x0A
	// 90164 arg_6           = word ptr  0Ah ;~ 17C5:3638
cs=0x17c5;eip=0x003638; 	X(PUSH(bp));	// 90166                  push    bp ;~ 17C5:3638
cs=0x17c5;eip=0x003639; 	T(bp = sp;);	// 90167                  mov     bp, sp ;~ 17C5:3639
cs=0x17c5;eip=0x00363b; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 90168                  push    [bp+arg_4] ;~ 17C5:363B
cs=0x17c5;eip=0x00363e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 90169                  push    [bp+arg_0] ;~ 17C5:363E
cs=0x17c5;eip=0x003641; 	T(SUB(ax, ax));	// 90170                  sub     ax, ax ;~ 17C5:3641
cs=0x17c5;eip=0x003643; 	X(PUSH(ax));	// 90171                  push    ax ;~ 17C5:3643
cs=0x17c5;eip=0x003644; 	X(PUSH(ax));	// 90172                  push    ax ;~ 17C5:3644
cs=0x17c5;eip=0x003645; 	J(CALL(sub_298c4,0));	// 90173                  call    sub_298C4 ;~ 17C5:3645
cs=0x17c5;eip=0x003648; 	T(ADD(sp, 8));	// 90174                  add     sp, 8 ;~ 17C5:3648
cs=0x17c5;eip=0x00364b; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 90175                  mov     bx, [bp+arg_0] ;~ 17C5:364B
cs=0x17c5;eip=0x00364e; 	T(CMP(*(dw*)(raddr(ds,bx)), 0));	// 90176                  cmp     word ptr [bx], 0 ;~ 17C5:364E
cs=0x17c5;eip=0x003651; 	J(JGE(loc_29887));	// 90177                  jge     short loc_29887 ;~ 17C5:3651
cs=0x17c5;eip=0x003653; 	X(MOV(*(dw*)(raddr(ds,bx)), 0));	// 90178                  mov     word ptr [bx], 0 ;~ 17C5:3653
loc_29887:
	// 5264 
cs=0x17c5;eip=0x003657; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_4))));	// 90181                  mov     bx, [bp+arg_4] ;~ 17C5:3657
cs=0x17c5;eip=0x00365a; 	T(CMP(*(dw*)(raddr(ds,bx)), 0));	// 90182                  cmp     word ptr [bx], 0 ;~ 17C5:365A
cs=0x17c5;eip=0x00365d; 	J(JGE(loc_29893));	// 90183                  jge     short loc_29893 ;~ 17C5:365D
cs=0x17c5;eip=0x00365f; 	X(MOV(*(dw*)(raddr(ds,bx)), 0));	// 90184                  mov     word ptr [bx], 0 ;~ 17C5:365F
loc_29893:
	// 5265 
cs=0x17c5;eip=0x003663; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 90187                  push    [bp+arg_6] ;~ 17C5:3663
cs=0x17c5;eip=0x003666; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 90188                  push    [bp+arg_2] ;~ 17C5:3666
cs=0x17c5;eip=0x003669; 	X(PUSH(word_4d789));	// 90189                  push    ds:word_4D789 ;~ 17C5:3669
cs=0x17c5;eip=0x00366d; 	X(PUSH(word_4d787));	// 90190                  push    ds:word_4D787 ;~ 17C5:366D
cs=0x17c5;eip=0x003671; 	J(CALL(sub_298c4,0));	// 90191                  call    sub_298C4 ;~ 17C5:3671
cs=0x17c5;eip=0x003674; 	T(ADD(sp, 8));	// 90192                  add     sp, 8 ;~ 17C5:3674
cs=0x17c5;eip=0x003677; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_2))));	// 90193                  mov     bx, [bp+arg_2] ;~ 17C5:3677
cs=0x17c5;eip=0x00367a; 	T(ax = word_4ef12;);	// 90194                  mov     ax, ds:word_4EF12 ;~ 17C5:367A
cs=0x17c5;eip=0x00367d; 	T(CMP(*(dw*)(raddr(ds,bx)), ax));	// 90195                  cmp     [bx], ax ;~ 17C5:367D
cs=0x17c5;eip=0x00367f; 	J(JL(loc_298b4));	// 90196                  jl      short loc_298B4 ;~ 17C5:367F
cs=0x17c5;eip=0x003681; 	T(DEC(ax));	// 90197                  dec     ax ;~ 17C5:3681
cs=0x17c5;eip=0x003682; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 90198                  mov     [bx], ax ;~ 17C5:3682
loc_298b4:
	// 5266 
cs=0x17c5;eip=0x003684; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_6))));	// 90201                  mov     bx, [bp+arg_6] ;~ 17C5:3684
cs=0x17c5;eip=0x003687; 	T(ax = word_4ef12;);	// 90202                  mov     ax, ds:word_4EF12 ;~ 17C5:3687
cs=0x17c5;eip=0x00368a; 	T(CMP(*(dw*)(raddr(ds,bx)), ax));	// 90203                  cmp     [bx], ax ;~ 17C5:368A
cs=0x17c5;eip=0x00368c; 	J(JL(loc_298c1));	// 90204                  jl      short loc_298C1 ;~ 17C5:368C
cs=0x17c5;eip=0x00368e; 	T(DEC(ax));	// 90205                  dec     ax ;~ 17C5:368E
cs=0x17c5;eip=0x00368f; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 90206                  mov     [bx], ax ;~ 17C5:368F
loc_298c1:
	// 5267 
cs=0x17c5;eip=0x003691; 	X(POP(bp));	// 90209                  pop     bp ;~ 17C5:3691
cs=0x17c5;eip=0x003692; 	J(RETN(0));	// 90210                  retn ;~ 17C5:3692

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29887: 	goto loc_29887;
        case m2c::kloc_29893: 	goto loc_29893;
        case m2c::kloc_298b4: 	goto loc_298b4;
        case m2c::kloc_298c1: 	goto loc_298c1;
        case m2c::ksub_29868: 	goto sub_29868;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_298c4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_298c4:
    _begin:
#undef arg_0
#define arg_0 4
	// 90223 arg_0           = word ptr  4 ;~ 17C5:3694
#undef arg_2
#define arg_2 6
	// 90224 arg_2           = word ptr  6 ;~ 17C5:3694
#undef arg_4
#define arg_4 8
	// 90225 arg_4           = word ptr  8 ;~ 17C5:3694
#undef arg_6
#define arg_6 0x0A
	// 90226 arg_6           = word ptr  0Ah ;~ 17C5:3694
cs=0x17c5;eip=0x003694; 	X(PUSH(bp));	// 90228                  push    bp ;~ 17C5:3694
cs=0x17c5;eip=0x003695; 	T(bp = sp;);	// 90229                  mov     bp, sp ;~ 17C5:3695
cs=0x17c5;eip=0x003697; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90230                  mov     ax, [bp+arg_0] ;~ 17C5:3697
cs=0x17c5;eip=0x00369a; 	T(SUB(ax, word_48bbc));	// 90231                  sub     ax, word_48BBC ;~ 17C5:369A
cs=0x17c5;eip=0x00369e; 	T(ADD(ax, word_4ef14));	// 90232                  add     ax, ds:word_4EF14 ;~ 17C5:369E
cs=0x17c5;eip=0x0036a2; 	T(CWD);	// 90233                  cwd ;~ 17C5:36A2
cs=0x17c5;eip=0x0036a3; 	T(cx = word_4ef10;);	// 90234                  mov     cx, ds:word_4EF10 ;~ 17C5:36A3
cs=0x17c5;eip=0x0036a7; 	T(IDIV2(cx));	// 90235                  idiv    cx ;~ 17C5:36A7
cs=0x17c5;eip=0x0036a9; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_4))));	// 90236                  mov     bx, [bp+arg_4] ;~ 17C5:36A9
cs=0x17c5;eip=0x0036ac; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 90237                  mov     [bx], ax ;~ 17C5:36AC
cs=0x17c5;eip=0x0036ae; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 90238                  mov     ax, [bp+arg_2] ;~ 17C5:36AE
cs=0x17c5;eip=0x0036b1; 	T(SUB(ax, *(word_48bbe)));	// 90239                  sub     ax, word_48BBE ;~ 17C5:36B1
cs=0x17c5;eip=0x0036b5; 	T(SHL(ax, 1));	// 90240                  shl     ax, 1 ;~ 17C5:36B5
cs=0x17c5;eip=0x0036b7; 	T(SHL(ax, 1));	// 90241                  shl     ax, 1 ;~ 17C5:36B7
cs=0x17c5;eip=0x0036b9; 	T(CWD);	// 90242                  cwd ;~ 17C5:36B9
cs=0x17c5;eip=0x0036ba; 	T(cx = 3;);	// 90243                  mov     cx, 3 ;~ 17C5:36BA
cs=0x17c5;eip=0x0036bd; 	T(IDIV2(cx));	// 90244                  idiv    cx ;~ 17C5:36BD
cs=0x17c5;eip=0x0036bf; 	T(ADD(ax, word_4ef16));	// 90245                  add     ax, ds:word_4EF16 ;~ 17C5:36BF
cs=0x17c5;eip=0x0036c3; 	T(CWD);	// 90246                  cwd ;~ 17C5:36C3
cs=0x17c5;eip=0x0036c4; 	T(cx = word_4ef10;);	// 90247                  mov     cx, ds:word_4EF10 ;~ 17C5:36C4
cs=0x17c5;eip=0x0036c8; 	T(IDIV2(cx));	// 90248                  idiv    cx ;~ 17C5:36C8
cs=0x17c5;eip=0x0036ca; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_6))));	// 90249                  mov     bx, [bp+arg_6] ;~ 17C5:36CA
cs=0x17c5;eip=0x0036cd; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 90250                  mov     [bx], ax ;~ 17C5:36CD
cs=0x17c5;eip=0x0036cf; 	X(POP(bp));	// 90251                  pop     bp ;~ 17C5:36CF
cs=0x17c5;eip=0x0036d0; 	J(RETN(0));	// 90252                  retn ;~ 17C5:36D0

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_298c4: 	goto sub_298c4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29902(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29902:
    _begin:
#undef arg_0
#define arg_0 4
	// 90264 arg_0           = word ptr  4 ;~ 17C5:36D2
#undef arg_2
#define arg_2 6
	// 90265 arg_2           = word ptr  6 ;~ 17C5:36D2
#undef arg_4
#define arg_4 8
	// 90266 arg_4           = word ptr  8 ;~ 17C5:36D2
#undef arg_6
#define arg_6 0x0A
	// 90267 arg_6           = word ptr  0Ah ;~ 17C5:36D2
cs=0x17c5;eip=0x0036d2; 	X(PUSH(bp));	// 90269                  push    bp ;~ 17C5:36D2
cs=0x17c5;eip=0x0036d3; 	T(bp = sp;);	// 90270                  mov     bp, sp ;~ 17C5:36D3
cs=0x17c5;eip=0x0036d5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90271                  mov     ax, [bp+arg_0] ;~ 17C5:36D5
cs=0x17c5;eip=0x0036d8; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 90272                  mov     dx, [bp+arg_2] ;~ 17C5:36D8
cs=0x17c5;eip=0x0036db; 	X(*(dw*)(&dword_4a46c) = ax;);	// 90273                  mov     word ptr dword_4A46C, ax ;~ 17C5:36DB
cs=0x17c5;eip=0x0036de; 	X(*(dw*)(((db*)&dword_4a46c)+2) = dx;);	// 90274                  mov     word ptr dword_4A46C+2, dx ;~ 17C5:36DE
cs=0x17c5;eip=0x0036e2; 	X(INC(*(dw*)(&dword_4a46c)));	// 90275                  inc     word ptr dword_4A46C ;~ 17C5:36E2
cs=0x17c5;eip=0x0036e6; 	X(word_4a490 = 0;);	// 90276                  mov     word_4A490, 0 ;~ 17C5:36E6
cs=0x17c5;eip=0x0036ec; 	J(CALLF(sub_3650a,0));	// 90277                  call    sub_3650A ;~ 17C5:36EC
cs=0x17c5;eip=0x0036f1; 	T(CMP(word_5239c, 3));	// 90278                  cmp     ds:word_5239C, 3 ;~ 17C5:36F1
cs=0x17c5;eip=0x0036f6; 	J(JL(loc_2993a));	// 90279                  jl      short loc_2993A ;~ 17C5:36F6
cs=0x17c5;eip=0x0036f8; 	T(LES(bx, dword_4a46c));	// 90280                  les     bx, dword_4A46C ;~ 17C5:36F8
cs=0x17c5;eip=0x0036fc; 	T(MOV(al, *(raddr(es,bx))));	// 90281                  mov     al, es:[bx] ;~ 17C5:36FC
cs=0x17c5;eip=0x0036ff; 	T(SUB(ah, ah));	// 90282                  sub     ah, ah ;~ 17C5:36FF
cs=0x17c5;eip=0x003701; 	T(AND(ax, 0x40));	// 90283                  and     ax, 40h ;~ 17C5:3701
cs=0x17c5;eip=0x003704; 	T(CMP(ax, word_4ef18));	// 90284                  cmp     ax, ds:word_4EF18 ;~ 17C5:3704
cs=0x17c5;eip=0x003708; 	J(JNZ(loc_29978));	// 90285                  jnz     short loc_29978 ;~ 17C5:3708
loc_2993a:
	// 5268 
cs=0x17c5;eip=0x00370a; 	T(LES(bx, dword_4a46c));	// 90288                  les     bx, dword_4A46C ;~ 17C5:370A
cs=0x17c5;eip=0x00370e; 	T(MOV(al, *(raddr(es,bx))));	// 90289                  mov     al, es:[bx] ;~ 17C5:370E
cs=0x17c5;eip=0x003711; 	T(SUB(ah, ah));	// 90290                  sub     ah, ah ;~ 17C5:3711
cs=0x17c5;eip=0x003713; 	T(AND(ax, 0x3F));	// 90291                  and     ax, 3Fh ;~ 17C5:3713
cs=0x17c5;eip=0x003716; 	T(CMP(ax, 0x3E));	// 90292                  cmp     ax, 3Eh ; '>' ;~ 17C5:3716
cs=0x17c5;eip=0x003719; 	J(JZ(loc_29978));	// 90293                  jz      short loc_29978 ;~ 17C5:3719
cs=0x17c5;eip=0x00371b; 	T(CMP(ax, 0x3F));	// 90294                  cmp     ax, 3Fh ; '?' ;~ 17C5:371B
cs=0x17c5;eip=0x00371e; 	J(JNZ(loc_29956));	// 90295                  jnz     short loc_29956 ;~ 17C5:371E
cs=0x17c5;eip=0x003720; 	J(CALL(sub_2997a,0));	// 90296                  call    sub_2997A ;~ 17C5:3720
cs=0x17c5;eip=0x003723; 	X(POP(bp));	// 90298                  pop     bp ;~ 17C5:3723
cs=0x17c5;eip=0x003724; 	J(RETN(0));	// 90299                  retn ;~ 17C5:3724
loc_29956:
	// 5269 
cs=0x17c5;eip=0x003726; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 90305                  push    [bp+arg_6] ;~ 17C5:3726
cs=0x17c5;eip=0x003729; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 90306                  push    [bp+arg_4] ;~ 17C5:3729
cs=0x17c5;eip=0x00372c; 	J(CALL(sub_299be,0));	// 90307                  call    sub_299BE ;~ 17C5:372C
cs=0x17c5;eip=0x00372f; 	T(ADD(sp, 4));	// 90308                  add     sp, 4 ;~ 17C5:372F
cs=0x17c5;eip=0x003732; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 90309                  push    [bp+arg_6] ;~ 17C5:3732
cs=0x17c5;eip=0x003735; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 90310                  push    [bp+arg_4] ;~ 17C5:3735
cs=0x17c5;eip=0x003738; 	J(CALL(sub_29a46,0));	// 90311                  call    sub_29A46 ;~ 17C5:3738
cs=0x17c5;eip=0x00373b; 	T(ADD(sp, 4));	// 90312                  add     sp, 4 ;~ 17C5:373B
cs=0x17c5;eip=0x00373e; 	J(CALLF(sub_36c76,0));	// 90313                  call    sub_36C76 ;~ 17C5:373E
cs=0x17c5;eip=0x003743; 	J(CALLF(sub_3720c,0));	// 90314                  call    sub_3720C ;~ 17C5:3743
loc_29978:
	// 5270 
cs=0x17c5;eip=0x003748; 	X(POP(bp));	// 90318                  pop     bp ;~ 17C5:3748
cs=0x17c5;eip=0x003749; 	J(RETN(0));	// 90319                  retn ;~ 17C5:3749

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2993a: 	goto loc_2993a;
        case m2c::kloc_29956: 	goto loc_29956;
        case m2c::kloc_29978: 	goto loc_29978;
        case m2c::ksub_29902: 	goto sub_29902;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group29(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group29:
    _begin:
sub_2997a:
	// 90327 
#undef arg_0
#define arg_0 4
	// 90329 arg_0           = word ptr  4 ;~ 17C5:374A
#undef arg_2
#define arg_2 6
	// 90330 arg_2           = word ptr  6 ;~ 17C5:374A
cs=0x17c5;eip=0x00374a; 	X(PUSH(bp));	// 90332                  push    bp ;~ 17C5:374A
cs=0x17c5;eip=0x00374b; 	T(bp = sp;);	// 90333                  mov     bp, sp ;~ 17C5:374B
cs=0x17c5;eip=0x00374d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90334                  mov     ax, [bp+arg_0] ;~ 17C5:374D
cs=0x17c5;eip=0x003750; 	T(ADD(ax, word_48bbc));	// 90335                  add     ax, word_48BBC ;~ 17C5:3750
cs=0x17c5;eip=0x003754; 	X(word_4d78d = ax;);	// 90336                  mov     ds:word_4D78D, ax ;~ 17C5:3754
cs=0x17c5;eip=0x003757; 	X(word_4d78f = ax;);	// 90337                  mov     ds:word_4D78F, ax ;~ 17C5:3757
cs=0x17c5;eip=0x00375a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 90338                  mov     ax, [bp+arg_2] ;~ 17C5:375A
cs=0x17c5;eip=0x00375d; 	T(NEG(ax));	// 90339                  neg     ax ;~ 17C5:375D
cs=0x17c5;eip=0x00375f; 	T(ADD(ax, *(word_48bbe)));	// 90340                  add     ax, word_48BBE ;~ 17C5:375F
cs=0x17c5;eip=0x003763; 	X(word_4d791 = ax;);	// 90341                  mov     ds:word_4D791, ax ;~ 17C5:3763
cs=0x17c5;eip=0x003766; 	X(word_4d793 = ax;);	// 90342                  mov     ds:word_4D793, ax ;~ 17C5:3766
cs=0x17c5;eip=0x003769; 	X(INC(*(dw*)(&dword_4a46c)));	// 90343                  inc     word ptr dword_4A46C ;~ 17C5:3769
cs=0x17c5;eip=0x00376d; 	T(bx = *(dw*)(&dword_4a46c););	// 90344                  mov     bx, word ptr dword_4A46C ;~ 17C5:376D
cs=0x17c5;eip=0x003771; 	X(INC(*(dw*)(&dword_4a46c)));	// 90345                  inc     word ptr dword_4A46C ;~ 17C5:3771
cs=0x17c5;eip=0x003775; 	T(es = *(dw*)(((db*)&dword_4a46c)+2););	// 90346                  mov     es, word ptr dword_4A46C+2 ;~ 17C5:3775
cs=0x17c5;eip=0x003779; 	T(MOV(al, *(raddr(es,bx))));	// 90348                  mov     al, es:[bx] ;~ 17C5:3779
cs=0x17c5;eip=0x00377c; 	T(SUB(ah, ah));	// 90349                  sub     ah, ah ;~ 17C5:377C
cs=0x17c5;eip=0x00377e; 	X(PUSH(ax));	// 90350                  push    ax ;~ 17C5:377E
cs=0x17c5;eip=0x00377f; 	J(CALLF(sub_49a43,0));	// 90351                  call    far ptr sub_49A43 ;~ 17C5:377F
seg2623_3784_proc:
	// 90355 
cs=0x17c5;eip=0x003784; 	T(ADD(sp, 2));	// 90355                  add     sp, 2 ;~ 17C5:3784
cs=0x17c5;eip=0x003787; 	J(CALLF(sub_3775a,0));	// 90356                  call    sub_3775A ;~ 17C5:3787
cs=0x17c5;eip=0x00378c; 	X(POP(bp));	// 90357                  pop     bp ;~ 17C5:378C
cs=0x17c5;eip=0x00378d; 	J(RETN(0));	// 90358                  retn ;~ 17C5:378D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_3784_proc: 	goto seg2623_3784_proc;
        case m2c::ksub_2997a: 	goto sub_2997a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_299be(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_299be:
    _begin:
#undef var_6
#define var_6 -6
	// 90367 var_6           = word ptr -6 ;~ 17C5:378E
#undef var_4
#define var_4 -4
	// 90368 var_4           = word ptr -4 ;~ 17C5:378E
#undef var_2
#define var_2 -2
	// 90369 var_2           = word ptr -2 ;~ 17C5:378E
cs=0x17c5;eip=0x00378e; 	X(PUSH(bp));	// 90371                  push    bp ;~ 17C5:378E
cs=0x17c5;eip=0x00378f; 	T(bp = sp;);	// 90372                  mov     bp, sp ;~ 17C5:378F
cs=0x17c5;eip=0x003791; 	T(SUB(sp, 6));	// 90373                  sub     sp, 6 ;~ 17C5:3791
cs=0x17c5;eip=0x003794; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 1));	// 90374                  mov     [bp+var_4], 1 ;~ 17C5:3794
cs=0x17c5;eip=0x003799; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 90375                  mov     [bp+var_2], 0 ;~ 17C5:3799
cs=0x17c5;eip=0x00379e; 	T(bx = *(dw*)(&dword_4a46c););	// 90376                  mov     bx, word ptr dword_4A46C ;~ 17C5:379E
cs=0x17c5;eip=0x0037a2; 	X(INC(*(dw*)(&dword_4a46c)));	// 90377                  inc     word ptr dword_4A46C ;~ 17C5:37A2
cs=0x17c5;eip=0x0037a6; 	T(es = *(dw*)(((db*)&dword_4a46c)+2););	// 90378                  mov     es, word ptr dword_4A46C+2 ;~ 17C5:37A6
cs=0x17c5;eip=0x0037aa; 	T(MOV(al, *(raddr(es,bx))));	// 90379                  mov     al, es:[bx] ;~ 17C5:37AA
cs=0x17c5;eip=0x0037ad; 	T(SUB(ah, ah));	// 90380                  sub     ah, ah ;~ 17C5:37AD
cs=0x17c5;eip=0x0037af; 	T(AND(ax, 0x1F));	// 90381                  and     ax, 1Fh ;~ 17C5:37AF
cs=0x17c5;eip=0x0037b2; 	X(*(word_4a4e0) = ax;);	// 90382                  mov     word_4A4E0, ax ;~ 17C5:37B2
cs=0x17c5;eip=0x0037b5; 	X(word_4a4e6 = 0x0FFFF;);	// 90383                  mov     word_4A4E6, 0FFFFh ;~ 17C5:37B5
cs=0x17c5;eip=0x0037bb; 	X(word_4a4e8 = 0x0FFFF;);	// 90384                  mov     word_4A4E8, 0FFFFh ;~ 17C5:37BB
cs=0x17c5;eip=0x0037c1; 	T(CMP(ax, 0x10));	// 90385                  cmp     ax, 10h ;~ 17C5:37C1
cs=0x17c5;eip=0x0037c4; 	J(JLE(loc_299fa));	// 90386                  jle     short loc_299FA ;~ 17C5:37C4
cs=0x17c5;eip=0x0037c6; 	T(al = 1;);	// 90387                  mov     al, 1 ;~ 17C5:37C6
cs=0x17c5;eip=0x0037c8; 	J(JMP(loc_299fc));	// 90388                  jmp     short loc_299FC ;~ 17C5:37C8
loc_299fa:
	// 5271 
cs=0x17c5;eip=0x0037ca; 	T(SUB(al, al));	// 90392                  sub     al, al ;~ 17C5:37CA
loc_299fc:
	// 5272 
cs=0x17c5;eip=0x0037cc; 	X(*(byte_4a4e4) = al;);	// 90395                  mov     byte_4A4E4, al ;~ 17C5:37CC
cs=0x17c5;eip=0x0037cf; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0));	// 90396                  mov     [bp+var_6], 0 ;~ 17C5:37CF
cs=0x17c5;eip=0x0037d4; 	J(JMP(loc_29a3a));	// 90397                  jmp     short loc_29A3A ;~ 17C5:37D4
loc_29a06:
	// 5273 
cs=0x17c5;eip=0x0037d6; 	X(ADD(*(dw*)(&dword_4a46c), 4));	// 90401                  add     word ptr dword_4A46C, 4 ;~ 17C5:37D6
cs=0x17c5;eip=0x0037db; 	T(bx = *(dw*)(&dword_4a46c););	// 90402                  mov     bx, word ptr dword_4A46C ;~ 17C5:37DB
cs=0x17c5;eip=0x0037df; 	X(ADD(*(dw*)(&dword_4a46c), 2));	// 90403                  add     word ptr dword_4A46C, 2 ;~ 17C5:37DF
cs=0x17c5;eip=0x0037e4; 	T(es = *(dw*)(((db*)&dword_4a46c)+2););	// 90404                  mov     es, word ptr dword_4A46C+2 ;~ 17C5:37E4
cs=0x17c5;eip=0x0037e8; 	T(CMP(*(dw*)(raddr(es,bx)), 0));	// 90405                  cmp     word ptr es:[bx], 0 ;~ 17C5:37E8
cs=0x17c5;eip=0x0037ec; 	J(JGE(loc_29a2c));	// 90406                  jge     short loc_29A2C ;~ 17C5:37EC
cs=0x17c5;eip=0x0037ee; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 90407                  mov     ax, [bp+var_4] ;~ 17C5:37EE
cs=0x17c5;eip=0x0037f1; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_2))));	// 90408                  mov     dx, [bp+var_2] ;~ 17C5:37F1
cs=0x17c5;eip=0x0037f4; 	X(XOR(word_4a4e6, ax));	// 90409                  xor     word_4A4E6, ax ;~ 17C5:37F4
cs=0x17c5;eip=0x0037f8; 	X(XOR(word_4a4e8, dx));	// 90410                  xor     word_4A4E8, dx ;~ 17C5:37F8
loc_29a2c:
	// 5274 
cs=0x17c5;eip=0x0037fc; 	X(ADD(*(dw*)(&dword_4a46c), 2));	// 90413                  add     word ptr dword_4A46C, 2 ;~ 17C5:37FC
cs=0x17c5;eip=0x003801; 	X(SHL(*(dw*)(raddr(ss,bp+var_4)), 1));	// 90414                  shl     [bp+var_4], 1 ;~ 17C5:3801
cs=0x17c5;eip=0x003804; 	X(RCL(*(dw*)(raddr(ss,bp+var_2)), 1));	// 90415                  rcl     [bp+var_2], 1 ;~ 17C5:3804
cs=0x17c5;eip=0x003807; 	X(INC(*(dw*)(raddr(ss,bp+var_6))));	// 90416                  inc     [bp+var_6] ;~ 17C5:3807
loc_29a3a:
	// 5275 
cs=0x17c5;eip=0x00380a; 	T(ax = *(word_4a4e0););	// 90419                  mov     ax, word_4A4E0 ;~ 17C5:380A
cs=0x17c5;eip=0x00380d; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), ax));	// 90420                  cmp     [bp+var_6], ax ;~ 17C5:380D
cs=0x17c5;eip=0x003810; 	J(JL(loc_29a06));	// 90421                  jl      short loc_29A06 ;~ 17C5:3810
cs=0x17c5;eip=0x003812; 	T(sp = bp;);	// 90422                  mov     sp, bp ;~ 17C5:3812
cs=0x17c5;eip=0x003814; 	X(POP(bp));	// 90423                  pop     bp ;~ 17C5:3814
cs=0x17c5;eip=0x003815; 	J(RETN(0));	// 90424                  retn ;~ 17C5:3815

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_299fa: 	goto loc_299fa;
        case m2c::kloc_299fc: 	goto loc_299fc;
        case m2c::kloc_29a06: 	goto loc_29a06;
        case m2c::kloc_29a2c: 	goto loc_29a2c;
        case m2c::kloc_29a3a: 	goto loc_29a3a;
        case m2c::ksub_299be: 	goto sub_299be;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29a46(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29a46:
    _begin:
#undef var_a
#define var_a -0x0A
	// 90434 var_A           = word ptr -0Ah ;~ 17C5:3816
#undef var_8
#define var_8 -8
	// 90435 var_8           = word ptr -8 ;~ 17C5:3816
#undef var_6
#define var_6 -6
	// 90436 var_6           = word ptr -6 ;~ 17C5:3816
#undef var_4
#define var_4 -4
	// 90437 var_4           = word ptr -4 ;~ 17C5:3816
#undef var_2
#define var_2 -2
	// 90438 var_2           = word ptr -2 ;~ 17C5:3816
#undef arg_0
#define arg_0 4
	// 90439 arg_0           = word ptr  4 ;~ 17C5:3816
#undef arg_2
#define arg_2 6
	// 90440 arg_2           = word ptr  6 ;~ 17C5:3816
cs=0x17c5;eip=0x003816; 	X(PUSH(bp));	// 90442                  push    bp ;~ 17C5:3816
cs=0x17c5;eip=0x003817; 	T(bp = sp;);	// 90443                  mov     bp, sp ;~ 17C5:3817
cs=0x17c5;eip=0x003819; 	T(SUB(sp, 0x0A));	// 90444                  sub     sp, 0Ah ;~ 17C5:3819
cs=0x17c5;eip=0x00381c; 	X(PUSH(si));	// 90445                  push    si ;~ 17C5:381C
cs=0x17c5;eip=0x00381d; 	T(LES(bx, dword_4a46c));	// 90446                  les     bx, dword_4A46C ;~ 17C5:381D
cs=0x17c5;eip=0x003821; 	T(MOV(al, *(raddr(es,bx))));	// 90447                  mov     al, es:[bx] ;~ 17C5:3821
cs=0x17c5;eip=0x003824; 	T(SUB(ah, ah));	// 90448                  sub     ah, ah ;~ 17C5:3824
cs=0x17c5;eip=0x003826; 	T(AND(ax, 0x80));	// 90449                  and     ax, 80h ;~ 17C5:3826
cs=0x17c5;eip=0x003829; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 90450                  mov     [bp+var_6], ax ;~ 17C5:3829
cs=0x17c5;eip=0x00382c; 	X(INC(*(dw*)(&dword_4a46c)));	// 90451                  inc     word ptr dword_4A46C ;~ 17C5:382C
cs=0x17c5;eip=0x003830; 	T(MOV(al, *(raddr(es,bx))));	// 90452                  mov     al, es:[bx] ;~ 17C5:3830
cs=0x17c5;eip=0x003833; 	T(SUB(ah, ah));	// 90453                  sub     ah, ah ;~ 17C5:3833
cs=0x17c5;eip=0x003835; 	T(AND(ax, 0x7F));	// 90454                  and     ax, 7Fh ;~ 17C5:3835
cs=0x17c5;eip=0x003838; 	X(word_4a4de = ax;);	// 90455                  mov     word_4A4DE, ax ;~ 17C5:3838
cs=0x17c5;eip=0x00383b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 90456                  mov     [bp+var_2], 0 ;~ 17C5:383B
cs=0x17c5;eip=0x003840; 	J(JMP(loc_29ae5));	// 90457                  jmp     short loc_29AE5 ;~ 17C5:3840
loc_29a72:
	// 5276 
cs=0x17c5;eip=0x003842; 	T(bx = *(dw*)(&dword_4a46c););	// 90461                  mov     bx, word ptr dword_4A46C ;~ 17C5:3842
cs=0x17c5;eip=0x003846; 	X(ADD(*(dw*)(&dword_4a46c), 2));	// 90462                  add     word ptr dword_4A46C, 2 ;~ 17C5:3846
cs=0x17c5;eip=0x00384b; 	T(es = *(dw*)(((db*)&dword_4a46c)+2););	// 90463                  mov     es, word ptr dword_4A46C+2 ;~ 17C5:384B
cs=0x17c5;eip=0x00384f; 	T(MOV(ax, *(dw*)(raddr(es,bx))));	// 90464                  mov     ax, es:[bx] ;~ 17C5:384F
cs=0x17c5;eip=0x003852; 	T(cl = *(db*)(&word_52272););	// 90465                  mov     cl, byte ptr ds:word_52272 ;~ 17C5:3852
cs=0x17c5;eip=0x003856; 	T(SAR(ax, cl));	// 90466                  sar     ax, cl ;~ 17C5:3856
cs=0x17c5;eip=0x003858; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90467                  add     ax, [bp+arg_0] ;~ 17C5:3858
cs=0x17c5;eip=0x00385b; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 90468                  mov     [bp+var_8], ax ;~ 17C5:385B
cs=0x17c5;eip=0x00385e; 	T(bx = *(dw*)(&dword_4a46c););	// 90469                  mov     bx, word ptr dword_4A46C ;~ 17C5:385E
cs=0x17c5;eip=0x003862; 	X(ADD(*(dw*)(&dword_4a46c), 2));	// 90470                  add     word ptr dword_4A46C, 2 ;~ 17C5:3862
cs=0x17c5;eip=0x003867; 	T(MOV(ax, *(dw*)(raddr(es,bx))));	// 90471                  mov     ax, es:[bx] ;~ 17C5:3867
cs=0x17c5;eip=0x00386a; 	T(SAR(ax, cl));	// 90472                  sar     ax, cl ;~ 17C5:386A
cs=0x17c5;eip=0x00386c; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 90473                  add     ax, [bp+arg_2] ;~ 17C5:386C
cs=0x17c5;eip=0x00386f; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 90474                  mov     [bp+var_A], ax ;~ 17C5:386F
cs=0x17c5;eip=0x003872; 	X(ADD(*(dw*)(&dword_4a46c), 2));	// 90475                  add     word ptr dword_4A46C, 2 ;~ 17C5:3872
loc_29aa7:
	// 5277 
cs=0x17c5;eip=0x003877; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_2))));	// 90478                  mov     si, [bp+var_2] ;~ 17C5:3877
cs=0x17c5;eip=0x00387a; 	T(cl = 2;);	// 90479                  mov     cl, 2 ;~ 17C5:387A
cs=0x17c5;eip=0x00387c; 	T(SHL(si, cl));	// 90480                  shl     si, cl ;~ 17C5:387C
cs=0x17c5;eip=0x00387e; 	X(MOV(*(dw*)(raddr(ds,si+0x1DD4)), 1));	// 90481                  mov     word ptr [si+1DD4h], 1 ;~ 17C5:387E
cs=0x17c5;eip=0x003884; 	X(MOV(*(dw*)(raddr(ds,si+0x1DD6)), 1));	// 90482                  mov     word ptr [si+1DD6h], 1 ;~ 17C5:3884
cs=0x17c5;eip=0x00388a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 90483                  mov     ax, [bp+var_8] ;~ 17C5:388A
cs=0x17c5;eip=0x00388d; 	T(ADD(ax, word_48bbc));	// 90484                  add     ax, word_48BBC ;~ 17C5:388D
cs=0x17c5;eip=0x003891; 	T(CWD);	// 90485                  cwd ;~ 17C5:3891
cs=0x17c5;eip=0x003892; 	X(MOV(*(dw*)(raddr(ds,si+0x1FB8)), ax));	// 90486                  mov     [si+1FB8h], ax ;~ 17C5:3892
cs=0x17c5;eip=0x003896; 	X(MOV(*(dw*)(raddr(ds,si+0x1FBA)), dx));	// 90487                  mov     [si+1FBAh], dx ;~ 17C5:3896
cs=0x17c5;eip=0x00389a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 90488                  push    [bp+var_A] ;~ 17C5:389A
cs=0x17c5;eip=0x00389d; 	J(CALL(sub_29b52,0));	// 90489                  call    sub_29B52 ;~ 17C5:389D
cs=0x17c5;eip=0x0038a0; 	T(ADD(sp, 2));	// 90490                  add     sp, 2 ;~ 17C5:38A0
cs=0x17c5;eip=0x0038a3; 	T(NEG(ax));	// 90491                  neg     ax ;~ 17C5:38A3
cs=0x17c5;eip=0x0038a5; 	T(ADD(ax, *(word_48bbe)));	// 90492                  add     ax, word_48BBE ;~ 17C5:38A5
cs=0x17c5;eip=0x0038a9; 	T(CWD);	// 90493                  cwd ;~ 17C5:38A9
cs=0x17c5;eip=0x0038aa; 	X(MOV(*(dw*)(raddr(ds,si+0x219C)), ax));	// 90494                  mov     [si+219Ch], ax ;~ 17C5:38AA
cs=0x17c5;eip=0x0038ae; 	X(MOV(*(dw*)(raddr(ds,si+0x219E)), dx));	// 90495                  mov     [si+219Eh], dx ;~ 17C5:38AE
cs=0x17c5;eip=0x0038b2; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 90496                  inc     [bp+var_2] ;~ 17C5:38B2
loc_29ae5:
	// 5278 
cs=0x17c5;eip=0x0038b5; 	T(ax = word_4a4de;);	// 90499                  mov     ax, word_4A4DE ;~ 17C5:38B5
cs=0x17c5;eip=0x0038b8; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 90500                  cmp     [bp+var_2], ax ;~ 17C5:38B8
cs=0x17c5;eip=0x0038bb; 	J(JGE(loc_29b4c));	// 90501                  jge     short loc_29B4C ;~ 17C5:38BB
cs=0x17c5;eip=0x0038bd; 	T(al = *(byte_4a4e4););	// 90502                  mov     al, byte_4A4E4 ;~ 17C5:38BD
cs=0x17c5;eip=0x0038c0; 	T(SUB(ah, ah));	// 90503                  sub     ah, ah ;~ 17C5:38C0
cs=0x17c5;eip=0x0038c2; 	T(SHL(ax, 1));	// 90504                  shl     ax, 1 ;~ 17C5:38C2
cs=0x17c5;eip=0x0038c4; 	T(ADD(ax, 2));	// 90505                  add     ax, 2 ;~ 17C5:38C4
cs=0x17c5;eip=0x0038c7; 	X(ADD(*(dw*)(&dword_4a46c), ax));	// 90506                  add     word ptr dword_4A46C, ax ;~ 17C5:38C7
cs=0x17c5;eip=0x0038cb; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), 0));	// 90507                  cmp     [bp+var_6], 0 ;~ 17C5:38CB
cs=0x17c5;eip=0x0038cf; 	J(JNZ(loc_29b04));	// 90508                  jnz     short loc_29B04 ;~ 17C5:38CF
cs=0x17c5;eip=0x0038d1; 	J(JMP(loc_29a72));	// 90509                  jmp     loc_29A72 ;~ 17C5:38D1
loc_29b04:
	// 5279 
cs=0x17c5;eip=0x0038d4; 	T(bx = *(dw*)(&dword_4a46c););	// 90513                  mov     bx, word ptr dword_4A46C ;~ 17C5:38D4
cs=0x17c5;eip=0x0038d8; 	X(INC(*(dw*)(&dword_4a46c)));	// 90514                  inc     word ptr dword_4A46C ;~ 17C5:38D8
cs=0x17c5;eip=0x0038dc; 	T(es = *(dw*)(((db*)&dword_4a46c)+2););	// 90515                  mov     es, word ptr dword_4A46C+2 ;~ 17C5:38DC
cs=0x17c5;eip=0x0038e0; 	T(MOV(al, *(raddr(es,bx))));	// 90516                  mov     al, es:[bx] ;~ 17C5:38E0
cs=0x17c5;eip=0x0038e3; 	T(SUB(ah, ah));	// 90517                  sub     ah, ah ;~ 17C5:38E3
cs=0x17c5;eip=0x0038e5; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 90518                  mov     [bp+var_4], ax ;~ 17C5:38E5
cs=0x17c5;eip=0x0038e8; 	T(bx = ax;);	// 90519                  mov     bx, ax ;~ 17C5:38E8
cs=0x17c5;eip=0x0038ea; 	T(MOV(bl, *(raddr(ds,bx-0x79A2))));	// 90520                  mov     bl, [bx-79A2h] ;~ 17C5:38EA
cs=0x17c5;eip=0x0038ee; 	T(SUB(bh, bh));	// 90521                  sub     bh, bh ;~ 17C5:38EE
cs=0x17c5;eip=0x0038f0; 	T(SHL(bx, 1));	// 90522                  shl     bx, 1 ;~ 17C5:38F0
cs=0x17c5;eip=0x0038f2; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x6AB4))));	// 90523                  mov     ax, [bx-6AB4h] ;~ 17C5:38F2
cs=0x17c5;eip=0x0038f6; 	T(cl = *(db*)(&word_52272););	// 90524                  mov     cl, byte ptr ds:word_52272 ;~ 17C5:38F6
cs=0x17c5;eip=0x0038fa; 	T(SAR(ax, cl));	// 90525                  sar     ax, cl ;~ 17C5:38FA
cs=0x17c5;eip=0x0038fc; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90526                  add     ax, [bp+arg_0] ;~ 17C5:38FC
cs=0x17c5;eip=0x0038ff; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 90527                  mov     [bp+var_8], ax ;~ 17C5:38FF
cs=0x17c5;eip=0x003902; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 90528                  mov     bx, [bp+var_4] ;~ 17C5:3902
cs=0x17c5;eip=0x003905; 	T(MOV(bl, *(raddr(ds,bx-0x7802))));	// 90529                  mov     bl, [bx-7802h] ;~ 17C5:3905
cs=0x17c5;eip=0x003909; 	T(SUB(bh, bh));	// 90530                  sub     bh, bh ;~ 17C5:3909
cs=0x17c5;eip=0x00390b; 	T(SHL(bx, 1));	// 90531                  shl     bx, 1 ;~ 17C5:390B
cs=0x17c5;eip=0x00390d; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x6A72))));	// 90532                  mov     ax, [bx-6A72h] ;~ 17C5:390D
cs=0x17c5;eip=0x003911; 	T(SAR(ax, cl));	// 90533                  sar     ax, cl ;~ 17C5:3911
cs=0x17c5;eip=0x003913; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 90534                  add     ax, [bp+arg_2] ;~ 17C5:3913
cs=0x17c5;eip=0x003916; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 90535                  mov     [bp+var_A], ax ;~ 17C5:3916
cs=0x17c5;eip=0x003919; 	J(JMP(loc_29aa7));	// 90536                  jmp     loc_29AA7 ;~ 17C5:3919
loc_29b4c:
	// 5280 
cs=0x17c5;eip=0x00391c; 	X(POP(si));	// 90540                  pop     si ;~ 17C5:391C
cs=0x17c5;eip=0x00391d; 	T(sp = bp;);	// 90541                  mov     sp, bp ;~ 17C5:391D
cs=0x17c5;eip=0x00391f; 	X(POP(bp));	// 90542                  pop     bp ;~ 17C5:391F
cs=0x17c5;eip=0x003920; 	J(RETN(0));	// 90543                  retn ;~ 17C5:3920

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29a72: 	goto loc_29a72;
        case m2c::kloc_29aa7: 	goto loc_29aa7;
        case m2c::kloc_29ae5: 	goto loc_29ae5;
        case m2c::kloc_29b04: 	goto loc_29b04;
        case m2c::kloc_29b4c: 	goto loc_29b4c;
        case m2c::ksub_29a46: 	goto sub_29a46;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29b52(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29b52:
    _begin:
#undef arg_0
#define arg_0 4
	// 90555 arg_0           = word ptr  4 ;~ 17C5:3922
cs=0x17c5;eip=0x003922; 	X(PUSH(bp));	// 90557                  push    bp ;~ 17C5:3922
cs=0x17c5;eip=0x003923; 	T(bp = sp;);	// 90558                  mov     bp, sp ;~ 17C5:3923
cs=0x17c5;eip=0x003925; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90559                  mov     ax, [bp+arg_0] ;~ 17C5:3925
cs=0x17c5;eip=0x003928; 	T(cx = ax;);	// 90560                  mov     cx, ax ;~ 17C5:3928
cs=0x17c5;eip=0x00392a; 	T(SAR(cx, 1));	// 90561                  sar     cx, 1 ;~ 17C5:392A
cs=0x17c5;eip=0x00392c; 	T(SAR(cx, 1));	// 90562                  sar     cx, 1 ;~ 17C5:392C
cs=0x17c5;eip=0x00392e; 	T(SUB(ax, cx));	// 90563                  sub     ax, cx ;~ 17C5:392E
cs=0x17c5;eip=0x003930; 	X(POP(bp));	// 90564                  pop     bp ;~ 17C5:3930
cs=0x17c5;eip=0x003931; 	J(RETN(0));	// 90565                  retn ;~ 17C5:3931

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29b52: 	goto sub_29b52;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29b62(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29b62:
    _begin:
#undef arg_0
#define arg_0 4
	// 90576 arg_0           = word ptr  4 ;~ 17C5:3932
#undef arg_2
#define arg_2 6
	// 90577 arg_2           = word ptr  6 ;~ 17C5:3932
#undef arg_4
#define arg_4 8
	// 90578 arg_4           = word ptr  8 ;~ 17C5:3932
#undef arg_6
#define arg_6 0x0A
	// 90579 arg_6           = word ptr  0Ah ;~ 17C5:3932
#undef arg_8
#define arg_8 0x0C
	// 90580 arg_8           = word ptr  0Ch ;~ 17C5:3932
#undef arg_a
#define arg_a 0x0E
	// 90581 arg_A           = word ptr  0Eh ;~ 17C5:3932
#undef arg_c
#define arg_c 0x10
	// 90582 arg_C           = word ptr  10h ;~ 17C5:3932
#undef arg_e
#define arg_e 0x12
	// 90583 arg_E           = word ptr  12h ;~ 17C5:3932
cs=0x17c5;eip=0x003932; 	X(PUSH(bp));	// 90585                  push    bp ;~ 17C5:3932
cs=0x17c5;eip=0x003933; 	T(bp = sp;);	// 90586                  mov     bp, sp ;~ 17C5:3933
cs=0x17c5;eip=0x003935; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 90587                  push    [bp+arg_0] ;~ 17C5:3935
cs=0x17c5;eip=0x003938; 	J(CALL(sub_29bf0,0));	// 90588                  call    sub_29BF0 ;~ 17C5:3938
cs=0x17c5;eip=0x00393b; 	T(ADD(sp, 2));	// 90590                  add     sp, 2 ;~ 17C5:393B
cs=0x17c5;eip=0x00393e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 90591                  push    [bp+arg_6] ;~ 17C5:393E
cs=0x17c5;eip=0x003941; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 90592                  push    [bp+arg_4] ;~ 17C5:3941
cs=0x17c5;eip=0x003944; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 90593                  push    [bp+arg_2] ;~ 17C5:3944
cs=0x17c5;eip=0x003947; 	J(CALL(sub_29c9c,0));	// 90594                  call    sub_29C9C ;~ 17C5:3947
cs=0x17c5;eip=0x00394a; 	T(ADD(sp, 6));	// 90595                  add     sp, 6 ;~ 17C5:394A
cs=0x17c5;eip=0x00394d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_c))));	// 90596                  push    [bp+arg_C] ;~ 17C5:394D
cs=0x17c5;eip=0x003950; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_a))));	// 90597                  push    [bp+arg_A] ;~ 17C5:3950
cs=0x17c5;eip=0x003953; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_8))));	// 90598                  push    [bp+arg_8] ;~ 17C5:3953
cs=0x17c5;eip=0x003956; 	J(CALL(sub_29cc0,0));	// 90599                  call    sub_29CC0 ;~ 17C5:3956
cs=0x17c5;eip=0x003959; 	T(ADD(sp, 6));	// 90600                  add     sp, 6 ;~ 17C5:3959
cs=0x17c5;eip=0x00395c; 	T(CMP(*(dw*)(raddr(ss,bp+arg_e)), 0));	// 90601                  cmp     [bp+arg_E], 0 ;~ 17C5:395C
cs=0x17c5;eip=0x003960; 	J(JZ(loc_29bc3));	// 90602                  jz      short loc_29BC3 ;~ 17C5:3960
cs=0x17c5;eip=0x003962; 	X(word_4cdb6 = 0;);	// 90604                  mov     ds:word_4CDB6, 0 ;~ 17C5:3962
cs=0x17c5;eip=0x003968; 	T(CMP(word_4f20c, 0));	// 90605                  cmp     ds:word_4F20C, 0 ;~ 17C5:3968
cs=0x17c5;eip=0x00396d; 	J(JNZ(loc_29ba4));	// 90606                  jnz     short loc_29BA4 ;~ 17C5:396D
cs=0x17c5;eip=0x00396f; 	X(byte_4cdb8 = 1;);	// 90607                  mov     ds:byte_4CDB8, 1 ;~ 17C5:396F
loc_29ba4:
	// 5281 
cs=0x17c5;eip=0x003974; 	T(CMP(byte_4cdb8, 0));	// 90610                  cmp     ds:byte_4CDB8, 0 ;~ 17C5:3974
cs=0x17c5;eip=0x003979; 	J(JNZ(loc_29bb0));	// 90611                  jnz     short loc_29BB0 ;~ 17C5:3979
cs=0x17c5;eip=0x00397b; 	J(CALLF(sub_36888,0));	// 90612                  call    sub_36888 ;~ 17C5:397B
loc_29bb0:
	// 5282 
cs=0x17c5;eip=0x003980; 	T(CMP(byte_4db1e, 0));	// 90616                  cmp     ds:byte_4DB1E, 0 ;~ 17C5:3980
cs=0x17c5;eip=0x003985; 	J(JNZ(loc_29bb0));	// 90617                  jnz     short loc_29BB0 ;~ 17C5:3985
cs=0x17c5;eip=0x003987; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 90618                  mov     bx, [bp+arg_0] ;~ 17C5:3987
cs=0x17c5;eip=0x00398a; 	X(PUSH(*(dw*)(raddr(ds,bx+4))));	// 90619                  push    word ptr [bx+4] ;~ 17C5:398A
cs=0x17c5;eip=0x00398d; 	J(CALL(sub_26564,0));	// 90620                  call    sub_26564 ;~ 17C5:398D
cs=0x17c5;eip=0x003990; 	T(ADD(sp, 2));	// 90621                  add     sp, 2 ;~ 17C5:3990
loc_29bc3:
	// 5283 
cs=0x17c5;eip=0x003993; 	X(word_4a4dc = 0;);	// 90624                  mov     word_4A4DC, 0 ;~ 17C5:3993
cs=0x17c5;eip=0x003999; 	T(ax = 0x3000;);	// 90625                  mov     ax, 3000h ;~ 17C5:3999
cs=0x17c5;eip=0x00399c; 	T(CWD);	// 90626                  cwd ;~ 17C5:399C
cs=0x17c5;eip=0x00399d; 	T(cx = word_492f4;);	// 90627                  mov     cx, word_492F4 ;~ 17C5:399D
cs=0x17c5;eip=0x0039a1; 	T(IDIV2(cx));	// 90628                  idiv    cx ;~ 17C5:39A1
cs=0x17c5;eip=0x0039a3; 	X(SUB(word_4a4ea, ax));	// 90629                  sub     word_4A4EA, ax ;~ 17C5:39A3
cs=0x17c5;eip=0x0039a7; 	X(POP(bp));	// 90630                  pop     bp ;~ 17C5:39A7
cs=0x17c5;eip=0x0039a8; 	J(RETN(0));	// 90631                  retn ;~ 17C5:39A8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29ba4: 	goto loc_29ba4;
        case m2c::kloc_29bb0: 	goto loc_29bb0;
        case m2c::kloc_29bc3: 	goto loc_29bc3;
        case m2c::ksub_29b62: 	goto sub_29b62;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group30(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group30:
    _begin:
sub_29bda:
	// 90641 
cs=0x17c5;eip=0x0039aa; 	J(CALLF(sub_36526,0));	// 90643                  call    sub_36526 ;~ 17C5:39AA
cs=0x17c5;eip=0x0039af; 	J(CALLF(sub_49a16,0));	// 90645                  call    far ptr sub_49A16 ;~ 17C5:39AF
seg2623_39b4_proc:
	// 90649 
cs=0x17c5;eip=0x0039b4; 	J(CALLF(sub_49a4d,0));	// 90649                  call    far ptr sub_49A4D ;~ 17C5:39B4
cs=0x17c5;eip=0x0039b9; 	X(byte_4cdb8 = 0;);	// 90651                  mov     ds:byte_4CDB8, 0 ;~ 17C5:39B9
cs=0x17c5;eip=0x0039be; 	J(RETN(0));	// 90652                  retn ;~ 17C5:39BE

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_39b4_proc: 	goto seg2623_39b4_proc;
        case m2c::ksub_29bda: 	goto sub_29bda;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group31(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group31:
    _begin:
sub_29bf0:
	// 90660 
#undef var_4
#define var_4 -4
	// 90662 var_4           = word ptr -4 ;~ 17C5:39C0
#undef var_2
#define var_2 -2
	// 90663 var_2           = word ptr -2 ;~ 17C5:39C0
#undef arg_0
#define arg_0 4
	// 90664 arg_0           = word ptr  4 ;~ 17C5:39C0
cs=0x17c5;eip=0x0039c0; 	X(PUSH(bp));	// 90666                  push    bp ;~ 17C5:39C0
cs=0x17c5;eip=0x0039c1; 	T(bp = sp;);	// 90667                  mov     bp, sp ;~ 17C5:39C1
cs=0x17c5;eip=0x0039c3; 	T(SUB(sp, 4));	// 90668                  sub     sp, 4 ;~ 17C5:39C3
cs=0x17c5;eip=0x0039c6; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 90669                  mov     bx, [bp+arg_0] ;~ 17C5:39C6
cs=0x17c5;eip=0x0039c9; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x14))));	// 90670                  mov     ax, [bx+14h] ;~ 17C5:39C9
cs=0x17c5;eip=0x0039cc; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x12))));	// 90671                  sub     ax, [bx+12h] ;~ 17C5:39CC
cs=0x17c5;eip=0x0039cf; 	T(INC(ax));	// 90672                  inc     ax ;~ 17C5:39CF
cs=0x17c5;eip=0x0039d0; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 90673                  mov     [bp+var_4], ax ;~ 17C5:39D0
cs=0x17c5;eip=0x0039d3; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x10))));	// 90674                  mov     ax, [bx+10h] ;~ 17C5:39D3
cs=0x17c5;eip=0x0039d6; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0E))));	// 90675                  sub     ax, [bx+0Eh] ;~ 17C5:39D6
cs=0x17c5;eip=0x0039d9; 	T(INC(ax));	// 90676                  inc     ax ;~ 17C5:39D9
cs=0x17c5;eip=0x0039da; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 90677                  mov     [bp+var_2], ax ;~ 17C5:39DA
cs=0x17c5;eip=0x0039dd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 90678                  mov     ax, [bp+var_4] ;~ 17C5:39DD
cs=0x17c5;eip=0x0039e0; 	T(INC(ax));	// 90679                  inc     ax ;~ 17C5:39E0
cs=0x17c5;eip=0x0039e1; 	T(SAR(ax, 1));	// 90680                  sar     ax, 1 ;~ 17C5:39E1
cs=0x17c5;eip=0x0039e3; 	T(DEC(ax));	// 90681                  dec     ax ;~ 17C5:39E3
cs=0x17c5;eip=0x0039e4; 	X(word_48bbc = ax;);	// 90682                  mov     word_48BBC, ax ;~ 17C5:39E4
cs=0x17c5;eip=0x0039e7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 90683                  mov     ax, [bp+var_2] ;~ 17C5:39E7
cs=0x17c5;eip=0x0039ea; 	T(INC(ax));	// 90684                  inc     ax ;~ 17C5:39EA
cs=0x17c5;eip=0x0039eb; 	T(SAR(ax, 1));	// 90685                  sar     ax, 1 ;~ 17C5:39EB
cs=0x17c5;eip=0x0039ed; 	T(DEC(ax));	// 90686                  dec     ax ;~ 17C5:39ED
cs=0x17c5;eip=0x0039ee; 	X(*(word_48bbe) = ax;);	// 90687                  mov     word_48BBE, ax ;~ 17C5:39EE
cs=0x17c5;eip=0x0039f1; 	T(CMP(*(dw*)(raddr(ds,bx+0x0E)), 0));	// 90688                  cmp     word ptr [bx+0Eh], 0 ;~ 17C5:39F1
cs=0x17c5;eip=0x0039f5; 	J(JNZ(loc_29c3a));	// 90689                  jnz     short loc_29C3A ;~ 17C5:39F5
cs=0x17c5;eip=0x0039f7; 	T(CMP(*(dw*)(raddr(ds,bx+0x10)), 0x0C7));	// 90691                  cmp     word ptr [bx+10h], 0C7h ;~ 17C5:39F7
cs=0x17c5;eip=0x0039fc; 	J(JNZ(loc_29c34));	// 90692                  jnz     short loc_29C34 ;~ 17C5:39FC
cs=0x17c5;eip=0x0039fe; 	T(ax = 0x64;);	// 90693                  mov     ax, 64h ; 'd' ;~ 17C5:39FE
cs=0x17c5;eip=0x003a01; 	J(JMP(loc_29c37));	// 90694                  jmp     short loc_29C37 ;~ 17C5:3A01
loc_29c34:
	// 5284 
cs=0x17c5;eip=0x003a04; 	T(ax = 0x38;);	// 90700                  mov     ax, 38h ; '8' ;~ 17C5:3A04
loc_29c37:
	// 5285 
cs=0x17c5;eip=0x003a07; 	X(*(word_48bbe) = ax;);	// 90703                  mov     word_48BBE, ax ;~ 17C5:3A07
loc_29c3a:
	// 5286 
cs=0x17c5;eip=0x003a0a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 90706                  mov     ax, [bp+var_4] ;~ 17C5:3A0A
cs=0x17c5;eip=0x003a0d; 	T(DEC(ax));	// 90707                  dec     ax ;~ 17C5:3A0D
cs=0x17c5;eip=0x003a0e; 	X(PUSH(ax));	// 90708                  push    ax ;~ 17C5:3A0E
cs=0x17c5;eip=0x003a0f; 	J(CALLF(sub_49ae3,0));	// 90709                  call    far ptr sub_49AE3 ;~ 17C5:3A0F
seg2623_3a14_proc:
	// 90713 
cs=0x17c5;eip=0x003a14; 	T(ADD(sp, 2));	// 90713                  add     sp, 2 ;~ 17C5:3A14
cs=0x17c5;eip=0x003a17; 	T(MOV(bx, *(dw*)(raddr(ss,bp+4))));	// 90714                  mov     bx, [bp+4] ;~ 17C5:3A17
cs=0x17c5;eip=0x003a1a; 	X(PUSH(*(dw*)(raddr(ds,bx+0x0E))));	// 90715                  push    word ptr [bx+0Eh] ;~ 17C5:3A1A
cs=0x17c5;eip=0x003a1d; 	X(PUSH(*(dw*)(raddr(ds,bx+0x12))));	// 90716                  push    word ptr [bx+12h] ;~ 17C5:3A1D
cs=0x17c5;eip=0x003a20; 	J(CALLF(sub_49ad4,0));	// 90717                  call    far ptr sub_49AD4 ;~ 17C5:3A20
cs=0x17c5;eip=0x003a25; 	T(ADD(sp, 4));	// 90719                  add     sp, 4 ;~ 17C5:3A25
cs=0x17c5;eip=0x003a28; 	X(PUSH(ax));	// 90720                  push    ax ;~ 17C5:3A28
cs=0x17c5;eip=0x003a29; 	J(CALLF(sub_49a20,0));	// 90721                  call    far ptr sub_49A20 ;~ 17C5:3A29
cs=0x17c5;eip=0x003a2e; 	T(ADD(sp, 2));	// 90723                  add     sp, 2 ;~ 17C5:3A2E
cs=0x17c5;eip=0x003a31; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 90724                  mov     ax, [bp-4] ;~ 17C5:3A31
cs=0x17c5;eip=0x003a34; 	T(DEC(ax));	// 90725                  dec     ax ;~ 17C5:3A34
cs=0x17c5;eip=0x003a35; 	X(word_4d787 = ax;);	// 90726                  mov     ds:word_4D787, ax ;~ 17C5:3A35
cs=0x17c5;eip=0x003a38; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 90727                  mov     ax, [bp-2] ;~ 17C5:3A38
cs=0x17c5;eip=0x003a3b; 	T(DEC(ax));	// 90728                  dec     ax ;~ 17C5:3A3B
cs=0x17c5;eip=0x003a3c; 	X(word_4d789 = ax;);	// 90729                  mov     ds:word_4D789, ax ;~ 17C5:3A3C
cs=0x17c5;eip=0x003a3f; 	X(word_528cc = 0x192C;);	// 90730                  mov     ds:word_528CC, 192Ch ;~ 17C5:3A3F
cs=0x17c5;eip=0x003a45; 	X(word_528d2 = 0x194C;);	// 90731                  mov     ds:word_528D2, 194Ch ;~ 17C5:3A45
cs=0x17c5;eip=0x003a4b; 	T(CMP(byte_4de54, 0));	// 90732                  cmp     ds:byte_4DE54, 0 ;~ 17C5:3A4B
cs=0x17c5;eip=0x003a50; 	J(JZ(loc_29c8c));	// 90733                  jz      short loc_29C8C ;~ 17C5:3A50
cs=0x17c5;eip=0x003a52; 	X(ADD(word_528cc, 0x10));	// 90734                  add     ds:word_528CC, 10h ;~ 17C5:3A52
cs=0x17c5;eip=0x003a57; 	X(ADD(word_528d2, 0x10));	// 90735                  add     ds:word_528D2, 10h ;~ 17C5:3A57
loc_29c8c:
	// 5287 
cs=0x17c5;eip=0x003a5c; 	T(CMP(*(db*)(&word_492f2), 0));	// 90738                  cmp     byte ptr word_492F2, 0 ;~ 17C5:3A5C
cs=0x17c5;eip=0x003a61; 	J(JZ(loc_29c98));	// 90739                  jz      short loc_29C98 ;~ 17C5:3A61
cs=0x17c5;eip=0x003a63; 	X(ADD(word_528d2, 0x20));	// 90740                  add     ds:word_528D2, 20h ; ' ' ;~ 17C5:3A63
loc_29c98:
	// 5288 
cs=0x17c5;eip=0x003a68; 	T(sp = bp;);	// 90743                  mov     sp, bp ;~ 17C5:3A68
cs=0x17c5;eip=0x003a6a; 	X(POP(bp));	// 90744                  pop     bp ;~ 17C5:3A6A
cs=0x17c5;eip=0x003a6b; 	J(RETN(0));	// 90745                  retn ;~ 17C5:3A6B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29c34: 	goto loc_29c34;
        case m2c::kloc_29c37: 	goto loc_29c37;
        case m2c::kloc_29c3a: 	goto loc_29c3a;
        case m2c::kloc_29c8c: 	goto loc_29c8c;
        case m2c::kloc_29c98: 	goto loc_29c98;
        case m2c::kseg2623_3a14_proc: 	goto seg2623_3a14_proc;
        case m2c::ksub_29bf0: 	goto sub_29bf0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29c9c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29c9c:
    _begin:
#undef arg_0
#define arg_0 4
	// 90753 arg_0           = word ptr  4 ;~ 17C5:3A6C
#undef arg_2
#define arg_2 6
	// 90754 arg_2           = word ptr  6 ;~ 17C5:3A6C
#undef arg_4
#define arg_4 8
	// 90755 arg_4           = word ptr  8 ;~ 17C5:3A6C
cs=0x17c5;eip=0x003a6c; 	X(PUSH(bp));	// 90757                  push    bp ;~ 17C5:3A6C
cs=0x17c5;eip=0x003a6d; 	T(bp = sp;);	// 90758                  mov     bp, sp ;~ 17C5:3A6D
cs=0x17c5;eip=0x003a6f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 90759                  mov     ax, [bp+arg_4] ;~ 17C5:3A6F
cs=0x17c5;eip=0x003a72; 	T(NEG(ax));	// 90760                  neg     ax ;~ 17C5:3A72
cs=0x17c5;eip=0x003a74; 	X(PUSH(ax));	// 90761                  push    ax ;~ 17C5:3A74
cs=0x17c5;eip=0x003a75; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 90762                  mov     ax, [bp+arg_2] ;~ 17C5:3A75
cs=0x17c5;eip=0x003a78; 	T(NEG(ax));	// 90763                  neg     ax ;~ 17C5:3A78
cs=0x17c5;eip=0x003a7a; 	X(PUSH(ax));	// 90764                  push    ax ;~ 17C5:3A7A
cs=0x17c5;eip=0x003a7b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90765                  mov     ax, [bp+arg_0] ;~ 17C5:3A7B
cs=0x17c5;eip=0x003a7e; 	T(NEG(ax));	// 90766                  neg     ax ;~ 17C5:3A7E
cs=0x17c5;eip=0x003a80; 	X(PUSH(ax));	// 90767                  push    ax ;~ 17C5:3A80
cs=0x17c5;eip=0x003a81; 	T(ax = 0x19C6;);	// 90768                  mov     ax, 19C6h ;~ 17C5:3A81
cs=0x17c5;eip=0x003a84; 	X(PUSH(ax));	// 90769                  push    ax ;~ 17C5:3A84
cs=0x17c5;eip=0x003a85; 	J(CALLF(sub_36dde,0));	// 90770                  call    sub_36DDE ;~ 17C5:3A85
cs=0x17c5;eip=0x003a8a; 	T(ADD(sp, 8));	// 90771                  add     sp, 8 ;~ 17C5:3A8A
cs=0x17c5;eip=0x003a8d; 	X(POP(bp));	// 90772                  pop     bp ;~ 17C5:3A8D
cs=0x17c5;eip=0x003a8e; 	J(RETN(0));	// 90773                  retn ;~ 17C5:3A8E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29c9c: 	goto sub_29c9c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29cc0(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29cc0:
    _begin:
#undef arg_0
#define arg_0 4
	// 90786 arg_0           = word ptr  4 ;~ 17C5:3A90
#undef arg_2
#define arg_2 6
	// 90787 arg_2           = word ptr  6 ;~ 17C5:3A90
#undef arg_4
#define arg_4 8
	// 90788 arg_4           = word ptr  8 ;~ 17C5:3A90
cs=0x17c5;eip=0x003a90; 	X(PUSH(bp));	// 90790                  push    bp ;~ 17C5:3A90
cs=0x17c5;eip=0x003a91; 	T(bp = sp;);	// 90791                  mov     bp, sp ;~ 17C5:3A91
cs=0x17c5;eip=0x003a93; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 90792                  mov     ax, [bp+arg_0] ;~ 17C5:3A93
cs=0x17c5;eip=0x003a96; 	X(word_4a494 = ax;);	// 90793                  mov     word_4A494, ax ;~ 17C5:3A96
cs=0x17c5;eip=0x003a99; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 90794                  mov     ax, [bp+arg_2] ;~ 17C5:3A99
cs=0x17c5;eip=0x003a9c; 	X(word_4a496 = ax;);	// 90795                  mov     word_4A496, ax ;~ 17C5:3A9C
cs=0x17c5;eip=0x003a9f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 90796                  mov     ax, [bp+arg_4] ;~ 17C5:3A9F
cs=0x17c5;eip=0x003aa2; 	X(word_4a498 = ax;);	// 90797                  mov     word_4A498, ax ;~ 17C5:3AA2
cs=0x17c5;eip=0x003aa5; 	X(POP(bp));	// 90798                  pop     bp ;~ 17C5:3AA5
cs=0x17c5;eip=0x003aa6; 	J(RETN(0));	// 90799                  retn ;~ 17C5:3AA6

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29cc0: 	goto sub_29cc0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_3aa8_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_3aa8_proc:
    _begin:
cs=0x17c5;eip=0x003aa8; 	T(CMP(*(byte_4a4e4), 0));	// 90805                  cmp     byte_4A4E4, 0 ;~ 17C5:3AA8
cs=0x17c5;eip=0x003aad; 	J(JZ(loc_29d08));	// 90806                  jz      short loc_29D08 ;~ 17C5:3AAD
cs=0x17c5;eip=0x003aaf; 	T(bx = *(dw*)(&dword_4a46c););	// 90807                  mov     bx, word ptr dword_4A46C ;~ 17C5:3AAF
cs=0x17c5;eip=0x003ab3; 	X(ADD(*(dw*)(&dword_4a46c), 4));	// 90808                  add     word ptr dword_4A46C, 4 ;~ 17C5:3AB3
cs=0x17c5;eip=0x003ab8; 	T(es = *(dw*)(((db*)&dword_4a46c)+2););	// 90809                  mov     es, word ptr dword_4A46C+2 ;~ 17C5:3AB8
cs=0x17c5;eip=0x003abc; 	T(MOV(ax, *(dw*)(raddr(es,bx))));	// 90811                  mov     ax, es:[bx] ;~ 17C5:3ABC
cs=0x17c5;eip=0x003abf; 	T(MOV(dx, *(dw*)(raddr(es,bx+2))));	// 90812                  mov     dx, es:[bx+2] ;~ 17C5:3ABF
cs=0x17c5;eip=0x003ac3; 	T(AND(ax, word_4a4e6));	// 90813                  and     ax, word_4A4E6 ;~ 17C5:3AC3
cs=0x17c5;eip=0x003ac7; 	T(AND(dx, word_4a4e8));	// 90814                  and     dx, word_4A4E8 ;~ 17C5:3AC7
cs=0x17c5;eip=0x003acb; 	T(OR(dx, ax));	// 90815                  or      dx, ax ;~ 17C5:3ACB
cs=0x17c5;eip=0x003acd; 	J(JZ(loc_29d04));	// 90816                  jz      short loc_29D04 ;~ 17C5:3ACD
cs=0x17c5;eip=0x003acf; 	T(ax = 1;);	// 90817                  mov     ax, 1 ;~ 17C5:3ACF
cs=0x17c5;eip=0x003ad2; 	J(RETN(0));	// 90818                  retn ;~ 17C5:3AD2
loc_29d04:
	// 5289 
cs=0x17c5;eip=0x003ad4; 	T(SUB(ax, ax));	// 90824                  sub     ax, ax ;~ 17C5:3AD4
cs=0x17c5;eip=0x003ad6; 	J(RETN(0));	// 90825                  retn ;~ 17C5:3AD6
loc_29d08:
	// 5290 
cs=0x17c5;eip=0x003ad8; 	T(bx = *(dw*)(&dword_4a46c););	// 90831                  mov     bx, word ptr dword_4A46C ;~ 17C5:3AD8
cs=0x17c5;eip=0x003adc; 	X(ADD(*(dw*)(&dword_4a46c), 2));	// 90832                  add     word ptr dword_4A46C, 2 ;~ 17C5:3ADC
cs=0x17c5;eip=0x003ae1; 	T(es = *(dw*)(((db*)&dword_4a46c)+2););	// 90833                  mov     es, word ptr dword_4A46C+2 ;~ 17C5:3AE1
cs=0x17c5;eip=0x003ae5; 	T(MOV(ax, *(dw*)(raddr(es,bx))));	// 90834                  mov     ax, es:[bx] ;~ 17C5:3AE5
cs=0x17c5;eip=0x003ae8; 	T(AND(ax, word_4a4e6));	// 90835                  and     ax, word_4A4E6 ;~ 17C5:3AE8
cs=0x17c5;eip=0x003aec; 	J(RETN(0));	// 90836                  retn ;~ 17C5:3AEC

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29d04: 	goto loc_29d04;
        case m2c::kloc_29d08: 	goto loc_29d08;
        case m2c::kseg2623_3aa8_proc: 	goto seg2623_3aa8_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29d1e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29d1e:
    _begin:
cs=0x17c5;eip=0x003aee; 	T(ax = ds;);	// 90846                  mov     ax, ds ;~ 17C5:3AEE
cs=0x17c5;eip=0x003af0; 	T(es = ax;);	// 90847                  mov     es, ax ;~ 17C5:3AF0
cs=0x17c5;eip=0x003af2; 	T(bx = 0x10;);	// 90849                  mov     bx, 10h ;~ 17C5:3AF2
cs=0x17c5;eip=0x003af5; 	T(cx = 0x50;);	// 90850                  mov     cx, 50h ; 'P' ;~ 17C5:3AF5
cs=0x17c5;eip=0x003af8; 	T(dx = 0x43B6;);	// 90851                  mov     dx, 43B6h ;~ 17C5:3AF8
cs=0x17c5;eip=0x003afb; 	T(ax = 0x1012;);	// 90852                  mov     ax, 1012h ;~ 17C5:3AFB
cs=0x17c5;eip=0x003afe; 	S(_INT(0x10));	// 90853                  int     10h             ; - VIDEO - SET BLOCK OF DAC REGISTERS (EGA, VGA/MCGA) ;~ 17C5:3AFE
cs=0x17c5;eip=0x003b00; 	T(CMP(byte_4a3c7, 2));	// 90857                  cmp     byte_4A3C7, 2 ;~ 17C5:3B00
cs=0x17c5;eip=0x003b05; 	J(JZ(loc_29d46));	// 90858                  jz      short loc_29D46 ;~ 17C5:3B05
cs=0x17c5;eip=0x003b07; 	T(cx = 0x30;);	// 90859                  mov     cx, 30h ; '0' ;~ 17C5:3B07
cs=0x17c5;eip=0x003b0a; 	X(PUSH(si));	// 90860                  push    si ;~ 17C5:3B0A
cs=0x17c5;eip=0x003b0b; 	X(PUSH(di));	// 90861                  push    di ;~ 17C5:3B0B
cs=0x17c5;eip=0x003b0c; 	T(si = 0x4866;);	// 90862                  mov     si, 4866h ;~ 17C5:3B0C
cs=0x17c5;eip=0x003b0f; 	T(di = 0x44D6;);	// 90863                  mov     di, 44D6h ;~ 17C5:3B0F
	// 90864                  rep movsb ;~ 17C5:3B12
cs=0x17c5;eip=0x003b12; 	X(	REP MOVSB);	// 90864                  rep movsb ;~ 17C5:3B12
cs=0x17c5;eip=0x003b14; 	X(POP(di));	// 90865                  pop     di ;~ 17C5:3B14
cs=0x17c5;eip=0x003b15; 	X(POP(si));	// 90866                  pop     si ;~ 17C5:3B15
loc_29d46:
	// 5291 
cs=0x17c5;eip=0x003b16; 	T(dx = 0x44A6;);	// 90869                  mov     dx, 44A6h ;~ 17C5:3B16
cs=0x17c5;eip=0x003b19; 	T(CMP(word_492ec, 0));	// 90870                  cmp     word_492EC, 0 ;~ 17C5:3B19
cs=0x17c5;eip=0x003b1e; 	J(JZ(loc_29d53));	// 90871                  jz      short loc_29D53 ;~ 17C5:3B1E
cs=0x17c5;eip=0x003b20; 	T(dx = 0x4686;);	// 90872                  mov     dx, 4686h ;~ 17C5:3B20
loc_29d53:
	// 5292 
cs=0x17c5;eip=0x003b23; 	T(bx = 0x60;);	// 90875                  mov     bx, 60h ; '`' ;~ 17C5:3B23
cs=0x17c5;eip=0x003b26; 	T(cx = 0x0A0;);	// 90876                  mov     cx, 0A0h ;~ 17C5:3B26
cs=0x17c5;eip=0x003b29; 	T(ax = 0x1012;);	// 90877                  mov     ax, 1012h ;~ 17C5:3B29
cs=0x17c5;eip=0x003b2c; 	S(_INT(0x10));	// 90878                  int     10h             ; - VIDEO - SET BLOCK OF DAC REGISTERS (EGA, VGA/MCGA) ;~ 17C5:3B2C
cs=0x17c5;eip=0x003b2e; 	J(RETN(0));	// 90882                  retn ;~ 17C5:3B2E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29d46: 	goto loc_29d46;
        case m2c::kloc_29d53: 	goto loc_29d53;
        case m2c::ksub_29d1e: 	goto sub_29d1e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29d5f(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29d5f:
    _begin:
cs=0x17c5;eip=0x003b2f; 	T(bx = sp;);	// 90891                  mov     bx, sp ;~ 17C5:3B2F
cs=0x17c5;eip=0x003b31; 	T(MOV(ax, *(dw*)(raddr(ss,bx+2))));	// 90892                  mov     ax, ss:[bx+2] ;~ 17C5:3B31
cs=0x17c5;eip=0x003b35; 	X(IMUL1_2(*(dw*)(raddr(ss,bx+4))));	// 90893                  imul    word ptr ss:[bx+4] ;~ 17C5:3B35
cs=0x17c5;eip=0x003b39; 	T(SHL(ax, 1));	// 90894                  shl     ax, 1 ;~ 17C5:3B39
cs=0x17c5;eip=0x003b3b; 	T(RCL(dx, 1));	// 90895                  rcl     dx, 1 ;~ 17C5:3B3B
cs=0x17c5;eip=0x003b3d; 	T(SHL(ax, 1));	// 90896                  shl     ax, 1 ;~ 17C5:3B3D
cs=0x17c5;eip=0x003b3f; 	T(ADC(dx, 0));	// 90897                  adc     dx, 0 ;~ 17C5:3B3F
cs=0x17c5;eip=0x003b42; 	T(ax = dx;);	// 90898                  mov     ax, dx ;~ 17C5:3B42
cs=0x17c5;eip=0x003b44; 	J(RETN(0));	// 90899                  retn ;~ 17C5:3B44

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29d5f: 	goto sub_29d5f;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_3b45_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_3b45_proc:
    _begin:
cs=0x17c5;eip=0x003b45; 	T(bx = sp;);	// 90903                  mov     bx, sp ;~ 17C5:3B45
cs=0x17c5;eip=0x003b47; 	T(MOV(ax, *(dw*)(raddr(ss,bx+2))));	// 90904                  mov     ax, ss:[bx+2] ;~ 17C5:3B47
cs=0x17c5;eip=0x003b4b; 	X(IMUL1_2(*(dw*)(raddr(ss,bx+4))));	// 90905                  imul    word ptr ss:[bx+4] ;~ 17C5:3B4B
cs=0x17c5;eip=0x003b4f; 	T(SHL(ax, 1));	// 90906                  shl     ax, 1 ;~ 17C5:3B4F
cs=0x17c5;eip=0x003b51; 	T(RCL(dx, 1));	// 90907                  rcl     dx, 1 ;~ 17C5:3B51
cs=0x17c5;eip=0x003b53; 	J(RETN(0));	// 90908                  retn ;~ 17C5:3B53
ret_17c5_3b54:
	// 5293 
cs=0x17c5;eip=0x003b54; 	T(bx = sp;);	// 90910                  mov     bx, sp ;~ 17C5:3B54
cs=0x17c5;eip=0x003b56; 	T(MOV(ax, *(dw*)(raddr(ss,bx+2))));	// 90911                  mov     ax, ss:[bx+2] ;~ 17C5:3B56
cs=0x17c5;eip=0x003b5a; 	T(CWD);	// 90912                  cwd ;~ 17C5:3B5A
cs=0x17c5;eip=0x003b5b; 	T(dl = ah;);	// 90913                  mov     dl, ah ;~ 17C5:3B5B
cs=0x17c5;eip=0x003b5d; 	T(ah = al;);	// 90914                  mov     ah, al ;~ 17C5:3B5D
cs=0x17c5;eip=0x003b5f; 	T(SUB(al, al));	// 90915                  sub     al, al ;~ 17C5:3B5F
cs=0x17c5;eip=0x003b61; 	T(MOV(bx, *(dw*)(raddr(ss,bx+4))));	// 90916                  mov     bx, ss:[bx+4] ;~ 17C5:3B61
cs=0x17c5;eip=0x003b65; 	T(OR(bx, bx));	// 90917                  or      bx, bx ;~ 17C5:3B65
cs=0x17c5;eip=0x003b67; 	J(JLE(loc_29dac));	// 90918                  jle     short loc_29DAC ;~ 17C5:3B67
cs=0x17c5;eip=0x003b69; 	T(cx = dx;);	// 90919                  mov     cx, dx ;~ 17C5:3B69
cs=0x17c5;eip=0x003b6b; 	T(OR(cx, cx));	// 90920                  or      cx, cx ;~ 17C5:3B6B
cs=0x17c5;eip=0x003b6d; 	J(JNS(loc_29da1));	// 90921                  jns     short loc_29DA1 ;~ 17C5:3B6D
cs=0x17c5;eip=0x003b6f; 	T(NEG(cx));	// 90922                  neg     cx ;~ 17C5:3B6F
loc_29da1:
	// 5294 
cs=0x17c5;eip=0x003b71; 	T(SHR(bx, 1));	// 90925                  shr     bx, 1 ;~ 17C5:3B71
cs=0x17c5;eip=0x003b73; 	T(CMP(cx, bx));	// 90926                  cmp     cx, bx ;~ 17C5:3B73
cs=0x17c5;eip=0x003b75; 	J(JNC(loc_29dac));	// 90927                  jnb     short loc_29DAC ;~ 17C5:3B75
cs=0x17c5;eip=0x003b77; 	T(RCL(bx, 1));	// 90928                  rcl     bx, 1 ;~ 17C5:3B77
cs=0x17c5;eip=0x003b79; 	T(IDIV2(bx));	// 90929                  idiv    bx ;~ 17C5:3B79
cs=0x17c5;eip=0x003b7b; 	J(RETN(0));	// 90930                  retn ;~ 17C5:3B7B
loc_29dac:
	// 5295 
cs=0x17c5;eip=0x003b7c; 	T(ax = 0x7FFF;);	// 90935                  mov     ax, 7FFFh ;~ 17C5:3B7C
cs=0x17c5;eip=0x003b7f; 	T(OR(dx, dx));	// 90936                  or      dx, dx ;~ 17C5:3B7F
cs=0x17c5;eip=0x003b81; 	J(JNS(locret_29db5));	// 90937                  jns     short locret_29DB5 ;~ 17C5:3B81
cs=0x17c5;eip=0x003b83; 	T(NEG(ax));	// 90938                  neg     ax ;~ 17C5:3B83
locret_29db5:
	// 5296 
cs=0x17c5;eip=0x003b85; 	J(RETN(0));	// 90941                  retn ;~ 17C5:3B85

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29da1: 	goto loc_29da1;
        case m2c::kloc_29dac: 	goto loc_29dac;
        case m2c::klocret_29db5: 	goto locret_29db5;
        case m2c::kret_17c5_3b54: 	goto ret_17c5_3b54;
        case m2c::kseg2623_3b45_proc: 	goto seg2623_3b45_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29db6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29db6:
    _begin:
cs=0x17c5;eip=0x003b86; 	T(bx = sp;);	// 90948                  mov     bx, sp ;~ 17C5:3B86
cs=0x17c5;eip=0x003b88; 	T(MOV(bx, *(dw*)(raddr(ss,bx+2))));	// 90949                  mov     bx, ss:[bx+2] ;~ 17C5:3B88
cs=0x17c5;eip=0x003b8c; 	T(ADD(bx, 0x4000));	// 90950                  add     bx, 4000h ;~ 17C5:3B8C
cs=0x17c5;eip=0x003b90; 	J(CALL(sub_29dd2,0));	// 90951                  call    sub_29DD2 ;~ 17C5:3B90
cs=0x17c5;eip=0x003b93; 	T(ax = bx;);	// 90952                  mov     ax, bx ;~ 17C5:3B93
cs=0x17c5;eip=0x003b95; 	J(RETN(0));	// 90953                  retn ;~ 17C5:3B95

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29db6: 	goto sub_29db6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29dc6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29dc6:
    _begin:
cs=0x17c5;eip=0x003b96; 	T(bx = sp;);	// 90962                  mov     bx, sp ;~ 17C5:3B96
cs=0x17c5;eip=0x003b98; 	T(MOV(bx, *(dw*)(raddr(ss,bx+2))));	// 90963                  mov     bx, ss:[bx+2] ;~ 17C5:3B98
cs=0x17c5;eip=0x003b9c; 	J(CALL(sub_29dd2,0));	// 90964                  call    sub_29DD2 ;~ 17C5:3B9C
cs=0x17c5;eip=0x003b9f; 	T(ax = bx;);	// 90965                  mov     ax, bx ;~ 17C5:3B9F
cs=0x17c5;eip=0x003ba1; 	J(RETN(0));	// 90966                  retn ;~ 17C5:3BA1

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29dc6: 	goto sub_29dc6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29dd2(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29dd2:
    _begin:
cs=0x17c5;eip=0x003ba2; 	T(dl = bl;);	// 90975                  mov     dl, bl ;~ 17C5:3BA2
cs=0x17c5;eip=0x003ba4; 	T(SUB(dh, dh));	// 90976                  sub     dh, dh ;~ 17C5:3BA4
cs=0x17c5;eip=0x003ba6; 	T(bl = bh;);	// 90977                  mov     bl, bh ;~ 17C5:3BA6
cs=0x17c5;eip=0x003ba8; 	T(bh = dh;);	// 90978                  mov     bh, dh ;~ 17C5:3BA8
cs=0x17c5;eip=0x003baa; 	T(SHL(bx, 1));	// 90979                  shl     bx, 1 ;~ 17C5:3BAA
cs=0x17c5;eip=0x003bac; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x4898))));	// 90980                  mov     ax, [bx+4898h] ;~ 17C5:3BAC
cs=0x17c5;eip=0x003bb0; 	T(MOV(bx, *(dw*)(raddr(ds,bx+0x4896))));	// 90981                  mov     bx, [bx+4896h] ;~ 17C5:3BB0
cs=0x17c5;eip=0x003bb4; 	T(SUB(ax, bx));	// 90982                  sub     ax, bx ;~ 17C5:3BB4
cs=0x17c5;eip=0x003bb6; 	T(IMUL1_2(dx));	// 90983                  imul    dx ;~ 17C5:3BB6
cs=0x17c5;eip=0x003bb8; 	T(dh = dl;);	// 90984                  mov     dh, dl ;~ 17C5:3BB8
cs=0x17c5;eip=0x003bba; 	T(dl = ah;);	// 90985                  mov     dl, ah ;~ 17C5:3BBA
cs=0x17c5;eip=0x003bbc; 	T(SHL(al, 1));	// 90986                  shl     al, 1 ;~ 17C5:3BBC
cs=0x17c5;eip=0x003bbe; 	T(ADC(bx, dx));	// 90987                  adc     bx, dx ;~ 17C5:3BBE
cs=0x17c5;eip=0x003bc0; 	J(RETN(0));	// 90988                  retn ;~ 17C5:3BC0

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29dd2: 	goto sub_29dd2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29df1(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29df1:
    _begin:
cs=0x17c5;eip=0x003bc1; 	J(CALL(sub_29dfd,0));	// 90997                  call    sub_29DFD ;~ 17C5:3BC1
cs=0x17c5;eip=0x003bc4; 	J(RETF(0));	// 90998                  retf ;~ 17C5:3BC4

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29df1: 	goto sub_29df1;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29df5(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29df5:
    _begin:
cs=0x17c5;eip=0x003bc5; 	J(CALL(sub_29df9,0));	// 91007                  call    sub_29DF9 ;~ 17C5:3BC5
cs=0x17c5;eip=0x003bc8; 	J(RETF(0));	// 91008                  retf ;~ 17C5:3BC8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29df5: 	goto sub_29df5;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group32(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group32:
    _begin:
sub_29df9:
	// 91015 
cs=0x17c5;eip=0x003bc9; 	T(ADD(bx, 0x4000));	// 91016                  add     bx, 4000h ;~ 17C5:3BC9
sub_29dfd:
	// 91023 
cs=0x17c5;eip=0x003bcd; 	T(dl = bl;);	// 91024                  mov     dl, bl ;~ 17C5:3BCD
cs=0x17c5;eip=0x003bcf; 	T(SUB(dh, dh));	// 91025                  sub     dh, dh ;~ 17C5:3BCF
cs=0x17c5;eip=0x003bd1; 	T(bl = bh;);	// 91026                  mov     bl, bh ;~ 17C5:3BD1
cs=0x17c5;eip=0x003bd3; 	T(bh = dh;);	// 91027                  mov     bh, dh ;~ 17C5:3BD3
cs=0x17c5;eip=0x003bd5; 	T(SHL(bx, 1));	// 91028                  shl     bx, 1 ;~ 17C5:3BD5
cs=0x17c5;eip=0x003bd7; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x4A9A))));	// 91029                  mov     ax, [bx+4A9Ah] ;~ 17C5:3BD7
cs=0x17c5;eip=0x003bdb; 	T(MOV(bx, *(dw*)(raddr(ds,bx+0x4A98))));	// 91030                  mov     bx, [bx+4A98h] ;~ 17C5:3BDB
cs=0x17c5;eip=0x003bdf; 	T(SUB(ax, bx));	// 91031                  sub     ax, bx ;~ 17C5:3BDF
cs=0x17c5;eip=0x003be1; 	T(IMUL1_2(dx));	// 91032                  imul    dx ;~ 17C5:3BE1
cs=0x17c5;eip=0x003be3; 	T(dh = dl;);	// 91033                  mov     dh, dl ;~ 17C5:3BE3
cs=0x17c5;eip=0x003be5; 	T(dl = ah;);	// 91034                  mov     dl, ah ;~ 17C5:3BE5
cs=0x17c5;eip=0x003be7; 	T(SHL(al, 1));	// 91035                  shl     al, 1 ;~ 17C5:3BE7
cs=0x17c5;eip=0x003be9; 	T(ADC(bx, dx));	// 91036                  adc     bx, dx ;~ 17C5:3BE9
cs=0x17c5;eip=0x003beb; 	J(RETN(0));	// 91037                  retn ;~ 17C5:3BEB

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29df9: 	goto sub_29df9;
        case m2c::ksub_29dfd: 	goto sub_29dfd;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29e1c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29e1c:
    _begin:
cs=0x17c5;eip=0x003bec; 	X(PUSH(si));	// 91046                  push    si ;~ 17C5:3BEC
cs=0x17c5;eip=0x003bed; 	X(PUSH(di));	// 91047                  push    di ;~ 17C5:3BED
cs=0x17c5;eip=0x003bee; 	X(PUSH(dx));	// 91048                  push    dx ;~ 17C5:3BEE
cs=0x17c5;eip=0x003bef; 	X(PUSH(ds));	// 91049                  push    ds ;~ 17C5:3BEF
cs=0x17c5;eip=0x003bf0; 	T(si = 0x6C;);	// 91050                  mov     si, 6Ch ; 'l' ;~ 17C5:3BF0
cs=0x17c5;eip=0x003bf3; 	J(CALL(sub_29e50,0));	// 91051                  call    sub_29E50 ;~ 17C5:3BF3
cs=0x17c5;eip=0x003bf6; 	X(word_4db1b = bx;);	// 91052                  mov     ds:word_4DB1B, bx ;~ 17C5:3BF6
cs=0x17c5;eip=0x003bfa; 	X(word_4db19 = ax;);	// 91053                  mov     ds:word_4DB19, ax ;~ 17C5:3BFA
cs=0x17c5;eip=0x003bfd; 	T(ax = seg_offset(seg2623););	// 91054                  mov     ax, seg seg2623 ;~ 17C5:3BFD
cs=0x17c5;eip=0x003c00; 	T(dx = 0x3C2C;);	// 91055                  mov     dx, 3C2Ch ;~ 17C5:3C00
cs=0x17c5;eip=0x003c03; 	T(ds = ax;);	// 91056                  mov     ds, ax ;~ 17C5:3C03
cs=0x17c5;eip=0x003c05; 	T(ax = 0x251B;);	// 91058                  mov     ax, 251Bh ;~ 17C5:3C05
cs=0x17c5;eip=0x003c08; 	S(_INT(0x21));	// 91059                  int     21h             ; DOS - SET INTERRUPT VECTOR ;~ 17C5:3C08
cs=0x17c5;eip=0x003c0a; 	X(POP(ds));	// 91062                  pop     ds ;~ 17C5:3C0A
cs=0x17c5;eip=0x003c0b; 	X(POP(dx));	// 91064                  pop     dx ;~ 17C5:3C0B
cs=0x17c5;eip=0x003c0c; 	X(POP(di));	// 91065                  pop     di ;~ 17C5:3C0C
cs=0x17c5;eip=0x003c0d; 	X(POP(si));	// 91066                  pop     si ;~ 17C5:3C0D
cs=0x17c5;eip=0x003c0e; 	J(RETN(0));	// 91067                  retn ;~ 17C5:3C0E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29e1c: 	goto sub_29e1c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29e3f(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29e3f:
    _begin:
cs=0x17c5;eip=0x003c0f; 	X(PUSH(ds));	// 91075                  push    ds ;~ 17C5:3C0F
cs=0x17c5;eip=0x003c10; 	T(ax = word_4db19;);	// 91076                  mov     ax, ds:word_4DB19 ;~ 17C5:3C10
cs=0x17c5;eip=0x003c13; 	T(dx = word_4db1b;);	// 91077                  mov     dx, ds:word_4DB1B ;~ 17C5:3C13
cs=0x17c5;eip=0x003c17; 	T(ds = ax;);	// 91078                  mov     ds, ax ;~ 17C5:3C17
cs=0x17c5;eip=0x003c19; 	T(ax = 0x251B;);	// 91080                  mov     ax, 251Bh ;~ 17C5:3C19
cs=0x17c5;eip=0x003c1c; 	S(_INT(0x21));	// 91081                  int     21h             ; DOS - SET INTERRUPT VECTOR ;~ 17C5:3C1C
cs=0x17c5;eip=0x003c1e; 	X(POP(ds));	// 91084                  pop     ds ;~ 17C5:3C1E
cs=0x17c5;eip=0x003c1f; 	J(RETN(0));	// 91086                  retn ;~ 17C5:3C1F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29e3f: 	goto sub_29e3f;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29e50(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29e50:
    _begin:
cs=0x17c5;eip=0x003c20; 	X(PUSH(ds));	// 91094                  push    ds ;~ 17C5:3C20
cs=0x17c5;eip=0x003c21; 	T(XOR(ax, ax));	// 91095                  xor     ax, ax ;~ 17C5:3C21
cs=0x17c5;eip=0x003c23; 	T(ds = ax;);	// 91096                  mov     ds, ax ;~ 17C5:3C23
cs=0x17c5;eip=0x003c25; 	T(MOV(bx, *(dw*)(raddr(ds,si))));	// 91098                  mov     bx, [si] ;~ 17C5:3C25
cs=0x17c5;eip=0x003c27; 	T(MOV(ax, *(dw*)(raddr(ds,si+2))));	// 91099                  mov     ax, [si+2] ;~ 17C5:3C27
cs=0x17c5;eip=0x003c2a; 	X(POP(ds));	// 91100                  pop     ds ;~ 17C5:3C2A
cs=0x17c5;eip=0x003c2b; 	J(RETN(0));	// 91102                  retn ;~ 17C5:3C2B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_29e50: 	goto sub_29e50;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_3c2c_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_3c2c_proc:
    _begin:
cs=0x17c5;eip=0x003c2c; 	X(PUSH(ds));	// 91106                  push    ds ;~ 17C5:3C2C
cs=0x17c5;eip=0x003c2d; 	X(PUSH(ax));	// 91107                  push    ax ;~ 17C5:3C2D
cs=0x17c5;eip=0x003c2e; 	T(ax = seg_offset(seg48ae););	// 91108                  mov     ax, seg seg48ae ;~ 17C5:3C2E
cs=0x17c5;eip=0x003c31; 	T(ds = ax;);	// 91109                  mov     ds, ax ;~ 17C5:3C31
cs=0x17c5;eip=0x003c33; 	X(byte_4db18 = 0x0FF;);	// 91110                  mov     ds:byte_4DB18, 0FFh ;~ 17C5:3C33
cs=0x17c5;eip=0x003c38; 	X(POP(ax));	// 91111                  pop     ax ;~ 17C5:3C38
cs=0x17c5;eip=0x003c39; 	X(POP(ds));	// 91112                  pop     ds ;~ 17C5:3C39
cs=0x17c5;eip=0x003c3a; 	J(IRET);	// 91113                  iret ;~ 17C5:3C3A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_3c2c_proc: 	goto seg2623_3c2c_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group33(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group33:
    _begin:
sub_29e6b:
	// 91119 
cs=0x17c5;eip=0x003c3b; 	X(PUSH(bp));	// 91120                  push    bp ;~ 17C5:3C3B
cs=0x17c5;eip=0x003c3c; 	X(PUSH(si));	// 91121                  push    si ;~ 17C5:3C3C
cs=0x17c5;eip=0x003c3d; 	X(PUSH(di));	// 91122                  push    di ;~ 17C5:3C3D
cs=0x17c5;eip=0x003c3e; 	X(PUSH(es));	// 91123                  push    es ;~ 17C5:3C3E
cs=0x17c5;eip=0x003c3f; 	J(CALL(sub_29e77,0));	// 91124                  call    sub_29E77 ;~ 17C5:3C3F
seg2623_3c42_proc:
	// 91128 
cs=0x17c5;eip=0x003c42; 	X(POP(es));	// 91128                  pop     es ;~ 17C5:3C42
cs=0x17c5;eip=0x003c43; 	X(POP(di));	// 91129                  pop     di ;~ 17C5:3C43
cs=0x17c5;eip=0x003c44; 	X(POP(si));	// 91130                  pop     si ;~ 17C5:3C44
cs=0x17c5;eip=0x003c45; 	X(POP(bp));	// 91131                  pop     bp ;~ 17C5:3C45
cs=0x17c5;eip=0x003c46; 	J(RETN(0));	// 91132                  retn ;~ 17C5:3C46

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_3c42_proc: 	goto seg2623_3c42_proc;
        case m2c::ksub_29e6b: 	goto sub_29e6b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group34(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group34:
    _begin:
sub_29e77:
	// 91138 
cs=0x17c5;eip=0x003c47; 	J(CALL(sub_2b7db,0));	// 91140                  call    sub_2B7DB ;~ 17C5:3C47
cs=0x17c5;eip=0x003c4a; 	J(CALL(seg2623_8e38_proc,m2c::kloc_2f080));	// 91141                  call    loc_2F080 ;~ 17C5:3C4A
seg2623_3c4d_proc:
	// 91145 
cs=0x17c5;eip=0x003c4d; 	T(CMP(word_520c0, 0));	// 91145                  cmp     ds:word_520C0, 0 ;~ 17C5:3C4D
cs=0x17c5;eip=0x003c52; 	J(JNZ(loc_29e89));	// 91146                  jnz     short loc_29E89 ;~ 17C5:3C52
cs=0x17c5;eip=0x003c54; 	J(CALLF(sub_37caa,0));	// 91148                  call    sub_37CAA ;~ 17C5:3C54
loc_29e89:
	// 5297 
cs=0x17c5;eip=0x003c59; 	T(bx = 0;);	// 91152                  mov     bx, 0 ;~ 17C5:3C59
cs=0x17c5;eip=0x003c5c; 	T(ax = word_4e356;);	// 91153                  mov     ax, ds:word_4E356 ;~ 17C5:3C5C
cs=0x17c5;eip=0x003c5f; 	J(CALLF(sub_49a7a,0));	// 91154                  call    far ptr sub_49A7A ;~ 17C5:3C5F
cs=0x17c5;eip=0x003c64; 	X(byte_4db1e = 1;);	// 91156                  mov     ds:byte_4DB1E, 1 ;~ 17C5:3C64
cs=0x17c5;eip=0x003c69; 	J(CALL(sub_2a1a2,0));	// 91157                  call    sub_2A1A2 ;~ 17C5:3C69
cs=0x17c5;eip=0x003c6c; 	J(CALL(sub_26950,0));	// 91159                  call    sub_26950 ;~ 17C5:3C6C
cs=0x17c5;eip=0x003c6f; 	T(CMP(byte_52ae0, 0));	// 91160                  cmp     ds:byte_52AE0, 0 ;~ 17C5:3C6F
cs=0x17c5;eip=0x003c74; 	J(JZ(sub_29e77));	// 91161                  jz      short sub_29E77 ;~ 17C5:3C74
cs=0x17c5;eip=0x003c76; 	J(RETN(0));	// 91163                  retn ;~ 17C5:3C76

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29e89: 	goto loc_29e89;
        case m2c::kseg2623_3c4d_proc: 	goto seg2623_3c4d_proc;
        case m2c::ksub_29e77: 	goto sub_29e77;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group35(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group35:
    _begin:
sub_29ea8:
	// 91171 
cs=0x17c5;eip=0x003c78; 	X(word_4db2a = 1;);	// 91172                  mov     ds:word_4DB2A, 1 ;~ 17C5:3C78
cs=0x17c5;eip=0x003c7e; 	X(word_4db34 = 1;);	// 91173                  mov     ds:word_4DB34, 1 ;~ 17C5:3C7E
cs=0x17c5;eip=0x003c84; 	X(word_4db20 = 0;);	// 91174                  mov     ds:word_4DB20, 0 ;~ 17C5:3C84
cs=0x17c5;eip=0x003c8a; 	X(word_4db22 = 0;);	// 91175                  mov     ds:word_4DB22, 0 ;~ 17C5:3C8A
cs=0x17c5;eip=0x003c90; 	J(CALL(sub_2a022,0));	// 91176                  call    sub_2A022 ;~ 17C5:3C90
cs=0x17c5;eip=0x003c93; 	T(ah = 0x35;);	// 91177                  mov     ah, 35h ; '5' ;~ 17C5:3C93
cs=0x17c5;eip=0x003c95; 	T(al = 8;);	// 91178                  mov     al, 8 ;~ 17C5:3C95
cs=0x17c5;eip=0x003c97; 	S(_INT(0x21));	// 91179                  int     21h             ; DOS - 2+ - GET INTERRUPT VECTOR ;~ 17C5:3C97
cs=0x17c5;eip=0x003c99; 	X(MOV(*(dw*)(raddr(cs,m2c::kloc_29f96+1)), bx));	// 91183                  mov     word ptr cs:loc_29F96+1, bx ;~ 17C5:3C99
cs=0x17c5;eip=0x003c9e; 	X(MOV(*(dw*)(raddr(cs,m2c::kloc_29f96+3)), es));	// 91184                  mov     word ptr cs:loc_29F96+3, es ;~ 17C5:3C9E
cs=0x17c5;eip=0x003ca3; 	X(PUSH(ds));	// 91185                  push    ds ;~ 17C5:3CA3
cs=0x17c5;eip=0x003ca4; 	T(ah = 0x25;);	// 91186                  mov     ah, 25h ; '%' ;~ 17C5:3CA4
cs=0x17c5;eip=0x003ca6; 	T(al = 8;);	// 91187                  mov     al, 8 ;~ 17C5:3CA6
cs=0x17c5;eip=0x003ca8; 	T(LDS(dx, off_29f31));	// 91188                  lds     dx, cs:off_29F31 ;~ 17C5:3CA8
cs=0x17c5;eip=0x003cad; 	S(_INT(0x21));	// 91190                  int     21h             ; DOS - SET INTERRUPT VECTOR ;~ 17C5:3CAD
cs=0x17c5;eip=0x003caf; 	X(POP(ds));	// 91193                  pop     ds ;~ 17C5:3CAF
cs=0x17c5;eip=0x003cb0; 	X(byte_4db1f = 1;);	// 91195                  mov     ds:byte_4DB1F, 1 ;~ 17C5:3CB0
cs=0x17c5;eip=0x003cb5; 	J(RETN(0));	// 91196                  retn ;~ 17C5:3CB5
sub_29ee6:
	// 91204 
cs=0x17c5;eip=0x003cb6; 	T(al = 0x36;);	// 91205                  mov     al, 36h ; '6' ;~ 17C5:3CB6
cs=0x17c5;eip=0x003cb8; 	S(OUT(0x43, al));	// 91206                  out     43h, al         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3CB8
cs=0x17c5;eip=0x003cba; 	J({;});	// 91207                  jmp     short $+2 ;~ 17C5:3CBA
loc_29eec:
	// 5298 
cs=0x17c5;eip=0x003cbc; 	T(XOR(al, al));	// 91211                  xor     al, al ;~ 17C5:3CBC
cs=0x17c5;eip=0x003cbe; 	S(OUT(0x40, al));	// 91212                  out     40h, al         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3CBE
cs=0x17c5;eip=0x003cc0; 	J({;});	// 91213                  jmp     short $+2 ;~ 17C5:3CC0
loc_29ef2:
	// 5299 
cs=0x17c5;eip=0x003cc2; 	S(OUT(0x40, al));	// 91217                  out     40h, al         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3CC2
cs=0x17c5;eip=0x003cc4; 	X(PUSH(ds));	// 91218                  push    ds ;~ 17C5:3CC4
cs=0x17c5;eip=0x003cc5; 	T(ah = 0x25;);	// 91219                  mov     ah, 25h ; '%' ;~ 17C5:3CC5
cs=0x17c5;eip=0x003cc7; 	T(al = 8;);	// 91220                  mov     al, 8 ;~ 17C5:3CC7
cs=0x17c5;eip=0x003cc9; 	T(LDS(dx, *(dd*)(raddr(cs,m2c::kloc_29f96+1))));	// 91221                  lds     dx, dword ptr cs:loc_29F96+1 ;~ 17C5:3CC9
cs=0x17c5;eip=0x003cce; 	S(_INT(0x21));	// 91223                  int     21h             ; DOS - SET INTERRUPT VECTOR ;~ 17C5:3CCE
cs=0x17c5;eip=0x003cd0; 	X(POP(ds));	// 91226                  pop     ds ;~ 17C5:3CD0
cs=0x17c5;eip=0x003cd1; 	X(byte_4db1f = 0;);	// 91228                  mov     ds:byte_4DB1F, 0 ;~ 17C5:3CD1
cs=0x17c5;eip=0x003cd6; 	J(RETN(0));	// 91229                  retn ;~ 17C5:3CD6
seg2623_3cd7_proc:
	// 91235 
loc_29f07:
	// 5300 
cs=0x17c5;eip=0x003cd7; 	T(bx = word_4db2d;);	// 91236                  mov     bx, ds:word_4DB2D ;~ 17C5:3CD7
cs=0x17c5;eip=0x003cdb; 	X(word_4db2a = bx;);	// 91237                  mov     ds:word_4DB2A, bx ;~ 17C5:3CDB
cs=0x17c5;eip=0x003cdf; 	T(ax = word_4db2f;);	// 91238                  mov     ax, ds:word_4DB2F ;~ 17C5:3CDF
cs=0x17c5;eip=0x003ce2; 	T(XOR(dx, dx));	// 91239                  xor     dx, dx ;~ 17C5:3CE2
cs=0x17c5;eip=0x003ce4; 	T(DIV2(bx));	// 91240                  div     bx ;~ 17C5:3CE4
cs=0x17c5;eip=0x003ce6; 	X(word_4db24 = ax;);	// 91241                  mov     ds:word_4DB24, ax ;~ 17C5:3CE6
cs=0x17c5;eip=0x003ce9; 	X(byte_4db2c = 1;);	// 91242                  mov     ds:byte_4DB2C, 1 ;~ 17C5:3CE9
cs=0x17c5;eip=0x003cee; 	J(RETN(0));	// 91243                  retn ;~ 17C5:3CEE
loc_29f1f:
	// 5301 
cs=0x17c5;eip=0x003cef; 	X(word_4db2a = 1;);	// 91247                  mov     ds:word_4DB2A, 1 ;~ 17C5:3CEF
cs=0x17c5;eip=0x003cf5; 	T(ax = word_4db2f;);	// 91248                  mov     ax, ds:word_4DB2F ;~ 17C5:3CF5
cs=0x17c5;eip=0x003cf8; 	X(word_4db24 = ax;);	// 91249                  mov     ds:word_4DB24, ax ;~ 17C5:3CF8
cs=0x17c5;eip=0x003cfb; 	X(byte_4db2c = 1;);	// 91250                  mov     ds:byte_4DB2C, 1 ;~ 17C5:3CFB
cs=0x17c5;eip=0x003d00; 	J(RETN(0));	// 91251                  retn ;~ 17C5:3D00
loc_29f35:
	// 5302 
cs=0x17c5;eip=0x003d05; 	T(STI);	// 91257                  sti ;~ 17C5:3D05
cs=0x17c5;eip=0x003d06; 	X(PUSH(ax));	// 91258                  push    ax ;~ 17C5:3D06
cs=0x17c5;eip=0x003d07; 	X(PUSH(bx));	// 91259                  push    bx ;~ 17C5:3D07
cs=0x17c5;eip=0x003d08; 	X(PUSH(cx));	// 91260                  push    cx ;~ 17C5:3D08
cs=0x17c5;eip=0x003d09; 	X(PUSH(dx));	// 91261                  push    dx ;~ 17C5:3D09
cs=0x17c5;eip=0x003d0a; 	X(PUSH(si));	// 91262                  push    si ;~ 17C5:3D0A
cs=0x17c5;eip=0x003d0b; 	X(PUSH(di));	// 91263                  push    di ;~ 17C5:3D0B
cs=0x17c5;eip=0x003d0c; 	X(PUSH(bp));	// 91264                  push    bp ;~ 17C5:3D0C
cs=0x17c5;eip=0x003d0d; 	X(PUSH(ds));	// 91265                  push    ds ;~ 17C5:3D0D
cs=0x17c5;eip=0x003d0e; 	X(PUSH(es));	// 91266                  push    es ;~ 17C5:3D0E
cs=0x17c5;eip=0x003d0f; 	T(ax = seg_offset(seg48ae););	// 91267                  mov     ax, seg seg48ae ;~ 17C5:3D0F
cs=0x17c5;eip=0x003d12; 	T(ds = ax;);	// 91268                  mov     ds, ax ;~ 17C5:3D12
cs=0x17c5;eip=0x003d14; 	T(ax = word_4db26;);	// 91269                  mov     ax, ds:word_4DB26 ;~ 17C5:3D14
cs=0x17c5;eip=0x003d17; 	X(ADD(word_4db20, ax));	// 91270                  add     ds:word_4DB20, ax ;~ 17C5:3D17
cs=0x17c5;eip=0x003d1b; 	X(ADC(word_4db22, 0));	// 91271                  adc     ds:word_4DB22, 0 ;~ 17C5:3D1B
cs=0x17c5;eip=0x003d20; 	X(DEC(word_4db34));	// 91272                  dec     ds:word_4DB34 ;~ 17C5:3D20
cs=0x17c5;eip=0x003d24; 	J(JNZ(loc_29f67));	// 91273                  jnz     short loc_29F67 ;~ 17C5:3D24
cs=0x17c5;eip=0x003d26; 	T(ax = word_4db2a;);	// 91274                  mov     ax, ds:word_4DB2A ;~ 17C5:3D26
cs=0x17c5;eip=0x003d29; 	X(word_4db34 = ax;);	// 91275                  mov     ds:word_4DB34, ax ;~ 17C5:3D29
cs=0x17c5;eip=0x003d2c; 	J(CALL(sub_29f9b,0));	// 91276                  call    sub_29F9B ;~ 17C5:3D2C
cs=0x17c5;eip=0x003d2f; 	X(byte_4db1e = 0;);	// 91277                  mov     ds:byte_4DB1E, 0 ;~ 17C5:3D2F
cs=0x17c5;eip=0x003d34; 	J(CALL(sub_2a113,0));	// 91278                  call    sub_2A113 ;~ 17C5:3D34
loc_29f67:
	// 5303 
cs=0x17c5;eip=0x003d37; 	T(CMP(word_4db2a, 1));	// 91282                  cmp     ds:word_4DB2A, 1 ;~ 17C5:3D37
cs=0x17c5;eip=0x003d3c; 	J(JZ(loc_29f73));	// 91283                  jz      short loc_29F73 ;~ 17C5:3D3C
cs=0x17c5;eip=0x003d3e; 	J(CALLF(sub_49bba,0));	// 91284                  call    far ptr sub_49BBA ;~ 17C5:3D3E
loc_29f73:
	// 5304 
cs=0x17c5;eip=0x003d43; 	T(CMP(word_4db22, 0));	// 91288                  cmp     ds:word_4DB22, 0 ;~ 17C5:3D43
cs=0x17c5;eip=0x003d48; 	J(JNZ(loc_29f88));	// 91289                  jnz     short loc_29F88 ;~ 17C5:3D48
cs=0x17c5;eip=0x003d4a; 	T(al = 0x20;);	// 91290                  mov     al, 20h ; ' ' ;~ 17C5:3D4A
cs=0x17c5;eip=0x003d4c; 	S(OUT(0x20, al));	// 91291                  out     20h, al         ; Interrupt controller, 8259A. ;~ 17C5:3D4C
cs=0x17c5;eip=0x003d4e; 	X(POP(es));	// 91292                  pop     es ;~ 17C5:3D4E
cs=0x17c5;eip=0x003d4f; 	X(POP(ds));	// 91294                  pop     ds ;~ 17C5:3D4F
cs=0x17c5;eip=0x003d50; 	X(POP(bp));	// 91295                  pop     bp ;~ 17C5:3D50
cs=0x17c5;eip=0x003d51; 	X(POP(di));	// 91296                  pop     di ;~ 17C5:3D51
cs=0x17c5;eip=0x003d52; 	X(POP(si));	// 91297                  pop     si ;~ 17C5:3D52
cs=0x17c5;eip=0x003d53; 	X(POP(dx));	// 91298                  pop     dx ;~ 17C5:3D53
cs=0x17c5;eip=0x003d54; 	X(POP(cx));	// 91299                  pop     cx ;~ 17C5:3D54
cs=0x17c5;eip=0x003d55; 	X(POP(bx));	// 91300                  pop     bx ;~ 17C5:3D55
cs=0x17c5;eip=0x003d56; 	X(POP(ax));	// 91301                  pop     ax ;~ 17C5:3D56
cs=0x17c5;eip=0x003d57; 	J(IRET);	// 91302                  iret ;~ 17C5:3D57
loc_29f88:
	// 5305 
cs=0x17c5;eip=0x003d58; 	X(DEC(word_4db22));	// 91306                  dec     ds:word_4DB22 ;~ 17C5:3D58
cs=0x17c5;eip=0x003d5c; 	X(POP(es));	// 91307                  pop     es ;~ 17C5:3D5C
cs=0x17c5;eip=0x003d5d; 	X(POP(ds));	// 91308                  pop     ds ;~ 17C5:3D5D
cs=0x17c5;eip=0x003d5e; 	X(POP(bp));	// 91309                  pop     bp ;~ 17C5:3D5E
cs=0x17c5;eip=0x003d5f; 	X(POP(di));	// 91310                  pop     di ;~ 17C5:3D5F
cs=0x17c5;eip=0x003d60; 	X(POP(si));	// 91311                  pop     si ;~ 17C5:3D60
cs=0x17c5;eip=0x003d61; 	X(POP(dx));	// 91312                  pop     dx ;~ 17C5:3D61
cs=0x17c5;eip=0x003d62; 	X(POP(cx));	// 91313                  pop     cx ;~ 17C5:3D62
cs=0x17c5;eip=0x003d63; 	X(POP(bx));	// 91314                  pop     bx ;~ 17C5:3D63
cs=0x17c5;eip=0x003d64; 	X(POP(ax));	// 91315                  pop     ax ;~ 17C5:3D64
cs=0x17c5;eip=0x003d65; 	T(CLI);	// 91316                  cli ;~ 17C5:3D65
loc_29f96:
	// 5306 
cs=0x17c5;eip=0x003d66; __disp=*(dd*)(raddr(cs,eip+1));
from_callf=true;
	J(return __dispatch_call(__disp, _state););	// 91320                  jmp     far ptr 0:0 ;~ 17C5:3D66

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29eec: 	goto loc_29eec;
        case m2c::kloc_29ef2: 	goto loc_29ef2;
        case m2c::kloc_29f07: 	goto loc_29f07;
        case m2c::kloc_29f1f: 	goto loc_29f1f;
        case m2c::kloc_29f35: 	goto loc_29f35;
        case m2c::kloc_29f67: 	goto loc_29f67;
        case m2c::kloc_29f73: 	goto loc_29f73;
        case m2c::kloc_29f88: 	goto loc_29f88;
        case m2c::kloc_29f96: 	goto loc_29f96;
        case m2c::ksub_29ea8: 	goto sub_29ea8;
        case m2c::ksub_29ee6: 	goto sub_29ee6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_29f9b(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_29f9b:
    _begin:
cs=0x17c5;eip=0x003d6b; 	X(DEC(byte_4db2c));	// 91326                  dec     ds:byte_4DB2C ;~ 17C5:3D6B
cs=0x17c5;eip=0x003d6f; 	J(JNZ(loc_2a020));	// 91327                  jnz     short loc_2A020 ;~ 17C5:3D6F
cs=0x17c5;eip=0x003d71; 	X(byte_4db2c = 0x14;);	// 91328                  mov     ds:byte_4DB2C, 14h ;~ 17C5:3D71
cs=0x17c5;eip=0x003d76; 	T(CMP(byte_4db33, 0));	// 91329                  cmp     ds:byte_4DB33, 0 ;~ 17C5:3D76
cs=0x17c5;eip=0x003d7b; 	J(JZ(loc_29fee));	// 91330                  jz      short loc_29FEE ;~ 17C5:3D7B
cs=0x17c5;eip=0x003d7d; 	T(XOR(bl, bl));	// 91331                  xor     bl, bl ;~ 17C5:3D7D
cs=0x17c5;eip=0x003d7f; 	T(XOR(cx, cx));	// 91332                  xor     cx, cx ;~ 17C5:3D7F
cs=0x17c5;eip=0x003d81; 	T(es = cx;);	// 91333                  mov     es, cx ;~ 17C5:3D81
cs=0x17c5;eip=0x003d83; 	T(MOV(dx, *(dw*)(raddr(es,0x463))));	// 91335                  mov     dx, es:463h ;~ 17C5:3D83
cs=0x17c5;eip=0x003d88; 	T(ADD(dx, 6));	// 91336                  add     dx, 6 ;~ 17C5:3D88
cs=0x17c5;eip=0x003d8b; 	T(CMP(dx, 0x3BA));	// 91337                  cmp     dx, 3BAh ;~ 17C5:3D8B
cs=0x17c5;eip=0x003d8f; 	J(JZ(loc_29fd5));	// 91338                  jz      short loc_29FD5 ;~ 17C5:3D8F
loc_29fc1:
	// 5307 
cs=0x17c5;eip=0x003d91; 	T(CLI);	// 91342                  cli ;~ 17C5:3D91
cs=0x17c5;eip=0x003d92; 	S(IN(al, dx));	// 91343                  in      al, dx ;~ 17C5:3D92
cs=0x17c5;eip=0x003d93; 	T(TEST(al, 8));	// 91344                  test    al, 8 ;~ 17C5:3D93
cs=0x17c5;eip=0x003d95; 	J(JNZ(loc_29fee));	// 91345                  jnz     short loc_29FEE ;~ 17C5:3D95
cs=0x17c5;eip=0x003d97; 	T(STI);	// 91346                  sti ;~ 17C5:3D97
cs=0x17c5;eip=0x003d98; 	T(AND(al, 1));	// 91347                  and     al, 1 ;~ 17C5:3D98
cs=0x17c5;eip=0x003d9a; 	T(CMP(al, bl));	// 91348                  cmp     al, bl ;~ 17C5:3D9A
cs=0x17c5;eip=0x003d9c; 	J(JZ(loc_29fc1));	// 91349                  jz      short loc_29FC1 ;~ 17C5:3D9C
cs=0x17c5;eip=0x003d9e; 	T(XOR(bl, 1));	// 91350                  xor     bl, 1 ;~ 17C5:3D9E
cs=0x17c5;eip=0x003da1; 	J(LOOP(loc_29fc1));	// 91351                  loop    loc_29FC1 ;~ 17C5:3DA1
cs=0x17c5;eip=0x003da3; 	J(JMP(loc_29fe7));	// 91352                  jmp     short loc_29FE7 ;~ 17C5:3DA3
loc_29fd5:
	// 5308 
cs=0x17c5;eip=0x003da5; 	T(CLI);	// 91357                  cli ;~ 17C5:3DA5
cs=0x17c5;eip=0x003da6; 	S(IN(al, dx));	// 91358                  in      al, dx ;~ 17C5:3DA6
cs=0x17c5;eip=0x003da7; 	T(TEST(al, 0x80));	// 91359                  test    al, 80h ;~ 17C5:3DA7
cs=0x17c5;eip=0x003da9; 	J(JZ(loc_29fee));	// 91360                  jz      short loc_29FEE ;~ 17C5:3DA9
cs=0x17c5;eip=0x003dab; 	T(STI);	// 91361                  sti ;~ 17C5:3DAB
cs=0x17c5;eip=0x003dac; 	T(AND(al, 1));	// 91362                  and     al, 1 ;~ 17C5:3DAC
cs=0x17c5;eip=0x003dae; 	T(CMP(al, bl));	// 91363                  cmp     al, bl ;~ 17C5:3DAE
cs=0x17c5;eip=0x003db0; 	J(JZ(loc_29fc1));	// 91364                  jz      short loc_29FC1 ;~ 17C5:3DB0
cs=0x17c5;eip=0x003db2; 	T(XOR(bl, 1));	// 91365                  xor     bl, 1 ;~ 17C5:3DB2
cs=0x17c5;eip=0x003db5; 	J(LOOP(loc_29fd5));	// 91366                  loop    loc_29FD5 ;~ 17C5:3DB5
loc_29fe7:
	// 5309 
cs=0x17c5;eip=0x003db7; 	X(byte_4db33 = 0;);	// 91369                  mov     ds:byte_4DB33, 0 ;~ 17C5:3DB7
cs=0x17c5;eip=0x003dbc; 	J(JMP(loc_2a020));	// 91370                  jmp     short loc_2A020 ;~ 17C5:3DBC
loc_29fee:
	// 5310 
cs=0x17c5;eip=0x003dbe; 	T(dx = word_4db26;);	// 91375                  mov     dx, ds:word_4DB26 ;~ 17C5:3DBE
cs=0x17c5;eip=0x003dc2; 	T(CMP(dx, word_4db24));	// 91376                  cmp     dx, ds:word_4DB24 ;~ 17C5:3DC2
cs=0x17c5;eip=0x003dc6; 	J(JZ(loc_2a000));	// 91377                  jz      short loc_2A000 ;~ 17C5:3DC6
cs=0x17c5;eip=0x003dc8; 	T(dx = word_4db24;);	// 91378                  mov     dx, ds:word_4DB24 ;~ 17C5:3DC8
cs=0x17c5;eip=0x003dcc; 	X(word_4db26 = dx;);	// 91379                  mov     ds:word_4DB26, dx ;~ 17C5:3DCC
loc_2a000:
	// 5311 
cs=0x17c5;eip=0x003dd0; 	T(al = 0x36;);	// 91382                  mov     al, 36h ; '6' ;~ 17C5:3DD0
cs=0x17c5;eip=0x003dd2; 	S(OUT(0x43, al));	// 91383                  out     43h, al         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3DD2
cs=0x17c5;eip=0x003dd4; 	J({;});	// 91384                  jmp     short $+2 ;~ 17C5:3DD4
loc_2a006:
	// 5312 
cs=0x17c5;eip=0x003dd6; 	T(al = dl;);	// 91388                  mov     al, dl ;~ 17C5:3DD6
cs=0x17c5;eip=0x003dd8; 	S(OUT(0x40, al));	// 91389                  out     40h, al         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3DD8
cs=0x17c5;eip=0x003dda; 	J({;});	// 91390                  jmp     short $+2 ;~ 17C5:3DDA
loc_2a00c:
	// 5313 
cs=0x17c5;eip=0x003ddc; 	T(al = dh;);	// 91394                  mov     al, dh ;~ 17C5:3DDC
cs=0x17c5;eip=0x003dde; 	S(OUT(0x40, al));	// 91395                  out     40h, al         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3DDE
cs=0x17c5;eip=0x003de0; 	X(INC(word_4db28));	// 91396                  inc     ds:word_4DB28 ;~ 17C5:3DE0
cs=0x17c5;eip=0x003de4; 	T(NEG(cx));	// 91397                  neg     cx ;~ 17C5:3DE4
cs=0x17c5;eip=0x003de6; 	X(word_4db36 = cx;);	// 91398                  mov     ds:word_4DB36, cx ;~ 17C5:3DE6
cs=0x17c5;eip=0x003dea; 	J(JZ(loc_2a020));	// 91399                  jz      short loc_2A020 ;~ 17C5:3DEA
cs=0x17c5;eip=0x003dec; 	X(INC(word_4db34));	// 91400                  inc     ds:word_4DB34 ;~ 17C5:3DEC
loc_2a020:
	// 5314 
cs=0x17c5;eip=0x003df0; 	T(STI);	// 91404                  sti ;~ 17C5:3DF0
cs=0x17c5;eip=0x003df1; 	J(RETN(0));	// 91405                  retn ;~ 17C5:3DF1

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_29fc1: 	goto loc_29fc1;
        case m2c::kloc_29fd5: 	goto loc_29fd5;
        case m2c::kloc_29fe7: 	goto loc_29fe7;
        case m2c::kloc_29fee: 	goto loc_29fee;
        case m2c::kloc_2a000: 	goto loc_2a000;
        case m2c::kloc_2a006: 	goto loc_2a006;
        case m2c::kloc_2a00c: 	goto loc_2a00c;
        case m2c::kloc_2a020: 	goto loc_2a020;
        case m2c::ksub_29f9b: 	goto sub_29f9b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2a022(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2a022:
    _begin:
cs=0x17c5;eip=0x003df2; 	X(PUSHF);	// 91413                  pushf ;~ 17C5:3DF2
cs=0x17c5;eip=0x003df3; 	T(CLI);	// 91414                  cli ;~ 17C5:3DF3
cs=0x17c5;eip=0x003df4; 	X(byte_4db2c = 1;);	// 91415                  mov     ds:byte_4DB2C, 1 ;~ 17C5:3DF4
cs=0x17c5;eip=0x003df9; 	T(XOR(ax, ax));	// 91416                  xor     ax, ax ;~ 17C5:3DF9
cs=0x17c5;eip=0x003dfb; 	X(byte_4db33 = 1;);	// 91417                  mov     ds:byte_4DB33, 1 ;~ 17C5:3DFB
cs=0x17c5;eip=0x003e00; 	X(word_4db2f = ax;);	// 91418                  mov     ds:word_4DB2F, ax ;~ 17C5:3E00
cs=0x17c5;eip=0x003e03; 	X(word_4db31 = ax;);	// 91419                  mov     ds:word_4DB31, ax ;~ 17C5:3E03
cs=0x17c5;eip=0x003e06; 	J(CALL(sub_2a0b7,0));	// 91420                  call    sub_2A0B7 ;~ 17C5:3E06
cs=0x17c5;eip=0x003e09; 	T(bx = ax;);	// 91421                  mov     bx, ax ;~ 17C5:3E09
cs=0x17c5;eip=0x003e0b; 	T(cx = 0x10;);	// 91422                  mov     cx, 10h ;~ 17C5:3E0B
loc_2a03e:
	// 5315 
cs=0x17c5;eip=0x003e0e; 	X(PUSH(bx));	// 91425                  push    bx ;~ 17C5:3E0E
cs=0x17c5;eip=0x003e0f; 	J(CALL(sub_2a0b7,0));	// 91426                  call    sub_2A0B7 ;~ 17C5:3E0F
cs=0x17c5;eip=0x003e12; 	X(POP(bx));	// 91427                  pop     bx ;~ 17C5:3E12
cs=0x17c5;eip=0x003e13; 	T(SUB(bx, ax));	// 91428                  sub     bx, ax ;~ 17C5:3E13
cs=0x17c5;eip=0x003e15; 	X(ADD(word_4db2f, bx));	// 91429                  add     ds:word_4DB2F, bx ;~ 17C5:3E15
cs=0x17c5;eip=0x003e19; 	X(ADC(word_4db31, 0));	// 91430                  adc     ds:word_4DB31, 0 ;~ 17C5:3E19
cs=0x17c5;eip=0x003e1e; 	T(bx = ax;);	// 91431                  mov     bx, ax ;~ 17C5:3E1E
cs=0x17c5;eip=0x003e20; 	J(LOOP(loc_2a03e));	// 91432                  loop    loc_2A03E ;~ 17C5:3E20
cs=0x17c5;eip=0x003e22; 	T(ax = word_4db2f;);	// 91433                  mov     ax, ds:word_4DB2F ;~ 17C5:3E22
cs=0x17c5;eip=0x003e25; 	T(dx = word_4db31;);	// 91434                  mov     dx, ds:word_4DB31 ;~ 17C5:3E25
cs=0x17c5;eip=0x003e29; 	X(ADD(word_4db20, ax));	// 91435                  add     ds:word_4DB20, ax ;~ 17C5:3E29
cs=0x17c5;eip=0x003e2d; 	X(ADC(word_4db22, dx));	// 91436                  adc     ds:word_4DB22, dx ;~ 17C5:3E2D
cs=0x17c5;eip=0x003e31; 	T(cx = 0x10;);	// 91437                  mov     cx, 10h ;~ 17C5:3E31
cs=0x17c5;eip=0x003e34; 	T(DIV2(cx));	// 91438                  div     cx ;~ 17C5:3E34
cs=0x17c5;eip=0x003e36; 	T(SHR(ax, 1));	// 91439                  shr     ax, 1 ;~ 17C5:3E36
cs=0x17c5;eip=0x003e38; 	X(word_4db2f = ax;);	// 91440                  mov     ds:word_4DB2F, ax ;~ 17C5:3E38
cs=0x17c5;eip=0x003e3b; 	T(bx = ax;);	// 91441                  mov     bx, ax ;~ 17C5:3E3B
cs=0x17c5;eip=0x003e3d; 	T(SHR(bx, 1));	// 91442                  shr     bx, 1 ;~ 17C5:3E3D
cs=0x17c5;eip=0x003e3f; 	T(SHR(bx, 1));	// 91443                  shr     bx, 1 ;~ 17C5:3E3F
cs=0x17c5;eip=0x003e41; 	T(SHR(bx, 1));	// 91444                  shr     bx, 1 ;~ 17C5:3E41
cs=0x17c5;eip=0x003e43; 	T(SHR(bx, 1));	// 91445                  shr     bx, 1 ;~ 17C5:3E43
cs=0x17c5;eip=0x003e45; 	T(ADD(ax, bx));	// 91446                  add     ax, bx ;~ 17C5:3E45
cs=0x17c5;eip=0x003e47; 	T(XOR(dx, dx));	// 91447                  xor     dx, dx ;~ 17C5:3E47
cs=0x17c5;eip=0x003e49; 	T(bx = 0x0F89;);	// 91448                  mov     bx, 0F89h ;~ 17C5:3E49
cs=0x17c5;eip=0x003e4c; 	T(DIV2(bx));	// 91449                  div     bx ;~ 17C5:3E4C
cs=0x17c5;eip=0x003e4e; 	T(CMP(ax, 4));	// 91450                  cmp     ax, 4 ;~ 17C5:3E4E
cs=0x17c5;eip=0x003e51; 	J(JC(loc_2a08b));	// 91451                  jb      short loc_2A08B ;~ 17C5:3E51
cs=0x17c5;eip=0x003e53; 	T(CMP(ax, 6));	// 91452                  cmp     ax, 6 ;~ 17C5:3E53
cs=0x17c5;eip=0x003e56; 	J(JA(loc_2a08b));	// 91453                  ja      short loc_2A08B ;~ 17C5:3E56
cs=0x17c5;eip=0x003e58; 	J(JMP(loc_2a099));	// 91454                  jmp     short loc_2A099 ;~ 17C5:3E58
loc_2a08b:
	// 5316 
cs=0x17c5;eip=0x003e5b; 	X(byte_4db33 = 0;);	// 91461                  mov     ds:byte_4DB33, 0 ;~ 17C5:3E5B
cs=0x17c5;eip=0x003e60; 	X(word_4db2f = 0x4DAE;);	// 91462                  mov     ds:word_4DB2F, 4DAEh ;~ 17C5:3E60
cs=0x17c5;eip=0x003e66; 	T(ax = 5;);	// 91463                  mov     ax, 5 ;~ 17C5:3E66
loc_2a099:
	// 5317 
cs=0x17c5;eip=0x003e69; 	X(word_4db2d = ax;);	// 91466                  mov     ds:word_4DB2D, ax ;~ 17C5:3E69
cs=0x17c5;eip=0x003e6c; 	T(CMP(word_4db2a, 1));	// 91467                  cmp     ds:word_4DB2A, 1 ;~ 17C5:3E6C
cs=0x17c5;eip=0x003e71; 	J(JZ(loc_2a0a6));	// 91468                  jz      short loc_2A0A6 ;~ 17C5:3E71
cs=0x17c5;eip=0x003e73; 	X(word_4db2a = ax;);	// 91469                  mov     ds:word_4DB2A, ax ;~ 17C5:3E73
loc_2a0a6:
	// 5318 
cs=0x17c5;eip=0x003e76; 	T(ax = word_4db2f;);	// 91472                  mov     ax, ds:word_4DB2F ;~ 17C5:3E76
cs=0x17c5;eip=0x003e79; 	T(XOR(dx, dx));	// 91473                  xor     dx, dx ;~ 17C5:3E79
cs=0x17c5;eip=0x003e7b; 	X(DIV2(word_4db2a));	// 91474                  div     ds:word_4DB2A ;~ 17C5:3E7B
cs=0x17c5;eip=0x003e7f; 	X(word_4db26 = ax;);	// 91475                  mov     ds:word_4DB26, ax ;~ 17C5:3E7F
cs=0x17c5;eip=0x003e82; 	X(word_4db24 = ax;);	// 91476                  mov     ds:word_4DB24, ax ;~ 17C5:3E82
cs=0x17c5;eip=0x003e85; 	X(POPF);	// 91477                  popf ;~ 17C5:3E85
cs=0x17c5;eip=0x003e86; 	J(RETN(0));	// 91478                  retn ;~ 17C5:3E86

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2a03e: 	goto loc_2a03e;
        case m2c::kloc_2a08b: 	goto loc_2a08b;
        case m2c::kloc_2a099: 	goto loc_2a099;
        case m2c::kloc_2a0a6: 	goto loc_2a0a6;
        case m2c::ksub_2a022: 	goto sub_2a022;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2a0b7(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2a0b7:
    _begin:
cs=0x17c5;eip=0x003e87; 	X(PUSHF);	// 91487                  pushf ;~ 17C5:3E87
cs=0x17c5;eip=0x003e88; 	T(CLI);	// 91488                  cli ;~ 17C5:3E88
cs=0x17c5;eip=0x003e89; 	T(XOR(ax, ax));	// 91489                  xor     ax, ax ;~ 17C5:3E89
cs=0x17c5;eip=0x003e8b; 	T(es = ax;);	// 91490                  mov     es, ax ;~ 17C5:3E8B
cs=0x17c5;eip=0x003e8d; 	T(MOV(dx, *(dw*)(raddr(es,0x463))));	// 91491                  mov     dx, es:463h ;~ 17C5:3E8D
cs=0x17c5;eip=0x003e92; 	T(ADD(dx, 6));	// 91492                  add     dx, 6 ;~ 17C5:3E92
cs=0x17c5;eip=0x003e95; 	T(CMP(dx, 0x3BA));	// 91493                  cmp     dx, 3BAh ;~ 17C5:3E95
cs=0x17c5;eip=0x003e99; 	J(JZ(loc_2a0e2));	// 91494                  jz      short loc_2A0E2 ;~ 17C5:3E99
cs=0x17c5;eip=0x003e9b; 	T(XOR(bx, bx));	// 91495                  xor     bx, bx ;~ 17C5:3E9B
loc_2a0cd:
	// 5319 
cs=0x17c5;eip=0x003e9d; 	T(DEC(bx));	// 91498                  dec     bx ;~ 17C5:3E9D
cs=0x17c5;eip=0x003e9e; 	J(JZ(loc_2a108));	// 91499                  jz      short loc_2A108 ;~ 17C5:3E9E
cs=0x17c5;eip=0x003ea0; 	S(IN(al, dx));	// 91500                  in      al, dx ;~ 17C5:3EA0
cs=0x17c5;eip=0x003ea1; 	T(TEST(al, 8));	// 91501                  test    al, 8 ;~ 17C5:3EA1
cs=0x17c5;eip=0x003ea3; 	J(JNZ(loc_2a0cd));	// 91502                  jnz     short loc_2A0CD ;~ 17C5:3EA3
cs=0x17c5;eip=0x003ea5; 	T(XOR(bx, bx));	// 91503                  xor     bx, bx ;~ 17C5:3EA5
loc_2a0d7:
	// 5320 
cs=0x17c5;eip=0x003ea7; 	T(DEC(bx));	// 91506                  dec     bx ;~ 17C5:3EA7
cs=0x17c5;eip=0x003ea8; 	J(JZ(loc_2a108));	// 91507                  jz      short loc_2A108 ;~ 17C5:3EA8
cs=0x17c5;eip=0x003eaa; 	S(IN(al, dx));	// 91508                  in      al, dx ;~ 17C5:3EAA
cs=0x17c5;eip=0x003eab; 	T(TEST(al, 8));	// 91509                  test    al, 8 ;~ 17C5:3EAB
cs=0x17c5;eip=0x003ead; 	J(JZ(loc_2a0d7));	// 91510                  jz      short loc_2A0D7 ;~ 17C5:3EAD
cs=0x17c5;eip=0x003eaf; 	J(JMP(loc_2a0f6));	// 91511                  jmp     short loc_2A0F6 ;~ 17C5:3EAF
loc_2a0e2:
	// 5321 
cs=0x17c5;eip=0x003eb2; 	T(XOR(bx, bx));	// 91517                  xor     bx, bx ;~ 17C5:3EB2
loc_2a0e4:
	// 5322 
cs=0x17c5;eip=0x003eb4; 	T(DEC(bx));	// 91520                  dec     bx ;~ 17C5:3EB4
cs=0x17c5;eip=0x003eb5; 	J(JZ(loc_2a108));	// 91521                  jz      short loc_2A108 ;~ 17C5:3EB5
cs=0x17c5;eip=0x003eb7; 	S(IN(al, dx));	// 91522                  in      al, dx ;~ 17C5:3EB7
cs=0x17c5;eip=0x003eb8; 	T(TEST(al, 0x80));	// 91523                  test    al, 80h ;~ 17C5:3EB8
cs=0x17c5;eip=0x003eba; 	J(JZ(loc_2a0e4));	// 91524                  jz      short loc_2A0E4 ;~ 17C5:3EBA
cs=0x17c5;eip=0x003ebc; 	T(XOR(bx, bx));	// 91525                  xor     bx, bx ;~ 17C5:3EBC
loc_2a0ee:
	// 5323 
cs=0x17c5;eip=0x003ebe; 	T(DEC(bx));	// 91528                  dec     bx ;~ 17C5:3EBE
cs=0x17c5;eip=0x003ebf; 	J(JZ(loc_2a108));	// 91529                  jz      short loc_2A108 ;~ 17C5:3EBF
cs=0x17c5;eip=0x003ec1; 	S(IN(al, dx));	// 91530                  in      al, dx ;~ 17C5:3EC1
cs=0x17c5;eip=0x003ec2; 	T(TEST(al, 0x80));	// 91531                  test    al, 80h ;~ 17C5:3EC2
cs=0x17c5;eip=0x003ec4; 	J(JNZ(loc_2a0ee));	// 91532                  jnz     short loc_2A0EE ;~ 17C5:3EC4
loc_2a0f6:
	// 5324 
cs=0x17c5;eip=0x003ec6; 	T(al = 0;);	// 91535                  mov     al, 0 ;~ 17C5:3EC6
cs=0x17c5;eip=0x003ec8; 	S(OUT(0x43, al));	// 91536                  out     43h, al         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3EC8
cs=0x17c5;eip=0x003eca; 	J({;});	// 91537                  jmp     short $+2 ;~ 17C5:3ECA
loc_2a0fc:
	// 5325 
cs=0x17c5;eip=0x003ecc; 	S(IN(al, 0x40));	// 91541                  in      al, 40h         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3ECC
cs=0x17c5;eip=0x003ece; 	J({;});	// 91542                  jmp     short $+2 ;~ 17C5:3ECE
loc_2a100:
	// 5326 
cs=0x17c5;eip=0x003ed0; 	T(bl = al;);	// 91546                  mov     bl, al ;~ 17C5:3ED0
cs=0x17c5;eip=0x003ed2; 	S(IN(al, 0x40));	// 91547                  in      al, 40h         ; Timer 8253-5 (AT: 8254.2). ;~ 17C5:3ED2
cs=0x17c5;eip=0x003ed4; 	J({;});	// 91548                  jmp     short $+2 ;~ 17C5:3ED4
loc_2a106:
	// 5327 
cs=0x17c5;eip=0x003ed6; 	T(bh = al;);	// 91552                  mov     bh, al ;~ 17C5:3ED6
loc_2a108:
	// 5328 
cs=0x17c5;eip=0x003ed8; 	T(ax = bx;);	// 91556                  mov     ax, bx ;~ 17C5:3ED8
cs=0x17c5;eip=0x003eda; 	X(POPF);	// 91557                  popf ;~ 17C5:3EDA
cs=0x17c5;eip=0x003edb; 	J(RETN(0));	// 91558                  retn ;~ 17C5:3EDB

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2a0cd: 	goto loc_2a0cd;
        case m2c::kloc_2a0d7: 	goto loc_2a0d7;
        case m2c::kloc_2a0e2: 	goto loc_2a0e2;
        case m2c::kloc_2a0e4: 	goto loc_2a0e4;
        case m2c::kloc_2a0ee: 	goto loc_2a0ee;
        case m2c::kloc_2a0f6: 	goto loc_2a0f6;
        case m2c::kloc_2a0fc: 	goto loc_2a0fc;
        case m2c::kloc_2a100: 	goto loc_2a100;
        case m2c::kloc_2a106: 	goto loc_2a106;
        case m2c::kloc_2a108: 	goto loc_2a108;
        case m2c::ksub_2a0b7: 	goto sub_2a0b7;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2a10c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2a10c:
    _begin:
cs=0x17c5;eip=0x003edc; 	T(XOR(ah, ah));	// 91567                  xor     ah, ah ;~ 17C5:3EDC
cs=0x17c5;eip=0x003ede; 	S(_INT(0x1A));	// 91568                  int     1Ah             ; CLOCK - GET TIME OF DAY ;~ 17C5:3EDE
cs=0x17c5;eip=0x003ee0; 	T(ax = dx;);	// 91573                  mov     ax, dx ;~ 17C5:3EE0
cs=0x17c5;eip=0x003ee2; 	J(RETN(0));	// 91574                  retn ;~ 17C5:3EE2

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_2a10c: 	goto sub_2a10c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group36(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group36:
    _begin:
sub_2a113:
	// 91582 
cs=0x17c5;eip=0x003ee3; 	X(INC(word_4db3a));	// 91583                  inc     ds:word_4DB3A ;~ 17C5:3EE3
cs=0x17c5;eip=0x003ee7; 	X(INC(byte_4db3c));	// 91584                  inc     ds:byte_4DB3C ;~ 17C5:3EE7
cs=0x17c5;eip=0x003eeb; 	J(CALLF(sub_49a84,0));	// 91585                  call    far ptr sub_49A84 ;~ 17C5:3EEB
seg2623_3ef0_proc:
	// 91589 
cs=0x17c5;eip=0x003ef0; 	J(CALLF(sub_49bb5,0));	// 91589                  call    far ptr sub_49BB5 ;~ 17C5:3EF0
cs=0x17c5;eip=0x003ef5; 	T(OR(ax, ax));	// 91591                  or      ax, ax ;~ 17C5:3EF5
cs=0x17c5;eip=0x003ef7; 	J(JZ(locret_2a131));	// 91592                  jz      short locret_2A131 ;~ 17C5:3EF7
cs=0x17c5;eip=0x003ef9; 	J(JS(loc_2a12e));	// 91593                  js      short loc_2A12E ;~ 17C5:3EF9
cs=0x17c5;eip=0x003efb; 	J(return _group35(m2c::kloc_29f07, _state););	// 91595                  jmp     loc_29F07 ;~ 17C5:3EFB
loc_2a12e:
	// 5329 
cs=0x17c5;eip=0x003efe; 	J(return _group35(m2c::kloc_29f1f, _state););	// 91599                  jmp     loc_29F1F ;~ 17C5:3EFE
locret_2a131:
	// 5330 
cs=0x17c5;eip=0x003f01; 	J(RETN(0));	// 91603                  retn ;~ 17C5:3F01
ret_17c5_3f02:
	// 5331 
cs=0x17c5;eip=0x003f02; 	T(XOR(ax, ax));	// 91605                  xor     ax, ax ;~ 17C5:3F02
cs=0x17c5;eip=0x003f04; 	J(CALL(sub_34884,0));	// 91606                  call    sub_34884 ;~ 17C5:3F04
cs=0x17c5;eip=0x003f07; 	J(CALLF(sub_49a75,0));	// 91607                  call    far ptr sub_49A75 ;~ 17C5:3F07
cs=0x17c5;eip=0x003f0c; 	J(RETN(0));	// 91609                  retn ;~ 17C5:3F0C
ret_17c5_3f0e:
	// 5332 
cs=0x17c5;eip=0x003f0e; 	X(PUSH(bp));	// 91613                  push    bp ;~ 17C5:3F0E
cs=0x17c5;eip=0x003f0f; 	T(bp = sp;);	// 91614                  mov     bp, sp ;~ 17C5:3F0F
cs=0x17c5;eip=0x003f11; 	T(XOR(ax, ax));	// 91615                  xor     ax, ax ;~ 17C5:3F11
cs=0x17c5;eip=0x003f13; 	J(CALL(sub_34884,0));	// 91616                  call    sub_34884 ;~ 17C5:3F13
cs=0x17c5;eip=0x003f16; 	T(ax = 2;);	// 91617                  mov     ax, 2 ;~ 17C5:3F16
cs=0x17c5;eip=0x003f19; 	X(PUSH(ax));	// 91618                  push    ax ;~ 17C5:3F19
cs=0x17c5;eip=0x003f1a; 	T(ax = 0x3C4;);	// 91619                  mov     ax, 3C4h ;~ 17C5:3F1A
cs=0x17c5;eip=0x003f1d; 	X(PUSH(ax));	// 91620                  push    ax ;~ 17C5:3F1D
cs=0x17c5;eip=0x003f1e; 	J(CALL(seg2623_eb34_proc,m2c::kloc_34d64));	// 91621                  call    loc_34D64 ;~ 17C5:3F1E
cs=0x17c5;eip=0x003f21; 	T(ADD(sp, 4));	// 91622                  add     sp, 4 ;~ 17C5:3F21
cs=0x17c5;eip=0x003f24; 	T(ax = 0x0F;);	// 91623                  mov     ax, 0Fh ;~ 17C5:3F24
cs=0x17c5;eip=0x003f27; 	X(PUSH(ax));	// 91624                  push    ax ;~ 17C5:3F27
cs=0x17c5;eip=0x003f28; 	T(ax = 0x3C5;);	// 91625                  mov     ax, 3C5h ;~ 17C5:3F28
cs=0x17c5;eip=0x003f2b; 	X(PUSH(ax));	// 91626                  push    ax ;~ 17C5:3F2B
cs=0x17c5;eip=0x003f2c; 	J(CALL(seg2623_eb34_proc,m2c::kloc_34d64));	// 91627                  call    loc_34D64 ;~ 17C5:3F2C
cs=0x17c5;eip=0x003f2f; 	T(ADD(sp, 4));	// 91628                  add     sp, 4 ;~ 17C5:3F2F
cs=0x17c5;eip=0x003f32; 	T(ax = 8;);	// 91629                  mov     ax, 8 ;~ 17C5:3F32
cs=0x17c5;eip=0x003f35; 	X(PUSH(ax));	// 91630                  push    ax ;~ 17C5:3F35
cs=0x17c5;eip=0x003f36; 	T(ax = 0x3CE;);	// 91631                  mov     ax, 3CEh ;~ 17C5:3F36
cs=0x17c5;eip=0x003f39; 	X(PUSH(ax));	// 91632                  push    ax ;~ 17C5:3F39
cs=0x17c5;eip=0x003f3a; 	J(CALL(seg2623_eb34_proc,m2c::kloc_34d64));	// 91633                  call    loc_34D64 ;~ 17C5:3F3A
cs=0x17c5;eip=0x003f3d; 	T(ADD(sp, 4));	// 91634                  add     sp, 4 ;~ 17C5:3F3D
cs=0x17c5;eip=0x003f40; 	T(SUB(ax, ax));	// 91635                  sub     ax, ax ;~ 17C5:3F40
cs=0x17c5;eip=0x003f42; 	X(PUSH(ax));	// 91636                  push    ax ;~ 17C5:3F42
cs=0x17c5;eip=0x003f43; 	T(ax = 0x3CF;);	// 91637                  mov     ax, 3CFh ;~ 17C5:3F43
cs=0x17c5;eip=0x003f46; 	X(PUSH(ax));	// 91638                  push    ax ;~ 17C5:3F46
cs=0x17c5;eip=0x003f47; 	J(CALL(seg2623_eb34_proc,m2c::kloc_34d64));	// 91639                  call    loc_34D64 ;~ 17C5:3F47
cs=0x17c5;eip=0x003f4a; 	T(ADD(sp, 4));	// 91640                  add     sp, 4 ;~ 17C5:3F4A
cs=0x17c5;eip=0x003f4d; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0C))));	// 91641                  push    word ptr [bp+0Ch] ;~ 17C5:3F4D
cs=0x17c5;eip=0x003f50; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 91642                  push    word ptr [bp+0Ah] ;~ 17C5:3F50
cs=0x17c5;eip=0x003f53; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 91643                  push    word ptr [bp+8] ;~ 17C5:3F53
cs=0x17c5;eip=0x003f56; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 91644                  push    word ptr [bp+6] ;~ 17C5:3F56
cs=0x17c5;eip=0x003f59; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 91645                  push    word ptr [bp+4] ;~ 17C5:3F59
cs=0x17c5;eip=0x003f5c; 	J(CALL(sub_34d30,0));	// 91646                  call    sub_34D30 ;~ 17C5:3F5C
cs=0x17c5;eip=0x003f5f; 	T(ADD(sp, 0x0A));	// 91647                  add     sp, 0Ah ;~ 17C5:3F5F
cs=0x17c5;eip=0x003f62; 	T(ax = 0x0FF;);	// 91648                  mov     ax, 0FFh ;~ 17C5:3F62
cs=0x17c5;eip=0x003f65; 	X(PUSH(ax));	// 91649                  push    ax ;~ 17C5:3F65
cs=0x17c5;eip=0x003f66; 	T(ax = 0x3CF;);	// 91650                  mov     ax, 3CFh ;~ 17C5:3F66
cs=0x17c5;eip=0x003f69; 	X(PUSH(ax));	// 91651                  push    ax ;~ 17C5:3F69
cs=0x17c5;eip=0x003f6a; 	J(CALL(seg2623_eb34_proc,m2c::kloc_34d64));	// 91652                  call    loc_34D64 ;~ 17C5:3F6A
cs=0x17c5;eip=0x003f6d; 	T(ADD(sp, 4));	// 91653                  add     sp, 4 ;~ 17C5:3F6D
cs=0x17c5;eip=0x003f70; 	X(POP(bp));	// 91654                  pop     bp ;~ 17C5:3F70
cs=0x17c5;eip=0x003f71; 	J(RETN(0));	// 91655                  retn ;~ 17C5:3F71

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2a12e: 	goto loc_2a12e;
        case m2c::klocret_2a131: 	goto locret_2a131;
        case m2c::kret_17c5_3f02: 	goto ret_17c5_3f02;
        case m2c::kret_17c5_3f0e: 	goto ret_17c5_3f0e;
        case m2c::kseg2623_3ef0_proc: 	goto seg2623_3ef0_proc;
        case m2c::ksub_2a113: 	goto sub_2a113;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group37(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group37:
    _begin:
sub_2a1a2:
	// 91661 
#undef var_3e
#define var_3e -0x3E
	// 91663 var_3E          = word ptr -3Eh ;~ 17C5:3F72
#undef var_3c
#define var_3c -0x3C
	// 91664 var_3C          = word ptr -3Ch ;~ 17C5:3F72
#undef var_38
#define var_38 -0x38
	// 91665 var_38          = word ptr -38h ;~ 17C5:3F72
#undef var_34
#define var_34 -0x34
	// 91666 var_34          = word ptr -34h ;~ 17C5:3F72
#undef var_32
#define var_32 -0x32
	// 91667 var_32          = word ptr -32h ;~ 17C5:3F72
#undef var_2c
#define var_2c -0x2C
	// 91668 var_2C          = word ptr -2Ch ;~ 17C5:3F72
#undef var_2a
#define var_2a -0x2A
	// 91669 var_2A          = word ptr -2Ah ;~ 17C5:3F72
#undef var_24
#define var_24 -0x24
	// 91670 var_24          = word ptr -24h ;~ 17C5:3F72
#undef var_22
#define var_22 -0x22
	// 91671 var_22          = word ptr -22h ;~ 17C5:3F72
#undef var_1a
#define var_1a -0x1A
	// 91672 var_1A          = word ptr -1Ah ;~ 17C5:3F72
#undef var_14
#define var_14 -0x14
	// 91673 var_14          = word ptr -14h ;~ 17C5:3F72
#undef var_10
#define var_10 -0x10
	// 91674 var_10          = word ptr -10h ;~ 17C5:3F72
#undef var_e
#define var_e -0x0E
	// 91675 var_E           = word ptr -0Eh ;~ 17C5:3F72
cs=0x17c5;eip=0x003f72; 	X(PUSH(bp));	// 91677                  push    bp ;~ 17C5:3F72
cs=0x17c5;eip=0x003f73; 	T(bp = sp;);	// 91678                  mov     bp, sp ;~ 17C5:3F73
cs=0x17c5;eip=0x003f75; 	T(SUB(sp, 0x3E));	// 91679                  sub     sp, 3Eh ;~ 17C5:3F75
cs=0x17c5;eip=0x003f78; 	X(PUSH(di));	// 91680                  push    di ;~ 17C5:3F78
cs=0x17c5;eip=0x003f79; 	X(PUSH(si));	// 91681                  push    si ;~ 17C5:3F79
cs=0x17c5;eip=0x003f7a; 	T(CMP(word_520fc, 0));	// 91682                  cmp     ds:word_520FC, 0 ;~ 17C5:3F7A
cs=0x17c5;eip=0x003f7f; 	J(JNZ(loc_2a227));	// 91683                  jnz     short loc_2A227 ;~ 17C5:3F7F
cs=0x17c5;eip=0x003f81; 	T(SUB(ax, ax));	// 91684                  sub     ax, ax ;~ 17C5:3F81
cs=0x17c5;eip=0x003f83; 	X(word_511d6 = ax;);	// 91685                  mov     ds:word_511D6, ax ;~ 17C5:3F83
cs=0x17c5;eip=0x003f86; 	X(word_4e310 = ax;);	// 91686                  mov     ds:word_4E310, ax ;~ 17C5:3F86
cs=0x17c5;eip=0x003f89; 	X(word_50b74 = ax;);	// 91687                  mov     ds:word_50B74, ax ;~ 17C5:3F89
cs=0x17c5;eip=0x003f8c; 	X(word_4e300 = ax;);	// 91688                  mov     ds:word_4E300, ax ;~ 17C5:3F8C
cs=0x17c5;eip=0x003f8f; 	X(word_4e2fe = ax;);	// 91689                  mov     ds:word_4E2FE, ax ;~ 17C5:3F8F
cs=0x17c5;eip=0x003f92; 	X(word_4e2fc = ax;);	// 91690                  mov     ds:word_4E2FC, ax ;~ 17C5:3F92
cs=0x17c5;eip=0x003f95; 	X(word_4e2fa = ax;);	// 91691                  mov     ds:word_4E2FA, ax ;~ 17C5:3F95
cs=0x17c5;eip=0x003f98; 	T(LES(bx, dword_4f220));	// 91692                  les     bx, ds:dword_4F220 ;~ 17C5:3F98
cs=0x17c5;eip=0x003f9c; 	T(CMP(*(dw*)(raddr(es,bx+0x3E)), ax));	// 91694                  cmp     es:[bx+3Eh], ax ;~ 17C5:3F9C
cs=0x17c5;eip=0x003fa0; 	J(JNZ(loc_2a1ea));	// 91695                  jnz     short loc_2A1EA ;~ 17C5:3FA0
cs=0x17c5;eip=0x003fa2; 	T(ax = word_52100;);	// 91696                  mov     ax, ds:word_52100 ;~ 17C5:3FA2
cs=0x17c5;eip=0x003fa5; 	T(SUB(ax, *(word_48c58)));	// 91697                  sub     ax, word_48C58 ;~ 17C5:3FA5
cs=0x17c5;eip=0x003fa9; 	T(CMP(ax, 0x8000));	// 91698                  cmp     ax, 8000h ;~ 17C5:3FA9
cs=0x17c5;eip=0x003fac; 	J(JNC(loc_2a1e2));	// 91699                  jnb     short loc_2A1E2 ;~ 17C5:3FAC
cs=0x17c5;eip=0x003fae; 	T(SUB(ax, ax));	// 91700                  sub     ax, ax ;~ 17C5:3FAE
cs=0x17c5;eip=0x003fb0; 	J(JMP(loc_2a1e5));	// 91701                  jmp     short loc_2A1E5 ;~ 17C5:3FB0
loc_2a1e2:
	// 5333 
cs=0x17c5;eip=0x003fb2; 	T(ax = 0x8000;);	// 91705                  mov     ax, 8000h ;~ 17C5:3FB2
loc_2a1e5:
	// 5334 
cs=0x17c5;eip=0x003fb5; 	X(word_4e2f8 = ax;);	// 91708                  mov     ds:word_4E2F8, ax ;~ 17C5:3FB5
cs=0x17c5;eip=0x003fb8; 	J(JMP(loc_2a206));	// 91709                  jmp     short loc_2A206 ;~ 17C5:3FB8
loc_2a1ea:
	// 5335 
cs=0x17c5;eip=0x003fba; 	T(CMP(*(dw*)(raddr(es,bx+0x38)), 6));	// 91713                  cmp     word ptr es:[bx+38h], 6 ;~ 17C5:3FBA
cs=0x17c5;eip=0x003fbf; 	J(JNZ(loc_2a1f5));	// 91714                  jnz     short loc_2A1F5 ;~ 17C5:3FBF
cs=0x17c5;eip=0x003fc1; 	T(SUB(ax, ax));	// 91715                  sub     ax, ax ;~ 17C5:3FC1
cs=0x17c5;eip=0x003fc3; 	J(JMP(loc_2a203));	// 91716                  jmp     short loc_2A203 ;~ 17C5:3FC3
loc_2a1f5:
	// 5336 
cs=0x17c5;eip=0x003fc5; 	T(TEST(*(raddr(es,bx+0x38)), 1));	// 91720                  test    byte ptr es:[bx+38h], 1 ;~ 17C5:3FC5
cs=0x17c5;eip=0x003fca; 	J(JZ(loc_2a200));	// 91721                  jz      short loc_2A200 ;~ 17C5:3FCA
cs=0x17c5;eip=0x003fcc; 	T(SUB(ax, ax));	// 91722                  sub     ax, ax ;~ 17C5:3FCC
cs=0x17c5;eip=0x003fce; 	J(JMP(loc_2a203));	// 91723                  jmp     short loc_2A203 ;~ 17C5:3FCE
loc_2a200:
	// 5337 
cs=0x17c5;eip=0x003fd0; 	T(ax = 0x8000;);	// 91727                  mov     ax, 8000h ;~ 17C5:3FD0
loc_2a203:
	// 5338 
cs=0x17c5;eip=0x003fd3; 	X(word_4e2f8 = ax;);	// 91731                  mov     ds:word_4E2F8, ax ;~ 17C5:3FD3
loc_2a206:
	// 5339 
cs=0x17c5;eip=0x003fd6; 	T(bx = word_51378;);	// 91734                  mov     bx, ds:word_51378 ;~ 17C5:3FD6
cs=0x17c5;eip=0x003fda; 	T(cl = 4;);	// 91735                  mov     cl, 4 ;~ 17C5:3FDA
cs=0x17c5;eip=0x003fdc; 	T(SHL(bx, cl));	// 91736                  shl     bx, cl ;~ 17C5:3FDC
cs=0x17c5;eip=0x003fde; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 91737                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:3FDE
cs=0x17c5;eip=0x003fe4; 	J(JZ(loc_2a21b));	// 91738                  jz      short loc_2A21B ;~ 17C5:3FE4
cs=0x17c5;eip=0x003fe6; 	X(ADD(*(db*)(((db*)&word_4e2f8)+1), 4));	// 91739                  add     byte ptr ds:word_4E2F8+1, 4 ;~ 17C5:3FE6
loc_2a21b:
	// 5340 
cs=0x17c5;eip=0x003feb; 	J(CALL(sub_2b641,0));	// 91742                  call    sub_2B641 ;~ 17C5:3FEB
cs=0x17c5;eip=0x003fee; 	J(CALL(sub_2c20b,0));	// 91743                  call    sub_2C20B ;~ 17C5:3FEE
cs=0x17c5;eip=0x003ff1; 	X(word_520fc = 1;);	// 91745                  mov     ds:word_520FC, 1 ;~ 17C5:3FF1
loc_2a227:
	// 5341 
cs=0x17c5;eip=0x003ff7; 	X(word_52242 = 0;);	// 91748                  mov     ds:word_52242, 0 ;~ 17C5:3FF7
cs=0x17c5;eip=0x003ffd; 	J(CALL(sub_34c86,0));	// 91749                  call    sub_34C86 ;~ 17C5:3FFD
cs=0x17c5;eip=0x004000; 	T(OR(ax, ax));	// 91750                  or      ax, ax ;~ 17C5:4000
cs=0x17c5;eip=0x004002; 	J(JZ(loc_2a252));	// 91751                  jz      short loc_2A252 ;~ 17C5:4002
cs=0x17c5;eip=0x004004; 	T(SUB(ax, ax));	// 91752                  sub     ax, ax ;~ 17C5:4004
cs=0x17c5;eip=0x004006; 	X(PUSH(ax));	// 91753                  push    ax ;~ 17C5:4006
cs=0x17c5;eip=0x004007; 	J(CALL(sub_34e30,0));	// 91754                  call    sub_34E30 ;~ 17C5:4007
cs=0x17c5;eip=0x00400a; 	T(ADD(sp, 2));	// 91755                  add     sp, 2 ;~ 17C5:400A
cs=0x17c5;eip=0x00400d; 	X(word_52242 = ax;);	// 91756                  mov     ds:word_52242, ax ;~ 17C5:400D
cs=0x17c5;eip=0x004010; 	T(CMP(word_4991a, 1));	// 91757                  cmp     word_4991A, 1 ;~ 17C5:4010
cs=0x17c5;eip=0x004015; 	J(JNZ(loc_2a252));	// 91758                  jnz     short loc_2A252 ;~ 17C5:4015
cs=0x17c5;eip=0x004017; 	T(SUB(ax, ax));	// 91759                  sub     ax, ax ;~ 17C5:4017
cs=0x17c5;eip=0x004019; 	X(word_4993e = ax;);	// 91760                  mov     word_4993E, ax ;~ 17C5:4019
cs=0x17c5;eip=0x00401c; 	X(word_4991a = ax;);	// 91761                  mov     word_4991A, ax ;~ 17C5:401C
cs=0x17c5;eip=0x00401f; 	X(word_520c0 = ax;);	// 91762                  mov     ds:word_520C0, ax ;~ 17C5:401F
loc_2a252:
	// 5342 
cs=0x17c5;eip=0x004022; 	J(CALL(sub_34c86,0));	// 91766                  call    sub_34C86 ;~ 17C5:4022
cs=0x17c5;eip=0x004025; 	T(OR(ax, ax));	// 91767                  or      ax, ax ;~ 17C5:4025
cs=0x17c5;eip=0x004027; 	J(JZ(loc_2a264));	// 91768                  jz      short loc_2A264 ;~ 17C5:4027
cs=0x17c5;eip=0x004029; 	T(SUB(ax, ax));	// 91769                  sub     ax, ax ;~ 17C5:4029
cs=0x17c5;eip=0x00402b; 	X(PUSH(ax));	// 91770                  push    ax ;~ 17C5:402B
cs=0x17c5;eip=0x00402c; 	J(CALL(sub_34e30,0));	// 91771                  call    sub_34E30 ;~ 17C5:402C
cs=0x17c5;eip=0x00402f; 	T(ADD(sp, 2));	// 91772                  add     sp, 2 ;~ 17C5:402F
cs=0x17c5;eip=0x004032; 	J(JMP(loc_2a252));	// 91773                  jmp     short loc_2A252 ;~ 17C5:4032
loc_2a264:
	// 5343 
cs=0x17c5;eip=0x004034; 	T(ax = word_52242;);	// 91777                  mov     ax, ds:word_52242 ;~ 17C5:4034
cs=0x17c5;eip=0x004037; 	J(JMP(loc_2a41b));	// 91778                  jmp     loc_2A41B ;~ 17C5:4037
loc_2a26a:
	// 5344 
cs=0x17c5;eip=0x00403a; 	T(ax = 0x64;);	// 91782                  mov     ax, 64h ; 'd' ;~ 17C5:403A
cs=0x17c5;eip=0x00403d; 	X(PUSH(ax));	// 91783                  push    ax ;~ 17C5:403D
cs=0x17c5;eip=0x00403e; 	T(SUB(ax, ax));	// 91784                  sub     ax, ax ;~ 17C5:403E
cs=0x17c5;eip=0x004040; 	X(PUSH(ax));	// 91785                  push    ax ;~ 17C5:4040
cs=0x17c5;eip=0x004041; 	T(ax = word_4e310;);	// 91786                  mov     ax, ds:word_4E310 ;~ 17C5:4041
cs=0x17c5;eip=0x004044; 	T(SUB(ax, 0x0A));	// 91787                  sub     ax, 0Ah ;~ 17C5:4044
cs=0x17c5;eip=0x004047; 	X(PUSH(ax));	// 91788                  push    ax ;~ 17C5:4047
cs=0x17c5;eip=0x004048; 	J(CALL(sub_33194,0));	// 91789                  call    sub_33194 ;~ 17C5:4048
cs=0x17c5;eip=0x00404b; 	T(ADD(sp, 6));	// 91790                  add     sp, 6 ;~ 17C5:404B
cs=0x17c5;eip=0x00404e; 	X(word_4e310 = ax;);	// 91791                  mov     ds:word_4E310, ax ;~ 17C5:404E
cs=0x17c5;eip=0x004051; 	J(CALL(sub_2c20b,0));	// 91792                  call    sub_2C20B ;~ 17C5:4051
cs=0x17c5;eip=0x004054; 	J(JMP(loc_2a46e));	// 91793                  jmp     loc_2A46E ;~ 17C5:4054
loc_2a287:
	// 5345 
cs=0x17c5;eip=0x004057; 	T(ax = 0x64;);	// 91797                  mov     ax, 64h ; 'd' ;~ 17C5:4057
cs=0x17c5;eip=0x00405a; 	X(PUSH(ax));	// 91798                  push    ax ;~ 17C5:405A
cs=0x17c5;eip=0x00405b; 	T(SUB(ax, ax));	// 91799                  sub     ax, ax ;~ 17C5:405B
cs=0x17c5;eip=0x00405d; 	X(PUSH(ax));	// 91800                  push    ax ;~ 17C5:405D
cs=0x17c5;eip=0x00405e; 	T(CMP(word_4e310, 0x0A));	// 91801                  cmp     ds:word_4E310, 0Ah ;~ 17C5:405E
cs=0x17c5;eip=0x004063; 	J(JGE(loc_2a29a));	// 91802                  jge     short loc_2A29A ;~ 17C5:4063
cs=0x17c5;eip=0x004065; 	T(ax = 5;);	// 91803                  mov     ax, 5 ;~ 17C5:4065
cs=0x17c5;eip=0x004068; 	J(JMP(loc_2a29d));	// 91804                  jmp     short loc_2A29D ;~ 17C5:4068
loc_2a29a:
	// 5346 
cs=0x17c5;eip=0x00406a; 	T(ax = 0x0A;);	// 91808                  mov     ax, 0Ah ;~ 17C5:406A
loc_2a29d:
	// 5347 
cs=0x17c5;eip=0x00406d; 	T(ADD(ax, word_4e310));	// 91811                  add     ax, ds:word_4E310 ;~ 17C5:406D
cs=0x17c5;eip=0x004071; 	X(PUSH(ax));	// 91812                  push    ax ;~ 17C5:4071
cs=0x17c5;eip=0x004072; 	J(CALL(sub_33194,0));	// 91813                  call    sub_33194 ;~ 17C5:4072
cs=0x17c5;eip=0x004075; 	T(ADD(sp, 6));	// 91814                  add     sp, 6 ;~ 17C5:4075
cs=0x17c5;eip=0x004078; 	X(word_4e310 = ax;);	// 91815                  mov     ds:word_4E310, ax ;~ 17C5:4078
cs=0x17c5;eip=0x00407b; 	J(CALL(sub_2c20b,0));	// 91816                  call    sub_2C20B ;~ 17C5:407B
cs=0x17c5;eip=0x00407e; 	X(AND(*(db*)(&word_4f42e), 0x0F7));	// 91817                  and     byte ptr ds:word_4F42E, 0F7h ;~ 17C5:407E
cs=0x17c5;eip=0x004083; 	J(JMP(loc_2a46e));	// 91818                  jmp     loc_2A46E ;~ 17C5:4083
loc_2a2b6:
	// 5348 
cs=0x17c5;eip=0x004086; 	X(word_4e310 = 0x90;);	// 91822                  mov     ds:word_4E310, 90h ;~ 17C5:4086
cs=0x17c5;eip=0x00408c; 	J(CALL(sub_2c20b,0));	// 91823                  call    sub_2C20B ;~ 17C5:408C
cs=0x17c5;eip=0x00408f; 	X(AND(*(db*)(&word_4f42e), 0x0F7));	// 91824                  and     byte ptr ds:word_4F42E, 0F7h ;~ 17C5:408F
cs=0x17c5;eip=0x004094; 	J(JMP(loc_2a46e));	// 91825                  jmp     loc_2A46E ;~ 17C5:4094
loc_2a2c7:
	// 5349 
cs=0x17c5;eip=0x004097; 	X(word_4e310 = 0x64;);	// 91829                  mov     ds:word_4E310, 64h ; 'd' ;~ 17C5:4097
cs=0x17c5;eip=0x00409d; 	J(CALL(sub_2c20b,0));	// 91830                  call    sub_2C20B ;~ 17C5:409D
cs=0x17c5;eip=0x0040a0; 	X(AND(*(db*)(&word_4f42e), 0x0F7));	// 91831                  and     byte ptr ds:word_4F42E, 0F7h ;~ 17C5:40A0
cs=0x17c5;eip=0x0040a5; 	J(JMP(loc_2a2f5));	// 91832                  jmp     short loc_2A2F5 ;~ 17C5:40A5
loc_2a2d7:
	// 5350 
cs=0x17c5;eip=0x0040a7; 	X(word_4e310 = 0;);	// 91836                  mov     ds:word_4E310, 0 ;~ 17C5:40A7
cs=0x17c5;eip=0x0040ad; 	T(SUB(ax, ax));	// 91837                  sub     ax, ax ;~ 17C5:40AD
cs=0x17c5;eip=0x0040af; 	X(PUSH(ax));	// 91838                  push    ax ;~ 17C5:40AF
cs=0x17c5;eip=0x0040b0; 	T(ax = 0x10;);	// 91839                  mov     ax, 10h ;~ 17C5:40B0
cs=0x17c5;eip=0x0040b3; 	X(PUSH(ax));	// 91840                  push    ax ;~ 17C5:40B3
cs=0x17c5;eip=0x0040b4; 	J(CALL(sub_33c65,0));	// 91841                  call    sub_33C65 ;~ 17C5:40B4
cs=0x17c5;eip=0x0040b7; 	T(ADD(sp, 4));	// 91843                  add     sp, 4 ;~ 17C5:40B7
cs=0x17c5;eip=0x0040ba; 	J(CALL(sub_2c20b,0));	// 91844                  call    sub_2C20B ;~ 17C5:40BA
cs=0x17c5;eip=0x0040bd; 	J(JMP(loc_2a46e));	// 91845                  jmp     loc_2A46E ;~ 17C5:40BD
loc_2a2f0:
	// 5351 
cs=0x17c5;eip=0x0040c0; 	X(XOR(*(db*)(&word_4f42e), 8));	// 91849                  xor     byte ptr ds:word_4F42E, 8 ;~ 17C5:40C0
loc_2a2f5:
	// 5352 
cs=0x17c5;eip=0x0040c5; 	T(TEST(*(db*)(&word_4f42e), 8));	// 91852                  test    byte ptr ds:word_4F42E, 8 ;~ 17C5:40C5
cs=0x17c5;eip=0x0040ca; 	J(JNZ(loc_2a31e));	// 91853                  jnz     short loc_2A31E ;~ 17C5:40CA
cs=0x17c5;eip=0x0040cc; 	T(CMP(word_520ee, 0));	// 91854                  cmp     ds:word_520EE, 0 ;~ 17C5:40CC
cs=0x17c5;eip=0x0040d1; 	J(JZ(loc_2a31e));	// 91855                  jz      short loc_2A31E ;~ 17C5:40D1
cs=0x17c5;eip=0x0040d3; 	T(CMP(word_4e310, 0x64));	// 91856                  cmp     ds:word_4E310, 64h ; 'd' ;~ 17C5:40D3
cs=0x17c5;eip=0x0040d8; 	J(JNZ(loc_2a31e));	// 91857                  jnz     short loc_2A31E ;~ 17C5:40D8
cs=0x17c5;eip=0x0040da; 	X(word_50b74 = 0x546;);	// 91858                  mov     ds:word_50B74, 546h ;~ 17C5:40DA
cs=0x17c5;eip=0x0040e0; 	T(ax = 2;);	// 91859                  mov     ax, 2 ;~ 17C5:40E0
cs=0x17c5;eip=0x0040e3; 	X(PUSH(ax));	// 91860                  push    ax ;~ 17C5:40E3
cs=0x17c5;eip=0x0040e4; 	T(ax = 0x1C;);	// 91861                  mov     ax, 1Ch ;~ 17C5:40E4
cs=0x17c5;eip=0x0040e7; 	X(PUSH(ax));	// 91862                  push    ax ;~ 17C5:40E7
cs=0x17c5;eip=0x0040e8; 	J(CALL(sub_33c65,0));	// 91863                  call    sub_33C65 ;~ 17C5:40E8
cs=0x17c5;eip=0x0040eb; 	T(ADD(sp, 4));	// 91865                  add     sp, 4 ;~ 17C5:40EB
loc_2a31e:
	// 5353 
cs=0x17c5;eip=0x0040ee; 	J(JMP(loc_2a46e));	// 91869                  jmp     loc_2A46E ;~ 17C5:40EE
loc_2a321:
	// 5354 
cs=0x17c5;eip=0x0040f1; 	T(CMP(word_4e312, 0));	// 91873                  cmp     ds:word_4E312, 0 ;~ 17C5:40F1
cs=0x17c5;eip=0x0040f6; 	J(JNZ(loc_2a333));	// 91874                  jnz     short loc_2A333 ;~ 17C5:40F6
cs=0x17c5;eip=0x0040f8; 	J(CALLF(sub_3888b,0));	// 91875                  call    sub_3888B ;~ 17C5:40F8
cs=0x17c5;eip=0x0040fd; 	X(word_4e312 = 0x28;);	// 91876                  mov     ds:word_4E312, 28h ; '(' ;~ 17C5:40FD
loc_2a333:
	// 5355 
cs=0x17c5;eip=0x004103; 	J(JMP(loc_2a46e));	// 91879                  jmp     loc_2A46E ;~ 17C5:4103
loc_2a336:
	// 5356 
cs=0x17c5;eip=0x004106; 	T(ax = 1;);	// 91884                  mov     ax, 1 ;~ 17C5:4106
cs=0x17c5;eip=0x004109; 	X(PUSH(ax));	// 91885                  push    ax ;~ 17C5:4109
cs=0x17c5;eip=0x00410a; 	J(CALL(sub_27d67,0));	// 91886                  call    sub_27D67 ;~ 17C5:410A
cs=0x17c5;eip=0x00410d; 	T(ADD(sp, 2));	// 91888                  add     sp, 2 ;~ 17C5:410D
cs=0x17c5;eip=0x004110; 	X(byte_48b64 = 0;);	// 91889                  mov     byte_48B64, 0 ;~ 17C5:4110
cs=0x17c5;eip=0x004115; 	J(JMP(loc_2a46e));	// 91890                  jmp     loc_2A46E ;~ 17C5:4115
loc_2a348:
	// 5357 
cs=0x17c5;eip=0x004118; 	T(CMP(word_492f2, 0));	// 91894                  cmp     word_492F2, 0 ;~ 17C5:4118
cs=0x17c5;eip=0x00411d; 	J(JZ(loc_2a379));	// 91895                  jz      short loc_2A379 ;~ 17C5:411D
cs=0x17c5;eip=0x00411f; 	T(ax = 0x67;);	// 91896                  mov     ax, 67h ; 'g' ;~ 17C5:411F
cs=0x17c5;eip=0x004122; 	X(PUSH(ax));	// 91897                  push    ax ;~ 17C5:4122
cs=0x17c5;eip=0x004123; 	T(ax = 0x140;);	// 91898                  mov     ax, 140h ;~ 17C5:4123
cs=0x17c5;eip=0x004126; 	X(PUSH(ax));	// 91899                  push    ax ;~ 17C5:4126
cs=0x17c5;eip=0x004127; 	T(ax = 0x61;);	// 91900                  mov     ax, 61h ; 'a' ;~ 17C5:4127
cs=0x17c5;eip=0x00412a; 	X(PUSH(ax));	// 91901                  push    ax ;~ 17C5:412A
cs=0x17c5;eip=0x00412b; 	T(SUB(ax, ax));	// 91902                  sub     ax, ax ;~ 17C5:412B
cs=0x17c5;eip=0x00412d; 	X(PUSH(ax));	// 91903                  push    ax ;~ 17C5:412D
cs=0x17c5;eip=0x00412e; 	T(bx = word_4e594;);	// 91904                  mov     bx, ds:word_4E594 ;~ 17C5:412E
cs=0x17c5;eip=0x004132; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 91905                  push    word ptr [bx] ;~ 17C5:4132
cs=0x17c5;eip=0x004134; 	T(ax = 0x61;);	// 91906                  mov     ax, 61h ; 'a' ;~ 17C5:4134
cs=0x17c5;eip=0x004137; 	X(PUSH(ax));	// 91907                  push    ax ;~ 17C5:4137
cs=0x17c5;eip=0x004138; 	T(SUB(ax, ax));	// 91908                  sub     ax, ax ;~ 17C5:4138
cs=0x17c5;eip=0x00413a; 	X(PUSH(ax));	// 91909                  push    ax ;~ 17C5:413A
cs=0x17c5;eip=0x00413b; 	T(bx = word_4e564;);	// 91910                  mov     bx, ds:word_4E564 ;~ 17C5:413B
cs=0x17c5;eip=0x00413f; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 91911                  push    word ptr [bx] ;~ 17C5:413F
cs=0x17c5;eip=0x004141; 	J(CALLF(sub_49a70,0));	// 91912                  call    far ptr sub_49A70 ;~ 17C5:4141
cs=0x17c5;eip=0x004146; 	T(ADD(sp, 0x10));	// 91914                  add     sp, 10h ;~ 17C5:4146
loc_2a379:
	// 5358 
cs=0x17c5;eip=0x004149; 	T(SUB(ax, ax));	// 91917                  sub     ax, ax ;~ 17C5:4149
cs=0x17c5;eip=0x00414b; 	X(PUSH(ax));	// 91918                  push    ax ;~ 17C5:414B
cs=0x17c5;eip=0x00414c; 	J(CALL(sub_30074,0));	// 91919                  call    sub_30074 ;~ 17C5:414C
cs=0x17c5;eip=0x00414f; 	T(ADD(sp, 2));	// 91920                  add     sp, 2 ;~ 17C5:414F
cs=0x17c5;eip=0x004152; 	T(ax = 0x0C7;);	// 91921                  mov     ax, 0C7h ;~ 17C5:4152
cs=0x17c5;eip=0x004155; 	X(PUSH(ax));	// 91922                  push    ax ;~ 17C5:4155
cs=0x17c5;eip=0x004156; 	T(ax = 0x13F;);	// 91923                  mov     ax, 13Fh ;~ 17C5:4156
cs=0x17c5;eip=0x004159; 	X(PUSH(ax));	// 91924                  push    ax ;~ 17C5:4159
cs=0x17c5;eip=0x00415a; 	T(SUB(ax, ax));	// 91925                  sub     ax, ax ;~ 17C5:415A
cs=0x17c5;eip=0x00415c; 	X(PUSH(ax));	// 91926                  push    ax ;~ 17C5:415C
cs=0x17c5;eip=0x00415d; 	X(PUSH(ax));	// 91927                  push    ax ;~ 17C5:415D
cs=0x17c5;eip=0x00415e; 	J(CALL(sub_3008d,0));	// 91928                  call    sub_3008D ;~ 17C5:415E
cs=0x17c5;eip=0x004161; 	T(ADD(sp, 8));	// 91930                  add     sp, 8 ;~ 17C5:4161
cs=0x17c5;eip=0x004164; 	T(SUB(ax, ax));	// 91931                  sub     ax, ax ;~ 17C5:4164
cs=0x17c5;eip=0x004166; 	X(PUSH(ax));	// 91932                  push    ax ;~ 17C5:4166
cs=0x17c5;eip=0x004167; 	T(ax = 7;);	// 91933                  mov     ax, 7 ;~ 17C5:4167
cs=0x17c5;eip=0x00416a; 	X(PUSH(ax));	// 91934                  push    ax ;~ 17C5:416A
cs=0x17c5;eip=0x00416b; 	T(ax = 0x0C;);	// 91935                  mov     ax, 0Ch ;~ 17C5:416B
cs=0x17c5;eip=0x00416e; 	X(PUSH(ax));	// 91936                  push    ax ;~ 17C5:416E
cs=0x17c5;eip=0x00416f; 	T(ax = 0x37;);	// 91937                  mov     ax, 37h ; '7' ;~ 17C5:416F
cs=0x17c5;eip=0x004172; 	X(PUSH(ax));	// 91938                  push    ax ;~ 17C5:4172
cs=0x17c5;eip=0x004173; 	T(ax = 0x71;);	// 91939                  mov     ax, 71h ; 'q' ;~ 17C5:4173
cs=0x17c5;eip=0x004176; 	X(PUSH(ax));	// 91940                  push    ax ;~ 17C5:4176
cs=0x17c5;eip=0x004177; 	T(SUB(ax, ax));	// 91941                  sub     ax, ax ;~ 17C5:4177
cs=0x17c5;eip=0x004179; 	X(PUSH(ax));	// 91942                  push    ax ;~ 17C5:4179
cs=0x17c5;eip=0x00417a; 	X(PUSH(ax));	// 91943                  push    ax ;~ 17C5:417A
cs=0x17c5;eip=0x00417b; 	J(CALL(sub_30af8,0));	// 91944                  call    sub_30AF8 ;~ 17C5:417B
cs=0x17c5;eip=0x00417e; 	T(ADD(sp, 0x0E));	// 91946                  add     sp, 0Eh ;~ 17C5:417E
cs=0x17c5;eip=0x004181; 	J(CALL(sub_2c36b,0));	// 91947                  call    sub_2C36B ;~ 17C5:4181
cs=0x17c5;eip=0x004184; 	T(CMP(word_492f2, 0));	// 91949                  cmp     word_492F2, 0 ;~ 17C5:4184
cs=0x17c5;eip=0x004189; 	J(JZ(loc_2a412));	// 91950                  jz      short loc_2A412 ;~ 17C5:4189
cs=0x17c5;eip=0x00418b; 	T(ax = 0x67;);	// 91951                  mov     ax, 67h ; 'g' ;~ 17C5:418B
cs=0x17c5;eip=0x00418e; 	X(PUSH(ax));	// 91952                  push    ax ;~ 17C5:418E
cs=0x17c5;eip=0x00418f; 	T(ax = 0x140;);	// 91953                  mov     ax, 140h ;~ 17C5:418F
cs=0x17c5;eip=0x004192; 	X(PUSH(ax));	// 91954                  push    ax ;~ 17C5:4192
cs=0x17c5;eip=0x004193; 	T(ax = 0x61;);	// 91955                  mov     ax, 61h ; 'a' ;~ 17C5:4193
cs=0x17c5;eip=0x004196; 	X(PUSH(ax));	// 91956                  push    ax ;~ 17C5:4196
cs=0x17c5;eip=0x004197; 	T(SUB(ax, ax));	// 91957                  sub     ax, ax ;~ 17C5:4197
cs=0x17c5;eip=0x004199; 	X(PUSH(ax));	// 91958                  push    ax ;~ 17C5:4199
cs=0x17c5;eip=0x00419a; 	T(bx = word_4e564;);	// 91959                  mov     bx, ds:word_4E564 ;~ 17C5:419A
cs=0x17c5;eip=0x00419e; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 91960                  push    word ptr [bx] ;~ 17C5:419E
cs=0x17c5;eip=0x0041a0; 	T(ax = 0x61;);	// 91961                  mov     ax, 61h ; 'a' ;~ 17C5:41A0
cs=0x17c5;eip=0x0041a3; 	X(PUSH(ax));	// 91962                  push    ax ;~ 17C5:41A3
cs=0x17c5;eip=0x0041a4; 	T(SUB(ax, ax));	// 91963                  sub     ax, ax ;~ 17C5:41A4
cs=0x17c5;eip=0x0041a6; 	X(PUSH(ax));	// 91964                  push    ax ;~ 17C5:41A6
cs=0x17c5;eip=0x0041a7; 	T(bx = word_4e594;);	// 91965                  mov     bx, ds:word_4E594 ;~ 17C5:41A7
cs=0x17c5;eip=0x0041ab; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 91966                  push    word ptr [bx] ;~ 17C5:41AB
cs=0x17c5;eip=0x0041ad; 	J(CALLF(sub_49a70,0));	// 91967                  call    far ptr sub_49A70 ;~ 17C5:41AD
cs=0x17c5;eip=0x0041b2; 	T(ADD(sp, 0x10));	// 91969                  add     sp, 10h ;~ 17C5:41B2
cs=0x17c5;eip=0x0041b5; 	T(ax = 0x67;);	// 91970                  mov     ax, 67h ; 'g' ;~ 17C5:41B5
cs=0x17c5;eip=0x0041b8; 	X(PUSH(ax));	// 91971                  push    ax ;~ 17C5:41B8
cs=0x17c5;eip=0x0041b9; 	T(ax = 0x140;);	// 91972                  mov     ax, 140h ;~ 17C5:41B9
cs=0x17c5;eip=0x0041bc; 	X(PUSH(ax));	// 91973                  push    ax ;~ 17C5:41BC
cs=0x17c5;eip=0x0041bd; 	T(ax = 0x61;);	// 91974                  mov     ax, 61h ; 'a' ;~ 17C5:41BD
cs=0x17c5;eip=0x0041c0; 	X(PUSH(ax));	// 91975                  push    ax ;~ 17C5:41C0
cs=0x17c5;eip=0x0041c1; 	T(SUB(ax, ax));	// 91976                  sub     ax, ax ;~ 17C5:41C1
cs=0x17c5;eip=0x0041c3; 	X(PUSH(ax));	// 91977                  push    ax ;~ 17C5:41C3
cs=0x17c5;eip=0x0041c4; 	T(bx = word_4e57c;);	// 91978                  mov     bx, ds:word_4E57C ;~ 17C5:41C4
cs=0x17c5;eip=0x0041c8; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 91979                  push    word ptr [bx] ;~ 17C5:41C8
cs=0x17c5;eip=0x0041ca; 	T(ax = 0x61;);	// 91980                  mov     ax, 61h ; 'a' ;~ 17C5:41CA
cs=0x17c5;eip=0x0041cd; 	X(PUSH(ax));	// 91981                  push    ax ;~ 17C5:41CD
cs=0x17c5;eip=0x0041ce; 	T(SUB(ax, ax));	// 91982                  sub     ax, ax ;~ 17C5:41CE
cs=0x17c5;eip=0x0041d0; 	X(PUSH(ax));	// 91983                  push    ax ;~ 17C5:41D0
cs=0x17c5;eip=0x0041d1; 	T(bx = word_4e594;);	// 91984                  mov     bx, ds:word_4E594 ;~ 17C5:41D1
cs=0x17c5;eip=0x0041d5; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 91985                  push    word ptr [bx] ;~ 17C5:41D5
cs=0x17c5;eip=0x0041d7; 	J(CALLF(sub_49a70,0));	// 91986                  call    far ptr sub_49A70 ;~ 17C5:41D7
cs=0x17c5;eip=0x0041dc; 	T(ADD(sp, 0x10));	// 91988                  add     sp, 10h ;~ 17C5:41DC
cs=0x17c5;eip=0x0041df; 	J(CALL(sub_2c20b,0));	// 91989                  call    sub_2C20B ;~ 17C5:41DF
loc_2a412:
	// 5359 
cs=0x17c5;eip=0x0041e2; 	J(JMP(loc_2a46e));	// 91992                  jmp     short loc_2A46E ;~ 17C5:41E2
loc_2a414:
	// 5360 
cs=0x17c5;eip=0x0041e4; 	J(CALL(sub_2c36b,0));	// 91996                  call    sub_2C36B ;~ 17C5:41E4
cs=0x17c5;eip=0x0041e7; 	J(JMP(loc_2a46e));	// 91998                  jmp     short loc_2A46E ;~ 17C5:41E7
ret_17c5_41e9:
	// 5361 
cs=0x17c5;eip=0x0041e9; 	J(JMP(loc_2a46e));	// 92000                  jmp     short loc_2A46E ;~ 17C5:41E9
loc_2a41b:
	// 5362 
cs=0x17c5;eip=0x0041eb; 	T(CMP(ax, 0x1000));	// 92004                  cmp     ax, 1000h ;~ 17C5:41EB
cs=0x17c5;eip=0x0041ee; 	J(JNZ(loc_2a423));	// 92005                  jnz     short loc_2A423 ;~ 17C5:41EE
cs=0x17c5;eip=0x0041f0; 	J(JMP(loc_2a336));	// 92007                  jmp     loc_2A336 ;~ 17C5:41F0
loc_2a423:
	// 5363 
cs=0x17c5;eip=0x0041f3; 	J(JA(loc_2a447));	// 92011                  ja      short loc_2A447 ;~ 17C5:41F3
cs=0x17c5;eip=0x0041f5; 	T(CMP(ax, 0x0C2D));	// 92012                  cmp     ax, 0C2Dh ;~ 17C5:41F5
cs=0x17c5;eip=0x0041f8; 	J(JNZ(loc_2a42d));	// 92013                  jnz     short loc_2A42D ;~ 17C5:41F8
cs=0x17c5;eip=0x0041fa; 	J(JMP(loc_2a26a));	// 92014                  jmp     loc_2A26A ;~ 17C5:41FA
loc_2a42d:
	// 5364 
cs=0x17c5;eip=0x0041fd; 	T(CMP(ax, 0x0C5F));	// 92018                  cmp     ax, 0C5Fh ;~ 17C5:41FD
cs=0x17c5;eip=0x004200; 	J(JNZ(loc_2a435));	// 92019                  jnz     short loc_2A435 ;~ 17C5:4200
cs=0x17c5;eip=0x004202; 	J(JMP(loc_2a2d7));	// 92020                  jmp     loc_2A2D7 ;~ 17C5:4202
loc_2a435:
	// 5365 
cs=0x17c5;eip=0x004205; 	T(CMP(ax, 0x0D2B));	// 92024                  cmp     ax, 0D2Bh ;~ 17C5:4205
cs=0x17c5;eip=0x004208; 	J(JNZ(loc_2a43d));	// 92025                  jnz     short loc_2A43D ;~ 17C5:4208
cs=0x17c5;eip=0x00420a; 	J(JMP(loc_2a2c7));	// 92026                  jmp     loc_2A2C7 ;~ 17C5:420A
loc_2a43d:
	// 5366 
cs=0x17c5;eip=0x00420d; 	T(CMP(ax, 0x0D3D));	// 92030                  cmp     ax, 0D3Dh ;~ 17C5:420D
cs=0x17c5;eip=0x004210; 	J(JNZ(loc_2a445));	// 92031                  jnz     short loc_2A445 ;~ 17C5:4210
cs=0x17c5;eip=0x004212; 	J(JMP(loc_2a287));	// 92032                  jmp     loc_2A287 ;~ 17C5:4212
loc_2a445:
	// 5367 
cs=0x17c5;eip=0x004215; 	J(JMP(loc_2a46e));	// 92036                  jmp     short loc_2A46E ;~ 17C5:4215
loc_2a447:
	// 5368 
cs=0x17c5;eip=0x004217; 	T(CMP(ax, 0x1900));	// 92040                  cmp     ax, 1900h ;~ 17C5:4217
cs=0x17c5;eip=0x00421a; 	J(JZ(loc_2a414));	// 92041                  jz      short loc_2A414 ;~ 17C5:421A
cs=0x17c5;eip=0x00421c; 	T(CMP(ax, 0x1E61));	// 92042                  cmp     ax, 1E61h ;~ 17C5:421C
cs=0x17c5;eip=0x00421f; 	J(JNZ(loc_2a454));	// 92043                  jnz     short loc_2A454 ;~ 17C5:421F
cs=0x17c5;eip=0x004221; 	J(JMP(loc_2a2b6));	// 92044                  jmp     loc_2A2B6 ;~ 17C5:4221
loc_2a454:
	// 5369 
cs=0x17c5;eip=0x004224; 	T(CMP(ax, 0x2400));	// 92048                  cmp     ax, 2400h ;~ 17C5:4224
cs=0x17c5;eip=0x004227; 	J(JNZ(loc_2a45c));	// 92049                  jnz     short loc_2A45C ;~ 17C5:4227
cs=0x17c5;eip=0x004229; 	J(JMP(loc_2a321));	// 92050                  jmp     loc_2A321 ;~ 17C5:4229
loc_2a45c:
	// 5370 
cs=0x17c5;eip=0x00422c; 	T(CMP(ax, 0x3000));	// 92054                  cmp     ax, 3000h ;~ 17C5:422C
cs=0x17c5;eip=0x00422f; 	J(JNZ(loc_2a464));	// 92055                  jnz     short loc_2A464 ;~ 17C5:422F
cs=0x17c5;eip=0x004231; 	J(JMP(loc_2a348));	// 92056                  jmp     loc_2A348 ;~ 17C5:4231
loc_2a464:
	// 5371 
cs=0x17c5;eip=0x004234; 	T(CMP(ax, 0x3062));	// 92060                  cmp     ax, 3062h ;~ 17C5:4234
cs=0x17c5;eip=0x004237; 	J(JNZ(loc_2a46c));	// 92061                  jnz     short loc_2A46C ;~ 17C5:4237
cs=0x17c5;eip=0x004239; 	J(JMP(loc_2a2f0));	// 92062                  jmp     loc_2A2F0 ;~ 17C5:4239
loc_2a46c:
	// 5372 
cs=0x17c5;eip=0x00423c; 	J({;});	// 92066                  jmp     short $+2 ;~ 17C5:423C
loc_2a46e:
	// 5373 
cs=0x17c5;eip=0x00423e; 	T(CMP(word_4e312, 0));	// 92071                  cmp     ds:word_4E312, 0 ;~ 17C5:423E
cs=0x17c5;eip=0x004243; 	J(JZ(loc_2a479));	// 92072                  jz      short loc_2A479 ;~ 17C5:4243
cs=0x17c5;eip=0x004245; 	X(DEC(word_4e312));	// 92073                  dec     ds:word_4E312 ;~ 17C5:4245
loc_2a479:
	// 5374 
cs=0x17c5;eip=0x004249; 	T(CMP(word_4e310, 0));	// 92076                  cmp     ds:word_4E310, 0 ;~ 17C5:4249
cs=0x17c5;eip=0x00424e; 	J(JZ(loc_2a495));	// 92077                  jz      short loc_2A495 ;~ 17C5:424E
cs=0x17c5;eip=0x004250; 	T(CMP(word_511d6, 0));	// 92078                  cmp     ds:word_511D6, 0 ;~ 17C5:4250
cs=0x17c5;eip=0x004255; 	J(JNZ(loc_2a495));	// 92079                  jnz     short loc_2A495 ;~ 17C5:4255
cs=0x17c5;eip=0x004257; 	T(ax = 2;);	// 92081                  mov     ax, 2 ;~ 17C5:4257
cs=0x17c5;eip=0x00425a; 	X(PUSH(ax));	// 92082                  push    ax ;~ 17C5:425A
cs=0x17c5;eip=0x00425b; 	T(ax = 0x0E;);	// 92083                  mov     ax, 0Eh ;~ 17C5:425B
cs=0x17c5;eip=0x00425e; 	X(PUSH(ax));	// 92084                  push    ax ;~ 17C5:425E
cs=0x17c5;eip=0x00425f; 	J(CALL(sub_33c65,0));	// 92085                  call    sub_33C65 ;~ 17C5:425F
cs=0x17c5;eip=0x004262; 	T(ADD(sp, 4));	// 92087                  add     sp, 4 ;~ 17C5:4262
loc_2a495:
	// 5375 
cs=0x17c5;eip=0x004265; 	T(CMP(word_492ee, 0));	// 92091                  cmp     word_492EE, 0 ;~ 17C5:4265
cs=0x17c5;eip=0x00426a; 	J(JZ(loc_2a4a8));	// 92092                  jz      short loc_2A4A8 ;~ 17C5:426A
cs=0x17c5;eip=0x00426c; 	X(*(db*)(&word_4e1c4) = 0;);	// 92093                  mov     byte ptr ds:word_4E1C4, 0 ;~ 17C5:426C
cs=0x17c5;eip=0x004271; 	X(*(db*)(((db*)&word_4e1c4)+1) = 0;);	// 92094                  mov     byte ptr ds:word_4E1C4+1, 0 ;~ 17C5:4271
cs=0x17c5;eip=0x004276; 	J(JMP(loc_2a4e6));	// 92095                  jmp     short loc_2A4E6 ;~ 17C5:4276
loc_2a4a8:
	// 5376 
cs=0x17c5;eip=0x004278; 	T(LES(bx, dword_528d6));	// 92099                  les     bx, ds:dword_528D6 ;~ 17C5:4278
cs=0x17c5;eip=0x00427c; 	T(CMP(*(dw*)(raddr(es,bx+0x72)), 0));	// 92101                  cmp     word ptr es:[bx+72h], 0 ;~ 17C5:427C
cs=0x17c5;eip=0x004281; 	J(JZ(loc_2a4ba));	// 92102                  jz      short loc_2A4BA ;~ 17C5:4281
cs=0x17c5;eip=0x004283; 	J(CALLF(sub_388ae,0));	// 92103                  call    sub_388AE ;~ 17C5:4283
cs=0x17c5;eip=0x004288; 	J(JMP(loc_2a4e6));	// 92104                  jmp     short loc_2A4E6 ;~ 17C5:4288
loc_2a4ba:
	// 5377 
cs=0x17c5;eip=0x00428a; 	T(si = word_4e832;);	// 92108                  mov     si, ds:word_4E832 ;~ 17C5:428A
cs=0x17c5;eip=0x00428e; 	T(INC(si));	// 92109                  inc     si ;~ 17C5:428E
cs=0x17c5;eip=0x00428f; 	T(al = byte_4e1c8;);	// 92110                  mov     al, ds:byte_4E1C8 ;~ 17C5:428F
cs=0x17c5;eip=0x004292; 	T(SUB(ah, ah));	// 92111                  sub     ah, ah ;~ 17C5:4292
cs=0x17c5;eip=0x004294; 	T(SUB(ax, 0x80));	// 92112                  sub     ax, 80h ;~ 17C5:4294
cs=0x17c5;eip=0x004297; 	T(IMUL1_2(si));	// 92113                  imul    si ;~ 17C5:4297
cs=0x17c5;eip=0x004299; 	T(CWD);	// 92114                  cwd ;~ 17C5:4299
cs=0x17c5;eip=0x00429a; 	T(cx = 3;);	// 92115                  mov     cx, 3 ;~ 17C5:429A
cs=0x17c5;eip=0x00429d; 	T(IDIV2(cx));	// 92116                  idiv    cx ;~ 17C5:429D
cs=0x17c5;eip=0x00429f; 	T(SUB(al, 0x80));	// 92117                  sub     al, 80h ;~ 17C5:429F
cs=0x17c5;eip=0x0042a1; 	X(*(db*)(&word_4e1c4) = al;);	// 92118                  mov     byte ptr ds:word_4E1C4, al ;~ 17C5:42A1
cs=0x17c5;eip=0x0042a4; 	T(al = byte_4e1c9;);	// 92119                  mov     al, ds:byte_4E1C9 ;~ 17C5:42A4
cs=0x17c5;eip=0x0042a7; 	T(SUB(ah, ah));	// 92120                  sub     ah, ah ;~ 17C5:42A7
cs=0x17c5;eip=0x0042a9; 	T(SUB(ax, 0x80));	// 92121                  sub     ax, 80h ;~ 17C5:42A9
cs=0x17c5;eip=0x0042ac; 	T(IMUL1_2(si));	// 92122                  imul    si ;~ 17C5:42AC
cs=0x17c5;eip=0x0042ae; 	T(CWD);	// 92123                  cwd ;~ 17C5:42AE
cs=0x17c5;eip=0x0042af; 	T(IDIV2(cx));	// 92124                  idiv    cx ;~ 17C5:42AF
cs=0x17c5;eip=0x0042b1; 	T(SUB(al, 0x80));	// 92125                  sub     al, 80h ;~ 17C5:42B1
cs=0x17c5;eip=0x0042b3; 	X(*(db*)(((db*)&word_4e1c4)+1) = al;);	// 92126                  mov     byte ptr ds:word_4E1C4+1, al ;~ 17C5:42B3
loc_2a4e6:
	// 5378 
cs=0x17c5;eip=0x0042b6; 	T(al = *(db*)(&word_4e1c4););	// 92130                  mov     al, byte ptr ds:word_4E1C4 ;~ 17C5:42B6
cs=0x17c5;eip=0x0042b9; 	T(SUB(ah, ah));	// 92131                  sub     ah, ah ;~ 17C5:42B9
cs=0x17c5;eip=0x0042bb; 	T(cl = 4;);	// 92132                  mov     cl, 4 ;~ 17C5:42BB
cs=0x17c5;eip=0x0042bd; 	T(SHR(ax, cl));	// 92133                  shr     ax, cl ;~ 17C5:42BD
cs=0x17c5;eip=0x0042bf; 	T(SUB(ax, 8));	// 92134                  sub     ax, 8 ;~ 17C5:42BF
cs=0x17c5;eip=0x0042c2; 	X(word_5223e = ax;);	// 92135                  mov     ds:word_5223E, ax ;~ 17C5:42C2
cs=0x17c5;eip=0x0042c5; 	T(OR(ax, ax));	// 92136                  or      ax, ax ;~ 17C5:42C5
cs=0x17c5;eip=0x0042c7; 	J(JGE(loc_2a4fd));	// 92137                  jge     short loc_2A4FD ;~ 17C5:42C7
cs=0x17c5;eip=0x0042c9; 	X(INC(word_5223e));	// 92138                  inc     ds:word_5223E ;~ 17C5:42C9
loc_2a4fd:
	// 5379 
cs=0x17c5;eip=0x0042cd; 	T(al = *(db*)(((db*)&word_4e1c4)+1););	// 92141                  mov     al, byte ptr ds:word_4E1C4+1 ;~ 17C5:42CD
cs=0x17c5;eip=0x0042d0; 	T(SUB(ah, ah));	// 92142                  sub     ah, ah ;~ 17C5:42D0
cs=0x17c5;eip=0x0042d2; 	T(cl = 4;);	// 92143                  mov     cl, 4 ;~ 17C5:42D2
cs=0x17c5;eip=0x0042d4; 	T(SHR(ax, cl));	// 92144                  shr     ax, cl ;~ 17C5:42D4
cs=0x17c5;eip=0x0042d6; 	T(SUB(ax, 8));	// 92145                  sub     ax, 8 ;~ 17C5:42D6
cs=0x17c5;eip=0x0042d9; 	X(word_527d4 = ax;);	// 92146                  mov     ds:word_527D4, ax ;~ 17C5:42D9
cs=0x17c5;eip=0x0042dc; 	T(OR(ax, ax));	// 92147                  or      ax, ax ;~ 17C5:42DC
cs=0x17c5;eip=0x0042de; 	J(JGE(loc_2a514));	// 92148                  jge     short loc_2A514 ;~ 17C5:42DE
cs=0x17c5;eip=0x0042e0; 	X(INC(word_527d4));	// 92149                  inc     ds:word_527D4 ;~ 17C5:42E0
loc_2a514:
	// 5380 
cs=0x17c5;eip=0x0042e4; 	X(PUSH(word_5223e));	// 92152                  push    ds:word_5223E ;~ 17C5:42E4
cs=0x17c5;eip=0x0042e8; 	J(CALL(sub_34dc0,0));	// 92153                  call    sub_34DC0 ;~ 17C5:42E8
cs=0x17c5;eip=0x0042eb; 	T(ADD(sp, 2));	// 92154                  add     sp, 2 ;~ 17C5:42EB
cs=0x17c5;eip=0x0042ee; 	T(ADD(ax, 2));	// 92155                  add     ax, 2 ;~ 17C5:42EE
cs=0x17c5;eip=0x0042f1; 	X(IMUL1_2(word_5223e));	// 92156                  imul    ds:word_5223E ;~ 17C5:42F1
cs=0x17c5;eip=0x0042f5; 	T(NEG(ax));	// 92157                  neg     ax ;~ 17C5:42F5
cs=0x17c5;eip=0x0042f7; 	T(SHL(ax, 1));	// 92158                  shl     ax, 1 ;~ 17C5:42F7
cs=0x17c5;eip=0x0042f9; 	X(word_5223e = ax;);	// 92159                  mov     ds:word_5223E, ax ;~ 17C5:42F9
cs=0x17c5;eip=0x0042fc; 	T(ax = 6;);	// 92160                  mov     ax, 6 ;~ 17C5:42FC
cs=0x17c5;eip=0x0042ff; 	X(IMUL1_2(word_527d4));	// 92161                  imul    ds:word_527D4 ;~ 17C5:42FF
cs=0x17c5;eip=0x004303; 	X(word_527d4 = ax;);	// 92162                  mov     ds:word_527D4, ax ;~ 17C5:4303
cs=0x17c5;eip=0x004306; 	T(OR(ax, ax));	// 92163                  or      ax, ax ;~ 17C5:4306
cs=0x17c5;eip=0x004308; 	J(JGE(loc_2a543));	// 92164                  jge     short loc_2A543 ;~ 17C5:4308
cs=0x17c5;eip=0x00430a; 	T(cx = 2;);	// 92165                  mov     cx, 2 ;~ 17C5:430A
cs=0x17c5;eip=0x00430d; 	T(CWD);	// 92166                  cwd ;~ 17C5:430D
cs=0x17c5;eip=0x00430e; 	T(IDIV2(cx));	// 92167                  idiv    cx ;~ 17C5:430E
cs=0x17c5;eip=0x004310; 	X(word_527d4 = ax;);	// 92168                  mov     ds:word_527D4, ax ;~ 17C5:4310
loc_2a543:
	// 5381 
cs=0x17c5;eip=0x004313; 	T(ax = word_4e2fe;);	// 92171                  mov     ax, ds:word_4E2FE ;~ 17C5:4313
cs=0x17c5;eip=0x004316; 	T(CMP(word_520ee, ax));	// 92172                  cmp     ds:word_520EE, ax ;~ 17C5:4316
cs=0x17c5;eip=0x00431a; 	J(JNZ(loc_2a560));	// 92173                  jnz     short loc_2A560 ;~ 17C5:431A
cs=0x17c5;eip=0x00431c; 	T(CMP(word_527d4, 0));	// 92174                  cmp     ds:word_527D4, 0 ;~ 17C5:431C
cs=0x17c5;eip=0x004321; 	J(JGE(loc_2a560));	// 92175                  jge     short loc_2A560 ;~ 17C5:4321
cs=0x17c5;eip=0x004323; 	T(CMP(word_4e2fa, 0));	// 92176                  cmp     ds:word_4E2FA, 0 ;~ 17C5:4323
cs=0x17c5;eip=0x004328; 	J(JG(loc_2a560));	// 92177                  jg      short loc_2A560 ;~ 17C5:4328
cs=0x17c5;eip=0x00432a; 	X(word_527d4 = 0;);	// 92178                  mov     ds:word_527D4, 0 ;~ 17C5:432A
loc_2a560:
	// 5382 
cs=0x17c5;eip=0x004330; 	T(CMP(word_50c8a, 0x15E));	// 92182                  cmp     ds:word_50C8A, 15Eh ;~ 17C5:4330
cs=0x17c5;eip=0x004336; 	J(JLE(loc_2a599));	// 92183                  jle     short loc_2A599 ;~ 17C5:4336
cs=0x17c5;eip=0x004338; 	T(TEST(*(db*)(&word_4f42e), 1));	// 92184                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:4338
cs=0x17c5;eip=0x00433d; 	J(JNZ(loc_2a599));	// 92185                  jnz     short loc_2A599 ;~ 17C5:433D
cs=0x17c5;eip=0x00433f; 	T(CMP(word_4991c, 0));	// 92186                  cmp     word_4991C, 0 ;~ 17C5:433F
cs=0x17c5;eip=0x004344; 	J(JZ(loc_2a599));	// 92187                  jz      short loc_2A599 ;~ 17C5:4344
cs=0x17c5;eip=0x004346; 	X(word_4991c = 0;);	// 92188                  mov     word_4991C, 0 ;~ 17C5:4346
cs=0x17c5;eip=0x00434c; 	X(OR(*(db*)(&word_4f42e), 1));	// 92189                  or      byte ptr ds:word_4F42E, 1 ;~ 17C5:434C
cs=0x17c5;eip=0x004351; 	T(ax = 0x571A;);	// 92190                  mov     ax, 571Ah ;~ 17C5:4351
cs=0x17c5;eip=0x004354; 	X(PUSH(ax));	// 92191                  push    ax ;~ 17C5:4354
cs=0x17c5;eip=0x004355; 	J(CALL(sub_30414,0));	// 92192                  call    sub_30414 ;~ 17C5:4355
cs=0x17c5;eip=0x004358; 	T(ADD(sp, 2));	// 92193                  add     sp, 2 ;~ 17C5:4358
cs=0x17c5;eip=0x00435b; 	T(ax = 2;);	// 92194                  mov     ax, 2 ;~ 17C5:435B
cs=0x17c5;eip=0x00435e; 	X(PUSH(ax));	// 92195                  push    ax ;~ 17C5:435E
cs=0x17c5;eip=0x00435f; 	T(ax = 0x20;);	// 92196                  mov     ax, 20h ; ' ' ;~ 17C5:435F
cs=0x17c5;eip=0x004362; 	X(PUSH(ax));	// 92197                  push    ax ;~ 17C5:4362
cs=0x17c5;eip=0x004363; 	J(CALL(sub_33c65,0));	// 92198                  call    sub_33C65 ;~ 17C5:4363
cs=0x17c5;eip=0x004366; 	T(ADD(sp, 4));	// 92200                  add     sp, 4 ;~ 17C5:4366
loc_2a599:
	// 5383 
cs=0x17c5;eip=0x004369; 	T(ax = word_4e2fe;);	// 92204                  mov     ax, ds:word_4E2FE ;~ 17C5:4369
cs=0x17c5;eip=0x00436c; 	T(CMP(word_520ee, ax));	// 92205                  cmp     ds:word_520EE, ax ;~ 17C5:436C
cs=0x17c5;eip=0x004370; 	J(JNZ(loc_2a5bf));	// 92206                  jnz     short loc_2A5BF ;~ 17C5:4370
cs=0x17c5;eip=0x004372; 	T(CMP(word_4e310, 0));	// 92207                  cmp     ds:word_4E310, 0 ;~ 17C5:4372
cs=0x17c5;eip=0x004377; 	J(JNZ(loc_2a5bf));	// 92208                  jnz     short loc_2A5BF ;~ 17C5:4377
cs=0x17c5;eip=0x004379; 	T(TEST(*(db*)(&word_4f42e), 8));	// 92209                  test    byte ptr ds:word_4F42E, 8 ;~ 17C5:4379
cs=0x17c5;eip=0x00437e; 	J(JNZ(loc_2a5bf));	// 92210                  jnz     short loc_2A5BF ;~ 17C5:437E
cs=0x17c5;eip=0x004380; 	X(OR(*(db*)(&word_4f42e), 8));	// 92211                  or      byte ptr ds:word_4F42E, 8 ;~ 17C5:4380
cs=0x17c5;eip=0x004385; 	T(ax = 0x572E;);	// 92212                  mov     ax, 572Eh ;~ 17C5:4385
cs=0x17c5;eip=0x004388; 	X(PUSH(ax));	// 92213                  push    ax ;~ 17C5:4388
cs=0x17c5;eip=0x004389; 	J(CALL(sub_30414,0));	// 92214                  call    sub_30414 ;~ 17C5:4389
cs=0x17c5;eip=0x00438c; 	T(ADD(sp, 2));	// 92216                  add     sp, 2 ;~ 17C5:438C
loc_2a5bf:
	// 5384 
cs=0x17c5;eip=0x00438f; 	T(CMP(word_5223e, 0));	// 92220                  cmp     ds:word_5223E, 0 ;~ 17C5:438F
cs=0x17c5;eip=0x004394; 	J(JNZ(loc_2a5cd));	// 92221                  jnz     short loc_2A5CD ;~ 17C5:4394
cs=0x17c5;eip=0x004396; 	T(CMP(word_527d4, 0));	// 92222                  cmp     ds:word_527D4, 0 ;~ 17C5:4396
cs=0x17c5;eip=0x00439b; 	J(JZ(loc_2a5d3));	// 92223                  jz      short loc_2A5D3 ;~ 17C5:439B
loc_2a5cd:
	// 5385 
cs=0x17c5;eip=0x00439d; 	X(word_492e6 = 0;);	// 92227                  mov     word_492E6, 0 ;~ 17C5:439D
loc_2a5d3:
	// 5386 
cs=0x17c5;eip=0x0043a3; 	T(CMP(word_492e6, 0));	// 92230                  cmp     word_492E6, 0 ;~ 17C5:43A3
cs=0x17c5;eip=0x0043a8; 	J(JNZ(loc_2a5dd));	// 92231                  jnz     short loc_2A5DD ;~ 17C5:43A8
cs=0x17c5;eip=0x0043aa; 	J(JMP(loc_2a954));	// 92232                  jmp     loc_2A954 ;~ 17C5:43AA
loc_2a5dd:
	// 5387 
cs=0x17c5;eip=0x0043ad; 	T(CMP(word_4991a, 0));	// 92236                  cmp     word_4991A, 0 ;~ 17C5:43AD
cs=0x17c5;eip=0x0043b2; 	J(JZ(loc_2a5f5));	// 92237                  jz      short loc_2A5F5 ;~ 17C5:43B2
cs=0x17c5;eip=0x0043b4; 	T(ax = word_4f210;);	// 92238                  mov     ax, ds:word_4F210 ;~ 17C5:43B4
cs=0x17c5;eip=0x0043b7; 	T(AND(ax, 0x0F));	// 92239                  and     ax, 0Fh ;~ 17C5:43B7
cs=0x17c5;eip=0x0043ba; 	T(cx = ax;);	// 92240                  mov     cx, ax ;~ 17C5:43BA
cs=0x17c5;eip=0x0043bc; 	T(ah = cl;);	// 92241                  mov     ah, cl ;~ 17C5:43BC
cs=0x17c5;eip=0x0043be; 	T(SUB(al, al));	// 92242                  sub     al, al ;~ 17C5:43BE
cs=0x17c5;eip=0x0043c0; 	T(SUB(ax, 0x800));	// 92243                  sub     ax, 800h ;~ 17C5:43C0
cs=0x17c5;eip=0x0043c3; 	J(JMP(loc_2a5f7));	// 92244                  jmp     short loc_2A5F7 ;~ 17C5:43C3
loc_2a5f5:
	// 5388 
cs=0x17c5;eip=0x0043c5; 	T(SUB(ax, ax));	// 92248                  sub     ax, ax ;~ 17C5:43C5
loc_2a5f7:
	// 5389 
cs=0x17c5;eip=0x0043c7; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 92251                  mov     [bp+var_2C], ax ;~ 17C5:43C7
cs=0x17c5;eip=0x0043ca; 	T(ax = 0x1400;);	// 92252                  mov     ax, 1400h ;~ 17C5:43CA
cs=0x17c5;eip=0x0043cd; 	X(PUSH(ax));	// 92253                  push    ax ;~ 17C5:43CD
cs=0x17c5;eip=0x0043ce; 	T(ax = 0x0EC00;);	// 92254                  mov     ax, 0EC00h ;~ 17C5:43CE
cs=0x17c5;eip=0x0043d1; 	X(PUSH(ax));	// 92255                  push    ax ;~ 17C5:43D1
cs=0x17c5;eip=0x0043d2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2c))));	// 92256                  mov     ax, [bp+var_2C] ;~ 17C5:43D2
cs=0x17c5;eip=0x0043d5; 	T(SUB(ax, word_4e2f8));	// 92257                  sub     ax, ds:word_4E2F8 ;~ 17C5:43D5
cs=0x17c5;eip=0x0043d9; 	T(ADD(ax, word_520c2));	// 92258                  add     ax, ds:word_520C2 ;~ 17C5:43D9
cs=0x17c5;eip=0x0043dd; 	X(PUSH(ax));	// 92259                  push    ax ;~ 17C5:43DD
cs=0x17c5;eip=0x0043de; 	J(CALL(sub_331be,0));	// 92260                  call    sub_331BE ;~ 17C5:43DE
cs=0x17c5;eip=0x0043e1; 	T(ADD(sp, 6));	// 92261                  add     sp, 6 ;~ 17C5:43E1
cs=0x17c5;eip=0x0043e4; 	T(SHL(ax, 1));	// 92262                  shl     ax, 1 ;~ 17C5:43E4
cs=0x17c5;eip=0x0043e6; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 92263                  mov     [bp+var_2C], ax ;~ 17C5:43E6
cs=0x17c5;eip=0x0043e9; 	T(ax = 0x18;);	// 92264                  mov     ax, 18h ;~ 17C5:43E9
cs=0x17c5;eip=0x0043ec; 	X(PUSH(ax));	// 92265                  push    ax ;~ 17C5:43EC
cs=0x17c5;eip=0x0043ed; 	T(ax = 0x0FFE8;);	// 92266                  mov     ax, 0FFE8h ;~ 17C5:43ED
cs=0x17c5;eip=0x0043f0; 	X(PUSH(ax));	// 92267                  push    ax ;~ 17C5:43F0
cs=0x17c5;eip=0x0043f1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2c))));	// 92268                  mov     ax, [bp+var_2C] ;~ 17C5:43F1
cs=0x17c5;eip=0x0043f4; 	T(SUB(ax, word_4e2fc));	// 92269                  sub     ax, ds:word_4E2FC ;~ 17C5:43F4
cs=0x17c5;eip=0x0043f8; 	T(cl = 6;);	// 92270                  mov     cl, 6 ;~ 17C5:43F8
cs=0x17c5;eip=0x0043fa; 	T(SAR(ax, cl));	// 92271                  sar     ax, cl ;~ 17C5:43FA
cs=0x17c5;eip=0x0043fc; 	X(PUSH(ax));	// 92272                  push    ax ;~ 17C5:43FC
cs=0x17c5;eip=0x0043fd; 	J(CALL(sub_33194,0));	// 92273                  call    sub_33194 ;~ 17C5:43FD
cs=0x17c5;eip=0x004400; 	T(ADD(sp, 6));	// 92274                  add     sp, 6 ;~ 17C5:4400
cs=0x17c5;eip=0x004403; 	T(NEG(ax));	// 92275                  neg     ax ;~ 17C5:4403
cs=0x17c5;eip=0x004405; 	X(word_5223e = ax;);	// 92276                  mov     ds:word_5223E, ax ;~ 17C5:4405
cs=0x17c5;eip=0x004408; 	T(ax = 0x0C00;);	// 92277                  mov     ax, 0C00h ;~ 17C5:4408
cs=0x17c5;eip=0x00440b; 	X(PUSH(ax));	// 92278                  push    ax ;~ 17C5:440B
cs=0x17c5;eip=0x00440c; 	T(ax = 0x0EC00;);	// 92279                  mov     ax, 0EC00h ;~ 17C5:440C
cs=0x17c5;eip=0x00440f; 	X(PUSH(ax));	// 92280                  push    ax ;~ 17C5:440F
cs=0x17c5;eip=0x004410; 	T(ax = word_492e6;);	// 92281                  mov     ax, word_492E6 ;~ 17C5:4410
cs=0x17c5;eip=0x004413; 	T(SUB(ax, word_4e2fe));	// 92282                  sub     ax, ds:word_4E2FE ;~ 17C5:4413
cs=0x17c5;eip=0x004417; 	T(cl = 4;);	// 92283                  mov     cl, 4 ;~ 17C5:4417
cs=0x17c5;eip=0x004419; 	T(SHL(ax, cl));	// 92284                  shl     ax, cl ;~ 17C5:4419
cs=0x17c5;eip=0x00441b; 	T(SUB(ax, word_4f1f4));	// 92285                  sub     ax, ds:word_4F1F4 ;~ 17C5:441B
cs=0x17c5;eip=0x00441f; 	X(PUSH(ax));	// 92286                  push    ax ;~ 17C5:441F
cs=0x17c5;eip=0x004420; 	J(CALL(sub_331be,0));	// 92287                  call    sub_331BE ;~ 17C5:4420
cs=0x17c5;eip=0x004423; 	T(ADD(sp, 6));	// 92288                  add     sp, 6 ;~ 17C5:4423
cs=0x17c5;eip=0x004426; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 92289                  mov     [bp+var_14], ax ;~ 17C5:4426
cs=0x17c5;eip=0x004429; 	T(ax = 8;);	// 92290                  mov     ax, 8 ;~ 17C5:4429
cs=0x17c5;eip=0x00442c; 	X(PUSH(ax));	// 92291                  push    ax ;~ 17C5:442C
cs=0x17c5;eip=0x00442d; 	T(ax = 0x0FFF8;);	// 92292                  mov     ax, 0FFF8h ;~ 17C5:442D
cs=0x17c5;eip=0x004430; 	X(PUSH(ax));	// 92293                  push    ax ;~ 17C5:4430
cs=0x17c5;eip=0x004431; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 92294                  mov     ax, [bp+var_14] ;~ 17C5:4431
cs=0x17c5;eip=0x004434; 	T(SUB(ax, word_4e2fa));	// 92295                  sub     ax, ds:word_4E2FA ;~ 17C5:4434
cs=0x17c5;eip=0x004438; 	T(cl = 7;);	// 92296                  mov     cl, 7 ;~ 17C5:4438
cs=0x17c5;eip=0x00443a; 	T(SAR(ax, cl));	// 92297                  sar     ax, cl ;~ 17C5:443A
cs=0x17c5;eip=0x00443c; 	X(PUSH(ax));	// 92298                  push    ax ;~ 17C5:443C
cs=0x17c5;eip=0x00443d; 	J(CALL(sub_33194,0));	// 92299                  call    sub_33194 ;~ 17C5:443D
cs=0x17c5;eip=0x004440; 	T(ADD(sp, 6));	// 92300                  add     sp, 6 ;~ 17C5:4440
cs=0x17c5;eip=0x004443; 	X(word_527d4 = ax;);	// 92301                  mov     ds:word_527D4, ax ;~ 17C5:4443
cs=0x17c5;eip=0x004446; 	T(CMP(word_48c62, 3));	// 92302                  cmp     word_48C62, 3 ;~ 17C5:4446
cs=0x17c5;eip=0x00444b; 	J(JZ(loc_2a680));	// 92303                  jz      short loc_2A680 ;~ 17C5:444B
cs=0x17c5;eip=0x00444d; 	J(JMP(loc_2a954));	// 92304                  jmp     loc_2A954 ;~ 17C5:444D
loc_2a680:
	// 5390 
cs=0x17c5;eip=0x004450; 	T(ax = word_511d8;);	// 92308                  mov     ax, ds:word_511D8 ;~ 17C5:4450
cs=0x17c5;eip=0x004453; 	X(MOV(*(dw*)(raddr(ss,bp+var_3e)), ax));	// 92309                  mov     [bp+var_3E], ax ;~ 17C5:4453
cs=0x17c5;eip=0x004456; 	T(ax = word_5138a;);	// 92310                  mov     ax, ds:word_5138A ;~ 17C5:4456
cs=0x17c5;eip=0x004459; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 92311                  mov     [bp+var_10], ax ;~ 17C5:4459
cs=0x17c5;eip=0x00445c; 	T(si = ax;);	// 92312                  mov     si, ax ;~ 17C5:445C
cs=0x17c5;eip=0x00445e; 	T(cl = 4;);	// 92313                  mov     cl, 4 ;~ 17C5:445E
cs=0x17c5;eip=0x004460; 	T(SHL(si, cl));	// 92314                  shl     si, cl ;~ 17C5:4460
cs=0x17c5;eip=0x004462; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 92315                  mov     ax, [si-7E52h] ;~ 17C5:4462
cs=0x17c5;eip=0x004466; 	T(SUB(ax, word_520f0));	// 92316                  sub     ax, ds:word_520F0 ;~ 17C5:4466
cs=0x17c5;eip=0x00446a; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 92317                  mov     [bp+var_2A], ax ;~ 17C5:446A
cs=0x17c5;eip=0x00446d; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 92318                  mov     ax, [si-7E50h] ;~ 17C5:446D
cs=0x17c5;eip=0x004471; 	T(SUB(ax, word_52100));	// 92319                  sub     ax, ds:word_52100 ;~ 17C5:4471
cs=0x17c5;eip=0x004475; 	X(MOV(*(dw*)(raddr(ss,bp+var_34)), ax));	// 92320                  mov     [bp+var_34], ax ;~ 17C5:4475
cs=0x17c5;eip=0x004478; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x200));	// 92321                  test    word ptr [si-7E4Ch], 200h ;~ 17C5:4478
cs=0x17c5;eip=0x00447e; 	J(JNZ(loc_2a6bc));	// 92322                  jnz     short loc_2A6BC ;~ 17C5:447E
cs=0x17c5;eip=0x004480; 	X(PUSH(ax));	// 92323                  push    ax ;~ 17C5:4480
cs=0x17c5;eip=0x004481; 	J(CALL(sub_333f8,0));	// 92324                  call    sub_333F8 ;~ 17C5:4481
cs=0x17c5;eip=0x004484; 	T(ADD(sp, 2));	// 92325                  add     sp, 2 ;~ 17C5:4484
cs=0x17c5;eip=0x004487; 	T(NEG(ax));	// 92326                  neg     ax ;~ 17C5:4487
cs=0x17c5;eip=0x004489; 	X(MOV(*(dw*)(raddr(ss,bp+var_3e)), ax));	// 92327                  mov     [bp+var_3E], ax ;~ 17C5:4489
loc_2a6bc:
	// 5391 
cs=0x17c5;eip=0x00448c; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_10))));	// 92330                  mov     bx, [bp+var_10] ;~ 17C5:448C
cs=0x17c5;eip=0x00448f; 	T(cl = 4;);	// 92331                  mov     cl, 4 ;~ 17C5:448F
cs=0x17c5;eip=0x004491; 	T(SHL(bx, cl));	// 92332                  shl     bx, cl ;~ 17C5:4491
cs=0x17c5;eip=0x004493; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 92333                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:4493
cs=0x17c5;eip=0x004499; 	J(JZ(loc_2a6d0));	// 92334                  jz      short loc_2A6D0 ;~ 17C5:4499
cs=0x17c5;eip=0x00449b; 	T(ax = 0x1E;);	// 92335                  mov     ax, 1Eh ;~ 17C5:449B
cs=0x17c5;eip=0x00449e; 	J(JMP(loc_2a6d3));	// 92336                  jmp     short loc_2A6D3 ;~ 17C5:449E
loc_2a6d0:
	// 5392 
cs=0x17c5;eip=0x0044a0; 	T(ax = 0x40;);	// 92340                  mov     ax, 40h ; '@' ;~ 17C5:44A0
loc_2a6d3:
	// 5393 
cs=0x17c5;eip=0x0044a3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_3e))));	// 92343                  imul    [bp+var_3E] ;~ 17C5:44A3
cs=0x17c5;eip=0x0044a6; 	X(ADD(*(dw*)(raddr(ss,bp+var_34)), ax));	// 92344                  add     [bp+var_34], ax ;~ 17C5:44A6
cs=0x17c5;eip=0x0044a9; 	X(PUSH(word_4e2f8));	// 92345                  push    ds:word_4E2F8 ;~ 17C5:44A9
cs=0x17c5;eip=0x0044ad; 	J(CALL(sub_34dc0,0));	// 92346                  call    sub_34DC0 ;~ 17C5:44AD
cs=0x17c5;eip=0x0044b0; 	T(ADD(sp, 2));	// 92347                  add     sp, 2 ;~ 17C5:44B0
cs=0x17c5;eip=0x0044b3; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 92348                  mov     [bp+var_2C], ax ;~ 17C5:44B3
cs=0x17c5;eip=0x0044b6; 	T(CMP(*(dw*)(raddr(ss,bp+var_3e)), 0x0FFFF));	// 92349                  cmp     [bp+var_3E], 0FFFFh ;~ 17C5:44B6
cs=0x17c5;eip=0x0044ba; 	J(JNZ(loc_2a70c));	// 92350                  jnz     short loc_2A70C ;~ 17C5:44BA
cs=0x17c5;eip=0x0044bc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2a))));	// 92351                  mov     ax, [bp+var_2A] ;~ 17C5:44BC
cs=0x17c5;eip=0x0044bf; 	T(NEG(ax));	// 92352                  neg     ax ;~ 17C5:44BF
cs=0x17c5;eip=0x0044c1; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 92353                  mov     [bp+var_2A], ax ;~ 17C5:44C1
cs=0x17c5;eip=0x0044c4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_34))));	// 92354                  mov     ax, [bp+var_34] ;~ 17C5:44C4
cs=0x17c5;eip=0x0044c7; 	T(NEG(ax));	// 92355                  neg     ax ;~ 17C5:44C7
cs=0x17c5;eip=0x0044c9; 	X(MOV(*(dw*)(raddr(ss,bp+var_34)), ax));	// 92356                  mov     [bp+var_34], ax ;~ 17C5:44C9
cs=0x17c5;eip=0x0044cc; 	T(ax = word_4e2f8;);	// 92357                  mov     ax, ds:word_4E2F8 ;~ 17C5:44CC
cs=0x17c5;eip=0x0044cf; 	T(SUB(ax, 0x8000));	// 92358                  sub     ax, 8000h ;~ 17C5:44CF
cs=0x17c5;eip=0x0044d2; 	X(PUSH(ax));	// 92359                  push    ax ;~ 17C5:44D2
cs=0x17c5;eip=0x0044d3; 	J(CALL(sub_34dc0,0));	// 92360                  call    sub_34DC0 ;~ 17C5:44D3
cs=0x17c5;eip=0x0044d6; 	T(ADD(sp, 2));	// 92361                  add     sp, 2 ;~ 17C5:44D6
cs=0x17c5;eip=0x0044d9; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 92362                  mov     [bp+var_2C], ax ;~ 17C5:44D9
loc_2a70c:
	// 5394 
cs=0x17c5;eip=0x0044dc; 	T(ax = 0x1000;);	// 92365                  mov     ax, 1000h ;~ 17C5:44DC
cs=0x17c5;eip=0x0044df; 	X(PUSH(ax));	// 92366                  push    ax ;~ 17C5:44DF
cs=0x17c5;eip=0x0044e0; 	T(ax = 0x32;);	// 92367                  mov     ax, 32h ; '2' ;~ 17C5:44E0
cs=0x17c5;eip=0x0044e3; 	X(PUSH(ax));	// 92368                  push    ax ;~ 17C5:44E3
cs=0x17c5;eip=0x0044e4; 	X(PUSH(*(dw*)(raddr(ss,bp+var_34))));	// 92369                  push    [bp+var_34] ;~ 17C5:44E4
cs=0x17c5;eip=0x0044e7; 	J(CALL(sub_34dc0,0));	// 92370                  call    sub_34DC0 ;~ 17C5:44E7
cs=0x17c5;eip=0x0044ea; 	T(ADD(sp, 2));	// 92371                  add     sp, 2 ;~ 17C5:44EA
cs=0x17c5;eip=0x0044ed; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2a))));	// 92372                  push    [bp+var_2A] ;~ 17C5:44ED
cs=0x17c5;eip=0x0044f0; 	T(si = ax;);	// 92373                  mov     si, ax ;~ 17C5:44F0
cs=0x17c5;eip=0x0044f2; 	J(CALL(sub_34dc0,0));	// 92374                  call    sub_34DC0 ;~ 17C5:44F2
cs=0x17c5;eip=0x0044f5; 	T(ADD(sp, 2));	// 92375                  add     sp, 2 ;~ 17C5:44F5
cs=0x17c5;eip=0x0044f8; 	T(ADD(ax, si));	// 92376                  add     ax, si ;~ 17C5:44F8
cs=0x17c5;eip=0x0044fa; 	T(SHL(ax, 1));	// 92377                  shl     ax, 1 ;~ 17C5:44FA
cs=0x17c5;eip=0x0044fc; 	T(cx = ax;);	// 92378                  mov     cx, ax ;~ 17C5:44FC
cs=0x17c5;eip=0x0044fe; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2c))));	// 92379                  mov     ax, [bp+var_2C] ;~ 17C5:44FE
cs=0x17c5;eip=0x004501; 	T(bx = cx;);	// 92380                  mov     bx, cx ;~ 17C5:4501
cs=0x17c5;eip=0x004503; 	T(CWD);	// 92381                  cwd ;~ 17C5:4503
cs=0x17c5;eip=0x004504; 	T(XOR(ax, dx));	// 92382                  xor     ax, dx ;~ 17C5:4504
cs=0x17c5;eip=0x004506; 	T(SUB(ax, dx));	// 92383                  sub     ax, dx ;~ 17C5:4506
cs=0x17c5;eip=0x004508; 	T(cx = 5;);	// 92384                  mov     cx, 5 ;~ 17C5:4508
cs=0x17c5;eip=0x00450b; 	T(SAR(ax, cl));	// 92385                  sar     ax, cl ;~ 17C5:450B
cs=0x17c5;eip=0x00450d; 	T(XOR(ax, dx));	// 92386                  xor     ax, dx ;~ 17C5:450D
cs=0x17c5;eip=0x00450f; 	T(SUB(ax, dx));	// 92387                  sub     ax, dx ;~ 17C5:450F
cs=0x17c5;eip=0x004511; 	T(ADD(bx, ax));	// 92388                  add     bx, ax ;~ 17C5:4511
cs=0x17c5;eip=0x004513; 	X(PUSH(bx));	// 92389                  push    bx ;~ 17C5:4513
cs=0x17c5;eip=0x004514; 	J(CALL(sub_33194,0));	// 92390                  call    sub_33194 ;~ 17C5:4514
cs=0x17c5;eip=0x004517; 	T(ADD(sp, 6));	// 92391                  add     sp, 6 ;~ 17C5:4517
cs=0x17c5;eip=0x00451a; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 92392                  mov     [bp+var_14], ax ;~ 17C5:451A
cs=0x17c5;eip=0x00451d; 	T(CMP(ax, 0x1000));	// 92393                  cmp     ax, 1000h ;~ 17C5:451D
cs=0x17c5;eip=0x004520; 	J(JGE(loc_2a755));	// 92394                  jge     short loc_2A755 ;~ 17C5:4520
cs=0x17c5;eip=0x004522; 	J(CALL(sub_33dcc,0));	// 92395                  call    sub_33DCC ;~ 17C5:4522
loc_2a755:
	// 5395 
cs=0x17c5;eip=0x004525; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_10))));	// 92398                  mov     bx, [bp+var_10] ;~ 17C5:4525
cs=0x17c5;eip=0x004528; 	T(cl = 4;);	// 92399                  mov     cl, 4 ;~ 17C5:4528
cs=0x17c5;eip=0x00452a; 	T(SHL(bx, cl));	// 92400                  shl     bx, cl ;~ 17C5:452A
cs=0x17c5;eip=0x00452c; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 92401                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:452C
cs=0x17c5;eip=0x004532; 	J(JZ(loc_2a768));	// 92402                  jz      short loc_2A768 ;~ 17C5:4532
cs=0x17c5;eip=0x004534; 	X(ADD(*(dw*)(raddr(ss,bp+var_14)), 0x64));	// 92403                  add     [bp+var_14], 64h ; 'd' ;~ 17C5:4534
loc_2a768:
	// 5396 
cs=0x17c5;eip=0x004538; 	T(CMP(word_49932, 0));	// 92406                  cmp     word_49932, 0 ;~ 17C5:4538
cs=0x17c5;eip=0x00453d; 	J(JZ(loc_2a782));	// 92407                  jz      short loc_2A782 ;~ 17C5:453D
cs=0x17c5;eip=0x00453f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2c))));	// 92408                  push    [bp+var_2C] ;~ 17C5:453F
cs=0x17c5;eip=0x004542; 	J(CALL(sub_34dc0,0));	// 92409                  call    sub_34DC0 ;~ 17C5:4542
cs=0x17c5;eip=0x004545; 	T(ADD(sp, 2));	// 92410                  add     sp, 2 ;~ 17C5:4545
cs=0x17c5;eip=0x004548; 	T(CMP(ax, 0x200));	// 92411                  cmp     ax, 200h ;~ 17C5:4548
cs=0x17c5;eip=0x00454b; 	J(JGE(loc_2a782));	// 92412                  jge     short loc_2A782 ;~ 17C5:454B
cs=0x17c5;eip=0x00454d; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), 0x0FFEC));	// 92413                  mov     [bp+var_14], 0FFECh ;~ 17C5:454D
loc_2a782:
	// 5397 
cs=0x17c5;eip=0x004552; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_10))));	// 92417                  mov     si, [bp+var_10] ;~ 17C5:4552
cs=0x17c5;eip=0x004555; 	T(cl = 4;);	// 92418                  mov     cl, 4 ;~ 17C5:4555
cs=0x17c5;eip=0x004557; 	T(SHL(si, cl));	// 92419                  shl     si, cl ;~ 17C5:4557
cs=0x17c5;eip=0x004559; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x200));	// 92420                  test    word ptr [si-7E4Ch], 200h ;~ 17C5:4559
cs=0x17c5;eip=0x00455f; 	J(JZ(loc_2a796));	// 92421                  jz      short loc_2A796 ;~ 17C5:455F
cs=0x17c5;eip=0x004561; 	T(ax = 0x1C;);	// 92422                  mov     ax, 1Ch ;~ 17C5:4561
cs=0x17c5;eip=0x004564; 	J(JMP(loc_2a799));	// 92423                  jmp     short loc_2A799 ;~ 17C5:4564
loc_2a796:
	// 5398 
cs=0x17c5;eip=0x004566; 	T(ax = 0x38;);	// 92427                  mov     ax, 38h ; '8' ;~ 17C5:4566
loc_2a799:
	// 5399 
cs=0x17c5;eip=0x004569; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_3e))));	// 92430                  imul    [bp+var_3E] ;~ 17C5:4569
cs=0x17c5;eip=0x00456c; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 92431                  add     ax, [si-7E50h] ;~ 17C5:456C
cs=0x17c5;eip=0x004570; 	X(MOV(*(dw*)(raddr(ss,bp+var_34)), ax));	// 92432                  mov     [bp+var_34], ax ;~ 17C5:4570
cs=0x17c5;eip=0x004573; 	T(ax = 0x0C00;);	// 92433                  mov     ax, 0C00h ;~ 17C5:4573
cs=0x17c5;eip=0x004576; 	X(PUSH(ax));	// 92434                  push    ax ;~ 17C5:4576
cs=0x17c5;eip=0x004577; 	T(SUB(ax, ax));	// 92435                  sub     ax, ax ;~ 17C5:4577
cs=0x17c5;eip=0x004579; 	X(PUSH(ax));	// 92436                  push    ax ;~ 17C5:4579
cs=0x17c5;eip=0x00457a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2a))));	// 92437                  push    [bp+var_2A] ;~ 17C5:457A
cs=0x17c5;eip=0x00457d; 	J(CALL(sub_34dc0,0));	// 92438                  call    sub_34DC0 ;~ 17C5:457D
cs=0x17c5;eip=0x004580; 	T(ADD(sp, 2));	// 92439                  add     sp, 2 ;~ 17C5:4580
cs=0x17c5;eip=0x004583; 	T(SHL(ax, 1));	// 92440                  shl     ax, 1 ;~ 17C5:4583
cs=0x17c5;eip=0x004585; 	T(SHL(ax, 1));	// 92441                  shl     ax, 1 ;~ 17C5:4585
cs=0x17c5;eip=0x004587; 	T(cx = ax;);	// 92442                  mov     cx, ax ;~ 17C5:4587
cs=0x17c5;eip=0x004589; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2c))));	// 92443                  mov     ax, [bp+var_2C] ;~ 17C5:4589
cs=0x17c5;eip=0x00458c; 	T(bx = cx;);	// 92444                  mov     bx, cx ;~ 17C5:458C
cs=0x17c5;eip=0x00458e; 	T(CWD);	// 92445                  cwd ;~ 17C5:458E
cs=0x17c5;eip=0x00458f; 	T(XOR(ax, dx));	// 92446                  xor     ax, dx ;~ 17C5:458F
cs=0x17c5;eip=0x004591; 	T(SUB(ax, dx));	// 92447                  sub     ax, dx ;~ 17C5:4591
cs=0x17c5;eip=0x004593; 	T(cx = 4;);	// 92448                  mov     cx, 4 ;~ 17C5:4593
cs=0x17c5;eip=0x004596; 	T(SAR(ax, cl));	// 92449                  sar     ax, cl ;~ 17C5:4596
cs=0x17c5;eip=0x004598; 	T(XOR(ax, dx));	// 92450                  xor     ax, dx ;~ 17C5:4598
cs=0x17c5;eip=0x00459a; 	T(SUB(ax, dx));	// 92451                  sub     ax, dx ;~ 17C5:459A
cs=0x17c5;eip=0x00459c; 	T(ADD(ax, bx));	// 92452                  add     ax, bx ;~ 17C5:459C
cs=0x17c5;eip=0x00459e; 	X(PUSH(ax));	// 92453                  push    ax ;~ 17C5:459E
cs=0x17c5;eip=0x00459f; 	J(CALL(sub_33194,0));	// 92454                  call    sub_33194 ;~ 17C5:459F
cs=0x17c5;eip=0x0045a2; 	T(ADD(sp, 6));	// 92455                  add     sp, 6 ;~ 17C5:45A2
cs=0x17c5;eip=0x0045a5; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_3e))));	// 92456                  imul    [bp+var_3E] ;~ 17C5:45A5
cs=0x17c5;eip=0x0045a8; 	X(ADD(*(dw*)(raddr(ss,bp+var_34)), ax));	// 92457                  add     [bp+var_34], ax ;~ 17C5:45A8
cs=0x17c5;eip=0x0045ab; 	X(AND(*(db*)(&word_4f42e), 0x0F7));	// 92458                  and     byte ptr ds:word_4F42E, 0F7h ;~ 17C5:45AB
cs=0x17c5;eip=0x0045b0; 	T(CMP(*(dw*)(raddr(ss,bp+var_2c)), 0x4000));	// 92459                  cmp     [bp+var_2C], 4000h ;~ 17C5:45B0
cs=0x17c5;eip=0x0045b5; 	J(JLE(loc_2a7fc));	// 92460                  jle     short loc_2A7FC ;~ 17C5:45B5
cs=0x17c5;eip=0x0045b7; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_10))));	// 92461                  mov     bx, [bp+var_10] ;~ 17C5:45B7
cs=0x17c5;eip=0x0045ba; 	T(cl = 4;);	// 92462                  mov     cl, 4 ;~ 17C5:45BA
cs=0x17c5;eip=0x0045bc; 	T(SHL(bx, cl));	// 92463                  shl     bx, cl ;~ 17C5:45BC
cs=0x17c5;eip=0x0045be; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7E52))));	// 92464                  mov     ax, [bx-7E52h] ;~ 17C5:45BE
cs=0x17c5;eip=0x0045c2; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 92465                  mov     [bp+var_2A], ax ;~ 17C5:45C2
cs=0x17c5;eip=0x0045c5; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), 0x1000));	// 92466                  mov     [bp+var_14], 1000h ;~ 17C5:45C5
cs=0x17c5;eip=0x0045ca; 	J(JMP(loc_2a824));	// 92467                  jmp     short loc_2A824 ;~ 17C5:45CA
loc_2a7fc:
	// 5400 
cs=0x17c5;eip=0x0045cc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_3e))));	// 92471                  mov     ax, [bp+var_3E] ;~ 17C5:45CC
cs=0x17c5;eip=0x0045cf; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2a))));	// 92472                  imul    [bp+var_2A] ;~ 17C5:45CF
cs=0x17c5;eip=0x0045d2; 	T(SHL(ax, 1));	// 92473                  shl     ax, 1 ;~ 17C5:45D2
cs=0x17c5;eip=0x0045d4; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_10))));	// 92474                  mov     bx, [bp+var_10] ;~ 17C5:45D4
cs=0x17c5;eip=0x0045d7; 	T(cl = 4;);	// 92475                  mov     cl, 4 ;~ 17C5:45D7
cs=0x17c5;eip=0x0045d9; 	T(SHL(bx, cl));	// 92476                  shl     bx, cl ;~ 17C5:45D9
cs=0x17c5;eip=0x0045db; 	T(ADD(ax, *(dw*)(raddr(ds,bx-0x7E52))));	// 92477                  add     ax, [bx-7E52h] ;~ 17C5:45DB
cs=0x17c5;eip=0x0045df; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 92478                  mov     [bp+var_2A], ax ;~ 17C5:45DF
cs=0x17c5;eip=0x0045e2; 	T(ax = 0x50;);	// 92479                  mov     ax, 50h ; 'P' ;~ 17C5:45E2
cs=0x17c5;eip=0x0045e5; 	X(IMUL1_2(word_4e310));	// 92480                  imul    ds:word_4E310 ;~ 17C5:45E5
cs=0x17c5;eip=0x0045e9; 	T(CMP(ax, word_50c8a));	// 92481                  cmp     ax, ds:word_50C8A ;~ 17C5:45E9
cs=0x17c5;eip=0x0045ed; 	J(JGE(loc_2a824));	// 92482                  jge     short loc_2A824 ;~ 17C5:45ED
cs=0x17c5;eip=0x0045ef; 	X(OR(*(db*)(&word_4f42e), 8));	// 92483                  or      byte ptr ds:word_4F42E, 8 ;~ 17C5:45EF
loc_2a824:
	// 5401 
cs=0x17c5;eip=0x0045f4; 	T(ax = word_52100;);	// 92487                  mov     ax, ds:word_52100 ;~ 17C5:45F4
cs=0x17c5;eip=0x0045f7; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_34))));	// 92488                  sub     ax, [bp+var_34] ;~ 17C5:45F7
cs=0x17c5;eip=0x0045fa; 	X(PUSH(ax));	// 92489                  push    ax ;~ 17C5:45FA
cs=0x17c5;eip=0x0045fb; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2a))));	// 92490                  mov     ax, [bp+var_2A] ;~ 17C5:45FB
cs=0x17c5;eip=0x0045fe; 	T(SUB(ax, word_520f0));	// 92491                  sub     ax, ds:word_520F0 ;~ 17C5:45FE
cs=0x17c5;eip=0x004602; 	X(PUSH(ax));	// 92492                  push    ax ;~ 17C5:4602
cs=0x17c5;eip=0x004603; 	J(CALL(sub_33238,0));	// 92493                  call    sub_33238 ;~ 17C5:4603
cs=0x17c5;eip=0x004606; 	T(ADD(sp, 4));	// 92494                  add     sp, 4 ;~ 17C5:4606
cs=0x17c5;eip=0x004609; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 92495                  mov     [bp+var_E], ax ;~ 17C5:4609
cs=0x17c5;eip=0x00460c; 	T(ax = word_50c8a;);	// 92496                  mov     ax, ds:word_50C8A ;~ 17C5:460C
cs=0x17c5;eip=0x00460f; 	T(CWD);	// 92497                  cwd ;~ 17C5:460F
cs=0x17c5;eip=0x004610; 	T(XOR(ax, dx));	// 92498                  xor     ax, dx ;~ 17C5:4610
cs=0x17c5;eip=0x004612; 	T(SUB(ax, dx));	// 92499                  sub     ax, dx ;~ 17C5:4612
cs=0x17c5;eip=0x004614; 	T(cx = 4;);	// 92500                  mov     cx, 4 ;~ 17C5:4614
cs=0x17c5;eip=0x004617; 	T(SAR(ax, cl));	// 92501                  sar     ax, cl ;~ 17C5:4617
cs=0x17c5;eip=0x004619; 	T(XOR(ax, dx));	// 92502                  xor     ax, dx ;~ 17C5:4619
cs=0x17c5;eip=0x00461b; 	T(SUB(ax, dx));	// 92503                  sub     ax, dx ;~ 17C5:461B
cs=0x17c5;eip=0x00461d; 	X(MOV(*(dw*)(raddr(ss,bp+var_3c)), ax));	// 92504                  mov     [bp+var_3C], ax ;~ 17C5:461D
cs=0x17c5;eip=0x004620; 	T(MOV(ah, *(raddr(ss,bp+var_3c))));	// 92505                  mov     ah, byte ptr [bp+var_3C] ;~ 17C5:4620
cs=0x17c5;eip=0x004623; 	T(SUB(al, al));	// 92506                  sub     al, al ;~ 17C5:4623
cs=0x17c5;eip=0x004625; 	X(PUSH(ax));	// 92507                  push    ax ;~ 17C5:4625
cs=0x17c5;eip=0x004626; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_3c))));	// 92508                  mov     ax, [bp+var_3C] ;~ 17C5:4626
cs=0x17c5;eip=0x004629; 	T(NEG(ax));	// 92509                  neg     ax ;~ 17C5:4629
cs=0x17c5;eip=0x00462b; 	T(ch = al;);	// 92510                  mov     ch, al ;~ 17C5:462B
cs=0x17c5;eip=0x00462d; 	T(SUB(cl, cl));	// 92511                  sub     cl, cl ;~ 17C5:462D
cs=0x17c5;eip=0x00462f; 	X(PUSH(cx));	// 92512                  push    cx ;~ 17C5:462F
cs=0x17c5;eip=0x004630; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 92513                  mov     ax, [bp+var_E] ;~ 17C5:4630
cs=0x17c5;eip=0x004633; 	T(SUB(ax, word_4e2f8));	// 92514                  sub     ax, ds:word_4E2F8 ;~ 17C5:4633
cs=0x17c5;eip=0x004637; 	X(PUSH(ax));	// 92515                  push    ax ;~ 17C5:4637
cs=0x17c5;eip=0x004638; 	J(CALL(sub_331be,0));	// 92516                  call    sub_331BE ;~ 17C5:4638
cs=0x17c5;eip=0x00463b; 	T(ADD(sp, 6));	// 92517                  add     sp, 6 ;~ 17C5:463B
cs=0x17c5;eip=0x00463e; 	T(SHL(ax, 1));	// 92518                  shl     ax, 1 ;~ 17C5:463E
cs=0x17c5;eip=0x004640; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 92519                  mov     [bp+var_2C], ax ;~ 17C5:4640
cs=0x17c5;eip=0x004643; 	T(CMP(word_49932, 0));	// 92520                  cmp     word_49932, 0 ;~ 17C5:4643
cs=0x17c5;eip=0x004648; 	J(JZ(loc_2a87f));	// 92521                  jz      short loc_2A87F ;~ 17C5:4648
cs=0x17c5;eip=0x00464a; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), 0));	// 92522                  mov     [bp+var_2C], 0 ;~ 17C5:464A
loc_2a87f:
	// 5402 
cs=0x17c5;eip=0x00464f; 	T(ax = 0x20;);	// 92525                  mov     ax, 20h ; ' ' ;~ 17C5:464F
cs=0x17c5;eip=0x004652; 	X(PUSH(ax));	// 92526                  push    ax ;~ 17C5:4652
cs=0x17c5;eip=0x004653; 	T(ax = 0x0FFE0;);	// 92527                  mov     ax, 0FFE0h ;~ 17C5:4653
cs=0x17c5;eip=0x004656; 	X(PUSH(ax));	// 92528                  push    ax ;~ 17C5:4656
cs=0x17c5;eip=0x004657; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2c))));	// 92529                  mov     ax, [bp+var_2C] ;~ 17C5:4657
cs=0x17c5;eip=0x00465a; 	T(SUB(ax, word_4e2fc));	// 92530                  sub     ax, ds:word_4E2FC ;~ 17C5:465A
cs=0x17c5;eip=0x00465e; 	T(cl = 6;);	// 92531                  mov     cl, 6 ;~ 17C5:465E
cs=0x17c5;eip=0x004660; 	T(SAR(ax, cl));	// 92532                  sar     ax, cl ;~ 17C5:4660
cs=0x17c5;eip=0x004662; 	X(PUSH(ax));	// 92533                  push    ax ;~ 17C5:4662
cs=0x17c5;eip=0x004663; 	J(CALL(sub_33194,0));	// 92534                  call    sub_33194 ;~ 17C5:4663
cs=0x17c5;eip=0x004666; 	T(ADD(sp, 6));	// 92535                  add     sp, 6 ;~ 17C5:4666
cs=0x17c5;eip=0x004669; 	T(NEG(ax));	// 92536                  neg     ax ;~ 17C5:4669
cs=0x17c5;eip=0x00466b; 	X(word_5223e = ax;);	// 92537                  mov     ds:word_5223E, ax ;~ 17C5:466B
cs=0x17c5;eip=0x00466e; 	T(ax = 0x50;);	// 92538                  mov     ax, 50h ; 'P' ;~ 17C5:466E
cs=0x17c5;eip=0x004671; 	X(PUSH(ax));	// 92539                  push    ax ;~ 17C5:4671
cs=0x17c5;eip=0x004672; 	T(ax = 0x23;);	// 92540                  mov     ax, 23h ; '#' ;~ 17C5:4672
cs=0x17c5;eip=0x004675; 	X(PUSH(ax));	// 92541                  push    ax ;~ 17C5:4675
cs=0x17c5;eip=0x004676; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2c))));	// 92542                  push    [bp+var_2C] ;~ 17C5:4676
cs=0x17c5;eip=0x004679; 	J(CALL(sub_34dc0,0));	// 92543                  call    sub_34DC0 ;~ 17C5:4679
cs=0x17c5;eip=0x00467c; 	T(ADD(sp, 2));	// 92544                  add     sp, 2 ;~ 17C5:467C
cs=0x17c5;eip=0x00467f; 	T(CWD);	// 92545                  cwd ;~ 17C5:467F
cs=0x17c5;eip=0x004680; 	T(XOR(ax, dx));	// 92546                  xor     ax, dx ;~ 17C5:4680
cs=0x17c5;eip=0x004682; 	T(SUB(ax, dx));	// 92547                  sub     ax, dx ;~ 17C5:4682
cs=0x17c5;eip=0x004684; 	T(cx = 8;);	// 92548                  mov     cx, 8 ;~ 17C5:4684
cs=0x17c5;eip=0x004687; 	T(SAR(ax, cl));	// 92549                  sar     ax, cl ;~ 17C5:4687
cs=0x17c5;eip=0x004689; 	T(XOR(ax, dx));	// 92550                  xor     ax, dx ;~ 17C5:4689
cs=0x17c5;eip=0x00468b; 	T(SUB(ax, dx));	// 92551                  sub     ax, dx ;~ 17C5:468B
cs=0x17c5;eip=0x00468d; 	T(cx = ax;);	// 92552                  mov     cx, ax ;~ 17C5:468D
cs=0x17c5;eip=0x00468f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 92553                  mov     ax, [bp+var_14] ;~ 17C5:468F
cs=0x17c5;eip=0x004692; 	T(bx = cx;);	// 92554                  mov     bx, cx ;~ 17C5:4692
cs=0x17c5;eip=0x004694; 	T(CWD);	// 92555                  cwd ;~ 17C5:4694
cs=0x17c5;eip=0x004695; 	T(XOR(ax, dx));	// 92556                  xor     ax, dx ;~ 17C5:4695
cs=0x17c5;eip=0x004697; 	T(SUB(ax, dx));	// 92557                  sub     ax, dx ;~ 17C5:4697
cs=0x17c5;eip=0x004699; 	T(cx = 6;);	// 92558                  mov     cx, 6 ;~ 17C5:4699
cs=0x17c5;eip=0x00469c; 	T(SAR(ax, cl));	// 92559                  sar     ax, cl ;~ 17C5:469C
cs=0x17c5;eip=0x00469e; 	T(XOR(ax, dx));	// 92560                  xor     ax, dx ;~ 17C5:469E
cs=0x17c5;eip=0x0046a0; 	T(SUB(ax, dx));	// 92561                  sub     ax, dx ;~ 17C5:46A0
cs=0x17c5;eip=0x0046a2; 	T(ADD(bx, ax));	// 92562                  add     bx, ax ;~ 17C5:46A2
cs=0x17c5;eip=0x0046a4; 	X(PUSH(bx));	// 92563                  push    bx ;~ 17C5:46A4
cs=0x17c5;eip=0x0046a5; 	J(CALL(sub_33194,0));	// 92564                  call    sub_33194 ;~ 17C5:46A5
cs=0x17c5;eip=0x0046a8; 	T(ADD(sp, 6));	// 92565                  add     sp, 6 ;~ 17C5:46A8
cs=0x17c5;eip=0x0046ab; 	X(word_4e310 = ax;);	// 92566                  mov     ds:word_4E310, ax ;~ 17C5:46AB
cs=0x17c5;eip=0x0046ae; 	J(CALL(sub_2c20b,0));	// 92567                  call    sub_2C20B ;~ 17C5:46AE
cs=0x17c5;eip=0x0046b1; 	T(ax = 0x18;);	// 92568                  mov     ax, 18h ;~ 17C5:46B1
cs=0x17c5;eip=0x0046b4; 	X(PUSH(ax));	// 92569                  push    ax ;~ 17C5:46B4
cs=0x17c5;eip=0x0046b5; 	T(ax = 0x0FFE8;);	// 92570                  mov     ax, 0FFE8h ;~ 17C5:46B5
cs=0x17c5;eip=0x0046b8; 	X(PUSH(ax));	// 92571                  push    ax ;~ 17C5:46B8
cs=0x17c5;eip=0x0046b9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 92572                  mov     ax, [bp+var_14] ;~ 17C5:46B9
cs=0x17c5;eip=0x0046bc; 	T(SUB(ax, word_4e2fe));	// 92573                  sub     ax, ds:word_4E2FE ;~ 17C5:46BC
cs=0x17c5;eip=0x0046c0; 	T(cl = 3;);	// 92574                  mov     cl, 3 ;~ 17C5:46C0
cs=0x17c5;eip=0x0046c2; 	T(SAR(ax, cl));	// 92575                  sar     ax, cl ;~ 17C5:46C2
cs=0x17c5;eip=0x0046c4; 	T(dx = word_4f1f4;);	// 92576                  mov     dx, ds:word_4F1F4 ;~ 17C5:46C4
cs=0x17c5;eip=0x0046c8; 	T(cl = 7;);	// 92577                  mov     cl, 7 ;~ 17C5:46C8
cs=0x17c5;eip=0x0046ca; 	T(SAR(dx, cl));	// 92578                  sar     dx, cl ;~ 17C5:46CA
cs=0x17c5;eip=0x0046cc; 	T(ADD(ax, dx));	// 92579                  add     ax, dx ;~ 17C5:46CC
cs=0x17c5;eip=0x0046ce; 	X(PUSH(ax));	// 92580                  push    ax ;~ 17C5:46CE
cs=0x17c5;eip=0x0046cf; 	J(CALL(sub_331be,0));	// 92581                  call    sub_331BE ;~ 17C5:46CF
cs=0x17c5;eip=0x0046d2; 	T(ADD(sp, 6));	// 92582                  add     sp, 6 ;~ 17C5:46D2
cs=0x17c5;eip=0x0046d5; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 92583                  mov     [bp+var_14], ax ;~ 17C5:46D5
cs=0x17c5;eip=0x0046d8; 	T(ax = 0x10;);	// 92584                  mov     ax, 10h ;~ 17C5:46D8
cs=0x17c5;eip=0x0046db; 	X(PUSH(ax));	// 92585                  push    ax ;~ 17C5:46DB
cs=0x17c5;eip=0x0046dc; 	T(ax = 0x0FFF0;);	// 92586                  mov     ax, 0FFF0h ;~ 17C5:46DC
cs=0x17c5;eip=0x0046df; 	X(PUSH(ax));	// 92587                  push    ax ;~ 17C5:46DF
cs=0x17c5;eip=0x0046e0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 92588                  mov     ax, [bp+var_14] ;~ 17C5:46E0
cs=0x17c5;eip=0x0046e3; 	T(dx = word_4e2fa;);	// 92589                  mov     dx, ds:word_4E2FA ;~ 17C5:46E3
cs=0x17c5;eip=0x0046e7; 	T(cl = 7;);	// 92590                  mov     cl, 7 ;~ 17C5:46E7
cs=0x17c5;eip=0x0046e9; 	T(SAR(dx, cl));	// 92591                  sar     dx, cl ;~ 17C5:46E9
cs=0x17c5;eip=0x0046eb; 	T(SUB(ax, dx));	// 92592                  sub     ax, dx ;~ 17C5:46EB
cs=0x17c5;eip=0x0046ed; 	X(PUSH(ax));	// 92593                  push    ax ;~ 17C5:46ED
cs=0x17c5;eip=0x0046ee; 	J(CALL(sub_33194,0));	// 92594                  call    sub_33194 ;~ 17C5:46EE
cs=0x17c5;eip=0x0046f1; 	T(ADD(sp, 6));	// 92595                  add     sp, 6 ;~ 17C5:46F1
cs=0x17c5;eip=0x0046f4; 	X(word_527d4 = ax;);	// 92596                  mov     ds:word_527D4, ax ;~ 17C5:46F4
cs=0x17c5;eip=0x0046f7; 	T(CMP(word_50c8a, 0x15E));	// 92597                  cmp     ds:word_50C8A, 15Eh ;~ 17C5:46F7
cs=0x17c5;eip=0x0046fd; 	J(JGE(loc_2a934));	// 92598                  jge     short loc_2A934 ;~ 17C5:46FD
cs=0x17c5;eip=0x0046ff; 	X(AND(*(db*)(&word_4f42e), 0x0FE));	// 92599                  and     byte ptr ds:word_4F42E, 0FEh ;~ 17C5:46FF
loc_2a934:
	// 5403 
cs=0x17c5;eip=0x004704; 	T(ax = word_4e2fe;);	// 92602                  mov     ax, ds:word_4E2FE ;~ 17C5:4704
cs=0x17c5;eip=0x004707; 	T(CMP(word_520ee, ax));	// 92603                  cmp     ds:word_520EE, ax ;~ 17C5:4707
cs=0x17c5;eip=0x00470b; 	J(JNZ(loc_2a954));	// 92604                  jnz     short loc_2A954 ;~ 17C5:470B
cs=0x17c5;eip=0x00470d; 	X(word_4e310 = 0;);	// 92605                  mov     ds:word_4E310, 0 ;~ 17C5:470D
cs=0x17c5;eip=0x004713; 	X(word_5223e = 0;);	// 92606                  mov     ds:word_5223E, 0 ;~ 17C5:4713
cs=0x17c5;eip=0x004719; 	X(OR(*(db*)(&word_4f42e), 8));	// 92607                  or      byte ptr ds:word_4F42E, 8 ;~ 17C5:4719
cs=0x17c5;eip=0x00471e; 	X(word_527d4 = 0;);	// 92608                  mov     ds:word_527D4, 0 ;~ 17C5:471E
loc_2a954:
	// 5404 
cs=0x17c5;eip=0x004724; 	T(LES(bx, dword_4f220));	// 92612                  les     bx, ds:dword_4F220 ;~ 17C5:4724
cs=0x17c5;eip=0x004728; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 0));	// 92613                  cmp     word ptr es:[bx+40h], 0 ;~ 17C5:4728
cs=0x17c5;eip=0x00472d; 	J(JZ(loc_2a983));	// 92614                  jz      short loc_2A983 ;~ 17C5:472D
cs=0x17c5;eip=0x00472f; 	T(ax = word_50c8a;);	// 92615                  mov     ax, ds:word_50C8A ;~ 17C5:472F
cs=0x17c5;eip=0x004732; 	T(CWD);	// 92616                  cwd ;~ 17C5:4732
cs=0x17c5;eip=0x004733; 	X(PUSH(dx));	// 92617                  push    dx ;~ 17C5:4733
cs=0x17c5;eip=0x004734; 	X(PUSH(ax));	// 92618                  push    ax ;~ 17C5:4734
cs=0x17c5;eip=0x004735; 	T(ax = 0x3E8;);	// 92619                  mov     ax, 3E8h ;~ 17C5:4735
cs=0x17c5;eip=0x004738; 	T(SUB(ax, word_4e2fe));	// 92620                  sub     ax, ds:word_4E2FE ;~ 17C5:4738
cs=0x17c5;eip=0x00473c; 	T(CWD);	// 92621                  cwd ;~ 17C5:473C
cs=0x17c5;eip=0x00473d; 	X(PUSH(dx));	// 92622                  push    dx ;~ 17C5:473D
cs=0x17c5;eip=0x00473e; 	X(PUSH(ax));	// 92623                  push    ax ;~ 17C5:473E
cs=0x17c5;eip=0x00473f; 	J(CALL(sub_34ee0,0));	// 92624                  call    sub_34EE0 ;~ 17C5:473F
cs=0x17c5;eip=0x004742; 	T(cl = 0x0F;);	// 92625                  mov     cl, 0Fh ;~ 17C5:4742
loc_2a974:
	// 5405 
cs=0x17c5;eip=0x004744; 	T(SAR(dx, 1));	// 92628                  sar     dx, 1 ;~ 17C5:4744
cs=0x17c5;eip=0x004746; 	T(RCR(ax, 1));	// 92629                  rcr     ax, 1 ;~ 17C5:4746
cs=0x17c5;eip=0x004748; 	T(DEC(cl));	// 92630                  dec     cl ;~ 17C5:4748
cs=0x17c5;eip=0x00474a; 	J(JZ(loc_2a97e));	// 92631                  jz      short loc_2A97E ;~ 17C5:474A
cs=0x17c5;eip=0x00474c; 	J(JMP(loc_2a974));	// 92632                  jmp     short loc_2A974 ;~ 17C5:474C
loc_2a97e:
	// 5406 
cs=0x17c5;eip=0x00474e; 	X(MOV(*(dw*)(raddr(ss,bp+var_24)), ax));	// 92636                  mov     [bp+var_24], ax ;~ 17C5:474E
cs=0x17c5;eip=0x004751; 	J(JMP(loc_2a988));	// 92637                  jmp     short loc_2A988 ;~ 17C5:4751
loc_2a983:
	// 5407 
cs=0x17c5;eip=0x004753; 	X(MOV(*(dw*)(raddr(ss,bp+var_24)), 0));	// 92641                  mov     [bp+var_24], 0 ;~ 17C5:4753
loc_2a988:
	// 5408 
cs=0x17c5;eip=0x004758; 	T(TEST(*(db*)(&word_4f42e), 1));	// 92644                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:4758
cs=0x17c5;eip=0x00475d; 	J(JNZ(loc_2a9aa));	// 92645                  jnz     short loc_2A9AA ;~ 17C5:475D
cs=0x17c5;eip=0x00475f; 	T(ax = 0x20;);	// 92646                  mov     ax, 20h ; ' ' ;~ 17C5:475F
cs=0x17c5;eip=0x004762; 	X(PUSH(ax));	// 92647                  push    ax ;~ 17C5:4762
cs=0x17c5;eip=0x004763; 	T(SUB(ax, ax));	// 92648                  sub     ax, ax ;~ 17C5:4763
cs=0x17c5;eip=0x004765; 	X(PUSH(ax));	// 92649                  push    ax ;~ 17C5:4765
cs=0x17c5;eip=0x004766; 	T(ax = word_50c8a;);	// 92650                  mov     ax, ds:word_50C8A ;~ 17C5:4766
cs=0x17c5;eip=0x004769; 	T(SUB(ax, 0x0C8));	// 92651                  sub     ax, 0C8h ;~ 17C5:4769
cs=0x17c5;eip=0x00476c; 	T(cl = 5;);	// 92652                  mov     cl, 5 ;~ 17C5:476C
cs=0x17c5;eip=0x00476e; 	T(SAR(ax, cl));	// 92653                  sar     ax, cl ;~ 17C5:476E
cs=0x17c5;eip=0x004770; 	X(PUSH(ax));	// 92654                  push    ax ;~ 17C5:4770
cs=0x17c5;eip=0x004771; 	J(CALL(sub_33194,0));	// 92655                  call    sub_33194 ;~ 17C5:4771
cs=0x17c5;eip=0x004774; 	T(ADD(sp, 6));	// 92656                  add     sp, 6 ;~ 17C5:4774
cs=0x17c5;eip=0x004777; 	X(ADD(*(dw*)(raddr(ss,bp+var_24)), ax));	// 92657                  add     [bp+var_24], ax ;~ 17C5:4777
loc_2a9aa:
	// 5409 
cs=0x17c5;eip=0x00477a; 	T(CMP(*(dw*)(raddr(ss,bp+var_24)), 0));	// 92660                  cmp     [bp+var_24], 0 ;~ 17C5:477A
cs=0x17c5;eip=0x00477e; 	J(JLE(loc_2a9e3));	// 92661                  jle     short loc_2A9E3 ;~ 17C5:477E
cs=0x17c5;eip=0x004780; 	T(ax = word_4e2fe;);	// 92662                  mov     ax, ds:word_4E2FE ;~ 17C5:4780
cs=0x17c5;eip=0x004783; 	T(CMP(word_520ee, ax));	// 92663                  cmp     ds:word_520EE, ax ;~ 17C5:4783
cs=0x17c5;eip=0x004787; 	J(JNC(loc_2a9e3));	// 92664                  jnb     short loc_2A9E3 ;~ 17C5:4787
cs=0x17c5;eip=0x004789; 	X(PUSH(*(dw*)(raddr(ss,bp+var_24))));	// 92665                  push    [bp+var_24] ;~ 17C5:4789
cs=0x17c5;eip=0x00478c; 	J(CALL(sub_33430,0));	// 92666                  call    sub_33430 ;~ 17C5:478C
cs=0x17c5;eip=0x00478f; 	T(ADD(sp, 2));	// 92667                  add     sp, 2 ;~ 17C5:478F
cs=0x17c5;eip=0x004792; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_24))));	// 92668                  mov     cx, [bp+var_24] ;~ 17C5:4792
cs=0x17c5;eip=0x004795; 	T(SAR(cx, 1));	// 92669                  sar     cx, 1 ;~ 17C5:4795
cs=0x17c5;eip=0x004797; 	T(SUB(ax, cx));	// 92670                  sub     ax, cx ;~ 17C5:4797
cs=0x17c5;eip=0x004799; 	X(ADD(word_5223e, ax));	// 92671                  add     ds:word_5223E, ax ;~ 17C5:4799
cs=0x17c5;eip=0x00479d; 	X(PUSH(*(dw*)(raddr(ss,bp+var_24))));	// 92672                  push    [bp+var_24] ;~ 17C5:479D
cs=0x17c5;eip=0x0047a0; 	J(CALL(sub_33430,0));	// 92673                  call    sub_33430 ;~ 17C5:47A0
cs=0x17c5;eip=0x0047a3; 	T(ADD(sp, 2));	// 92674                  add     sp, 2 ;~ 17C5:47A3
cs=0x17c5;eip=0x0047a6; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_24))));	// 92675                  mov     cx, [bp+var_24] ;~ 17C5:47A6
cs=0x17c5;eip=0x0047a9; 	T(SAR(cx, 1));	// 92676                  sar     cx, 1 ;~ 17C5:47A9
cs=0x17c5;eip=0x0047ab; 	T(SUB(ax, cx));	// 92677                  sub     ax, cx ;~ 17C5:47AB
cs=0x17c5;eip=0x0047ad; 	T(SAR(ax, 1));	// 92678                  sar     ax, 1 ;~ 17C5:47AD
cs=0x17c5;eip=0x0047af; 	X(ADD(word_527d4, ax));	// 92679                  add     ds:word_527D4, ax ;~ 17C5:47AF
loc_2a9e3:
	// 5410 
cs=0x17c5;eip=0x0047b3; 	T(TEST(*(db*)(&word_4f42e), 1));	// 92683                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:47B3
cs=0x17c5;eip=0x0047b8; 	J(JZ(loc_2aa4b));	// 92684                  jz      short loc_2AA4B ;~ 17C5:47B8
cs=0x17c5;eip=0x0047ba; 	T(CMP(word_527d4, 0));	// 92685                  cmp     ds:word_527D4, 0 ;~ 17C5:47BA
cs=0x17c5;eip=0x0047bf; 	J(JG(loc_2aa4b));	// 92686                  jg      short loc_2AA4B ;~ 17C5:47BF
cs=0x17c5;eip=0x0047c1; 	T(ax = word_50b74;);	// 92687                  mov     ax, ds:word_50B74 ;~ 17C5:47C1
cs=0x17c5;eip=0x0047c4; 	T(CMP(word_50b2e, ax));	// 92688                  cmp     ds:word_50B2E, ax ;~ 17C5:47C4
cs=0x17c5;eip=0x0047c8; 	J(JNC(loc_2aa4b));	// 92689                  jnb     short loc_2AA4B ;~ 17C5:47C8
cs=0x17c5;eip=0x0047ca; 	T(LES(bx, dword_4f220));	// 92690                  les     bx, ds:dword_4F220 ;~ 17C5:47CA
cs=0x17c5;eip=0x0047ce; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 2));	// 92691                  cmp     word ptr es:[bx+40h], 2 ;~ 17C5:47CE
cs=0x17c5;eip=0x0047d3; 	J(JNC(loc_2aa4b));	// 92692                  jnb     short loc_2AA4B ;~ 17C5:47D3
cs=0x17c5;eip=0x0047d5; 	X(PUSH(word_4e2fc));	// 92693                  push    ds:word_4E2FC ;~ 17C5:47D5
cs=0x17c5;eip=0x0047d9; 	J(CALL(sub_34dc0,0));	// 92694                  call    sub_34DC0 ;~ 17C5:47D9
cs=0x17c5;eip=0x0047dc; 	T(ADD(sp, 2));	// 92695                  add     sp, 2 ;~ 17C5:47DC
cs=0x17c5;eip=0x0047df; 	T(CMP(ax, 0x3000));	// 92696                  cmp     ax, 3000h ;~ 17C5:47DF
cs=0x17c5;eip=0x0047e2; 	J(JGE(loc_2aa4b));	// 92697                  jge     short loc_2AA4B ;~ 17C5:47E2
cs=0x17c5;eip=0x0047e4; 	T(CMP(word_4f218, 0));	// 92698                  cmp     ds:word_4F218, 0 ;~ 17C5:47E4
cs=0x17c5;eip=0x0047e9; 	J(JNZ(loc_2aa4b));	// 92699                  jnz     short loc_2AA4B ;~ 17C5:47E9
cs=0x17c5;eip=0x0047eb; 	T(ax = word_4f1f4;);	// 92700                  mov     ax, ds:word_4F1F4 ;~ 17C5:47EB
cs=0x17c5;eip=0x0047ee; 	T(SUB(ax, word_4e2fa));	// 92701                  sub     ax, ds:word_4E2FA ;~ 17C5:47EE
cs=0x17c5;eip=0x0047f2; 	T(SAR(ax, 1));	// 92702                  sar     ax, 1 ;~ 17C5:47F2
cs=0x17c5;eip=0x0047f4; 	T(SAR(ax, 1));	// 92703                  sar     ax, 1 ;~ 17C5:47F4
cs=0x17c5;eip=0x0047f6; 	T(SUB(ax, word_4e2fe));	// 92704                  sub     ax, ds:word_4E2FE ;~ 17C5:47F6
cs=0x17c5;eip=0x0047fa; 	T(ADD(ax, 0x12C));	// 92705                  add     ax, 12Ch ;~ 17C5:47FA
cs=0x17c5;eip=0x0047fd; 	T(SAR(ax, 1));	// 92706                  sar     ax, 1 ;~ 17C5:47FD
cs=0x17c5;eip=0x0047ff; 	T(SAR(ax, 1));	// 92707                  sar     ax, 1 ;~ 17C5:47FF
cs=0x17c5;eip=0x004801; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 92708                  mov     [bp+var_14], ax ;~ 17C5:4801
cs=0x17c5;eip=0x004804; 	T(OR(ax, ax));	// 92709                  or      ax, ax ;~ 17C5:4804
cs=0x17c5;eip=0x004806; 	J(JLE(loc_2aa4b));	// 92710                  jle     short loc_2AA4B ;~ 17C5:4806
cs=0x17c5;eip=0x004808; 	T(ax = 0x20;);	// 92711                  mov     ax, 20h ; ' ' ;~ 17C5:4808
cs=0x17c5;eip=0x00480b; 	X(PUSH(ax));	// 92712                  push    ax ;~ 17C5:480B
cs=0x17c5;eip=0x00480c; 	T(SUB(ax, ax));	// 92713                  sub     ax, ax ;~ 17C5:480C
cs=0x17c5;eip=0x00480e; 	X(PUSH(ax));	// 92714                  push    ax ;~ 17C5:480E
cs=0x17c5;eip=0x00480f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 92715                  push    [bp+var_14] ;~ 17C5:480F
cs=0x17c5;eip=0x004812; 	J(CALL(sub_33194,0));	// 92716                  call    sub_33194 ;~ 17C5:4812
cs=0x17c5;eip=0x004815; 	T(ADD(sp, 6));	// 92717                  add     sp, 6 ;~ 17C5:4815
cs=0x17c5;eip=0x004818; 	X(word_527d4 = ax;);	// 92718                  mov     ds:word_527D4, ax ;~ 17C5:4818
loc_2aa4b:
	// 5411 
cs=0x17c5;eip=0x00481b; 	T(CMP(word_5206c, 0));	// 92722                  cmp     ds:word_5206C, 0 ;~ 17C5:481B
cs=0x17c5;eip=0x004820; 	J(JNZ(loc_2aa55));	// 92723                  jnz     short loc_2AA55 ;~ 17C5:4820
cs=0x17c5;eip=0x004822; 	J(JMP(loc_2ab88));	// 92724                  jmp     loc_2AB88 ;~ 17C5:4822
loc_2aa55:
	// 5412 
cs=0x17c5;eip=0x004825; 	X(word_5223e = 0x40;);	// 92728                  mov     ds:word_5223E, 40h ; '@' ;~ 17C5:4825
cs=0x17c5;eip=0x00482b; 	X(PUSH(word_4e2fc));	// 92729                  push    ds:word_4E2FC ;~ 17C5:482B
cs=0x17c5;eip=0x00482f; 	J(CALL(sub_34dc0,0));	// 92730                  call    sub_34DC0 ;~ 17C5:482F
cs=0x17c5;eip=0x004832; 	T(ADD(sp, 2));	// 92731                  add     sp, 2 ;~ 17C5:4832
cs=0x17c5;eip=0x004835; 	T(CMP(ax, 0x4000));	// 92732                  cmp     ax, 4000h ;~ 17C5:4835
cs=0x17c5;eip=0x004838; 	J(JLE(loc_2aa6f));	// 92733                  jle     short loc_2AA6F ;~ 17C5:4838
cs=0x17c5;eip=0x00483a; 	T(ax = 0x10;);	// 92734                  mov     ax, 10h ;~ 17C5:483A
cs=0x17c5;eip=0x00483d; 	J(JMP(loc_2aa72));	// 92735                  jmp     short loc_2AA72 ;~ 17C5:483D
loc_2aa6f:
	// 5413 
cs=0x17c5;eip=0x00483f; 	T(ax = 0x0FFF8;);	// 92739                  mov     ax, 0FFF8h ;~ 17C5:483F
loc_2aa72:
	// 5414 
cs=0x17c5;eip=0x004842; 	X(word_527d4 = ax;);	// 92742                  mov     ds:word_527D4, ax ;~ 17C5:4842
cs=0x17c5;eip=0x004845; 	T(ax = 0x80;);	// 92743                  mov     ax, 80h ;~ 17C5:4845
cs=0x17c5;eip=0x004848; 	T(CWD);	// 92744                  cwd ;~ 17C5:4848
cs=0x17c5;eip=0x004849; 	T(cx = word_492f4;);	// 92745                  mov     cx, word_492F4 ;~ 17C5:4849
cs=0x17c5;eip=0x00484d; 	T(IDIV2(cx));	// 92746                  idiv    cx ;~ 17C5:484D
cs=0x17c5;eip=0x00484f; 	X(PUSH(ax));	// 92747                  push    ax ;~ 17C5:484F
cs=0x17c5;eip=0x004850; 	T(ax = 0x0FF00;);	// 92748                  mov     ax, 0FF00h ;~ 17C5:4850
cs=0x17c5;eip=0x004853; 	T(CWD);	// 92749                  cwd ;~ 17C5:4853
cs=0x17c5;eip=0x004854; 	T(IDIV2(cx));	// 92750                  idiv    cx ;~ 17C5:4854
cs=0x17c5;eip=0x004856; 	X(PUSH(ax));	// 92751                  push    ax ;~ 17C5:4856
cs=0x17c5;eip=0x004857; 	X(INC(word_5206c));	// 92752                  inc     ds:word_5206C ;~ 17C5:4857
cs=0x17c5;eip=0x00485b; 	T(ax = word_5206c;);	// 92753                  mov     ax, ds:word_5206C ;~ 17C5:485B
cs=0x17c5;eip=0x00485e; 	T(SUB(ax, 0x20));	// 92754                  sub     ax, 20h ; ' ' ;~ 17C5:485E
cs=0x17c5;eip=0x004861; 	T(NEG(ax));	// 92755                  neg     ax ;~ 17C5:4861
cs=0x17c5;eip=0x004863; 	X(PUSH(ax));	// 92756                  push    ax ;~ 17C5:4863
cs=0x17c5;eip=0x004864; 	J(CALL(sub_33194,0));	// 92757                  call    sub_33194 ;~ 17C5:4864
cs=0x17c5;eip=0x004867; 	T(ADD(sp, 6));	// 92758                  add     sp, 6 ;~ 17C5:4867
cs=0x17c5;eip=0x00486a; 	X(ADD(word_52270, ax));	// 92759                  add     ds:word_52270, ax ;~ 17C5:486A
cs=0x17c5;eip=0x00486e; 	J(JNS(loc_2aab6));	// 92760                  jns     short loc_2AAB6 ;~ 17C5:486E
cs=0x17c5;eip=0x004870; 	X(word_52270 = 0;);	// 92761                  mov     ds:word_52270, 0 ;~ 17C5:4870
cs=0x17c5;eip=0x004876; 	T(TEST(*(db*)(&word_4f210), 7));	// 92762                  test    byte ptr ds:word_4F210, 7 ;~ 17C5:4876
cs=0x17c5;eip=0x00487b; 	J(JNZ(loc_2aab6));	// 92763                  jnz     short loc_2AAB6 ;~ 17C5:487B
cs=0x17c5;eip=0x00487d; 	T(SUB(ax, ax));	// 92764                  sub     ax, ax ;~ 17C5:487D
cs=0x17c5;eip=0x00487f; 	X(PUSH(ax));	// 92765                  push    ax ;~ 17C5:487F
cs=0x17c5;eip=0x004880; 	J(CALL(sub_27d67,0));	// 92766                  call    sub_27D67 ;~ 17C5:4880
cs=0x17c5;eip=0x004883; 	T(ADD(sp, 2));	// 92767                  add     sp, 2 ;~ 17C5:4883
loc_2aab6:
	// 5415 
cs=0x17c5;eip=0x004886; 	T(CMP(word_4e2fe, 0));	// 92771                  cmp     ds:word_4E2FE, 0 ;~ 17C5:4886
cs=0x17c5;eip=0x00488b; 	J(JNZ(loc_2ab01));	// 92772                  jnz     short loc_2AB01 ;~ 17C5:488B
cs=0x17c5;eip=0x00488d; 	T(CMP(word_49926, 0x0FFFF));	// 92773                  cmp     word_49926, 0FFFFh ;~ 17C5:488D
cs=0x17c5;eip=0x004892; 	J(JNZ(loc_2ab01));	// 92774                  jnz     short loc_2AB01 ;~ 17C5:4892
cs=0x17c5;eip=0x004894; 	X(word_49926 = 0;);	// 92775                  mov     word_49926, 0 ;~ 17C5:4894
cs=0x17c5;eip=0x00489a; 	T(ax = word_520f0;);	// 92776                  mov     ax, ds:word_520F0 ;~ 17C5:489A
cs=0x17c5;eip=0x00489d; 	X(word_50c8e = ax;);	// 92777                  mov     ds:word_50C8E, ax ;~ 17C5:489D
cs=0x17c5;eip=0x0048a0; 	T(ax = word_52100;);	// 92778                  mov     ax, ds:word_52100 ;~ 17C5:48A0
cs=0x17c5;eip=0x0048a3; 	X(*(dw*)(asc_50c90) = ax;);	// 92779                  mov     word ptr ds:asc_50C90, ax ; "\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v" ;~ 17C5:48A3
cs=0x17c5;eip=0x0048a6; 	T(ax = word_520f0;);	// 92780                  mov     ax, ds:word_520F0 ;~ 17C5:48A6
cs=0x17c5;eip=0x0048a9; 	X(word_520ec = ax;);	// 92781                  mov     ds:word_520EC, ax ;~ 17C5:48A9
cs=0x17c5;eip=0x0048ac; 	T(ax = word_52100;);	// 92782                  mov     ax, ds:word_52100 ;~ 17C5:48AC
cs=0x17c5;eip=0x0048af; 	X(word_520f8 = ax;);	// 92783                  mov     ds:word_520F8, ax ;~ 17C5:48AF
cs=0x17c5;eip=0x0048b2; 	X(word_520fe = 0;);	// 92784                  mov     ds:word_520FE, 0 ;~ 17C5:48B2
cs=0x17c5;eip=0x0048b8; 	X(word_4f836 = 0x0FFF8;);	// 92785                  mov     ds:word_4F836, 0FFF8h ;~ 17C5:48B8
cs=0x17c5;eip=0x0048be; 	T(ax = 2;);	// 92786                  mov     ax, 2 ;~ 17C5:48BE
cs=0x17c5;eip=0x0048c1; 	X(PUSH(ax));	// 92787                  push    ax ;~ 17C5:48C1
cs=0x17c5;eip=0x0048c2; 	X(PUSH(ax));	// 92788                  push    ax ;~ 17C5:48C2
cs=0x17c5;eip=0x0048c3; 	J(CALL(sub_33c65,0));	// 92789                  call    sub_33C65 ;~ 17C5:48C3
cs=0x17c5;eip=0x0048c6; 	T(ADD(sp, 4));	// 92791                  add     sp, 4 ;~ 17C5:48C6
cs=0x17c5;eip=0x0048c9; 	T(SUB(ax, ax));	// 92792                  sub     ax, ax ;~ 17C5:48C9
cs=0x17c5;eip=0x0048cb; 	X(word_4e310 = ax;);	// 92793                  mov     ds:word_4E310, ax ;~ 17C5:48CB
cs=0x17c5;eip=0x0048ce; 	X(word_50b74 = ax;);	// 92794                  mov     ds:word_50B74, ax ;~ 17C5:48CE
loc_2ab01:
	// 5416 
cs=0x17c5;eip=0x0048d1; 	T(ax = word_5206c;);	// 92798                  mov     ax, ds:word_5206C ;~ 17C5:48D1
cs=0x17c5;eip=0x0048d4; 	T(AND(al, 0x0FC));	// 92799                  and     al, 0FCh ;~ 17C5:48D4
cs=0x17c5;eip=0x0048d6; 	T(CMP(ax, 0x10));	// 92800                  cmp     ax, 10h ;~ 17C5:48D6
cs=0x17c5;eip=0x0048d9; 	J(JNZ(loc_2ab88));	// 92801                  jnz     short loc_2AB88 ;~ 17C5:48D9
cs=0x17c5;eip=0x0048db; 	T(al = *(db*)(&word_49918););	// 92802                  mov     al, byte ptr word_49918 ;~ 17C5:48DB
cs=0x17c5;eip=0x0048de; 	T(AND(al, 3));	// 92803                  and     al, 3 ;~ 17C5:48DE
cs=0x17c5;eip=0x0048e0; 	T(CMP(al, 1));	// 92804                  cmp     al, 1 ;~ 17C5:48E0
cs=0x17c5;eip=0x0048e2; 	J(JNZ(loc_2ab88));	// 92805                  jnz     short loc_2AB88 ;~ 17C5:48E2
cs=0x17c5;eip=0x0048e4; 	X(word_49926 = 0x0FFFF;);	// 92806                  mov     word_49926, 0FFFFh ;~ 17C5:48E4
cs=0x17c5;eip=0x0048ea; 	T(ax = word_49918;);	// 92807                  mov     ax, word_49918 ;~ 17C5:48EA
cs=0x17c5;eip=0x0048ed; 	T(SHR(ax, 1));	// 92808                  shr     ax, 1 ;~ 17C5:48ED
cs=0x17c5;eip=0x0048ef; 	T(AND(ax, 7));	// 92809                  and     ax, 7 ;~ 17C5:48EF
cs=0x17c5;eip=0x0048f2; 	X(MOV(*(dw*)(raddr(ss,bp+var_38)), ax));	// 92810                  mov     [bp+var_38], ax ;~ 17C5:48F2
cs=0x17c5;eip=0x0048f5; 	T(si = ax;);	// 92811                  mov     si, ax ;~ 17C5:48F5
cs=0x17c5;eip=0x0048f7; 	T(cl = 3;);	// 92812                  mov     cl, 3 ;~ 17C5:48F7
cs=0x17c5;eip=0x0048f9; 	T(SHL(si, cl));	// 92813                  shl     si, cl ;~ 17C5:48F9
cs=0x17c5;eip=0x0048fb; 	T(ax = word_520f0;);	// 92814                  mov     ax, ds:word_520F0 ;~ 17C5:48FB
cs=0x17c5;eip=0x0048fe; 	X(MOV(*(dw*)(raddr(ds,si+0x0B52)), ax));	// 92815                  mov     [si+0B52h], ax ;~ 17C5:48FE
cs=0x17c5;eip=0x004902; 	T(ax = word_52100;);	// 92816                  mov     ax, ds:word_52100 ;~ 17C5:4902
cs=0x17c5;eip=0x004905; 	X(MOV(*(dw*)(raddr(ds,si+0x0B54)), ax));	// 92817                  mov     [si+0B54h], ax ;~ 17C5:4905
cs=0x17c5;eip=0x004909; 	T(ax = word_4e2fe;);	// 92818                  mov     ax, ds:word_4E2FE ;~ 17C5:4909
cs=0x17c5;eip=0x00490c; 	X(MOV(*(dw*)(raddr(ds,si+0x0B56)), ax));	// 92819                  mov     [si+0B56h], ax ;~ 17C5:490C
cs=0x17c5;eip=0x004910; 	T(ax = 0x20;);	// 92820                  mov     ax, 20h ; ' ' ;~ 17C5:4910
cs=0x17c5;eip=0x004913; 	X(PUSH(ax));	// 92821                  push    ax ;~ 17C5:4913
cs=0x17c5;eip=0x004914; 	J(CALL(sub_33430,0));	// 92822                  call    sub_33430 ;~ 17C5:4914
cs=0x17c5;eip=0x004917; 	T(ADD(sp, 2));	// 92823                  add     sp, 2 ;~ 17C5:4917
cs=0x17c5;eip=0x00491a; 	T(cl = 0x0B;);	// 92824                  mov     cl, 0Bh ;~ 17C5:491A
cs=0x17c5;eip=0x00491c; 	T(SHL(ax, cl));	// 92825                  shl     ax, cl ;~ 17C5:491C
cs=0x17c5;eip=0x00491e; 	X(MOV(*(dw*)(raddr(ds,si+0x0B58)), ax));	// 92826                  mov     [si+0B58h], ax ;~ 17C5:491E
cs=0x17c5;eip=0x004922; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_38))));	// 92827                  mov     ax, [bp+var_38] ;~ 17C5:4922
cs=0x17c5;eip=0x004925; 	X(word_49672 = ax;);	// 92828                  mov     word_49672, ax ;~ 17C5:4925
cs=0x17c5;eip=0x004928; 	T(ax = word_520f0;);	// 92829                  mov     ax, ds:word_520F0 ;~ 17C5:4928
cs=0x17c5;eip=0x00492b; 	X(word_520ec = ax;);	// 92830                  mov     ds:word_520EC, ax ;~ 17C5:492B
cs=0x17c5;eip=0x00492e; 	T(ax = word_52100;);	// 92831                  mov     ax, ds:word_52100 ;~ 17C5:492E
cs=0x17c5;eip=0x004931; 	X(word_520f8 = ax;);	// 92832                  mov     ds:word_520F8, ax ;~ 17C5:4931
cs=0x17c5;eip=0x004934; 	T(ax = word_4e2fe;);	// 92833                  mov     ax, ds:word_4E2FE ;~ 17C5:4934
cs=0x17c5;eip=0x004937; 	X(word_520fe = ax;);	// 92834                  mov     ds:word_520FE, ax ;~ 17C5:4937
cs=0x17c5;eip=0x00493a; 	X(word_4f836 = 0x0FFF8;);	// 92835                  mov     ds:word_4F836, 0FFF8h ;~ 17C5:493A
cs=0x17c5;eip=0x004940; 	T(ax = 2;);	// 92836                  mov     ax, 2 ;~ 17C5:4940
cs=0x17c5;eip=0x004943; 	X(PUSH(ax));	// 92837                  push    ax ;~ 17C5:4943
cs=0x17c5;eip=0x004944; 	T(SUB(ax, ax));	// 92838                  sub     ax, ax ;~ 17C5:4944
cs=0x17c5;eip=0x004946; 	X(PUSH(ax));	// 92839                  push    ax ;~ 17C5:4946
cs=0x17c5;eip=0x004947; 	J(CALL(sub_33c65,0));	// 92840                  call    sub_33C65 ;~ 17C5:4947
cs=0x17c5;eip=0x00494a; 	T(ADD(sp, 4));	// 92842                  add     sp, 4 ;~ 17C5:494A
cs=0x17c5;eip=0x00494d; 	X(word_4e2fa = 0x0C000;);	// 92843                  mov     ds:word_4E2FA, 0C000h ;~ 17C5:494D
cs=0x17c5;eip=0x004953; 	X(byte_4e30d = 1;);	// 92844                  mov     ds:byte_4E30D, 1 ;~ 17C5:4953
loc_2ab88:
	// 5417 
cs=0x17c5;eip=0x004958; 	T(CMP(word_521c0, 0));	// 92848                  cmp     ds:word_521C0, 0 ;~ 17C5:4958
cs=0x17c5;eip=0x00495d; 	J(JZ(loc_2abb4));	// 92849                  jz      short loc_2ABB4 ;~ 17C5:495D
cs=0x17c5;eip=0x00495f; 	T(ax = word_521c0;);	// 92850                  mov     ax, ds:word_521C0 ;~ 17C5:495F
cs=0x17c5;eip=0x004962; 	T(SHL(ax, 1));	// 92851                  shl     ax, 1 ;~ 17C5:4962
cs=0x17c5;eip=0x004964; 	T(SHL(ax, 1));	// 92852                  shl     ax, 1 ;~ 17C5:4964
cs=0x17c5;eip=0x004966; 	T(SUB(ax, 0x90));	// 92853                  sub     ax, 90h ;~ 17C5:4966
cs=0x17c5;eip=0x004969; 	T(NEG(ax));	// 92854                  neg     ax ;~ 17C5:4969
cs=0x17c5;eip=0x00496b; 	T(si = ax;);	// 92855                  mov     si, ax ;~ 17C5:496B
cs=0x17c5;eip=0x00496d; 	T(CMP(word_4e310, si));	// 92856                  cmp     ds:word_4E310, si ;~ 17C5:496D
cs=0x17c5;eip=0x004971; 	J(JLE(loc_2abb4));	// 92857                  jle     short loc_2ABB4 ;~ 17C5:4971
cs=0x17c5;eip=0x004973; 	X(word_4e310 = si;);	// 92858                  mov     ds:word_4E310, si ;~ 17C5:4973
cs=0x17c5;eip=0x004977; 	T(OR(si, si));	// 92859                  or      si, si ;~ 17C5:4977
cs=0x17c5;eip=0x004979; 	J(JGE(loc_2abb1));	// 92860                  jge     short loc_2ABB1 ;~ 17C5:4979
cs=0x17c5;eip=0x00497b; 	X(word_4e310 = 0;);	// 92861                  mov     ds:word_4E310, 0 ;~ 17C5:497B
loc_2abb1:
	// 5418 
cs=0x17c5;eip=0x004981; 	J(CALL(sub_2c20b,0));	// 92864                  call    sub_2C20B ;~ 17C5:4981
loc_2abb4:
	// 5419 
cs=0x17c5;eip=0x004984; 	T(ax = word_4e310;);	// 92868                  mov     ax, ds:word_4E310 ;~ 17C5:4984
cs=0x17c5;eip=0x004987; 	T(SUB(ax, word_511d6));	// 92869                  sub     ax, ds:word_511D6 ;~ 17C5:4987
cs=0x17c5;eip=0x00498b; 	T(CWD);	// 92870                  cwd ;~ 17C5:498B
cs=0x17c5;eip=0x00498c; 	T(XOR(ax, dx));	// 92871                  xor     ax, dx ;~ 17C5:498C
cs=0x17c5;eip=0x00498e; 	T(SUB(ax, dx));	// 92872                  sub     ax, dx ;~ 17C5:498E
cs=0x17c5;eip=0x004990; 	T(cx = 2;);	// 92873                  mov     cx, 2 ;~ 17C5:4990
cs=0x17c5;eip=0x004993; 	T(SAR(ax, cl));	// 92874                  sar     ax, cl ;~ 17C5:4993
cs=0x17c5;eip=0x004995; 	T(XOR(ax, dx));	// 92875                  xor     ax, dx ;~ 17C5:4995
cs=0x17c5;eip=0x004997; 	T(SUB(ax, dx));	// 92876                  sub     ax, dx ;~ 17C5:4997
cs=0x17c5;eip=0x004999; 	T(CWD);	// 92877                  cwd ;~ 17C5:4999
cs=0x17c5;eip=0x00499a; 	T(cx = word_492f4;);	// 92878                  mov     cx, word_492F4 ;~ 17C5:499A
cs=0x17c5;eip=0x00499e; 	T(IDIV2(cx));	// 92879                  idiv    cx ;~ 17C5:499E
cs=0x17c5;eip=0x0049a0; 	X(ADD(word_511d6, ax));	// 92880                  add     ds:word_511D6, ax ;~ 17C5:49A0
cs=0x17c5;eip=0x0049a4; 	T(ax = word_511d6;);	// 92881                  mov     ax, ds:word_511D6 ;~ 17C5:49A4
cs=0x17c5;eip=0x0049a7; 	T(CMP(word_4e310, ax));	// 92882                  cmp     ds:word_4E310, ax ;~ 17C5:49A7
cs=0x17c5;eip=0x0049ab; 	J(JLE(loc_2abe1));	// 92883                  jle     short loc_2ABE1 ;~ 17C5:49AB
cs=0x17c5;eip=0x0049ad; 	X(INC(word_511d6));	// 92884                  inc     ds:word_511D6 ;~ 17C5:49AD
loc_2abe1:
	// 5420 
cs=0x17c5;eip=0x0049b1; 	T(ax = word_511d6;);	// 92887                  mov     ax, ds:word_511D6 ;~ 17C5:49B1
cs=0x17c5;eip=0x0049b4; 	T(CMP(word_4e310, ax));	// 92888                  cmp     ds:word_4E310, ax ;~ 17C5:49B4
cs=0x17c5;eip=0x0049b8; 	J(JGE(loc_2abf0));	// 92889                  jge     short loc_2ABF0 ;~ 17C5:49B8
cs=0x17c5;eip=0x0049ba; 	T(ax = word_4e310;);	// 92890                  mov     ax, ds:word_4E310 ;~ 17C5:49BA
cs=0x17c5;eip=0x0049bd; 	X(word_511d6 = ax;);	// 92891                  mov     ds:word_511D6, ax ;~ 17C5:49BD
loc_2abf0:
	// 5421 
cs=0x17c5;eip=0x0049c0; 	T(ax = word_49918;);	// 92894                  mov     ax, word_49918 ;~ 17C5:49C0
cs=0x17c5;eip=0x0049c3; 	T(SUB(dx, dx));	// 92895                  sub     dx, dx ;~ 17C5:49C3
cs=0x17c5;eip=0x0049c5; 	T(cx = word_492f4;);	// 92896                  mov     cx, word_492F4 ;~ 17C5:49C5
cs=0x17c5;eip=0x0049c9; 	T(SHL(cx, 1));	// 92897                  shl     cx, 1 ;~ 17C5:49C9
cs=0x17c5;eip=0x0049cb; 	T(DIV2(cx));	// 92898                  div     cx ;~ 17C5:49CB
cs=0x17c5;eip=0x0049cd; 	T(OR(dx, dx));	// 92899                  or      dx, dx ;~ 17C5:49CD
cs=0x17c5;eip=0x0049cf; 	J(JNZ(loc_2ac24));	// 92900                  jnz     short loc_2AC24 ;~ 17C5:49CF
cs=0x17c5;eip=0x0049d1; 	T(CMP(word_4e310, 0));	// 92901                  cmp     ds:word_4E310, 0 ;~ 17C5:49D1
cs=0x17c5;eip=0x0049d6; 	J(JZ(loc_2ac24));	// 92902                  jz      short loc_2AC24 ;~ 17C5:49D6
cs=0x17c5;eip=0x0049d8; 	T(CMP(word_4991a, 0));	// 92903                  cmp     word_4991A, 0 ;~ 17C5:49D8
cs=0x17c5;eip=0x0049dd; 	J(JNZ(loc_2ac24));	// 92904                  jnz     short loc_2AC24 ;~ 17C5:49DD
cs=0x17c5;eip=0x0049df; 	T(ax = word_4e310;);	// 92905                  mov     ax, ds:word_4E310 ;~ 17C5:49DF
cs=0x17c5;eip=0x0049e2; 	T(IMUL1_2(ax));	// 92906                  imul    ax ;~ 17C5:49E2
cs=0x17c5;eip=0x0049e4; 	T(CWD);	// 92907                  cwd ;~ 17C5:49E4
cs=0x17c5;eip=0x0049e5; 	T(cx = 0x2EE;);	// 92908                  mov     cx, 2EEh ;~ 17C5:49E5
cs=0x17c5;eip=0x0049e8; 	T(IDIV2(cx));	// 92909                  idiv    cx ;~ 17C5:49E8
cs=0x17c5;eip=0x0049ea; 	T(ADD(ax, 2));	// 92910                  add     ax, 2 ;~ 17C5:49EA
cs=0x17c5;eip=0x0049ed; 	X(SUB(*(word_492c8), ax));	// 92911                  sub     word_492C8, ax ;~ 17C5:49ED
cs=0x17c5;eip=0x0049f1; 	J(CALL(sub_2c29c,0));	// 92912                  call    sub_2C29C ;~ 17C5:49F1
loc_2ac24:
	// 5422 
cs=0x17c5;eip=0x0049f4; 	T(CMP(*(word_492c8), 0));	// 92916                  cmp     word_492C8, 0 ;~ 17C5:49F4
cs=0x17c5;eip=0x0049f9; 	J(JG(loc_2ac37));	// 92917                  jg      short loc_2AC37 ;~ 17C5:49F9
cs=0x17c5;eip=0x0049fb; 	X(word_511d6 = 0;);	// 92918                  mov     ds:word_511D6, 0 ;~ 17C5:49FB
cs=0x17c5;eip=0x004a01; 	X(*(word_492c8) = 0;);	// 92919                  mov     word_492C8, 0 ;~ 17C5:4A01
loc_2ac37:
	// 5423 
cs=0x17c5;eip=0x004a07; 	X(PUSH(word_4e2fc));	// 92922                  push    ds:word_4E2FC ;~ 17C5:4A07
cs=0x17c5;eip=0x004a0b; 	J(CALL(sub_34dc0,0));	// 92923                  call    sub_34DC0 ;~ 17C5:4A0B
cs=0x17c5;eip=0x004a0e; 	T(ADD(sp, 2));	// 92924                  add     sp, 2 ;~ 17C5:4A0E
cs=0x17c5;eip=0x004a11; 	T(bx = ax;);	// 92925                  mov     bx, ax ;~ 17C5:4A11
cs=0x17c5;eip=0x004a13; 	T(cl = 8;);	// 92926                  mov     cl, 8 ;~ 17C5:4A13
cs=0x17c5;eip=0x004a15; 	T(SAR(bx, cl));	// 92927                  sar     bx, cl ;~ 17C5:4A15
cs=0x17c5;eip=0x004a17; 	T(AND(bx, 0x7F));	// 92928                  and     bx, 7Fh ;~ 17C5:4A17
cs=0x17c5;eip=0x004a1a; 	T(MOV(al, *(raddr(ds,bx+0x573C))));	// 92929                  mov     al, [bx+573Ch] ;~ 17C5:4A1A
cs=0x17c5;eip=0x004a1e; 	T(SUB(ah, ah));	// 92930                  sub     ah, ah ;~ 17C5:4A1E
cs=0x17c5;eip=0x004a20; 	X(word_4f20a = ax;);	// 92931                  mov     ds:word_4F20A, ax ;~ 17C5:4A20
cs=0x17c5;eip=0x004a23; 	T(ax = word_4e2fe;);	// 92932                  mov     ax, ds:word_4E2FE ;~ 17C5:4A23
cs=0x17c5;eip=0x004a26; 	T(CMP(word_520ee, ax));	// 92933                  cmp     ds:word_520EE, ax ;~ 17C5:4A26
cs=0x17c5;eip=0x004a2a; 	J(JNC(loc_2ac68));	// 92934                  jnb     short loc_2AC68 ;~ 17C5:4A2A
cs=0x17c5;eip=0x004a2c; 	T(ax = word_527d4;);	// 92935                  mov     ax, ds:word_527D4 ;~ 17C5:4A2C
cs=0x17c5;eip=0x004a2f; 	T(CWD);	// 92936                  cwd ;~ 17C5:4A2F
cs=0x17c5;eip=0x004a30; 	T(SUB(ax, dx));	// 92937                  sub     ax, dx ;~ 17C5:4A30
cs=0x17c5;eip=0x004a32; 	T(SAR(ax, 1));	// 92938                  sar     ax, 1 ;~ 17C5:4A32
cs=0x17c5;eip=0x004a34; 	X(ADD(word_4f20a, ax));	// 92939                  add     ds:word_4F20A, ax ;~ 17C5:4A34
loc_2ac68:
	// 5424 
cs=0x17c5;eip=0x004a38; 	T(CMP(word_4f20a, 0x80));	// 92942                  cmp     ds:word_4F20A, 80h ;~ 17C5:4A38
cs=0x17c5;eip=0x004a3e; 	J(JLE(loc_2aca5));	// 92943                  jle     short loc_2ACA5 ;~ 17C5:4A3E
cs=0x17c5;eip=0x004a40; 	X(word_4f20a = 0x80;);	// 92944                  mov     ds:word_4F20A, 80h ;~ 17C5:4A40
cs=0x17c5;eip=0x004a46; 	X(PUSH(word_527d4));	// 92945                  push    ds:word_527D4 ;~ 17C5:4A46
cs=0x17c5;eip=0x004a4a; 	T(SUB(ax, ax));	// 92946                  sub     ax, ax ;~ 17C5:4A4A
cs=0x17c5;eip=0x004a4c; 	X(PUSH(ax));	// 92947                  push    ax ;~ 17C5:4A4C
cs=0x17c5;eip=0x004a4d; 	X(PUSH(word_4e2fc));	// 92948                  push    ds:word_4E2FC ;~ 17C5:4A4D
cs=0x17c5;eip=0x004a51; 	J(CALL(sub_34dc0,0));	// 92949                  call    sub_34DC0 ;~ 17C5:4A51
cs=0x17c5;eip=0x004a54; 	T(ADD(sp, 2));	// 92950                  add     sp, 2 ;~ 17C5:4A54
cs=0x17c5;eip=0x004a57; 	T(bx = ax;);	// 92951                  mov     bx, ax ;~ 17C5:4A57
cs=0x17c5;eip=0x004a59; 	T(cl = 8;);	// 92952                  mov     cl, 8 ;~ 17C5:4A59
cs=0x17c5;eip=0x004a5b; 	T(SAR(bx, cl));	// 92953                  sar     bx, cl ;~ 17C5:4A5B
cs=0x17c5;eip=0x004a5d; 	T(AND(bx, 0x7F));	// 92954                  and     bx, 7Fh ;~ 17C5:4A5D
cs=0x17c5;eip=0x004a60; 	T(MOV(al, *(raddr(ds,bx+0x573C))));	// 92955                  mov     al, [bx+573Ch] ;~ 17C5:4A60
cs=0x17c5;eip=0x004a64; 	T(SUB(ah, ah));	// 92956                  sub     ah, ah ;~ 17C5:4A64
cs=0x17c5;eip=0x004a66; 	T(SUB(ax, 0x80));	// 92957                  sub     ax, 80h ;~ 17C5:4A66
cs=0x17c5;eip=0x004a69; 	T(NEG(ax));	// 92958                  neg     ax ;~ 17C5:4A69
cs=0x17c5;eip=0x004a6b; 	X(PUSH(ax));	// 92959                  push    ax ;~ 17C5:4A6B
cs=0x17c5;eip=0x004a6c; 	J(CALL(sub_33194,0));	// 92960                  call    sub_33194 ;~ 17C5:4A6C
cs=0x17c5;eip=0x004a6f; 	T(ADD(sp, 6));	// 92961                  add     sp, 6 ;~ 17C5:4A6F
cs=0x17c5;eip=0x004a72; 	X(word_527d4 = ax;);	// 92962                  mov     ds:word_527D4, ax ;~ 17C5:4A72
loc_2aca5:
	// 5425 
cs=0x17c5;eip=0x004a75; 	T(ax = 0x0A;);	// 92965                  mov     ax, 0Ah ;~ 17C5:4A75
cs=0x17c5;eip=0x004a78; 	X(PUSH(ax));	// 92966                  push    ax ;~ 17C5:4A78
cs=0x17c5;eip=0x004a79; 	T(ax = 0x66C4;);	// 92967                  mov     ax, 66C4h ;~ 17C5:4A79
cs=0x17c5;eip=0x004a7c; 	X(PUSH(ax));	// 92968                  push    ax ;~ 17C5:4A7C
cs=0x17c5;eip=0x004a7d; 	T(ax = word_4f20a;);	// 92969                  mov     ax, ds:word_4F20A ;~ 17C5:4A7D
cs=0x17c5;eip=0x004a80; 	T(CWD);	// 92970                  cwd ;~ 17C5:4A80
cs=0x17c5;eip=0x004a81; 	T(XOR(ax, dx));	// 92971                  xor     ax, dx ;~ 17C5:4A81
cs=0x17c5;eip=0x004a83; 	T(SUB(ax, dx));	// 92972                  sub     ax, dx ;~ 17C5:4A83
cs=0x17c5;eip=0x004a85; 	T(cx = 4;);	// 92973                  mov     cx, 4 ;~ 17C5:4A85
cs=0x17c5;eip=0x004a88; 	T(SAR(ax, cl));	// 92974                  sar     ax, cl ;~ 17C5:4A88
cs=0x17c5;eip=0x004a8a; 	T(XOR(ax, dx));	// 92975                  xor     ax, dx ;~ 17C5:4A8A
cs=0x17c5;eip=0x004a8c; 	T(SUB(ax, dx));	// 92976                  sub     ax, dx ;~ 17C5:4A8C
cs=0x17c5;eip=0x004a8e; 	X(PUSH(ax));	// 92977                  push    ax ;~ 17C5:4A8E
cs=0x17c5;eip=0x004a8f; 	J(CALL(sub_34c6a,0));	// 92978                  call    sub_34C6A ;~ 17C5:4A8F
cs=0x17c5;eip=0x004a92; 	T(ADD(sp, 6));	// 92980                  add     sp, 6 ;~ 17C5:4A92
cs=0x17c5;eip=0x004a95; 	X(PUSH(ax));	// 92981                  push    ax ;~ 17C5:4A95
cs=0x17c5;eip=0x004a96; 	T(ax = 0x6720;);	// 92982                  mov     ax, 6720h ;~ 17C5:4A96
cs=0x17c5;eip=0x004a99; 	X(PUSH(ax));	// 92983                  push    ax ;~ 17C5:4A99
cs=0x17c5;eip=0x004a9a; 	J(CALL(sub_34c1c,0));	// 92984                  call    sub_34C1C ;~ 17C5:4A9A
cs=0x17c5;eip=0x004a9d; 	T(ADD(sp, 4));	// 92985                  add     sp, 4 ;~ 17C5:4A9D
cs=0x17c5;eip=0x004aa0; 	T(ax = 0x5738;);	// 92986                  mov     ax, 5738h ;~ 17C5:4AA0
cs=0x17c5;eip=0x004aa3; 	X(PUSH(ax));	// 92987                  push    ax ;~ 17C5:4AA3
cs=0x17c5;eip=0x004aa4; 	T(ax = 0x6720;);	// 92988                  mov     ax, 6720h ;~ 17C5:4AA4
cs=0x17c5;eip=0x004aa7; 	X(PUSH(ax));	// 92989                  push    ax ;~ 17C5:4AA7
cs=0x17c5;eip=0x004aa8; 	J(CALL(sub_34bdc,0));	// 92990                  call    sub_34BDC ;~ 17C5:4AA8
cs=0x17c5;eip=0x004aab; 	T(ADD(sp, 4));	// 92991                  add     sp, 4 ;~ 17C5:4AAB
cs=0x17c5;eip=0x004aae; 	T(ax = 0x0A;);	// 92992                  mov     ax, 0Ah ;~ 17C5:4AAE
cs=0x17c5;eip=0x004ab1; 	X(PUSH(ax));	// 92993                  push    ax ;~ 17C5:4AB1
cs=0x17c5;eip=0x004ab2; 	T(ax = 0x66C4;);	// 92994                  mov     ax, 66C4h ;~ 17C5:4AB2
cs=0x17c5;eip=0x004ab5; 	X(PUSH(ax));	// 92995                  push    ax ;~ 17C5:4AB5
cs=0x17c5;eip=0x004ab6; 	X(PUSH(word_4f20a));	// 92996                  push    ds:word_4F20A ;~ 17C5:4AB6
cs=0x17c5;eip=0x004aba; 	J(CALL(sub_34dc0,0));	// 92997                  call    sub_34DC0 ;~ 17C5:4ABA
cs=0x17c5;eip=0x004abd; 	T(ADD(sp, 2));	// 92998                  add     sp, 2 ;~ 17C5:4ABD
cs=0x17c5;eip=0x004ac0; 	T(SUB(ah, ah));	// 92999                  sub     ah, ah ;~ 17C5:4AC0
cs=0x17c5;eip=0x004ac2; 	T(AND(ax, 0x0F));	// 93000                  and     ax, 0Fh ;~ 17C5:4AC2
cs=0x17c5;eip=0x004ac5; 	T(SHR(ax, 1));	// 93001                  shr     ax, 1 ;~ 17C5:4AC5
cs=0x17c5;eip=0x004ac7; 	X(PUSH(ax));	// 93002                  push    ax ;~ 17C5:4AC7
cs=0x17c5;eip=0x004ac8; 	J(CALL(sub_34c6a,0));	// 93003                  call    sub_34C6A ;~ 17C5:4AC8
cs=0x17c5;eip=0x004acb; 	T(ADD(sp, 6));	// 93004                  add     sp, 6 ;~ 17C5:4ACB
cs=0x17c5;eip=0x004ace; 	X(PUSH(ax));	// 93005                  push    ax ;~ 17C5:4ACE
cs=0x17c5;eip=0x004acf; 	T(ax = 0x6720;);	// 93006                  mov     ax, 6720h ;~ 17C5:4ACF
cs=0x17c5;eip=0x004ad2; 	X(PUSH(ax));	// 93007                  push    ax ;~ 17C5:4AD2
cs=0x17c5;eip=0x004ad3; 	J(CALL(sub_34bdc,0));	// 93008                  call    sub_34BDC ;~ 17C5:4AD3
cs=0x17c5;eip=0x004ad6; 	T(ADD(sp, 4));	// 93009                  add     sp, 4 ;~ 17C5:4AD6
cs=0x17c5;eip=0x004ad9; 	T(ax = 0x573A;);	// 93010                  mov     ax, 573Ah ;~ 17C5:4AD9
cs=0x17c5;eip=0x004adc; 	X(PUSH(ax));	// 93011                  push    ax ;~ 17C5:4ADC
cs=0x17c5;eip=0x004add; 	T(ax = 0x6720;);	// 93012                  mov     ax, 6720h ;~ 17C5:4ADD
cs=0x17c5;eip=0x004ae0; 	X(PUSH(ax));	// 93013                  push    ax ;~ 17C5:4AE0
cs=0x17c5;eip=0x004ae1; 	J(CALL(sub_34bdc,0));	// 93014                  call    sub_34BDC ;~ 17C5:4AE1
cs=0x17c5;eip=0x004ae4; 	T(ADD(sp, 4));	// 93015                  add     sp, 4 ;~ 17C5:4AE4
cs=0x17c5;eip=0x004ae7; 	T(ax = 0x64;);	// 93016                  mov     ax, 64h ; 'd' ;~ 17C5:4AE7
cs=0x17c5;eip=0x004aea; 	T(CWD);	// 93017                  cwd ;~ 17C5:4AEA
cs=0x17c5;eip=0x004aeb; 	X(PUSH(dx));	// 93018                  push    dx ;~ 17C5:4AEB
cs=0x17c5;eip=0x004aec; 	X(PUSH(ax));	// 93019                  push    ax ;~ 17C5:4AEC
cs=0x17c5;eip=0x004aed; 	T(ax = 0x320;);	// 93020                  mov     ax, 320h ;~ 17C5:4AED
cs=0x17c5;eip=0x004af0; 	T(CWD);	// 93021                  cwd ;~ 17C5:4AF0
cs=0x17c5;eip=0x004af1; 	X(PUSH(dx));	// 93022                  push    dx ;~ 17C5:4AF1
cs=0x17c5;eip=0x004af2; 	X(PUSH(ax));	// 93023                  push    ax ;~ 17C5:4AF2
cs=0x17c5;eip=0x004af3; 	T(ax = 0x50;);	// 93024                  mov     ax, 50h ; 'P' ;~ 17C5:4AF3
cs=0x17c5;eip=0x004af6; 	X(PUSH(ax));	// 93025                  push    ax ;~ 17C5:4AF6
cs=0x17c5;eip=0x004af7; 	X(PUSH(word_4e2fa));	// 93026                  push    ds:word_4E2FA ;~ 17C5:4AF7
cs=0x17c5;eip=0x004afb; 	J(CALL(sub_333a8,0));	// 93027                  call    sub_333A8 ;~ 17C5:4AFB
cs=0x17c5;eip=0x004afe; 	T(ADD(sp, 4));	// 93028                  add     sp, 4 ;~ 17C5:4AFE
cs=0x17c5;eip=0x004b01; 	T(cx = ax;);	// 93029                  mov     cx, ax ;~ 17C5:4B01
cs=0x17c5;eip=0x004b03; 	T(ax = word_511d6;);	// 93030                  mov     ax, ds:word_511D6 ;~ 17C5:4B03
cs=0x17c5;eip=0x004b06; 	T(SUB(ax, cx));	// 93031                  sub     ax, cx ;~ 17C5:4B06
cs=0x17c5;eip=0x004b08; 	T(CWD);	// 93032                  cwd ;~ 17C5:4B08
cs=0x17c5;eip=0x004b09; 	X(PUSH(dx));	// 93033                  push    dx ;~ 17C5:4B09
cs=0x17c5;eip=0x004b0a; 	X(PUSH(ax));	// 93034                  push    ax ;~ 17C5:4B0A
cs=0x17c5;eip=0x004b0b; 	J(CALL(sub_34ee0,0));	// 93035                  call    sub_34EE0 ;~ 17C5:4B0B
cs=0x17c5;eip=0x004b0e; 	X(PUSH(dx));	// 93036                  push    dx ;~ 17C5:4B0E
cs=0x17c5;eip=0x004b0f; 	X(PUSH(ax));	// 93037                  push    ax ;~ 17C5:4B0F
cs=0x17c5;eip=0x004b10; 	J(CALL(sub_34e44,0));	// 93038                  call    sub_34E44 ;~ 17C5:4B10
cs=0x17c5;eip=0x004b13; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 93039                  mov     [bp+var_32], ax ;~ 17C5:4B13
cs=0x17c5;eip=0x004b16; 	X(word_527d6 = 0x64;);	// 93040                  mov     ds:word_527D6, 64h ; 'd' ;~ 17C5:4B16
cs=0x17c5;eip=0x004b1c; 	T(ax = word_4e2fe;);	// 93041                  mov     ax, ds:word_4E2FE ;~ 17C5:4B1C
cs=0x17c5;eip=0x004b1f; 	T(cl = 7;);	// 93042                  mov     cl, 7 ;~ 17C5:4B1F
cs=0x17c5;eip=0x004b21; 	T(SHR(ax, cl));	// 93043                  shr     ax, cl ;~ 17C5:4B21
cs=0x17c5;eip=0x004b23; 	T(ADD(ah, 4));	// 93044                  add     ah, 4 ;~ 17C5:4B23
cs=0x17c5;eip=0x004b26; 	T(SUB(cx, cx));	// 93045                  sub     cx, cx ;~ 17C5:4B26
cs=0x17c5;eip=0x004b28; 	X(PUSH(cx));	// 93046                  push    cx ;~ 17C5:4B28
cs=0x17c5;eip=0x004b29; 	X(PUSH(ax));	// 93047                  push    ax ;~ 17C5:4B29
cs=0x17c5;eip=0x004b2a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 93048                  mov     ax, [bp+var_32] ;~ 17C5:4B2A
cs=0x17c5;eip=0x004b2d; 	T(CWD);	// 93049                  cwd ;~ 17C5:4B2D
cs=0x17c5;eip=0x004b2e; 	X(PUSH(dx));	// 93050                  push    dx ;~ 17C5:4B2E
cs=0x17c5;eip=0x004b2f; 	X(PUSH(ax));	// 93051                  push    ax ;~ 17C5:4B2F
cs=0x17c5;eip=0x004b30; 	J(CALL(sub_34ee0,0));	// 93052                  call    sub_34EE0 ;~ 17C5:4B30
cs=0x17c5;eip=0x004b33; 	T(cl = 0x0A;);	// 93053                  mov     cl, 0Ah ;~ 17C5:4B33
loc_2ad65:
	// 5426 
cs=0x17c5;eip=0x004b35; 	T(SHR(dx, 1));	// 93056                  shr     dx, 1 ;~ 17C5:4B35
cs=0x17c5;eip=0x004b37; 	T(RCR(ax, 1));	// 93057                  rcr     ax, 1 ;~ 17C5:4B37
cs=0x17c5;eip=0x004b39; 	T(DEC(cl));	// 93058                  dec     cl ;~ 17C5:4B39
cs=0x17c5;eip=0x004b3b; 	J(JZ(loc_2ad6f));	// 93059                  jz      short loc_2AD6F ;~ 17C5:4B3B
cs=0x17c5;eip=0x004b3d; 	J(JMP(loc_2ad65));	// 93060                  jmp     short loc_2AD65 ;~ 17C5:4B3D
loc_2ad6f:
	// 5427 
cs=0x17c5;eip=0x004b3f; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 93064                  mov     [bp+var_32], ax ;~ 17C5:4B3F
cs=0x17c5;eip=0x004b42; 	T(ax = 0x64;);	// 93065                  mov     ax, 64h ; 'd' ;~ 17C5:4B42
cs=0x17c5;eip=0x004b45; 	T(CWD);	// 93066                  cwd ;~ 17C5:4B45
cs=0x17c5;eip=0x004b46; 	X(PUSH(dx));	// 93067                  push    dx ;~ 17C5:4B46
cs=0x17c5;eip=0x004b47; 	X(PUSH(ax));	// 93068                  push    ax ;~ 17C5:4B47
cs=0x17c5;eip=0x004b48; 	T(ax = word_4e300;);	// 93069                  mov     ax, ds:word_4E300 ;~ 17C5:4B48
cs=0x17c5;eip=0x004b4b; 	T(cl = 6;);	// 93070                  mov     cl, 6 ;~ 17C5:4B4B
cs=0x17c5;eip=0x004b4d; 	T(SHR(ax, cl));	// 93071                  shr     ax, cl ;~ 17C5:4B4D
cs=0x17c5;eip=0x004b4f; 	T(ADD(ah, 4));	// 93072                  add     ah, 4 ;~ 17C5:4B4F
cs=0x17c5;eip=0x004b52; 	T(SUB(cx, cx));	// 93073                  sub     cx, cx ;~ 17C5:4B52
cs=0x17c5;eip=0x004b54; 	X(PUSH(cx));	// 93074                  push    cx ;~ 17C5:4B54
cs=0x17c5;eip=0x004b55; 	X(PUSH(ax));	// 93075                  push    ax ;~ 17C5:4B55
cs=0x17c5;eip=0x004b56; 	J(CALL(sub_34ee0,0));	// 93076                  call    sub_34EE0 ;~ 17C5:4B56
cs=0x17c5;eip=0x004b59; 	T(cl = 0x0A;);	// 93077                  mov     cl, 0Ah ;~ 17C5:4B59
loc_2ad8b:
	// 5428 
cs=0x17c5;eip=0x004b5b; 	T(SHR(dx, 1));	// 93080                  shr     dx, 1 ;~ 17C5:4B5B
cs=0x17c5;eip=0x004b5d; 	T(RCR(ax, 1));	// 93081                  rcr     ax, 1 ;~ 17C5:4B5D
cs=0x17c5;eip=0x004b5f; 	T(DEC(cl));	// 93082                  dec     cl ;~ 17C5:4B5F
cs=0x17c5;eip=0x004b61; 	J(JZ(loc_2ad95));	// 93083                  jz      short loc_2AD95 ;~ 17C5:4B61
cs=0x17c5;eip=0x004b63; 	J(JMP(loc_2ad8b));	// 93084                  jmp     short loc_2AD8B ;~ 17C5:4B63
loc_2ad95:
	// 5429 
cs=0x17c5;eip=0x004b65; 	X(word_527d6 = ax;);	// 93088                  mov     ds:word_527D6, ax ;~ 17C5:4B65
cs=0x17c5;eip=0x004b68; 	T(ax = 0x5A;);	// 93089                  mov     ax, 5Ah ; 'Z' ;~ 17C5:4B68
cs=0x17c5;eip=0x004b6b; 	T(CWD);	// 93090                  cwd ;~ 17C5:4B6B
cs=0x17c5;eip=0x004b6c; 	X(PUSH(dx));	// 93091                  push    dx ;~ 17C5:4B6C
cs=0x17c5;eip=0x004b6d; 	X(PUSH(ax));	// 93092                  push    ax ;~ 17C5:4B6D
cs=0x17c5;eip=0x004b6e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 93093                  mov     ax, [bp+var_32] ;~ 17C5:4B6E
cs=0x17c5;eip=0x004b71; 	T(CWD);	// 93094                  cwd ;~ 17C5:4B71
cs=0x17c5;eip=0x004b72; 	X(PUSH(dx));	// 93095                  push    dx ;~ 17C5:4B72
cs=0x17c5;eip=0x004b73; 	X(PUSH(ax));	// 93096                  push    ax ;~ 17C5:4B73
cs=0x17c5;eip=0x004b74; 	T(ax = *(word_492c8););	// 93097                  mov     ax, word_492C8 ;~ 17C5:4B74
cs=0x17c5;eip=0x004b77; 	T(cl = 9;);	// 93098                  mov     cl, 9 ;~ 17C5:4B77
cs=0x17c5;eip=0x004b79; 	T(SAR(ax, cl));	// 93099                  sar     ax, cl ;~ 17C5:4B79
cs=0x17c5;eip=0x004b7b; 	T(SUB(ax, 0x64));	// 93100                  sub     ax, 64h ; 'd' ;~ 17C5:4B7B
cs=0x17c5;eip=0x004b7e; 	T(NEG(ax));	// 93101                  neg     ax ;~ 17C5:4B7E
cs=0x17c5;eip=0x004b80; 	T(CWD);	// 93102                  cwd ;~ 17C5:4B80
cs=0x17c5;eip=0x004b81; 	X(PUSH(dx));	// 93103                  push    dx ;~ 17C5:4B81
cs=0x17c5;eip=0x004b82; 	X(PUSH(ax));	// 93104                  push    ax ;~ 17C5:4B82
cs=0x17c5;eip=0x004b83; 	J(CALL(sub_34ee0,0));	// 93105                  call    sub_34EE0 ;~ 17C5:4B83
cs=0x17c5;eip=0x004b86; 	X(PUSH(dx));	// 93106                  push    dx ;~ 17C5:4B86
cs=0x17c5;eip=0x004b87; 	X(PUSH(ax));	// 93107                  push    ax ;~ 17C5:4B87
cs=0x17c5;eip=0x004b88; 	J(CALL(sub_34e44,0));	// 93108                  call    sub_34E44 ;~ 17C5:4B88
cs=0x17c5;eip=0x004b8b; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 93109                  mov     [bp+var_32], ax ;~ 17C5:4B8B
cs=0x17c5;eip=0x004b8e; 	T(ax = 0x80;);	// 93110                  mov     ax, 80h ;~ 17C5:4B8E
cs=0x17c5;eip=0x004b91; 	T(SUB(ax, word_4f20a));	// 93111                  sub     ax, ds:word_4F20A ;~ 17C5:4B91
cs=0x17c5;eip=0x004b95; 	T(CWD);	// 93112                  cwd ;~ 17C5:4B95
cs=0x17c5;eip=0x004b96; 	X(PUSH(dx));	// 93113                  push    dx ;~ 17C5:4B96
cs=0x17c5;eip=0x004b97; 	X(PUSH(ax));	// 93114                  push    ax ;~ 17C5:4B97
cs=0x17c5;eip=0x004b98; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 93115                  mov     ax, [bp+var_32] ;~ 17C5:4B98
cs=0x17c5;eip=0x004b9b; 	T(CWD);	// 93116                  cwd ;~ 17C5:4B9B
cs=0x17c5;eip=0x004b9c; 	X(PUSH(dx));	// 93117                  push    dx ;~ 17C5:4B9C
cs=0x17c5;eip=0x004b9d; 	X(PUSH(ax));	// 93118                  push    ax ;~ 17C5:4B9D
cs=0x17c5;eip=0x004b9e; 	J(CALL(sub_34ee0,0));	// 93119                  call    sub_34EE0 ;~ 17C5:4B9E
cs=0x17c5;eip=0x004ba1; 	T(cl = 7;);	// 93120                  mov     cl, 7 ;~ 17C5:4BA1
loc_2add3:
	// 5430 
cs=0x17c5;eip=0x004ba3; 	T(SAR(dx, 1));	// 93123                  sar     dx, 1 ;~ 17C5:4BA3
cs=0x17c5;eip=0x004ba5; 	T(RCR(ax, 1));	// 93124                  rcr     ax, 1 ;~ 17C5:4BA5
cs=0x17c5;eip=0x004ba7; 	T(DEC(cl));	// 93125                  dec     cl ;~ 17C5:4BA7
cs=0x17c5;eip=0x004ba9; 	J(JZ(loc_2addd));	// 93126                  jz      short loc_2ADDD ;~ 17C5:4BA9
cs=0x17c5;eip=0x004bab; 	J(JMP(loc_2add3));	// 93127                  jmp     short loc_2ADD3 ;~ 17C5:4BAB
loc_2addd:
	// 5431 
cs=0x17c5;eip=0x004bad; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 93131                  mov     [bp+var_32], ax ;~ 17C5:4BAD
cs=0x17c5;eip=0x004bb0; 	T(ax = word_527d6;);	// 93132                  mov     ax, ds:word_527D6 ;~ 17C5:4BB0
cs=0x17c5;eip=0x004bb3; 	T(CWD);	// 93133                  cwd ;~ 17C5:4BB3
cs=0x17c5;eip=0x004bb4; 	X(PUSH(dx));	// 93134                  push    dx ;~ 17C5:4BB4
cs=0x17c5;eip=0x004bb5; 	X(PUSH(ax));	// 93135                  push    ax ;~ 17C5:4BB5
cs=0x17c5;eip=0x004bb6; 	T(ax = word_4f20a;);	// 93136                  mov     ax, ds:word_4F20A ;~ 17C5:4BB6
cs=0x17c5;eip=0x004bb9; 	T(SHL(ax, 1));	// 93137                  shl     ax, 1 ;~ 17C5:4BB9
cs=0x17c5;eip=0x004bbb; 	T(SHL(ax, 1));	// 93138                  shl     ax, 1 ;~ 17C5:4BBB
cs=0x17c5;eip=0x004bbd; 	X(PUSH(ax));	// 93139                  push    ax ;~ 17C5:4BBD
cs=0x17c5;eip=0x004bbe; 	J(CALL(sub_2b787,0));	// 93140                  call    sub_2B787 ;~ 17C5:4BBE
cs=0x17c5;eip=0x004bc1; 	T(ADD(sp, 2));	// 93141                  add     sp, 2 ;~ 17C5:4BC1
cs=0x17c5;eip=0x004bc4; 	T(CWD);	// 93142                  cwd ;~ 17C5:4BC4
cs=0x17c5;eip=0x004bc5; 	X(PUSH(dx));	// 93143                  push    dx ;~ 17C5:4BC5
cs=0x17c5;eip=0x004bc6; 	X(PUSH(ax));	// 93144                  push    ax ;~ 17C5:4BC6
cs=0x17c5;eip=0x004bc7; 	J(CALL(sub_34ee0,0));	// 93145                  call    sub_34EE0 ;~ 17C5:4BC7
cs=0x17c5;eip=0x004bca; 	T(cl = 3;);	// 93146                  mov     cl, 3 ;~ 17C5:4BCA
loc_2adfc:
	// 5432 
cs=0x17c5;eip=0x004bcc; 	T(SAR(dx, 1));	// 93149                  sar     dx, 1 ;~ 17C5:4BCC
cs=0x17c5;eip=0x004bce; 	T(RCR(ax, 1));	// 93150                  rcr     ax, 1 ;~ 17C5:4BCE
cs=0x17c5;eip=0x004bd0; 	T(DEC(cl));	// 93151                  dec     cl ;~ 17C5:4BD0
cs=0x17c5;eip=0x004bd2; 	J(JZ(loc_2ae06));	// 93152                  jz      short loc_2AE06 ;~ 17C5:4BD2
cs=0x17c5;eip=0x004bd4; 	J(JMP(loc_2adfc));	// 93153                  jmp     short loc_2ADFC ;~ 17C5:4BD4
loc_2ae06:
	// 5433 
cs=0x17c5;eip=0x004bd6; 	X(word_527d6 = ax;);	// 93157                  mov     ds:word_527D6, ax ;~ 17C5:4BD6
cs=0x17c5;eip=0x004bd9; 	X(PUSH(ax));	// 93158                  push    ax ;~ 17C5:4BD9
cs=0x17c5;eip=0x004bda; 	J(CALL(sub_34dc0,0));	// 93159                  call    sub_34DC0 ;~ 17C5:4BDA
cs=0x17c5;eip=0x004bdd; 	T(ADD(sp, 2));	// 93160                  add     sp, 2 ;~ 17C5:4BDD
cs=0x17c5;eip=0x004be0; 	X(word_527d6 = ax;);	// 93161                  mov     ds:word_527D6, ax ;~ 17C5:4BE0
cs=0x17c5;eip=0x004be3; 	T(TEST(*(db*)(&word_4f42e), 1));	// 93162                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:4BE3
cs=0x17c5;eip=0x004be8; 	J(JNZ(loc_2ae24));	// 93163                  jnz     short loc_2AE24 ;~ 17C5:4BE8
cs=0x17c5;eip=0x004bea; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 93164                  mov     ax, [bp+var_32] ;~ 17C5:4BEA
cs=0x17c5;eip=0x004bed; 	T(cl = 3;);	// 93165                  mov     cl, 3 ;~ 17C5:4BED
cs=0x17c5;eip=0x004bef; 	T(SAR(ax, cl));	// 93166                  sar     ax, cl ;~ 17C5:4BEF
cs=0x17c5;eip=0x004bf1; 	X(SUB(*(dw*)(raddr(ss,bp+var_32)), ax));	// 93167                  sub     [bp+var_32], ax ;~ 17C5:4BF1
loc_2ae24:
	// 5434 
cs=0x17c5;eip=0x004bf4; 	T(ax = 0x1B;);	// 93170                  mov     ax, 1Bh ;~ 17C5:4BF4
cs=0x17c5;eip=0x004bf7; 	X(IMUL1_2(word_527d6));	// 93171                  imul    ds:word_527D6 ;~ 17C5:4BF7
cs=0x17c5;eip=0x004bfb; 	X(word_50b2e = ax;);	// 93172                  mov     ds:word_50B2E, ax ;~ 17C5:4BFB
cs=0x17c5;eip=0x004bfe; 	T(ax = 0x383;);	// 93173                  mov     ax, 383h ;~ 17C5:4BFE
cs=0x17c5;eip=0x004c01; 	X(PUSH(ax));	// 93174                  push    ax ;~ 17C5:4C01
cs=0x17c5;eip=0x004c02; 	T(SUB(ax, ax));	// 93175                  sub     ax, ax ;~ 17C5:4C02
cs=0x17c5;eip=0x004c04; 	X(PUSH(ax));	// 93176                  push    ax ;~ 17C5:4C04
cs=0x17c5;eip=0x004c05; 	X(PUSH(*(dw*)(raddr(ss,bp+var_32))));	// 93177                  push    [bp+var_32] ;~ 17C5:4C05
cs=0x17c5;eip=0x004c08; 	J(CALL(sub_33194,0));	// 93178                  call    sub_33194 ;~ 17C5:4C08
cs=0x17c5;eip=0x004c0b; 	T(ADD(sp, 6));	// 93179                  add     sp, 6 ;~ 17C5:4C0B
cs=0x17c5;eip=0x004c0e; 	T(cx = 0x1B;);	// 93180                  mov     cx, 1Bh ;~ 17C5:4C0E
cs=0x17c5;eip=0x004c11; 	T(IMUL1_2(cx));	// 93181                  imul    cx ;~ 17C5:4C11
cs=0x17c5;eip=0x004c13; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 93182                  mov     [bp+var_1A], ax ;~ 17C5:4C13
cs=0x17c5;eip=0x004c16; 	T(ax = word_492f4;);	// 93183                  mov     ax, word_492F4 ;~ 17C5:4C16
cs=0x17c5;eip=0x004c19; 	T(CWD);	// 93184                  cwd ;~ 17C5:4C19
cs=0x17c5;eip=0x004c1a; 	X(PUSH(dx));	// 93185                  push    dx ;~ 17C5:4C1A
cs=0x17c5;eip=0x004c1b; 	X(PUSH(ax));	// 93186                  push    ax ;~ 17C5:4C1B
cs=0x17c5;eip=0x004c1c; 	T(ax = 0x10;);	// 93187                  mov     ax, 10h ;~ 17C5:4C1C
cs=0x17c5;eip=0x004c1f; 	T(CWD);	// 93188                  cwd ;~ 17C5:4C1F
cs=0x17c5;eip=0x004c20; 	X(PUSH(dx));	// 93189                  push    dx ;~ 17C5:4C20
cs=0x17c5;eip=0x004c21; 	X(PUSH(ax));	// 93190                  push    ax ;~ 17C5:4C21
cs=0x17c5;eip=0x004c22; 	T(ax = word_50b74;);	// 93191                  mov     ax, ds:word_50B74 ;~ 17C5:4C22
cs=0x17c5;eip=0x004c25; 	T(CWD);	// 93192                  cwd ;~ 17C5:4C25
cs=0x17c5;eip=0x004c26; 	T(cx = ax;);	// 93193                  mov     cx, ax ;~ 17C5:4C26
cs=0x17c5;eip=0x004c28; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1a))));	// 93194                  mov     ax, [bp+var_1A] ;~ 17C5:4C28
cs=0x17c5;eip=0x004c2b; 	T(bx = dx;);	// 93195                  mov     bx, dx ;~ 17C5:4C2B
cs=0x17c5;eip=0x004c2d; 	T(CWD);	// 93196                  cwd ;~ 17C5:4C2D
cs=0x17c5;eip=0x004c2e; 	T(SUB(ax, cx));	// 93197                  sub     ax, cx ;~ 17C5:4C2E
cs=0x17c5;eip=0x004c30; 	T(SBB(dx, bx));	// 93198                  sbb     dx, bx ;~ 17C5:4C30
cs=0x17c5;eip=0x004c32; 	X(PUSH(dx));	// 93199                  push    dx ;~ 17C5:4C32
cs=0x17c5;eip=0x004c33; 	X(PUSH(ax));	// 93200                  push    ax ;~ 17C5:4C33
cs=0x17c5;eip=0x004c34; 	J(CALL(sub_34e44,0));	// 93201                  call    sub_34E44 ;~ 17C5:4C34
cs=0x17c5;eip=0x004c37; 	X(PUSH(dx));	// 93202                  push    dx ;~ 17C5:4C37
cs=0x17c5;eip=0x004c38; 	X(PUSH(ax));	// 93203                  push    ax ;~ 17C5:4C38
cs=0x17c5;eip=0x004c39; 	J(CALL(sub_34e44,0));	// 93204                  call    sub_34E44 ;~ 17C5:4C39
cs=0x17c5;eip=0x004c3c; 	X(ADD(word_50b74, ax));	// 93205                  add     ds:word_50B74, ax ;~ 17C5:4C3C
cs=0x17c5;eip=0x004c40; 	X(PUSH(word_50b74));	// 93206                  push    ds:word_50B74 ;~ 17C5:4C40
cs=0x17c5;eip=0x004c44; 	J(CALL(sub_34dc0,0));	// 93207                  call    sub_34DC0 ;~ 17C5:4C44
cs=0x17c5;eip=0x004c47; 	T(ADD(sp, 2));	// 93208                  add     sp, 2 ;~ 17C5:4C47
cs=0x17c5;eip=0x004c4a; 	T(INC(ax));	// 93209                  inc     ax ;~ 17C5:4C4A
cs=0x17c5;eip=0x004c4b; 	T(CWD);	// 93210                  cwd ;~ 17C5:4C4B
cs=0x17c5;eip=0x004c4c; 	X(PUSH(dx));	// 93211                  push    dx ;~ 17C5:4C4C
cs=0x17c5;eip=0x004c4d; 	X(PUSH(ax));	// 93212                  push    ax ;~ 17C5:4C4D
cs=0x17c5;eip=0x004c4e; 	T(ax = 0x0C00;);	// 93213                  mov     ax, 0C00h ;~ 17C5:4C4E
cs=0x17c5;eip=0x004c51; 	T(CWD);	// 93214                  cwd ;~ 17C5:4C51
cs=0x17c5;eip=0x004c52; 	X(PUSH(dx));	// 93215                  push    dx ;~ 17C5:4C52
cs=0x17c5;eip=0x004c53; 	X(PUSH(ax));	// 93216                  push    ax ;~ 17C5:4C53
cs=0x17c5;eip=0x004c54; 	T(ax = word_50b2e;);	// 93217                  mov     ax, ds:word_50B2E ;~ 17C5:4C54
cs=0x17c5;eip=0x004c57; 	T(CWD);	// 93218                  cwd ;~ 17C5:4C57
cs=0x17c5;eip=0x004c58; 	X(PUSH(dx));	// 93219                  push    dx ;~ 17C5:4C58
cs=0x17c5;eip=0x004c59; 	X(PUSH(ax));	// 93220                  push    ax ;~ 17C5:4C59
cs=0x17c5;eip=0x004c5a; 	J(CALL(sub_34ee0,0));	// 93221                  call    sub_34EE0 ;~ 17C5:4C5A
cs=0x17c5;eip=0x004c5d; 	X(PUSH(dx));	// 93222                  push    dx ;~ 17C5:4C5D
cs=0x17c5;eip=0x004c5e; 	X(PUSH(ax));	// 93223                  push    ax ;~ 17C5:4C5E
cs=0x17c5;eip=0x004c5f; 	J(CALL(sub_34e44,0));	// 93224                  call    sub_34E44 ;~ 17C5:4C5F
cs=0x17c5;eip=0x004c62; 	X(word_5170a = ax;);	// 93225                  mov     ds:word_5170A, ax ;~ 17C5:4C62
cs=0x17c5;eip=0x004c65; 	T(CMP(ax, 0x2000));	// 93226                  cmp     ax, 2000h ;~ 17C5:4C65
cs=0x17c5;eip=0x004c68; 	J(JBE(loc_2aea0));	// 93227                  jbe     short loc_2AEA0 ;~ 17C5:4C68
cs=0x17c5;eip=0x004c6a; 	X(word_5170a = 0x2000;);	// 93228                  mov     ds:word_5170A, 2000h ;~ 17C5:4C6A
loc_2aea0:
	// 5435 
cs=0x17c5;eip=0x004c70; 	T(ax = word_5170a;);	// 93231                  mov     ax, ds:word_5170A ;~ 17C5:4C70
cs=0x17c5;eip=0x004c73; 	T(SUB(ax, 0x300));	// 93232                  sub     ax, 300h ;~ 17C5:4C73
cs=0x17c5;eip=0x004c76; 	X(PUSH(ax));	// 93233                  push    ax ;~ 17C5:4C76
cs=0x17c5;eip=0x004c77; 	X(PUSH(word_4e2fc));	// 93234                  push    ds:word_4E2FC ;~ 17C5:4C77
cs=0x17c5;eip=0x004c7b; 	J(CALL(sub_333c0,0));	// 93235                  call    sub_333C0 ;~ 17C5:4C7B
cs=0x17c5;eip=0x004c7e; 	T(ADD(sp, 4));	// 93236                  add     sp, 4 ;~ 17C5:4C7E
cs=0x17c5;eip=0x004c81; 	X(word_4f1f4 = ax;);	// 93237                  mov     ds:word_4F1F4, ax ;~ 17C5:4C81
cs=0x17c5;eip=0x004c84; 	T(TEST(*(db*)(&word_4f42e), 8));	// 93238                  test    byte ptr ds:word_4F42E, 8 ;~ 17C5:4C84
cs=0x17c5;eip=0x004c89; 	J(JZ(loc_2af10));	// 93239                  jz      short loc_2AF10 ;~ 17C5:4C89
cs=0x17c5;eip=0x004c8b; 	T(ax = word_4e2fe;);	// 93240                  mov     ax, ds:word_4E2FE ;~ 17C5:4C8B
cs=0x17c5;eip=0x004c8e; 	T(CMP(word_520ee, ax));	// 93241                  cmp     ds:word_520EE, ax ;~ 17C5:4C8E
cs=0x17c5;eip=0x004c92; 	J(JNZ(loc_2aeff));	// 93242                  jnz     short loc_2AEFF ;~ 17C5:4C92
cs=0x17c5;eip=0x004c94; 	T(cx = 0x1B;);	// 93243                  mov     cx, 1Bh ;~ 17C5:4C94
cs=0x17c5;eip=0x004c97; 	T(LES(bx, dword_4f220));	// 93244                  les     bx, ds:dword_4F220 ;~ 17C5:4C97
cs=0x17c5;eip=0x004c9b; 	T(MOV(ax, *(dw*)(raddr(es,bx+0x40))));	// 93246                  mov     ax, es:[bx+40h] ;~ 17C5:4C9B
cs=0x17c5;eip=0x004c9f; 	T(dx = cx;);	// 93247                  mov     dx, cx ;~ 17C5:4C9F
cs=0x17c5;eip=0x004ca1; 	T(cl = 3;);	// 93248                  mov     cl, 3 ;~ 17C5:4CA1
cs=0x17c5;eip=0x004ca3; 	T(SHL(ax, cl));	// 93249                  shl     ax, cl ;~ 17C5:4CA3
cs=0x17c5;eip=0x004ca5; 	T(SUB(ax, 0x20));	// 93250                  sub     ax, 20h ; ' ' ;~ 17C5:4CA5
cs=0x17c5;eip=0x004ca8; 	T(NEG(ax));	// 93251                  neg     ax ;~ 17C5:4CA8
cs=0x17c5;eip=0x004caa; 	T(cx = dx;);	// 93252                  mov     cx, dx ;~ 17C5:4CAA
cs=0x17c5;eip=0x004cac; 	T(MUL1_2(cx));	// 93253                  mul     cx ;~ 17C5:4CAC
cs=0x17c5;eip=0x004cae; 	T(SUB(dx, dx));	// 93254                  sub     dx, dx ;~ 17C5:4CAE
cs=0x17c5;eip=0x004cb0; 	X(DIV2(word_492f4));	// 93255                  div     word_492F4 ;~ 17C5:4CB0
cs=0x17c5;eip=0x004cb4; 	X(SUB(word_50b74, ax));	// 93256                  sub     ds:word_50B74, ax ;~ 17C5:4CB4
cs=0x17c5;eip=0x004cb8; 	T(CMP(word_520ee, 0));	// 93257                  cmp     ds:word_520EE, 0 ;~ 17C5:4CB8
cs=0x17c5;eip=0x004cbd; 	J(JZ(loc_2aefd));	// 93258                  jz      short loc_2AEFD ;~ 17C5:4CBD
cs=0x17c5;eip=0x004cbf; 	T(CMP(word_50b74, 0x1B0));	// 93259                  cmp     ds:word_50B74, 1B0h ;~ 17C5:4CBF
cs=0x17c5;eip=0x004cc5; 	J(JNC(loc_2aefd));	// 93260                  jnb     short loc_2AEFD ;~ 17C5:4CC5
cs=0x17c5;eip=0x004cc7; 	X(word_50b74 = 0;);	// 93261                  mov     ds:word_50B74, 0 ;~ 17C5:4CC7
loc_2aefd:
	// 5436 
cs=0x17c5;eip=0x004ccd; 	J(JMP(loc_2af10));	// 93265                  jmp     short loc_2AF10 ;~ 17C5:4CCD
loc_2aeff:
	// 5437 
cs=0x17c5;eip=0x004ccf; 	T(ax = word_50b74;);	// 93269                  mov     ax, ds:word_50B74 ;~ 17C5:4CCF
cs=0x17c5;eip=0x004cd2; 	T(cl = 4;);	// 93270                  mov     cl, 4 ;~ 17C5:4CD2
cs=0x17c5;eip=0x004cd4; 	T(SHR(ax, cl));	// 93271                  shr     ax, cl ;~ 17C5:4CD4
cs=0x17c5;eip=0x004cd6; 	T(SUB(dx, dx));	// 93272                  sub     dx, dx ;~ 17C5:4CD6
cs=0x17c5;eip=0x004cd8; 	X(DIV2(word_492f4));	// 93273                  div     word_492F4 ;~ 17C5:4CD8
cs=0x17c5;eip=0x004cdc; 	X(SUB(word_50b74, ax));	// 93274                  sub     ds:word_50B74, ax ;~ 17C5:4CDC
loc_2af10:
	// 5438 
cs=0x17c5;eip=0x004ce0; 	T(CMP(word_50b74, 0x0AFC8));	// 93278                  cmp     ds:word_50B74, 0AFC8h ;~ 17C5:4CE0
cs=0x17c5;eip=0x004ce6; 	J(JBE(loc_2af1e));	// 93279                  jbe     short loc_2AF1E ;~ 17C5:4CE6
cs=0x17c5;eip=0x004ce8; 	X(word_50b74 = 0;);	// 93280                  mov     ds:word_50B74, 0 ;~ 17C5:4CE8
loc_2af1e:
	// 5439 
cs=0x17c5;eip=0x004cee; 	X(PUSH(word_50b74));	// 93283                  push    ds:word_50B74 ;~ 17C5:4CEE
cs=0x17c5;eip=0x004cf2; 	X(PUSH(word_4e2fa));	// 93284                  push    ds:word_4E2FA ;~ 17C5:4CF2
cs=0x17c5;eip=0x004cf6; 	J(CALL(sub_333c0,0));	// 93285                  call    sub_333C0 ;~ 17C5:4CF6
cs=0x17c5;eip=0x004cf9; 	T(ADD(sp, 4));	// 93286                  add     sp, 4 ;~ 17C5:4CF9
cs=0x17c5;eip=0x004cfc; 	X(MOV(*(dw*)(raddr(ss,bp+var_22)), ax));	// 93287                  mov     [bp+var_22], ax ;~ 17C5:4CFC
cs=0x17c5;eip=0x004cff; 	T(ax = word_50b74;);	// 93288                  mov     ax, ds:word_50B74 ;~ 17C5:4CFF
cs=0x17c5;eip=0x004d02; 	T(SUB(dx, dx));	// 93289                  sub     dx, dx ;~ 17C5:4D02
cs=0x17c5;eip=0x004d04; 	T(cx = 0x1B;);	// 93290                  mov     cx, 1Bh ;~ 17C5:4D04
cs=0x17c5;eip=0x004d07; 	T(DIV2(cx));	// 93291                  div     cx ;~ 17C5:4D07
cs=0x17c5;eip=0x004d09; 	X(word_50c8a = ax;);	// 93292                  mov     ds:word_50C8A, ax ;~ 17C5:4D09
cs=0x17c5;eip=0x004d0c; 	X(PUSH(word_511d6));	// 93293                  push    ds:word_511D6 ;~ 17C5:4D0C
cs=0x17c5;eip=0x004d10; 	X(PUSH(ax));	// 93294                  push    ax ;~ 17C5:4D10
cs=0x17c5;eip=0x004d11; 	J(CALLF(sub_49bb0,0));	// 93295                  call    far ptr sub_49BB0 ;~ 17C5:4D11
seg2623_4d16_proc:
	// 93299 
cs=0x17c5;eip=0x004d16; 	T(ADD(sp, 4));	// 93299                  add     sp, 4 ;~ 17C5:4D16
cs=0x17c5;eip=0x004d19; 	T(ax = word_50b74;);	// 93300                  mov     ax, ds:word_50B74 ;~ 17C5:4D19
cs=0x17c5;eip=0x004d1c; 	T(cl = 9;);	// 93301                  mov     cl, 9 ;~ 17C5:4D1C
cs=0x17c5;eip=0x004d1e; 	T(SHR(ax, cl));	// 93302                  shr     ax, cl ;~ 17C5:4D1E
cs=0x17c5;eip=0x004d20; 	T(ADD(ax, 0x20));	// 93303                  add     ax, 20h ; ' ' ;~ 17C5:4D20
cs=0x17c5;eip=0x004d23; 	T(CWD);	// 93304                  cwd ;~ 17C5:4D23
cs=0x17c5;eip=0x004d24; 	X(PUSH(dx));	// 93305                  push    dx ;~ 17C5:4D24
cs=0x17c5;eip=0x004d25; 	X(PUSH(ax));	// 93306                  push    ax ;~ 17C5:4D25
cs=0x17c5;eip=0x004d26; 	T(ax = word_4f20a;);	// 93307                  mov     ax, ds:word_4F20A ;~ 17C5:4D26
cs=0x17c5;eip=0x004d29; 	T(cl = 4;);	// 93308                  mov     cl, 4 ;~ 17C5:4D29
cs=0x17c5;eip=0x004d2b; 	T(SHL(ax, cl));	// 93309                  shl     ax, cl ;~ 17C5:4D2B
cs=0x17c5;eip=0x004d2d; 	X(PUSH(ax));	// 93310                  push    ax ;~ 17C5:4D2D
cs=0x17c5;eip=0x004d2e; 	X(PUSH(word_4e2fc));	// 93311                  push    ds:word_4E2FC ;~ 17C5:4D2E
cs=0x17c5;eip=0x004d32; 	J(CALL(sub_333a8,0));	// 93312                  call    sub_333A8 ;~ 17C5:4D32
cs=0x17c5;eip=0x004d35; 	T(ADD(sp, 4));	// 93313                  add     sp, 4 ;~ 17C5:4D35
cs=0x17c5;eip=0x004d38; 	T(CWD);	// 93314                  cwd ;~ 17C5:4D38
cs=0x17c5;eip=0x004d39; 	T(cl = 7;);	// 93315                  mov     cl, 7 ;~ 17C5:4D39
loc_2af6b:
	// 5440 
cs=0x17c5;eip=0x004d3b; 	T(SHL(ax, 1));	// 93318                  shl     ax, 1 ;~ 17C5:4D3B
cs=0x17c5;eip=0x004d3d; 	T(RCL(dx, 1));	// 93319                  rcl     dx, 1 ;~ 17C5:4D3D
cs=0x17c5;eip=0x004d3f; 	T(DEC(cl));	// 93320                  dec     cl ;~ 17C5:4D3F
cs=0x17c5;eip=0x004d41; 	J(JZ(loc_2af75));	// 93321                  jz      short loc_2AF75 ;~ 17C5:4D41
cs=0x17c5;eip=0x004d43; 	J(JMP(loc_2af6b));	// 93322                  jmp     short loc_2AF6B ;~ 17C5:4D43
loc_2af75:
	// 5441 
cs=0x17c5;eip=0x004d45; 	X(PUSH(dx));	// 93326                  push    dx ;~ 17C5:4D45
cs=0x17c5;eip=0x004d46; 	X(PUSH(ax));	// 93327                  push    ax ;~ 17C5:4D46
cs=0x17c5;eip=0x004d47; 	J(CALL(sub_34e44,0));	// 93328                  call    sub_34E44 ;~ 17C5:4D47
cs=0x17c5;eip=0x004d4a; 	X(MOV(*(dw*)(raddr(ss,bp-0x18)), ax));	// 93329                  mov     [bp-18h], ax ;~ 17C5:4D4A
cs=0x17c5;eip=0x004d4d; 	X(PUSH(ax));	// 93330                  push    ax ;~ 17C5:4D4D
cs=0x17c5;eip=0x004d4e; 	X(PUSH(word_4e2fa));	// 93331                  push    ds:word_4E2FA ;~ 17C5:4D4E
cs=0x17c5;eip=0x004d52; 	J(CALL(sub_333c0,0));	// 93332                  call    sub_333C0 ;~ 17C5:4D52
cs=0x17c5;eip=0x004d55; 	T(ADD(sp, 4));	// 93333                  add     sp, 4 ;~ 17C5:4D55
cs=0x17c5;eip=0x004d58; 	X(MOV(*(dw*)(raddr(ss,bp-0x18)), ax));	// 93334                  mov     [bp-18h], ax ;~ 17C5:4D58
cs=0x17c5;eip=0x004d5b; 	T(ax = word_4e2fe;);	// 93335                  mov     ax, ds:word_4E2FE ;~ 17C5:4D5B
cs=0x17c5;eip=0x004d5e; 	T(CMP(word_520ee, ax));	// 93336                  cmp     ds:word_520EE, ax ;~ 17C5:4D5E
cs=0x17c5;eip=0x004d62; 	J(JNZ(loc_2afb5));	// 93337                  jnz     short loc_2AFB5 ;~ 17C5:4D62
cs=0x17c5;eip=0x004d64; 	T(ax = word_5223e;);	// 93338                  mov     ax, ds:word_5223E ;~ 17C5:4D64
cs=0x17c5;eip=0x004d67; 	T(NEG(ax));	// 93339                  neg     ax ;~ 17C5:4D67
cs=0x17c5;eip=0x004d69; 	T(cl = 6;);	// 93340                  mov     cl, 6 ;~ 17C5:4D69
cs=0x17c5;eip=0x004d6b; 	T(SHL(ax, cl));	// 93341                  shl     ax, cl ;~ 17C5:4D6B
cs=0x17c5;eip=0x004d6d; 	X(MOV(*(dw*)(raddr(ss,bp-0x18)), ax));	// 93342                  mov     [bp-18h], ax ;~ 17C5:4D6D
cs=0x17c5;eip=0x004d70; 	X(word_5223e = 0;);	// 93343                  mov     ds:word_5223E, 0 ;~ 17C5:4D70
cs=0x17c5;eip=0x004d76; 	T(ax = word_527d6;);	// 93344                  mov     ax, ds:word_527D6 ;~ 17C5:4D76
cs=0x17c5;eip=0x004d79; 	T(CMP(word_50c8a, ax));	// 93345                  cmp     ds:word_50C8A, ax ;~ 17C5:4D79
cs=0x17c5;eip=0x004d7d; 	J(JGE(loc_2afb5));	// 93346                  jge     short loc_2AFB5 ;~ 17C5:4D7D
cs=0x17c5;eip=0x004d7f; 	X(word_527d4 = 0;);	// 93347                  mov     ds:word_527D4, 0 ;~ 17C5:4D7F
loc_2afb5:
	// 5442 
cs=0x17c5;eip=0x004d85; 	T(CMP(word_4f20e, 0));	// 93351                  cmp     ds:word_4F20E, 0 ;~ 17C5:4D85
cs=0x17c5;eip=0x004d8a; 	J(JZ(loc_2afce));	// 93352                  jz      short loc_2AFCE ;~ 17C5:4D8A
cs=0x17c5;eip=0x004d8c; 	T(ax = 0x0FC00;);	// 93353                  mov     ax, 0FC00h ;~ 17C5:4D8C
cs=0x17c5;eip=0x004d8f; 	T(SUB(ax, word_4e2fa));	// 93354                  sub     ax, ds:word_4E2FA ;~ 17C5:4D8F
cs=0x17c5;eip=0x004d93; 	X(word_527d4 = ax;);	// 93355                  mov     ds:word_527D4, ax ;~ 17C5:4D93
cs=0x17c5;eip=0x004d96; 	T(SUB(ax, ax));	// 93356                  sub     ax, ax ;~ 17C5:4D96
cs=0x17c5;eip=0x004d98; 	X(word_50b74 = ax;);	// 93357                  mov     ds:word_50B74, ax ;~ 17C5:4D98
cs=0x17c5;eip=0x004d9b; 	X(word_4e310 = ax;);	// 93358                  mov     ds:word_4E310, ax ;~ 17C5:4D9B
loc_2afce:
	// 5443 
cs=0x17c5;eip=0x004d9e; 	T(ax = word_492f4;);	// 93361                  mov     ax, word_492F4 ;~ 17C5:4D9E
cs=0x17c5;eip=0x004da1; 	T(CWD);	// 93362                  cwd ;~ 17C5:4DA1
cs=0x17c5;eip=0x004da2; 	X(PUSH(dx));	// 93363                  push    dx ;~ 17C5:4DA2
cs=0x17c5;eip=0x004da3; 	X(PUSH(ax));	// 93364                  push    ax ;~ 17C5:4DA3
cs=0x17c5;eip=0x004da4; 	T(ax = word_5223e;);	// 93365                  mov     ax, ds:word_5223E ;~ 17C5:4DA4
cs=0x17c5;eip=0x004da7; 	T(CWD);	// 93366                  cwd ;~ 17C5:4DA7
cs=0x17c5;eip=0x004da8; 	T(cl = 7;);	// 93367                  mov     cl, 7 ;~ 17C5:4DA8
loc_2afda:
	// 5444 
cs=0x17c5;eip=0x004daa; 	T(SHL(ax, 1));	// 93370                  shl     ax, 1 ;~ 17C5:4DAA
cs=0x17c5;eip=0x004dac; 	T(RCL(dx, 1));	// 93371                  rcl     dx, 1 ;~ 17C5:4DAC
cs=0x17c5;eip=0x004dae; 	T(DEC(cl));	// 93372                  dec     cl ;~ 17C5:4DAE
cs=0x17c5;eip=0x004db0; 	J(JZ(loc_2afe4));	// 93373                  jz      short loc_2AFE4 ;~ 17C5:4DB0
cs=0x17c5;eip=0x004db2; 	J(JMP(loc_2afda));	// 93374                  jmp     short loc_2AFDA ;~ 17C5:4DB2
loc_2afe4:
	// 5445 
cs=0x17c5;eip=0x004db4; 	X(PUSH(dx));	// 93378                  push    dx ;~ 17C5:4DB4
cs=0x17c5;eip=0x004db5; 	X(PUSH(ax));	// 93379                  push    ax ;~ 17C5:4DB5
cs=0x17c5;eip=0x004db6; 	J(CALL(sub_34e44,0));	// 93380                  call    sub_34E44 ;~ 17C5:4DB6
cs=0x17c5;eip=0x004db9; 	X(MOV(*(dw*)(raddr(ss,bp-0x28)), ax));	// 93381                  mov     [bp-28h], ax ;~ 17C5:4DB9
cs=0x17c5;eip=0x004dbc; 	T(OR(ax, ax));	// 93382                  or      ax, ax ;~ 17C5:4DBC
cs=0x17c5;eip=0x004dbe; 	J(JZ(loc_2b01c));	// 93383                  jz      short loc_2B01C ;~ 17C5:4DBE
cs=0x17c5;eip=0x004dc0; 	X(PUSH(ax));	// 93385                  push    ax ;~ 17C5:4DC0
cs=0x17c5;eip=0x004dc1; 	J(CALL(sub_29db6,0));	// 93386                  call    sub_29DB6 ;~ 17C5:4DC1
cs=0x17c5;eip=0x004dc4; 	T(ADD(sp, 2));	// 93387                  add     sp, 2 ;~ 17C5:4DC4
cs=0x17c5;eip=0x004dc7; 	X(word_4e2dc = ax;);	// 93388                  mov     ds:word_4E2DC, ax ;~ 17C5:4DC7
cs=0x17c5;eip=0x004dca; 	X(word_4e2d4 = ax;);	// 93389                  mov     ds:word_4E2D4, ax ;~ 17C5:4DCA
cs=0x17c5;eip=0x004dcd; 	X(PUSH(*(dw*)(raddr(ss,bp-0x28))));	// 93390                  push    word ptr [bp-28h] ;~ 17C5:4DCD
cs=0x17c5;eip=0x004dd0; 	J(CALL(sub_29dc6,0));	// 93391                  call    sub_29DC6 ;~ 17C5:4DD0
cs=0x17c5;eip=0x004dd3; 	T(ADD(sp, 2));	// 93392                  add     sp, 2 ;~ 17C5:4DD3
cs=0x17c5;eip=0x004dd6; 	X(word_4e2d6 = ax;);	// 93393                  mov     ds:word_4E2D6, ax ;~ 17C5:4DD6
cs=0x17c5;eip=0x004dd9; 	T(NEG(ax));	// 93394                  neg     ax ;~ 17C5:4DD9
cs=0x17c5;eip=0x004ddb; 	X(word_4e2da = ax;);	// 93395                  mov     ds:word_4E2DA, ax ;~ 17C5:4DDB
cs=0x17c5;eip=0x004dde; 	T(ax = 0x57F4;);	// 93396                  mov     ax, 57F4h ;~ 17C5:4DDE
cs=0x17c5;eip=0x004de1; 	X(PUSH(ax));	// 93397                  push    ax ;~ 17C5:4DE1
cs=0x17c5;eip=0x004de2; 	T(ax = 0x57BE;);	// 93398                  mov     ax, 57BEh ;~ 17C5:4DE2
cs=0x17c5;eip=0x004de5; 	X(PUSH(ax));	// 93399                  push    ax ;~ 17C5:4DE5
cs=0x17c5;eip=0x004de6; 	J(CALL(sub_2b429,0));	// 93400                  call    sub_2B429 ;~ 17C5:4DE6
cs=0x17c5;eip=0x004de9; 	T(ADD(sp, 4));	// 93401                  add     sp, 4 ;~ 17C5:4DE9
loc_2b01c:
	// 5446 
cs=0x17c5;eip=0x004dec; 	T(ax = word_527d4;);	// 93404                  mov     ax, ds:word_527D4 ;~ 17C5:4DEC
cs=0x17c5;eip=0x004def; 	T(cl = 7;);	// 93405                  mov     cl, 7 ;~ 17C5:4DEF
cs=0x17c5;eip=0x004df1; 	T(SHL(ax, cl));	// 93406                  shl     ax, cl ;~ 17C5:4DF1
cs=0x17c5;eip=0x004df3; 	T(CWD);	// 93407                  cwd ;~ 17C5:4DF3
cs=0x17c5;eip=0x004df4; 	T(cx = word_492f4;);	// 93408                  mov     cx, word_492F4 ;~ 17C5:4DF4
cs=0x17c5;eip=0x004df8; 	T(IDIV2(cx));	// 93409                  idiv    cx ;~ 17C5:4DF8
cs=0x17c5;eip=0x004dfa; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), ax));	// 93410                  mov     [bp-20h], ax ;~ 17C5:4DFA
cs=0x17c5;eip=0x004dfd; 	T(OR(ax, ax));	// 93411                  or      ax, ax ;~ 17C5:4DFD
cs=0x17c5;eip=0x004dff; 	J(JZ(loc_2b05d));	// 93412                  jz      short loc_2B05D ;~ 17C5:4DFF
cs=0x17c5;eip=0x004e01; 	X(PUSH(ax));	// 93413                  push    ax ;~ 17C5:4E01
cs=0x17c5;eip=0x004e02; 	J(CALL(sub_29db6,0));	// 93414                  call    sub_29DB6 ;~ 17C5:4E02
cs=0x17c5;eip=0x004e05; 	T(ADD(sp, 2));	// 93415                  add     sp, 2 ;~ 17C5:4E05
cs=0x17c5;eip=0x004e08; 	X(word_4e2d2 = ax;);	// 93416                  mov     ds:word_4E2D2, ax ;~ 17C5:4E08
cs=0x17c5;eip=0x004e0b; 	X(word_4e2ca = ax;);	// 93417                  mov     ds:word_4E2CA, ax ;~ 17C5:4E0B
cs=0x17c5;eip=0x004e0e; 	X(PUSH(*(dw*)(raddr(ss,bp-0x20))));	// 93418                  push    word ptr [bp-20h] ;~ 17C5:4E0E
cs=0x17c5;eip=0x004e11; 	J(CALL(sub_29dc6,0));	// 93419                  call    sub_29DC6 ;~ 17C5:4E11
cs=0x17c5;eip=0x004e14; 	T(ADD(sp, 2));	// 93420                  add     sp, 2 ;~ 17C5:4E14
cs=0x17c5;eip=0x004e17; 	X(word_4e2d0 = ax;);	// 93421                  mov     ds:word_4E2D0, ax ;~ 17C5:4E17
cs=0x17c5;eip=0x004e1a; 	T(NEG(ax));	// 93422                  neg     ax ;~ 17C5:4E1A
cs=0x17c5;eip=0x004e1c; 	X(word_4e2cc = ax;);	// 93423                  mov     ds:word_4E2CC, ax ;~ 17C5:4E1C
cs=0x17c5;eip=0x004e1f; 	T(ax = 0x57E2;);	// 93424                  mov     ax, 57E2h ;~ 17C5:4E1F
cs=0x17c5;eip=0x004e22; 	X(PUSH(ax));	// 93425                  push    ax ;~ 17C5:4E22
cs=0x17c5;eip=0x004e23; 	T(ax = 0x57BE;);	// 93426                  mov     ax, 57BEh ;~ 17C5:4E23
cs=0x17c5;eip=0x004e26; 	X(PUSH(ax));	// 93427                  push    ax ;~ 17C5:4E26
cs=0x17c5;eip=0x004e27; 	J(CALL(sub_2b429,0));	// 93428                  call    sub_2B429 ;~ 17C5:4E27
cs=0x17c5;eip=0x004e2a; 	T(ADD(sp, 4));	// 93429                  add     sp, 4 ;~ 17C5:4E2A
loc_2b05d:
	// 5447 
cs=0x17c5;eip=0x004e2d; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x18))));	// 93432                  mov     ax, [bp-18h] ;~ 17C5:4E2D
cs=0x17c5;eip=0x004e30; 	T(CWD);	// 93433                  cwd ;~ 17C5:4E30
cs=0x17c5;eip=0x004e31; 	T(cx = word_492f4;);	// 93434                  mov     cx, word_492F4 ;~ 17C5:4E31
cs=0x17c5;eip=0x004e35; 	T(IDIV2(cx));	// 93435                  idiv    cx ;~ 17C5:4E35
cs=0x17c5;eip=0x004e37; 	X(MOV(*(dw*)(raddr(ss,bp-0x16)), ax));	// 93436                  mov     [bp-16h], ax ;~ 17C5:4E37
cs=0x17c5;eip=0x004e3a; 	T(OR(ax, ax));	// 93437                  or      ax, ax ;~ 17C5:4E3A
cs=0x17c5;eip=0x004e3c; 	J(JZ(loc_2b09a));	// 93438                  jz      short loc_2B09A ;~ 17C5:4E3C
cs=0x17c5;eip=0x004e3e; 	X(PUSH(ax));	// 93439                  push    ax ;~ 17C5:4E3E
cs=0x17c5;eip=0x004e3f; 	J(CALL(sub_29db6,0));	// 93440                  call    sub_29DB6 ;~ 17C5:4E3F
cs=0x17c5;eip=0x004e42; 	T(ADD(sp, 2));	// 93441                  add     sp, 2 ;~ 17C5:4E42
cs=0x17c5;eip=0x004e45; 	X(word_4e2c0 = ax;);	// 93442                  mov     ds:word_4E2C0, ax ;~ 17C5:4E45
cs=0x17c5;eip=0x004e48; 	X(word_4e2b0 = ax;);	// 93443                  mov     ds:word_4E2B0, ax ;~ 17C5:4E48
cs=0x17c5;eip=0x004e4b; 	X(PUSH(*(dw*)(raddr(ss,bp-0x16))));	// 93444                  push    word ptr [bp-16h] ;~ 17C5:4E4B
cs=0x17c5;eip=0x004e4e; 	J(CALL(sub_29dc6,0));	// 93445                  call    sub_29DC6 ;~ 17C5:4E4E
cs=0x17c5;eip=0x004e51; 	T(ADD(sp, 2));	// 93446                  add     sp, 2 ;~ 17C5:4E51
cs=0x17c5;eip=0x004e54; 	X(word_4e2b4 = ax;);	// 93447                  mov     ds:word_4E2B4, ax ;~ 17C5:4E54
cs=0x17c5;eip=0x004e57; 	T(NEG(ax));	// 93448                  neg     ax ;~ 17C5:4E57
cs=0x17c5;eip=0x004e59; 	X(word_4e2bc = ax;);	// 93449                  mov     ds:word_4E2BC, ax ;~ 17C5:4E59
cs=0x17c5;eip=0x004e5c; 	T(ax = 0x57BE;);	// 93450                  mov     ax, 57BEh ;~ 17C5:4E5C
cs=0x17c5;eip=0x004e5f; 	X(PUSH(ax));	// 93451                  push    ax ;~ 17C5:4E5F
cs=0x17c5;eip=0x004e60; 	T(ax = 0x57D0;);	// 93452                  mov     ax, 57D0h ;~ 17C5:4E60
cs=0x17c5;eip=0x004e63; 	X(PUSH(ax));	// 93453                  push    ax ;~ 17C5:4E63
cs=0x17c5;eip=0x004e64; 	J(CALL(sub_2b429,0));	// 93454                  call    sub_2B429 ;~ 17C5:4E64
cs=0x17c5;eip=0x004e67; 	T(ADD(sp, 4));	// 93455                  add     sp, 4 ;~ 17C5:4E67
loc_2b09a:
	// 5448 
cs=0x17c5;eip=0x004e6a; 	J(CALL(sub_2b467,0));	// 93458                  call    sub_2B467 ;~ 17C5:4E6A
__unk_2b09d:
	// 5449 
cs=0x17c5;eip=0x004e6d; 	T(ax = word_50b74;);	// 93461                  mov     ax, ds:word_50B74 ;~ 17C5:4E6D
cs=0x17c5;eip=0x004e70; 	T(CMP(word_50b2e, ax));	// 93462                  cmp     ds:word_50B2E, ax ;~ 17C5:4E70
cs=0x17c5;eip=0x004e74; 	J(JBE(loc_2b0f6));	// 93463                  jbe     short loc_2B0F6 ;~ 17C5:4E74
cs=0x17c5;eip=0x004e76; 	T(ax = word_4e2fe;);	// 93465                  mov     ax, ds:word_4E2FE ;~ 17C5:4E76
cs=0x17c5;eip=0x004e79; 	T(CMP(word_520ee, ax));	// 93466                  cmp     ds:word_520EE, ax ;~ 17C5:4E79
cs=0x17c5;eip=0x004e7d; 	J(JNC(loc_2b0f6));	// 93467                  jnb     short loc_2B0F6 ;~ 17C5:4E7D
cs=0x17c5;eip=0x004e7f; 	T(LES(bx, dword_4f220));	// 93469                  les     bx, ds:dword_4F220 ;~ 17C5:4E7F
cs=0x17c5;eip=0x004e83; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 2));	// 93471                  cmp     word ptr es:[bx+40h], 2 ;~ 17C5:4E83
cs=0x17c5;eip=0x004e88; 	J(JZ(loc_2b0c1));	// 93472                  jz      short loc_2B0C1 ;~ 17C5:4E88
cs=0x17c5;eip=0x004e8a; 	T(CMP(word_521c0, 8));	// 93473                  cmp     ds:word_521C0, 8 ;~ 17C5:4E8A
cs=0x17c5;eip=0x004e8f; 	J(JLE(loc_2b0c5));	// 93474                  jle     short loc_2B0C5 ;~ 17C5:4E8F
loc_2b0c1:
	// 5450 
cs=0x17c5;eip=0x004e91; 	T(cl = 1;);	// 93477                  mov     cl, 1 ;~ 17C5:4E91
cs=0x17c5;eip=0x004e93; 	J(JMP(loc_2b0c7));	// 93478                  jmp     short loc_2B0C7 ;~ 17C5:4E93
loc_2b0c5:
	// 5451 
cs=0x17c5;eip=0x004e95; 	T(cl = 2;);	// 93482                  mov     cl, 2 ;~ 17C5:4E95
loc_2b0c7:
	// 5452 
cs=0x17c5;eip=0x004e97; 	T(ax = word_50b2e;);	// 93485                  mov     ax, ds:word_50B2E ;~ 17C5:4E97
cs=0x17c5;eip=0x004e9a; 	T(SUB(ax, word_50b74));	// 93486                  sub     ax, ds:word_50B74 ;~ 17C5:4E9A
cs=0x17c5;eip=0x004e9e; 	T(SHR(ax, cl));	// 93487                  shr     ax, cl ;~ 17C5:4E9E
cs=0x17c5;eip=0x004ea0; 	X(SUB(word_4e2fa, ax));	// 93488                  sub     ds:word_4E2FA, ax ;~ 17C5:4EA0
cs=0x17c5;eip=0x004ea4; 	X(byte_4e30d = 1;);	// 93489                  mov     ds:byte_4E30D, 1 ;~ 17C5:4EA4
cs=0x17c5;eip=0x004ea9; 	T(CMP(word_4e2fa, 0));	// 93490                  cmp     ds:word_4E2FA, 0 ;~ 17C5:4EA9
cs=0x17c5;eip=0x004eae; 	J(JL(loc_2b0e8));	// 93491                  jl      short loc_2B0E8 ;~ 17C5:4EAE
cs=0x17c5;eip=0x004eb0; 	T(CMP(word_4e2fe, 0x0C8));	// 93492                  cmp     ds:word_4E2FE, 0C8h ;~ 17C5:4EB0
cs=0x17c5;eip=0x004eb6; 	J(JNC(loc_2b0f6));	// 93493                  jnb     short loc_2B0F6 ;~ 17C5:4EB6
loc_2b0e8:
	// 5453 
cs=0x17c5;eip=0x004eb8; 	T(ax = 1;);	// 93496                  mov     ax, 1 ;~ 17C5:4EB8
cs=0x17c5;eip=0x004ebb; 	X(PUSH(ax));	// 93497                  push    ax ;~ 17C5:4EBB
cs=0x17c5;eip=0x004ebc; 	T(ax = 0x14;);	// 93498                  mov     ax, 14h ;~ 17C5:4EBC
cs=0x17c5;eip=0x004ebf; 	X(PUSH(ax));	// 93499                  push    ax ;~ 17C5:4EBF
cs=0x17c5;eip=0x004ec0; 	J(CALL(sub_33c65,0));	// 93500                  call    sub_33C65 ;~ 17C5:4EC0
cs=0x17c5;eip=0x004ec3; 	T(ADD(sp, 4));	// 93502                  add     sp, 4 ;~ 17C5:4EC3
loc_2b0f6:
	// 5454 
cs=0x17c5;eip=0x004ec6; 	T(ax = word_4e2fe;);	// 93506                  mov     ax, ds:word_4E2FE ;~ 17C5:4EC6
cs=0x17c5;eip=0x004ec9; 	T(CMP(word_520ee, ax));	// 93507                  cmp     ds:word_520EE, ax ;~ 17C5:4EC9
cs=0x17c5;eip=0x004ecd; 	J(JNZ(loc_2b135));	// 93508                  jnz     short loc_2B135 ;~ 17C5:4ECD
cs=0x17c5;eip=0x004ecf; 	T(CMP(word_4e2fc, 0));	// 93509                  cmp     ds:word_4E2FC, 0 ;~ 17C5:4ECF
cs=0x17c5;eip=0x004ed4; 	J(JZ(loc_2b111));	// 93510                  jz      short loc_2B111 ;~ 17C5:4ED4
cs=0x17c5;eip=0x004ed6; 	X(word_4e2fc = 0;);	// 93511                  mov     ds:word_4E2FC, 0 ;~ 17C5:4ED6
cs=0x17c5;eip=0x004edc; 	X(byte_4e30d = 1;);	// 93512                  mov     ds:byte_4E30D, 1 ;~ 17C5:4EDC
loc_2b111:
	// 5455 
cs=0x17c5;eip=0x004ee1; 	T(CMP(word_4e2fa, 0));	// 93515                  cmp     ds:word_4E2FA, 0 ;~ 17C5:4EE1
cs=0x17c5;eip=0x004ee6; 	J(JL(loc_2b123));	// 93516                  jl      short loc_2B123 ;~ 17C5:4EE6
cs=0x17c5;eip=0x004ee8; 	J(JLE(loc_2b135));	// 93517                  jle     short loc_2B135 ;~ 17C5:4EE8
cs=0x17c5;eip=0x004eea; 	T(ax = word_527d6;);	// 93519                  mov     ax, ds:word_527D6 ;~ 17C5:4EEA
cs=0x17c5;eip=0x004eed; 	T(CMP(word_50c8a, ax));	// 93520                  cmp     ds:word_50C8A, ax ;~ 17C5:4EED
cs=0x17c5;eip=0x004ef1; 	J(JGE(loc_2b135));	// 93521                  jge     short loc_2B135 ;~ 17C5:4EF1
loc_2b123:
	// 5456 
cs=0x17c5;eip=0x004ef3; 	T(CMP(word_4f20e, 0));	// 93524                  cmp     ds:word_4F20E, 0 ;~ 17C5:4EF3
cs=0x17c5;eip=0x004ef8; 	J(JNZ(loc_2b130));	// 93525                  jnz     short loc_2B130 ;~ 17C5:4EF8
cs=0x17c5;eip=0x004efa; 	X(word_4e2fa = 0;);	// 93526                  mov     ds:word_4E2FA, 0 ;~ 17C5:4EFA
loc_2b130:
	// 5457 
cs=0x17c5;eip=0x004f00; 	X(byte_4e30d = 1;);	// 93529                  mov     ds:byte_4E30D, 1 ;~ 17C5:4F00
loc_2b135:
	// 5458 
cs=0x17c5;eip=0x004f05; 	X(word_4f20e = 0;);	// 93533                  mov     ds:word_4F20E, 0 ;~ 17C5:4F05
cs=0x17c5;eip=0x004f0b; 	X(PUSH(word_4e2fc));	// 93534                  push    ds:word_4E2FC ;~ 17C5:4F0B
cs=0x17c5;eip=0x004f0f; 	J(CALL(sub_34dc0,0));	// 93535                  call    sub_34DC0 ;~ 17C5:4F0F
cs=0x17c5;eip=0x004f12; 	T(ADD(sp, 2));	// 93536                  add     sp, 2 ;~ 17C5:4F12
cs=0x17c5;eip=0x004f15; 	T(CWD);	// 93537                  cwd ;~ 17C5:4F15
cs=0x17c5;eip=0x004f16; 	T(SUB(ax, dx));	// 93538                  sub     ax, dx ;~ 17C5:4F16
cs=0x17c5;eip=0x004f18; 	T(SAR(ax, 1));	// 93539                  sar     ax, 1 ;~ 17C5:4F18
cs=0x17c5;eip=0x004f1a; 	X(PUSH(word_4e2fa));	// 93540                  push    ds:word_4E2FA ;~ 17C5:4F1A
cs=0x17c5;eip=0x004f1e; 	T(si = ax;);	// 93541                  mov     si, ax ;~ 17C5:4F1E
cs=0x17c5;eip=0x004f20; 	J(CALL(sub_34dc0,0));	// 93542                  call    sub_34DC0 ;~ 17C5:4F20
cs=0x17c5;eip=0x004f23; 	T(ADD(sp, 2));	// 93543                  add     sp, 2 ;~ 17C5:4F23
cs=0x17c5;eip=0x004f26; 	T(SUB(ax, si));	// 93544                  sub     ax, si ;~ 17C5:4F26
cs=0x17c5;eip=0x004f28; 	T(CMP(ax, 0x1000));	// 93545                  cmp     ax, 1000h ;~ 17C5:4F28
cs=0x17c5;eip=0x004f2b; 	J(JLE(loc_2b161));	// 93546                  jle     short loc_2B161 ;~ 17C5:4F2B
cs=0x17c5;eip=0x004f2d; 	T(al = 1;);	// 93547                  mov     al, 1 ;~ 17C5:4F2D
cs=0x17c5;eip=0x004f2f; 	J(JMP(loc_2b163));	// 93548                  jmp     short loc_2B163 ;~ 17C5:4F2F
loc_2b161:
	// 5459 
cs=0x17c5;eip=0x004f31; 	T(SUB(al, al));	// 93552                  sub     al, al ;~ 17C5:4F31
loc_2b163:
	// 5460 
cs=0x17c5;eip=0x004f33; 	X(byte_528d0 = al;);	// 93555                  mov     ds:byte_528D0, al ;~ 17C5:4F33
cs=0x17c5;eip=0x004f36; 	T(CMP(byte_4e30d, 0));	// 93556                  cmp     ds:byte_4E30D, 0 ;~ 17C5:4F36
cs=0x17c5;eip=0x004f3b; 	J(JZ(loc_2b170));	// 93557                  jz      short loc_2B170 ;~ 17C5:4F3B
cs=0x17c5;eip=0x004f3d; 	J(CALL(sub_2b641,0));	// 93558                  call    sub_2B641 ;~ 17C5:4F3D
loc_2b170:
	// 5461 
cs=0x17c5;eip=0x004f40; 	T(ax = word_4e300;);	// 93561                  mov     ax, ds:word_4E300 ;~ 17C5:4F40
cs=0x17c5;eip=0x004f43; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 93562                  mov     [bp-0Ch], ax ;~ 17C5:4F43
cs=0x17c5;eip=0x004f46; 	T(ax = word_4e2fa;);	// 93563                  mov     ax, ds:word_4E2FA ;~ 17C5:4F46
cs=0x17c5;eip=0x004f49; 	T(SUB(ax, word_4f1f4));	// 93564                  sub     ax, ds:word_4F1F4 ;~ 17C5:4F49
cs=0x17c5;eip=0x004f4d; 	X(PUSH(ax));	// 93565                  push    ax ;~ 17C5:4F4D
cs=0x17c5;eip=0x004f4e; 	J(CALL(sub_29dc6,0));	// 93566                  call    sub_29DC6 ;~ 17C5:4F4E
cs=0x17c5;eip=0x004f51; 	T(ADD(sp, 2));	// 93567                  add     sp, 2 ;~ 17C5:4F51
cs=0x17c5;eip=0x004f54; 	X(PUSH(ax));	// 93568                  push    ax ;~ 17C5:4F54
cs=0x17c5;eip=0x004f55; 	T(ax = word_50b74;);	// 93569                  mov     ax, ds:word_50B74 ;~ 17C5:4F55
cs=0x17c5;eip=0x004f58; 	T(SUB(dx, dx));	// 93570                  sub     dx, dx ;~ 17C5:4F58
cs=0x17c5;eip=0x004f5a; 	T(cx = 0x0A;);	// 93571                  mov     cx, 0Ah ;~ 17C5:4F5A
cs=0x17c5;eip=0x004f5d; 	T(DIV2(cx));	// 93572                  div     cx ;~ 17C5:4F5D
cs=0x17c5;eip=0x004f5f; 	X(PUSH(ax));	// 93573                  push    ax ;~ 17C5:4F5F
cs=0x17c5;eip=0x004f60; 	J(CALL(sub_29d5f,0));	// 93574                  call    sub_29D5F ;~ 17C5:4F60
cs=0x17c5;eip=0x004f63; 	T(ADD(sp, 4));	// 93575                  add     sp, 4 ;~ 17C5:4F63
cs=0x17c5;eip=0x004f66; 	X(word_52ae6 = ax;);	// 93576                  mov     ds:word_52AE6, ax ;~ 17C5:4F66
cs=0x17c5;eip=0x004f69; 	T(CMP(word_49942, 0));	// 93577                  cmp     word_49942, 0 ;~ 17C5:4F69
cs=0x17c5;eip=0x004f6e; 	J(JNZ(loc_2b1ff));	// 93578                  jnz     short loc_2B1FF ;~ 17C5:4F6E
cs=0x17c5;eip=0x004f70; 	T(CWD);	// 93579                  cwd ;~ 17C5:4F70
cs=0x17c5;eip=0x004f71; 	T(cx = word_492f4;);	// 93580                  mov     cx, word_492F4 ;~ 17C5:4F71
cs=0x17c5;eip=0x004f75; 	T(IDIV2(cx));	// 93581                  idiv    cx ;~ 17C5:4F75
cs=0x17c5;eip=0x004f77; 	X(ADD(word_4e300, ax));	// 93582                  add     ds:word_4E300, ax ;~ 17C5:4F77
cs=0x17c5;eip=0x004f7b; 	X(PUSH(word_4e2f8));	// 93583                  push    ds:word_4E2F8 ;~ 17C5:4F7B
cs=0x17c5;eip=0x004f7f; 	J(CALL(sub_29dc6,0));	// 93584                  call    sub_29DC6 ;~ 17C5:4F7F
cs=0x17c5;eip=0x004f82; 	T(ADD(sp, 2));	// 93585                  add     sp, 2 ;~ 17C5:4F82
cs=0x17c5;eip=0x004f85; 	X(PUSH(ax));	// 93586                  push    ax ;~ 17C5:4F85
cs=0x17c5;eip=0x004f86; 	X(PUSH(*(dw*)(raddr(ss,bp-0x22))));	// 93587                  push    word ptr [bp-22h] ;~ 17C5:4F86
cs=0x17c5;eip=0x004f89; 	J(CALL(sub_29d5f,0));	// 93588                  call    sub_29D5F ;~ 17C5:4F89
cs=0x17c5;eip=0x004f8c; 	T(ADD(sp, 4));	// 93589                  add     sp, 4 ;~ 17C5:4F8C
cs=0x17c5;eip=0x004f8f; 	T(CWD);	// 93590                  cwd ;~ 17C5:4F8F
cs=0x17c5;eip=0x004f90; 	T(cx = 0x0A;);	// 93591                  mov     cx, 0Ah ;~ 17C5:4F90
cs=0x17c5;eip=0x004f93; 	T(IDIV2(cx));	// 93592                  idiv    cx ;~ 17C5:4F93
cs=0x17c5;eip=0x004f95; 	T(CWD);	// 93593                  cwd ;~ 17C5:4F95
cs=0x17c5;eip=0x004f96; 	T(cx = word_492f4;);	// 93594                  mov     cx, word_492F4 ;~ 17C5:4F96
cs=0x17c5;eip=0x004f9a; 	T(IDIV2(cx));	// 93595                  idiv    cx ;~ 17C5:4F9A
cs=0x17c5;eip=0x004f9c; 	T(CWD);	// 93596                  cwd ;~ 17C5:4F9C
cs=0x17c5;eip=0x004f9d; 	X(ADD(word_51a0a, ax));	// 93597                  add     ds:word_51A0A, ax ;~ 17C5:4F9D
cs=0x17c5;eip=0x004fa1; 	X(ADC(word_51a0c, dx));	// 93598                  adc     ds:word_51A0C, dx ;~ 17C5:4FA1
cs=0x17c5;eip=0x004fa5; 	X(PUSH(word_4e2f8));	// 93599                  push    ds:word_4E2F8 ;~ 17C5:4FA5
cs=0x17c5;eip=0x004fa9; 	J(CALL(sub_29db6,0));	// 93600                  call    sub_29DB6 ;~ 17C5:4FA9
cs=0x17c5;eip=0x004fac; 	T(ADD(sp, 2));	// 93601                  add     sp, 2 ;~ 17C5:4FAC
cs=0x17c5;eip=0x004faf; 	X(PUSH(ax));	// 93602                  push    ax ;~ 17C5:4FAF
cs=0x17c5;eip=0x004fb0; 	X(PUSH(*(dw*)(raddr(ss,bp-0x22))));	// 93603                  push    word ptr [bp-22h] ;~ 17C5:4FB0
cs=0x17c5;eip=0x004fb3; 	J(CALL(sub_29d5f,0));	// 93604                  call    sub_29D5F ;~ 17C5:4FB3
cs=0x17c5;eip=0x004fb6; 	T(ADD(sp, 4));	// 93605                  add     sp, 4 ;~ 17C5:4FB6
cs=0x17c5;eip=0x004fb9; 	T(CWD);	// 93606                  cwd ;~ 17C5:4FB9
cs=0x17c5;eip=0x004fba; 	T(cx = 0x0A;);	// 93607                  mov     cx, 0Ah ;~ 17C5:4FBA
cs=0x17c5;eip=0x004fbd; 	T(IDIV2(cx));	// 93608                  idiv    cx ;~ 17C5:4FBD
cs=0x17c5;eip=0x004fbf; 	T(CWD);	// 93609                  cwd ;~ 17C5:4FBF
cs=0x17c5;eip=0x004fc0; 	T(cx = word_492f4;);	// 93610                  mov     cx, word_492F4 ;~ 17C5:4FC0
cs=0x17c5;eip=0x004fc4; 	T(IDIV2(cx));	// 93611                  idiv    cx ;~ 17C5:4FC4
cs=0x17c5;eip=0x004fc6; 	T(CWD);	// 93612                  cwd ;~ 17C5:4FC6
cs=0x17c5;eip=0x004fc7; 	X(ADD(word_51a28, ax));	// 93613                  add     ds:word_51A28, ax ;~ 17C5:4FC7
cs=0x17c5;eip=0x004fcb; 	X(ADC(word_51a2a, dx));	// 93614                  adc     ds:word_51A2A, dx ;~ 17C5:4FCB
loc_2b1ff:
	// 5462 
cs=0x17c5;eip=0x004fcf; 	T(CMP(word_4e300, 0x0F230));	// 93617                  cmp     ds:word_4E300, 0F230h ;~ 17C5:4FCF
cs=0x17c5;eip=0x004fd5; 	J(JA(loc_2b210));	// 93618                  ja      short loc_2B210 ;~ 17C5:4FD5
cs=0x17c5;eip=0x004fd7; 	T(ax = word_4e300;);	// 93619                  mov     ax, ds:word_4E300 ;~ 17C5:4FD7
cs=0x17c5;eip=0x004fda; 	T(CMP(word_520ee, ax));	// 93620                  cmp     ds:word_520EE, ax ;~ 17C5:4FDA
cs=0x17c5;eip=0x004fde; 	J(JBE(loc_2b216));	// 93621                  jbe     short loc_2B216 ;~ 17C5:4FDE
loc_2b210:
	// 5463 
cs=0x17c5;eip=0x004fe0; 	T(ax = word_520ee;);	// 93624                  mov     ax, ds:word_520EE ;~ 17C5:4FE0
cs=0x17c5;eip=0x004fe3; 	X(word_4e300 = ax;);	// 93625                  mov     ds:word_4E300, ax ;~ 17C5:4FE3
loc_2b216:
	// 5464 
cs=0x17c5;eip=0x004fe6; 	T(CMP(word_4e300, 0x0EA60));	// 93628                  cmp     ds:word_4E300, 0EA60h ;~ 17C5:4FE6
cs=0x17c5;eip=0x004fec; 	J(JBE(loc_2b224));	// 93629                  jbe     short loc_2B224 ;~ 17C5:4FEC
cs=0x17c5;eip=0x004fee; 	X(word_4e300 = 0x0EA60;);	// 93630                  mov     ds:word_4E300, 0EA60h ;~ 17C5:4FEE
loc_2b224:
	// 5465 
cs=0x17c5;eip=0x004ff4; 	T(CMP(word_4e300, 0x2000));	// 93633                  cmp     ds:word_4E300, 2000h ;~ 17C5:4FF4
cs=0x17c5;eip=0x004ffa; 	J(JNC(loc_2b234));	// 93634                  jnb     short loc_2B234 ;~ 17C5:4FFA
cs=0x17c5;eip=0x004ffc; 	T(ax = word_4e300;);	// 93635                  mov     ax, ds:word_4E300 ;~ 17C5:4FFC
cs=0x17c5;eip=0x004fff; 	X(word_4e2fe = ax;);	// 93636                  mov     ds:word_4E2FE, ax ;~ 17C5:4FFF
cs=0x17c5;eip=0x005002; 	J(JMP(loc_2b25c));	// 93637                  jmp     short loc_2B25C ;~ 17C5:5002
loc_2b234:
	// 5466 
cs=0x17c5;eip=0x005004; 	T(CMP(word_4e300, 0x4000));	// 93641                  cmp     ds:word_4E300, 4000h ;~ 17C5:5004
cs=0x17c5;eip=0x00500a; 	J(JNC(loc_2b24c));	// 93642                  jnb     short loc_2B24C ;~ 17C5:500A
cs=0x17c5;eip=0x00500c; 	T(ax = word_4e300;);	// 93643                  mov     ax, ds:word_4E300 ;~ 17C5:500C
cs=0x17c5;eip=0x00500f; 	T(SUB(ax, 0x2000));	// 93644                  sub     ax, 2000h ;~ 17C5:500F
cs=0x17c5;eip=0x005012; 	T(SHR(ax, 1));	// 93645                  shr     ax, 1 ;~ 17C5:5012
cs=0x17c5;eip=0x005014; 	T(ADD(ah, 0x20));	// 93646                  add     ah, 20h ; ' ' ;~ 17C5:5014
cs=0x17c5;eip=0x005017; 	X(word_4e2fe = ax;);	// 93647                  mov     ds:word_4E2FE, ax ;~ 17C5:5017
cs=0x17c5;eip=0x00501a; 	J(JMP(loc_2b25c));	// 93648                  jmp     short loc_2B25C ;~ 17C5:501A
loc_2b24c:
	// 5467 
cs=0x17c5;eip=0x00501c; 	T(ax = word_4e300;);	// 93652                  mov     ax, ds:word_4E300 ;~ 17C5:501C
cs=0x17c5;eip=0x00501f; 	T(SUB(ax, 0x4000));	// 93653                  sub     ax, 4000h ;~ 17C5:501F
cs=0x17c5;eip=0x005022; 	T(SHR(ax, 1));	// 93654                  shr     ax, 1 ;~ 17C5:5022
cs=0x17c5;eip=0x005024; 	T(SHR(ax, 1));	// 93655                  shr     ax, 1 ;~ 17C5:5024
cs=0x17c5;eip=0x005026; 	T(ADD(ah, 0x30));	// 93656                  add     ah, 30h ; '0' ;~ 17C5:5026
cs=0x17c5;eip=0x005029; 	X(word_4e2fe = ax;);	// 93657                  mov     ds:word_4E2FE, ax ;~ 17C5:5029
loc_2b25c:
	// 5468 
cs=0x17c5;eip=0x00502c; 	T(ax = word_4e2fe;);	// 93661                  mov     ax, ds:word_4E2FE ;~ 17C5:502C
cs=0x17c5;eip=0x00502f; 	T(CMP(word_520ee, ax));	// 93662                  cmp     ds:word_520EE, ax ;~ 17C5:502F
cs=0x17c5;eip=0x005033; 	J(JZ(loc_2b268));	// 93663                  jz      short loc_2B268 ;~ 17C5:5033
cs=0x17c5;eip=0x005035; 	J(JMP(loc_2b30f));	// 93664                  jmp     loc_2B30F ;~ 17C5:5035
loc_2b268:
	// 5469 
cs=0x17c5;eip=0x005038; 	T(ax = word_520ee;);	// 93669                  mov     ax, ds:word_520EE ;~ 17C5:5038
cs=0x17c5;eip=0x00503b; 	T(CMP(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 93670                  cmp     [bp-0Ch], ax ;~ 17C5:503B
cs=0x17c5;eip=0x00503e; 	J(JG(loc_2b273));	// 93671                  jg      short loc_2B273 ;~ 17C5:503E
cs=0x17c5;eip=0x005040; 	J(JMP(loc_2b309));	// 93672                  jmp     loc_2B309 ;~ 17C5:5040
loc_2b273:
	// 5470 
cs=0x17c5;eip=0x005043; 	T(CMP(word_49932, 0));	// 93676                  cmp     word_49932, 0 ;~ 17C5:5043
cs=0x17c5;eip=0x005048; 	J(JNZ(loc_2b27d));	// 93677                  jnz     short loc_2B27D ;~ 17C5:5048
cs=0x17c5;eip=0x00504a; 	J(JMP(loc_2b309));	// 93678                  jmp     loc_2B309 ;~ 17C5:504A
loc_2b27d:
	// 5471 
cs=0x17c5;eip=0x00504d; 	T(ax = 2;);	// 93682                  mov     ax, 2 ;~ 17C5:504D
cs=0x17c5;eip=0x005050; 	X(PUSH(ax));	// 93683                  push    ax ;~ 17C5:5050
cs=0x17c5;eip=0x005051; 	T(ax = 0x0C;);	// 93684                  mov     ax, 0Ch ;~ 17C5:5051
cs=0x17c5;eip=0x005054; 	X(PUSH(ax));	// 93685                  push    ax ;~ 17C5:5054
cs=0x17c5;eip=0x005055; 	J(CALL(sub_33c65,0));	// 93686                  call    sub_33C65 ;~ 17C5:5055
cs=0x17c5;eip=0x005058; 	T(ADD(sp, 4));	// 93688                  add     sp, 4 ;~ 17C5:5058
cs=0x17c5;eip=0x00505b; 	T(bx = word_5239a;);	// 93689                  mov     bx, ds:word_5239A ;~ 17C5:505B
cs=0x17c5;eip=0x00505f; 	T(cl = 4;);	// 93690                  mov     cl, 4 ;~ 17C5:505F
cs=0x17c5;eip=0x005061; 	T(SHL(bx, cl));	// 93691                  shl     bx, cl ;~ 17C5:5061
cs=0x17c5;eip=0x005063; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 93692                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:5063
cs=0x17c5;eip=0x005069; 	J(JZ(loc_2b2a0));	// 93693                  jz      short loc_2B2A0 ;~ 17C5:5069
cs=0x17c5;eip=0x00506b; 	T(ax = 0x100;);	// 93694                  mov     ax, 100h ;~ 17C5:506B
cs=0x17c5;eip=0x00506e; 	J(JMP(loc_2b2a3));	// 93695                  jmp     short loc_2B2A3 ;~ 17C5:506E
loc_2b2a0:
	// 5472 
cs=0x17c5;eip=0x005070; 	T(ax = 0x80;);	// 93699                  mov     ax, 80h ;~ 17C5:5070
loc_2b2a3:
	// 5473 
cs=0x17c5;eip=0x005073; 	T(cx = ax;);	// 93702                  mov     cx, ax ;~ 17C5:5073
cs=0x17c5;eip=0x005075; 	T(ax = word_52ae6;);	// 93703                  mov     ax, ds:word_52AE6 ;~ 17C5:5075
cs=0x17c5;eip=0x005078; 	T(NEG(ax));	// 93704                  neg     ax ;~ 17C5:5078
cs=0x17c5;eip=0x00507a; 	X(IMUL1_2(word_492e8));	// 93705                  imul    word_492E8 ;~ 17C5:507A
cs=0x17c5;eip=0x00507e; 	T(CWD);	// 93706                  cwd ;~ 17C5:507E
cs=0x17c5;eip=0x00507f; 	T(SUB(ax, dx));	// 93707                  sub     ax, dx ;~ 17C5:507F
cs=0x17c5;eip=0x005081; 	T(SAR(ax, 1));	// 93708                  sar     ax, 1 ;~ 17C5:5081
cs=0x17c5;eip=0x005083; 	T(CMP(cx, ax));	// 93709                  cmp     cx, ax ;~ 17C5:5083
cs=0x17c5;eip=0x005085; 	J(JL(loc_2b2e8));	// 93710                  jl      short loc_2B2E8 ;~ 17C5:5085
cs=0x17c5;eip=0x005087; 	T(LES(bx, dword_4f220));	// 93711                  les     bx, ds:dword_4F220 ;~ 17C5:5087
cs=0x17c5;eip=0x00508b; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 0));	// 93713                  cmp     word ptr es:[bx+40h], 0 ;~ 17C5:508B
cs=0x17c5;eip=0x005090; 	J(JZ(loc_2b309));	// 93714                  jz      short loc_2B309 ;~ 17C5:5090
cs=0x17c5;eip=0x005092; 	T(TEST(*(db*)(&word_4f42e), 1));	// 93715                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:5092
cs=0x17c5;eip=0x005097; 	J(JNZ(loc_2b2e8));	// 93716                  jnz     short loc_2B2E8 ;~ 17C5:5097
cs=0x17c5;eip=0x005099; 	X(PUSH(word_4e2fc));	// 93717                  push    ds:word_4E2FC ;~ 17C5:5099
cs=0x17c5;eip=0x00509d; 	J(CALL(sub_34dc0,0));	// 93718                  call    sub_34DC0 ;~ 17C5:509D
cs=0x17c5;eip=0x0050a0; 	T(ADD(sp, 2));	// 93719                  add     sp, 2 ;~ 17C5:50A0
cs=0x17c5;eip=0x0050a3; 	T(cx = ax;);	// 93720                  mov     cx, ax ;~ 17C5:50A3
cs=0x17c5;eip=0x0050a5; 	T(ax = 0x30;);	// 93721                  mov     ax, 30h ; '0' ;~ 17C5:50A5
cs=0x17c5;eip=0x0050a8; 	T(CWD);	// 93722                  cwd ;~ 17C5:50A8
cs=0x17c5;eip=0x0050a9; 	T(bx = word_492e8;);	// 93723                  mov     bx, word_492E8 ;~ 17C5:50A9
cs=0x17c5;eip=0x0050ad; 	T(INC(bx));	// 93724                  inc     bx ;~ 17C5:50AD
cs=0x17c5;eip=0x0050ae; 	T(IDIV2(bx));	// 93725                  idiv    bx ;~ 17C5:50AE
cs=0x17c5;eip=0x0050b0; 	T(dh = al;);	// 93726                  mov     dh, al ;~ 17C5:50B0
cs=0x17c5;eip=0x0050b2; 	T(SUB(dl, dl));	// 93727                  sub     dl, dl ;~ 17C5:50B2
cs=0x17c5;eip=0x0050b4; 	T(CMP(dx, cx));	// 93728                  cmp     dx, cx ;~ 17C5:50B4
cs=0x17c5;eip=0x0050b6; 	J(JGE(loc_2b309));	// 93729                  jge     short loc_2B309 ;~ 17C5:50B6
loc_2b2e8:
	// 5474 
cs=0x17c5;eip=0x0050b8; 	T(ax = 2;);	// 93733                  mov     ax, 2 ;~ 17C5:50B8
cs=0x17c5;eip=0x0050bb; 	X(PUSH(ax));	// 93734                  push    ax ;~ 17C5:50BB
cs=0x17c5;eip=0x0050bc; 	T(SUB(ax, ax));	// 93735                  sub     ax, ax ;~ 17C5:50BC
cs=0x17c5;eip=0x0050be; 	X(PUSH(ax));	// 93736                  push    ax ;~ 17C5:50BE
cs=0x17c5;eip=0x0050bf; 	J(CALL(sub_33c65,0));	// 93737                  call    sub_33C65 ;~ 17C5:50BF
cs=0x17c5;eip=0x0050c2; 	T(ADD(sp, 4));	// 93739                  add     sp, 4 ;~ 17C5:50C2
cs=0x17c5;eip=0x0050c5; 	T(ax = 0x3C;);	// 93740                  mov     ax, 3Ch ; '<' ;~ 17C5:50C5
cs=0x17c5;eip=0x0050c8; 	X(PUSH(ax));	// 93741                  push    ax ;~ 17C5:50C8
cs=0x17c5;eip=0x0050c9; 	J(CALL(sub_284a8,0));	// 93742                  call    sub_284A8 ;~ 17C5:50C9
cs=0x17c5;eip=0x0050cc; 	T(ADD(sp, 2));	// 93743                  add     sp, 2 ;~ 17C5:50CC
cs=0x17c5;eip=0x0050cf; 	T(ax = 5;);	// 93744                  mov     ax, 5 ;~ 17C5:50CF
cs=0x17c5;eip=0x0050d2; 	X(PUSH(ax));	// 93745                  push    ax ;~ 17C5:50D2
cs=0x17c5;eip=0x0050d3; 	J(CALL(sub_27d67,0));	// 93746                  call    sub_27D67 ;~ 17C5:50D3
cs=0x17c5;eip=0x0050d6; 	T(ADD(sp, 2));	// 93747                  add     sp, 2 ;~ 17C5:50D6
loc_2b309:
	// 5475 
cs=0x17c5;eip=0x0050d9; 	X(word_52ae6 = 0;);	// 93751                  mov     ds:word_52AE6, 0 ;~ 17C5:50D9
loc_2b30f:
	// 5476 
cs=0x17c5;eip=0x0050df; 	T(ax = word_49918;);	// 93754                  mov     ax, word_49918 ;~ 17C5:50DF
cs=0x17c5;eip=0x0050e2; 	T(AND(ax, 0x0F));	// 93755                  and     ax, 0Fh ;~ 17C5:50E2
cs=0x17c5;eip=0x0050e5; 	X(MOV(*(dw*)(raddr(ss,bp-0x38)), ax));	// 93756                  mov     [bp-38h], ax ;~ 17C5:50E5
cs=0x17c5;eip=0x0050e8; 	T(si = ax;);	// 93757                  mov     si, ax ;~ 17C5:50E8
cs=0x17c5;eip=0x0050ea; 	T(cl = 4;);	// 93758                  mov     cl, 4 ;~ 17C5:50EA
cs=0x17c5;eip=0x0050ec; 	T(SHL(si, cl));	// 93759                  shl     si, cl ;~ 17C5:50EC
cs=0x17c5;eip=0x0050ee; 	T(ax = word_4e2f8;);	// 93760                  mov     ax, ds:word_4E2F8 ;~ 17C5:50EE
cs=0x17c5;eip=0x0050f1; 	X(MOV(*(dw*)(raddr(ds,si-0x7F4C)), ax));	// 93761                  mov     [si-7F4Ch], ax ;~ 17C5:50F1
cs=0x17c5;eip=0x0050f5; 	T(ax = word_4e2fa;);	// 93762                  mov     ax, ds:word_4E2FA ;~ 17C5:50F5
cs=0x17c5;eip=0x0050f8; 	X(MOV(*(dw*)(raddr(ds,si-0x7F4A)), ax));	// 93763                  mov     [si-7F4Ah], ax ;~ 17C5:50F8
cs=0x17c5;eip=0x0050fc; 	T(ax = word_4e2fc;);	// 93764                  mov     ax, ds:word_4E2FC ;~ 17C5:50FC
cs=0x17c5;eip=0x0050ff; 	X(MOV(*(dw*)(raddr(ds,si-0x7F48)), ax));	// 93765                  mov     [si-7F48h], ax ;~ 17C5:50FF
cs=0x17c5;eip=0x005103; 	T(ax = word_51a0a;);	// 93766                  mov     ax, ds:word_51A0A ;~ 17C5:5103
cs=0x17c5;eip=0x005106; 	T(dx = word_51a0c;);	// 93767                  mov     dx, ds:word_51A0C ;~ 17C5:5106
cs=0x17c5;eip=0x00510a; 	X(MOV(*(dw*)(raddr(ds,si-0x7F56)), ax));	// 93768                  mov     [si-7F56h], ax ;~ 17C5:510A
cs=0x17c5;eip=0x00510e; 	X(MOV(*(dw*)(raddr(ds,si-0x7F54)), dx));	// 93769                  mov     [si-7F54h], dx ;~ 17C5:510E
cs=0x17c5;eip=0x005112; 	T(ax = word_51a28;);	// 93770                  mov     ax, ds:word_51A28 ;~ 17C5:5112
cs=0x17c5;eip=0x005115; 	T(dx = word_51a2a;);	// 93771                  mov     dx, ds:word_51A2A ;~ 17C5:5115
cs=0x17c5;eip=0x005119; 	X(MOV(*(dw*)(raddr(ds,si-0x7F52)), ax));	// 93772                  mov     [si-7F52h], ax ;~ 17C5:5119
cs=0x17c5;eip=0x00511d; 	X(MOV(*(dw*)(raddr(ds,si-0x7F50)), dx));	// 93773                  mov     [si-7F50h], dx ;~ 17C5:511D
cs=0x17c5;eip=0x005121; 	T(ax = word_4e2fe;);	// 93774                  mov     ax, ds:word_4E2FE ;~ 17C5:5121
cs=0x17c5;eip=0x005124; 	X(MOV(*(dw*)(raddr(ds,si-0x7F4E)), ax));	// 93775                  mov     [si-7F4Eh], ax ;~ 17C5:5124
cs=0x17c5;eip=0x005128; 	T(CMP(word_5268c, 1));	// 93776                  cmp     ds:word_5268C, 1 ;~ 17C5:5128
cs=0x17c5;eip=0x00512d; 	J(JZ(loc_2b362));	// 93777                  jz      short loc_2B362 ;~ 17C5:512D
cs=0x17c5;eip=0x00512f; 	J(JMP(loc_2b423));	// 93779                  jmp     loc_2B423 ;~ 17C5:512F
loc_2b362:
	// 5477 
cs=0x17c5;eip=0x005132; 	T(CMP(word_49922, 0));	// 93784                  cmp     word_49922, 0 ;~ 17C5:5132
cs=0x17c5;eip=0x005137; 	J(JL(loc_2b3a3));	// 93785                  jl      short loc_2B3A3 ;~ 17C5:5137
cs=0x17c5;eip=0x005139; 	T(ax = 0x24;);	// 93786                  mov     ax, 24h ; '$' ;~ 17C5:5139
cs=0x17c5;eip=0x00513c; 	X(IMUL1_2(word_49922));	// 93787                  imul    word_49922 ;~ 17C5:513C
cs=0x17c5;eip=0x005140; 	T(si = ax;);	// 93788                  mov     si, ax ;~ 17C5:5140
cs=0x17c5;eip=0x005142; 	T(ax = 0x0C;);	// 93789                  mov     ax, 0Ch ;~ 17C5:5142
cs=0x17c5;eip=0x005145; 	X(PUSH(ax));	// 93790                  push    ax ;~ 17C5:5145
cs=0x17c5;eip=0x005146; 	T(SUB(ax, ax));	// 93791                  sub     ax, ax ;~ 17C5:5146
cs=0x17c5;eip=0x005148; 	X(PUSH(ax));	// 93792                  push    ax ;~ 17C5:5148
cs=0x17c5;eip=0x005149; 	T(ax = word_52100;);	// 93793                  mov     ax, ds:word_52100 ;~ 17C5:5149
cs=0x17c5;eip=0x00514c; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 93794                  sub     ax, [si-76AAh] ;~ 17C5:514C
cs=0x17c5;eip=0x005150; 	X(PUSH(ax));	// 93795                  push    ax ;~ 17C5:5150
cs=0x17c5;eip=0x005151; 	T(ax = word_520f0;);	// 93796                  mov     ax, ds:word_520F0 ;~ 17C5:5151
cs=0x17c5;eip=0x005154; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 93797                  sub     ax, [si-76ACh] ;~ 17C5:5154
cs=0x17c5;eip=0x005158; 	X(PUSH(ax));	// 93798                  push    ax ;~ 17C5:5158
cs=0x17c5;eip=0x005159; 	J(CALL(sub_331d6,0));	// 93799                  call    sub_331D6 ;~ 17C5:5159
cs=0x17c5;eip=0x00515c; 	T(ADD(sp, 4));	// 93800                  add     sp, 4 ;~ 17C5:515C
cs=0x17c5;eip=0x00515f; 	X(IMUL1_2(word_492f4));	// 93801                  imul    word_492F4 ;~ 17C5:515F
cs=0x17c5;eip=0x005163; 	T(cl = 8;);	// 93802                  mov     cl, 8 ;~ 17C5:5163
cs=0x17c5;eip=0x005165; 	T(SAR(ax, cl));	// 93803                  sar     ax, cl ;~ 17C5:5165
cs=0x17c5;eip=0x005167; 	X(PUSH(ax));	// 93804                  push    ax ;~ 17C5:5167
cs=0x17c5;eip=0x005168; 	J(CALL(sub_33194,0));	// 93805                  call    sub_33194 ;~ 17C5:5168
cs=0x17c5;eip=0x00516b; 	T(ADD(sp, 6));	// 93806                  add     sp, 6 ;~ 17C5:516B
cs=0x17c5;eip=0x00516e; 	X(MOV(*(dw*)(raddr(ss,bp-0x38)), ax));	// 93807                  mov     [bp-38h], ax ;~ 17C5:516E
cs=0x17c5;eip=0x005171; 	J(JMP(loc_2b3aa));	// 93808                  jmp     short loc_2B3AA ;~ 17C5:5171
loc_2b3a3:
	// 5478 
cs=0x17c5;eip=0x005173; 	T(ax = word_492f4;);	// 93812                  mov     ax, word_492F4 ;~ 17C5:5173
cs=0x17c5;eip=0x005176; 	T(DEC(ax));	// 93813                  dec     ax ;~ 17C5:5176
cs=0x17c5;eip=0x005177; 	X(MOV(*(dw*)(raddr(ss,bp-0x38)), ax));	// 93814                  mov     [bp-38h], ax ;~ 17C5:5177
loc_2b3aa:
	// 5479 
cs=0x17c5;eip=0x00517a; 	T(ax = word_49918;);	// 93817                  mov     ax, word_49918 ;~ 17C5:517A
cs=0x17c5;eip=0x00517d; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x38))));	// 93818                  sub     ax, [bp-38h] ;~ 17C5:517D
cs=0x17c5;eip=0x005180; 	T(AND(ax, 0x0F));	// 93819                  and     ax, 0Fh ;~ 17C5:5180
cs=0x17c5;eip=0x005183; 	X(MOV(*(dw*)(raddr(ss,bp-0x38)), ax));	// 93820                  mov     [bp-38h], ax ;~ 17C5:5183
cs=0x17c5;eip=0x005186; 	T(si = ax;);	// 93821                  mov     si, ax ;~ 17C5:5186
cs=0x17c5;eip=0x005188; 	T(cl = 4;);	// 93822                  mov     cl, 4 ;~ 17C5:5188
cs=0x17c5;eip=0x00518a; 	T(SHL(si, cl));	// 93823                  shl     si, cl ;~ 17C5:518A
cs=0x17c5;eip=0x00518c; 	T(ax = word_4e2f8;);	// 93824                  mov     ax, ds:word_4E2F8 ;~ 17C5:518C
cs=0x17c5;eip=0x00518f; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7F4C))));	// 93825                  sub     ax, [si-7F4Ch] ;~ 17C5:518F
cs=0x17c5;eip=0x005193; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), ax));	// 93826                  mov     [bp-2Ch], ax ;~ 17C5:5193
cs=0x17c5;eip=0x005196; 	T(ax = word_4e2fa;);	// 93827                  mov     ax, ds:word_4E2FA ;~ 17C5:5196
cs=0x17c5;eip=0x005199; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7F4A))));	// 93828                  sub     ax, [si-7F4Ah] ;~ 17C5:5199
cs=0x17c5;eip=0x00519d; 	X(MOV(*(dw*)(raddr(ss,bp-0x14)), ax));	// 93829                  mov     [bp-14h], ax ;~ 17C5:519D
cs=0x17c5;eip=0x0051a0; 	T(SAR(ax, 1));	// 93830                  sar     ax, 1 ;~ 17C5:51A0
cs=0x17c5;eip=0x0051a2; 	T(SAR(ax, 1));	// 93831                  sar     ax, 1 ;~ 17C5:51A2
cs=0x17c5;eip=0x0051a4; 	X(PUSH(ax));	// 93832                  push    ax ;~ 17C5:51A4
cs=0x17c5;eip=0x0051a5; 	X(PUSH(word_4e2fc));	// 93833                  push    ds:word_4E2FC ;~ 17C5:51A5
cs=0x17c5;eip=0x0051a9; 	J(CALL(sub_333a8,0));	// 93834                  call    sub_333A8 ;~ 17C5:51A9
cs=0x17c5;eip=0x0051ac; 	T(ADD(sp, 4));	// 93835                  add     sp, 4 ;~ 17C5:51AC
cs=0x17c5;eip=0x0051af; 	T(MOV(cx, *(dw*)(raddr(ss,bp-0x2C))));	// 93836                  mov     cx, [bp-2Ch] ;~ 17C5:51AF
cs=0x17c5;eip=0x0051b2; 	T(NEG(cx));	// 93837                  neg     cx ;~ 17C5:51B2
cs=0x17c5;eip=0x0051b4; 	T(SAR(cx, 1));	// 93838                  sar     cx, 1 ;~ 17C5:51B4
cs=0x17c5;eip=0x0051b6; 	T(SAR(cx, 1));	// 93839                  sar     cx, 1 ;~ 17C5:51B6
cs=0x17c5;eip=0x0051b8; 	X(PUSH(cx));	// 93840                  push    cx ;~ 17C5:51B8
cs=0x17c5;eip=0x0051b9; 	X(PUSH(word_4e2fc));	// 93841                  push    ds:word_4E2FC ;~ 17C5:51B9
cs=0x17c5;eip=0x0051bd; 	T(di = ax;);	// 93842                  mov     di, ax ;~ 17C5:51BD
cs=0x17c5;eip=0x0051bf; 	J(CALL(sub_333c0,0));	// 93843                  call    sub_333C0 ;~ 17C5:51BF
cs=0x17c5;eip=0x0051c2; 	T(ADD(sp, 4));	// 93844                  add     sp, 4 ;~ 17C5:51C2
cs=0x17c5;eip=0x0051c5; 	T(ADD(ax, di));	// 93845                  add     ax, di ;~ 17C5:51C5
cs=0x17c5;eip=0x0051c7; 	X(word_528d4 = ax;);	// 93846                  mov     ds:word_528D4, ax ;~ 17C5:51C7
cs=0x17c5;eip=0x0051ca; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x14))));	// 93847                  mov     ax, [bp-14h] ;~ 17C5:51CA
cs=0x17c5;eip=0x0051cd; 	T(SAR(ax, 1));	// 93848                  sar     ax, 1 ;~ 17C5:51CD
cs=0x17c5;eip=0x0051cf; 	X(PUSH(ax));	// 93849                  push    ax ;~ 17C5:51CF
cs=0x17c5;eip=0x0051d0; 	X(PUSH(word_4e2fc));	// 93850                  push    ds:word_4E2FC ;~ 17C5:51D0
cs=0x17c5;eip=0x0051d4; 	J(CALL(sub_333c0,0));	// 93851                  call    sub_333C0 ;~ 17C5:51D4
cs=0x17c5;eip=0x0051d7; 	T(ADD(sp, 4));	// 93852                  add     sp, 4 ;~ 17C5:51D7
cs=0x17c5;eip=0x0051da; 	T(MOV(cx, *(dw*)(raddr(ss,bp-0x2C))));	// 93853                  mov     cx, [bp-2Ch] ;~ 17C5:51DA
cs=0x17c5;eip=0x0051dd; 	T(SAR(cx, 1));	// 93854                  sar     cx, 1 ;~ 17C5:51DD
cs=0x17c5;eip=0x0051df; 	T(SAR(cx, 1));	// 93855                  sar     cx, 1 ;~ 17C5:51DF
cs=0x17c5;eip=0x0051e1; 	X(PUSH(cx));	// 93856                  push    cx ;~ 17C5:51E1
cs=0x17c5;eip=0x0051e2; 	X(PUSH(word_4e2fc));	// 93857                  push    ds:word_4E2FC ;~ 17C5:51E2
cs=0x17c5;eip=0x0051e6; 	T(di = ax;);	// 93858                  mov     di, ax ;~ 17C5:51E6
cs=0x17c5;eip=0x0051e8; 	J(CALL(sub_333a8,0));	// 93859                  call    sub_333A8 ;~ 17C5:51E8
cs=0x17c5;eip=0x0051eb; 	T(ADD(sp, 4));	// 93860                  add     sp, 4 ;~ 17C5:51EB
cs=0x17c5;eip=0x0051ee; 	T(ADD(ax, di));	// 93861                  add     ax, di ;~ 17C5:51EE
cs=0x17c5;eip=0x0051f0; 	X(word_528dc = ax;);	// 93862                  mov     ds:word_528DC, ax ;~ 17C5:51F0
loc_2b423:
	// 5480 
cs=0x17c5;eip=0x0051f3; 	X(POP(si));	// 93865                  pop     si ;~ 17C5:51F3
cs=0x17c5;eip=0x0051f4; 	X(POP(di));	// 93866                  pop     di ;~ 17C5:51F4
cs=0x17c5;eip=0x0051f5; 	T(sp = bp;);	// 93867                  mov     sp, bp ;~ 17C5:51F5
cs=0x17c5;eip=0x0051f7; 	X(POP(bp));	// 93868                  pop     bp ;~ 17C5:51F7
cs=0x17c5;eip=0x0051f8; 	J(RETN(0));	// 93869                  retn ;~ 17C5:51F8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::k__unk_2b09d: 	goto __unk_2b09d;
        case m2c::kloc_2a1e2: 	goto loc_2a1e2;
        case m2c::kloc_2a1e5: 	goto loc_2a1e5;
        case m2c::kloc_2a1ea: 	goto loc_2a1ea;
        case m2c::kloc_2a1f5: 	goto loc_2a1f5;
        case m2c::kloc_2a200: 	goto loc_2a200;
        case m2c::kloc_2a203: 	goto loc_2a203;
        case m2c::kloc_2a206: 	goto loc_2a206;
        case m2c::kloc_2a21b: 	goto loc_2a21b;
        case m2c::kloc_2a227: 	goto loc_2a227;
        case m2c::kloc_2a252: 	goto loc_2a252;
        case m2c::kloc_2a264: 	goto loc_2a264;
        case m2c::kloc_2a26a: 	goto loc_2a26a;
        case m2c::kloc_2a287: 	goto loc_2a287;
        case m2c::kloc_2a29a: 	goto loc_2a29a;
        case m2c::kloc_2a29d: 	goto loc_2a29d;
        case m2c::kloc_2a2b6: 	goto loc_2a2b6;
        case m2c::kloc_2a2c7: 	goto loc_2a2c7;
        case m2c::kloc_2a2d7: 	goto loc_2a2d7;
        case m2c::kloc_2a2f0: 	goto loc_2a2f0;
        case m2c::kloc_2a2f5: 	goto loc_2a2f5;
        case m2c::kloc_2a31e: 	goto loc_2a31e;
        case m2c::kloc_2a321: 	goto loc_2a321;
        case m2c::kloc_2a333: 	goto loc_2a333;
        case m2c::kloc_2a336: 	goto loc_2a336;
        case m2c::kloc_2a348: 	goto loc_2a348;
        case m2c::kloc_2a379: 	goto loc_2a379;
        case m2c::kloc_2a412: 	goto loc_2a412;
        case m2c::kloc_2a414: 	goto loc_2a414;
        case m2c::kloc_2a41b: 	goto loc_2a41b;
        case m2c::kloc_2a423: 	goto loc_2a423;
        case m2c::kloc_2a42d: 	goto loc_2a42d;
        case m2c::kloc_2a435: 	goto loc_2a435;
        case m2c::kloc_2a43d: 	goto loc_2a43d;
        case m2c::kloc_2a445: 	goto loc_2a445;
        case m2c::kloc_2a447: 	goto loc_2a447;
        case m2c::kloc_2a454: 	goto loc_2a454;
        case m2c::kloc_2a45c: 	goto loc_2a45c;
        case m2c::kloc_2a464: 	goto loc_2a464;
        case m2c::kloc_2a46c: 	goto loc_2a46c;
        case m2c::kloc_2a46e: 	goto loc_2a46e;
        case m2c::kloc_2a479: 	goto loc_2a479;
        case m2c::kloc_2a495: 	goto loc_2a495;
        case m2c::kloc_2a4a8: 	goto loc_2a4a8;
        case m2c::kloc_2a4ba: 	goto loc_2a4ba;
        case m2c::kloc_2a4e6: 	goto loc_2a4e6;
        case m2c::kloc_2a4fd: 	goto loc_2a4fd;
        case m2c::kloc_2a514: 	goto loc_2a514;
        case m2c::kloc_2a543: 	goto loc_2a543;
        case m2c::kloc_2a560: 	goto loc_2a560;
        case m2c::kloc_2a599: 	goto loc_2a599;
        case m2c::kloc_2a5bf: 	goto loc_2a5bf;
        case m2c::kloc_2a5cd: 	goto loc_2a5cd;
        case m2c::kloc_2a5d3: 	goto loc_2a5d3;
        case m2c::kloc_2a5dd: 	goto loc_2a5dd;
        case m2c::kloc_2a5f5: 	goto loc_2a5f5;
        case m2c::kloc_2a5f7: 	goto loc_2a5f7;
        case m2c::kloc_2a680: 	goto loc_2a680;
        case m2c::kloc_2a6bc: 	goto loc_2a6bc;
        case m2c::kloc_2a6d0: 	goto loc_2a6d0;
        case m2c::kloc_2a6d3: 	goto loc_2a6d3;
        case m2c::kloc_2a70c: 	goto loc_2a70c;
        case m2c::kloc_2a755: 	goto loc_2a755;
        case m2c::kloc_2a768: 	goto loc_2a768;
        case m2c::kloc_2a782: 	goto loc_2a782;
        case m2c::kloc_2a796: 	goto loc_2a796;
        case m2c::kloc_2a799: 	goto loc_2a799;
        case m2c::kloc_2a7fc: 	goto loc_2a7fc;
        case m2c::kloc_2a824: 	goto loc_2a824;
        case m2c::kloc_2a87f: 	goto loc_2a87f;
        case m2c::kloc_2a934: 	goto loc_2a934;
        case m2c::kloc_2a954: 	goto loc_2a954;
        case m2c::kloc_2a974: 	goto loc_2a974;
        case m2c::kloc_2a97e: 	goto loc_2a97e;
        case m2c::kloc_2a983: 	goto loc_2a983;
        case m2c::kloc_2a988: 	goto loc_2a988;
        case m2c::kloc_2a9aa: 	goto loc_2a9aa;
        case m2c::kloc_2a9e3: 	goto loc_2a9e3;
        case m2c::kloc_2aa4b: 	goto loc_2aa4b;
        case m2c::kloc_2aa55: 	goto loc_2aa55;
        case m2c::kloc_2aa6f: 	goto loc_2aa6f;
        case m2c::kloc_2aa72: 	goto loc_2aa72;
        case m2c::kloc_2aab6: 	goto loc_2aab6;
        case m2c::kloc_2ab01: 	goto loc_2ab01;
        case m2c::kloc_2ab88: 	goto loc_2ab88;
        case m2c::kloc_2abb1: 	goto loc_2abb1;
        case m2c::kloc_2abb4: 	goto loc_2abb4;
        case m2c::kloc_2abe1: 	goto loc_2abe1;
        case m2c::kloc_2abf0: 	goto loc_2abf0;
        case m2c::kloc_2ac24: 	goto loc_2ac24;
        case m2c::kloc_2ac37: 	goto loc_2ac37;
        case m2c::kloc_2ac68: 	goto loc_2ac68;
        case m2c::kloc_2aca5: 	goto loc_2aca5;
        case m2c::kloc_2ad65: 	goto loc_2ad65;
        case m2c::kloc_2ad6f: 	goto loc_2ad6f;
        case m2c::kloc_2ad8b: 	goto loc_2ad8b;
        case m2c::kloc_2ad95: 	goto loc_2ad95;
        case m2c::kloc_2add3: 	goto loc_2add3;
        case m2c::kloc_2addd: 	goto loc_2addd;
        case m2c::kloc_2adfc: 	goto loc_2adfc;
        case m2c::kloc_2ae06: 	goto loc_2ae06;
        case m2c::kloc_2ae24: 	goto loc_2ae24;
        case m2c::kloc_2aea0: 	goto loc_2aea0;
        case m2c::kloc_2aefd: 	goto loc_2aefd;
        case m2c::kloc_2aeff: 	goto loc_2aeff;
        case m2c::kloc_2af10: 	goto loc_2af10;
        case m2c::kloc_2af1e: 	goto loc_2af1e;
        case m2c::kloc_2af6b: 	goto loc_2af6b;
        case m2c::kloc_2af75: 	goto loc_2af75;
        case m2c::kloc_2afb5: 	goto loc_2afb5;
        case m2c::kloc_2afce: 	goto loc_2afce;
        case m2c::kloc_2afda: 	goto loc_2afda;
        case m2c::kloc_2afe4: 	goto loc_2afe4;
        case m2c::kloc_2b01c: 	goto loc_2b01c;
        case m2c::kloc_2b05d: 	goto loc_2b05d;
        case m2c::kloc_2b09a: 	goto loc_2b09a;
        case m2c::kloc_2b0c1: 	goto loc_2b0c1;
        case m2c::kloc_2b0c5: 	goto loc_2b0c5;
        case m2c::kloc_2b0c7: 	goto loc_2b0c7;
        case m2c::kloc_2b0e8: 	goto loc_2b0e8;
        case m2c::kloc_2b0f6: 	goto loc_2b0f6;
        case m2c::kloc_2b111: 	goto loc_2b111;
        case m2c::kloc_2b123: 	goto loc_2b123;
        case m2c::kloc_2b130: 	goto loc_2b130;
        case m2c::kloc_2b135: 	goto loc_2b135;
        case m2c::kloc_2b161: 	goto loc_2b161;
        case m2c::kloc_2b163: 	goto loc_2b163;
        case m2c::kloc_2b170: 	goto loc_2b170;
        case m2c::kloc_2b1ff: 	goto loc_2b1ff;
        case m2c::kloc_2b210: 	goto loc_2b210;
        case m2c::kloc_2b216: 	goto loc_2b216;
        case m2c::kloc_2b224: 	goto loc_2b224;
        case m2c::kloc_2b234: 	goto loc_2b234;
        case m2c::kloc_2b24c: 	goto loc_2b24c;
        case m2c::kloc_2b25c: 	goto loc_2b25c;
        case m2c::kloc_2b268: 	goto loc_2b268;
        case m2c::kloc_2b273: 	goto loc_2b273;
        case m2c::kloc_2b27d: 	goto loc_2b27d;
        case m2c::kloc_2b2a0: 	goto loc_2b2a0;
        case m2c::kloc_2b2a3: 	goto loc_2b2a3;
        case m2c::kloc_2b2e8: 	goto loc_2b2e8;
        case m2c::kloc_2b309: 	goto loc_2b309;
        case m2c::kloc_2b30f: 	goto loc_2b30f;
        case m2c::kloc_2b362: 	goto loc_2b362;
        case m2c::kloc_2b3a3: 	goto loc_2b3a3;
        case m2c::kloc_2b3aa: 	goto loc_2b3aa;
        case m2c::kloc_2b423: 	goto loc_2b423;
        case m2c::kret_17c5_41e9: 	goto ret_17c5_41e9;
        case m2c::kseg2623_4d16_proc: 	goto seg2623_4d16_proc;
        case m2c::ksub_2a1a2: 	goto sub_2a1a2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b429(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b429:
    _begin:
#undef arg_0
#define arg_0 4
	// 93878 arg_0           = word ptr  4 ;~ 17C5:51F9
#undef arg_2
#define arg_2 6
	// 93879 arg_2           = word ptr  6 ;~ 17C5:51F9
cs=0x17c5;eip=0x0051f9; 	X(PUSH(bp));	// 93881                  push    bp ;~ 17C5:51F9
cs=0x17c5;eip=0x0051fa; 	T(bp = sp;);	// 93882                  mov     bp, sp ;~ 17C5:51FA
cs=0x17c5;eip=0x0051fc; 	T(SUB(sp, 4));	// 93883                  sub     sp, 4 ;~ 17C5:51FC
cs=0x17c5;eip=0x0051ff; 	X(INC(word_4e308));	// 93884                  inc     ds:word_4E308 ;~ 17C5:51FF
cs=0x17c5;eip=0x005203; 	T(TEST(*(db*)(&word_4e308), 7));	// 93885                  test    byte ptr ds:word_4E308, 7 ;~ 17C5:5203
cs=0x17c5;eip=0x005208; 	J(JNZ(loc_2b43f));	// 93886                  jnz     short loc_2B43F ;~ 17C5:5208
cs=0x17c5;eip=0x00520a; 	X(byte_4e30d = 1;);	// 93887                  mov     ds:byte_4E30D, 1 ;~ 17C5:520A
loc_2b43f:
	// 5481 
cs=0x17c5;eip=0x00520f; 	T(ax = 0x5806;);	// 93890                  mov     ax, 5806h ;~ 17C5:520F
cs=0x17c5;eip=0x005212; 	X(PUSH(ax));	// 93891                  push    ax ;~ 17C5:5212
cs=0x17c5;eip=0x005213; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 93892                  push    [bp+arg_2] ;~ 17C5:5213
cs=0x17c5;eip=0x005216; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 93893                  push    [bp+arg_0] ;~ 17C5:5216
cs=0x17c5;eip=0x005219; 	J(CALLF(sub_37068,0));	// 93894                  call    sub_37068 ;~ 17C5:5219
cs=0x17c5;eip=0x00521e; 	T(ADD(sp, 6));	// 93895                  add     sp, 6 ;~ 17C5:521E
cs=0x17c5;eip=0x005221; 	T(ax = 0x12;);	// 93896                  mov     ax, 12h ;~ 17C5:5221
cs=0x17c5;eip=0x005224; 	X(PUSH(ax));	// 93897                  push    ax ;~ 17C5:5224
cs=0x17c5;eip=0x005225; 	T(ax = 0x5806;);	// 93898                  mov     ax, 5806h ;~ 17C5:5225
cs=0x17c5;eip=0x005228; 	X(PUSH(ax));	// 93899                  push    ax ;~ 17C5:5228
cs=0x17c5;eip=0x005229; 	T(ax = 0x57BE;);	// 93900                  mov     ax, 57BEh ;~ 17C5:5229
cs=0x17c5;eip=0x00522c; 	X(PUSH(ax));	// 93901                  push    ax ;~ 17C5:522C
cs=0x17c5;eip=0x00522d; 	J(CALL(sub_34d94,0));	// 93902                  call    sub_34D94 ;~ 17C5:522D
cs=0x17c5;eip=0x005230; 	T(ADD(sp, 6));	// 93903                  add     sp, 6 ;~ 17C5:5230
cs=0x17c5;eip=0x005233; 	T(sp = bp;);	// 93904                  mov     sp, bp ;~ 17C5:5233
cs=0x17c5;eip=0x005235; 	X(POP(bp));	// 93905                  pop     bp ;~ 17C5:5235
cs=0x17c5;eip=0x005236; 	J(RETN(0));	// 93906                  retn ;~ 17C5:5236

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2b43f: 	goto loc_2b43f;
        case m2c::ksub_2b429: 	goto sub_2b429;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b467(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b467:
    _begin:
#undef var_2
#define var_2 -2
	// 93916 var_2           = word ptr -2 ;~ 17C5:5237
cs=0x17c5;eip=0x005237; 	X(PUSH(bp));	// 93918                  push    bp ;~ 17C5:5237
cs=0x17c5;eip=0x005238; 	T(bp = sp;);	// 93919                  mov     bp, sp ;~ 17C5:5238
cs=0x17c5;eip=0x00523a; 	T(SUB(sp, 2));	// 93920                  sub     sp, 2 ;~ 17C5:523A
cs=0x17c5;eip=0x00523d; 	T(ax = word_4e2a8;);	// 93921                  mov     ax, ds:word_4E2A8 ;~ 17C5:523D
cs=0x17c5;eip=0x005240; 	T(NEG(ax));	// 93922                  neg     ax ;~ 17C5:5240
cs=0x17c5;eip=0x005242; 	X(PUSH(ax));	// 93923                  push    ax ;~ 17C5:5242
cs=0x17c5;eip=0x005243; 	J(CALL(sub_2b6e7,0));	// 93924                  call    sub_2B6E7 ;~ 17C5:5243
cs=0x17c5;eip=0x005246; 	T(ADD(sp, 2));	// 93925                  add     sp, 2 ;~ 17C5:5246
cs=0x17c5;eip=0x005249; 	X(word_4e2fa = ax;);	// 93926                  mov     ds:word_4E2FA, ax ;~ 17C5:5249
cs=0x17c5;eip=0x00524c; 	X(PUSH(ax));	// 93927                  push    ax ;~ 17C5:524C
cs=0x17c5;eip=0x00524d; 	J(CALL(sub_29db6,0));	// 93928                  call    sub_29DB6 ;~ 17C5:524D
cs=0x17c5;eip=0x005250; 	T(ADD(sp, 2));	// 93929                  add     sp, 2 ;~ 17C5:5250
cs=0x17c5;eip=0x005253; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 93930                  mov     [bp+var_2], ax ;~ 17C5:5253
cs=0x17c5;eip=0x005256; 	T(OR(ax, ax));	// 93931                  or      ax, ax ;~ 17C5:5256
cs=0x17c5;eip=0x005258; 	J(JNZ(loc_2b48d));	// 93932                  jnz     short loc_2B48D ;~ 17C5:5258
cs=0x17c5;eip=0x00525a; 	J(JMP(loc_2b5ac));	// 93933                  jmp     loc_2B5AC ;~ 17C5:525A
loc_2b48d:
	// 5482 
cs=0x17c5;eip=0x00525d; 	X(PUSH(word_4e2a2));	// 93937                  push    ds:word_4E2A2 ;~ 17C5:525D
cs=0x17c5;eip=0x005261; 	J(CALL(sub_34dc0,0));	// 93938                  call    sub_34DC0 ;~ 17C5:5261
cs=0x17c5;eip=0x005264; 	T(ADD(sp, 2));	// 93939                  add     sp, 2 ;~ 17C5:5264
cs=0x17c5;eip=0x005267; 	T(CMP(ax, 0x5A81));	// 93940                  cmp     ax, 5A81h ;~ 17C5:5267
cs=0x17c5;eip=0x00526a; 	J(JGE(loc_2b4bc));	// 93941                  jge     short loc_2B4BC ;~ 17C5:526A
cs=0x17c5;eip=0x00526c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 93942                  push    [bp+var_2] ;~ 17C5:526C
cs=0x17c5;eip=0x00526f; 	X(PUSH(word_4e2a2));	// 93943                  push    ds:word_4E2A2 ;~ 17C5:526F
cs=0x17c5;eip=0x005273; 	J(CALL(sub_2b66b,0));	// 93944                  call    sub_2B66B ;~ 17C5:5273
cs=0x17c5;eip=0x005276; 	T(ADD(sp, 4));	// 93945                  add     sp, 4 ;~ 17C5:5276
cs=0x17c5;eip=0x005279; 	X(PUSH(ax));	// 93946                  push    ax ;~ 17C5:5279
cs=0x17c5;eip=0x00527a; 	J(CALL(sub_34dc0,0));	// 93947                  call    sub_34DC0 ;~ 17C5:527A
cs=0x17c5;eip=0x00527d; 	T(ADD(sp, 2));	// 93948                  add     sp, 2 ;~ 17C5:527D
cs=0x17c5;eip=0x005280; 	X(PUSH(ax));	// 93949                  push    ax ;~ 17C5:5280
cs=0x17c5;eip=0x005281; 	J(CALL(sub_2b6e7,0));	// 93950                  call    sub_2B6E7 ;~ 17C5:5281
cs=0x17c5;eip=0x005284; 	T(ADD(sp, 2));	// 93951                  add     sp, 2 ;~ 17C5:5284
cs=0x17c5;eip=0x005287; 	X(word_4e2f8 = ax;);	// 93952                  mov     ds:word_4E2F8, ax ;~ 17C5:5287
cs=0x17c5;eip=0x00528a; 	J(JMP(loc_2b4da));	// 93953                  jmp     short loc_2B4DA ;~ 17C5:528A
loc_2b4bc:
	// 5483 
cs=0x17c5;eip=0x00528c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 93957                  push    [bp+var_2] ;~ 17C5:528C
cs=0x17c5;eip=0x00528f; 	X(PUSH(word_4e2ae));	// 93958                  push    ds:word_4E2AE ;~ 17C5:528F
cs=0x17c5;eip=0x005293; 	J(CALL(sub_2b66b,0));	// 93959                  call    sub_2B66B ;~ 17C5:5293
cs=0x17c5;eip=0x005296; 	T(ADD(sp, 4));	// 93960                  add     sp, 4 ;~ 17C5:5296
cs=0x17c5;eip=0x005299; 	X(PUSH(ax));	// 93961                  push    ax ;~ 17C5:5299
cs=0x17c5;eip=0x00529a; 	J(CALL(sub_34dc0,0));	// 93962                  call    sub_34DC0 ;~ 17C5:529A
cs=0x17c5;eip=0x00529d; 	T(ADD(sp, 2));	// 93963                  add     sp, 2 ;~ 17C5:529D
cs=0x17c5;eip=0x0052a0; 	X(PUSH(ax));	// 93964                  push    ax ;~ 17C5:52A0
cs=0x17c5;eip=0x0052a1; 	J(CALL(sub_2b770,0));	// 93965                  call    sub_2B770 ;~ 17C5:52A1
cs=0x17c5;eip=0x0052a4; 	T(ADD(sp, 2));	// 93966                  add     sp, 2 ;~ 17C5:52A4
cs=0x17c5;eip=0x0052a7; 	X(word_4e2f8 = ax;);	// 93967                  mov     ds:word_4E2F8, ax ;~ 17C5:52A7
loc_2b4da:
	// 5484 
cs=0x17c5;eip=0x0052aa; 	T(CMP(word_4e2a2, 0));	// 93970                  cmp     ds:word_4E2A2, 0 ;~ 17C5:52AA
cs=0x17c5;eip=0x0052af; 	J(JG(loc_2b4ed));	// 93971                  jg      short loc_2B4ED ;~ 17C5:52AF
cs=0x17c5;eip=0x0052b1; 	T(CMP(word_4e2ae, 0));	// 93972                  cmp     ds:word_4E2AE, 0 ;~ 17C5:52B1
cs=0x17c5;eip=0x0052b6; 	J(JGE(loc_2b4ed));	// 93973                  jge     short loc_2B4ED ;~ 17C5:52B6
cs=0x17c5;eip=0x0052b8; 	X(ADD(*(db*)(((db*)&word_4e2f8)+1), 0x80));	// 93974                  add     byte ptr ds:word_4E2F8+1, 80h ;~ 17C5:52B8
loc_2b4ed:
	// 5485 
cs=0x17c5;eip=0x0052bd; 	T(CMP(word_4e2a2, 0));	// 93978                  cmp     ds:word_4E2A2, 0 ;~ 17C5:52BD
cs=0x17c5;eip=0x0052c2; 	J(JLE(loc_2b505));	// 93979                  jle     short loc_2B505 ;~ 17C5:52C2
cs=0x17c5;eip=0x0052c4; 	T(CMP(word_4e2ae, 0));	// 93980                  cmp     ds:word_4E2AE, 0 ;~ 17C5:52C4
cs=0x17c5;eip=0x0052c9; 	J(JGE(loc_2b505));	// 93981                  jge     short loc_2B505 ;~ 17C5:52C9
cs=0x17c5;eip=0x0052cb; 	T(ax = 0x8000;);	// 93982                  mov     ax, 8000h ;~ 17C5:52CB
cs=0x17c5;eip=0x0052ce; 	T(SUB(ax, word_4e2f8));	// 93983                  sub     ax, ds:word_4E2F8 ;~ 17C5:52CE
cs=0x17c5;eip=0x0052d2; 	X(word_4e2f8 = ax;);	// 93984                  mov     ds:word_4E2F8, ax ;~ 17C5:52D2
loc_2b505:
	// 5486 
cs=0x17c5;eip=0x0052d5; 	T(CMP(word_4e2a2, 0));	// 93988                  cmp     ds:word_4E2A2, 0 ;~ 17C5:52D5
cs=0x17c5;eip=0x0052da; 	J(JGE(loc_2b51b));	// 93989                  jge     short loc_2B51B ;~ 17C5:52DA
cs=0x17c5;eip=0x0052dc; 	T(CMP(word_4e2ae, 0));	// 93990                  cmp     ds:word_4E2AE, 0 ;~ 17C5:52DC
cs=0x17c5;eip=0x0052e1; 	J(JLE(loc_2b51b));	// 93991                  jle     short loc_2B51B ;~ 17C5:52E1
cs=0x17c5;eip=0x0052e3; 	T(ax = word_4e2f8;);	// 93992                  mov     ax, ds:word_4E2F8 ;~ 17C5:52E3
cs=0x17c5;eip=0x0052e6; 	T(NEG(ax));	// 93993                  neg     ax ;~ 17C5:52E6
cs=0x17c5;eip=0x0052e8; 	X(word_4e2f8 = ax;);	// 93994                  mov     ds:word_4E2F8, ax ;~ 17C5:52E8
loc_2b51b:
	// 5487 
cs=0x17c5;eip=0x0052eb; 	X(PUSH(word_4e2a4));	// 93998                  push    ds:word_4E2A4 ;~ 17C5:52EB
cs=0x17c5;eip=0x0052ef; 	J(CALL(sub_34dc0,0));	// 93999                  call    sub_34DC0 ;~ 17C5:52EF
cs=0x17c5;eip=0x0052f2; 	T(ADD(sp, 2));	// 94000                  add     sp, 2 ;~ 17C5:52F2
cs=0x17c5;eip=0x0052f5; 	T(CMP(ax, 0x5A81));	// 94001                  cmp     ax, 5A81h ;~ 17C5:52F5
cs=0x17c5;eip=0x0052f8; 	J(JGE(loc_2b54a));	// 94002                  jge     short loc_2B54A ;~ 17C5:52F8
cs=0x17c5;eip=0x0052fa; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 94003                  push    [bp+var_2] ;~ 17C5:52FA
cs=0x17c5;eip=0x0052fd; 	X(PUSH(word_4e2a4));	// 94004                  push    ds:word_4E2A4 ;~ 17C5:52FD
cs=0x17c5;eip=0x005301; 	J(CALL(sub_2b66b,0));	// 94005                  call    sub_2B66B ;~ 17C5:5301
cs=0x17c5;eip=0x005304; 	T(ADD(sp, 4));	// 94006                  add     sp, 4 ;~ 17C5:5304
cs=0x17c5;eip=0x005307; 	X(PUSH(ax));	// 94007                  push    ax ;~ 17C5:5307
cs=0x17c5;eip=0x005308; 	J(CALL(sub_34dc0,0));	// 94008                  call    sub_34DC0 ;~ 17C5:5308
cs=0x17c5;eip=0x00530b; 	T(ADD(sp, 2));	// 94009                  add     sp, 2 ;~ 17C5:530B
cs=0x17c5;eip=0x00530e; 	X(PUSH(ax));	// 94010                  push    ax ;~ 17C5:530E
cs=0x17c5;eip=0x00530f; 	J(CALL(sub_2b6e7,0));	// 94011                  call    sub_2B6E7 ;~ 17C5:530F
cs=0x17c5;eip=0x005312; 	T(ADD(sp, 2));	// 94012                  add     sp, 2 ;~ 17C5:5312
cs=0x17c5;eip=0x005315; 	X(word_4e2fc = ax;);	// 94013                  mov     ds:word_4E2FC, ax ;~ 17C5:5315
cs=0x17c5;eip=0x005318; 	J(JMP(loc_2b568));	// 94014                  jmp     short loc_2B568 ;~ 17C5:5318
loc_2b54a:
	// 5488 
cs=0x17c5;eip=0x00531a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 94018                  push    [bp+var_2] ;~ 17C5:531A
cs=0x17c5;eip=0x00531d; 	X(PUSH(word_4e2a6));	// 94019                  push    ds:word_4E2A6 ;~ 17C5:531D
cs=0x17c5;eip=0x005321; 	J(CALL(sub_2b66b,0));	// 94020                  call    sub_2B66B ;~ 17C5:5321
cs=0x17c5;eip=0x005324; 	T(ADD(sp, 4));	// 94021                  add     sp, 4 ;~ 17C5:5324
cs=0x17c5;eip=0x005327; 	X(PUSH(ax));	// 94022                  push    ax ;~ 17C5:5327
cs=0x17c5;eip=0x005328; 	J(CALL(sub_34dc0,0));	// 94023                  call    sub_34DC0 ;~ 17C5:5328
cs=0x17c5;eip=0x00532b; 	T(ADD(sp, 2));	// 94024                  add     sp, 2 ;~ 17C5:532B
cs=0x17c5;eip=0x00532e; 	X(PUSH(ax));	// 94025                  push    ax ;~ 17C5:532E
cs=0x17c5;eip=0x00532f; 	J(CALL(sub_2b770,0));	// 94026                  call    sub_2B770 ;~ 17C5:532F
cs=0x17c5;eip=0x005332; 	T(ADD(sp, 2));	// 94027                  add     sp, 2 ;~ 17C5:5332
cs=0x17c5;eip=0x005335; 	X(word_4e2fc = ax;);	// 94028                  mov     ds:word_4E2FC, ax ;~ 17C5:5335
loc_2b568:
	// 5489 
cs=0x17c5;eip=0x005338; 	T(CMP(word_4e2a4, 0));	// 94031                  cmp     ds:word_4E2A4, 0 ;~ 17C5:5338
cs=0x17c5;eip=0x00533d; 	J(JG(loc_2b57b));	// 94032                  jg      short loc_2B57B ;~ 17C5:533D
cs=0x17c5;eip=0x00533f; 	T(CMP(word_4e2a6, 0));	// 94033                  cmp     ds:word_4E2A6, 0 ;~ 17C5:533F
cs=0x17c5;eip=0x005344; 	J(JGE(loc_2b57b));	// 94034                  jge     short loc_2B57B ;~ 17C5:5344
cs=0x17c5;eip=0x005346; 	X(ADD(*(db*)(((db*)&word_4e2fc)+1), 0x80));	// 94035                  add     byte ptr ds:word_4E2FC+1, 80h ;~ 17C5:5346
loc_2b57b:
	// 5490 
cs=0x17c5;eip=0x00534b; 	T(CMP(word_4e2a4, 0));	// 94039                  cmp     ds:word_4E2A4, 0 ;~ 17C5:534B
cs=0x17c5;eip=0x005350; 	J(JLE(loc_2b593));	// 94040                  jle     short loc_2B593 ;~ 17C5:5350
cs=0x17c5;eip=0x005352; 	T(CMP(word_4e2a6, 0));	// 94041                  cmp     ds:word_4E2A6, 0 ;~ 17C5:5352
cs=0x17c5;eip=0x005357; 	J(JGE(loc_2b593));	// 94042                  jge     short loc_2B593 ;~ 17C5:5357
cs=0x17c5;eip=0x005359; 	T(ax = 0x8000;);	// 94043                  mov     ax, 8000h ;~ 17C5:5359
cs=0x17c5;eip=0x00535c; 	T(SUB(ax, word_4e2fc));	// 94044                  sub     ax, ds:word_4E2FC ;~ 17C5:535C
cs=0x17c5;eip=0x005360; 	X(word_4e2fc = ax;);	// 94045                  mov     ds:word_4E2FC, ax ;~ 17C5:5360
loc_2b593:
	// 5491 
cs=0x17c5;eip=0x005363; 	T(CMP(word_4e2a4, 0));	// 94049                  cmp     ds:word_4E2A4, 0 ;~ 17C5:5363
cs=0x17c5;eip=0x005368; 	J(JGE(loc_2b5aa));	// 94050                  jge     short loc_2B5AA ;~ 17C5:5368
cs=0x17c5;eip=0x00536a; 	T(CMP(word_4e2a6, 0));	// 94051                  cmp     ds:word_4E2A6, 0 ;~ 17C5:536A
cs=0x17c5;eip=0x00536f; 	J(JLE(loc_2b5aa));	// 94052                  jle     short loc_2B5AA ;~ 17C5:536F
cs=0x17c5;eip=0x005371; 	T(SUB(ax, ax));	// 94053                  sub     ax, ax ;~ 17C5:5371
cs=0x17c5;eip=0x005373; 	T(SUB(ax, word_4e2fc));	// 94054                  sub     ax, ds:word_4E2FC ;~ 17C5:5373
cs=0x17c5;eip=0x005377; 	X(word_4e2fc = ax;);	// 94055                  mov     ds:word_4E2FC, ax ;~ 17C5:5377
loc_2b5aa:
	// 5492 
cs=0x17c5;eip=0x00537a; 	J(JMP(loc_2b600));	// 94059                  jmp     short loc_2B600 ;~ 17C5:537A
loc_2b5ac:
	// 5493 
cs=0x17c5;eip=0x00537c; 	X(word_4e2fc = 0;);	// 94063                  mov     ds:word_4E2FC, 0 ;~ 17C5:537C
cs=0x17c5;eip=0x005382; 	X(PUSH(word_4e2a0));	// 94064                  push    ds:word_4E2A0 ;~ 17C5:5382
cs=0x17c5;eip=0x005386; 	J(CALL(sub_2b6e7,0));	// 94065                  call    sub_2B6E7 ;~ 17C5:5386
cs=0x17c5;eip=0x005389; 	T(ADD(sp, 2));	// 94066                  add     sp, 2 ;~ 17C5:5389
cs=0x17c5;eip=0x00538c; 	X(word_4e2f8 = ax;);	// 94067                  mov     ds:word_4E2F8, ax ;~ 17C5:538C
cs=0x17c5;eip=0x00538f; 	T(CMP(word_4e2a4, 0));	// 94068                  cmp     ds:word_4E2A4, 0 ;~ 17C5:538F
cs=0x17c5;eip=0x005394; 	J(JG(loc_2b5d2));	// 94069                  jg      short loc_2B5D2 ;~ 17C5:5394
cs=0x17c5;eip=0x005396; 	T(CMP(word_4e2a6, 0));	// 94070                  cmp     ds:word_4E2A6, 0 ;~ 17C5:5396
cs=0x17c5;eip=0x00539b; 	J(JGE(loc_2b5d2));	// 94071                  jge     short loc_2B5D2 ;~ 17C5:539B
cs=0x17c5;eip=0x00539d; 	X(ADD(*(db*)(((db*)&word_4e2f8)+1), 0x80));	// 94072                  add     byte ptr ds:word_4E2F8+1, 80h ;~ 17C5:539D
loc_2b5d2:
	// 5494 
cs=0x17c5;eip=0x0053a2; 	T(CMP(word_4e2a4, 0));	// 94076                  cmp     ds:word_4E2A4, 0 ;~ 17C5:53A2
cs=0x17c5;eip=0x0053a7; 	J(JLE(loc_2b5ea));	// 94077                  jle     short loc_2B5EA ;~ 17C5:53A7
cs=0x17c5;eip=0x0053a9; 	T(CMP(word_4e2a6, 0));	// 94078                  cmp     ds:word_4E2A6, 0 ;~ 17C5:53A9
cs=0x17c5;eip=0x0053ae; 	J(JGE(loc_2b5ea));	// 94079                  jge     short loc_2B5EA ;~ 17C5:53AE
cs=0x17c5;eip=0x0053b0; 	T(ax = 0x8000;);	// 94080                  mov     ax, 8000h ;~ 17C5:53B0
cs=0x17c5;eip=0x0053b3; 	T(SUB(ax, word_4e2f8));	// 94081                  sub     ax, ds:word_4E2F8 ;~ 17C5:53B3
cs=0x17c5;eip=0x0053b7; 	X(word_4e2f8 = ax;);	// 94082                  mov     ds:word_4E2F8, ax ;~ 17C5:53B7
loc_2b5ea:
	// 5495 
cs=0x17c5;eip=0x0053ba; 	T(CMP(word_4e2a4, 0));	// 94086                  cmp     ds:word_4E2A4, 0 ;~ 17C5:53BA
cs=0x17c5;eip=0x0053bf; 	J(JGE(loc_2b600));	// 94087                  jge     short loc_2B600 ;~ 17C5:53BF
cs=0x17c5;eip=0x0053c1; 	T(CMP(word_4e2a6, 0));	// 94088                  cmp     ds:word_4E2A6, 0 ;~ 17C5:53C1
cs=0x17c5;eip=0x0053c6; 	J(JLE(loc_2b600));	// 94089                  jle     short loc_2B600 ;~ 17C5:53C6
cs=0x17c5;eip=0x0053c8; 	T(ax = word_4e2f8;);	// 94090                  mov     ax, ds:word_4E2F8 ;~ 17C5:53C8
cs=0x17c5;eip=0x0053cb; 	T(NEG(ax));	// 94091                  neg     ax ;~ 17C5:53CB
cs=0x17c5;eip=0x0053cd; 	X(word_4e2f8 = ax;);	// 94092                  mov     ds:word_4E2F8, ax ;~ 17C5:53CD
loc_2b600:
	// 5496 
cs=0x17c5;eip=0x0053d0; 	T(CMP(word_4e2fa, 0x38E3));	// 94096                  cmp     ds:word_4E2FA, 38E3h ;~ 17C5:53D0
cs=0x17c5;eip=0x0053d6; 	J(JLE(loc_2b615));	// 94097                  jle     short loc_2B615 ;~ 17C5:53D6
cs=0x17c5;eip=0x0053d8; 	T(CMP(word_4e2fa, 0x4001));	// 94098                  cmp     ds:word_4E2FA, 4001h ;~ 17C5:53D8
cs=0x17c5;eip=0x0053de; 	J(JGE(loc_2b615));	// 94099                  jge     short loc_2B615 ;~ 17C5:53DE
cs=0x17c5;eip=0x0053e0; 	X(byte_4e30d = 1;);	// 94100                  mov     ds:byte_4E30D, 1 ;~ 17C5:53E0
loc_2b615:
	// 5497 
cs=0x17c5;eip=0x0053e5; 	T(CMP(word_4e2fa, 0x0C71D));	// 94104                  cmp     ds:word_4E2FA, 0C71Dh ;~ 17C5:53E5
cs=0x17c5;eip=0x0053eb; 	J(JGE(loc_2b62a));	// 94105                  jge     short loc_2B62A ;~ 17C5:53EB
cs=0x17c5;eip=0x0053ed; 	T(CMP(word_4e2fa, 0x0BFFF));	// 94106                  cmp     ds:word_4E2FA, 0BFFFh ;~ 17C5:53ED
cs=0x17c5;eip=0x0053f3; 	J(JLE(loc_2b62a));	// 94107                  jle     short loc_2B62A ;~ 17C5:53F3
cs=0x17c5;eip=0x0053f5; 	X(byte_4e30d = 1;);	// 94108                  mov     ds:byte_4E30D, 1 ;~ 17C5:53F5
loc_2b62a:
	// 5498 
cs=0x17c5;eip=0x0053fa; 	T(CMP(byte_4e30a, 0));	// 94112                  cmp     ds:byte_4E30A, 0 ;~ 17C5:53FA
cs=0x17c5;eip=0x0053ff; 	J(JZ(loc_2b63d));	// 94113                  jz      short loc_2B63D ;~ 17C5:53FF
cs=0x17c5;eip=0x005401; 	T(CMP(word_4e2fc, 0));	// 94114                  cmp     ds:word_4E2FC, 0 ;~ 17C5:5401
cs=0x17c5;eip=0x005406; 	J(JNZ(loc_2b63d));	// 94115                  jnz     short loc_2B63D ;~ 17C5:5406
cs=0x17c5;eip=0x005408; 	X(byte_4e30d = 1;);	// 94116                  mov     ds:byte_4E30D, 1 ;~ 17C5:5408
loc_2b63d:
	// 5499 
cs=0x17c5;eip=0x00540d; 	T(sp = bp;);	// 94120                  mov     sp, bp ;~ 17C5:540D
cs=0x17c5;eip=0x00540f; 	X(POP(bp));	// 94121                  pop     bp ;~ 17C5:540F
cs=0x17c5;eip=0x005410; 	J(RETN(0));	// 94122                  retn ;~ 17C5:5410

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2b48d: 	goto loc_2b48d;
        case m2c::kloc_2b4bc: 	goto loc_2b4bc;
        case m2c::kloc_2b4da: 	goto loc_2b4da;
        case m2c::kloc_2b4ed: 	goto loc_2b4ed;
        case m2c::kloc_2b505: 	goto loc_2b505;
        case m2c::kloc_2b51b: 	goto loc_2b51b;
        case m2c::kloc_2b54a: 	goto loc_2b54a;
        case m2c::kloc_2b568: 	goto loc_2b568;
        case m2c::kloc_2b57b: 	goto loc_2b57b;
        case m2c::kloc_2b593: 	goto loc_2b593;
        case m2c::kloc_2b5aa: 	goto loc_2b5aa;
        case m2c::kloc_2b5ac: 	goto loc_2b5ac;
        case m2c::kloc_2b5d2: 	goto loc_2b5d2;
        case m2c::kloc_2b5ea: 	goto loc_2b5ea;
        case m2c::kloc_2b600: 	goto loc_2b600;
        case m2c::kloc_2b615: 	goto loc_2b615;
        case m2c::kloc_2b62a: 	goto loc_2b62a;
        case m2c::kloc_2b63d: 	goto loc_2b63d;
        case m2c::ksub_2b467: 	goto sub_2b467;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b641(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b641:
    _begin:
cs=0x17c5;eip=0x005411; 	X(PUSH(bp));	// 94132                  push    bp ;~ 17C5:5411
cs=0x17c5;eip=0x005412; 	T(bp = sp;);	// 94133                  mov     bp, sp ;~ 17C5:5412
cs=0x17c5;eip=0x005414; 	X(PUSH(word_4e2fc));	// 94134                  push    ds:word_4E2FC ;~ 17C5:5414
cs=0x17c5;eip=0x005418; 	X(PUSH(word_4e2fa));	// 94135                  push    ds:word_4E2FA ;~ 17C5:5418
cs=0x17c5;eip=0x00541c; 	X(PUSH(word_4e2f8));	// 94136                  push    ds:word_4E2F8 ;~ 17C5:541C
cs=0x17c5;eip=0x005420; 	T(ax = 0x57BE;);	// 94137                  mov     ax, 57BEh ;~ 17C5:5420
cs=0x17c5;eip=0x005423; 	X(PUSH(ax));	// 94138                  push    ax ;~ 17C5:5423
cs=0x17c5;eip=0x005424; 	J(CALLF(sub_36dde,0));	// 94139                  call    sub_36DDE ;~ 17C5:5424
cs=0x17c5;eip=0x005429; 	T(ADD(sp, 8));	// 94140                  add     sp, 8 ;~ 17C5:5429
cs=0x17c5;eip=0x00542c; 	X(byte_4e30d = 0;);	// 94141                  mov     ds:byte_4E30D, 0 ;~ 17C5:542C
cs=0x17c5;eip=0x005431; 	X(word_4e308 = 0;);	// 94142                  mov     ds:word_4E308, 0 ;~ 17C5:5431
cs=0x17c5;eip=0x005437; 	T(sp = bp;);	// 94143                  mov     sp, bp ;~ 17C5:5437
cs=0x17c5;eip=0x005439; 	X(POP(bp));	// 94144                  pop     bp ;~ 17C5:5439
cs=0x17c5;eip=0x00543a; 	J(RETN(0));	// 94145                  retn ;~ 17C5:543A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_2b641: 	goto sub_2b641;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b66b(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b66b:
    _begin:
#undef var_c
#define var_c -0x0C
	// 94156 var_C           = word ptr -0Ch ;~ 17C5:543B
#undef var_a
#define var_a -0x0A
	// 94157 var_A           = word ptr -0Ah ;~ 17C5:543B
#undef var_8
#define var_8 -8
	// 94158 var_8           = word ptr -8 ;~ 17C5:543B
#undef var_6
#define var_6 -6
	// 94159 var_6           = word ptr -6 ;~ 17C5:543B
#undef var_4
#define var_4 -4
	// 94160 var_4           = byte ptr -4 ;~ 17C5:543B
#undef var_2
#define var_2 -2
	// 94161 var_2           = byte ptr -2 ;~ 17C5:543B
#undef arg_0
#define arg_0 4
	// 94162 arg_0           = word ptr  4 ;~ 17C5:543B
#undef arg_2
#define arg_2 6
	// 94163 arg_2           = word ptr  6 ;~ 17C5:543B
cs=0x17c5;eip=0x00543b; 	X(PUSH(bp));	// 94165                  push    bp ;~ 17C5:543B
cs=0x17c5;eip=0x00543c; 	T(bp = sp;);	// 94166                  mov     bp, sp ;~ 17C5:543C
cs=0x17c5;eip=0x00543e; 	T(SUB(sp, 0x0C));	// 94167                  sub     sp, 0Ch ;~ 17C5:543E
cs=0x17c5;eip=0x005441; 	X(PUSH(si));	// 94168                  push    si ;~ 17C5:5441
cs=0x17c5;eip=0x005442; 	X(MOV(*(raddr(ss,bp+var_2)), 1));	// 94169                  mov     [bp+var_2], 1 ;~ 17C5:5442
cs=0x17c5;eip=0x005446; 	X(MOV(*(raddr(ss,bp+var_4)), 1));	// 94170                  mov     [bp+var_4], 1 ;~ 17C5:5446
cs=0x17c5;eip=0x00544a; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 94171                  cmp     [bp+arg_0], 0 ;~ 17C5:544A
cs=0x17c5;eip=0x00544e; 	J(JGE(loc_2b684));	// 94172                  jge     short loc_2B684 ;~ 17C5:544E
cs=0x17c5;eip=0x005450; 	X(MOV(*(raddr(ss,bp+var_2)), 0x0FF));	// 94173                  mov     [bp+var_2], 0FFh ;~ 17C5:5450
loc_2b684:
	// 5500 
cs=0x17c5;eip=0x005454; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 94176                  cmp     [bp+arg_2], 0 ;~ 17C5:5454
cs=0x17c5;eip=0x005458; 	J(JGE(loc_2b68e));	// 94177                  jge     short loc_2B68E ;~ 17C5:5458
cs=0x17c5;eip=0x00545a; 	X(MOV(*(raddr(ss,bp+var_4)), 0x0FF));	// 94178                  mov     [bp+var_4], 0FFh ;~ 17C5:545A
loc_2b68e:
	// 5501 
cs=0x17c5;eip=0x00545e; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 94181                  cmp     [bp+arg_0], 0 ;~ 17C5:545E
cs=0x17c5;eip=0x005462; 	J(JGE(loc_2b69b));	// 94182                  jge     short loc_2B69B ;~ 17C5:5462
cs=0x17c5;eip=0x005464; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 94183                  mov     ax, [bp+arg_0] ;~ 17C5:5464
cs=0x17c5;eip=0x005467; 	T(NEG(ax));	// 94184                  neg     ax ;~ 17C5:5467
cs=0x17c5;eip=0x005469; 	J(JMP(loc_2b69e));	// 94185                  jmp     short loc_2B69E ;~ 17C5:5469
loc_2b69b:
	// 5502 
cs=0x17c5;eip=0x00546b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 94189                  mov     ax, [bp+arg_0] ;~ 17C5:546B
loc_2b69e:
	// 5503 
cs=0x17c5;eip=0x00546e; 	T(CWD);	// 94192                  cwd ;~ 17C5:546E
cs=0x17c5;eip=0x00546f; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 94193                  mov     [bp+var_8], ax ;~ 17C5:546F
cs=0x17c5;eip=0x005472; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), dx));	// 94194                  mov     [bp+var_6], dx ;~ 17C5:5472
cs=0x17c5;eip=0x005475; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 94195                  cmp     [bp+arg_2], 0 ;~ 17C5:5475
cs=0x17c5;eip=0x005479; 	J(JGE(loc_2b6b2));	// 94196                  jge     short loc_2B6B2 ;~ 17C5:5479
cs=0x17c5;eip=0x00547b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 94197                  mov     ax, [bp+arg_2] ;~ 17C5:547B
cs=0x17c5;eip=0x00547e; 	T(NEG(ax));	// 94198                  neg     ax ;~ 17C5:547E
cs=0x17c5;eip=0x005480; 	J(JMP(loc_2b6b5));	// 94199                  jmp     short loc_2B6B5 ;~ 17C5:5480
loc_2b6b2:
	// 5504 
cs=0x17c5;eip=0x005482; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 94203                  mov     ax, [bp+arg_2] ;~ 17C5:5482
loc_2b6b5:
	// 5505 
cs=0x17c5;eip=0x005485; 	T(CWD);	// 94206                  cwd ;~ 17C5:5485
cs=0x17c5;eip=0x005486; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 94207                  mov     [bp+var_C], ax ;~ 17C5:5486
cs=0x17c5;eip=0x005489; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), dx));	// 94208                  mov     [bp+var_A], dx ;~ 17C5:5489
cs=0x17c5;eip=0x00548c; 	X(PUSH(dx));	// 94209                  push    dx ;~ 17C5:548C
cs=0x17c5;eip=0x00548d; 	X(PUSH(ax));	// 94210                  push    ax ;~ 17C5:548D
cs=0x17c5;eip=0x00548e; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_8))));	// 94211                  mov     dx, [bp+var_8] ;~ 17C5:548E
cs=0x17c5;eip=0x005491; 	T(SUB(ax, ax));	// 94212                  sub     ax, ax ;~ 17C5:5491
cs=0x17c5;eip=0x005493; 	X(PUSH(dx));	// 94213                  push    dx ;~ 17C5:5493
cs=0x17c5;eip=0x005494; 	X(PUSH(ax));	// 94214                  push    ax ;~ 17C5:5494
cs=0x17c5;eip=0x005495; 	J(CALL(sub_34f54,0));	// 94215                  call    sub_34F54 ;~ 17C5:5495
cs=0x17c5;eip=0x005498; 	T(SHR(dx, 1));	// 94216                  shr     dx, 1 ;~ 17C5:5498
cs=0x17c5;eip=0x00549a; 	T(RCR(ax, 1));	// 94217                  rcr     ax, 1 ;~ 17C5:549A
cs=0x17c5;eip=0x00549c; 	T(cx = ax;);	// 94218                  mov     cx, ax ;~ 17C5:549C
cs=0x17c5;eip=0x00549e; 	T(MOV(al, *(raddr(ss,bp+var_4))));	// 94219                  mov     al, [bp+var_4] ;~ 17C5:549E
cs=0x17c5;eip=0x0054a1; 	T(CBW);	// 94220                  cbw ;~ 17C5:54A1
cs=0x17c5;eip=0x0054a2; 	T(bx = ax;);	// 94221                  mov     bx, ax ;~ 17C5:54A2
cs=0x17c5;eip=0x0054a4; 	T(MOV(al, *(raddr(ss,bp+var_2))));	// 94222                  mov     al, [bp+var_2] ;~ 17C5:54A4
cs=0x17c5;eip=0x0054a7; 	T(CBW);	// 94223                  cbw ;~ 17C5:54A7
cs=0x17c5;eip=0x0054a8; 	T(si = ax;);	// 94224                  mov     si, ax ;~ 17C5:54A8
cs=0x17c5;eip=0x0054aa; 	T(ax = cx;);	// 94225                  mov     ax, cx ;~ 17C5:54AA
cs=0x17c5;eip=0x0054ac; 	T(MUL1_2(si));	// 94226                  mul     si ;~ 17C5:54AC
cs=0x17c5;eip=0x0054ae; 	T(MUL1_2(bx));	// 94227                  mul     bx ;~ 17C5:54AE
cs=0x17c5;eip=0x0054b0; 	J({;});	// 94228                  jmp     short $+2 ;~ 17C5:54B0
loc_2b6e2:
	// 5506 
cs=0x17c5;eip=0x0054b2; 	X(POP(si));	// 94232                  pop     si ;~ 17C5:54B2
cs=0x17c5;eip=0x0054b3; 	T(sp = bp;);	// 94233                  mov     sp, bp ;~ 17C5:54B3
cs=0x17c5;eip=0x0054b5; 	X(POP(bp));	// 94234                  pop     bp ;~ 17C5:54B5
cs=0x17c5;eip=0x0054b6; 	J(RETN(0));	// 94235                  retn ;~ 17C5:54B6

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2b684: 	goto loc_2b684;
        case m2c::kloc_2b68e: 	goto loc_2b68e;
        case m2c::kloc_2b69b: 	goto loc_2b69b;
        case m2c::kloc_2b69e: 	goto loc_2b69e;
        case m2c::kloc_2b6b2: 	goto loc_2b6b2;
        case m2c::kloc_2b6b5: 	goto loc_2b6b5;
        case m2c::kloc_2b6e2: 	goto loc_2b6e2;
        case m2c::ksub_2b66b: 	goto sub_2b66b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b6e7(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b6e7:
    _begin:
#undef var_8
#define var_8 -8
	// 94246 var_8           = word ptr -8 ;~ 17C5:54B7
#undef var_6
#define var_6 -6
	// 94247 var_6           = word ptr -6 ;~ 17C5:54B7
#undef var_4
#define var_4 -4
	// 94248 var_4           = word ptr -4 ;~ 17C5:54B7
#undef var_2
#define var_2 -2
	// 94249 var_2           = word ptr -2 ;~ 17C5:54B7
#undef arg_0
#define arg_0 4
	// 94250 arg_0           = word ptr  4 ;~ 17C5:54B7
cs=0x17c5;eip=0x0054b7; 	X(PUSH(bp));	// 94252                  push    bp ;~ 17C5:54B7
cs=0x17c5;eip=0x0054b8; 	T(bp = sp;);	// 94253                  mov     bp, sp ;~ 17C5:54B8
cs=0x17c5;eip=0x0054ba; 	T(SUB(sp, 8));	// 94254                  sub     sp, 8 ;~ 17C5:54BA
cs=0x17c5;eip=0x0054bd; 	X(PUSH(si));	// 94255                  push    si ;~ 17C5:54BD
cs=0x17c5;eip=0x0054be; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0x8000));	// 94256                  cmp     [bp+arg_0], 8000h ;~ 17C5:54BE
cs=0x17c5;eip=0x0054c3; 	J(JNZ(loc_2b6fa));	// 94257                  jnz     short loc_2B6FA ;~ 17C5:54C3
cs=0x17c5;eip=0x0054c5; 	T(ax = 0x0C000;);	// 94258                  mov     ax, 0C000h ;~ 17C5:54C5
cs=0x17c5;eip=0x0054c8; 	J(JMP(loc_2b76b));	// 94259                  jmp     short loc_2B76B ;~ 17C5:54C8
loc_2b6fa:
	// 5507 
cs=0x17c5;eip=0x0054ca; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 94263                  push    [bp+arg_0] ;~ 17C5:54CA
cs=0x17c5;eip=0x0054cd; 	J(CALL(sub_34dc0,0));	// 94264                  call    sub_34DC0 ;~ 17C5:54CD
cs=0x17c5;eip=0x0054d0; 	T(ADD(sp, 2));	// 94265                  add     sp, 2 ;~ 17C5:54D0
cs=0x17c5;eip=0x0054d3; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 94266                  mov     [bp+var_4], ax ;~ 17C5:54D3
cs=0x17c5;eip=0x0054d6; 	T(cl = 9;);	// 94267                  mov     cl, 9 ;~ 17C5:54D6
cs=0x17c5;eip=0x0054d8; 	T(SAR(ax, cl));	// 94268                  sar     ax, cl ;~ 17C5:54D8
cs=0x17c5;eip=0x0054da; 	T(INC(ax));	// 94269                  inc     ax ;~ 17C5:54DA
cs=0x17c5;eip=0x0054db; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 94270                  mov     [bp+var_6], ax ;~ 17C5:54DB
cs=0x17c5;eip=0x0054de; 	J(JMP(loc_2b713));	// 94271                  jmp     short loc_2B713 ;~ 17C5:54DE
loc_2b710:
	// 5508 
cs=0x17c5;eip=0x0054e0; 	X(DEC(*(dw*)(raddr(ss,bp+var_6))));	// 94275                  dec     [bp+var_6] ;~ 17C5:54E0
loc_2b713:
	// 5509 
cs=0x17c5;eip=0x0054e3; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), 0));	// 94278                  cmp     [bp+var_6], 0 ;~ 17C5:54E3
cs=0x17c5;eip=0x0054e7; 	J(JL(loc_2b758));	// 94279                  jl      short loc_2B758 ;~ 17C5:54E7
cs=0x17c5;eip=0x0054e9; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_6))));	// 94280                  mov     si, [bp+var_6] ;~ 17C5:54E9
cs=0x17c5;eip=0x0054ec; 	T(SHL(si, 1));	// 94281                  shl     si, 1 ;~ 17C5:54EC
cs=0x17c5;eip=0x0054ee; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 94282                  mov     ax, [bp+var_4] ;~ 17C5:54EE
cs=0x17c5;eip=0x0054f1; 	T(CMP(*(dw*)(raddr(ds,si+0x4A98)), ax));	// 94283                  cmp     [si+4A98h], ax ;~ 17C5:54F1
cs=0x17c5;eip=0x0054f5; 	J(JG(loc_2b756));	// 94284                  jg      short loc_2B756 ;~ 17C5:54F5
cs=0x17c5;eip=0x0054f7; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x4A9A))));	// 94285                  mov     ax, [si+4A9Ah] ;~ 17C5:54F7
cs=0x17c5;eip=0x0054fb; 	T(SUB(ax, *(dw*)(raddr(ds,si+0x4A98))));	// 94286                  sub     ax, [si+4A98h] ;~ 17C5:54FB
cs=0x17c5;eip=0x0054ff; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 94287                  mov     [bp+var_8], ax ;~ 17C5:54FF
cs=0x17c5;eip=0x005502; 	T(CWD);	// 94288                  cwd ;~ 17C5:5502
cs=0x17c5;eip=0x005503; 	X(PUSH(dx));	// 94289                  push    dx ;~ 17C5:5503
cs=0x17c5;eip=0x005504; 	X(PUSH(ax));	// 94290                  push    ax ;~ 17C5:5504
cs=0x17c5;eip=0x005505; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 94291                  mov     ax, [bp+var_4] ;~ 17C5:5505
cs=0x17c5;eip=0x005508; 	T(SUB(ax, *(dw*)(raddr(ds,si+0x4A98))));	// 94292                  sub     ax, [si+4A98h] ;~ 17C5:5508
cs=0x17c5;eip=0x00550c; 	T(CWD);	// 94293                  cwd ;~ 17C5:550C
cs=0x17c5;eip=0x00550d; 	T(dh = dl;);	// 94294                  mov     dh, dl ;~ 17C5:550D
cs=0x17c5;eip=0x00550f; 	T(dl = ah;);	// 94295                  mov     dl, ah ;~ 17C5:550F
cs=0x17c5;eip=0x005511; 	T(ah = al;);	// 94296                  mov     ah, al ;~ 17C5:5511
cs=0x17c5;eip=0x005513; 	T(SUB(al, al));	// 94297                  sub     al, al ;~ 17C5:5513
cs=0x17c5;eip=0x005515; 	X(PUSH(dx));	// 94298                  push    dx ;~ 17C5:5515
cs=0x17c5;eip=0x005516; 	X(PUSH(ax));	// 94299                  push    ax ;~ 17C5:5516
cs=0x17c5;eip=0x005517; 	J(CALL(sub_34e44,0));	// 94300                  call    sub_34E44 ;~ 17C5:5517
cs=0x17c5;eip=0x00551a; 	T(MOV(ch, *(raddr(ss,bp+var_6))));	// 94301                  mov     ch, byte ptr [bp+var_6] ;~ 17C5:551A
cs=0x17c5;eip=0x00551d; 	T(SUB(cl, cl));	// 94302                  sub     cl, cl ;~ 17C5:551D
cs=0x17c5;eip=0x00551f; 	T(ADD(ax, cx));	// 94303                  add     ax, cx ;~ 17C5:551F
cs=0x17c5;eip=0x005521; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 94304                  mov     [bp+var_2], ax ;~ 17C5:5521
cs=0x17c5;eip=0x005524; 	J(JMP(loc_2b758));	// 94305                  jmp     short loc_2B758 ;~ 17C5:5524
loc_2b756:
	// 5510 
cs=0x17c5;eip=0x005526; 	J(JMP(loc_2b710));	// 94309                  jmp     short loc_2B710 ;~ 17C5:5526
loc_2b758:
	// 5511 
cs=0x17c5;eip=0x005528; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 94314                  cmp     [bp+arg_0], 0 ;~ 17C5:5528
cs=0x17c5;eip=0x00552c; 	J(JGE(loc_2b766));	// 94315                  jge     short loc_2B766 ;~ 17C5:552C
cs=0x17c5;eip=0x00552e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 94316                  mov     ax, [bp+var_2] ;~ 17C5:552E
cs=0x17c5;eip=0x005531; 	T(NEG(ax));	// 94317                  neg     ax ;~ 17C5:5531
cs=0x17c5;eip=0x005533; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 94318                  mov     [bp+var_2], ax ;~ 17C5:5533
loc_2b766:
	// 5512 
cs=0x17c5;eip=0x005536; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 94321                  mov     ax, [bp+var_2] ;~ 17C5:5536
cs=0x17c5;eip=0x005539; 	J({;});	// 94322                  jmp     short $+2 ;~ 17C5:5539
loc_2b76b:
	// 5513 
cs=0x17c5;eip=0x00553b; 	X(POP(si));	// 94327                  pop     si ;~ 17C5:553B
cs=0x17c5;eip=0x00553c; 	T(sp = bp;);	// 94328                  mov     sp, bp ;~ 17C5:553C
cs=0x17c5;eip=0x00553e; 	X(POP(bp));	// 94329                  pop     bp ;~ 17C5:553E
cs=0x17c5;eip=0x00553f; 	J(RETN(0));	// 94330                  retn ;~ 17C5:553F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2b6fa: 	goto loc_2b6fa;
        case m2c::kloc_2b710: 	goto loc_2b710;
        case m2c::kloc_2b713: 	goto loc_2b713;
        case m2c::kloc_2b756: 	goto loc_2b756;
        case m2c::kloc_2b758: 	goto loc_2b758;
        case m2c::kloc_2b766: 	goto loc_2b766;
        case m2c::kloc_2b76b: 	goto loc_2b76b;
        case m2c::ksub_2b6e7: 	goto sub_2b6e7;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b770(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b770:
    _begin:
#undef arg_0
#define arg_0 4
	// 94341 arg_0           = word ptr  4 ;~ 17C5:5540
cs=0x17c5;eip=0x005540; 	X(PUSH(bp));	// 94343                  push    bp ;~ 17C5:5540
cs=0x17c5;eip=0x005541; 	T(bp = sp;);	// 94344                  mov     bp, sp ;~ 17C5:5541
cs=0x17c5;eip=0x005543; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 94345                  push    [bp+arg_0] ;~ 17C5:5543
cs=0x17c5;eip=0x005546; 	J(CALL(sub_2b6e7,0));	// 94346                  call    sub_2B6E7 ;~ 17C5:5546
cs=0x17c5;eip=0x005549; 	T(ADD(sp, 2));	// 94347                  add     sp, 2 ;~ 17C5:5549
cs=0x17c5;eip=0x00554c; 	T(SUB(ax, 0x4000));	// 94348                  sub     ax, 4000h ;~ 17C5:554C
cs=0x17c5;eip=0x00554f; 	T(NEG(ax));	// 94349                  neg     ax ;~ 17C5:554F
cs=0x17c5;eip=0x005551; 	J({;});	// 94350                  jmp     short $+2 ;~ 17C5:5551
loc_2b783:
	// 5514 
cs=0x17c5;eip=0x005553; 	T(sp = bp;);	// 94354                  mov     sp, bp ;~ 17C5:5553
cs=0x17c5;eip=0x005555; 	X(POP(bp));	// 94355                  pop     bp ;~ 17C5:5555
cs=0x17c5;eip=0x005556; 	J(RETN(0));	// 94356                  retn ;~ 17C5:5556

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2b783: 	goto loc_2b783;
        case m2c::ksub_2b770: 	goto sub_2b770;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b787(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b787:
    _begin:
#undef var_4
#define var_4 -4
	// 94367 var_4           = word ptr -4 ;~ 17C5:5557
#undef var_2
#define var_2 -2
	// 94368 var_2           = word ptr -2 ;~ 17C5:5557
#undef arg_0
#define arg_0 4
	// 94369 arg_0           = word ptr  4 ;~ 17C5:5557
cs=0x17c5;eip=0x005557; 	X(PUSH(bp));	// 94371                  push    bp ;~ 17C5:5557
cs=0x17c5;eip=0x005558; 	T(bp = sp;);	// 94372                  mov     bp, sp ;~ 17C5:5558
cs=0x17c5;eip=0x00555a; 	T(SUB(sp, 4));	// 94373                  sub     sp, 4 ;~ 17C5:555A
cs=0x17c5;eip=0x00555d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 94374                  push    [bp+arg_0] ;~ 17C5:555D
cs=0x17c5;eip=0x005560; 	J(CALL(sub_34dc0,0));	// 94375                  call    sub_34DC0 ;~ 17C5:5560
cs=0x17c5;eip=0x005563; 	T(ADD(sp, 2));	// 94376                  add     sp, 2 ;~ 17C5:5563
cs=0x17c5;eip=0x005566; 	X(MOV(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 94377                  mov     [bp+arg_0], ax ;~ 17C5:5566
cs=0x17c5;eip=0x005569; 	T(CMP(ax, 4));	// 94378                  cmp     ax, 4 ;~ 17C5:5569
cs=0x17c5;eip=0x00556c; 	J(JGE(loc_2b7a3));	// 94379                  jge     short loc_2B7A3 ;~ 17C5:556C
cs=0x17c5;eip=0x00556e; 	T(ax = 1;);	// 94380                  mov     ax, 1 ;~ 17C5:556E
cs=0x17c5;eip=0x005571; 	J(JMP(loc_2b7d7));	// 94381                  jmp     short loc_2B7D7 ;~ 17C5:5571
loc_2b7a3:
	// 5515 
cs=0x17c5;eip=0x005573; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 94385                  mov     ax, [bp+arg_0] ;~ 17C5:5573
cs=0x17c5;eip=0x005576; 	T(SAR(ax, 1));	// 94386                  sar     ax, 1 ;~ 17C5:5576
cs=0x17c5;eip=0x005578; 	T(SAR(ax, 1));	// 94387                  sar     ax, 1 ;~ 17C5:5578
cs=0x17c5;eip=0x00557a; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 94388                  mov     [bp+var_4], ax ;~ 17C5:557A
loc_2b7ad:
	// 5516 
cs=0x17c5;eip=0x00557d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 94391                  mov     ax, [bp+arg_0] ;~ 17C5:557D
cs=0x17c5;eip=0x005580; 	T(CWD);	// 94392                  cwd ;~ 17C5:5580
cs=0x17c5;eip=0x005581; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_4))));	// 94393                  mov     cx, [bp+var_4] ;~ 17C5:5581
cs=0x17c5;eip=0x005584; 	T(IDIV2(cx));	// 94394                  idiv    cx ;~ 17C5:5584
cs=0x17c5;eip=0x005586; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 94395                  mov     [bp+var_2], ax ;~ 17C5:5586
cs=0x17c5;eip=0x005589; 	T(ax = cx;);	// 94396                  mov     ax, cx ;~ 17C5:5589
cs=0x17c5;eip=0x00558b; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_2))));	// 94397                  add     ax, [bp+var_2] ;~ 17C5:558B
cs=0x17c5;eip=0x00558e; 	T(SAR(ax, 1));	// 94398                  sar     ax, 1 ;~ 17C5:558E
cs=0x17c5;eip=0x005590; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 94399                  mov     [bp+var_4], ax ;~ 17C5:5590
cs=0x17c5;eip=0x005593; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_2))));	// 94400                  sub     ax, [bp+var_2] ;~ 17C5:5593
cs=0x17c5;eip=0x005596; 	X(PUSH(ax));	// 94401                  push    ax ;~ 17C5:5596
cs=0x17c5;eip=0x005597; 	J(CALL(sub_34dc0,0));	// 94402                  call    sub_34DC0 ;~ 17C5:5597
cs=0x17c5;eip=0x00559a; 	T(ADD(sp, 2));	// 94403                  add     sp, 2 ;~ 17C5:559A
cs=0x17c5;eip=0x00559d; 	T(CMP(ax, 1));	// 94404                  cmp     ax, 1 ;~ 17C5:559D
cs=0x17c5;eip=0x0055a0; 	J(JG(loc_2b7ad));	// 94405                  jg      short loc_2B7AD ;~ 17C5:55A0
cs=0x17c5;eip=0x0055a2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 94406                  mov     ax, [bp+var_4] ;~ 17C5:55A2
cs=0x17c5;eip=0x0055a5; 	J({;});	// 94407                  jmp     short $+2 ;~ 17C5:55A5
loc_2b7d7:
	// 5517 
cs=0x17c5;eip=0x0055a7; 	T(sp = bp;);	// 94412                  mov     sp, bp ;~ 17C5:55A7
cs=0x17c5;eip=0x0055a9; 	X(POP(bp));	// 94413                  pop     bp ;~ 17C5:55A9
cs=0x17c5;eip=0x0055aa; 	J(RETN(0));	// 94414                  retn ;~ 17C5:55AA

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2b7a3: 	goto loc_2b7a3;
        case m2c::kloc_2b7ad: 	goto loc_2b7ad;
        case m2c::kloc_2b7d7: 	goto loc_2b7d7;
        case m2c::ksub_2b787: 	goto sub_2b787;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2b7db(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2b7db:
    _begin:
#undef var_e
#define var_e -0x0E
	// 94424 var_E           = word ptr -0Eh ;~ 17C5:55AB
#undef var_c
#define var_c -0x0C
	// 94425 var_C           = word ptr -0Ch ;~ 17C5:55AB
#undef var_a
#define var_a -0x0A
	// 94426 var_A           = word ptr -0Ah ;~ 17C5:55AB
#undef var_8
#define var_8 -8
	// 94427 var_8           = word ptr -8 ;~ 17C5:55AB
#undef var_6
#define var_6 -6
	// 94428 var_6           = word ptr -6 ;~ 17C5:55AB
#undef var_4
#define var_4 -4
	// 94429 var_4           = word ptr -4 ;~ 17C5:55AB
#undef var_2
#define var_2 -2
	// 94430 var_2           = word ptr -2 ;~ 17C5:55AB
cs=0x17c5;eip=0x0055ab; 	X(PUSH(bp));	// 94435                  push    bp ;~ 17C5:55AB
cs=0x17c5;eip=0x0055ac; 	T(bp = sp;);	// 94436                  mov     bp, sp ;~ 17C5:55AC
cs=0x17c5;eip=0x0055ae; 	T(SUB(sp, 0x0E));	// 94437                  sub     sp, 0Eh ;~ 17C5:55AE
cs=0x17c5;eip=0x0055b1; 	X(PUSH(si));	// 94438                  push    si ;~ 17C5:55B1
cs=0x17c5;eip=0x0055b2; 	T(ax = word_51a0a;);	// 94439                  mov     ax, ds:word_51A0A ;~ 17C5:55B2
cs=0x17c5;eip=0x0055b5; 	T(dx = word_51a0c;);	// 94440                  mov     dx, ds:word_51A0C ;~ 17C5:55B5
cs=0x17c5;eip=0x0055b9; 	X(word_5224c = ax;);	// 94441                  mov     ds:word_5224C, ax ;~ 17C5:55B9
cs=0x17c5;eip=0x0055bc; 	X(word_5224e = dx;);	// 94442                  mov     ds:word_5224E, dx ;~ 17C5:55BC
cs=0x17c5;eip=0x0055c0; 	X(word_5142e = ax;);	// 94443                  mov     ds:word_5142E, ax ;~ 17C5:55C0
cs=0x17c5;eip=0x0055c3; 	X(word_51430 = dx;);	// 94444                  mov     ds:word_51430, dx ;~ 17C5:55C3
cs=0x17c5;eip=0x0055c7; 	T(ax = word_51a28;);	// 94445                  mov     ax, ds:word_51A28 ;~ 17C5:55C7
cs=0x17c5;eip=0x0055ca; 	T(dx = word_51a2a;);	// 94446                  mov     dx, ds:word_51A2A ;~ 17C5:55CA
cs=0x17c5;eip=0x0055ce; 	X(word_51704 = ax;);	// 94447                  mov     ds:word_51704, ax ;~ 17C5:55CE
cs=0x17c5;eip=0x0055d1; 	X(word_51706 = dx;);	// 94448                  mov     ds:word_51706, dx ;~ 17C5:55D1
cs=0x17c5;eip=0x0055d5; 	T(SUB(ax, ax));	// 94449                  sub     ax, ax ;~ 17C5:55D5
cs=0x17c5;eip=0x0055d7; 	T(dx = 0x10;);	// 94450                  mov     dx, 10h ;~ 17C5:55D7
cs=0x17c5;eip=0x0055da; 	T(SUB(ax, word_51a28));	// 94451                  sub     ax, ds:word_51A28 ;~ 17C5:55DA
cs=0x17c5;eip=0x0055de; 	T(SBB(dx, word_51a2a));	// 94452                  sbb     dx, ds:word_51A2A ;~ 17C5:55DE
cs=0x17c5;eip=0x0055e2; 	X(word_52254 = ax;);	// 94453                  mov     ds:word_52254, ax ;~ 17C5:55E2
cs=0x17c5;eip=0x0055e5; 	X(word_52256 = dx;);	// 94454                  mov     ds:word_52256, dx ;~ 17C5:55E5
cs=0x17c5;eip=0x0055e9; 	T(ax = word_4e2fe;);	// 94455                  mov     ax, ds:word_4E2FE ;~ 17C5:55E9
cs=0x17c5;eip=0x0055ec; 	T(ADD(ax, 0x18));	// 94456                  add     ax, 18h ;~ 17C5:55EC
cs=0x17c5;eip=0x0055ef; 	X(word_5170e = ax;);	// 94457                  mov     ds:word_5170E, ax ;~ 17C5:55EF
cs=0x17c5;eip=0x0055f2; 	T(ax = word_4e2fe;);	// 94458                  mov     ax, ds:word_4E2FE ;~ 17C5:55F2
cs=0x17c5;eip=0x0055f5; 	X(word_5225c = ax;);	// 94459                  mov     ds:word_5225C, ax ;~ 17C5:55F5
cs=0x17c5;eip=0x0055f8; 	T(ax = 8;);	// 94460                  mov     ax, 8 ;~ 17C5:55F8
cs=0x17c5;eip=0x0055fb; 	X(PUSH(ax));	// 94461                  push    ax ;~ 17C5:55FB
cs=0x17c5;eip=0x0055fc; 	T(ax = 2;);	// 94462                  mov     ax, 2 ;~ 17C5:55FC
cs=0x17c5;eip=0x0055ff; 	X(PUSH(ax));	// 94463                  push    ax ;~ 17C5:55FF
cs=0x17c5;eip=0x005600; 	X(PUSH(word_4992e));	// 94464                  push    word_4992E ;~ 17C5:5600
cs=0x17c5;eip=0x005604; 	J(CALL(sub_33194,0));	// 94465                  call    sub_33194 ;~ 17C5:5604
cs=0x17c5;eip=0x005607; 	T(ADD(sp, 6));	// 94466                  add     sp, 6 ;~ 17C5:5607
cs=0x17c5;eip=0x00560a; 	X(word_4992e = ax;);	// 94467                  mov     word_4992E, ax ;~ 17C5:560A
cs=0x17c5;eip=0x00560d; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 94468                  mov     [bp+var_2], ax ;~ 17C5:560D
cs=0x17c5;eip=0x005610; 	T(ax = word_520c0;);	// 94469                  mov     ax, ds:word_520C0 ;~ 17C5:5610
cs=0x17c5;eip=0x005613; 	J(return _group38(m2c::kloc_2be10, _state););	// 94470                  jmp     loc_2BE10 ;~ 17C5:5613
loc_2b846:
	// 5518 
cs=0x17c5;eip=0x005616; 	T(ax = word_4e2f8;);	// 94475                  mov     ax, ds:word_4E2F8 ;~ 17C5:5616
cs=0x17c5;eip=0x005619; 	X(word_527da = ax;);	// 94476                  mov     ds:word_527DA, ax ;~ 17C5:5619
cs=0x17c5;eip=0x00561c; 	T(ax = word_4e2fa;);	// 94477                  mov     ax, ds:word_4E2FA ;~ 17C5:561C
cs=0x17c5;eip=0x00561f; 	X(word_520c4 = ax;);	// 94478                  mov     ds:word_520C4, ax ;~ 17C5:561F
cs=0x17c5;eip=0x005622; 	T(ax = word_4e2fc;);	// 94479                  mov     ax, ds:word_4E2FC ;~ 17C5:5622
cs=0x17c5;eip=0x005625; 	X(word_51714 = ax;);	// 94480                  mov     ds:word_51714, ax ;~ 17C5:5625
cs=0x17c5;eip=0x005628; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94481                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5628
loc_2b85b:
	// 5519 
cs=0x17c5;eip=0x00562b; 	T(ax = word_4e2f8;);	// 94486                  mov     ax, ds:word_4E2F8 ;~ 17C5:562B
cs=0x17c5;eip=0x00562e; 	T(ADD(ah, 0x80));	// 94487                  add     ah, 80h ;~ 17C5:562E
cs=0x17c5;eip=0x005631; 	X(word_527da = ax;);	// 94488                  mov     ds:word_527DA, ax ;~ 17C5:5631
cs=0x17c5;eip=0x005634; 	T(ax = word_4e2fa;);	// 94489                  mov     ax, ds:word_4E2FA ;~ 17C5:5634
cs=0x17c5;eip=0x005637; 	T(NEG(ax));	// 94490                  neg     ax ;~ 17C5:5637
cs=0x17c5;eip=0x005639; 	X(word_520c4 = ax;);	// 94491                  mov     ds:word_520C4, ax ;~ 17C5:5639
cs=0x17c5;eip=0x00563c; 	T(ax = word_4e2fc;);	// 94492                  mov     ax, ds:word_4E2FC ;~ 17C5:563C
cs=0x17c5;eip=0x00563f; 	T(NEG(ax));	// 94493                  neg     ax ;~ 17C5:563F
cs=0x17c5;eip=0x005641; 	X(word_51714 = ax;);	// 94494                  mov     ds:word_51714, ax ;~ 17C5:5641
cs=0x17c5;eip=0x005644; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94495                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5644
loc_2b877:
	// 5520 
cs=0x17c5;eip=0x005647; 	T(ax = word_4e2f8;);	// 94499                  mov     ax, ds:word_4E2F8 ;~ 17C5:5647
cs=0x17c5;eip=0x00564a; 	T(ADD(ah, 0x40));	// 94500                  add     ah, 40h ; '@' ;~ 17C5:564A
cs=0x17c5;eip=0x00564d; 	X(word_527da = ax;);	// 94501                  mov     ds:word_527DA, ax ;~ 17C5:564D
cs=0x17c5;eip=0x005650; 	T(ax = word_4e2fc;);	// 94502                  mov     ax, ds:word_4E2FC ;~ 17C5:5650
cs=0x17c5;eip=0x005653; 	T(NEG(ax));	// 94503                  neg     ax ;~ 17C5:5653
cs=0x17c5;eip=0x005655; 	X(word_520c4 = ax;);	// 94504                  mov     ds:word_520C4, ax ;~ 17C5:5655
cs=0x17c5;eip=0x005658; 	T(ax = word_4e2fa;);	// 94505                  mov     ax, ds:word_4E2FA ;~ 17C5:5658
cs=0x17c5;eip=0x00565b; 	X(word_51714 = ax;);	// 94506                  mov     ds:word_51714, ax ;~ 17C5:565B
cs=0x17c5;eip=0x00565e; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94507                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:565E
loc_2b891:
	// 5521 
cs=0x17c5;eip=0x005661; 	T(ax = word_4e2f8;);	// 94511                  mov     ax, ds:word_4E2F8 ;~ 17C5:5661
cs=0x17c5;eip=0x005664; 	T(SUB(ax, 0x4000));	// 94512                  sub     ax, 4000h ;~ 17C5:5664
cs=0x17c5;eip=0x005667; 	X(word_527da = ax;);	// 94513                  mov     ds:word_527DA, ax ;~ 17C5:5667
cs=0x17c5;eip=0x00566a; 	T(ax = word_4e2fc;);	// 94514                  mov     ax, ds:word_4E2FC ;~ 17C5:566A
cs=0x17c5;eip=0x00566d; 	X(word_520c4 = ax;);	// 94515                  mov     ds:word_520C4, ax ;~ 17C5:566D
cs=0x17c5;eip=0x005670; 	T(ax = word_4e2fa;);	// 94516                  mov     ax, ds:word_4E2FA ;~ 17C5:5670
cs=0x17c5;eip=0x005673; 	T(NEG(ax));	// 94517                  neg     ax ;~ 17C5:5673
cs=0x17c5;eip=0x005675; 	X(word_51714 = ax;);	// 94518                  mov     ds:word_51714, ax ;~ 17C5:5675
cs=0x17c5;eip=0x005678; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94519                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5678
loc_2b8ab:
	// 5522 
cs=0x17c5;eip=0x00567b; 	T(ax = word_492f4;);	// 94523                  mov     ax, word_492F4 ;~ 17C5:567B
cs=0x17c5;eip=0x00567e; 	T(INC(ax));	// 94524                  inc     ax ;~ 17C5:567E
cs=0x17c5;eip=0x00567f; 	T(CWD);	// 94525                  cwd ;~ 17C5:567F
cs=0x17c5;eip=0x005680; 	T(SUB(ax, dx));	// 94526                  sub     ax, dx ;~ 17C5:5680
cs=0x17c5;eip=0x005682; 	T(SAR(ax, 1));	// 94527                  sar     ax, 1 ;~ 17C5:5682
cs=0x17c5;eip=0x005684; 	T(cx = word_49918;);	// 94528                  mov     cx, word_49918 ;~ 17C5:5684
cs=0x17c5;eip=0x005688; 	T(SUB(cx, ax));	// 94529                  sub     cx, ax ;~ 17C5:5688
cs=0x17c5;eip=0x00568a; 	T(DEC(cx));	// 94530                  dec     cx ;~ 17C5:568A
cs=0x17c5;eip=0x00568b; 	T(AND(cx, 0x0F));	// 94531                  and     cx, 0Fh ;~ 17C5:568B
cs=0x17c5;eip=0x00568e; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), cx));	// 94532                  mov     [bp+var_E], cx ;~ 17C5:568E
cs=0x17c5;eip=0x005691; 	T(si = cx;);	// 94533                  mov     si, cx ;~ 17C5:5691
cs=0x17c5;eip=0x005693; 	T(cl = 4;);	// 94534                  mov     cl, 4 ;~ 17C5:5693
cs=0x17c5;eip=0x005695; 	T(SHL(si, cl));	// 94535                  shl     si, cl ;~ 17C5:5695
cs=0x17c5;eip=0x005697; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7F4C))));	// 94536                  mov     ax, [si-7F4Ch] ;~ 17C5:5697
cs=0x17c5;eip=0x00569b; 	X(word_527da = ax;);	// 94537                  mov     ds:word_527DA, ax ;~ 17C5:569B
cs=0x17c5;eip=0x00569e; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7F4A))));	// 94538                  mov     ax, [si-7F4Ah] ;~ 17C5:569E
cs=0x17c5;eip=0x0056a2; 	X(word_520c4 = ax;);	// 94539                  mov     ds:word_520C4, ax ;~ 17C5:56A2
cs=0x17c5;eip=0x0056a5; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7F48))));	// 94540                  mov     ax, [si-7F48h] ;~ 17C5:56A5
cs=0x17c5;eip=0x0056a9; 	X(word_51714 = ax;);	// 94541                  mov     ds:word_51714, ax ;~ 17C5:56A9
cs=0x17c5;eip=0x0056ac; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7F56))));	// 94542                  mov     ax, [si-7F56h] ;~ 17C5:56AC
cs=0x17c5;eip=0x0056b0; 	T(MOV(dx, *(dw*)(raddr(ds,si-0x7F54))));	// 94543                  mov     dx, [si-7F54h] ;~ 17C5:56B0
cs=0x17c5;eip=0x0056b4; 	X(word_5142e = ax;);	// 94544                  mov     ds:word_5142E, ax ;~ 17C5:56B4
cs=0x17c5;eip=0x0056b7; 	X(word_51430 = dx;);	// 94545                  mov     ds:word_51430, dx ;~ 17C5:56B7
cs=0x17c5;eip=0x0056bb; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7F52))));	// 94546                  mov     ax, [si-7F52h] ;~ 17C5:56BB
cs=0x17c5;eip=0x0056bf; 	T(MOV(dx, *(dw*)(raddr(ds,si-0x7F50))));	// 94547                  mov     dx, [si-7F50h] ;~ 17C5:56BF
cs=0x17c5;eip=0x0056c3; 	X(word_51704 = ax;);	// 94548                  mov     ds:word_51704, ax ;~ 17C5:56C3
cs=0x17c5;eip=0x0056c6; 	X(word_51706 = dx;);	// 94549                  mov     ds:word_51706, dx ;~ 17C5:56C6
cs=0x17c5;eip=0x0056ca; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7F4E))));	// 94550                  mov     ax, [si-7F4Eh] ;~ 17C5:56CA
cs=0x17c5;eip=0x0056ce; 	X(word_5170e = ax;);	// 94551                  mov     ds:word_5170E, ax ;~ 17C5:56CE
cs=0x17c5;eip=0x0056d1; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94552                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:56D1
loc_2b904:
	// 5523 
cs=0x17c5;eip=0x0056d4; 	T(ax = word_4e2f8;);	// 94557                  mov     ax, ds:word_4E2F8 ; jumptable 0002BE4E case 133 ;~ 17C5:56D4
cs=0x17c5;eip=0x0056d7; 	T(SUB(ax, 0x4000));	// 94558                  sub     ax, 4000h ;~ 17C5:56D7
cs=0x17c5;eip=0x0056da; 	X(word_527da = ax;);	// 94559                  mov     ds:word_527DA, ax ;~ 17C5:56DA
cs=0x17c5;eip=0x0056dd; 	X(word_520c4 = 0;);	// 94560                  mov     ds:word_520C4, 0 ;~ 17C5:56DD
cs=0x17c5;eip=0x0056e3; 	X(word_51714 = 0;);	// 94561                  mov     ds:word_51714, 0 ;~ 17C5:56E3
cs=0x17c5;eip=0x0056e9; 	T(ax = 0x18;);	// 94562                  mov     ax, 18h ;~ 17C5:56E9
cs=0x17c5;eip=0x0056ec; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94563                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:56EC
cs=0x17c5;eip=0x0056ef; 	T(SHL(ax, cl));	// 94564                  shl     ax, cl ;~ 17C5:56EF
cs=0x17c5;eip=0x0056f1; 	X(PUSH(ax));	// 94565                  push    ax ;~ 17C5:56F1
cs=0x17c5;eip=0x0056f2; 	T(ax = word_4e2f8;);	// 94566                  mov     ax, ds:word_4E2F8 ;~ 17C5:56F2
cs=0x17c5;eip=0x0056f5; 	T(ADD(ah, 0x40));	// 94567                  add     ah, 40h ; '@' ;~ 17C5:56F5
cs=0x17c5;eip=0x0056f8; 	X(PUSH(ax));	// 94568                  push    ax ;~ 17C5:56F8
cs=0x17c5;eip=0x0056f9; 	J(CALL(sub_333a8,0));	// 94569                  call    sub_333A8 ;~ 17C5:56F9
cs=0x17c5;eip=0x0056fc; 	T(ADD(sp, 4));	// 94570                  add     sp, 4 ;~ 17C5:56FC
cs=0x17c5;eip=0x0056ff; 	T(CWD);	// 94571                  cwd ;~ 17C5:56FF
cs=0x17c5;eip=0x005700; 	T(ADD(ax, word_51a0a));	// 94572                  add     ax, ds:word_51A0A ;~ 17C5:5700
cs=0x17c5;eip=0x005704; 	T(ADC(dx, word_51a0c));	// 94573                  adc     dx, ds:word_51A0C ;~ 17C5:5704
cs=0x17c5;eip=0x005708; 	X(word_5142e = ax;);	// 94574                  mov     ds:word_5142E, ax ;~ 17C5:5708
cs=0x17c5;eip=0x00570b; 	X(word_51430 = dx;);	// 94575                  mov     ds:word_51430, dx ;~ 17C5:570B
cs=0x17c5;eip=0x00570f; 	T(ax = 0x18;);	// 94576                  mov     ax, 18h ;~ 17C5:570F
cs=0x17c5;eip=0x005712; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94577                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:5712
cs=0x17c5;eip=0x005715; 	T(SHL(ax, cl));	// 94578                  shl     ax, cl ;~ 17C5:5715
cs=0x17c5;eip=0x005717; 	X(PUSH(ax));	// 94579                  push    ax ;~ 17C5:5717
cs=0x17c5;eip=0x005718; 	T(ax = word_4e2f8;);	// 94580                  mov     ax, ds:word_4E2F8 ;~ 17C5:5718
cs=0x17c5;eip=0x00571b; 	T(ADD(ah, 0x40));	// 94581                  add     ah, 40h ; '@' ;~ 17C5:571B
cs=0x17c5;eip=0x00571e; 	X(PUSH(ax));	// 94582                  push    ax ;~ 17C5:571E
cs=0x17c5;eip=0x00571f; 	J(CALL(sub_333c0,0));	// 94583                  call    sub_333C0 ;~ 17C5:571F
cs=0x17c5;eip=0x005722; 	T(ADD(sp, 4));	// 94584                  add     sp, 4 ;~ 17C5:5722
cs=0x17c5;eip=0x005725; 	T(CWD);	// 94585                  cwd ;~ 17C5:5725
cs=0x17c5;eip=0x005726; 	T(ADD(ax, word_51a28));	// 94586                  add     ax, ds:word_51A28 ;~ 17C5:5726
cs=0x17c5;eip=0x00572a; 	T(ADC(dx, word_51a2a));	// 94587                  adc     dx, ds:word_51A2A ;~ 17C5:572A
cs=0x17c5;eip=0x00572e; 	X(word_51704 = ax;);	// 94588                  mov     ds:word_51704, ax ;~ 17C5:572E
cs=0x17c5;eip=0x005731; 	X(word_51706 = dx;);	// 94589                  mov     ds:word_51706, dx ;~ 17C5:5731
cs=0x17c5;eip=0x005735; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94590                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5735
loc_2b968:
	// 5524 
cs=0x17c5;eip=0x005738; 	X(word_527da = 0x8000;);	// 94595                  mov     ds:word_527DA, 8000h ; jumptable 0002BE4E case 134 ;~ 17C5:5738
cs=0x17c5;eip=0x00573e; 	X(word_520c4 = 0;);	// 94596                  mov     ds:word_520C4, 0 ;~ 17C5:573E
cs=0x17c5;eip=0x005744; 	X(word_51714 = 0;);	// 94597                  mov     ds:word_51714, 0 ;~ 17C5:5744
cs=0x17c5;eip=0x00574a; 	T(ax = 0x18;);	// 94598                  mov     ax, 18h ;~ 17C5:574A
cs=0x17c5;eip=0x00574d; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94599                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:574D
cs=0x17c5;eip=0x005750; 	T(SHL(ax, cl));	// 94600                  shl     ax, cl ;~ 17C5:5750
cs=0x17c5;eip=0x005752; 	T(CWD);	// 94601                  cwd ;~ 17C5:5752
cs=0x17c5;eip=0x005753; 	T(ADD(ax, word_51a28));	// 94602                  add     ax, ds:word_51A28 ;~ 17C5:5753
cs=0x17c5;eip=0x005757; 	T(ADC(dx, word_51a2a));	// 94603                  adc     dx, ds:word_51A2A ;~ 17C5:5757
cs=0x17c5;eip=0x00575b; 	X(word_51704 = ax;);	// 94604                  mov     ds:word_51704, ax ;~ 17C5:575B
cs=0x17c5;eip=0x00575e; 	X(word_51706 = dx;);	// 94605                  mov     ds:word_51706, dx ;~ 17C5:575E
cs=0x17c5;eip=0x005762; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94606                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5762
loc_2b995:
	// 5525 
cs=0x17c5;eip=0x005765; 	T(ax = word_4e2f8;);	// 94611                  mov     ax, ds:word_4E2F8 ; jumptable 0002BE4E case 135 ;~ 17C5:5765
cs=0x17c5;eip=0x005768; 	X(word_527da = ax;);	// 94612                  mov     ds:word_527DA, ax ;~ 17C5:5768
cs=0x17c5;eip=0x00576b; 	X(word_520c4 = 0;);	// 94613                  mov     ds:word_520C4, 0 ;~ 17C5:576B
cs=0x17c5;eip=0x005771; 	X(word_51714 = 0;);	// 94614                  mov     ds:word_51714, 0 ;~ 17C5:5771
cs=0x17c5;eip=0x005777; 	T(ax = 0x18;);	// 94615                  mov     ax, 18h ;~ 17C5:5777
cs=0x17c5;eip=0x00577a; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94616                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:577A
cs=0x17c5;eip=0x00577d; 	T(SHL(ax, cl));	// 94617                  shl     ax, cl ;~ 17C5:577D
cs=0x17c5;eip=0x00577f; 	X(PUSH(ax));	// 94618                  push    ax ;~ 17C5:577F
cs=0x17c5;eip=0x005780; 	T(ax = word_4e2f8;);	// 94619                  mov     ax, ds:word_4E2F8 ;~ 17C5:5780
cs=0x17c5;eip=0x005783; 	T(ADD(ah, 0x80));	// 94620                  add     ah, 80h ;~ 17C5:5783
cs=0x17c5;eip=0x005786; 	X(PUSH(ax));	// 94621                  push    ax ;~ 17C5:5786
cs=0x17c5;eip=0x005787; 	J(CALL(sub_333a8,0));	// 94622                  call    sub_333A8 ;~ 17C5:5787
cs=0x17c5;eip=0x00578a; 	T(ADD(sp, 4));	// 94623                  add     sp, 4 ;~ 17C5:578A
cs=0x17c5;eip=0x00578d; 	T(CWD);	// 94624                  cwd ;~ 17C5:578D
cs=0x17c5;eip=0x00578e; 	T(ADD(ax, word_51a0a));	// 94625                  add     ax, ds:word_51A0A ;~ 17C5:578E
cs=0x17c5;eip=0x005792; 	T(ADC(dx, word_51a0c));	// 94626                  adc     dx, ds:word_51A0C ;~ 17C5:5792
cs=0x17c5;eip=0x005796; 	X(word_5142e = ax;);	// 94627                  mov     ds:word_5142E, ax ;~ 17C5:5796
cs=0x17c5;eip=0x005799; 	X(word_51430 = dx;);	// 94628                  mov     ds:word_51430, dx ;~ 17C5:5799
cs=0x17c5;eip=0x00579d; 	T(ax = 0x18;);	// 94629                  mov     ax, 18h ;~ 17C5:579D
cs=0x17c5;eip=0x0057a0; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94630                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:57A0
cs=0x17c5;eip=0x0057a3; 	T(SHL(ax, cl));	// 94631                  shl     ax, cl ;~ 17C5:57A3
cs=0x17c5;eip=0x0057a5; 	X(PUSH(ax));	// 94632                  push    ax ;~ 17C5:57A5
cs=0x17c5;eip=0x0057a6; 	T(ax = word_4e2f8;);	// 94633                  mov     ax, ds:word_4E2F8 ;~ 17C5:57A6
cs=0x17c5;eip=0x0057a9; 	T(ADD(ah, 0x80));	// 94634                  add     ah, 80h ;~ 17C5:57A9
cs=0x17c5;eip=0x0057ac; 	X(PUSH(ax));	// 94635                  push    ax ;~ 17C5:57AC
cs=0x17c5;eip=0x0057ad; 	J(CALL(sub_333c0,0));	// 94636                  call    sub_333C0 ;~ 17C5:57AD
cs=0x17c5;eip=0x0057b0; 	T(ADD(sp, 4));	// 94637                  add     sp, 4 ;~ 17C5:57B0
cs=0x17c5;eip=0x0057b3; 	T(CWD);	// 94638                  cwd ;~ 17C5:57B3
cs=0x17c5;eip=0x0057b4; 	T(ADD(ax, word_51a28));	// 94639                  add     ax, ds:word_51A28 ;~ 17C5:57B4
cs=0x17c5;eip=0x0057b8; 	T(ADC(dx, word_51a2a));	// 94640                  adc     dx, ds:word_51A2A ;~ 17C5:57B8
cs=0x17c5;eip=0x0057bc; 	X(word_51704 = ax;);	// 94641                  mov     ds:word_51704, ax ;~ 17C5:57BC
cs=0x17c5;eip=0x0057bf; 	X(word_51706 = dx;);	// 94642                  mov     ds:word_51706, dx ;~ 17C5:57BF
cs=0x17c5;eip=0x0057c3; 	T(ax = 4;);	// 94643                  mov     ax, 4 ;~ 17C5:57C3
cs=0x17c5;eip=0x0057c6; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94644                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:57C6
cs=0x17c5;eip=0x0057c9; 	T(SHL(ax, cl));	// 94645                  shl     ax, cl ;~ 17C5:57C9
cs=0x17c5;eip=0x0057cb; 	T(ADD(ax, word_4e2fe));	// 94646                  add     ax, ds:word_4E2FE ;~ 17C5:57CB
cs=0x17c5;eip=0x0057cf; 	X(word_5170e = ax;);	// 94647                  mov     ds:word_5170E, ax ;~ 17C5:57CF
cs=0x17c5;eip=0x0057d2; 	J(return _group38(m2c::k__def_2be4e, _state););	// 94648                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:57D2
loc_2ba05:
	// 5526 
cs=0x17c5;eip=0x0057d5; 	T(CMP(word_520c0, 0x89));	// 94653                  cmp     ds:word_520C0, 89h ; jumptable 0002BE4E cases 136,137,139 ;~ 17C5:57D5
cs=0x17c5;eip=0x0057db; 	J(JZ(loc_2ba38));	// 94654                  jz      short loc_2BA38 ;~ 17C5:57DB
cs=0x17c5;eip=0x0057dd; 	T(CMP(word_5268c, 1));	// 94655                  cmp     ds:word_5268C, 1 ;~ 17C5:57DD
cs=0x17c5;eip=0x0057e2; 	J(JNZ(loc_2ba26));	// 94656                  jnz     short loc_2BA26 ;~ 17C5:57E2
cs=0x17c5;eip=0x0057e4; 	T(TEST(*(db*)(&word_49922), 0x80));	// 94657                  test    byte ptr word_49922, 80h ;~ 17C5:57E4
cs=0x17c5;eip=0x0057e9; 	J(JNZ(loc_2ba24));	// 94658                  jnz     short loc_2BA24 ;~ 17C5:57E9
cs=0x17c5;eip=0x0057eb; 	T(ax = word_49922;);	// 94659                  mov     ax, word_49922 ;~ 17C5:57EB
cs=0x17c5;eip=0x0057ee; 	T(ADD(ax, 0x20));	// 94660                  add     ax, 20h ; ' ' ;~ 17C5:57EE
cs=0x17c5;eip=0x0057f1; 	X(word_5225e = ax;);	// 94661                  mov     ds:word_5225E, ax ;~ 17C5:57F1
loc_2ba24:
	// 5527 
cs=0x17c5;eip=0x0057f4; 	J(JMP(loc_2ba36));	// 94664                  jmp     short loc_2BA36 ;~ 17C5:57F4
loc_2ba26:
	// 5528 
cs=0x17c5;eip=0x0057f6; 	T(TEST(*(db*)(&word_49924), 0x80));	// 94668                  test    byte ptr word_49924, 80h ;~ 17C5:57F6
cs=0x17c5;eip=0x0057fb; 	J(JNZ(loc_2ba36));	// 94669                  jnz     short loc_2BA36 ;~ 17C5:57FB
cs=0x17c5;eip=0x0057fd; 	T(ax = word_49924;);	// 94670                  mov     ax, word_49924 ;~ 17C5:57FD
cs=0x17c5;eip=0x005800; 	T(ADD(ax, 0x40));	// 94671                  add     ax, 40h ; '@' ;~ 17C5:5800
cs=0x17c5;eip=0x005803; 	X(word_5225e = ax;);	// 94672                  mov     ds:word_5225E, ax ;~ 17C5:5803
loc_2ba36:
	// 5529 
cs=0x17c5;eip=0x005806; 	J(JMP(loc_2ba45));	// 94676                  jmp     short loc_2BA45 ;~ 17C5:5806
loc_2ba38:
	// 5530 
cs=0x17c5;eip=0x005808; 	T(CMP(word_4993e, 0));	// 94680                  cmp     word_4993E, 0 ;~ 17C5:5808
cs=0x17c5;eip=0x00580d; 	J(JNZ(loc_2ba45));	// 94681                  jnz     short loc_2BA45 ;~ 17C5:580D
cs=0x17c5;eip=0x00580f; 	T(ax = word_50b70;);	// 94682                  mov     ax, ds:word_50B70 ;~ 17C5:580F
cs=0x17c5;eip=0x005812; 	X(word_5225e = ax;);	// 94683                  mov     ds:word_5225E, ax ;~ 17C5:5812
loc_2ba45:
	// 5531 
cs=0x17c5;eip=0x005815; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 94687                  mov     ax, [bp+var_2] ;~ 17C5:5815
cs=0x17c5;eip=0x005818; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 94688                  mov     [bp+var_4], ax ;~ 17C5:5818
cs=0x17c5;eip=0x00581b; 	T(TEST(*(db*)(&word_5225e), 0x40));	// 94689                  test    byte ptr ds:word_5225E, 40h ;~ 17C5:581B
cs=0x17c5;eip=0x005820; 	J(JZ(loc_2ba55));	// 94690                  jz      short loc_2BA55 ;~ 17C5:5820
cs=0x17c5;eip=0x005822; 	J(JMP(loc_2bb0b));	// 94691                  jmp     loc_2BB0B ;~ 17C5:5822
loc_2ba55:
	// 5532 
cs=0x17c5;eip=0x005825; 	T(TEST(*(db*)(&word_5225e), 0x20));	// 94695                  test    byte ptr ds:word_5225E, 20h ;~ 17C5:5825
cs=0x17c5;eip=0x00582a; 	J(JNZ(loc_2bad2));	// 94696                  jnz     short loc_2BAD2 ;~ 17C5:582A
cs=0x17c5;eip=0x00582c; 	T(ax = 0x18;);	// 94697                  mov     ax, 18h ;~ 17C5:582C
cs=0x17c5;eip=0x00582f; 	X(IMUL1_2(word_5225e));	// 94698                  imul    ds:word_5225E ;~ 17C5:582F
cs=0x17c5;eip=0x005833; 	T(si = ax;);	// 94699                  mov     si, ax ;~ 17C5:5833
cs=0x17c5;eip=0x005835; 	T(CMP(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 94700                  cmp     word ptr [si+0D22h], 0 ;~ 17C5:5835
cs=0x17c5;eip=0x00583a; 	J(JZ(loc_2baa7));	// 94701                  jz      short loc_2BAA7 ;~ 17C5:583A
cs=0x17c5;eip=0x00583c; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D14))));	// 94702                  mov     ax, [si+0D14h] ;~ 17C5:583C
cs=0x17c5;eip=0x005840; 	T(SUB(dx, dx));	// 94703                  sub     dx, dx ;~ 17C5:5840
cs=0x17c5;eip=0x005842; 	T(cl = 5;);	// 94704                  mov     cl, 5 ;~ 17C5:5842
loc_2ba74:
	// 5533 
cs=0x17c5;eip=0x005844; 	T(SHL(ax, 1));	// 94707                  shl     ax, 1 ;~ 17C5:5844
cs=0x17c5;eip=0x005846; 	T(RCL(dx, 1));	// 94708                  rcl     dx, 1 ;~ 17C5:5846
cs=0x17c5;eip=0x005848; 	T(DEC(cl));	// 94709                  dec     cl ;~ 17C5:5848
cs=0x17c5;eip=0x00584a; 	J(JZ(loc_2ba7e));	// 94710                  jz      short loc_2BA7E ;~ 17C5:584A
cs=0x17c5;eip=0x00584c; 	J(JMP(loc_2ba74));	// 94711                  jmp     short loc_2BA74 ;~ 17C5:584C
loc_2ba7e:
	// 5534 
cs=0x17c5;eip=0x00584e; 	X(word_5224c = ax;);	// 94715                  mov     ds:word_5224C, ax ;~ 17C5:584E
cs=0x17c5;eip=0x005851; 	X(word_5224e = dx;);	// 94716                  mov     ds:word_5224E, dx ;~ 17C5:5851
cs=0x17c5;eip=0x005855; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D16))));	// 94717                  mov     ax, [si+0D16h] ;~ 17C5:5855
cs=0x17c5;eip=0x005859; 	T(SUB(dx, dx));	// 94718                  sub     dx, dx ;~ 17C5:5859
cs=0x17c5;eip=0x00585b; 	T(cl = 5;);	// 94719                  mov     cl, 5 ;~ 17C5:585B
loc_2ba8d:
	// 5535 
cs=0x17c5;eip=0x00585d; 	T(SHL(ax, 1));	// 94722                  shl     ax, 1 ;~ 17C5:585D
cs=0x17c5;eip=0x00585f; 	T(RCL(dx, 1));	// 94723                  rcl     dx, 1 ;~ 17C5:585F
cs=0x17c5;eip=0x005861; 	T(DEC(cl));	// 94724                  dec     cl ;~ 17C5:5861
cs=0x17c5;eip=0x005863; 	J(JZ(loc_2ba97));	// 94725                  jz      short loc_2BA97 ;~ 17C5:5863
cs=0x17c5;eip=0x005865; 	J(JMP(loc_2ba8d));	// 94726                  jmp     short loc_2BA8D ;~ 17C5:5865
loc_2ba97:
	// 5536 
cs=0x17c5;eip=0x005867; 	X(word_52254 = ax;);	// 94730                  mov     ds:word_52254, ax ;~ 17C5:5867
cs=0x17c5;eip=0x00586a; 	X(word_52256 = dx;);	// 94731                  mov     ds:word_52256, dx ;~ 17C5:586A
cs=0x17c5;eip=0x00586e; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D18))));	// 94732                  mov     ax, [si+0D18h] ;~ 17C5:586E
cs=0x17c5;eip=0x005872; 	X(word_5225c = ax;);	// 94733                  mov     ds:word_5225C, ax ;~ 17C5:5872
cs=0x17c5;eip=0x005875; 	J(JMP(loc_2bacb));	// 94734                  jmp     short loc_2BACB ;~ 17C5:5875
loc_2baa7:
	// 5537 
cs=0x17c5;eip=0x005877; 	T(ax = 0x18;);	// 94738                  mov     ax, 18h ;~ 17C5:5877
cs=0x17c5;eip=0x00587a; 	X(IMUL1_2(word_5225e));	// 94739                  imul    ds:word_5225E ;~ 17C5:587A
cs=0x17c5;eip=0x00587e; 	T(si = ax;);	// 94740                  mov     si, ax ;~ 17C5:587E
cs=0x17c5;eip=0x005880; 	T(ax = word_4e2f8;);	// 94741                  mov     ax, ds:word_4E2F8 ;~ 17C5:5880
cs=0x17c5;eip=0x005883; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1C)), ax));	// 94742                  mov     [si+0D1Ch], ax ;~ 17C5:5883
cs=0x17c5;eip=0x005887; 	T(ax = word_4e2fa;);	// 94743                  mov     ax, ds:word_4E2FA ;~ 17C5:5887
cs=0x17c5;eip=0x00588a; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1E)), ax));	// 94744                  mov     [si+0D1Eh], ax ;~ 17C5:588A
cs=0x17c5;eip=0x00588e; 	T(CMP(word_4993e, 0));	// 94745                  cmp     word_4993E, 0 ;~ 17C5:588E
cs=0x17c5;eip=0x005893; 	J(JZ(loc_2bacb));	// 94746                  jz      short loc_2BACB ;~ 17C5:5893
cs=0x17c5;eip=0x005895; 	X(word_520c0 = 0x87;);	// 94747                  mov     ds:word_520C0, 87h ;~ 17C5:5895
loc_2bacb:
	// 5538 
cs=0x17c5;eip=0x00589b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 5));	// 94751                  mov     [bp+var_2], 5 ;~ 17C5:589B
cs=0x17c5;eip=0x0058a0; 	J(JMP(loc_2bb09));	// 94752                  jmp     short loc_2BB09 ;~ 17C5:58A0
loc_2bad2:
	// 5539 
cs=0x17c5;eip=0x0058a2; 	T(ax = word_5225e;);	// 94756                  mov     ax, ds:word_5225E ;~ 17C5:58A2
cs=0x17c5;eip=0x0058a5; 	T(AND(ax, 0x1F));	// 94757                  and     ax, 1Fh ;~ 17C5:58A5
cs=0x17c5;eip=0x0058a8; 	T(cx = 0x24;);	// 94758                  mov     cx, 24h ; '$' ;~ 17C5:58A8
cs=0x17c5;eip=0x0058ab; 	T(IMUL1_2(cx));	// 94759                  imul    cx ;~ 17C5:58AB
cs=0x17c5;eip=0x0058ad; 	T(si = ax;);	// 94760                  mov     si, ax ;~ 17C5:58AD
cs=0x17c5;eip=0x0058af; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A6))));	// 94761                  mov     ax, [si-76A6h] ;~ 17C5:58AF
cs=0x17c5;eip=0x0058b3; 	T(MOV(dx, *(dw*)(raddr(ds,si-0x76A4))));	// 94762                  mov     dx, [si-76A4h] ;~ 17C5:58B3
cs=0x17c5;eip=0x0058b7; 	X(word_5224c = ax;);	// 94763                  mov     ds:word_5224C, ax ;~ 17C5:58B7
cs=0x17c5;eip=0x0058ba; 	X(word_5224e = dx;);	// 94764                  mov     ds:word_5224E, dx ;~ 17C5:58BA
cs=0x17c5;eip=0x0058be; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A2))));	// 94765                  mov     ax, [si-76A2h] ;~ 17C5:58BE
cs=0x17c5;eip=0x0058c2; 	T(MOV(dx, *(dw*)(raddr(ds,si-0x76A0))));	// 94766                  mov     dx, [si-76A0h] ;~ 17C5:58C2
cs=0x17c5;eip=0x0058c6; 	X(word_52254 = ax;);	// 94767                  mov     ds:word_52254, ax ;~ 17C5:58C6
cs=0x17c5;eip=0x0058c9; 	X(word_52256 = dx;);	// 94768                  mov     ds:word_52256, dx ;~ 17C5:58C9
cs=0x17c5;eip=0x0058cd; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 94769                  mov     ax, [si-76A8h] ;~ 17C5:58CD
cs=0x17c5;eip=0x0058d1; 	X(word_5225c = ax;);	// 94770                  mov     ds:word_5225C, ax ;~ 17C5:58D1
cs=0x17c5;eip=0x0058d4; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 5));	// 94771                  mov     [bp+var_2], 5 ;~ 17C5:58D4
loc_2bb09:
	// 5540 
cs=0x17c5;eip=0x0058d9; 	J(JMP(loc_2bb73));	// 94774                  jmp     short loc_2BB73 ;~ 17C5:58D9
loc_2bb0b:
	// 5541 
cs=0x17c5;eip=0x0058db; 	T(si = word_5225e;);	// 94778                  mov     si, ds:word_5225E ;~ 17C5:58DB
cs=0x17c5;eip=0x0058df; 	T(AND(si, 0x3F));	// 94779                  and     si, 3Fh ;~ 17C5:58DF
cs=0x17c5;eip=0x0058e2; 	T(cl = 4;);	// 94780                  mov     cl, 4 ;~ 17C5:58E2
cs=0x17c5;eip=0x0058e4; 	T(SHL(si, cl));	// 94781                  shl     si, cl ;~ 17C5:58E4
cs=0x17c5;eip=0x0058e6; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 94782                  mov     ax, [si-7E52h] ;~ 17C5:58E6
cs=0x17c5;eip=0x0058ea; 	T(SUB(dx, dx));	// 94783                  sub     dx, dx ;~ 17C5:58EA
cs=0x17c5;eip=0x0058ec; 	T(cl = 5;);	// 94784                  mov     cl, 5 ;~ 17C5:58EC
loc_2bb1e:
	// 5542 
cs=0x17c5;eip=0x0058ee; 	T(SHL(ax, 1));	// 94787                  shl     ax, 1 ;~ 17C5:58EE
cs=0x17c5;eip=0x0058f0; 	T(RCL(dx, 1));	// 94788                  rcl     dx, 1 ;~ 17C5:58F0
cs=0x17c5;eip=0x0058f2; 	T(DEC(cl));	// 94789                  dec     cl ;~ 17C5:58F2
cs=0x17c5;eip=0x0058f4; 	J(JZ(loc_2bb28));	// 94790                  jz      short loc_2BB28 ;~ 17C5:58F4
cs=0x17c5;eip=0x0058f6; 	J(JMP(loc_2bb1e));	// 94791                  jmp     short loc_2BB1E ;~ 17C5:58F6
loc_2bb28:
	// 5543 
cs=0x17c5;eip=0x0058f8; 	X(word_5224c = ax;);	// 94795                  mov     ds:word_5224C, ax ;~ 17C5:58F8
cs=0x17c5;eip=0x0058fb; 	X(word_5224e = dx;);	// 94796                  mov     ds:word_5224E, dx ;~ 17C5:58FB
cs=0x17c5;eip=0x0058ff; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 94797                  mov     ax, [si-7E50h] ;~ 17C5:58FF
cs=0x17c5;eip=0x005903; 	T(SUB(dx, dx));	// 94798                  sub     dx, dx ;~ 17C5:5903
cs=0x17c5;eip=0x005905; 	T(cl = 5;);	// 94799                  mov     cl, 5 ;~ 17C5:5905
loc_2bb37:
	// 5544 
cs=0x17c5;eip=0x005907; 	T(SHL(ax, 1));	// 94802                  shl     ax, 1 ;~ 17C5:5907
cs=0x17c5;eip=0x005909; 	T(RCL(dx, 1));	// 94803                  rcl     dx, 1 ;~ 17C5:5909
cs=0x17c5;eip=0x00590b; 	T(DEC(cl));	// 94804                  dec     cl ;~ 17C5:590B
cs=0x17c5;eip=0x00590d; 	J(JZ(loc_2bb41));	// 94805                  jz      short loc_2BB41 ;~ 17C5:590D
cs=0x17c5;eip=0x00590f; 	J(JMP(loc_2bb37));	// 94806                  jmp     short loc_2BB37 ;~ 17C5:590F
loc_2bb41:
	// 5545 
cs=0x17c5;eip=0x005911; 	X(word_52254 = ax;);	// 94810                  mov     ds:word_52254, ax ;~ 17C5:5911
cs=0x17c5;eip=0x005914; 	X(word_52256 = dx;);	// 94811                  mov     ds:word_52256, dx ;~ 17C5:5914
cs=0x17c5;eip=0x005918; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x200));	// 94812                  test    word ptr [si-7E4Ch], 200h ;~ 17C5:5918
cs=0x17c5;eip=0x00591e; 	J(JZ(loc_2bb55));	// 94813                  jz      short loc_2BB55 ;~ 17C5:591E
cs=0x17c5;eip=0x005920; 	T(ax = 0x0C8;);	// 94814                  mov     ax, 0C8h ;~ 17C5:5920
cs=0x17c5;eip=0x005923; 	J(JMP(loc_2bb58));	// 94815                  jmp     short loc_2BB58 ;~ 17C5:5923
loc_2bb55:
	// 5546 
cs=0x17c5;eip=0x005925; 	T(ax = 0x32;);	// 94819                  mov     ax, 32h ; '2' ;~ 17C5:5925
loc_2bb58:
	// 5547 
cs=0x17c5;eip=0x005928; 	X(word_5225c = ax;);	// 94822                  mov     ds:word_5225C, ax ;~ 17C5:5928
cs=0x17c5;eip=0x00592b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 7));	// 94823                  mov     [bp+var_2], 7 ;~ 17C5:592B
cs=0x17c5;eip=0x005930; 	T(CMP(word_4991a, 0));	// 94824                  cmp     word_4991A, 0 ;~ 17C5:5930
cs=0x17c5;eip=0x005935; 	J(JZ(loc_2bb73));	// 94825                  jz      short loc_2BB73 ;~ 17C5:5935
cs=0x17c5;eip=0x005937; 	T(CMP(word_4993c, 0x0FFFF));	// 94826                  cmp     word_4993C, 0FFFFh ;~ 17C5:5937
cs=0x17c5;eip=0x00593c; 	J(JNZ(loc_2bb73));	// 94827                  jnz     short loc_2BB73 ;~ 17C5:593C
cs=0x17c5;eip=0x00593e; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 6));	// 94828                  mov     [bp+var_2], 6 ;~ 17C5:593E
loc_2bb73:
	// 5548 
cs=0x17c5;eip=0x005943; 	T(CMP(word_4993e, 0));	// 94832                  cmp     word_4993E, 0 ;~ 17C5:5943
cs=0x17c5;eip=0x005948; 	J(JNZ(loc_2bb80));	// 94833                  jnz     short loc_2BB80 ;~ 17C5:5948
cs=0x17c5;eip=0x00594a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 94834                  mov     ax, [bp+var_4] ;~ 17C5:594A
cs=0x17c5;eip=0x00594d; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 94835                  mov     [bp+var_2], ax ;~ 17C5:594D
loc_2bb80:
	// 5549 
cs=0x17c5;eip=0x005950; 	T(ax = word_5224c;);	// 94838                  mov     ax, ds:word_5224C ;~ 17C5:5950
cs=0x17c5;eip=0x005953; 	T(dx = word_5224e;);	// 94839                  mov     dx, ds:word_5224E ;~ 17C5:5953
cs=0x17c5;eip=0x005957; 	T(cl = 5;);	// 94840                  mov     cl, 5 ;~ 17C5:5957
loc_2bb89:
	// 5550 
cs=0x17c5;eip=0x005959; 	T(SAR(dx, 1));	// 94843                  sar     dx, 1 ;~ 17C5:5959
cs=0x17c5;eip=0x00595b; 	T(RCR(ax, 1));	// 94844                  rcr     ax, 1 ;~ 17C5:595B
cs=0x17c5;eip=0x00595d; 	T(DEC(cl));	// 94845                  dec     cl ;~ 17C5:595D
cs=0x17c5;eip=0x00595f; 	J(JZ(loc_2bb93));	// 94846                  jz      short loc_2BB93 ;~ 17C5:595F
cs=0x17c5;eip=0x005961; 	J(JMP(loc_2bb89));	// 94847                  jmp     short loc_2BB89 ;~ 17C5:5961
loc_2bb93:
	// 5551 
cs=0x17c5;eip=0x005963; 	T(SUB(ax, word_520f0));	// 94851                  sub     ax, ds:word_520F0 ;~ 17C5:5963
cs=0x17c5;eip=0x005967; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 94852                  mov     [bp+var_A], ax ;~ 17C5:5967
cs=0x17c5;eip=0x00596a; 	T(ax = word_52254;);	// 94853                  mov     ax, ds:word_52254 ;~ 17C5:596A
cs=0x17c5;eip=0x00596d; 	T(dx = word_52256;);	// 94854                  mov     dx, ds:word_52256 ;~ 17C5:596D
cs=0x17c5;eip=0x005971; 	T(cl = 5;);	// 94855                  mov     cl, 5 ;~ 17C5:5971
loc_2bba3:
	// 5552 
cs=0x17c5;eip=0x005973; 	T(SAR(dx, 1));	// 94858                  sar     dx, 1 ;~ 17C5:5973
cs=0x17c5;eip=0x005975; 	T(RCR(ax, 1));	// 94859                  rcr     ax, 1 ;~ 17C5:5975
cs=0x17c5;eip=0x005977; 	T(DEC(cl));	// 94860                  dec     cl ;~ 17C5:5977
cs=0x17c5;eip=0x005979; 	J(JZ(loc_2bbad));	// 94861                  jz      short loc_2BBAD ;~ 17C5:5979
cs=0x17c5;eip=0x00597b; 	J(JMP(loc_2bba3));	// 94862                  jmp     short loc_2BBA3 ;~ 17C5:597B
loc_2bbad:
	// 5553 
cs=0x17c5;eip=0x00597d; 	T(SUB(ax, word_52100));	// 94866                  sub     ax, ds:word_52100 ;~ 17C5:597D
cs=0x17c5;eip=0x005981; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 94867                  mov     [bp+var_C], ax ;~ 17C5:5981
cs=0x17c5;eip=0x005984; 	X(PUSH(ax));	// 94868                  push    ax ;~ 17C5:5984
cs=0x17c5;eip=0x005985; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 94869                  push    [bp+var_A] ;~ 17C5:5985
cs=0x17c5;eip=0x005988; 	J(CALL(sub_331d6,0));	// 94870                  call    sub_331D6 ;~ 17C5:5988
cs=0x17c5;eip=0x00598b; 	T(ADD(sp, 4));	// 94871                  add     sp, 4 ;~ 17C5:598B
cs=0x17c5;eip=0x00598e; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 94872                  mov     [bp+var_6], ax ;~ 17C5:598E
cs=0x17c5;eip=0x005991; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 94873                  mov     ax, [bp+var_C] ;~ 17C5:5991
cs=0x17c5;eip=0x005994; 	T(NEG(ax));	// 94874                  neg     ax ;~ 17C5:5994
cs=0x17c5;eip=0x005996; 	X(PUSH(ax));	// 94875                  push    ax ;~ 17C5:5996
cs=0x17c5;eip=0x005997; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 94876                  push    [bp+var_A] ;~ 17C5:5997
cs=0x17c5;eip=0x00599a; 	J(CALL(sub_33238,0));	// 94877                  call    sub_33238 ;~ 17C5:599A
cs=0x17c5;eip=0x00599d; 	T(ADD(sp, 4));	// 94878                  add     sp, 4 ;~ 17C5:599D
cs=0x17c5;eip=0x0059a0; 	X(word_527da = ax;);	// 94879                  mov     ds:word_527DA, ax ;~ 17C5:59A0
cs=0x17c5;eip=0x0059a3; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 94880                  push    [bp+var_6] ;~ 17C5:59A3
cs=0x17c5;eip=0x0059a6; 	T(ax = word_5225c;);	// 94881                  mov     ax, ds:word_5225C ;~ 17C5:59A6
cs=0x17c5;eip=0x0059a9; 	T(SUB(ax, word_4e2fe));	// 94882                  sub     ax, ds:word_4E2FE ;~ 17C5:59A9
cs=0x17c5;eip=0x0059ad; 	T(cl = 5;);	// 94883                  mov     cl, 5 ;~ 17C5:59AD
cs=0x17c5;eip=0x0059af; 	T(SAR(ax, cl));	// 94884                  sar     ax, cl ;~ 17C5:59AF
cs=0x17c5;eip=0x0059b1; 	X(PUSH(ax));	// 94885                  push    ax ;~ 17C5:59B1
cs=0x17c5;eip=0x0059b2; 	J(CALL(sub_33238,0));	// 94886                  call    sub_33238 ;~ 17C5:59B2
cs=0x17c5;eip=0x0059b5; 	T(ADD(sp, 4));	// 94887                  add     sp, 4 ;~ 17C5:59B5
cs=0x17c5;eip=0x0059b8; 	T(NEG(ax));	// 94888                  neg     ax ;~ 17C5:59B8
cs=0x17c5;eip=0x0059ba; 	X(word_520c4 = ax;);	// 94889                  mov     ds:word_520C4, ax ;~ 17C5:59BA
cs=0x17c5;eip=0x0059bd; 	X(word_51714 = 0;);	// 94890                  mov     ds:word_51714, 0 ;~ 17C5:59BD
cs=0x17c5;eip=0x0059c3; 	T(ax = 0x18;);	// 94891                  mov     ax, 18h ;~ 17C5:59C3
cs=0x17c5;eip=0x0059c6; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94892                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:59C6
cs=0x17c5;eip=0x0059c9; 	T(SHL(ax, cl));	// 94893                  shl     ax, cl ;~ 17C5:59C9
cs=0x17c5;eip=0x0059cb; 	X(PUSH(ax));	// 94894                  push    ax ;~ 17C5:59CB
cs=0x17c5;eip=0x0059cc; 	X(PUSH(word_520c4));	// 94895                  push    ds:word_520C4 ;~ 17C5:59CC
cs=0x17c5;eip=0x0059d0; 	J(CALL(sub_333c0,0));	// 94896                  call    sub_333C0 ;~ 17C5:59D0
cs=0x17c5;eip=0x0059d3; 	T(ADD(sp, 4));	// 94897                  add     sp, 4 ;~ 17C5:59D3
cs=0x17c5;eip=0x0059d6; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 94898                  mov     [bp+var_8], ax ;~ 17C5:59D6
cs=0x17c5;eip=0x0059d9; 	T(TEST(*(db*)(&word_5225e), 0x60));	// 94899                  test    byte ptr ds:word_5225E, 60h ;~ 17C5:59D9
cs=0x17c5;eip=0x0059de; 	J(JNZ(loc_2bc1a));	// 94900                  jnz     short loc_2BC1A ;~ 17C5:59DE
cs=0x17c5;eip=0x0059e0; 	T(CMP(word_4993e, 0));	// 94901                  cmp     word_4993E, 0 ;~ 17C5:59E0
cs=0x17c5;eip=0x0059e5; 	J(JNZ(loc_2bc1a));	// 94902                  jnz     short loc_2BC1A ;~ 17C5:59E5
cs=0x17c5;eip=0x0059e7; 	J(JMP(loc_2bd25));	// 94903                  jmp     loc_2BD25 ;~ 17C5:59E7
loc_2bc1a:
	// 5554 
cs=0x17c5;eip=0x0059ea; 	T(CMP(word_520c0, 0x88));	// 94908                  cmp     ds:word_520C0, 88h ;~ 17C5:59EA
cs=0x17c5;eip=0x0059f0; 	J(JNZ(loc_2bc92));	// 94909                  jnz     short loc_2BC92 ;~ 17C5:59F0
cs=0x17c5;eip=0x0059f2; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 94910                  push    [bp+var_8] ;~ 17C5:59F2
cs=0x17c5;eip=0x0059f5; 	T(ax = word_527da;);	// 94911                  mov     ax, ds:word_527DA ;~ 17C5:59F5
cs=0x17c5;eip=0x0059f8; 	T(ADD(ah, 0x80));	// 94912                  add     ah, 80h ;~ 17C5:59F8
cs=0x17c5;eip=0x0059fb; 	X(PUSH(ax));	// 94913                  push    ax ;~ 17C5:59FB
cs=0x17c5;eip=0x0059fc; 	J(CALL(sub_333a8,0));	// 94914                  call    sub_333A8 ;~ 17C5:59FC
cs=0x17c5;eip=0x0059ff; 	T(ADD(sp, 4));	// 94915                  add     sp, 4 ;~ 17C5:59FF
cs=0x17c5;eip=0x005a02; 	T(CWD);	// 94916                  cwd ;~ 17C5:5A02
cs=0x17c5;eip=0x005a03; 	T(ADD(ax, word_51a0a));	// 94917                  add     ax, ds:word_51A0A ;~ 17C5:5A03
cs=0x17c5;eip=0x005a07; 	T(ADC(dx, word_51a0c));	// 94918                  adc     dx, ds:word_51A0C ;~ 17C5:5A07
cs=0x17c5;eip=0x005a0b; 	X(word_5142e = ax;);	// 94919                  mov     ds:word_5142E, ax ;~ 17C5:5A0B
cs=0x17c5;eip=0x005a0e; 	X(word_51430 = dx;);	// 94920                  mov     ds:word_51430, dx ;~ 17C5:5A0E
cs=0x17c5;eip=0x005a12; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 94921                  push    [bp+var_8] ;~ 17C5:5A12
cs=0x17c5;eip=0x005a15; 	T(ax = word_527da;);	// 94922                  mov     ax, ds:word_527DA ;~ 17C5:5A15
cs=0x17c5;eip=0x005a18; 	T(ADD(ah, 0x80));	// 94923                  add     ah, 80h ;~ 17C5:5A18
cs=0x17c5;eip=0x005a1b; 	X(PUSH(ax));	// 94924                  push    ax ;~ 17C5:5A1B
cs=0x17c5;eip=0x005a1c; 	J(CALL(sub_333c0,0));	// 94925                  call    sub_333C0 ;~ 17C5:5A1C
cs=0x17c5;eip=0x005a1f; 	T(ADD(sp, 4));	// 94926                  add     sp, 4 ;~ 17C5:5A1F
cs=0x17c5;eip=0x005a22; 	T(CWD);	// 94927                  cwd ;~ 17C5:5A22
cs=0x17c5;eip=0x005a23; 	T(ADD(ax, word_51a28));	// 94928                  add     ax, ds:word_51A28 ;~ 17C5:5A23
cs=0x17c5;eip=0x005a27; 	T(ADC(dx, word_51a2a));	// 94929                  adc     dx, ds:word_51A2A ;~ 17C5:5A27
cs=0x17c5;eip=0x005a2b; 	X(word_51704 = ax;);	// 94930                  mov     ds:word_51704, ax ;~ 17C5:5A2B
cs=0x17c5;eip=0x005a2e; 	X(word_51706 = dx;);	// 94931                  mov     ds:word_51706, dx ;~ 17C5:5A2E
cs=0x17c5;eip=0x005a32; 	T(ax = 0x18;);	// 94932                  mov     ax, 18h ;~ 17C5:5A32
cs=0x17c5;eip=0x005a35; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94933                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:5A35
cs=0x17c5;eip=0x005a38; 	T(SHL(ax, cl));	// 94934                  shl     ax, cl ;~ 17C5:5A38
cs=0x17c5;eip=0x005a3a; 	X(PUSH(ax));	// 94935                  push    ax ;~ 17C5:5A3A
cs=0x17c5;eip=0x005a3b; 	X(PUSH(word_520c4));	// 94936                  push    ds:word_520C4 ;~ 17C5:5A3B
cs=0x17c5;eip=0x005a3f; 	J(CALL(sub_333a8,0));	// 94937                  call    sub_333A8 ;~ 17C5:5A3F
cs=0x17c5;eip=0x005a42; 	T(ADD(sp, 4));	// 94938                  add     sp, 4 ;~ 17C5:5A42
cs=0x17c5;eip=0x005a45; 	T(dx = 4;);	// 94939                  mov     dx, 4 ;~ 17C5:5A45
cs=0x17c5;eip=0x005a48; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94940                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:5A48
cs=0x17c5;eip=0x005a4b; 	T(SHL(dx, cl));	// 94941                  shl     dx, cl ;~ 17C5:5A4B
cs=0x17c5;eip=0x005a4d; 	T(ADD(dx, ax));	// 94942                  add     dx, ax ;~ 17C5:5A4D
cs=0x17c5;eip=0x005a4f; 	T(ADD(dx, word_4e2fe));	// 94943                  add     dx, ds:word_4E2FE ;~ 17C5:5A4F
cs=0x17c5;eip=0x005a53; 	X(word_5170e = dx;);	// 94944                  mov     ds:word_5170E, dx ;~ 17C5:5A53
cs=0x17c5;eip=0x005a57; 	T(ax = word_520c4;);	// 94945                  mov     ax, ds:word_520C4 ;~ 17C5:5A57
cs=0x17c5;eip=0x005a5a; 	T(NEG(ax));	// 94946                  neg     ax ;~ 17C5:5A5A
cs=0x17c5;eip=0x005a5c; 	X(word_520c4 = ax;);	// 94947                  mov     ds:word_520C4, ax ;~ 17C5:5A5C
cs=0x17c5;eip=0x005a5f; 	J(JMP(loc_2bd22));	// 94948                  jmp     loc_2BD22 ;~ 17C5:5A5F
loc_2bc92:
	// 5555 
cs=0x17c5;eip=0x005a62; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 94952                  push    [bp+var_8] ;~ 17C5:5A62
cs=0x17c5;eip=0x005a65; 	X(PUSH(word_527da));	// 94953                  push    ds:word_527DA ;~ 17C5:5A65
cs=0x17c5;eip=0x005a69; 	J(CALL(sub_333a8,0));	// 94954                  call    sub_333A8 ;~ 17C5:5A69
cs=0x17c5;eip=0x005a6c; 	T(ADD(sp, 4));	// 94955                  add     sp, 4 ;~ 17C5:5A6C
cs=0x17c5;eip=0x005a6f; 	T(CWD);	// 94956                  cwd ;~ 17C5:5A6F
cs=0x17c5;eip=0x005a70; 	T(ADD(ax, word_5224c));	// 94957                  add     ax, ds:word_5224C ;~ 17C5:5A70
cs=0x17c5;eip=0x005a74; 	T(ADC(dx, word_5224e));	// 94958                  adc     dx, ds:word_5224E ;~ 17C5:5A74
cs=0x17c5;eip=0x005a78; 	X(word_5142e = ax;);	// 94959                  mov     ds:word_5142E, ax ;~ 17C5:5A78
cs=0x17c5;eip=0x005a7b; 	X(word_51430 = dx;);	// 94960                  mov     ds:word_51430, dx ;~ 17C5:5A7B
cs=0x17c5;eip=0x005a7f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 94961                  push    [bp+var_8] ;~ 17C5:5A7F
cs=0x17c5;eip=0x005a82; 	X(PUSH(word_527da));	// 94962                  push    ds:word_527DA ;~ 17C5:5A82
cs=0x17c5;eip=0x005a86; 	J(CALL(sub_333c0,0));	// 94963                  call    sub_333C0 ;~ 17C5:5A86
cs=0x17c5;eip=0x005a89; 	T(ADD(sp, 4));	// 94964                  add     sp, 4 ;~ 17C5:5A89
cs=0x17c5;eip=0x005a8c; 	T(CWD);	// 94965                  cwd ;~ 17C5:5A8C
cs=0x17c5;eip=0x005a8d; 	T(SUB(ax, word_52254));	// 94966                  sub     ax, ds:word_52254 ;~ 17C5:5A8D
cs=0x17c5;eip=0x005a91; 	T(SBB(dx, word_52256));	// 94967                  sbb     dx, ds:word_52256 ;~ 17C5:5A91
cs=0x17c5;eip=0x005a95; 	T(ADD(ax, 0));	// 94968                  add     ax, 0 ;~ 17C5:5A95
cs=0x17c5;eip=0x005a98; 	T(ADC(dx, 0x10));	// 94969                  adc     dx, 10h ;~ 17C5:5A98
cs=0x17c5;eip=0x005a9b; 	X(word_51704 = ax;);	// 94970                  mov     ds:word_51704, ax ;~ 17C5:5A9B
cs=0x17c5;eip=0x005a9e; 	X(word_51706 = dx;);	// 94971                  mov     ds:word_51706, dx ;~ 17C5:5A9E
cs=0x17c5;eip=0x005aa2; 	T(ax = 0x18;);	// 94972                  mov     ax, 18h ;~ 17C5:5AA2
cs=0x17c5;eip=0x005aa5; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94973                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:5AA5
cs=0x17c5;eip=0x005aa8; 	T(SHL(ax, cl));	// 94974                  shl     ax, cl ;~ 17C5:5AA8
cs=0x17c5;eip=0x005aaa; 	X(PUSH(ax));	// 94975                  push    ax ;~ 17C5:5AAA
cs=0x17c5;eip=0x005aab; 	X(PUSH(word_520c4));	// 94976                  push    ds:word_520C4 ;~ 17C5:5AAB
cs=0x17c5;eip=0x005aaf; 	J(CALL(sub_333a8,0));	// 94977                  call    sub_333A8 ;~ 17C5:5AAF
cs=0x17c5;eip=0x005ab2; 	T(ADD(sp, 4));	// 94978                  add     sp, 4 ;~ 17C5:5AB2
cs=0x17c5;eip=0x005ab5; 	T(dx = 4;);	// 94979                  mov     dx, 4 ;~ 17C5:5AB5
cs=0x17c5;eip=0x005ab8; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 94980                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:5AB8
cs=0x17c5;eip=0x005abb; 	T(SHL(dx, cl));	// 94981                  shl     dx, cl ;~ 17C5:5ABB
cs=0x17c5;eip=0x005abd; 	T(SUB(dx, ax));	// 94982                  sub     dx, ax ;~ 17C5:5ABD
cs=0x17c5;eip=0x005abf; 	T(ADD(dx, word_5225c));	// 94983                  add     dx, ds:word_5225C ;~ 17C5:5ABF
cs=0x17c5;eip=0x005ac3; 	X(word_5170e = dx;);	// 94984                  mov     ds:word_5170E, dx ;~ 17C5:5AC3
cs=0x17c5;eip=0x005ac7; 	T(TEST(*(db*)(&word_5225e), 0x40));	// 94985                  test    byte ptr ds:word_5225E, 40h ;~ 17C5:5AC7
cs=0x17c5;eip=0x005acc; 	J(JZ(loc_2bd1d));	// 94986                  jz      short loc_2BD1D ;~ 17C5:5ACC
cs=0x17c5;eip=0x005ace; 	T(bx = word_5225e;);	// 94987                  mov     bx, ds:word_5225E ;~ 17C5:5ACE
cs=0x17c5;eip=0x005ad2; 	T(AND(bx, 0x3F));	// 94988                  and     bx, 3Fh ;~ 17C5:5AD2
cs=0x17c5;eip=0x005ad5; 	T(cl = 4;);	// 94989                  mov     cl, 4 ;~ 17C5:5AD5
cs=0x17c5;eip=0x005ad7; 	T(SHL(bx, cl));	// 94990                  shl     bx, cl ;~ 17C5:5AD7
cs=0x17c5;eip=0x005ad9; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 94991                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:5AD9
cs=0x17c5;eip=0x005adf; 	J(JZ(loc_2bd1d));	// 94992                  jz      short loc_2BD1D ;~ 17C5:5ADF
cs=0x17c5;eip=0x005ae1; 	T(CMP(dx, 0x84));	// 94993                  cmp     dx, 84h ;~ 17C5:5AE1
cs=0x17c5;eip=0x005ae5; 	J(JGE(loc_2bd1d));	// 94994                  jge     short loc_2BD1D ;~ 17C5:5AE5
cs=0x17c5;eip=0x005ae7; 	X(word_5170e = 0x84;);	// 94995                  mov     ds:word_5170E, 84h ;~ 17C5:5AE7
loc_2bd1d:
	// 5556 
cs=0x17c5;eip=0x005aed; 	X(ADD(*(db*)(((db*)&word_527da)+1), 0x80));	// 94999                  add     byte ptr ds:word_527DA+1, 80h ;~ 17C5:5AED
loc_2bd22:
	// 5557 
cs=0x17c5;eip=0x005af2; 	J(JMP(loc_2bdbc));	// 95002                  jmp     loc_2BDBC ;~ 17C5:5AF2
loc_2bd25:
	// 5558 
cs=0x17c5;eip=0x005af5; 	T(ax = 0x18;);	// 95006                  mov     ax, 18h ;~ 17C5:5AF5
cs=0x17c5;eip=0x005af8; 	X(IMUL1_2(word_5225e));	// 95007                  imul    ds:word_5225E ;~ 17C5:5AF8
cs=0x17c5;eip=0x005afc; 	T(si = ax;);	// 95008                  mov     si, ax ;~ 17C5:5AFC
cs=0x17c5;eip=0x005afe; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D1C))));	// 95009                  mov     ax, [si+0D1Ch] ;~ 17C5:5AFE
cs=0x17c5;eip=0x005b02; 	X(word_527da = ax;);	// 95010                  mov     ds:word_527DA, ax ;~ 17C5:5B02
cs=0x17c5;eip=0x005b05; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D1E))));	// 95011                  mov     ax, [si+0D1Eh] ;~ 17C5:5B05
cs=0x17c5;eip=0x005b09; 	T(SUB(ax, 0x400));	// 95012                  sub     ax, 400h ;~ 17C5:5B09
cs=0x17c5;eip=0x005b0c; 	X(word_520c4 = ax;);	// 95013                  mov     ds:word_520C4, ax ;~ 17C5:5B0C
cs=0x17c5;eip=0x005b0f; 	T(ax = 0x10;);	// 95014                  mov     ax, 10h ;~ 17C5:5B0F
cs=0x17c5;eip=0x005b12; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 95015                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:5B12
cs=0x17c5;eip=0x005b15; 	T(SHL(ax, cl));	// 95016                  shl     ax, cl ;~ 17C5:5B15
cs=0x17c5;eip=0x005b17; 	X(PUSH(ax));	// 95017                  push    ax ;~ 17C5:5B17
cs=0x17c5;eip=0x005b18; 	X(PUSH(word_520c4));	// 95018                  push    ds:word_520C4 ;~ 17C5:5B18
cs=0x17c5;eip=0x005b1c; 	J(CALL(sub_333c0,0));	// 95019                  call    sub_333C0 ;~ 17C5:5B1C
cs=0x17c5;eip=0x005b1f; 	T(ADD(sp, 4));	// 95020                  add     sp, 4 ;~ 17C5:5B1F
cs=0x17c5;eip=0x005b22; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 95021                  mov     [bp+var_8], ax ;~ 17C5:5B22
cs=0x17c5;eip=0x005b25; 	X(PUSH(ax));	// 95022                  push    ax ;~ 17C5:5B25
cs=0x17c5;eip=0x005b26; 	X(PUSH(word_527da));	// 95023                  push    ds:word_527DA ;~ 17C5:5B26
cs=0x17c5;eip=0x005b2a; 	J(CALL(sub_333a8,0));	// 95024                  call    sub_333A8 ;~ 17C5:5B2A
cs=0x17c5;eip=0x005b2d; 	T(ADD(sp, 4));	// 95025                  add     sp, 4 ;~ 17C5:5B2D
cs=0x17c5;eip=0x005b30; 	T(CWD);	// 95026                  cwd ;~ 17C5:5B30
cs=0x17c5;eip=0x005b31; 	T(cx = word_5224c;);	// 95027                  mov     cx, ds:word_5224C ;~ 17C5:5B31
cs=0x17c5;eip=0x005b35; 	T(bx = word_5224e;);	// 95028                  mov     bx, ds:word_5224E ;~ 17C5:5B35
cs=0x17c5;eip=0x005b39; 	T(SUB(cx, ax));	// 95029                  sub     cx, ax ;~ 17C5:5B39
cs=0x17c5;eip=0x005b3b; 	T(SBB(bx, dx));	// 95030                  sbb     bx, dx ;~ 17C5:5B3B
cs=0x17c5;eip=0x005b3d; 	X(word_5142e = cx;);	// 95031                  mov     ds:word_5142E, cx ;~ 17C5:5B3D
cs=0x17c5;eip=0x005b41; 	X(word_51430 = bx;);	// 95032                  mov     ds:word_51430, bx ;~ 17C5:5B41
cs=0x17c5;eip=0x005b45; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 95033                  push    [bp+var_8] ;~ 17C5:5B45
cs=0x17c5;eip=0x005b48; 	X(PUSH(word_527da));	// 95034                  push    ds:word_527DA ;~ 17C5:5B48
cs=0x17c5;eip=0x005b4c; 	J(CALL(sub_333c0,0));	// 95035                  call    sub_333C0 ;~ 17C5:5B4C
cs=0x17c5;eip=0x005b4f; 	T(ADD(sp, 4));	// 95036                  add     sp, 4 ;~ 17C5:5B4F
cs=0x17c5;eip=0x005b52; 	T(CWD);	// 95037                  cwd ;~ 17C5:5B52
cs=0x17c5;eip=0x005b53; 	T(ADD(ax, word_52254));	// 95038                  add     ax, ds:word_52254 ;~ 17C5:5B53
cs=0x17c5;eip=0x005b57; 	T(ADC(dx, word_52256));	// 95039                  adc     dx, ds:word_52256 ;~ 17C5:5B57
cs=0x17c5;eip=0x005b5b; 	T(SUB(ax, 0));	// 95040                  sub     ax, 0 ;~ 17C5:5B5B
cs=0x17c5;eip=0x005b5e; 	T(SBB(dx, 0x10));	// 95041                  sbb     dx, 10h ;~ 17C5:5B5E
cs=0x17c5;eip=0x005b61; 	T(NEG(ax));	// 95042                  neg     ax ;~ 17C5:5B61
cs=0x17c5;eip=0x005b63; 	T(ADC(dx, 0));	// 95043                  adc     dx, 0 ;~ 17C5:5B63
cs=0x17c5;eip=0x005b66; 	T(NEG(dx));	// 95044                  neg     dx ;~ 17C5:5B66
cs=0x17c5;eip=0x005b68; 	X(word_51704 = ax;);	// 95045                  mov     ds:word_51704, ax ;~ 17C5:5B68
cs=0x17c5;eip=0x005b6b; 	X(word_51706 = dx;);	// 95046                  mov     ds:word_51706, dx ;~ 17C5:5B6B
cs=0x17c5;eip=0x005b6f; 	T(ax = 0x10;);	// 95047                  mov     ax, 10h ;~ 17C5:5B6F
cs=0x17c5;eip=0x005b72; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 95048                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:5B72
cs=0x17c5;eip=0x005b75; 	T(SHL(ax, cl));	// 95049                  shl     ax, cl ;~ 17C5:5B75
cs=0x17c5;eip=0x005b77; 	X(PUSH(ax));	// 95050                  push    ax ;~ 17C5:5B77
cs=0x17c5;eip=0x005b78; 	X(PUSH(word_520c4));	// 95051                  push    ds:word_520C4 ;~ 17C5:5B78
cs=0x17c5;eip=0x005b7c; 	J(CALL(sub_333a8,0));	// 95052                  call    sub_333A8 ;~ 17C5:5B7C
cs=0x17c5;eip=0x005b7f; 	T(ADD(sp, 4));	// 95053                  add     sp, 4 ;~ 17C5:5B7F
cs=0x17c5;eip=0x005b82; 	T(cx = word_5225c;);	// 95054                  mov     cx, ds:word_5225C ;~ 17C5:5B82
cs=0x17c5;eip=0x005b86; 	T(SUB(cx, ax));	// 95055                  sub     cx, ax ;~ 17C5:5B86
cs=0x17c5;eip=0x005b88; 	X(word_5170e = cx;);	// 95056                  mov     ds:word_5170E, cx ;~ 17C5:5B88
loc_2bdbc:
	// 5559 
cs=0x17c5;eip=0x005b8c; 	J(return _group38(m2c::k__def_2be4e, _state););	// 95059                  jmp     __def_2BE4E     ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5B8C
loc_2bdbf:
	// 5560 
cs=0x17c5;eip=0x005b8f; 	X(word_520c4 = 0x0F400;);	// 95064                  mov     ds:word_520C4, 0F400h ; jumptable 0002BE4E case 140 ;~ 17C5:5B8F
cs=0x17c5;eip=0x005b95; 	X(word_51714 = 0;);	// 95065                  mov     ds:word_51714, 0 ;~ 17C5:5B95
cs=0x17c5;eip=0x005b9b; 	T(ax = word_52258;);	// 95066                  mov     ax, ds:word_52258 ;~ 17C5:5B9B
cs=0x17c5;eip=0x005b9e; 	T(CWD);	// 95067                  cwd ;~ 17C5:5B9E
cs=0x17c5;eip=0x005b9f; 	T(cl = 5;);	// 95068                  mov     cl, 5 ;~ 17C5:5B9F
loc_2bdd1:
	// 5561 
cs=0x17c5;eip=0x005ba1; 	T(SHL(ax, 1));	// 95071                  shl     ax, 1 ;~ 17C5:5BA1
cs=0x17c5;eip=0x005ba3; 	T(RCL(dx, 1));	// 95072                  rcl     dx, 1 ;~ 17C5:5BA3
cs=0x17c5;eip=0x005ba5; 	T(DEC(cl));	// 95073                  dec     cl ;~ 17C5:5BA5
cs=0x17c5;eip=0x005ba7; 	J(JZ(loc_2bddb));	// 95074                  jz      short loc_2BDDB ;~ 17C5:5BA7
cs=0x17c5;eip=0x005ba9; 	J(JMP(loc_2bdd1));	// 95075                  jmp     short loc_2BDD1 ;~ 17C5:5BA9
loc_2bddb:
	// 5562 
cs=0x17c5;eip=0x005bab; 	X(word_5142e = ax;);	// 95079                  mov     ds:word_5142E, ax ;~ 17C5:5BAB
cs=0x17c5;eip=0x005bae; 	X(word_51430 = dx;);	// 95080                  mov     ds:word_51430, dx ;~ 17C5:5BAE
cs=0x17c5;eip=0x005bb2; 	T(ax = word_5226a;);	// 95081                  mov     ax, ds:word_5226A ;~ 17C5:5BB2
cs=0x17c5;eip=0x005bb5; 	T(CWD);	// 95082                  cwd ;~ 17C5:5BB5
cs=0x17c5;eip=0x005bb6; 	T(SUB(ax, 0x8000));	// 95083                  sub     ax, 8000h ;~ 17C5:5BB6
cs=0x17c5;eip=0x005bb9; 	T(SBB(dx, 0));	// 95084                  sbb     dx, 0 ;~ 17C5:5BB9
cs=0x17c5;eip=0x005bbc; 	T(NEG(ax));	// 95085                  neg     ax ;~ 17C5:5BBC
cs=0x17c5;eip=0x005bbe; 	T(ADC(dx, 0));	// 95086                  adc     dx, 0 ;~ 17C5:5BBE
cs=0x17c5;eip=0x005bc1; 	T(NEG(dx));	// 95087                  neg     dx ;~ 17C5:5BC1
cs=0x17c5;eip=0x005bc3; 	T(cl = 5;);	// 95088                  mov     cl, 5 ;~ 17C5:5BC3
loc_2bdf5:
	// 5563 
cs=0x17c5;eip=0x005bc5; 	T(SHL(ax, 1));	// 95091                  shl     ax, 1 ;~ 17C5:5BC5
cs=0x17c5;eip=0x005bc7; 	T(RCL(dx, 1));	// 95092                  rcl     dx, 1 ;~ 17C5:5BC7
cs=0x17c5;eip=0x005bc9; 	T(DEC(cl));	// 95093                  dec     cl ;~ 17C5:5BC9
cs=0x17c5;eip=0x005bcb; 	J(JZ(loc_2bdff));	// 95094                  jz      short loc_2BDFF ;~ 17C5:5BCB
cs=0x17c5;eip=0x005bcd; 	J(JMP(loc_2bdf5));	// 95095                  jmp     short loc_2BDF5 ;~ 17C5:5BCD
loc_2bdff:
	// 5564 
cs=0x17c5;eip=0x005bcf; 	X(word_51704 = ax;);	// 95099                  mov     ds:word_51704, ax ;~ 17C5:5BCF
cs=0x17c5;eip=0x005bd2; 	X(word_51706 = dx;);	// 95100                  mov     ds:word_51706, dx ;~ 17C5:5BD2
cs=0x17c5;eip=0x005bd6; 	T(ax = word_52270;);	// 95101                  mov     ax, ds:word_52270 ;~ 17C5:5BD6
cs=0x17c5;eip=0x005bd9; 	X(word_5170e = ax;);	// 95102                  mov     ds:word_5170E, ax ;~ 17C5:5BD9
cs=0x17c5;eip=0x005bdc; 	J(return _group38(m2c::k__def_2be4e, _state););	// 95103                  jmp     short __def_2BE4E ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5BDC

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2b846: 	goto loc_2b846;
        case m2c::kloc_2b85b: 	goto loc_2b85b;
        case m2c::kloc_2b877: 	goto loc_2b877;
        case m2c::kloc_2b891: 	goto loc_2b891;
        case m2c::kloc_2b8ab: 	goto loc_2b8ab;
        case m2c::kloc_2b904: 	goto loc_2b904;
        case m2c::kloc_2b968: 	goto loc_2b968;
        case m2c::kloc_2b995: 	goto loc_2b995;
        case m2c::kloc_2ba05: 	goto loc_2ba05;
        case m2c::kloc_2ba24: 	goto loc_2ba24;
        case m2c::kloc_2ba26: 	goto loc_2ba26;
        case m2c::kloc_2ba36: 	goto loc_2ba36;
        case m2c::kloc_2ba38: 	goto loc_2ba38;
        case m2c::kloc_2ba45: 	goto loc_2ba45;
        case m2c::kloc_2ba55: 	goto loc_2ba55;
        case m2c::kloc_2ba74: 	goto loc_2ba74;
        case m2c::kloc_2ba7e: 	goto loc_2ba7e;
        case m2c::kloc_2ba8d: 	goto loc_2ba8d;
        case m2c::kloc_2ba97: 	goto loc_2ba97;
        case m2c::kloc_2baa7: 	goto loc_2baa7;
        case m2c::kloc_2bacb: 	goto loc_2bacb;
        case m2c::kloc_2bad2: 	goto loc_2bad2;
        case m2c::kloc_2bb09: 	goto loc_2bb09;
        case m2c::kloc_2bb0b: 	goto loc_2bb0b;
        case m2c::kloc_2bb1e: 	goto loc_2bb1e;
        case m2c::kloc_2bb28: 	goto loc_2bb28;
        case m2c::kloc_2bb37: 	goto loc_2bb37;
        case m2c::kloc_2bb41: 	goto loc_2bb41;
        case m2c::kloc_2bb55: 	goto loc_2bb55;
        case m2c::kloc_2bb58: 	goto loc_2bb58;
        case m2c::kloc_2bb73: 	goto loc_2bb73;
        case m2c::kloc_2bb80: 	goto loc_2bb80;
        case m2c::kloc_2bb89: 	goto loc_2bb89;
        case m2c::kloc_2bb93: 	goto loc_2bb93;
        case m2c::kloc_2bba3: 	goto loc_2bba3;
        case m2c::kloc_2bbad: 	goto loc_2bbad;
        case m2c::kloc_2bc1a: 	goto loc_2bc1a;
        case m2c::kloc_2bc92: 	goto loc_2bc92;
        case m2c::kloc_2bd1d: 	goto loc_2bd1d;
        case m2c::kloc_2bd22: 	goto loc_2bd22;
        case m2c::kloc_2bd25: 	goto loc_2bd25;
        case m2c::kloc_2bdbc: 	goto loc_2bdbc;
        case m2c::kloc_2bdbf: 	goto loc_2bdbf;
        case m2c::kloc_2bdd1: 	goto loc_2bdd1;
        case m2c::kloc_2bddb: 	goto loc_2bddb;
        case m2c::kloc_2bdf5: 	goto loc_2bdf5;
        case m2c::kloc_2bdff: 	goto loc_2bdff;
        case m2c::ksub_2b7db: 	goto sub_2b7db;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group38(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group38:
    _begin:
seg2623_5bde_proc:
	// 95107 
cs=0x17c5;eip=0x005bde; 	J(JMP(__def_2be4e));	// 95107                  jmp     short __def_2BE4E ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5BDE
loc_2be10:
	// 5565 
cs=0x17c5;eip=0x005be0; 	T(CMP(ax, 0x84));	// 95112                  cmp     ax, 84h ;~ 17C5:5BE0
cs=0x17c5;eip=0x005be3; 	J(JNZ(loc_2be18));	// 95113                  jnz     short loc_2BE18 ;~ 17C5:5BE3
cs=0x17c5;eip=0x005be5; 	J(return sub_2b7db(m2c::kloc_2b8ab, _state););	// 95114                  jmp     loc_2B8AB ;~ 17C5:5BE5
loc_2be18:
	// 5566 
cs=0x17c5;eip=0x005be8; 	J(JG(loc_2be43));	// 95118                  jg      short loc_2BE43 ;~ 17C5:5BE8
cs=0x17c5;eip=0x005bea; 	T(OR(ax, ax));	// 95119                  or      ax, ax ;~ 17C5:5BEA
cs=0x17c5;eip=0x005bec; 	J(JNZ(loc_2be21));	// 95120                  jnz     short loc_2BE21 ;~ 17C5:5BEC
cs=0x17c5;eip=0x005bee; 	J(return sub_2b7db(m2c::kloc_2b846, _state););	// 95121                  jmp     loc_2B846 ;~ 17C5:5BEE
loc_2be21:
	// 5567 
cs=0x17c5;eip=0x005bf1; 	T(CMP(ax, 0x41));	// 95125                  cmp     ax, 41h ; 'A' ;~ 17C5:5BF1
cs=0x17c5;eip=0x005bf4; 	J(JNZ(loc_2be29));	// 95126                  jnz     short loc_2BE29 ;~ 17C5:5BF4
cs=0x17c5;eip=0x005bf6; 	J(return sub_2b7db(m2c::kloc_2b85b, _state););	// 95127                  jmp     loc_2B85B ;~ 17C5:5BF6
loc_2be29:
	// 5568 
cs=0x17c5;eip=0x005bf9; 	T(CMP(ax, 0x42));	// 95131                  cmp     ax, 42h ; 'B' ;~ 17C5:5BF9
cs=0x17c5;eip=0x005bfc; 	J(JNZ(loc_2be31));	// 95132                  jnz     short loc_2BE31 ;~ 17C5:5BFC
cs=0x17c5;eip=0x005bfe; 	J(return sub_2b7db(m2c::kloc_2b891, _state););	// 95133                  jmp     loc_2B891 ;~ 17C5:5BFE
loc_2be31:
	// 5569 
cs=0x17c5;eip=0x005c01; 	T(CMP(ax, 0x43));	// 95137                  cmp     ax, 43h ; 'C' ;~ 17C5:5C01
cs=0x17c5;eip=0x005c04; 	J(JNZ(loc_2be39));	// 95138                  jnz     short loc_2BE39 ;~ 17C5:5C04
cs=0x17c5;eip=0x005c06; 	J(return sub_2b7db(m2c::kloc_2b877, _state););	// 95139                  jmp     loc_2B877 ;~ 17C5:5C06
loc_2be39:
	// 5570 
cs=0x17c5;eip=0x005c09; 	T(CMP(ax, 0x44));	// 95143                  cmp     ax, 44h ; 'D' ;~ 17C5:5C09
cs=0x17c5;eip=0x005c0c; 	J(JNZ(loc_2be41));	// 95144                  jnz     short loc_2BE41 ;~ 17C5:5C0C
cs=0x17c5;eip=0x005c0e; 	J(return sub_2b7db(m2c::kloc_2b846, _state););	// 95145                  jmp     loc_2B846 ;~ 17C5:5C0E
loc_2be41:
	// 5571 
cs=0x17c5;eip=0x005c11; 	J(JMP(__def_2be4e));	// 95149                  jmp     short __def_2BE4E ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5C11
loc_2be43:
	// 5572 
cs=0x17c5;eip=0x005c13; 	T(SUB(ax, 0x85));	// 95153                  sub     ax, 85h         ; switch 8 cases ;~ 17C5:5C13
cs=0x17c5;eip=0x005c16; 	T(CMP(ax, 7));	// 95154                  cmp     ax, 7 ;~ 17C5:5C16
cs=0x17c5;eip=0x005c19; 	J(JA(__def_2be4e));	// 95155                  ja      short __def_2BE4E ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5C19
cs=0x17c5;eip=0x005c1b; 	T(ADD(ax, ax));	// 95156                  add     ax, ax ;~ 17C5:5C1B
cs=0x17c5;eip=0x005c1d; 	T(XCHG(ax, bx));	// 95157                  xchg    ax, bx ;~ 17C5:5C1D
cs=0x17c5;eip=0x005c1e; __disp=*(dw*)(((db*)&__jpt_2be4e)+bx);
	J(return __dispatch_call(__disp, _state););	// 95158                  jmp     cs:__jpt_2BE4E[bx] ; switch jump ;~ 17C5:5C1E
__def_2be4e:
	// 5573 
cs=0x17c5;eip=0x005c33; 	X(PUSH(word_520c4));	// 95174                  push    ds:word_520C4   ; jumptable 0002BE4E default case, case 138 ;~ 17C5:5C33
cs=0x17c5;eip=0x005c37; 	J(CALL(sub_34dc0,0));	// 95175                  call    sub_34DC0 ;~ 17C5:5C37
cs=0x17c5;eip=0x005c3a; 	T(ADD(sp, 2));	// 95176                  add     sp, 2 ;~ 17C5:5C3A
cs=0x17c5;eip=0x005c3d; 	T(CMP(ax, 0x4000));	// 95177                  cmp     ax, 4000h ;~ 17C5:5C3D
cs=0x17c5;eip=0x005c40; 	J(JG(loc_2be7a));	// 95178                  jg      short loc_2BE7A ;~ 17C5:5C40
cs=0x17c5;eip=0x005c42; 	T(CMP(word_520c4, 0x8000));	// 95179                  cmp     ds:word_520C4, 8000h ;~ 17C5:5C42
cs=0x17c5;eip=0x005c48; 	J(JNZ(loc_2be93));	// 95180                  jnz     short loc_2BE93 ;~ 17C5:5C48
loc_2be7a:
	// 5574 
cs=0x17c5;eip=0x005c4a; 	T(ax = 0x8000;);	// 95183                  mov     ax, 8000h ;~ 17C5:5C4A
cs=0x17c5;eip=0x005c4d; 	T(SUB(ax, word_520c4));	// 95184                  sub     ax, ds:word_520C4 ;~ 17C5:5C4D
cs=0x17c5;eip=0x005c51; 	X(word_520c4 = ax;);	// 95185                  mov     ds:word_520C4, ax ;~ 17C5:5C51
cs=0x17c5;eip=0x005c54; 	X(ADD(*(db*)(((db*)&word_527da)+1), 0x80));	// 95186                  add     byte ptr ds:word_527DA+1, 80h ;~ 17C5:5C54
cs=0x17c5;eip=0x005c59; 	T(ax = 0x8000;);	// 95187                  mov     ax, 8000h ;~ 17C5:5C59
cs=0x17c5;eip=0x005c5c; 	T(SUB(ax, word_51714));	// 95188                  sub     ax, ds:word_51714 ;~ 17C5:5C5C
cs=0x17c5;eip=0x005c60; 	X(word_51714 = ax;);	// 95189                  mov     ds:word_51714, ax ;~ 17C5:5C60
loc_2be93:
	// 5575 
cs=0x17c5;eip=0x005c63; 	T(CMP(word_520c0, 0));	// 95192                  cmp     ds:word_520C0, 0 ;~ 17C5:5C63
cs=0x17c5;eip=0x005c68; 	J(JNZ(loc_2beae));	// 95193                  jnz     short loc_2BEAE ;~ 17C5:5C68
cs=0x17c5;eip=0x005c6a; 	T(ax = 0x12;);	// 95194                  mov     ax, 12h ;~ 17C5:5C6A
cs=0x17c5;eip=0x005c6d; 	X(PUSH(ax));	// 95195                  push    ax ;~ 17C5:5C6D
cs=0x17c5;eip=0x005c6e; 	T(ax = 0x57BE;);	// 95196                  mov     ax, 57BEh ;~ 17C5:5C6E
cs=0x17c5;eip=0x005c71; 	X(PUSH(ax));	// 95197                  push    ax ;~ 17C5:5C71
cs=0x17c5;eip=0x005c72; 	T(ax = 0x8098;);	// 95198                  mov     ax, 8098h ;~ 17C5:5C72
cs=0x17c5;eip=0x005c75; 	X(PUSH(ax));	// 95199                  push    ax ;~ 17C5:5C75
cs=0x17c5;eip=0x005c76; 	J(CALL(sub_34d94,0));	// 95200                  call    sub_34D94 ;~ 17C5:5C76
cs=0x17c5;eip=0x005c79; 	T(ADD(sp, 6));	// 95202                  add     sp, 6 ;~ 17C5:5C79
cs=0x17c5;eip=0x005c7c; 	J(JMP(loc_2bec6));	// 95203                  jmp     short loc_2BEC6 ;~ 17C5:5C7C
loc_2beae:
	// 5576 
cs=0x17c5;eip=0x005c7e; 	X(PUSH(word_51714));	// 95208                  push    ds:word_51714 ;~ 17C5:5C7E
cs=0x17c5;eip=0x005c82; 	X(PUSH(word_520c4));	// 95209                  push    ds:word_520C4 ;~ 17C5:5C82
cs=0x17c5;eip=0x005c86; 	X(PUSH(word_527da));	// 95210                  push    ds:word_527DA ;~ 17C5:5C86
cs=0x17c5;eip=0x005c8a; 	T(ax = 0x8098;);	// 95211                  mov     ax, 8098h ;~ 17C5:5C8A
cs=0x17c5;eip=0x005c8d; 	X(PUSH(ax));	// 95212                  push    ax ;~ 17C5:5C8D
cs=0x17c5;eip=0x005c8e; 	J(CALLF(sub_36dde,0));	// 95213                  call    sub_36DDE ;~ 17C5:5C8E
cs=0x17c5;eip=0x005c93; 	T(ADD(sp, 8));	// 95214                  add     sp, 8 ;~ 17C5:5C93
loc_2bec6:
	// 5577 
cs=0x17c5;eip=0x005c96; 	T(ax = word_5170e;);	// 95217                  mov     ax, ds:word_5170E ;~ 17C5:5C96
cs=0x17c5;eip=0x005c99; 	T(CMP(ax, 0x10));	// 95218                  cmp     ax, 10h ;~ 17C5:5C99
cs=0x17c5;eip=0x005c9c; 	J(JGE(loc_2bed1));	// 95219                  jge     short loc_2BED1 ;~ 17C5:5C9C
cs=0x17c5;eip=0x005c9e; 	T(ax = 0x10;);	// 95220                  mov     ax, 10h ;~ 17C5:5C9E
loc_2bed1:
	// 5578 
cs=0x17c5;eip=0x005ca1; 	X(word_5170e = ax;);	// 95223                  mov     ds:word_5170E, ax ;~ 17C5:5CA1
cs=0x17c5;eip=0x005ca4; 	T(ax = word_492f2;);	// 95224                  mov     ax, word_492F2 ;~ 17C5:5CA4
cs=0x17c5;eip=0x005ca7; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 95225                  mov     [bp+var_E], ax ;~ 17C5:5CA7
cs=0x17c5;eip=0x005caa; 	T(al = *(db*)(&word_520c0););	// 95226                  mov     al, byte ptr ds:word_520C0 ;~ 17C5:5CAA
cs=0x17c5;eip=0x005cad; 	T(AND(al, 0x0C0));	// 95227                  and     al, 0C0h ;~ 17C5:5CAD
cs=0x17c5;eip=0x005caf; 	T(CMP(al, 1));	// 95228                  cmp     al, 1 ;~ 17C5:5CAF
cs=0x17c5;eip=0x005cb1; 	T(SBB(cx, cx));	// 95229                  sbb     cx, cx ;~ 17C5:5CB1
cs=0x17c5;eip=0x005cb3; 	T(NEG(cx));	// 95230                  neg     cx ;~ 17C5:5CB3
cs=0x17c5;eip=0x005cb5; 	X(word_492f2 = cx;);	// 95231                  mov     word_492F2, cx ;~ 17C5:5CB5
cs=0x17c5;eip=0x005cb9; 	T(ax = cx;);	// 95232                  mov     ax, cx ;~ 17C5:5CB9
cs=0x17c5;eip=0x005cbb; 	T(CMP(*(dw*)(raddr(ss,bp+var_e)), ax));	// 95233                  cmp     [bp+var_E], ax ;~ 17C5:5CBB
cs=0x17c5;eip=0x005cbe; 	J(JNZ(loc_2bef3));	// 95234                  jnz     short loc_2BEF3 ;~ 17C5:5CBE
cs=0x17c5;eip=0x005cc0; 	J(JMP(loc_2bfc6));	// 95235                  jmp     loc_2BFC6 ;~ 17C5:5CC0
loc_2bef3:
	// 5579 
cs=0x17c5;eip=0x005cc3; 	J(CALLF(sub_49af7,0));	// 95239                  call    far ptr sub_49AF7 ;~ 17C5:5CC3
cs=0x17c5;eip=0x005cc8; 	T(CMP(word_492f2, 0));	// 95241                  cmp     word_492F2, 0 ;~ 17C5:5CC8
cs=0x17c5;eip=0x005ccd; 	J(JNZ(loc_2bf02));	// 95242                  jnz     short loc_2BF02 ;~ 17C5:5CCD
cs=0x17c5;eip=0x005ccf; 	J(JMP(loc_2bf9c));	// 95243                  jmp     loc_2BF9C ;~ 17C5:5CCF
loc_2bf02:
	// 5580 
cs=0x17c5;eip=0x005cd2; 	J(CALLF(sub_49a4d,0));	// 95247                  call    far ptr sub_49A4D ;~ 17C5:5CD2
cs=0x17c5;eip=0x005cd7; 	T(ax = 0x67;);	// 95249                  mov     ax, 67h ; 'g' ;~ 17C5:5CD7
cs=0x17c5;eip=0x005cda; 	X(PUSH(ax));	// 95250                  push    ax ;~ 17C5:5CDA
cs=0x17c5;eip=0x005cdb; 	T(ax = 0x140;);	// 95251                  mov     ax, 140h ;~ 17C5:5CDB
cs=0x17c5;eip=0x005cde; 	X(PUSH(ax));	// 95252                  push    ax ;~ 17C5:5CDE
cs=0x17c5;eip=0x005cdf; 	T(ax = 0x61;);	// 95253                  mov     ax, 61h ; 'a' ;~ 17C5:5CDF
cs=0x17c5;eip=0x005ce2; 	X(PUSH(ax));	// 95254                  push    ax ;~ 17C5:5CE2
cs=0x17c5;eip=0x005ce3; 	T(SUB(ax, ax));	// 95255                  sub     ax, ax ;~ 17C5:5CE3
cs=0x17c5;eip=0x005ce5; 	X(PUSH(ax));	// 95256                  push    ax ;~ 17C5:5CE5
cs=0x17c5;eip=0x005ce6; 	T(bx = word_4e564;);	// 95257                  mov     bx, ds:word_4E564 ;~ 17C5:5CE6
cs=0x17c5;eip=0x005cea; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95258                  push    word ptr [bx] ;~ 17C5:5CEA
cs=0x17c5;eip=0x005cec; 	T(ax = 0x61;);	// 95259                  mov     ax, 61h ; 'a' ;~ 17C5:5CEC
cs=0x17c5;eip=0x005cef; 	X(PUSH(ax));	// 95260                  push    ax ;~ 17C5:5CEF
cs=0x17c5;eip=0x005cf0; 	T(SUB(ax, ax));	// 95261                  sub     ax, ax ;~ 17C5:5CF0
cs=0x17c5;eip=0x005cf2; 	X(PUSH(ax));	// 95262                  push    ax ;~ 17C5:5CF2
cs=0x17c5;eip=0x005cf3; 	T(bx = word_4e594;);	// 95263                  mov     bx, ds:word_4E594 ;~ 17C5:5CF3
cs=0x17c5;eip=0x005cf7; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95264                  push    word ptr [bx] ;~ 17C5:5CF7
cs=0x17c5;eip=0x005cf9; 	J(CALLF(sub_49a70,0));	// 95265                  call    far ptr sub_49A70 ;~ 17C5:5CF9
cs=0x17c5;eip=0x005cfe; 	T(ADD(sp, 0x10));	// 95267                  add     sp, 10h ;~ 17C5:5CFE
cs=0x17c5;eip=0x005d01; 	T(ax = 0x67;);	// 95268                  mov     ax, 67h ; 'g' ;~ 17C5:5D01
cs=0x17c5;eip=0x005d04; 	X(PUSH(ax));	// 95269                  push    ax ;~ 17C5:5D04
cs=0x17c5;eip=0x005d05; 	T(ax = 0x140;);	// 95270                  mov     ax, 140h ;~ 17C5:5D05
cs=0x17c5;eip=0x005d08; 	X(PUSH(ax));	// 95271                  push    ax ;~ 17C5:5D08
cs=0x17c5;eip=0x005d09; 	T(ax = 0x61;);	// 95272                  mov     ax, 61h ; 'a' ;~ 17C5:5D09
cs=0x17c5;eip=0x005d0c; 	X(PUSH(ax));	// 95273                  push    ax ;~ 17C5:5D0C
cs=0x17c5;eip=0x005d0d; 	T(SUB(ax, ax));	// 95274                  sub     ax, ax ;~ 17C5:5D0D
cs=0x17c5;eip=0x005d0f; 	X(PUSH(ax));	// 95275                  push    ax ;~ 17C5:5D0F
cs=0x17c5;eip=0x005d10; 	T(bx = word_4e57c;);	// 95276                  mov     bx, ds:word_4E57C ;~ 17C5:5D10
cs=0x17c5;eip=0x005d14; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95277                  push    word ptr [bx] ;~ 17C5:5D14
cs=0x17c5;eip=0x005d16; 	T(ax = 0x61;);	// 95278                  mov     ax, 61h ; 'a' ;~ 17C5:5D16
cs=0x17c5;eip=0x005d19; 	X(PUSH(ax));	// 95279                  push    ax ;~ 17C5:5D19
cs=0x17c5;eip=0x005d1a; 	T(SUB(ax, ax));	// 95280                  sub     ax, ax ;~ 17C5:5D1A
cs=0x17c5;eip=0x005d1c; 	X(PUSH(ax));	// 95281                  push    ax ;~ 17C5:5D1C
cs=0x17c5;eip=0x005d1d; 	T(bx = word_4e594;);	// 95282                  mov     bx, ds:word_4E594 ;~ 17C5:5D1D
cs=0x17c5;eip=0x005d21; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95283                  push    word ptr [bx] ;~ 17C5:5D21
cs=0x17c5;eip=0x005d23; 	J(CALLF(sub_49a70,0));	// 95284                  call    far ptr sub_49A70 ;~ 17C5:5D23
cs=0x17c5;eip=0x005d28; 	T(ADD(sp, 0x10));	// 95286                  add     sp, 10h ;~ 17C5:5D28
cs=0x17c5;eip=0x005d2b; 	J(CALL(sub_2c20b,0));	// 95287                  call    sub_2C20B ;~ 17C5:5D2B
cs=0x17c5;eip=0x005d2e; 	J(CALL(sub_27c48,0));	// 95288                  call    sub_27C48 ;~ 17C5:5D2E
cs=0x17c5;eip=0x005d31; 	X(PUSH(word_492e2));	// 95289                  push    word_492E2 ;~ 17C5:5D31
cs=0x17c5;eip=0x005d35; 	J(CALL(sub_27cb8,0));	// 95290                  call    sub_27CB8 ;~ 17C5:5D35
cs=0x17c5;eip=0x005d38; 	T(ADD(sp, 2));	// 95291                  add     sp, 2 ;~ 17C5:5D38
cs=0x17c5;eip=0x005d3b; 	T(CMP(word_522ca, 0));	// 95292                  cmp     ds:word_522CA, 0 ;~ 17C5:5D3B
cs=0x17c5;eip=0x005d40; 	J(JNZ(loc_2bf80));	// 95293                  jnz     short loc_2BF80 ;~ 17C5:5D40
cs=0x17c5;eip=0x005d42; 	X(PUSH(word_52100));	// 95294                  push    ds:word_52100 ;~ 17C5:5D42
cs=0x17c5;eip=0x005d46; 	X(PUSH(word_520f0));	// 95295                  push    ds:word_520F0 ;~ 17C5:5D46
cs=0x17c5;eip=0x005d4a; 	J(CALL(sub_2f7f9,0));	// 95296                  call    sub_2F7F9 ;~ 17C5:5D4A
cs=0x17c5;eip=0x005d4d; 	T(ADD(sp, 4));	// 95297                  add     sp, 4 ;~ 17C5:5D4D
loc_2bf80:
	// 5581 
cs=0x17c5;eip=0x005d50; 	T(ax = 0x0FFFF;);	// 95300                  mov     ax, 0FFFFh ;~ 17C5:5D50
cs=0x17c5;eip=0x005d53; 	X(word_49922 = ax;);	// 95301                  mov     word_49922, ax ;~ 17C5:5D53
cs=0x17c5;eip=0x005d56; 	X(word_49924 = ax;);	// 95302                  mov     word_49924, ax ;~ 17C5:5D56
cs=0x17c5;eip=0x005d59; 	T(ax = 3;);	// 95303                  mov     ax, 3 ;~ 17C5:5D59
cs=0x17c5;eip=0x005d5c; 	X(PUSH(ax));	// 95304                  push    ax ;~ 17C5:5D5C
cs=0x17c5;eip=0x005d5d; 	X(PUSH(ax));	// 95305                  push    ax ;~ 17C5:5D5D
cs=0x17c5;eip=0x005d5e; 	J(CALL(sub_301fc,0));	// 95306                  call    sub_301FC ;~ 17C5:5D5E
cs=0x17c5;eip=0x005d61; 	T(ADD(sp, 4));	// 95307                  add     sp, 4 ;~ 17C5:5D61
cs=0x17c5;eip=0x005d64; 	X(word_4f834 = 0;);	// 95308                  mov     ds:word_4F834, 0 ;~ 17C5:5D64
cs=0x17c5;eip=0x005d6a; 	J(JMP(loc_2bfc6));	// 95309                  jmp     short loc_2BFC6 ;~ 17C5:5D6A
loc_2bf9c:
	// 5582 
cs=0x17c5;eip=0x005d6c; 	T(ax = 0x67;);	// 95313                  mov     ax, 67h ; 'g' ;~ 17C5:5D6C
cs=0x17c5;eip=0x005d6f; 	X(PUSH(ax));	// 95314                  push    ax ;~ 17C5:5D6F
cs=0x17c5;eip=0x005d70; 	T(ax = 0x140;);	// 95315                  mov     ax, 140h ;~ 17C5:5D70
cs=0x17c5;eip=0x005d73; 	X(PUSH(ax));	// 95316                  push    ax ;~ 17C5:5D73
cs=0x17c5;eip=0x005d74; 	T(ax = 0x61;);	// 95317                  mov     ax, 61h ; 'a' ;~ 17C5:5D74
cs=0x17c5;eip=0x005d77; 	X(PUSH(ax));	// 95318                  push    ax ;~ 17C5:5D77
cs=0x17c5;eip=0x005d78; 	T(SUB(ax, ax));	// 95319                  sub     ax, ax ;~ 17C5:5D78
cs=0x17c5;eip=0x005d7a; 	X(PUSH(ax));	// 95320                  push    ax ;~ 17C5:5D7A
cs=0x17c5;eip=0x005d7b; 	T(bx = word_4e594;);	// 95321                  mov     bx, ds:word_4E594 ;~ 17C5:5D7B
cs=0x17c5;eip=0x005d7f; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95322                  push    word ptr [bx] ;~ 17C5:5D7F
cs=0x17c5;eip=0x005d81; 	T(ax = 0x61;);	// 95323                  mov     ax, 61h ; 'a' ;~ 17C5:5D81
cs=0x17c5;eip=0x005d84; 	X(PUSH(ax));	// 95324                  push    ax ;~ 17C5:5D84
cs=0x17c5;eip=0x005d85; 	T(SUB(ax, ax));	// 95325                  sub     ax, ax ;~ 17C5:5D85
cs=0x17c5;eip=0x005d87; 	X(PUSH(ax));	// 95326                  push    ax ;~ 17C5:5D87
cs=0x17c5;eip=0x005d88; 	T(bx = word_4e564;);	// 95327                  mov     bx, ds:word_4E564 ;~ 17C5:5D88
cs=0x17c5;eip=0x005d8c; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95328                  push    word ptr [bx] ;~ 17C5:5D8C
cs=0x17c5;eip=0x005d8e; 	J(CALLF(sub_49a70,0));	// 95329                  call    far ptr sub_49A70 ;~ 17C5:5D8E
cs=0x17c5;eip=0x005d93; 	T(ADD(sp, 0x10));	// 95331                  add     sp, 10h ;~ 17C5:5D93
loc_2bfc6:
	// 5583 
cs=0x17c5;eip=0x005d96; 	T(ax = word_4e382;);	// 95335                  mov     ax, ds:word_4E382 ;~ 17C5:5D96
cs=0x17c5;eip=0x005d99; 	T(CMP(word_520c0, ax));	// 95336                  cmp     ds:word_520C0, ax ;~ 17C5:5D99
cs=0x17c5;eip=0x005d9d; 	J(JNZ(loc_2bfd2));	// 95337                  jnz     short loc_2BFD2 ;~ 17C5:5D9D
cs=0x17c5;eip=0x005d9f; 	J(JMP(loc_2c0ab));	// 95338                  jmp     loc_2C0AB ;~ 17C5:5D9F
loc_2bfd2:
	// 5584 
cs=0x17c5;eip=0x005da2; 	T(CMP(word_520c0, 0x42));	// 95342                  cmp     ds:word_520C0, 42h ; 'B' ;~ 17C5:5DA2
cs=0x17c5;eip=0x005da7; 	J(JZ(loc_2bfea));	// 95343                  jz      short loc_2BFEA ;~ 17C5:5DA7
cs=0x17c5;eip=0x005da9; 	T(CMP(word_520c0, 0x43));	// 95344                  cmp     ds:word_520C0, 43h ; 'C' ;~ 17C5:5DA9
cs=0x17c5;eip=0x005dae; 	J(JZ(loc_2bfea));	// 95345                  jz      short loc_2BFEA ;~ 17C5:5DAE
cs=0x17c5;eip=0x005db0; 	T(CMP(word_520c0, 0x41));	// 95346                  cmp     ds:word_520C0, 41h ; 'A' ;~ 17C5:5DB0
cs=0x17c5;eip=0x005db5; 	J(JZ(loc_2bfea));	// 95347                  jz      short loc_2BFEA ;~ 17C5:5DB5
cs=0x17c5;eip=0x005db7; 	J(JMP(loc_2c088));	// 95348                  jmp     loc_2C088 ;~ 17C5:5DB7
loc_2bfea:
	// 5585 
cs=0x17c5;eip=0x005dba; 	J(CALLF(sub_49af7,0));	// 95353                  call    far ptr sub_49AF7 ;~ 17C5:5DBA
cs=0x17c5;eip=0x005dbf; 	J(CALLF(sub_49ad9,0));	// 95355                  call    far ptr sub_49AD9 ;~ 17C5:5DBF
cs=0x17c5;eip=0x005dc4; 	T(CMP(ax, 3));	// 95357                  cmp     ax, 3 ;~ 17C5:5DC4
cs=0x17c5;eip=0x005dc7; 	J(JNZ(loc_2c023));	// 95358                  jnz     short loc_2C023 ;~ 17C5:5DC7
cs=0x17c5;eip=0x005dc9; 	T(bx = word_4e564;);	// 95359                  mov     bx, ds:word_4E564 ;~ 17C5:5DC9
cs=0x17c5;eip=0x005dcd; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95360                  push    word ptr [bx] ;~ 17C5:5DCD
cs=0x17c5;eip=0x005dcf; 	T(CMP(word_520c0, 0x42));	// 95361                  cmp     ds:word_520C0, 42h ; 'B' ;~ 17C5:5DCF
cs=0x17c5;eip=0x005dd4; 	J(JNZ(loc_2c00b));	// 95362                  jnz     short loc_2C00B ;~ 17C5:5DD4
cs=0x17c5;eip=0x005dd6; 	T(ax = 0x5834;);	// 95363                  mov     ax, 5834h ;~ 17C5:5DD6
cs=0x17c5;eip=0x005dd9; 	J(JMP(loc_2c01a));	// 95364                  jmp     short loc_2C01A ;~ 17C5:5DD9
loc_2c00b:
	// 5586 
cs=0x17c5;eip=0x005ddb; 	T(CMP(word_520c0, 0x43));	// 95368                  cmp     ds:word_520C0, 43h ; 'C' ;~ 17C5:5DDB
cs=0x17c5;eip=0x005de0; 	J(JNZ(loc_2c017));	// 95369                  jnz     short loc_2C017 ;~ 17C5:5DE0
cs=0x17c5;eip=0x005de2; 	T(ax = 0x5840;);	// 95370                  mov     ax, 5840h ;~ 17C5:5DE2
sub_2c015:
	// 95377 
cs=0x17c5;eip=0x005de5; 	J(JMP(loc_2c01a));	// 95378                  jmp     short loc_2C01A ;~ 17C5:5DE5
loc_2c017:
	// 5587 
cs=0x17c5;eip=0x005de7; 	T(ax = 0x584D;);	// 95382                  mov     ax, 584Dh ;~ 17C5:5DE7
loc_2c01a:
	// 5588 
cs=0x17c5;eip=0x005dea; 	X(PUSH(ax));	// 95386                  push    ax ;~ 17C5:5DEA
cs=0x17c5;eip=0x005deb; 	J(CALL(sub_341ec,0));	// 95387                  call    sub_341EC ;~ 17C5:5DEB
cs=0x17c5;eip=0x005dee; 	T(ADD(sp, 4));	// 95389                  add     sp, 4 ;~ 17C5:5DEE
cs=0x17c5;eip=0x005df1; 	J(JMP(loc_2c04b));	// 95390                  jmp     short loc_2C04B ;~ 17C5:5DF1
loc_2c023:
	// 5589 
cs=0x17c5;eip=0x005df3; 	T(bx = word_4e564;);	// 95394                  mov     bx, ds:word_4E564 ;~ 17C5:5DF3
cs=0x17c5;eip=0x005df7; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95395                  push    word ptr [bx] ;~ 17C5:5DF7
cs=0x17c5;eip=0x005df9; 	T(CMP(word_520c0, 0x42));	// 95396                  cmp     ds:word_520C0, 42h ; 'B' ;~ 17C5:5DF9
cs=0x17c5;eip=0x005dfe; 	J(JNZ(loc_2c035));	// 95397                  jnz     short loc_2C035 ;~ 17C5:5DFE
cs=0x17c5;eip=0x005e00; 	T(ax = 0x5859;);	// 95398                  mov     ax, 5859h ;~ 17C5:5E00
cs=0x17c5;eip=0x005e03; 	J(JMP(loc_2c044));	// 95399                  jmp     short loc_2C044 ;~ 17C5:5E03
loc_2c035:
	// 5590 
cs=0x17c5;eip=0x005e05; 	T(CMP(word_520c0, 0x43));	// 95403                  cmp     ds:word_520C0, 43h ; 'C' ;~ 17C5:5E05
cs=0x17c5;eip=0x005e0a; 	J(JNZ(loc_2c041));	// 95404                  jnz     short loc_2C041 ;~ 17C5:5E0A
cs=0x17c5;eip=0x005e0c; 	T(ax = 0x5862;);	// 95405                  mov     ax, 5862h ;~ 17C5:5E0C
cs=0x17c5;eip=0x005e0f; 	J(JMP(loc_2c044));	// 95406                  jmp     short loc_2C044 ;~ 17C5:5E0F
loc_2c041:
	// 5591 
cs=0x17c5;eip=0x005e11; 	T(ax = 0x586C;);	// 95410                  mov     ax, 586Ch ;~ 17C5:5E11
loc_2c044:
	// 5592 
cs=0x17c5;eip=0x005e14; 	X(PUSH(ax));	// 95414                  push    ax ;~ 17C5:5E14
cs=0x17c5;eip=0x005e15; 	J(CALL(sub_341ec,0));	// 95415                  call    sub_341EC ;~ 17C5:5E15
cs=0x17c5;eip=0x005e18; 	T(ADD(sp, 4));	// 95417                  add     sp, 4 ;~ 17C5:5E18
loc_2c04b:
	// 5593 
cs=0x17c5;eip=0x005e1b; 	T(ax = 0x67;);	// 95420                  mov     ax, 67h ; 'g' ;~ 17C5:5E1B
cs=0x17c5;eip=0x005e1e; 	X(PUSH(ax));	// 95421                  push    ax ;~ 17C5:5E1E
cs=0x17c5;eip=0x005e1f; 	T(ax = 0x140;);	// 95422                  mov     ax, 140h ;~ 17C5:5E1F
cs=0x17c5;eip=0x005e22; 	X(PUSH(ax));	// 95423                  push    ax ;~ 17C5:5E22
cs=0x17c5;eip=0x005e23; 	T(ax = 0x61;);	// 95424                  mov     ax, 61h ; 'a' ;~ 17C5:5E23
cs=0x17c5;eip=0x005e26; 	X(PUSH(ax));	// 95425                  push    ax ;~ 17C5:5E26
cs=0x17c5;eip=0x005e27; 	T(SUB(ax, ax));	// 95426                  sub     ax, ax ;~ 17C5:5E27
cs=0x17c5;eip=0x005e29; 	X(PUSH(ax));	// 95427                  push    ax ;~ 17C5:5E29
cs=0x17c5;eip=0x005e2a; 	T(bx = word_4e57c;);	// 95428                  mov     bx, ds:word_4E57C ;~ 17C5:5E2A
cs=0x17c5;eip=0x005e2e; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95429                  push    word ptr [bx] ;~ 17C5:5E2E
cs=0x17c5;eip=0x005e30; 	T(ax = 0x61;);	// 95430                  mov     ax, 61h ; 'a' ;~ 17C5:5E30
cs=0x17c5;eip=0x005e33; 	X(PUSH(ax));	// 95431                  push    ax ;~ 17C5:5E33
cs=0x17c5;eip=0x005e34; 	T(SUB(ax, ax));	// 95432                  sub     ax, ax ;~ 17C5:5E34
cs=0x17c5;eip=0x005e36; 	X(PUSH(ax));	// 95433                  push    ax ;~ 17C5:5E36
cs=0x17c5;eip=0x005e37; 	T(bx = word_4e564;);	// 95434                  mov     bx, ds:word_4E564 ;~ 17C5:5E37
cs=0x17c5;eip=0x005e3b; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 95435                  push    word ptr [bx] ;~ 17C5:5E3B
cs=0x17c5;eip=0x005e3d; 	J(CALLF(sub_49a70,0));	// 95436                  call    far ptr sub_49A70 ;~ 17C5:5E3D
cs=0x17c5;eip=0x005e42; 	T(ADD(sp, 0x10));	// 95438                  add     sp, 10h ;~ 17C5:5E42
cs=0x17c5;eip=0x005e45; 	T(bx = word_4e564;);	// 95439                  mov     bx, ds:word_4E564 ;~ 17C5:5E45
cs=0x17c5;eip=0x005e49; 	T(si = word_4e57c;);	// 95440                  mov     si, ds:word_4E57C ;~ 17C5:5E49
cs=0x17c5;eip=0x005e4d; 	T(ax = 0x60;);	// 95441                  mov     ax, 60h ; '`' ;~ 17C5:5E4D
cs=0x17c5;eip=0x005e50; 	X(MOV(*(dw*)(raddr(ds,si+0x10)), ax));	// 95442                  mov     [si+10h], ax ;~ 17C5:5E50
cs=0x17c5;eip=0x005e53; 	X(MOV(*(dw*)(raddr(ds,bx+0x10)), ax));	// 95443                  mov     [bx+10h], ax ;~ 17C5:5E53
cs=0x17c5;eip=0x005e56; 	J(JMP(loc_2c0a5));	// 95444                  jmp     short loc_2C0A5 ;~ 17C5:5E56
loc_2c088:
	// 5594 
cs=0x17c5;eip=0x005e58; 	T(CMP(word_492f2, 0));	// 95448                  cmp     word_492F2, 0 ;~ 17C5:5E58
cs=0x17c5;eip=0x005e5d; 	J(JZ(loc_2c094));	// 95449                  jz      short loc_2C094 ;~ 17C5:5E5D
cs=0x17c5;eip=0x005e5f; 	T(ax = 0x60;);	// 95450                  mov     ax, 60h ; '`' ;~ 17C5:5E5F
cs=0x17c5;eip=0x005e62; 	J(JMP(loc_2c097));	// 95451                  jmp     short loc_2C097 ;~ 17C5:5E62
loc_2c094:
	// 5595 
cs=0x17c5;eip=0x005e64; 	T(ax = 0x0C7;);	// 95455                  mov     ax, 0C7h ;~ 17C5:5E64
loc_2c097:
	// 5596 
cs=0x17c5;eip=0x005e67; 	T(bx = word_4e57c;);	// 95458                  mov     bx, ds:word_4E57C ;~ 17C5:5E67
cs=0x17c5;eip=0x005e6b; 	X(MOV(*(dw*)(raddr(ds,bx+0x10)), ax));	// 95459                  mov     [bx+10h], ax ;~ 17C5:5E6B
cs=0x17c5;eip=0x005e6e; 	T(bx = word_4e564;);	// 95460                  mov     bx, ds:word_4E564 ;~ 17C5:5E6E
cs=0x17c5;eip=0x005e72; 	X(MOV(*(dw*)(raddr(ds,bx+0x10)), ax));	// 95461                  mov     [bx+10h], ax ;~ 17C5:5E72
loc_2c0a5:
	// 5597 
cs=0x17c5;eip=0x005e75; 	T(ax = word_520c0;);	// 95464                  mov     ax, ds:word_520C0 ;~ 17C5:5E75
cs=0x17c5;eip=0x005e78; 	X(word_4e382 = ax;);	// 95465                  mov     ds:word_4E382, ax ;~ 17C5:5E78
loc_2c0ab:
	// 5598 
cs=0x17c5;eip=0x005e7b; 	T(es = seg_4ee24;);	// 95468                  mov     es, ds:seg_4EE24 ;~ 17C5:5E7B
cs=0x17c5;eip=0x005e7f; 	T(al = byte_38b2f;);	// 95470                  mov     al, es:byte_38B2F ;~ 17C5:5E7F
cs=0x17c5;eip=0x005e83; 	X(byte_4a3c7 = al;);	// 95471                  mov     byte_4A3C7, al ;~ 17C5:5E83
cs=0x17c5;eip=0x005e86; 	X(*(db*)(&word_520c8) = 3;);	// 95472                  mov     byte ptr ds:word_520C8, 3 ;~ 17C5:5E86
cs=0x17c5;eip=0x005e8b; 	T(CMP(word_4f20c, 0));	// 95473                  cmp     ds:word_4F20C, 0 ;~ 17C5:5E8B
cs=0x17c5;eip=0x005e90; 	J(JNZ(loc_2c0d7));	// 95474                  jnz     short loc_2C0D7 ;~ 17C5:5E90
cs=0x17c5;eip=0x005e92; 	T(LES(bx, dword_528d6));	// 95475                  les     bx, ds:dword_528D6 ;~ 17C5:5E92
cs=0x17c5;eip=0x005e96; 	T(CMP(*(dw*)(raddr(es,bx+0x78)), 0));	// 95477                  cmp     word ptr es:[bx+78h], 0 ;~ 17C5:5E96
cs=0x17c5;eip=0x005e9b; 	J(JZ(loc_2c0d7));	// 95478                  jz      short loc_2C0D7 ;~ 17C5:5E9B
cs=0x17c5;eip=0x005e9d; 	X(byte_4a3c7 = 3;);	// 95479                  mov     byte_4A3C7, 3 ;~ 17C5:5E9D
cs=0x17c5;eip=0x005ea2; 	X(*(db*)(&word_520c8) = 0x0B;);	// 95480                  mov     byte ptr ds:word_520C8, 0Bh ;~ 17C5:5EA2
loc_2c0d7:
	// 5599 
cs=0x17c5;eip=0x005ea7; 	X(PUSH(word_492ec));	// 95484                  push    word_492EC ;~ 17C5:5EA7
cs=0x17c5;eip=0x005eab; 	J(CALL(sub_284ca,0));	// 95485                  call    sub_284CA ;~ 17C5:5EAB
cs=0x17c5;eip=0x005eae; 	T(ADD(sp, 2));	// 95487                  add     sp, 2 ;~ 17C5:5EAE
cs=0x17c5;eip=0x005eb1; 	X(*(db*)(&word_4cdb6) = 0;);	// 95488                  mov     byte ptr ds:word_4CDB6, 0 ;~ 17C5:5EB1
cs=0x17c5;eip=0x005eb6; 	T(bx = word_4e564;);	// 95489                  mov     bx, ds:word_4E564 ;~ 17C5:5EB6
cs=0x17c5;eip=0x005eba; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x10))));	// 95490                  mov     ax, [bx+10h] ;~ 17C5:5EBA
cs=0x17c5;eip=0x005ebd; 	T(INC(ax));	// 95491                  inc     ax ;~ 17C5:5EBD
cs=0x17c5;eip=0x005ebe; 	X(PUSH(ax));	// 95492                  push    ax ;~ 17C5:5EBE
cs=0x17c5;eip=0x005ebf; 	T(ax = 0x140;);	// 95493                  mov     ax, 140h ;~ 17C5:5EBF
cs=0x17c5;eip=0x005ec2; 	X(PUSH(ax));	// 95494                  push    ax ;~ 17C5:5EC2
cs=0x17c5;eip=0x005ec3; 	T(SUB(ax, ax));	// 95495                  sub     ax, ax ;~ 17C5:5EC3
cs=0x17c5;eip=0x005ec5; 	X(PUSH(ax));	// 95496                  push    ax ;~ 17C5:5EC5
cs=0x17c5;eip=0x005ec6; 	X(PUSH(ax));	// 95497                  push    ax ;~ 17C5:5EC6
cs=0x17c5;eip=0x005ec7; 	T(ax = word_5170e;);	// 95498                  mov     ax, ds:word_5170E ;~ 17C5:5EC7
cs=0x17c5;eip=0x005eca; 	T(CWD);	// 95499                  cwd ;~ 17C5:5ECA
cs=0x17c5;eip=0x005ecb; 	X(PUSH(dx));	// 95500                  push    dx ;~ 17C5:5ECB
cs=0x17c5;eip=0x005ecc; 	X(PUSH(ax));	// 95501                  push    ax ;~ 17C5:5ECC
cs=0x17c5;eip=0x005ecd; 	X(PUSH(word_51706));	// 95502                  push    ds:word_51706 ;~ 17C5:5ECD
cs=0x17c5;eip=0x005ed1; 	X(PUSH(word_51704));	// 95503                  push    ds:word_51704 ;~ 17C5:5ED1
cs=0x17c5;eip=0x005ed5; 	X(PUSH(word_51430));	// 95504                  push    ds:word_51430 ;~ 17C5:5ED5
cs=0x17c5;eip=0x005ed9; 	X(PUSH(word_5142e));	// 95505                  push    ds:word_5142E ;~ 17C5:5ED9
cs=0x17c5;eip=0x005edd; 	X(PUSH(word_51714));	// 95506                  push    ds:word_51714 ;~ 17C5:5EDD
cs=0x17c5;eip=0x005ee1; 	X(PUSH(word_520c4));	// 95507                  push    ds:word_520C4 ;~ 17C5:5EE1
cs=0x17c5;eip=0x005ee5; 	T(ax = word_527da;);	// 95508                  mov     ax, ds:word_527DA ;~ 17C5:5EE5
cs=0x17c5;eip=0x005ee8; 	T(NEG(ax));	// 95509                  neg     ax ;~ 17C5:5EE8
cs=0x17c5;eip=0x005eea; 	X(PUSH(ax));	// 95510                  push    ax ;~ 17C5:5EEA
cs=0x17c5;eip=0x005eeb; 	J(CALL(sub_283fa,0));	// 95511                  call    sub_283FA ;~ 17C5:5EEB
seg2623_5eee_proc:
	// 95515 
cs=0x17c5;eip=0x005eee; 	T(ADD(sp, 0x1A));	// 95515                  add     sp, 1Ah ;~ 17C5:5EEE
cs=0x17c5;eip=0x005ef1; 	X(byte_4e73e = 0;);	// 95516                  mov     ds:byte_4E73E, 0 ;~ 17C5:5EF1
cs=0x17c5;eip=0x005ef6; 	T(al = *(db*)(&word_4cdb6););	// 95517                  mov     al, byte ptr ds:word_4CDB6 ;~ 17C5:5EF6
cs=0x17c5;eip=0x005ef9; 	X(byte_4fb8a = al;);	// 95518                  mov     ds:byte_4FB8A, al ;~ 17C5:5EF9
cs=0x17c5;eip=0x005efc; 	T(CMP(word_520c0, 0x41));	// 95519                  cmp     ds:word_520C0, 41h ; 'A' ;~ 17C5:5EFC
cs=0x17c5;eip=0x005f01; 	J(JZ(loc_2c136));	// 95520                  jz      short loc_2C136 ;~ 17C5:5F01
cs=0x17c5;eip=0x005f03; 	J(JMP(loc_2c1e1));	// 95521                  jmp     loc_2C1E1 ;~ 17C5:5F03
loc_2c136:
	// 5600 
cs=0x17c5;eip=0x005f06; 	T(ax = 0x5878;);	// 95526                  mov     ax, 5878h ;~ 17C5:5F06
cs=0x17c5;eip=0x005f09; 	X(PUSH(ax));	// 95527                  push    ax ;~ 17C5:5F09
cs=0x17c5;eip=0x005f0a; 	J(CALL(sub_2c303,0));	// 95528                  call    sub_2C303 ;~ 17C5:5F0A
cs=0x17c5;eip=0x005f0d; 	T(ADD(sp, 2));	// 95530                  add     sp, 2 ;~ 17C5:5F0D
cs=0x17c5;eip=0x005f10; 	T(ax = 0x0F;);	// 95531                  mov     ax, 0Fh ;~ 17C5:5F10
cs=0x17c5;eip=0x005f13; 	X(PUSH(ax));	// 95532                  push    ax ;~ 17C5:5F13
cs=0x17c5;eip=0x005f14; 	J(CALLF(sub_49a43,0));	// 95533                  call    far ptr sub_49A43 ;~ 17C5:5F14
cs=0x17c5;eip=0x005f19; 	T(ADD(sp, 2));	// 95535                  add     sp, 2 ;~ 17C5:5F19
cs=0x17c5;eip=0x005f1c; 	X(word_4d78d = 0x0F1;);	// 95536                  mov     ds:word_4D78D, 0F1h ;~ 17C5:5F1C
cs=0x17c5;eip=0x005f22; 	X(word_4d791 = 0x15;);	// 95537                  mov     ds:word_4D791, 15h ;~ 17C5:5F22
cs=0x17c5;eip=0x005f28; 	X(word_4d78f = 0x0FB;);	// 95538                  mov     ds:word_4D78F, 0FBh ;~ 17C5:5F28
cs=0x17c5;eip=0x005f2e; 	X(word_4d793 = 0x5E;);	// 95539                  mov     ds:word_4D793, 5Eh ; '^' ;~ 17C5:5F2E
cs=0x17c5;eip=0x005f34; 	J(CALLF(sub_3775a,0));	// 95540                  call    sub_3775A ;~ 17C5:5F34
cs=0x17c5;eip=0x005f39; 	X(word_4d78d = 0x53;);	// 95541                  mov     ds:word_4D78D, 53h ; 'S' ;~ 17C5:5F39
cs=0x17c5;eip=0x005f3f; 	X(word_4d791 = 0x15;);	// 95542                  mov     ds:word_4D791, 15h ;~ 17C5:5F3F
cs=0x17c5;eip=0x005f45; 	X(word_4d78f = 0x49;);	// 95543                  mov     ds:word_4D78F, 49h ; 'I' ;~ 17C5:5F45
cs=0x17c5;eip=0x005f4b; 	X(word_4d793 = 0x5E;);	// 95544                  mov     ds:word_4D793, 5Eh ; '^' ;~ 17C5:5F4B
cs=0x17c5;eip=0x005f51; 	J(CALLF(sub_3775a,0));	// 95545                  call    sub_3775A ;~ 17C5:5F51
cs=0x17c5;eip=0x005f56; 	J(CALLF(sub_49a4d,0));	// 95546                  call    far ptr sub_49A4D ;~ 17C5:5F56
cs=0x17c5;eip=0x005f5b; 	T(al = byte_527d0;);	// 95548                  mov     al, ds:byte_527D0 ;~ 17C5:5F5B
cs=0x17c5;eip=0x005f5e; 	T(CBW);	// 95549                  cbw ;~ 17C5:5F5E
cs=0x17c5;eip=0x005f5f; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 95550                  mov     [bp-0Eh], ax ;~ 17C5:5F5F
cs=0x17c5;eip=0x005f62; 	J(CALLF(sub_49a7f,0));	// 95551                  call    far ptr sub_49A7F ;~ 17C5:5F62
cs=0x17c5;eip=0x005f67; 	X(byte_527d0 = al;);	// 95553                  mov     ds:byte_527D0, al ;~ 17C5:5F67
cs=0x17c5;eip=0x005f6a; 	T(SUB(ax, ax));	// 95554                  sub     ax, ax ;~ 17C5:5F6A
cs=0x17c5;eip=0x005f6c; 	X(PUSH(ax));	// 95555                  push    ax ;~ 17C5:5F6C
cs=0x17c5;eip=0x005f6d; 	T(ax = 0x2F;);	// 95556                  mov     ax, 2Fh ; '/' ;~ 17C5:5F6D
cs=0x17c5;eip=0x005f70; 	X(PUSH(ax));	// 95557                  push    ax ;~ 17C5:5F70
cs=0x17c5;eip=0x005f71; 	T(ax = 0x6F;);	// 95558                  mov     ax, 6Fh ; 'o' ;~ 17C5:5F71
cs=0x17c5;eip=0x005f74; 	X(PUSH(ax));	// 95559                  push    ax ;~ 17C5:5F74
cs=0x17c5;eip=0x005f75; 	T(SUB(ax, ax));	// 95560                  sub     ax, ax ;~ 17C5:5F75
cs=0x17c5;eip=0x005f77; 	X(PUSH(ax));	// 95561                  push    ax ;~ 17C5:5F77
cs=0x17c5;eip=0x005f78; 	T(ax = 0x0D1;);	// 95562                  mov     ax, 0D1h ;~ 17C5:5F78
cs=0x17c5;eip=0x005f7b; 	X(PUSH(ax));	// 95563                  push    ax ;~ 17C5:5F7B
cs=0x17c5;eip=0x005f7c; 	T(ax = 0x30;);	// 95564                  mov     ax, 30h ; '0' ;~ 17C5:5F7C
cs=0x17c5;eip=0x005f7f; 	X(PUSH(ax));	// 95565                  push    ax ;~ 17C5:5F7F
cs=0x17c5;eip=0x005f80; 	T(ax = 0x6B;);	// 95566                  mov     ax, 6Bh ; 'k' ;~ 17C5:5F80
cs=0x17c5;eip=0x005f83; 	X(PUSH(ax));	// 95567                  push    ax ;~ 17C5:5F83
cs=0x17c5;eip=0x005f84; 	J(CALL(sub_30af8,0));	// 95568                  call    sub_30AF8 ;~ 17C5:5F84
cs=0x17c5;eip=0x005f87; 	T(ADD(sp, 0x0E));	// 95570                  add     sp, 0Eh ;~ 17C5:5F87
cs=0x17c5;eip=0x005f8a; 	T(SUB(ax, ax));	// 95571                  sub     ax, ax ;~ 17C5:5F8A
cs=0x17c5;eip=0x005f8c; 	X(PUSH(ax));	// 95572                  push    ax ;~ 17C5:5F8C
cs=0x17c5;eip=0x005f8d; 	T(ax = 2;);	// 95573                  mov     ax, 2 ;~ 17C5:5F8D
cs=0x17c5;eip=0x005f90; 	X(PUSH(ax));	// 95574                  push    ax ;~ 17C5:5F90
cs=0x17c5;eip=0x005f91; 	T(ax = 0x0C3;);	// 95575                  mov     ax, 0C3h ;~ 17C5:5F91
cs=0x17c5;eip=0x005f94; 	X(PUSH(ax));	// 95576                  push    ax ;~ 17C5:5F94
cs=0x17c5;eip=0x005f95; 	T(ax = 0x36;);	// 95577                  mov     ax, 36h ; '6' ;~ 17C5:5F95
cs=0x17c5;eip=0x005f98; 	X(PUSH(ax));	// 95578                  push    ax ;~ 17C5:5F98
cs=0x17c5;eip=0x005f99; 	T(ax = 0x7D;);	// 95579                  mov     ax, 7Dh ; '}' ;~ 17C5:5F99
cs=0x17c5;eip=0x005f9c; 	X(PUSH(ax));	// 95580                  push    ax ;~ 17C5:5F9C
cs=0x17c5;eip=0x005f9d; 	T(ax = 0x5F;);	// 95581                  mov     ax, 5Fh ; '_' ;~ 17C5:5F9D
cs=0x17c5;eip=0x005fa0; 	X(PUSH(ax));	// 95582                  push    ax ;~ 17C5:5FA0
cs=0x17c5;eip=0x005fa1; 	T(ax = 0x41;);	// 95583                  mov     ax, 41h ; 'A' ;~ 17C5:5FA1
cs=0x17c5;eip=0x005fa4; 	X(PUSH(ax));	// 95584                  push    ax ;~ 17C5:5FA4
cs=0x17c5;eip=0x005fa5; 	J(CALL(sub_30af8,0));	// 95585                  call    sub_30AF8 ;~ 17C5:5FA5
cs=0x17c5;eip=0x005fa8; 	T(ADD(sp, 0x0E));	// 95587                  add     sp, 0Eh ;~ 17C5:5FA8
cs=0x17c5;eip=0x005fab; 	T(MOV(al, *(raddr(ss,bp-0x0E))));	// 95588                  mov     al, [bp-0Eh] ;~ 17C5:5FAB
cs=0x17c5;eip=0x005fae; 	X(byte_527d0 = al;);	// 95589                  mov     ds:byte_527D0, al ;~ 17C5:5FAE
loc_2c1e1:
	// 5601 
cs=0x17c5;eip=0x005fb1; 	J(CALLF(sub_49afc,0));	// 95592                  call    far ptr sub_49AFC ;~ 17C5:5FB1
cs=0x17c5;eip=0x005fb6; 	T(CMP(word_522ce, 0x13));	// 95594                  cmp     ds:word_522CE, 13h ;~ 17C5:5FB6
cs=0x17c5;eip=0x005fbb; 	J(JZ(loc_2c1fb));	// 95595                  jz      short loc_2C1FB ;~ 17C5:5FBB
cs=0x17c5;eip=0x005fbd; 	T(CMP(word_522ca, 1));	// 95597                  cmp     ds:word_522CA, 1 ;~ 17C5:5FBD
cs=0x17c5;eip=0x005fc2; 	J(JZ(loc_2c1fb));	// 95598                  jz      short loc_2C1FB ;~ 17C5:5FC2
cs=0x17c5;eip=0x005fc4; 	T(CMP(word_492f2, 0));	// 95599                  cmp     word_492F2, 0 ;~ 17C5:5FC4
cs=0x17c5;eip=0x005fc9; 	J(JNZ(loc_2c200));	// 95600                  jnz     short loc_2C200 ;~ 17C5:5FC9
loc_2c1fb:
	// 5602 
cs=0x17c5;eip=0x005fcb; 	T(ax = 0x0C8;);	// 95604                  mov     ax, 0C8h ;~ 17C5:5FCB
cs=0x17c5;eip=0x005fce; 	J(JMP(loc_2c203));	// 95605                  jmp     short loc_2C203 ;~ 17C5:5FCE
loc_2c200:
	// 5603 
cs=0x17c5;eip=0x005fd0; 	T(ax = 0x61;);	// 95609                  mov     ax, 61h ; 'a' ;~ 17C5:5FD0
loc_2c203:
	// 5604 
cs=0x17c5;eip=0x005fd3; 	X(word_4e356 = ax;);	// 95612                  mov     ds:word_4E356, ax ;~ 17C5:5FD3
cs=0x17c5;eip=0x005fd6; 	X(POP(si));	// 95613                  pop     si ;~ 17C5:5FD6
cs=0x17c5;eip=0x005fd7; 	T(sp = bp;);	// 95614                  mov     sp, bp ;~ 17C5:5FD7
cs=0x17c5;eip=0x005fd9; 	X(POP(bp));	// 95615                  pop     bp ;~ 17C5:5FD9
cs=0x17c5;eip=0x005fda; 	J(RETN(0));	// 95616                  retn ;~ 17C5:5FDA

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::k__def_2be4e: 	goto __def_2be4e;
        case m2c::kloc_2be10: 	goto loc_2be10;
        case m2c::kloc_2be18: 	goto loc_2be18;
        case m2c::kloc_2be21: 	goto loc_2be21;
        case m2c::kloc_2be29: 	goto loc_2be29;
        case m2c::kloc_2be31: 	goto loc_2be31;
        case m2c::kloc_2be39: 	goto loc_2be39;
        case m2c::kloc_2be41: 	goto loc_2be41;
        case m2c::kloc_2be43: 	goto loc_2be43;
        case m2c::kloc_2be7a: 	goto loc_2be7a;
        case m2c::kloc_2be93: 	goto loc_2be93;
        case m2c::kloc_2beae: 	goto loc_2beae;
        case m2c::kloc_2bec6: 	goto loc_2bec6;
        case m2c::kloc_2bed1: 	goto loc_2bed1;
        case m2c::kloc_2bef3: 	goto loc_2bef3;
        case m2c::kloc_2bf02: 	goto loc_2bf02;
        case m2c::kloc_2bf80: 	goto loc_2bf80;
        case m2c::kloc_2bf9c: 	goto loc_2bf9c;
        case m2c::kloc_2bfc6: 	goto loc_2bfc6;
        case m2c::kloc_2bfd2: 	goto loc_2bfd2;
        case m2c::kloc_2bfea: 	goto loc_2bfea;
        case m2c::kloc_2c00b: 	goto loc_2c00b;
        case m2c::kloc_2c017: 	goto loc_2c017;
        case m2c::kloc_2c01a: 	goto loc_2c01a;
        case m2c::kloc_2c023: 	goto loc_2c023;
        case m2c::kloc_2c035: 	goto loc_2c035;
        case m2c::kloc_2c041: 	goto loc_2c041;
        case m2c::kloc_2c044: 	goto loc_2c044;
        case m2c::kloc_2c04b: 	goto loc_2c04b;
        case m2c::kloc_2c088: 	goto loc_2c088;
        case m2c::kloc_2c094: 	goto loc_2c094;
        case m2c::kloc_2c097: 	goto loc_2c097;
        case m2c::kloc_2c0a5: 	goto loc_2c0a5;
        case m2c::kloc_2c0ab: 	goto loc_2c0ab;
        case m2c::kloc_2c0d7: 	goto loc_2c0d7;
        case m2c::kloc_2c136: 	goto loc_2c136;
        case m2c::kloc_2c1e1: 	goto loc_2c1e1;
        case m2c::kloc_2c1fb: 	goto loc_2c1fb;
        case m2c::kloc_2c200: 	goto loc_2c200;
        case m2c::kloc_2c203: 	goto loc_2c203;
        case m2c::kseg2623_5bde_proc: 	goto seg2623_5bde_proc;
        case m2c::kseg2623_5eee_proc: 	goto seg2623_5eee_proc;
        case m2c::ksub_2c015: 	goto sub_2c015;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c20b(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c20b:
    _begin:
cs=0x17c5;eip=0x005fdb; 	X(PUSH(bp));	// 95624                  push    bp ;~ 17C5:5FDB
cs=0x17c5;eip=0x005fdc; 	T(bp = sp;);	// 95625                  mov     bp, sp ;~ 17C5:5FDC
cs=0x17c5;eip=0x005fde; 	T(CMP(word_492f2, 0));	// 95626                  cmp     word_492F2, 0 ;~ 17C5:5FDE
cs=0x17c5;eip=0x005fe3; 	J(JNZ(loc_2c218));	// 95627                  jnz     short loc_2C218 ;~ 17C5:5FE3
cs=0x17c5;eip=0x005fe5; 	J(JMP(loc_2c298));	// 95628                  jmp     loc_2C298 ;~ 17C5:5FE5
loc_2c218:
	// 5605 
cs=0x17c5;eip=0x005fe8; 	T(SUB(ax, ax));	// 95632                  sub     ax, ax ;~ 17C5:5FE8
cs=0x17c5;eip=0x005fea; 	X(PUSH(ax));	// 95633                  push    ax ;~ 17C5:5FEA
cs=0x17c5;eip=0x005feb; 	J(CALL(sub_30074,0));	// 95634                  call    sub_30074 ;~ 17C5:5FEB
cs=0x17c5;eip=0x005fee; 	T(ADD(sp, 2));	// 95635                  add     sp, 2 ;~ 17C5:5FEE
cs=0x17c5;eip=0x005ff1; 	T(ax = 0x0C4;);	// 95636                  mov     ax, 0C4h ;~ 17C5:5FF1
cs=0x17c5;eip=0x005ff4; 	X(PUSH(ax));	// 95637                  push    ax ;~ 17C5:5FF4
cs=0x17c5;eip=0x005ff5; 	T(ax = 0x0AF;);	// 95638                  mov     ax, 0AFh ;~ 17C5:5FF5
cs=0x17c5;eip=0x005ff8; 	X(PUSH(ax));	// 95639                  push    ax ;~ 17C5:5FF8
cs=0x17c5;eip=0x005ff9; 	T(ax = 0x0DE;);	// 95640                  mov     ax, 0DEh ;~ 17C5:5FF9
cs=0x17c5;eip=0x005ffc; 	X(PUSH(ax));	// 95641                  push    ax ;~ 17C5:5FFC
cs=0x17c5;eip=0x005ffd; 	T(ax = 0x7F;);	// 95642                  mov     ax, 7Fh ;~ 17C5:5FFD
cs=0x17c5;eip=0x006000; 	X(PUSH(ax));	// 95643                  push    ax ;~ 17C5:6000
cs=0x17c5;eip=0x006001; 	T(ax = 0x0D4;);	// 95644                  mov     ax, 0D4h ;~ 17C5:6001
cs=0x17c5;eip=0x006004; 	X(PUSH(ax));	// 95645                  push    ax ;~ 17C5:6004
cs=0x17c5;eip=0x006005; 	J(CALL(sub_3008d,0));	// 95646                  call    sub_3008D ;~ 17C5:6005
cs=0x17c5;eip=0x006008; 	T(ADD(sp, 0x0A));	// 95649                  add     sp, 0Ah ;~ 17C5:6008
cs=0x17c5;eip=0x00600b; 	T(ax = 0x0C;);	// 95650                  mov     ax, 0Ch ;~ 17C5:600B
cs=0x17c5;eip=0x00600e; 	X(PUSH(ax));	// 95651                  push    ax ;~ 17C5:600E
cs=0x17c5;eip=0x00600f; 	J(CALL(sub_30074,0));	// 95652                  call    sub_30074 ;~ 17C5:600F
cs=0x17c5;eip=0x006012; 	T(ADD(sp, 2));	// 95653                  add     sp, 2 ;~ 17C5:6012
cs=0x17c5;eip=0x006015; 	T(ax = 0x0AF;);	// 95654                  mov     ax, 0AFh ;~ 17C5:6015
cs=0x17c5;eip=0x006018; 	X(PUSH(ax));	// 95655                  push    ax ;~ 17C5:6018
cs=0x17c5;eip=0x006019; 	T(ax = 0x0DE;);	// 95656                  mov     ax, 0DEh ;~ 17C5:6019
cs=0x17c5;eip=0x00601c; 	X(PUSH(ax));	// 95657                  push    ax ;~ 17C5:601C
cs=0x17c5;eip=0x00601d; 	T(ax = word_4e310;);	// 95658                  mov     ax, ds:word_4E310 ;~ 17C5:601D
cs=0x17c5;eip=0x006020; 	T(CWD);	// 95659                  cwd ;~ 17C5:6020
cs=0x17c5;eip=0x006021; 	T(cx = 3;);	// 95660                  mov     cx, 3 ;~ 17C5:6021
cs=0x17c5;eip=0x006024; 	T(IDIV2(cx));	// 95661                  idiv    cx ;~ 17C5:6024
cs=0x17c5;eip=0x006026; 	T(SUB(ax, 0x0AF));	// 95662                  sub     ax, 0AFh ;~ 17C5:6026
cs=0x17c5;eip=0x006029; 	T(NEG(ax));	// 95663                  neg     ax ;~ 17C5:6029
cs=0x17c5;eip=0x00602b; 	X(PUSH(ax));	// 95664                  push    ax ;~ 17C5:602B
cs=0x17c5;eip=0x00602c; 	T(ax = 0x0D4;);	// 95665                  mov     ax, 0D4h ;~ 17C5:602C
cs=0x17c5;eip=0x00602f; 	X(PUSH(ax));	// 95666                  push    ax ;~ 17C5:602F
cs=0x17c5;eip=0x006030; 	J(CALL(sub_3008d,0));	// 95667                  call    sub_3008D ;~ 17C5:6030
cs=0x17c5;eip=0x006033; 	T(ADD(sp, 8));	// 95669                  add     sp, 8 ;~ 17C5:6033
cs=0x17c5;eip=0x006036; 	T(CMP(word_4e310, 0x64));	// 95670                  cmp     ds:word_4E310, 64h ; 'd' ;~ 17C5:6036
cs=0x17c5;eip=0x00603b; 	J(JLE(loc_2c298));	// 95671                  jle     short loc_2C298 ;~ 17C5:603B
cs=0x17c5;eip=0x00603d; 	T(ax = 0x0E;);	// 95672                  mov     ax, 0Eh ;~ 17C5:603D
cs=0x17c5;eip=0x006040; 	X(PUSH(ax));	// 95673                  push    ax ;~ 17C5:6040
cs=0x17c5;eip=0x006041; 	J(CALL(sub_30074,0));	// 95674                  call    sub_30074 ;~ 17C5:6041
cs=0x17c5;eip=0x006044; 	T(ADD(sp, 2));	// 95675                  add     sp, 2 ;~ 17C5:6044
cs=0x17c5;eip=0x006047; 	T(ax = 0x8E;);	// 95676                  mov     ax, 8Eh ;~ 17C5:6047
cs=0x17c5;eip=0x00604a; 	X(PUSH(ax));	// 95677                  push    ax ;~ 17C5:604A
cs=0x17c5;eip=0x00604b; 	T(ax = 0x0DE;);	// 95678                  mov     ax, 0DEh ;~ 17C5:604B
cs=0x17c5;eip=0x00604e; 	X(PUSH(ax));	// 95679                  push    ax ;~ 17C5:604E
cs=0x17c5;eip=0x00604f; 	T(ax = word_4e310;);	// 95680                  mov     ax, ds:word_4E310 ;~ 17C5:604F
cs=0x17c5;eip=0x006052; 	T(CWD);	// 95681                  cwd ;~ 17C5:6052
cs=0x17c5;eip=0x006053; 	T(cx = 3;);	// 95682                  mov     cx, 3 ;~ 17C5:6053
cs=0x17c5;eip=0x006056; 	T(IDIV2(cx));	// 95683                  idiv    cx ;~ 17C5:6056
cs=0x17c5;eip=0x006058; 	T(SUB(ax, 0x0AF));	// 95684                  sub     ax, 0AFh ;~ 17C5:6058
cs=0x17c5;eip=0x00605b; 	T(NEG(ax));	// 95685                  neg     ax ;~ 17C5:605B
cs=0x17c5;eip=0x00605d; 	X(PUSH(ax));	// 95686                  push    ax ;~ 17C5:605D
cs=0x17c5;eip=0x00605e; 	T(ax = 0x0D4;);	// 95687                  mov     ax, 0D4h ;~ 17C5:605E
cs=0x17c5;eip=0x006061; 	X(PUSH(ax));	// 95688                  push    ax ;~ 17C5:6061
cs=0x17c5;eip=0x006062; 	J(CALL(sub_3008d,0));	// 95689                  call    sub_3008D ;~ 17C5:6062
cs=0x17c5;eip=0x006065; 	T(ADD(sp, 8));	// 95691                  add     sp, 8 ;~ 17C5:6065
loc_2c298:
	// 5606 
cs=0x17c5;eip=0x006068; 	T(sp = bp;);	// 95695                  mov     sp, bp ;~ 17C5:6068
cs=0x17c5;eip=0x00606a; 	X(POP(bp));	// 95696                  pop     bp ;~ 17C5:606A
cs=0x17c5;eip=0x00606b; 	J(RETN(0));	// 95697                  retn ;~ 17C5:606B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c218: 	goto loc_2c218;
        case m2c::kloc_2c298: 	goto loc_2c298;
        case m2c::ksub_2c20b: 	goto sub_2c20b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c29c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c29c:
    _begin:
cs=0x17c5;eip=0x00606c; 	X(PUSH(bp));	// 95707                  push    bp ;~ 17C5:606C
cs=0x17c5;eip=0x00606d; 	T(bp = sp;);	// 95708                  mov     bp, sp ;~ 17C5:606D
cs=0x17c5;eip=0x00606f; 	T(CMP(word_492f2, 0));	// 95709                  cmp     word_492F2, 0 ;~ 17C5:606F
cs=0x17c5;eip=0x006074; 	J(JNZ(loc_2c2a8));	// 95710                  jnz     short loc_2C2A8 ;~ 17C5:6074
cs=0x17c5;eip=0x006076; 	J(JMP(loc_2c2ff));	// 95712                  jmp     short loc_2C2FF ;~ 17C5:6076
loc_2c2a8:
	// 5607 
cs=0x17c5;eip=0x006078; 	T(SUB(ax, ax));	// 95716                  sub     ax, ax ;~ 17C5:6078
cs=0x17c5;eip=0x00607a; 	X(PUSH(ax));	// 95717                  push    ax ;~ 17C5:607A
cs=0x17c5;eip=0x00607b; 	J(CALL(sub_30074,0));	// 95718                  call    sub_30074 ;~ 17C5:607B
cs=0x17c5;eip=0x00607e; 	T(ADD(sp, 2));	// 95719                  add     sp, 2 ;~ 17C5:607E
cs=0x17c5;eip=0x006081; 	T(ax = 0x98;);	// 95720                  mov     ax, 98h ;~ 17C5:6081
cs=0x17c5;eip=0x006084; 	X(PUSH(ax));	// 95721                  push    ax ;~ 17C5:6084
cs=0x17c5;eip=0x006085; 	T(ax = 0x0A;);	// 95722                  mov     ax, 0Ah ;~ 17C5:6085
cs=0x17c5;eip=0x006088; 	X(PUSH(ax));	// 95723                  push    ax ;~ 17C5:6088
cs=0x17c5;eip=0x006089; 	T(ax = 0x6D;);	// 95724                  mov     ax, 6Dh ; 'm' ;~ 17C5:6089
cs=0x17c5;eip=0x00608c; 	X(PUSH(ax));	// 95725                  push    ax ;~ 17C5:608C
cs=0x17c5;eip=0x00608d; 	T(ax = 5;);	// 95726                  mov     ax, 5 ;~ 17C5:608D
cs=0x17c5;eip=0x006090; 	X(PUSH(ax));	// 95727                  push    ax ;~ 17C5:6090
cs=0x17c5;eip=0x006091; 	J(CALL(sub_3008d,0));	// 95728                  call    sub_3008D ;~ 17C5:6091
cs=0x17c5;eip=0x006094; 	T(ADD(sp, 8));	// 95731                  add     sp, 8 ;~ 17C5:6094
cs=0x17c5;eip=0x006097; 	T(CMP(*(word_492c8), 0x7D0));	// 95732                  cmp     word_492C8, 7D0h ;~ 17C5:6097
cs=0x17c5;eip=0x00609d; 	J(JLE(loc_2c2d4));	// 95733                  jle     short loc_2C2D4 ;~ 17C5:609D
cs=0x17c5;eip=0x00609f; 	T(ax = 2;);	// 95734                  mov     ax, 2 ;~ 17C5:609F
cs=0x17c5;eip=0x0060a2; 	J(JMP(loc_2c2d7));	// 95735                  jmp     short loc_2C2D7 ;~ 17C5:60A2
loc_2c2d4:
	// 5608 
cs=0x17c5;eip=0x0060a4; 	T(ax = 0x0E;);	// 95739                  mov     ax, 0Eh ;~ 17C5:60A4
loc_2c2d7:
	// 5609 
cs=0x17c5;eip=0x0060a7; 	X(PUSH(ax));	// 95742                  push    ax ;~ 17C5:60A7
cs=0x17c5;eip=0x0060a8; 	J(CALL(sub_30074,0));	// 95743                  call    sub_30074 ;~ 17C5:60A8
cs=0x17c5;eip=0x0060ab; 	T(ADD(sp, 2));	// 95744                  add     sp, 2 ;~ 17C5:60AB
cs=0x17c5;eip=0x0060ae; 	T(ax = 0x98;);	// 95745                  mov     ax, 98h ;~ 17C5:60AE
cs=0x17c5;eip=0x0060b1; 	X(PUSH(ax));	// 95746                  push    ax ;~ 17C5:60B1
cs=0x17c5;eip=0x0060b2; 	T(ax = 0x0A;);	// 95747                  mov     ax, 0Ah ;~ 17C5:60B2
cs=0x17c5;eip=0x0060b5; 	X(PUSH(ax));	// 95748                  push    ax ;~ 17C5:60B5
cs=0x17c5;eip=0x0060b6; 	T(ax = *(word_492c8););	// 95749                  mov     ax, word_492C8 ;~ 17C5:60B6
cs=0x17c5;eip=0x0060b9; 	T(CWD);	// 95750                  cwd ;~ 17C5:60B9
cs=0x17c5;eip=0x0060ba; 	T(cx = 0x0FA;);	// 95751                  mov     cx, 0FAh ;~ 17C5:60BA
cs=0x17c5;eip=0x0060bd; 	T(IDIV2(cx));	// 95752                  idiv    cx ;~ 17C5:60BD
cs=0x17c5;eip=0x0060bf; 	T(SUB(ax, 0x98));	// 95753                  sub     ax, 98h ;~ 17C5:60BF
cs=0x17c5;eip=0x0060c2; 	T(NEG(ax));	// 95754                  neg     ax ;~ 17C5:60C2
cs=0x17c5;eip=0x0060c4; 	X(PUSH(ax));	// 95755                  push    ax ;~ 17C5:60C4
cs=0x17c5;eip=0x0060c5; 	T(ax = 5;);	// 95756                  mov     ax, 5 ;~ 17C5:60C5
cs=0x17c5;eip=0x0060c8; 	X(PUSH(ax));	// 95757                  push    ax ;~ 17C5:60C8
cs=0x17c5;eip=0x0060c9; 	J(CALL(sub_3008d,0));	// 95758                  call    sub_3008D ;~ 17C5:60C9
cs=0x17c5;eip=0x0060cc; 	T(ADD(sp, 8));	// 95760                  add     sp, 8 ;~ 17C5:60CC
loc_2c2ff:
	// 5610 
cs=0x17c5;eip=0x0060cf; 	T(sp = bp;);	// 95763                  mov     sp, bp ;~ 17C5:60CF
cs=0x17c5;eip=0x0060d1; 	X(POP(bp));	// 95764                  pop     bp ;~ 17C5:60D1
cs=0x17c5;eip=0x0060d2; 	J(RETN(0));	// 95765                  retn ;~ 17C5:60D2

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c2a8: 	goto loc_2c2a8;
        case m2c::kloc_2c2d4: 	goto loc_2c2d4;
        case m2c::kloc_2c2d7: 	goto loc_2c2d7;
        case m2c::kloc_2c2ff: 	goto loc_2c2ff;
        case m2c::ksub_2c29c: 	goto sub_2c29c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c303(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c303:
    _begin:
#undef arg_0
#define arg_0 4
	// 95776 arg_0           = word ptr  4 ;~ 17C5:60D3
cs=0x17c5;eip=0x0060d3; 	X(PUSH(bp));	// 95778                  push    bp ;~ 17C5:60D3
cs=0x17c5;eip=0x0060d4; 	T(bp = sp;);	// 95779                  mov     bp, sp ;~ 17C5:60D4
loc_2c306:
	// 5611 
cs=0x17c5;eip=0x0060d6; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 95782                  mov     bx, [bp+arg_0] ;~ 17C5:60D6
cs=0x17c5;eip=0x0060d9; 	T(CMP(*(dw*)(raddr(ds,bx)), 0x0FFFF));	// 95783                  cmp     word ptr [bx], 0FFFFh ;~ 17C5:60D9
cs=0x17c5;eip=0x0060dc; 	J(JZ(loc_2c367));	// 95784                  jz      short loc_2C367 ;~ 17C5:60DC
cs=0x17c5;eip=0x0060de; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), 2));	// 95785                  add     [bp+arg_0], 2 ;~ 17C5:60DE
cs=0x17c5;eip=0x0060e2; 	T(MOV(bx, *(dw*)(raddr(ds,bx))));	// 95786                  mov     bx, [bx] ;~ 17C5:60E2
cs=0x17c5;eip=0x0060e4; 	T(MOV(al, *(raddr(ds,bx+0x18EC))));	// 95787                  mov     al, [bx+18ECh] ;~ 17C5:60E4
cs=0x17c5;eip=0x0060e8; 	T(SUB(ah, ah));	// 95788                  sub     ah, ah ;~ 17C5:60E8
cs=0x17c5;eip=0x0060ea; 	X(PUSH(ax));	// 95789                  push    ax ;~ 17C5:60EA
cs=0x17c5;eip=0x0060eb; 	J(CALLF(sub_49a43,0));	// 95790                  call    far ptr sub_49A43 ;~ 17C5:60EB
cs=0x17c5;eip=0x0060f0; 	T(ADD(sp, 2));	// 95792                  add     sp, 2 ;~ 17C5:60F0
cs=0x17c5;eip=0x0060f3; 	J(CALLF(sub_3794a,0));	// 95793                  call    sub_3794A ;~ 17C5:60F3
cs=0x17c5;eip=0x0060f8; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), 4));	// 95794                  add     [bp+arg_0], 4 ;~ 17C5:60F8
loc_2c32c:
	// 5612 
cs=0x17c5;eip=0x0060fc; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 95797                  mov     bx, [bp+arg_0] ;~ 17C5:60FC
cs=0x17c5;eip=0x0060ff; 	T(CMP(*(dw*)(raddr(ds,bx)), 0x0FFFF));	// 95799                  cmp     word ptr [bx], 0FFFFh ;~ 17C5:60FF
cs=0x17c5;eip=0x006102; 	J(JZ(loc_2c35c));	// 95800                  jz      short loc_2C35C ;~ 17C5:6102
cs=0x17c5;eip=0x006104; 	T(MOV(ax, *(dw*)(raddr(ds,bx-4))));	// 95801                  mov     ax, [bx-4] ;~ 17C5:6104
cs=0x17c5;eip=0x006107; 	X(word_4d78d = ax;);	// 95802                  mov     ds:word_4D78D, ax ;~ 17C5:6107
cs=0x17c5;eip=0x00610a; 	T(MOV(ax, *(dw*)(raddr(ds,bx-2))));	// 95803                  mov     ax, [bx-2] ;~ 17C5:610A
cs=0x17c5;eip=0x00610d; 	X(word_4d791 = ax;);	// 95804                  mov     ds:word_4D791, ax ;~ 17C5:610D
cs=0x17c5;eip=0x006110; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), 2));	// 95805                  add     [bp+arg_0], 2 ;~ 17C5:6110
cs=0x17c5;eip=0x006114; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 95806                  mov     ax, [bx] ;~ 17C5:6114
cs=0x17c5;eip=0x006116; 	X(word_4d78f = ax;);	// 95807                  mov     ds:word_4D78F, ax ;~ 17C5:6116
cs=0x17c5;eip=0x006119; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 95808                  mov     bx, [bp+arg_0] ;~ 17C5:6119
cs=0x17c5;eip=0x00611c; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), 2));	// 95809                  add     [bp+arg_0], 2 ;~ 17C5:611C
cs=0x17c5;eip=0x006120; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 95810                  mov     ax, [bx] ;~ 17C5:6120
cs=0x17c5;eip=0x006122; 	X(word_4d793 = ax;);	// 95811                  mov     ds:word_4D793, ax ;~ 17C5:6122
cs=0x17c5;eip=0x006125; 	J(CALLF(sub_37acc,0));	// 95812                  call    sub_37ACC ;~ 17C5:6125
cs=0x17c5;eip=0x00612a; 	J(JMP(loc_2c32c));	// 95813                  jmp     short loc_2C32C ;~ 17C5:612A
loc_2c35c:
	// 5613 
cs=0x17c5;eip=0x00612c; 	J(CALLF(sub_37934,0));	// 95817                  call    sub_37934 ;~ 17C5:612C
cs=0x17c5;eip=0x006131; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), 2));	// 95819                  add     [bp+arg_0], 2 ;~ 17C5:6131
cs=0x17c5;eip=0x006135; 	J(JMP(loc_2c306));	// 95820                  jmp     short loc_2C306 ;~ 17C5:6135
loc_2c367:
	// 5614 
cs=0x17c5;eip=0x006137; 	T(sp = bp;);	// 95824                  mov     sp, bp ;~ 17C5:6137
cs=0x17c5;eip=0x006139; 	X(POP(bp));	// 95825                  pop     bp ;~ 17C5:6139
cs=0x17c5;eip=0x00613a; 	J(RETN(0));	// 95826                  retn ;~ 17C5:613A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c306: 	goto loc_2c306;
        case m2c::kloc_2c32c: 	goto loc_2c32c;
        case m2c::kloc_2c35c: 	goto loc_2c35c;
        case m2c::kloc_2c367: 	goto loc_2c367;
        case m2c::ksub_2c303: 	goto sub_2c303;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group39(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group39:
    _begin:
sub_2c36b:
	// 95834 
#undef var_2
#define var_2 -2
	// 95837 var_2           = word ptr -2 ;~ 17C5:613B
cs=0x17c5;eip=0x00613b; 	X(PUSH(bp));	// 95839                  push    bp ;~ 17C5:613B
cs=0x17c5;eip=0x00613c; 	T(bp = sp;);	// 95840                  mov     bp, sp ;~ 17C5:613C
cs=0x17c5;eip=0x00613e; 	T(SUB(sp, 2));	// 95841                  sub     sp, 2 ;~ 17C5:613E
cs=0x17c5;eip=0x006141; 	J(CALLF(sub_49bab,0));	// 95842                  call    far ptr sub_49BAB ;~ 17C5:6141
cs=0x17c5;eip=0x006146; 	T(ax = word_4db3a;);	// 95844                  mov     ax, ds:word_4DB3A ;~ 17C5:6146
cs=0x17c5;eip=0x006149; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 95845                  mov     [bp+var_2], ax ;~ 17C5:6149
loc_2c37c:
	// 5615 
cs=0x17c5;eip=0x00614c; 	J(CALL(sub_34c86,0));	// 95849                  call    sub_34C86 ;~ 17C5:614C
cs=0x17c5;eip=0x00614f; 	T(OR(ax, ax));	// 95850                  or      ax, ax ;~ 17C5:614F
cs=0x17c5;eip=0x006151; 	J(JNZ(loc_2c385));	// 95851                  jnz     short loc_2C385 ;~ 17C5:6151
cs=0x17c5;eip=0x006153; 	J(JMP(loc_2c37c));	// 95852                  jmp     short loc_2C37C ;~ 17C5:6153
loc_2c385:
	// 5616 
cs=0x17c5;eip=0x006155; 	T(SUB(ax, ax));	// 95856                  sub     ax, ax ;~ 17C5:6155
cs=0x17c5;eip=0x006157; 	X(PUSH(ax));	// 95857                  push    ax ;~ 17C5:6157
cs=0x17c5;eip=0x006158; 	J(CALL(sub_34e30,0));	// 95858                  call    sub_34E30 ;~ 17C5:6158
cs=0x17c5;eip=0x00615b; 	T(ADD(sp, 2));	// 95859                  add     sp, 2 ;~ 17C5:615B
cs=0x17c5;eip=0x00615e; 	T(CMP(ax, 0x1900));	// 95860                  cmp     ax, 1900h ;~ 17C5:615E
cs=0x17c5;eip=0x006161; 	J(JNZ(loc_2c395));	// 95861                  jnz     short loc_2C395 ;~ 17C5:6161
cs=0x17c5;eip=0x006163; 	J(JMP(loc_2c37c));	// 95862                  jmp     short loc_2C37C ;~ 17C5:6163
loc_2c395:
	// 5617 
cs=0x17c5;eip=0x006165; 	J(CALL(sub_33cbd,0));	// 95866                  call    sub_33CBD ;~ 17C5:6165
sub_2c3a2:
	// 95885 
#undef var_a
#define var_a -0x0A
	// 95887 var_A           = word ptr -0Ah ;~ 17C5:6172
#undef var_4
#define var_4 -4
	// 95888 var_4           = word ptr -4 ;~ 17C5:6172
cs=0x17c5;eip=0x006172; 	X(PUSH(bp));	// 95890                  push    bp ;~ 17C5:6172
cs=0x17c5;eip=0x006173; 	T(bp = sp;);	// 95892                  mov     bp, sp ;~ 17C5:6173
cs=0x17c5;eip=0x006175; 	T(SUB(sp, 0x0C));	// 95893                  sub     sp, 0Ch ;~ 17C5:6175
cs=0x17c5;eip=0x006178; 	X(PUSH(di));	// 95894                  push    di ;~ 17C5:6178
cs=0x17c5;eip=0x006179; 	X(PUSH(si));	// 95895                  push    si ;~ 17C5:6179
cs=0x17c5;eip=0x00617a; 	T(CMP(word_49928, 0));	// 95896                  cmp     word_49928, 0 ;~ 17C5:617A
cs=0x17c5;eip=0x00617f; 	J(JZ(loc_2c3ba));	// 95897                  jz      short loc_2C3BA ;~ 17C5:617F
cs=0x17c5;eip=0x006181; 	T(ax = word_49914;);	// 95898                  mov     ax, word_49914 ;~ 17C5:6181
cs=0x17c5;eip=0x006184; 	T(CMP(word_5226e, ax));	// 95899                  cmp     ds:word_5226E, ax ;~ 17C5:6184
cs=0x17c5;eip=0x006188; 	J(JZ(loc_2c3de));	// 95900                  jz      short loc_2C3DE ;~ 17C5:6188
loc_2c3ba:
	// 5618 
cs=0x17c5;eip=0x00618a; 	T(CMP(word_492f2, 0));	// 95903                  cmp     word_492F2, 0 ;~ 17C5:618A
cs=0x17c5;eip=0x00618f; 	J(JZ(loc_2c3de));	// 95904                  jz      short loc_2C3DE ;~ 17C5:618F
cs=0x17c5;eip=0x006191; 	T(CMP(word_49928, 0));	// 95905                  cmp     word_49928, 0 ;~ 17C5:6191
cs=0x17c5;eip=0x006196; 	J(JNZ(loc_2c3de));	// 95906                  jnz     short loc_2C3DE ;~ 17C5:6196
cs=0x17c5;eip=0x006198; 	T(CMP(word_522ca, 0));	// 95907                  cmp     ds:word_522CA, 0 ;~ 17C5:6198
cs=0x17c5;eip=0x00619d; 	J(JNZ(loc_2c3de));	// 95908                  jnz     short loc_2C3DE ;~ 17C5:619D
cs=0x17c5;eip=0x00619f; 	J(CALL(sub_30b92,0));	// 95909                  call    sub_30B92 ;~ 17C5:619F
loc_2c3de:
	// 5619 
cs=0x17c5;eip=0x0061ae; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), 0));	// 95927                  mov     [bp+var_A], 0 ;~ 17C5:61AE
cs=0x17c5;eip=0x0061b3; 	J(JMP(loc_2c3f5));	// 95928                  jmp     short loc_2C3F5 ;~ 17C5:61B3
loc_2c3e6:
	// 5620 
cs=0x17c5;eip=0x0061b6; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_a))));	// 95935                  mov     bx, [bp+var_A] ;~ 17C5:61B6
cs=0x17c5;eip=0x0061b9; 	T(cl = 4;);	// 95936                  mov     cl, 4 ;~ 17C5:61B9
cs=0x17c5;eip=0x0061bb; 	T(SHL(bx, cl));	// 95937                  shl     bx, cl ;~ 17C5:61BB
cs=0x17c5;eip=0x0061bd; 	X(AND(*(raddr(ds,bx-0x7E4C)), 0x0FD));	// 95938                  and     byte ptr [bx-7E4Ch], 0FDh ;~ 17C5:61BD
loc_2c3f2:
	// 5621 
cs=0x17c5;eip=0x0061c2; 	X(INC(*(dw*)(raddr(ss,bp+var_a))));	// 95942                  inc     [bp+var_A] ;~ 17C5:61C2
loc_2c3f5:
	// 5622 
cs=0x17c5;eip=0x0061c5; 	T(ax = word_4f22a;);	// 95945                  mov     ax, ds:word_4F22A ;~ 17C5:61C5
cs=0x17c5;eip=0x0061c8; 	T(CMP(*(dw*)(raddr(ss,bp+var_a)), ax));	// 95946                  cmp     [bp+var_A], ax ;~ 17C5:61C8
cs=0x17c5;eip=0x0061cb; 	J(JL(loc_2c400));	// 95947                  jl      short loc_2C400 ;~ 17C5:61CB
cs=0x17c5;eip=0x0061cd; 	J(JMP(loc_2c4ac));	// 95948                  jmp     loc_2C4AC ;~ 17C5:61CD
loc_2c400:
	// 5623 
cs=0x17c5;eip=0x0061d0; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_a))));	// 95952                  mov     si, [bp+var_A] ;~ 17C5:61D0
cs=0x17c5;eip=0x0061d3; 	T(cl = 4;);	// 95953                  mov     cl, 4 ;~ 17C5:61D3
cs=0x17c5;eip=0x0061d5; 	T(SHL(si, cl));	// 95954                  shl     si, cl ;~ 17C5:61D5
cs=0x17c5;eip=0x0061d7; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4E)), 0));	// 95955                  cmp     word ptr [si-7E4Eh], 0 ;~ 17C5:61D7
cs=0x17c5;eip=0x0061dc; 	J(JZ(loc_2c3e6));	// 95956                  jz      short loc_2C3E6 ;~ 17C5:61DC
cs=0x17c5;eip=0x0061de; 	T(TEST(*(raddr(ds,si-0x7E4C)), 0x80));	// 95957                  test    byte ptr [si-7E4Ch], 80h ;~ 17C5:61DE
cs=0x17c5;eip=0x0061e3; 	J(JNZ(loc_2c3e6));	// 95958                  jnz     short loc_2C3E6 ;~ 17C5:61E3
cs=0x17c5;eip=0x0061e5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 95959                  mov     ax, [bp+var_A] ;~ 17C5:61E5
cs=0x17c5;eip=0x0061e8; 	T(bx = word_49918;);	// 95960                  mov     bx, word_49918 ;~ 17C5:61E8
cs=0x17c5;eip=0x0061ec; 	T(cl = 0x0A;);	// 95961                  mov     cl, 0Ah ;~ 17C5:61EC
cs=0x17c5;eip=0x0061ee; 	T(SAR(bx, cl));	// 95962                  sar     bx, cl ;~ 17C5:61EE
cs=0x17c5;eip=0x0061f0; 	T(IMUL1_2(bx));	// 95963                  imul    bx ;~ 17C5:61F0
cs=0x17c5;eip=0x0061f2; 	T(cx = ax;);	// 95964                  mov     cx, ax ;~ 17C5:61F2
cs=0x17c5;eip=0x0061f4; 	T(SHL(ax, 1));	// 95965                  shl     ax, 1 ;~ 17C5:61F4
cs=0x17c5;eip=0x0061f6; 	T(ADD(ax, cx));	// 95966                  add     ax, cx ;~ 17C5:61F6
cs=0x17c5;eip=0x0061f8; 	T(SHL(ax, 1));	// 95967                  shl     ax, 1 ;~ 17C5:61F8
cs=0x17c5;eip=0x0061fa; 	T(ADD(ax, cx));	// 95968                  add     ax, cx ;~ 17C5:61FA
cs=0x17c5;eip=0x0061fc; 	T(AND(al, 7));	// 95969                  and     al, 7 ;~ 17C5:61FC
cs=0x17c5;eip=0x0061fe; 	T(CMP(al, 7));	// 95970                  cmp     al, 7 ;~ 17C5:61FE
cs=0x17c5;eip=0x006200; 	J(JBE(loc_2c441));	// 95971                  jbe     short loc_2C441 ;~ 17C5:6200
cs=0x17c5;eip=0x006202; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4A)), 0));	// 95972                  cmp     word ptr [si-7E4Ah], 0 ;~ 17C5:6202
cs=0x17c5;eip=0x006207; 	J(JNZ(loc_2c441));	// 95973                  jnz     short loc_2C441 ;~ 17C5:6207
cs=0x17c5;eip=0x006209; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x100));	// 95974                  test    word ptr [si-7E4Ch], 100h ;~ 17C5:6209
cs=0x17c5;eip=0x00620f; 	J(JZ(loc_2c3e6));	// 95975                  jz      short loc_2C3E6 ;~ 17C5:620F
loc_2c441:
	// 5624 
cs=0x17c5;eip=0x006211; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_a))));	// 95979                  mov     si, [bp+var_A] ;~ 17C5:6211
cs=0x17c5;eip=0x006214; 	T(cl = 4;);	// 95980                  mov     cl, 4 ;~ 17C5:6214
cs=0x17c5;eip=0x006216; 	T(SHL(si, cl));	// 95981                  shl     si, cl ;~ 17C5:6216
cs=0x17c5;eip=0x006218; 	X(DEC(*(dw*)(raddr(ds,si-0x7E48))));	// 95982                  dec     word ptr [si-7E48h] ;~ 17C5:6218
cs=0x17c5;eip=0x00621c; 	T(CMP(*(dw*)(raddr(ds,si-0x7E48)), 0));	// 95983                  cmp     word ptr [si-7E48h], 0 ;~ 17C5:621C
cs=0x17c5;eip=0x006221; 	J(JG(loc_2c479));	// 95984                  jg      short loc_2C479 ;~ 17C5:6221
cs=0x17c5;eip=0x006223; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 95985                  mov     ax, [bp+var_A] ;~ 17C5:6223
cs=0x17c5;eip=0x006226; 	T(CWD);	// 95986                  cwd ;~ 17C5:6226
cs=0x17c5;eip=0x006227; 	T(SUB(ax, dx));	// 95987                  sub     ax, dx ;~ 17C5:6227
cs=0x17c5;eip=0x006229; 	T(SAR(ax, 1));	// 95988                  sar     ax, 1 ;~ 17C5:6229
cs=0x17c5;eip=0x00622b; 	T(cx = ax;);	// 95989                  mov     cx, ax ;~ 17C5:622B
cs=0x17c5;eip=0x00622d; 	T(ah = *(db*)(&word_492f4););	// 95990                  mov     ah, byte ptr word_492F4 ;~ 17C5:622D
cs=0x17c5;eip=0x006231; 	T(SUB(al, al));	// 95991                  sub     al, al ;~ 17C5:6231
cs=0x17c5;eip=0x006233; 	T(CWD);	// 95992                  cwd ;~ 17C5:6233
cs=0x17c5;eip=0x006234; 	T(MOV(bx, *(dw*)(raddr(ds,si-0x7E4A))));	// 95993                  mov     bx, [si-7E4Ah] ;~ 17C5:6234
cs=0x17c5;eip=0x006238; 	T(di = cx;);	// 95994                  mov     di, cx ;~ 17C5:6238
cs=0x17c5;eip=0x00623a; 	T(cl = 3;);	// 95995                  mov     cl, 3 ;~ 17C5:623A
cs=0x17c5;eip=0x00623c; 	T(SAR(bx, cl));	// 95996                  sar     bx, cl ;~ 17C5:623C
cs=0x17c5;eip=0x00623e; 	T(ADD(bx, 0x20));	// 95997                  add     bx, 20h ; ' ' ;~ 17C5:623E
cs=0x17c5;eip=0x006241; 	T(IDIV2(bx));	// 95998                  idiv    bx ;~ 17C5:6241
cs=0x17c5;eip=0x006243; 	T(ADD(ax, di));	// 95999                  add     ax, di ;~ 17C5:6243
cs=0x17c5;eip=0x006245; 	X(MOV(*(dw*)(raddr(ds,si-0x7E48)), ax));	// 96000                  mov     [si-7E48h], ax ;~ 17C5:6245
loc_2c479:
	// 5625 
cs=0x17c5;eip=0x006249; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_a))));	// 96003                  mov     bx, [bp+var_A] ;~ 17C5:6249
cs=0x17c5;eip=0x00624c; 	T(cl = 4;);	// 96004                  mov     cl, 4 ;~ 17C5:624C
cs=0x17c5;eip=0x00624e; 	T(SHL(bx, cl));	// 96005                  shl     bx, cl ;~ 17C5:624E
cs=0x17c5;eip=0x006250; 	T(CMP(*(dw*)(raddr(ds,bx-0x7E48)), 4));	// 96006                  cmp     word ptr [bx-7E48h], 4 ;~ 17C5:6250
cs=0x17c5;eip=0x006255; 	J(JZ(loc_2c48a));	// 96007                  jz      short loc_2C48A ;~ 17C5:6255
cs=0x17c5;eip=0x006257; 	J(JMP(loc_2c3f2));	// 96008                  jmp     loc_2C3F2 ;~ 17C5:6257
loc_2c48a:
	// 5626 
cs=0x17c5;eip=0x00625a; 	T(CMP(word_49928, 0));	// 96012                  cmp     word_49928, 0 ;~ 17C5:625A
cs=0x17c5;eip=0x00625f; 	J(JL(loc_2c494));	// 96013                  jl      short loc_2C494 ;~ 17C5:625F
cs=0x17c5;eip=0x006261; 	J(JMP(loc_2c3f2));	// 96014                  jmp     loc_2C3F2 ;~ 17C5:6261
loc_2c494:
	// 5627 
cs=0x17c5;eip=0x006264; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 96018                  push    [bp+var_A] ;~ 17C5:6264
cs=0x17c5;eip=0x006267; 	J(CALL(sub_2c576,0));	// 96019                  call    sub_2C576 ;~ 17C5:6267
cs=0x17c5;eip=0x00626a; 	T(ADD(sp, 2));	// 96020                  add     sp, 2 ;~ 17C5:626A
cs=0x17c5;eip=0x00626d; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_a))));	// 96021                  mov     bx, [bp+var_A] ;~ 17C5:626D
cs=0x17c5;eip=0x006270; 	T(cl = 4;);	// 96022                  mov     cl, 4 ;~ 17C5:6270
cs=0x17c5;eip=0x006272; 	T(SHL(bx, cl));	// 96023                  shl     bx, cl ;~ 17C5:6272
cs=0x17c5;eip=0x006274; 	X(OR(*(raddr(ds,bx-0x7E4C)), 2));	// 96024                  or      byte ptr [bx-7E4Ch], 2 ;~ 17C5:6274
cs=0x17c5;eip=0x006279; 	J(JMP(loc_2c3f2));	// 96025                  jmp     loc_2C3F2 ;~ 17C5:6279
loc_2c4ac:
	// 5628 
cs=0x17c5;eip=0x00627c; 	T(LES(bx, dword_528d6));	// 96029                  les     bx, ds:dword_528D6 ;~ 17C5:627C
cs=0x17c5;eip=0x006280; 	T(CMP(*(dw*)(raddr(es,bx+0x78)), 0));	// 96031                  cmp     word ptr es:[bx+78h], 0 ;~ 17C5:6280
cs=0x17c5;eip=0x006285; 	J(JNZ(loc_2c4bd));	// 96032                  jnz     short loc_2C4BD ;~ 17C5:6285
cs=0x17c5;eip=0x006287; 	X(word_4f1a2 = 0;);	// 96033                  mov     ds:word_4F1A2, 0 ;~ 17C5:6287
loc_2c4bd:
	// 5629 
cs=0x17c5;eip=0x00628d; 	T(CMP(word_522ca, 0));	// 96036                  cmp     ds:word_522CA, 0 ;~ 17C5:628D
cs=0x17c5;eip=0x006292; 	J(JZ(loc_2c4c7));	// 96037                  jz      short loc_2C4C7 ;~ 17C5:6292
cs=0x17c5;eip=0x006294; 	J(JMP(loc_2c56c));	// 96038                  jmp     loc_2C56C ;~ 17C5:6294
loc_2c4c7:
	// 5630 
cs=0x17c5;eip=0x006297; 	T(CMP(word_49928, 0));	// 96042                  cmp     word_49928, 0 ;~ 17C5:6297
cs=0x17c5;eip=0x00629c; 	J(JG(loc_2c4d1));	// 96043                  jg      short loc_2C4D1 ;~ 17C5:629C
cs=0x17c5;eip=0x00629e; 	J(JMP(loc_2c56c));	// 96044                  jmp     loc_2C56C ;~ 17C5:629E
loc_2c4d1:
	// 5631 
cs=0x17c5;eip=0x0062a1; 	T(CMP(word_492f2, 0));	// 96048                  cmp     word_492F2, 0 ;~ 17C5:62A1
cs=0x17c5;eip=0x0062a6; 	J(JNZ(loc_2c4db));	// 96049                  jnz     short loc_2C4DB ;~ 17C5:62A6
cs=0x17c5;eip=0x0062a8; 	J(JMP(loc_2c56c));	// 96050                  jmp     loc_2C56C ;~ 17C5:62A8
loc_2c4db:
	// 5632 
cs=0x17c5;eip=0x0062ab; 	T(CMP(word_520ae, 1));	// 96054                  cmp     ds:word_520AE, 1 ;~ 17C5:62AB
cs=0x17c5;eip=0x0062b0; 	J(JG(loc_2c4e5));	// 96055                  jg      short loc_2C4E5 ;~ 17C5:62B0
cs=0x17c5;eip=0x0062b2; 	J(JMP(loc_2c56c));	// 96056                  jmp     loc_2C56C ;~ 17C5:62B2
loc_2c4e5:
	// 5633 
cs=0x17c5;eip=0x0062b5; 	T(CMP(word_4f20c, 0));	// 96060                  cmp     ds:word_4F20C, 0 ;~ 17C5:62B5
cs=0x17c5;eip=0x0062ba; 	J(JZ(loc_2c52c));	// 96061                  jz      short loc_2C52C ;~ 17C5:62BA
cs=0x17c5;eip=0x0062bc; 	T(CMP(*(dw*)(raddr(es,bx+0x78)), 0));	// 96062                  cmp     word ptr es:[bx+78h], 0 ;~ 17C5:62BC
cs=0x17c5;eip=0x0062c1; 	J(JZ(loc_2c52c));	// 96063                  jz      short loc_2C52C ;~ 17C5:62C1
cs=0x17c5;eip=0x0062c3; 	J(CALL(_group59,m2c::kloc_30bec));	// 96064                  call    loc_30BEC ;~ 17C5:62C3
cs=0x17c5;eip=0x0062c6; 	T(ax = word_492f4;);	// 96066                  mov     ax, word_492F4 ;~ 17C5:62C6
cs=0x17c5;eip=0x0062c9; 	T(CWD);	// 96067                  cwd ;~ 17C5:62C9
cs=0x17c5;eip=0x0062ca; 	X(PUSH(dx));	// 96068                  push    dx ;~ 17C5:62CA
cs=0x17c5;eip=0x0062cb; 	X(PUSH(ax));	// 96069                  push    ax ;~ 17C5:62CB
cs=0x17c5;eip=0x0062cc; 	T(ax = word_520ae;);	// 96070                  mov     ax, ds:word_520AE ;~ 17C5:62CC
cs=0x17c5;eip=0x0062cf; 	T(CWD);	// 96071                  cwd ;~ 17C5:62CF
cs=0x17c5;eip=0x0062d0; 	X(PUSH(dx));	// 96072                  push    dx ;~ 17C5:62D0
cs=0x17c5;eip=0x0062d1; 	X(PUSH(ax));	// 96073                  push    ax ;~ 17C5:62D1
cs=0x17c5;eip=0x0062d2; 	X(PUSH(word_492f4));	// 96074                  push    word_492F4 ;~ 17C5:62D2
cs=0x17c5;eip=0x0062d6; 	T(ax = 1;);	// 96075                  mov     ax, 1 ;~ 17C5:62D6
cs=0x17c5;eip=0x0062d9; 	X(PUSH(ax));	// 96076                  push    ax ;~ 17C5:62D9
cs=0x17c5;eip=0x0062da; 	T(ax = word_492f4;);	// 96077                  mov     ax, word_492F4 ;~ 17C5:62DA
cs=0x17c5;eip=0x0062dd; 	T(SUB(ax, word_49928));	// 96078                  sub     ax, word_49928 ;~ 17C5:62DD
cs=0x17c5;eip=0x0062e1; 	X(PUSH(ax));	// 96079                  push    ax ;~ 17C5:62E1
cs=0x17c5;eip=0x0062e2; 	J(CALL(sub_33194,0));	// 96080                  call    sub_33194 ;~ 17C5:62E2
cs=0x17c5;eip=0x0062e5; 	T(ADD(sp, 6));	// 96081                  add     sp, 6 ;~ 17C5:62E5
cs=0x17c5;eip=0x0062e8; 	T(CWD);	// 96082                  cwd ;~ 17C5:62E8
cs=0x17c5;eip=0x0062e9; 	X(PUSH(dx));	// 96083                  push    dx ;~ 17C5:62E9
cs=0x17c5;eip=0x0062ea; 	X(PUSH(ax));	// 96084                  push    ax ;~ 17C5:62EA
cs=0x17c5;eip=0x0062eb; 	J(CALL(sub_34ee0,0));	// 96085                  call    sub_34EE0 ;~ 17C5:62EB
cs=0x17c5;eip=0x0062ee; 	X(PUSH(dx));	// 96086                  push    dx ;~ 17C5:62EE
cs=0x17c5;eip=0x0062ef; 	X(PUSH(ax));	// 96087                  push    ax ;~ 17C5:62EF
cs=0x17c5;eip=0x0062f0; 	J(CALL(sub_34e44,0));	// 96088                  call    sub_34E44 ;~ 17C5:62F0
cs=0x17c5;eip=0x0062f3; 	T(cl = 6;);	// 96089                  mov     cl, 6 ;~ 17C5:62F3
cs=0x17c5;eip=0x0062f5; 	T(SHL(ax, cl));	// 96090                  shl     ax, cl ;~ 17C5:62F5
cs=0x17c5;eip=0x0062f7; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 96091                  mov     [bp+var_4], ax ;~ 17C5:62F7
cs=0x17c5;eip=0x0062fa; 	J(JMP(loc_2c53c));	// 96092                  jmp     short loc_2C53C ;~ 17C5:62FA
loc_2c52c:
	// 5634 
cs=0x17c5;eip=0x0062fc; 	T(ax = word_520ae;);	// 96097                  mov     ax, ds:word_520AE ;~ 17C5:62FC
cs=0x17c5;eip=0x0062ff; 	T(cl = 6;);	// 96098                  mov     cl, 6 ;~ 17C5:62FF
cs=0x17c5;eip=0x006301; 	T(SHL(ax, cl));	// 96099                  shl     ax, cl ;~ 17C5:6301
cs=0x17c5;eip=0x006303; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 96100                  mov     [bp+var_4], ax ;~ 17C5:6303
cs=0x17c5;eip=0x006306; 	X(word_520ae = 0;);	// 96101                  mov     ds:word_520AE, 0 ;~ 17C5:6306
loc_2c53c:
	// 5635 
cs=0x17c5;eip=0x00630c; 	T(CMP(word_520c6, 0));	// 96104                  cmp     ds:word_520C6, 0 ;~ 17C5:630C
cs=0x17c5;eip=0x006311; 	J(JL(loc_2c56c));	// 96105                  jl      short loc_2C56C ;~ 17C5:6311
cs=0x17c5;eip=0x006313; 	T(si = word_520c6;);	// 96106                  mov     si, ds:word_520C6 ;~ 17C5:6313
cs=0x17c5;eip=0x006317; 	T(cl = 4;);	// 96107                  mov     cl, 4 ;~ 17C5:6317
cs=0x17c5;eip=0x006319; 	T(SHL(si, cl));	// 96108                  shl     si, cl ;~ 17C5:6319
cs=0x17c5;eip=0x00631b; 	X(PUSH(word_5216e));	// 96109                  push    ds:word_5216E ;~ 17C5:631B
cs=0x17c5;eip=0x00631f; 	X(PUSH(word_5216c));	// 96110                  push    ds:word_5216C ;~ 17C5:631F
cs=0x17c5;eip=0x006323; 	X(PUSH(word_528da));	// 96111                  push    ds:word_528DA ;~ 17C5:6323
cs=0x17c5;eip=0x006327; 	X(PUSH(word_4f1a2));	// 96112                  push    ds:word_4F1A2 ;~ 17C5:6327
cs=0x17c5;eip=0x00632b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 96113                  push    [bp+var_4] ;~ 17C5:632B
cs=0x17c5;eip=0x00632e; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 96114                  push    word ptr [si-7E50h] ;~ 17C5:632E
cs=0x17c5;eip=0x006332; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 96115                  push    word ptr [si-7E52h] ;~ 17C5:6332
cs=0x17c5;eip=0x006336; 	J(CALL(seg2623_9adb_proc,m2c::kloc_2fd0b));	// 96116                  call    loc_2FD0B ;~ 17C5:6336
cs=0x17c5;eip=0x006339; 	T(ADD(sp, 0x0E));	// 96117                  add     sp, 0Eh ;~ 17C5:6339
loc_2c56c:
	// 5636 
cs=0x17c5;eip=0x00633c; 	X(DEC(word_49928));	// 96121                  dec     word_49928 ;~ 17C5:633C
cs=0x17c5;eip=0x006340; 	X(POP(si));	// 96122                  pop     si ;~ 17C5:6340
cs=0x17c5;eip=0x006341; 	X(POP(di));	// 96123                  pop     di ;~ 17C5:6341
cs=0x17c5;eip=0x006342; 	T(sp = bp;);	// 96124                  mov     sp, bp ;~ 17C5:6342
cs=0x17c5;eip=0x006344; 	X(POP(bp));	// 96125                  pop     bp ;~ 17C5:6344
cs=0x17c5;eip=0x006345; 	J(RETN(0));	// 96126                  retn ;~ 17C5:6345

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c37c: 	goto loc_2c37c;
        case m2c::kloc_2c385: 	goto loc_2c385;
        case m2c::kloc_2c395: 	goto loc_2c395;
        case m2c::kloc_2c3ba: 	goto loc_2c3ba;
        case m2c::kloc_2c3de: 	goto loc_2c3de;
        case m2c::kloc_2c3e6: 	goto loc_2c3e6;
        case m2c::kloc_2c3f2: 	goto loc_2c3f2;
        case m2c::kloc_2c3f5: 	goto loc_2c3f5;
        case m2c::kloc_2c400: 	goto loc_2c400;
        case m2c::kloc_2c441: 	goto loc_2c441;
        case m2c::kloc_2c479: 	goto loc_2c479;
        case m2c::kloc_2c48a: 	goto loc_2c48a;
        case m2c::kloc_2c494: 	goto loc_2c494;
        case m2c::kloc_2c4ac: 	goto loc_2c4ac;
        case m2c::kloc_2c4bd: 	goto loc_2c4bd;
        case m2c::kloc_2c4c7: 	goto loc_2c4c7;
        case m2c::kloc_2c4d1: 	goto loc_2c4d1;
        case m2c::kloc_2c4db: 	goto loc_2c4db;
        case m2c::kloc_2c4e5: 	goto loc_2c4e5;
        case m2c::kloc_2c52c: 	goto loc_2c52c;
        case m2c::kloc_2c53c: 	goto loc_2c53c;
        case m2c::kloc_2c56c: 	goto loc_2c56c;
        case m2c::ksub_2c36b: 	goto sub_2c36b;
        case m2c::ksub_2c3a2: 	goto sub_2c3a2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c576(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c576:
    _begin:
#undef var_2a
#define var_2a -0x2A
	// 96137 var_2A          = word ptr -2Ah ;~ 17C5:6346
#undef var_24
#define var_24 -0x24
	// 96138 var_24          = word ptr -24h ;~ 17C5:6346
#undef var_22
#define var_22 -0x22
	// 96139 var_22          = word ptr -22h ;~ 17C5:6346
#undef var_20
#define var_20 -0x20
	// 96140 var_20          = word ptr -20h ;~ 17C5:6346
#undef var_1e
#define var_1e -0x1E
	// 96141 var_1E          = word ptr -1Eh ;~ 17C5:6346
#undef var_16
#define var_16 -0x16
	// 96142 var_16          = word ptr -16h ;~ 17C5:6346
#undef arg_0
#define arg_0 4
	// 96143 arg_0           = word ptr  4 ;~ 17C5:6346
cs=0x17c5;eip=0x006346; 	X(PUSH(bp));	// 96145                  push    bp ;~ 17C5:6346
cs=0x17c5;eip=0x006347; 	T(bp = sp;);	// 96146                  mov     bp, sp ;~ 17C5:6347
cs=0x17c5;eip=0x006349; 	T(SUB(sp, 0x2A));	// 96147                  sub     sp, 2Ah ;~ 17C5:6349
cs=0x17c5;eip=0x00634c; 	X(PUSH(di));	// 96148                  push    di ;~ 17C5:634C
cs=0x17c5;eip=0x00634d; 	X(PUSH(si));	// 96149                  push    si ;~ 17C5:634D
cs=0x17c5;eip=0x00634e; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 96150                  mov     si, [bp+arg_0] ;~ 17C5:634E
cs=0x17c5;eip=0x006351; 	T(cl = 4;);	// 96151                  mov     cl, 4 ;~ 17C5:6351
cs=0x17c5;eip=0x006353; 	T(SHL(si, cl));	// 96152                  shl     si, cl ;~ 17C5:6353
cs=0x17c5;eip=0x006355; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E4E))));	// 96153                  mov     ax, [si-7E4Eh] ;~ 17C5:6355
cs=0x17c5;eip=0x006359; 	X(MOV(*(dw*)(raddr(ss,bp+var_22)), ax));	// 96154                  mov     [bp+var_22], ax ;~ 17C5:6359
cs=0x17c5;eip=0x00635c; 	T(ax = bp+var_1e);	// 96155                  lea     ax, [bp+var_1E] ;~ 17C5:635C
cs=0x17c5;eip=0x00635f; 	X(PUSH(ax));	// 96156                  push    ax ;~ 17C5:635F
cs=0x17c5;eip=0x006360; 	T(ax = bp+var_16);	// 96157                  lea     ax, [bp+var_16] ;~ 17C5:6360
cs=0x17c5;eip=0x006363; 	X(PUSH(ax));	// 96158                  push    ax ;~ 17C5:6363
cs=0x17c5;eip=0x006364; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 96159                  push    [bp+var_22] ;~ 17C5:6364
cs=0x17c5;eip=0x006367; 	T(SUB(ax, ax));	// 96160                  sub     ax, ax ;~ 17C5:6367
cs=0x17c5;eip=0x006369; 	X(PUSH(ax));	// 96161                  push    ax ;~ 17C5:6369
cs=0x17c5;eip=0x00636a; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 96162                  push    word ptr [si-7E50h] ;~ 17C5:636A
cs=0x17c5;eip=0x00636e; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 96163                  push    word ptr [si-7E52h] ;~ 17C5:636E
cs=0x17c5;eip=0x006372; 	J(CALL(sub_2c83e,0));	// 96164                  call    sub_2C83E ;~ 17C5:6372
cs=0x17c5;eip=0x006375; 	T(ADD(sp, 0x0C));	// 96165                  add     sp, 0Ch ;~ 17C5:6375
cs=0x17c5;eip=0x006378; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 96166                  mov     [bp+var_2A], ax ;~ 17C5:6378
cs=0x17c5;eip=0x00637b; 	X(word_4992a = 0;);	// 96167                  mov     word_4992A, 0 ;~ 17C5:637B
cs=0x17c5;eip=0x006381; 	T(OR(ax, ax));	// 96168                  or      ax, ax ;~ 17C5:6381
cs=0x17c5;eip=0x006383; 	J(JG(loc_2c5b8));	// 96169                  jg      short loc_2C5B8 ;~ 17C5:6383
cs=0x17c5;eip=0x006385; 	J(JMP(loc_2c653));	// 96170                  jmp     loc_2C653 ;~ 17C5:6385
loc_2c5b8:
	// 5637 
cs=0x17c5;eip=0x006388; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), ax));	// 96174                  mov     [bp+var_20], ax ;~ 17C5:6388
cs=0x17c5;eip=0x00638b; 	T(CMP(ax, 0x63));	// 96175                  cmp     ax, 63h ; 'c' ;~ 17C5:638B
cs=0x17c5;eip=0x00638e; 	J(JLE(loc_2c5c5));	// 96176                  jle     short loc_2C5C5 ;~ 17C5:638E
cs=0x17c5;eip=0x006390; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), 0x63));	// 96177                  mov     [bp+var_20], 63h ; 'c' ;~ 17C5:6390
loc_2c5c5:
	// 5638 
cs=0x17c5;eip=0x006395; 	X(word_4992a = 4;);	// 96180                  mov     word_4992A, 4 ;~ 17C5:6395
cs=0x17c5;eip=0x00639b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2a))));	// 96181                  mov     ax, [bp+var_2A] ;~ 17C5:639B
cs=0x17c5;eip=0x00639e; 	T(ADD(ax, word_49914));	// 96182                  add     ax, word_49914 ;~ 17C5:639E
cs=0x17c5;eip=0x0063a2; 	T(CMP(ax, 0x32));	// 96183                  cmp     ax, 32h ; '2' ;~ 17C5:63A2
cs=0x17c5;eip=0x0063a5; 	J(JLE(loc_2c5dd));	// 96184                  jle     short loc_2C5DD ;~ 17C5:63A5
cs=0x17c5;eip=0x0063a7; 	X(word_4992a = 0x0C;);	// 96185                  mov     word_4992A, 0Ch ;~ 17C5:63A7
loc_2c5dd:
	// 5639 
cs=0x17c5;eip=0x0063ad; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2a))));	// 96188                  mov     ax, [bp+var_2A] ;~ 17C5:63AD
cs=0x17c5;eip=0x0063b0; 	T(ADD(ax, word_49914));	// 96189                  add     ax, word_49914 ;~ 17C5:63B0
cs=0x17c5;eip=0x0063b4; 	T(CMP(ax, 0x64));	// 96190                  cmp     ax, 64h ; 'd' ;~ 17C5:63B4
cs=0x17c5;eip=0x0063b7; 	J(JLE(loc_2c5ef));	// 96191                  jle     short loc_2C5EF ;~ 17C5:63B7
cs=0x17c5;eip=0x0063b9; 	X(word_4992a = 0x0E;);	// 96192                  mov     word_4992A, 0Eh ;~ 17C5:63B9
loc_2c5ef:
	// 5640 
cs=0x17c5;eip=0x0063bf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2a))));	// 96195                  mov     ax, [bp+var_2A] ;~ 17C5:63BF
cs=0x17c5;eip=0x0063c2; 	X(word_520ae = ax;);	// 96196                  mov     ds:word_520AE, ax ;~ 17C5:63C2
cs=0x17c5;eip=0x0063c5; 	T(ax = word_492f4;);	// 96197                  mov     ax, word_492F4 ;~ 17C5:63C5
cs=0x17c5;eip=0x0063c8; 	X(word_49928 = ax;);	// 96198                  mov     word_49928, ax ;~ 17C5:63C8
cs=0x17c5;eip=0x0063cb; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 96199                  mov     ax, [bp+arg_0] ;~ 17C5:63CB
cs=0x17c5;eip=0x0063ce; 	X(word_520c6 = ax;);	// 96200                  mov     ds:word_520C6, ax ;~ 17C5:63CE
cs=0x17c5;eip=0x0063d1; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_22))));	// 96201                  mov     bx, [bp+var_22] ;~ 17C5:63D1
cs=0x17c5;eip=0x0063d4; 	T(ax = bx;);	// 96202                  mov     ax, bx ;~ 17C5:63D4
cs=0x17c5;eip=0x0063d6; 	T(SHL(bx, 1));	// 96203                  shl     bx, 1 ;~ 17C5:63D6
cs=0x17c5;eip=0x0063d8; 	T(ADD(bx, ax));	// 96204                  add     bx, ax ;~ 17C5:63D8
cs=0x17c5;eip=0x0063da; 	T(SHL(bx, 1));	// 96205                  shl     bx, 1 ;~ 17C5:63DA
cs=0x17c5;eip=0x0063dc; 	T(ADD(bx, ax));	// 96206                  add     bx, ax ;~ 17C5:63DC
cs=0x17c5;eip=0x0063de; 	T(SHL(bx, 1));	// 96207                  shl     bx, 1 ;~ 17C5:63DE
cs=0x17c5;eip=0x0063e0; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x192))));	// 96208                  mov     ax, [bx+192h] ;~ 17C5:63E0
cs=0x17c5;eip=0x0063e4; 	T(AND(ax, 1));	// 96209                  and     ax, 1 ;~ 17C5:63E4
cs=0x17c5;eip=0x0063e7; 	X(word_528da = ax;);	// 96210                  mov     ds:word_528DA, ax ;~ 17C5:63E7
cs=0x17c5;eip=0x0063ea; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 96211                  mov     bx, [bp+arg_0] ;~ 17C5:63EA
cs=0x17c5;eip=0x0063ed; 	T(cl = 4;);	// 96212                  mov     cl, 4 ;~ 17C5:63ED
cs=0x17c5;eip=0x0063ef; 	T(SHL(bx, cl));	// 96213                  shl     bx, cl ;~ 17C5:63EF
cs=0x17c5;eip=0x0063f1; 	T(CMP(*(dw*)(raddr(ds,bx-0x7E4A)), 0));	// 96214                  cmp     word ptr [bx-7E4Ah], 0 ;~ 17C5:63F1
cs=0x17c5;eip=0x0063f6; 	J(JZ(loc_2c63b));	// 96215                  jz      short loc_2C63B ;~ 17C5:63F6
cs=0x17c5;eip=0x0063f8; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_16))));	// 96216                  mov     si, [bp+var_16] ;~ 17C5:63F8
cs=0x17c5;eip=0x0063fb; 	T(cl = 8;);	// 96217                  mov     cl, 8 ;~ 17C5:63FB
cs=0x17c5;eip=0x0063fd; 	T(SAR(si, cl));	// 96218                  sar     si, cl ;~ 17C5:63FD
cs=0x17c5;eip=0x0063ff; 	T(ax = si-0x20);	// 96219                  lea     ax, [si-20h] ;~ 17C5:63FF
cs=0x17c5;eip=0x006402; 	X(word_5216c = ax;);	// 96220                  mov     ds:word_5216C, ax ;~ 17C5:6402
cs=0x17c5;eip=0x006405; 	T(ax = si+0x20);	// 96221                  lea     ax, [si+20h] ;~ 17C5:6405
cs=0x17c5;eip=0x006408; 	X(word_5216e = ax;);	// 96222                  mov     ds:word_5216E, ax ;~ 17C5:6408
loc_2c63b:
	// 5641 
cs=0x17c5;eip=0x00640b; 	T(ax = word_4992a;);	// 96225                  mov     ax, word_4992A ;~ 17C5:640B
cs=0x17c5;eip=0x00640e; 	X(word_4f1a2 = ax;);	// 96226                  mov     ds:word_4F1A2, ax ;~ 17C5:640E
cs=0x17c5;eip=0x006411; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 96227                  mov     si, [bp+arg_0] ;~ 17C5:6411
cs=0x17c5;eip=0x006414; 	T(cl = 4;);	// 96228                  mov     cl, 4 ;~ 17C5:6414
cs=0x17c5;eip=0x006416; 	T(SHL(si, cl));	// 96229                  shl     si, cl ;~ 17C5:6416
cs=0x17c5;eip=0x006418; 	T(ADD(si, 0x81B4));	// 96230                  add     si, 81B4h ;~ 17C5:6418
cs=0x17c5;eip=0x00641c; 	T(TEST(*(raddr(ds,si)), 4));	// 96231                  test    byte ptr [si], 4 ;~ 17C5:641C
cs=0x17c5;eip=0x00641f; 	J(JNZ(loc_2c653));	// 96232                  jnz     short loc_2C653 ;~ 17C5:641F
cs=0x17c5;eip=0x006421; 	X(OR(*(raddr(ds,si)), cl));	// 96233                  or      [si], cl ;~ 17C5:6421
loc_2c653:
	// 5642 
cs=0x17c5;eip=0x006423; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1e))));	// 96237                  mov     ax, [bp+var_1E] ;~ 17C5:6423
cs=0x17c5;eip=0x006426; 	T(CMP(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 96238                  cmp     [bp+var_2A], ax ;~ 17C5:6426
cs=0x17c5;eip=0x006429; 	J(JA(loc_2c65e));	// 96239                  ja      short loc_2C65E ;~ 17C5:6429
cs=0x17c5;eip=0x00642b; 	J(JMP(loc_2c81e));	// 96240                  jmp     loc_2C81E ;~ 17C5:642B
loc_2c65e:
	// 5643 
cs=0x17c5;eip=0x00642e; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 96244                  mov     si, [bp+arg_0] ;~ 17C5:642E
cs=0x17c5;eip=0x006431; 	T(cl = 4;);	// 96245                  mov     cl, 4 ;~ 17C5:6431
cs=0x17c5;eip=0x006433; 	T(SHL(si, cl));	// 96246                  shl     si, cl ;~ 17C5:6433
cs=0x17c5;eip=0x006435; 	T(ADD(si, 0x81B6));	// 96247                  add     si, 81B6h ;~ 17C5:6435
cs=0x17c5;eip=0x006439; 	T(ax = word_492ea;);	// 96248                  mov     ax, word_492EA ;~ 17C5:6439
cs=0x17c5;eip=0x00643c; 	T(ADD(ax, word_492e8));	// 96249                  add     ax, word_492E8 ;~ 17C5:643C
cs=0x17c5;eip=0x006440; 	T(cl = 5;);	// 96250                  mov     cl, 5 ;~ 17C5:6440
cs=0x17c5;eip=0x006442; 	T(SHL(ax, cl));	// 96251                  shl     ax, cl ;~ 17C5:6442
cs=0x17c5;eip=0x006444; 	T(ADD(ax, 0x20));	// 96252                  add     ax, 20h ; ' ' ;~ 17C5:6444
cs=0x17c5;eip=0x006447; 	X(ADD(*(dw*)(raddr(ds,si)), ax));	// 96253                  add     [si], ax ;~ 17C5:6447
cs=0x17c5;eip=0x006449; 	T(CMP(*(dw*)(raddr(ds,si)), 0x0FF));	// 96254                  cmp     word ptr [si], 0FFh ;~ 17C5:6449
cs=0x17c5;eip=0x00644d; 	J(JLE(loc_2c683));	// 96255                  jle     short loc_2C683 ;~ 17C5:644D
cs=0x17c5;eip=0x00644f; 	X(MOV(*(dw*)(raddr(ds,si)), 0x0FF));	// 96256                  mov     word ptr [si], 0FFh ;~ 17C5:644F
loc_2c683:
	// 5644 
cs=0x17c5;eip=0x006453; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 96259                  mov     si, [bp+arg_0] ;~ 17C5:6453
cs=0x17c5;eip=0x006456; 	T(cl = 4;);	// 96260                  mov     cl, 4 ;~ 17C5:6456
cs=0x17c5;eip=0x006458; 	T(SHL(si, cl));	// 96261                  shl     si, cl ;~ 17C5:6458
cs=0x17c5;eip=0x00645a; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x100));	// 96262                  test    word ptr [si-7E4Ch], 100h ;~ 17C5:645A
cs=0x17c5;eip=0x006460; 	J(JNZ(loc_2c6a3));	// 96263                  jnz     short loc_2C6A3 ;~ 17C5:6460
cs=0x17c5;eip=0x006462; 	T(CMP(*(word_4960a), 0));	// 96264                  cmp     word_4960A, 0 ;~ 17C5:6462
cs=0x17c5;eip=0x006467; 	J(JNZ(loc_2c6a3));	// 96265                  jnz     short loc_2C6A3 ;~ 17C5:6467
cs=0x17c5;eip=0x006469; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4A)), 0x7F));	// 96266                  cmp     word ptr [si-7E4Ah], 7Fh ;~ 17C5:6469
cs=0x17c5;eip=0x00646e; 	J(JLE(loc_2c6a3));	// 96267                  jle     short loc_2C6A3 ;~ 17C5:646E
cs=0x17c5;eip=0x006470; 	J(CALL(sub_2c8ee,0));	// 96268                  call    sub_2C8EE ;~ 17C5:6470
loc_2c6a3:
	// 5645 
cs=0x17c5;eip=0x006473; 	T(ax = word_492e8;);	// 96272                  mov     ax, word_492E8 ;~ 17C5:6473
cs=0x17c5;eip=0x006476; 	T(CMP(word_50b76, ax));	// 96273                  cmp     ds:word_50B76, ax ;~ 17C5:6476
cs=0x17c5;eip=0x00647a; 	J(JLE(loc_2c6af));	// 96274                  jle     short loc_2C6AF ;~ 17C5:647A
cs=0x17c5;eip=0x00647c; 	J(JMP(loc_2c80c));	// 96275                  jmp     loc_2C80C ;~ 17C5:647C
loc_2c6af:
	// 5646 
cs=0x17c5;eip=0x00647f; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 96279                  mov     si, [bp+arg_0] ;~ 17C5:647F
cs=0x17c5;eip=0x006482; 	T(cl = 4;);	// 96280                  mov     cl, 4 ;~ 17C5:6482
cs=0x17c5;eip=0x006484; 	T(SHL(si, cl));	// 96281                  shl     si, cl ;~ 17C5:6484
cs=0x17c5;eip=0x006486; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4A)), 0x0C0));	// 96282                  cmp     word ptr [si-7E4Ah], 0C0h ;~ 17C5:6486
cs=0x17c5;eip=0x00648c; 	J(JG(loc_2c6c1));	// 96283                  jg      short loc_2C6C1 ;~ 17C5:648C
cs=0x17c5;eip=0x00648e; 	J(JMP(loc_2c80c));	// 96284                  jmp     loc_2C80C ;~ 17C5:648E
loc_2c6c1:
	// 5647 
cs=0x17c5;eip=0x006491; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x15));	// 96288                  cmp     [bp+var_22], 15h ;~ 17C5:6491
cs=0x17c5;eip=0x006495; 	J(JNZ(loc_2c6ca));	// 96289                  jnz     short loc_2C6CA ;~ 17C5:6495
cs=0x17c5;eip=0x006497; 	J(JMP(loc_2c80c));	// 96290                  jmp     loc_2C80C ;~ 17C5:6497
loc_2c6ca:
	// 5648 
cs=0x17c5;eip=0x00649a; 	T(CMP(word_4f21e, 0x500));	// 96294                  cmp     ds:word_4F21E, 500h ;~ 17C5:649A
cs=0x17c5;eip=0x0064a0; 	J(JG(loc_2c6d5));	// 96295                  jg      short loc_2C6D5 ;~ 17C5:64A0
cs=0x17c5;eip=0x0064a2; 	J(JMP(loc_2c80c));	// 96296                  jmp     loc_2C80C ;~ 17C5:64A2
loc_2c6d5:
	// 5649 
cs=0x17c5;eip=0x0064a5; 	T(cx = ax;);	// 96300                  mov     cx, ax ;~ 17C5:64A5
cs=0x17c5;eip=0x0064a7; 	T(SHL(ax, 1));	// 96301                  shl     ax, 1 ;~ 17C5:64A7
cs=0x17c5;eip=0x0064a9; 	T(ADD(ax, cx));	// 96302                  add     ax, cx ;~ 17C5:64A9
cs=0x17c5;eip=0x0064ab; 	T(SUB(ax, 0x14));	// 96303                  sub     ax, 14h ;~ 17C5:64AB
cs=0x17c5;eip=0x0064ae; 	T(NEG(ax));	// 96304                  neg     ax ;~ 17C5:64AE
cs=0x17c5;eip=0x0064b0; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_1e))));	// 96305                  cmp     ax, [bp+var_1E] ;~ 17C5:64B0
cs=0x17c5;eip=0x0064b3; 	J(JC(loc_2c6e8));	// 96306                  jb      short loc_2C6E8 ;~ 17C5:64B3
cs=0x17c5;eip=0x0064b5; 	J(JMP(loc_2c80c));	// 96307                  jmp     loc_2C80C ;~ 17C5:64B5
loc_2c6e8:
	// 5650 
cs=0x17c5;eip=0x0064b8; 	X(INC(word_522cc));	// 96311                  inc     ds:word_522CC ;~ 17C5:64B8
cs=0x17c5;eip=0x0064bc; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4A)), 0x0FA));	// 96312                  cmp     word ptr [si-7E4Ah], 0FAh ;~ 17C5:64BC
cs=0x17c5;eip=0x0064c2; 	J(JGE(loc_2c6f7));	// 96313                  jge     short loc_2C6F7 ;~ 17C5:64C2
cs=0x17c5;eip=0x0064c4; 	J(JMP(loc_2c80c));	// 96314                  jmp     loc_2C80C ;~ 17C5:64C4
loc_2c6f7:
	// 5651 
cs=0x17c5;eip=0x0064c7; 	T(OR(cx, cx));	// 96318                  or      cx, cx ;~ 17C5:64C7
cs=0x17c5;eip=0x0064c9; 	J(JZ(loc_2c706));	// 96319                  jz      short loc_2C706 ;~ 17C5:64C9
cs=0x17c5;eip=0x0064cb; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 96320                  mov     ax, [bp+arg_0] ;~ 17C5:64CB
cs=0x17c5;eip=0x0064ce; 	T(CWD);	// 96321                  cwd ;~ 17C5:64CE
cs=0x17c5;eip=0x0064cf; 	T(IDIV2(cx));	// 96322                  idiv    cx ;~ 17C5:64CF
cs=0x17c5;eip=0x0064d1; 	T(ax = dx;);	// 96323                  mov     ax, dx ;~ 17C5:64D1
cs=0x17c5;eip=0x0064d3; 	J(JMP(loc_2c708));	// 96324                  jmp     short loc_2C708 ;~ 17C5:64D3
loc_2c706:
	// 5652 
cs=0x17c5;eip=0x0064d6; 	T(SUB(ax, ax));	// 96330                  sub     ax, ax ;~ 17C5:64D6
loc_2c708:
	// 5653 
cs=0x17c5;eip=0x0064d8; 	X(MOV(*(dw*)(raddr(ss,bp+var_24)), ax));	// 96333                  mov     [bp+var_24], ax ;~ 17C5:64D8
cs=0x17c5;eip=0x0064db; 	T(ax = 0x18;);	// 96334                  mov     ax, 18h ;~ 17C5:64DB
cs=0x17c5;eip=0x0064de; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_24))));	// 96335                  imul    [bp+var_24] ;~ 17C5:64DE
cs=0x17c5;eip=0x0064e1; 	T(di = ax;);	// 96336                  mov     di, ax ;~ 17C5:64E1
cs=0x17c5;eip=0x0064e3; 	T(CMP(*(dw*)(raddr(ds,di+0x0D22)), 0));	// 96337                  cmp     word ptr [di+0D22h], 0 ;~ 17C5:64E3
cs=0x17c5;eip=0x0064e8; 	J(JZ(loc_2c71d));	// 96338                  jz      short loc_2C71D ;~ 17C5:64E8
cs=0x17c5;eip=0x0064ea; 	J(JMP(loc_2c80c));	// 96339                  jmp     loc_2C80C ;~ 17C5:64EA
loc_2c71d:
	// 5654 
cs=0x17c5;eip=0x0064ed; 	T(ax = 0x12;);	// 96343                  mov     ax, 12h ;~ 17C5:64ED
cs=0x17c5;eip=0x0064f0; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96344                  imul    [bp+var_22] ;~ 17C5:64F0
cs=0x17c5;eip=0x0064f3; 	T(bx = ax;);	// 96345                  mov     bx, ax ;~ 17C5:64F3
cs=0x17c5;eip=0x0064f5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1e))));	// 96346                  mov     ax, [bp+var_1E] ;~ 17C5:64F5
cs=0x17c5;eip=0x0064f8; 	T(CMP(*(dw*)(raddr(ds,bx+0x530)), ax));	// 96347                  cmp     [bx+530h], ax ;~ 17C5:64F8
cs=0x17c5;eip=0x0064fc; 	J(JA(loc_2c731));	// 96348                  ja      short loc_2C731 ;~ 17C5:64FC
cs=0x17c5;eip=0x0064fe; 	J(JMP(loc_2c80c));	// 96349                  jmp     loc_2C80C ;~ 17C5:64FE
loc_2c731:
	// 5655 
cs=0x17c5;eip=0x006501; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 96353                  mov     ax, [si-7E52h] ;~ 17C5:6501
cs=0x17c5;eip=0x006505; 	T(ADD(ax, 8));	// 96354                  add     ax, 8 ;~ 17C5:6505
cs=0x17c5;eip=0x006508; 	X(MOV(*(dw*)(raddr(ds,di+0x0D14)), ax));	// 96355                  mov     [di+0D14h], ax ;~ 17C5:6508
cs=0x17c5;eip=0x00650c; 	T(ax = 0x18;);	// 96356                  mov     ax, 18h ;~ 17C5:650C
cs=0x17c5;eip=0x00650f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_24))));	// 96357                  imul    [bp+var_24] ;~ 17C5:650F
cs=0x17c5;eip=0x006512; 	T(si = ax;);	// 96358                  mov     si, ax ;~ 17C5:6512
cs=0x17c5;eip=0x006514; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 96359                  mov     bx, [bp+arg_0] ;~ 17C5:6514
cs=0x17c5;eip=0x006517; 	T(cl = 4;);	// 96360                  mov     cl, 4 ;~ 17C5:6517
cs=0x17c5;eip=0x006519; 	T(SHL(bx, cl));	// 96361                  shl     bx, cl ;~ 17C5:6519
cs=0x17c5;eip=0x00651b; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7E50))));	// 96362                  mov     ax, [bx-7E50h] ;~ 17C5:651B
cs=0x17c5;eip=0x00651f; 	X(MOV(*(dw*)(raddr(ds,si+0x0D16)), ax));	// 96363                  mov     [si+0D16h], ax ;~ 17C5:651F
cs=0x17c5;eip=0x006523; 	X(MOV(*(dw*)(raddr(ds,si+0x0D18)), 0));	// 96364                  mov     word ptr [si+0D18h], 0 ;~ 17C5:6523
cs=0x17c5;eip=0x006529; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1A)), 1));	// 96365                  mov     word ptr [si+0D1Ah], 1 ;~ 17C5:6529
cs=0x17c5;eip=0x00652f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_16))));	// 96366                  mov     ax, [bp+var_16] ;~ 17C5:652F
cs=0x17c5;eip=0x006532; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1C)), ax));	// 96367                  mov     [si+0D1Ch], ax ;~ 17C5:6532
cs=0x17c5;eip=0x006536; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1E)), 0x4000));	// 96368                  mov     word ptr [si+0D1Eh], 4000h ;~ 17C5:6536
cs=0x17c5;eip=0x00653c; 	T(ax = 0x12;);	// 96369                  mov     ax, 12h ;~ 17C5:653C
cs=0x17c5;eip=0x00653f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96370                  imul    [bp+var_22] ;~ 17C5:653F
cs=0x17c5;eip=0x006542; 	T(di = ax;);	// 96371                  mov     di, ax ;~ 17C5:6542
cs=0x17c5;eip=0x006544; 	T(MOV(ax, *(dw*)(raddr(ds,di+0x532))));	// 96372                  mov     ax, [di+532h] ;~ 17C5:6544
cs=0x17c5;eip=0x006548; 	T(cl = 6;);	// 96373                  mov     cl, 6 ;~ 17C5:6548
cs=0x17c5;eip=0x00654a; 	T(SAR(ax, cl));	// 96374                  sar     ax, cl ;~ 17C5:654A
cs=0x17c5;eip=0x00654c; 	T(CWD);	// 96375                  cwd ;~ 17C5:654C
cs=0x17c5;eip=0x00654d; 	X(PUSH(dx));	// 96376                  push    dx ;~ 17C5:654D
cs=0x17c5;eip=0x00654e; 	X(PUSH(ax));	// 96377                  push    ax ;~ 17C5:654E
cs=0x17c5;eip=0x00654f; 	T(ax = word_492f4;);	// 96378                  mov     ax, word_492F4 ;~ 17C5:654F
cs=0x17c5;eip=0x006552; 	T(CWD);	// 96379                  cwd ;~ 17C5:6552
cs=0x17c5;eip=0x006553; 	X(PUSH(dx));	// 96380                  push    dx ;~ 17C5:6553
cs=0x17c5;eip=0x006554; 	X(PUSH(ax));	// 96381                  push    ax ;~ 17C5:6554
cs=0x17c5;eip=0x006555; 	T(MOV(ax, *(dw*)(raddr(ds,di+0x530))));	// 96382                  mov     ax, [di+530h] ;~ 17C5:6555
cs=0x17c5;eip=0x006559; 	T(CWD);	// 96383                  cwd ;~ 17C5:6559
cs=0x17c5;eip=0x00655a; 	T(cl = 3;);	// 96384                  mov     cl, 3 ;~ 17C5:655A
loc_2c78c:
	// 5656 
cs=0x17c5;eip=0x00655c; 	T(SHL(ax, 1));	// 96387                  shl     ax, 1 ;~ 17C5:655C
cs=0x17c5;eip=0x00655e; 	T(RCL(dx, 1));	// 96388                  rcl     dx, 1 ;~ 17C5:655E
cs=0x17c5;eip=0x006560; 	T(DEC(cl));	// 96389                  dec     cl ;~ 17C5:6560
cs=0x17c5;eip=0x006562; 	J(JNZ(loc_2c78c));	// 96390                  jnz     short loc_2C78C ;~ 17C5:6562
cs=0x17c5;eip=0x006564; 	X(PUSH(dx));	// 96391                  push    dx ;~ 17C5:6564
cs=0x17c5;eip=0x006565; 	X(PUSH(ax));	// 96392                  push    ax ;~ 17C5:6565
cs=0x17c5;eip=0x006566; 	J(CALL(sub_34ee0,0));	// 96393                  call    sub_34EE0 ;~ 17C5:6566
cs=0x17c5;eip=0x006569; 	X(PUSH(dx));	// 96394                  push    dx ;~ 17C5:6569
cs=0x17c5;eip=0x00656a; 	X(PUSH(ax));	// 96395                  push    ax ;~ 17C5:656A
cs=0x17c5;eip=0x00656b; 	J(CALL(sub_34e44,0));	// 96396                  call    sub_34E44 ;~ 17C5:656B
cs=0x17c5;eip=0x00656e; 	X(MOV(*(dw*)(raddr(ds,si+0x0D22)), ax));	// 96397                  mov     [si+0D22h], ax ;~ 17C5:656E
cs=0x17c5;eip=0x006572; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_22))));	// 96398                  mov     ax, [bp+var_22] ;~ 17C5:6572
cs=0x17c5;eip=0x006575; 	X(MOV(*(dw*)(raddr(ds,si+0x0D24)), ax));	// 96399                  mov     [si+0D24h], ax ;~ 17C5:6575
cs=0x17c5;eip=0x006579; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 96400                  mov     ax, [bp+arg_0] ;~ 17C5:6579
cs=0x17c5;eip=0x00657c; 	X(MOV(*(dw*)(raddr(ds,si+0x0D2A)), ax));	// 96401                  mov     [si+0D2Ah], ax ;~ 17C5:657C
cs=0x17c5;eip=0x006580; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 96402                  push    [bp+arg_0] ;~ 17C5:6580
cs=0x17c5;eip=0x006583; 	J(CALL(sub_27f9e,0));	// 96403                  call    sub_27F9E ;~ 17C5:6583
cs=0x17c5;eip=0x006586; 	T(ADD(sp, 2));	// 96404                  add     sp, 2 ;~ 17C5:6586
cs=0x17c5;eip=0x006589; 	T(ax = 0x58A4;);	// 96405                  mov     ax, 58A4h ;~ 17C5:6589
cs=0x17c5;eip=0x00658c; 	X(PUSH(ax));	// 96406                  push    ax ;~ 17C5:658C
cs=0x17c5;eip=0x00658d; 	T(ax = 0x66C4;);	// 96407                  mov     ax, 66C4h ;~ 17C5:658D
cs=0x17c5;eip=0x006590; 	X(PUSH(ax));	// 96408                  push    ax ;~ 17C5:6590
cs=0x17c5;eip=0x006591; 	J(CALL(sub_34bdc,0));	// 96409                  call    sub_34BDC ;~ 17C5:6591
cs=0x17c5;eip=0x006594; 	T(ADD(sp, 4));	// 96410                  add     sp, 4 ;~ 17C5:6594
cs=0x17c5;eip=0x006597; 	T(ax = 0x12;);	// 96411                  mov     ax, 12h ;~ 17C5:6597
cs=0x17c5;eip=0x00659a; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96412                  imul    [bp+var_22] ;~ 17C5:659A
cs=0x17c5;eip=0x00659d; 	T(ADD(ax, 0x528));	// 96413                  add     ax, 528h ;~ 17C5:659D
cs=0x17c5;eip=0x0065a0; 	X(PUSH(ax));	// 96414                  push    ax ;~ 17C5:65A0
cs=0x17c5;eip=0x0065a1; 	T(ax = 0x66C4;);	// 96415                  mov     ax, 66C4h ;~ 17C5:65A1
cs=0x17c5;eip=0x0065a4; 	X(PUSH(ax));	// 96416                  push    ax ;~ 17C5:65A4
cs=0x17c5;eip=0x0065a5; 	J(CALL(sub_34bdc,0));	// 96417                  call    sub_34BDC ;~ 17C5:65A5
cs=0x17c5;eip=0x0065a8; 	T(ADD(sp, 4));	// 96418                  add     sp, 4 ;~ 17C5:65A8
cs=0x17c5;eip=0x0065ab; 	T(ax = 0x66C4;);	// 96419                  mov     ax, 66C4h ;~ 17C5:65AB
cs=0x17c5;eip=0x0065ae; 	X(PUSH(ax));	// 96420                  push    ax ;~ 17C5:65AE
cs=0x17c5;eip=0x0065af; 	J(CALL(sub_30414,0));	// 96421                  call    sub_30414 ;~ 17C5:65AF
cs=0x17c5;eip=0x0065b2; 	T(ADD(sp, 2));	// 96422                  add     sp, 2 ;~ 17C5:65B2
cs=0x17c5;eip=0x0065b5; 	T(ax = 2;);	// 96423                  mov     ax, 2 ;~ 17C5:65B5
cs=0x17c5;eip=0x0065b8; 	X(PUSH(ax));	// 96424                  push    ax ;~ 17C5:65B8
cs=0x17c5;eip=0x0065b9; 	T(ax = 6;);	// 96425                  mov     ax, 6 ;~ 17C5:65B9
cs=0x17c5;eip=0x0065bc; 	X(PUSH(ax));	// 96426                  push    ax ;~ 17C5:65BC
cs=0x17c5;eip=0x0065bd; 	J(CALL(sub_33c65,0));	// 96427                  call    sub_33C65 ;~ 17C5:65BD
cs=0x17c5;eip=0x0065c0; 	T(ADD(sp, 4));	// 96429                  add     sp, 4 ;~ 17C5:65C0
cs=0x17c5;eip=0x0065c3; 	T(ax = 2;);	// 96430                  mov     ax, 2 ;~ 17C5:65C3
cs=0x17c5;eip=0x0065c6; 	X(PUSH(ax));	// 96431                  push    ax ;~ 17C5:65C6
cs=0x17c5;eip=0x0065c7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 96432                  mov     ax, [bp+arg_0] ;~ 17C5:65C7
cs=0x17c5;eip=0x0065ca; 	T(ADD(ax, 0x40));	// 96433                  add     ax, 40h ; '@' ;~ 17C5:65CA
cs=0x17c5;eip=0x0065cd; 	X(PUSH(ax));	// 96434                  push    ax ;~ 17C5:65CD
cs=0x17c5;eip=0x0065ce; 	J(CALL(sub_27df3,0));	// 96435                  call    sub_27DF3 ;~ 17C5:65CE
cs=0x17c5;eip=0x0065d1; 	T(ADD(sp, 4));	// 96436                  add     sp, 4 ;~ 17C5:65D1
cs=0x17c5;eip=0x0065d4; 	T(LES(bx, dword_528d6));	// 96437                  les     bx, ds:dword_528D6 ;~ 17C5:65D4
cs=0x17c5;eip=0x0065d8; 	X(INC(*(dw*)(raddr(es,bx+0x2C))));	// 96439                  inc     word ptr es:[bx+2Ch] ;~ 17C5:65D8
loc_2c80c:
	// 5657 
cs=0x17c5;eip=0x0065dc; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 96443                  mov     bx, [bp+arg_0] ;~ 17C5:65DC
cs=0x17c5;eip=0x0065df; 	T(cl = 4;);	// 96444                  mov     cl, 4 ;~ 17C5:65DF
cs=0x17c5;eip=0x0065e1; 	T(SHL(bx, cl));	// 96445                  shl     bx, cl ;~ 17C5:65E1
cs=0x17c5;eip=0x0065e3; 	X(OR(*(raddr(ds,bx-0x7E4C)), 0x10));	// 96446                  or      byte ptr [bx-7E4Ch], 10h ;~ 17C5:65E3
cs=0x17c5;eip=0x0065e8; 	X(POP(si));	// 96447                  pop     si ;~ 17C5:65E8
cs=0x17c5;eip=0x0065e9; 	X(POP(di));	// 96448                  pop     di ;~ 17C5:65E9
cs=0x17c5;eip=0x0065ea; 	T(sp = bp;);	// 96449                  mov     sp, bp ;~ 17C5:65EA
cs=0x17c5;eip=0x0065ec; 	X(POP(bp));	// 96450                  pop     bp ;~ 17C5:65EC
cs=0x17c5;eip=0x0065ed; 	J(RETN(0));	// 96451                  retn ;~ 17C5:65ED
loc_2c81e:
	// 5658 
cs=0x17c5;eip=0x0065ee; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 96456                  mov     si, [bp+arg_0] ;~ 17C5:65EE
cs=0x17c5;eip=0x0065f1; 	T(cl = 4;);	// 96457                  mov     cl, 4 ;~ 17C5:65F1
cs=0x17c5;eip=0x0065f3; 	T(SHL(si, cl));	// 96458                  shl     si, cl ;~ 17C5:65F3
cs=0x17c5;eip=0x0065f5; 	X(AND(*(raddr(ds,si-0x7E4C)), 0x0EF));	// 96459                  and     byte ptr [si-7E4Ch], 0EFh ;~ 17C5:65F5
cs=0x17c5;eip=0x0065fa; 	X(SUB(*(dw*)(raddr(ds,si-0x7E4A)), 0x10));	// 96460                  sub     word ptr [si-7E4Ah], 10h ;~ 17C5:65FA
cs=0x17c5;eip=0x0065ff; 	J(JNS(loc_2c837));	// 96461                  jns     short loc_2C837 ;~ 17C5:65FF
cs=0x17c5;eip=0x006601; 	X(MOV(*(dw*)(raddr(ds,si-0x7E4A)), 0));	// 96462                  mov     word ptr [si-7E4Ah], 0 ;~ 17C5:6601
loc_2c837:
	// 5659 
cs=0x17c5;eip=0x006607; 	X(POP(si));	// 96465                  pop     si ;~ 17C5:6607
cs=0x17c5;eip=0x006608; 	X(POP(di));	// 96466                  pop     di ;~ 17C5:6608
cs=0x17c5;eip=0x006609; 	T(sp = bp;);	// 96467                  mov     sp, bp ;~ 17C5:6609
cs=0x17c5;eip=0x00660b; 	X(POP(bp));	// 96468                  pop     bp ;~ 17C5:660B
cs=0x17c5;eip=0x00660c; 	J(RETN(0));	// 96469                  retn ;~ 17C5:660C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c5b8: 	goto loc_2c5b8;
        case m2c::kloc_2c5c5: 	goto loc_2c5c5;
        case m2c::kloc_2c5dd: 	goto loc_2c5dd;
        case m2c::kloc_2c5ef: 	goto loc_2c5ef;
        case m2c::kloc_2c63b: 	goto loc_2c63b;
        case m2c::kloc_2c653: 	goto loc_2c653;
        case m2c::kloc_2c65e: 	goto loc_2c65e;
        case m2c::kloc_2c683: 	goto loc_2c683;
        case m2c::kloc_2c6a3: 	goto loc_2c6a3;
        case m2c::kloc_2c6af: 	goto loc_2c6af;
        case m2c::kloc_2c6c1: 	goto loc_2c6c1;
        case m2c::kloc_2c6ca: 	goto loc_2c6ca;
        case m2c::kloc_2c6d5: 	goto loc_2c6d5;
        case m2c::kloc_2c6e8: 	goto loc_2c6e8;
        case m2c::kloc_2c6f7: 	goto loc_2c6f7;
        case m2c::kloc_2c706: 	goto loc_2c706;
        case m2c::kloc_2c708: 	goto loc_2c708;
        case m2c::kloc_2c71d: 	goto loc_2c71d;
        case m2c::kloc_2c731: 	goto loc_2c731;
        case m2c::kloc_2c78c: 	goto loc_2c78c;
        case m2c::kloc_2c80c: 	goto loc_2c80c;
        case m2c::kloc_2c81e: 	goto loc_2c81e;
        case m2c::kloc_2c837: 	goto loc_2c837;
        case m2c::ksub_2c576: 	goto sub_2c576;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c83e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c83e:
    _begin:
#undef var_e
#define var_e -0x0E
	// 96482 var_E           = word ptr -0Eh ;~ 17C5:660E
#undef var_c
#define var_c -0x0C
	// 96483 var_C           = word ptr -0Ch ;~ 17C5:660E
#undef var_a
#define var_a -0x0A
	// 96484 var_A           = word ptr -0Ah ;~ 17C5:660E
#undef var_8
#define var_8 -8
	// 96485 var_8           = word ptr -8 ;~ 17C5:660E
#undef var_6
#define var_6 -6
	// 96486 var_6           = word ptr -6 ;~ 17C5:660E
#undef arg_0
#define arg_0 4
	// 96487 arg_0           = word ptr  4 ;~ 17C5:660E
#undef arg_2
#define arg_2 6
	// 96488 arg_2           = word ptr  6 ;~ 17C5:660E
#undef arg_6
#define arg_6 0x0A
	// 96489 arg_6           = word ptr  0Ah ;~ 17C5:660E
#undef arg_8
#define arg_8 0x0C
	// 96490 arg_8           = word ptr  0Ch ;~ 17C5:660E
#undef arg_a
#define arg_a 0x0E
	// 96491 arg_A           = word ptr  0Eh ;~ 17C5:660E
cs=0x17c5;eip=0x00660e; 	X(PUSH(bp));	// 96493                  push    bp ;~ 17C5:660E
cs=0x17c5;eip=0x00660f; 	T(bp = sp;);	// 96494                  mov     bp, sp ;~ 17C5:660F
cs=0x17c5;eip=0x006611; 	T(SUB(sp, 0x0E));	// 96495                  sub     sp, 0Eh ;~ 17C5:6611
cs=0x17c5;eip=0x006614; 	X(PUSH(si));	// 96496                  push    si ;~ 17C5:6614
cs=0x17c5;eip=0x006615; 	T(CMP(*(dw*)(raddr(ss,bp+arg_6)), 0));	// 96497                  cmp     [bp+arg_6], 0 ;~ 17C5:6615
cs=0x17c5;eip=0x006619; 	J(JZ(loc_2c851));	// 96498                  jz      short loc_2C851 ;~ 17C5:6619
cs=0x17c5;eip=0x00661b; 	T(CMP(*(dw*)(raddr(ss,bp+arg_6)), 0x0FFFF));	// 96499                  cmp     [bp+arg_6], 0FFFFh ;~ 17C5:661B
cs=0x17c5;eip=0x00661f; 	J(JNZ(loc_2c858));	// 96500                  jnz     short loc_2C858 ;~ 17C5:661F
loc_2c851:
	// 5660 
cs=0x17c5;eip=0x006621; 	T(SUB(ax, ax));	// 96504                  sub     ax, ax ;~ 17C5:6621
cs=0x17c5;eip=0x006623; 	X(POP(si));	// 96505                  pop     si ;~ 17C5:6623
cs=0x17c5;eip=0x006624; 	T(sp = bp;);	// 96506                  mov     sp, bp ;~ 17C5:6624
cs=0x17c5;eip=0x006626; 	X(POP(bp));	// 96507                  pop     bp ;~ 17C5:6626
cs=0x17c5;eip=0x006627; 	J(RETN(0));	// 96508                  retn ;~ 17C5:6627
loc_2c858:
	// 5661 
cs=0x17c5;eip=0x006628; 	T(ax = word_520f0;);	// 96512                  mov     ax, ds:word_520F0 ;~ 17C5:6628
cs=0x17c5;eip=0x00662b; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 96513                  sub     ax, [bp+arg_0] ;~ 17C5:662B
cs=0x17c5;eip=0x00662e; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 96514                  mov     [bp+var_A], ax ;~ 17C5:662E
cs=0x17c5;eip=0x006631; 	T(ax = word_52100;);	// 96515                  mov     ax, ds:word_52100 ;~ 17C5:6631
cs=0x17c5;eip=0x006634; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 96516                  sub     ax, [bp+arg_2] ;~ 17C5:6634
cs=0x17c5;eip=0x006637; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 96517                  mov     [bp+var_C], ax ;~ 17C5:6637
cs=0x17c5;eip=0x00663a; 	X(PUSH(ax));	// 96518                  push    ax ;~ 17C5:663A
cs=0x17c5;eip=0x00663b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 96519                  push    [bp+var_A] ;~ 17C5:663B
cs=0x17c5;eip=0x00663e; 	J(CALL(sub_331d6,0));	// 96520                  call    sub_331D6 ;~ 17C5:663E
cs=0x17c5;eip=0x006641; 	T(ADD(sp, 4));	// 96521                  add     sp, 4 ;~ 17C5:6641
cs=0x17c5;eip=0x006644; 	T(cl = 6;);	// 96522                  mov     cl, 6 ;~ 17C5:6644
cs=0x17c5;eip=0x006646; 	T(SHR(ax, cl));	// 96523                  shr     ax, cl ;~ 17C5:6646
cs=0x17c5;eip=0x006648; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 96524                  mov     [bp+var_8], ax ;~ 17C5:6648
cs=0x17c5;eip=0x00664b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 96525                  mov     ax, [bp+var_C] ;~ 17C5:664B
cs=0x17c5;eip=0x00664e; 	T(NEG(ax));	// 96526                  neg     ax ;~ 17C5:664E
cs=0x17c5;eip=0x006650; 	X(PUSH(ax));	// 96527                  push    ax ;~ 17C5:6650
cs=0x17c5;eip=0x006651; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 96528                  push    [bp+var_A] ;~ 17C5:6651
cs=0x17c5;eip=0x006654; 	J(CALL(sub_33238,0));	// 96529                  call    sub_33238 ;~ 17C5:6654
cs=0x17c5;eip=0x006657; 	T(ADD(sp, 4));	// 96530                  add     sp, 4 ;~ 17C5:6657
cs=0x17c5;eip=0x00665a; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 96531                  mov     [bp+var_6], ax ;~ 17C5:665A
cs=0x17c5;eip=0x00665d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 96532                  mov     ax, [bp+arg_6] ;~ 17C5:665D
cs=0x17c5;eip=0x006660; 	T(cx = ax;);	// 96533                  mov     cx, ax ;~ 17C5:6660
cs=0x17c5;eip=0x006662; 	T(SHL(ax, 1));	// 96534                  shl     ax, 1 ;~ 17C5:6662
cs=0x17c5;eip=0x006664; 	T(ADD(ax, cx));	// 96535                  add     ax, cx ;~ 17C5:6664
cs=0x17c5;eip=0x006666; 	T(SHL(ax, 1));	// 96536                  shl     ax, 1 ;~ 17C5:6666
cs=0x17c5;eip=0x006668; 	T(ADD(ax, cx));	// 96537                  add     ax, cx ;~ 17C5:6668
cs=0x17c5;eip=0x00666a; 	T(SHL(ax, 1));	// 96538                  shl     ax, 1 ;~ 17C5:666A
cs=0x17c5;eip=0x00666c; 	T(si = ax;);	// 96539                  mov     si, ax ;~ 17C5:666C
cs=0x17c5;eip=0x00666e; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x190))));	// 96540                  mov     ax, [si+190h] ;~ 17C5:666E
cs=0x17c5;eip=0x006672; 	T(cx = word_492e8;);	// 96541                  mov     cx, word_492E8 ;~ 17C5:6672
cs=0x17c5;eip=0x006676; 	T(SHL(cx, 1));	// 96542                  shl     cx, 1 ;~ 17C5:6676
cs=0x17c5;eip=0x006678; 	T(ADD(ax, cx));	// 96543                  add     ax, cx ;~ 17C5:6678
cs=0x17c5;eip=0x00667a; 	T(ADD(ax, 3));	// 96544                  add     ax, 3 ;~ 17C5:667A
cs=0x17c5;eip=0x00667d; 	X(IMUL1_2(*(dw*)(raddr(ds,si+0x18E))));	// 96545                  imul    word ptr [si+18Eh] ;~ 17C5:667D
cs=0x17c5;eip=0x006681; 	T(CWD);	// 96546                  cwd ;~ 17C5:6681
cs=0x17c5;eip=0x006682; 	T(XOR(ax, dx));	// 96547                  xor     ax, dx ;~ 17C5:6682
cs=0x17c5;eip=0x006684; 	T(SUB(ax, dx));	// 96548                  sub     ax, dx ;~ 17C5:6684
cs=0x17c5;eip=0x006686; 	T(cx = 4;);	// 96549                  mov     cx, 4 ;~ 17C5:6686
cs=0x17c5;eip=0x006689; 	T(SAR(ax, cl));	// 96550                  sar     ax, cl ;~ 17C5:6689
cs=0x17c5;eip=0x00668b; 	T(XOR(ax, dx));	// 96551                  xor     ax, dx ;~ 17C5:668B
cs=0x17c5;eip=0x00668d; 	T(SUB(ax, dx));	// 96552                  sub     ax, dx ;~ 17C5:668D
cs=0x17c5;eip=0x00668f; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 96553                  mov     [bp+var_E], ax ;~ 17C5:668F
cs=0x17c5;eip=0x006692; 	T(bx = word_4e2fe;);	// 96554                  mov     bx, ds:word_4E2FE ;~ 17C5:6692
cs=0x17c5;eip=0x006696; 	T(cl = 6;);	// 96555                  mov     cl, 6 ;~ 17C5:6696
cs=0x17c5;eip=0x006698; 	T(SHR(bx, cl));	// 96556                  shr     bx, cl ;~ 17C5:6698
cs=0x17c5;eip=0x00669a; 	T(ADD(bx, 0x40));	// 96557                  add     bx, 40h ; '@' ;~ 17C5:669A
cs=0x17c5;eip=0x00669d; 	T(MUL1_2(bx));	// 96558                  mul     bx ;~ 17C5:669D
cs=0x17c5;eip=0x00669f; 	T(cl = 7;);	// 96559                  mov     cl, 7 ;~ 17C5:669F
cs=0x17c5;eip=0x0066a1; 	T(SHR(ax, cl));	// 96560                  shr     ax, cl ;~ 17C5:66A1
cs=0x17c5;eip=0x0066a3; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 96561                  mov     [bp+var_E], ax ;~ 17C5:66A3
cs=0x17c5;eip=0x0066a6; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_8))));	// 96562                  mov     bx, [bp+arg_8] ;~ 17C5:66A6
cs=0x17c5;eip=0x0066a9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 96563                  mov     ax, [bp+var_6] ;~ 17C5:66A9
cs=0x17c5;eip=0x0066ac; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 96564                  mov     [bx], ax ;~ 17C5:66AC
cs=0x17c5;eip=0x0066ae; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_a))));	// 96565                  mov     bx, [bp+arg_A] ;~ 17C5:66AE
cs=0x17c5;eip=0x0066b1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 96566                  mov     ax, [bp+var_8] ;~ 17C5:66B1
cs=0x17c5;eip=0x0066b4; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 96567                  mov     [bx], ax ;~ 17C5:66B4
cs=0x17c5;eip=0x0066b6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 96568                  mov     ax, [bp+var_E] ;~ 17C5:66B6
cs=0x17c5;eip=0x0066b9; 	X(POP(si));	// 96569                  pop     si ;~ 17C5:66B9
cs=0x17c5;eip=0x0066ba; 	T(sp = bp;);	// 96570                  mov     sp, bp ;~ 17C5:66BA
cs=0x17c5;eip=0x0066bc; 	X(POP(bp));	// 96571                  pop     bp ;~ 17C5:66BC
cs=0x17c5;eip=0x0066bd; 	J(RETN(0));	// 96572                  retn ;~ 17C5:66BD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c851: 	goto loc_2c851;
        case m2c::kloc_2c858: 	goto loc_2c858;
        case m2c::ksub_2c83e: 	goto sub_2c83e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c8ee(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c8ee:
    _begin:
#undef var_2
#define var_2 -2
	// 96583 var_2           = word ptr -2 ;~ 17C5:66BE
cs=0x17c5;eip=0x0066be; 	X(PUSH(bp));	// 96585                  push    bp ;~ 17C5:66BE
cs=0x17c5;eip=0x0066bf; 	T(bp = sp;);	// 96586                  mov     bp, sp ;~ 17C5:66BF
cs=0x17c5;eip=0x0066c1; 	T(SUB(sp, 2));	// 96587                  sub     sp, 2 ;~ 17C5:66C1
cs=0x17c5;eip=0x0066c4; 	X(PUSH(si));	// 96588                  push    si ;~ 17C5:66C4
cs=0x17c5;eip=0x0066c5; 	T(ax = *(dw*)(asc_512dc););	// 96589                  mov     ax, word ptr ds:asc_512DC ; "\v\v\v\v\v\v\v\v\v\v" ;~ 17C5:66C5
cs=0x17c5;eip=0x0066c8; 	X(word_49920 = ax;);	// 96590                  mov     word_49920, ax ;~ 17C5:66C8
cs=0x17c5;eip=0x0066cb; 	T(CMP(*(word_4960a), 0));	// 96591                  cmp     word_4960A, 0 ;~ 17C5:66CB
cs=0x17c5;eip=0x0066d0; 	J(JZ(loc_2c90e));	// 96592                  jz      short loc_2C90E ;~ 17C5:66D0
cs=0x17c5;eip=0x0066d2; 	T(ax = word_49602;);	// 96593                  mov     ax, word_49602 ;~ 17C5:66D2
cs=0x17c5;eip=0x0066d5; 	X(word_51708 = ax;);	// 96594                  mov     ds:word_51708, ax ;~ 17C5:66D5
cs=0x17c5;eip=0x0066d8; 	T(ax = word_49604;);	// 96595                  mov     ax, word_49604 ;~ 17C5:66D8
cs=0x17c5;eip=0x0066db; 	J(JMP(loc_2c917));	// 96596                  jmp     short loc_2C917 ;~ 17C5:66DB
loc_2c90e:
	// 5662 
cs=0x17c5;eip=0x0066de; 	T(ax = word_520f0;);	// 96602                  mov     ax, ds:word_520F0 ;~ 17C5:66DE
cs=0x17c5;eip=0x0066e1; 	X(word_51708 = ax;);	// 96603                  mov     ds:word_51708, ax ;~ 17C5:66E1
cs=0x17c5;eip=0x0066e4; 	T(ax = word_52100;);	// 96604                  mov     ax, ds:word_52100 ;~ 17C5:66E4
loc_2c917:
	// 5663 
cs=0x17c5;eip=0x0066e7; 	X(word_51710 = ax;);	// 96607                  mov     ds:word_51710, ax ;~ 17C5:66E7
cs=0x17c5;eip=0x0066ea; 	T(ax = word_4e2fe;);	// 96608                  mov     ax, ds:word_4E2FE ;~ 17C5:66EA
cs=0x17c5;eip=0x0066ed; 	X(word_51806 = ax;);	// 96609                  mov     ds:word_51806, ax ;~ 17C5:66ED
cs=0x17c5;eip=0x0066f0; 	T(ax = word_4e2f8;);	// 96610                  mov     ax, ds:word_4E2F8 ;~ 17C5:66F0
cs=0x17c5;eip=0x0066f3; 	X(word_4f21c = ax;);	// 96611                  mov     ds:word_4F21C, ax ;~ 17C5:66F3
cs=0x17c5;eip=0x0066f6; 	X(word_52104 = 0x0FF;);	// 96612                  mov     ds:word_52104, 0FFh ;~ 17C5:66F6
cs=0x17c5;eip=0x0066fc; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 96613                  mov     [bp+var_2], 0 ;~ 17C5:66FC
cs=0x17c5;eip=0x006701; 	J(JMP(loc_2c964));	// 96614                  jmp     short loc_2C964 ;~ 17C5:6701
loc_2c934:
	// 5664 
cs=0x17c5;eip=0x006704; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_2))));	// 96620                  mov     si, [bp+var_2] ;~ 17C5:6704
cs=0x17c5;eip=0x006707; 	T(cl = 4;);	// 96621                  mov     cl, 4 ;~ 17C5:6707
cs=0x17c5;eip=0x006709; 	T(SHL(si, cl));	// 96622                  shl     si, cl ;~ 17C5:6709
cs=0x17c5;eip=0x00670b; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4E)), 0));	// 96623                  cmp     word ptr [si-7E4Eh], 0 ;~ 17C5:670B
cs=0x17c5;eip=0x006710; 	J(JZ(loc_2c961));	// 96624                  jz      short loc_2C961 ;~ 17C5:6710
cs=0x17c5;eip=0x006712; 	T(ax = 0x0FF;);	// 96625                  mov     ax, 0FFh ;~ 17C5:6712
cs=0x17c5;eip=0x006715; 	X(PUSH(ax));	// 96626                  push    ax ;~ 17C5:6715
cs=0x17c5;eip=0x006716; 	T(ax = word_492e8;);	// 96627                  mov     ax, word_492E8 ;~ 17C5:6716
cs=0x17c5;eip=0x006719; 	T(ADD(ax, word_492ea));	// 96628                  add     ax, word_492EA ;~ 17C5:6719
cs=0x17c5;eip=0x00671d; 	T(SHL(ax, cl));	// 96629                  shl     ax, cl ;~ 17C5:671D
cs=0x17c5;eip=0x00671f; 	T(SUB(ax, 0x10));	// 96630                  sub     ax, 10h ;~ 17C5:671F
cs=0x17c5;eip=0x006722; 	X(PUSH(ax));	// 96631                  push    ax ;~ 17C5:6722
cs=0x17c5;eip=0x006723; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E4A))));	// 96632                  push    word ptr [si-7E4Ah] ;~ 17C5:6723
cs=0x17c5;eip=0x006727; 	J(CALL(sub_33194,0));	// 96633                  call    sub_33194 ;~ 17C5:6727
cs=0x17c5;eip=0x00672a; 	T(ADD(sp, 6));	// 96634                  add     sp, 6 ;~ 17C5:672A
cs=0x17c5;eip=0x00672d; 	X(MOV(*(dw*)(raddr(ds,si-0x7E4A)), ax));	// 96635                  mov     [si-7E4Ah], ax ;~ 17C5:672D
loc_2c961:
	// 5665 
cs=0x17c5;eip=0x006731; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 96638                  inc     [bp+var_2] ;~ 17C5:6731
loc_2c964:
	// 5666 
cs=0x17c5;eip=0x006734; 	T(ax = word_528ce;);	// 96641                  mov     ax, ds:word_528CE ;~ 17C5:6734
cs=0x17c5;eip=0x006737; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 96642                  cmp     [bp+var_2], ax ;~ 17C5:6737
cs=0x17c5;eip=0x00673a; 	J(JL(loc_2c934));	// 96643                  jl      short loc_2C934 ;~ 17C5:673A
cs=0x17c5;eip=0x00673c; 	X(POP(si));	// 96644                  pop     si ;~ 17C5:673C
cs=0x17c5;eip=0x00673d; 	T(sp = bp;);	// 96645                  mov     sp, bp ;~ 17C5:673D
cs=0x17c5;eip=0x00673f; 	X(POP(bp));	// 96646                  pop     bp ;~ 17C5:673F
cs=0x17c5;eip=0x006740; 	J(RETN(0));	// 96647                  retn ;~ 17C5:6740

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c90e: 	goto loc_2c90e;
        case m2c::kloc_2c917: 	goto loc_2c917;
        case m2c::kloc_2c934: 	goto loc_2c934;
        case m2c::kloc_2c961: 	goto loc_2c961;
        case m2c::kloc_2c964: 	goto loc_2c964;
        case m2c::ksub_2c8ee: 	goto sub_2c8ee;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c972(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c972:
    _begin:
#undef var_6
#define var_6 -6
	// 96660 var_6           = word ptr -6 ;~ 17C5:6742
#undef var_4
#define var_4 -4
	// 96661 var_4           = word ptr -4 ;~ 17C5:6742
#undef var_2
#define var_2 -2
	// 96662 var_2           = word ptr -2 ;~ 17C5:6742
cs=0x17c5;eip=0x006742; 	X(PUSH(bp));	// 96664                  push    bp ;~ 17C5:6742
cs=0x17c5;eip=0x006743; 	T(bp = sp;);	// 96665                  mov     bp, sp ;~ 17C5:6743
cs=0x17c5;eip=0x006745; 	T(SUB(sp, 6));	// 96666                  sub     sp, 6 ;~ 17C5:6745
cs=0x17c5;eip=0x006748; 	X(PUSH(si));	// 96667                  push    si ;~ 17C5:6748
cs=0x17c5;eip=0x006749; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0));	// 96668                  mov     [bp+var_6], 0 ;~ 17C5:6749
cs=0x17c5;eip=0x00674e; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 96669                  mov     [bp+var_4], 0 ;~ 17C5:674E
cs=0x17c5;eip=0x006753; 	J(JMP(loc_2c9cb));	// 96670                  jmp     short loc_2C9CB ;~ 17C5:6753
loc_2c986:
	// 5667 
cs=0x17c5;eip=0x006756; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 96676                  mov     bx, [bp+var_4] ;~ 17C5:6756
cs=0x17c5;eip=0x006759; 	T(cl = 4;);	// 96677                  mov     cl, 4 ;~ 17C5:6759
cs=0x17c5;eip=0x00675b; 	T(SHL(bx, cl));	// 96678                  shl     bx, cl ;~ 17C5:675B
cs=0x17c5;eip=0x00675d; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7E4E))));	// 96679                  mov     ax, [bx-7E4Eh] ;~ 17C5:675D
cs=0x17c5;eip=0x006761; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 96680                  mov     [bp+var_2], ax ;~ 17C5:6761
cs=0x17c5;eip=0x006764; 	T(OR(ax, ax));	// 96681                  or      ax, ax ;~ 17C5:6764
cs=0x17c5;eip=0x006766; 	J(JZ(loc_2c9c8));	// 96682                  jz      short loc_2C9C8 ;~ 17C5:6766
cs=0x17c5;eip=0x006768; 	T(cx = ax;);	// 96683                  mov     cx, ax ;~ 17C5:6768
cs=0x17c5;eip=0x00676a; 	T(SHL(ax, 1));	// 96684                  shl     ax, 1 ;~ 17C5:676A
cs=0x17c5;eip=0x00676c; 	T(ADD(ax, cx));	// 96685                  add     ax, cx ;~ 17C5:676C
cs=0x17c5;eip=0x00676e; 	T(SHL(ax, 1));	// 96686                  shl     ax, 1 ;~ 17C5:676E
cs=0x17c5;eip=0x006770; 	T(ADD(ax, cx));	// 96687                  add     ax, cx ;~ 17C5:6770
cs=0x17c5;eip=0x006772; 	T(SHL(ax, 1));	// 96688                  shl     ax, 1 ;~ 17C5:6772
cs=0x17c5;eip=0x006774; 	T(si = ax;);	// 96689                  mov     si, ax ;~ 17C5:6774
cs=0x17c5;eip=0x006776; 	T(cx = word_492e8;);	// 96690                  mov     cx, word_492E8 ;~ 17C5:6776
cs=0x17c5;eip=0x00677a; 	T(ADD(cx, 2));	// 96691                  add     cx, 2 ;~ 17C5:677A
cs=0x17c5;eip=0x00677d; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x18E))));	// 96692                  mov     ax, [si+18Eh] ;~ 17C5:677D
cs=0x17c5;eip=0x006781; 	X(IMUL1_2(*(dw*)(raddr(ds,si+0x190))));	// 96693                  imul    word ptr [si+190h] ;~ 17C5:6781
cs=0x17c5;eip=0x006785; 	T(IMUL1_2(cx));	// 96694                  imul    cx ;~ 17C5:6785
cs=0x17c5;eip=0x006787; 	T(CWD);	// 96695                  cwd ;~ 17C5:6787
cs=0x17c5;eip=0x006788; 	T(XOR(ax, dx));	// 96696                  xor     ax, dx ;~ 17C5:6788
cs=0x17c5;eip=0x00678a; 	T(SUB(ax, dx));	// 96697                  sub     ax, dx ;~ 17C5:678A
cs=0x17c5;eip=0x00678c; 	T(cx = 6;);	// 96698                  mov     cx, 6 ;~ 17C5:678C
cs=0x17c5;eip=0x00678f; 	T(SAR(ax, cl));	// 96699                  sar     ax, cl ;~ 17C5:678F
cs=0x17c5;eip=0x006791; 	T(XOR(ax, dx));	// 96700                  xor     ax, dx ;~ 17C5:6791
cs=0x17c5;eip=0x006793; 	T(SUB(ax, dx));	// 96701                  sub     ax, dx ;~ 17C5:6793
cs=0x17c5;eip=0x006795; 	X(ADD(*(dw*)(raddr(ss,bp+var_6)), ax));	// 96702                  add     [bp+var_6], ax ;~ 17C5:6795
loc_2c9c8:
	// 5668 
cs=0x17c5;eip=0x006798; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 96705                  inc     [bp+var_4] ;~ 17C5:6798
loc_2c9cb:
	// 5669 
cs=0x17c5;eip=0x00679b; 	T(ax = word_4f22a;);	// 96708                  mov     ax, ds:word_4F22A ;~ 17C5:679B
cs=0x17c5;eip=0x00679e; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), ax));	// 96709                  cmp     [bp+var_4], ax ;~ 17C5:679E
cs=0x17c5;eip=0x0067a1; 	J(JL(loc_2c986));	// 96710                  jl      short loc_2C986 ;~ 17C5:67A1
cs=0x17c5;eip=0x0067a3; 	T(cx = 0x64;);	// 96711                  mov     cx, 64h ; 'd' ;~ 17C5:67A3
cs=0x17c5;eip=0x0067a6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 96712                  mov     ax, [bp+var_6] ;~ 17C5:67A6
cs=0x17c5;eip=0x0067a9; 	T(CWD);	// 96713                  cwd ;~ 17C5:67A9
cs=0x17c5;eip=0x0067aa; 	T(IDIV2(cx));	// 96714                  idiv    cx ;~ 17C5:67AA
cs=0x17c5;eip=0x0067ac; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 96715                  mov     [bp+var_6], ax ;~ 17C5:67AC
cs=0x17c5;eip=0x0067af; 	X(POP(si));	// 96716                  pop     si ;~ 17C5:67AF
cs=0x17c5;eip=0x0067b0; 	T(sp = bp;);	// 96717                  mov     sp, bp ;~ 17C5:67B0
cs=0x17c5;eip=0x0067b2; 	X(POP(bp));	// 96718                  pop     bp ;~ 17C5:67B2
cs=0x17c5;eip=0x0067b3; 	J(RETN(0));	// 96719                  retn ;~ 17C5:67B3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2c986: 	goto loc_2c986;
        case m2c::kloc_2c9c8: 	goto loc_2c9c8;
        case m2c::kloc_2c9cb: 	goto loc_2c9cb;
        case m2c::ksub_2c972: 	goto sub_2c972;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2c9e4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2c9e4:
    _begin:
#undef var_40
#define var_40 -0x40
	// 96730 var_40          = byte ptr -40h ;~ 17C5:67B4
#undef var_3c
#define var_3c -0x3C
	// 96731 var_3C          = word ptr -3Ch ;~ 17C5:67B4
#undef var_3a
#define var_3a -0x3A
	// 96732 var_3A          = word ptr -3Ah ;~ 17C5:67B4
#undef var_38
#define var_38 -0x38
	// 96733 var_38          = word ptr -38h ;~ 17C5:67B4
#undef var_36
#define var_36 -0x36
	// 96734 var_36          = word ptr -36h ;~ 17C5:67B4
#undef var_34
#define var_34 -0x34
	// 96735 var_34          = word ptr -34h ;~ 17C5:67B4
#undef var_32
#define var_32 -0x32
	// 96736 var_32          = word ptr -32h ;~ 17C5:67B4
#undef var_30
#define var_30 -0x30
	// 96737 var_30          = word ptr -30h ;~ 17C5:67B4
#undef var_2e
#define var_2e -0x2E
	// 96738 var_2E          = word ptr -2Eh ;~ 17C5:67B4
#undef var_2c
#define var_2c -0x2C
	// 96739 var_2C          = word ptr -2Ch ;~ 17C5:67B4
#undef var_2a
#define var_2a -0x2A
	// 96740 var_2A          = word ptr -2Ah ;~ 17C5:67B4
#undef var_28
#define var_28 -0x28
	// 96741 var_28          = word ptr -28h ;~ 17C5:67B4
#undef var_26
#define var_26 -0x26
	// 96742 var_26          = word ptr -26h ;~ 17C5:67B4
#undef var_24
#define var_24 -0x24
	// 96743 var_24          = word ptr -24h ;~ 17C5:67B4
#undef var_22
#define var_22 -0x22
	// 96744 var_22          = word ptr -22h ;~ 17C5:67B4
#undef var_20
#define var_20 -0x20
	// 96745 var_20          = word ptr -20h ;~ 17C5:67B4
#undef var_1e
#define var_1e -0x1E
	// 96746 var_1E          = word ptr -1Eh ;~ 17C5:67B4
#undef var_1c
#define var_1c -0x1C
	// 96747 var_1C          = word ptr -1Ch ;~ 17C5:67B4
#undef var_1a
#define var_1a -0x1A
	// 96748 var_1A          = word ptr -1Ah ;~ 17C5:67B4
#undef var_14
#define var_14 -0x14
	// 96749 var_14          = word ptr -14h ;~ 17C5:67B4
#undef var_12
#define var_12 -0x12
	// 96750 var_12          = word ptr -12h ;~ 17C5:67B4
#undef var_10
#define var_10 -0x10
	// 96751 var_10          = word ptr -10h ;~ 17C5:67B4
#undef var_e
#define var_e -0x0E
	// 96752 var_E           = word ptr -0Eh ;~ 17C5:67B4
#undef var_c
#define var_c -0x0C
	// 96753 var_C           = word ptr -0Ch ;~ 17C5:67B4
#undef var_a
#define var_a -0x0A
	// 96754 var_A           = word ptr -0Ah ;~ 17C5:67B4
#undef var_8
#define var_8 -8
	// 96755 var_8           = word ptr -8 ;~ 17C5:67B4
#undef var_6
#define var_6 -6
	// 96756 var_6           = word ptr -6 ;~ 17C5:67B4
#undef var_4
#define var_4 -4
	// 96757 var_4           = word ptr -4 ;~ 17C5:67B4
#undef var_2
#define var_2 -2
	// 96758 var_2           = word ptr -2 ;~ 17C5:67B4
cs=0x17c5;eip=0x0067b4; 	X(PUSH(bp));	// 96760                  push    bp ;~ 17C5:67B4
cs=0x17c5;eip=0x0067b5; 	T(bp = sp;);	// 96761                  mov     bp, sp ;~ 17C5:67B5
cs=0x17c5;eip=0x0067b7; 	T(SUB(sp, 0x40));	// 96762                  sub     sp, 40h ;~ 17C5:67B7
cs=0x17c5;eip=0x0067ba; 	X(PUSH(di));	// 96763                  push    di ;~ 17C5:67BA
cs=0x17c5;eip=0x0067bb; 	X(PUSH(si));	// 96764                  push    si ;~ 17C5:67BB
cs=0x17c5;eip=0x0067bc; 	T(TEST(*(db*)(&word_49918), 1));	// 96765                  test    byte ptr word_49918, 1 ;~ 17C5:67BC
cs=0x17c5;eip=0x0067c1; 	J(JNZ(loc_2ca0d));	// 96766                  jnz     short loc_2CA0D ;~ 17C5:67C1
cs=0x17c5;eip=0x0067c3; 	T(CMP(word_49926, 0x0FFFF));	// 96767                  cmp     word_49926, 0FFFFh ;~ 17C5:67C3
cs=0x17c5;eip=0x0067c8; 	J(JNZ(loc_2ca0d));	// 96768                  jnz     short loc_2CA0D ;~ 17C5:67C8
cs=0x17c5;eip=0x0067ca; 	T(bx = word_49918;);	// 96769                  mov     bx, word_49918 ;~ 17C5:67CA
cs=0x17c5;eip=0x0067ce; 	T(SAR(bx, 1));	// 96770                  sar     bx, 1 ;~ 17C5:67CE
cs=0x17c5;eip=0x0067d0; 	T(AND(bx, 7));	// 96771                  and     bx, 7 ;~ 17C5:67D0
cs=0x17c5;eip=0x0067d3; 	T(cl = 3;);	// 96772                  mov     cl, 3 ;~ 17C5:67D3
cs=0x17c5;eip=0x0067d5; 	T(SHL(bx, cl));	// 96773                  shl     bx, cl ;~ 17C5:67D5
cs=0x17c5;eip=0x0067d7; 	X(MOV(*(dw*)(raddr(ds,bx+0x0B52)), 0));	// 96774                  mov     word ptr [bx+0B52h], 0 ;~ 17C5:67D7
loc_2ca0d:
	// 5670 
cs=0x17c5;eip=0x0067dd; 	T(bx = word_49918;);	// 96778                  mov     bx, word_49918 ;~ 17C5:67DD
cs=0x17c5;eip=0x0067e1; 	T(SAR(bx, 1));	// 96779                  sar     bx, 1 ;~ 17C5:67E1
cs=0x17c5;eip=0x0067e3; 	T(SAR(bx, 1));	// 96780                  sar     bx, 1 ;~ 17C5:67E3
cs=0x17c5;eip=0x0067e5; 	T(AND(bx, 3));	// 96781                  and     bx, 3 ;~ 17C5:67E5
cs=0x17c5;eip=0x0067e8; 	T(ADD(bx, word_511d4));	// 96782                  add     bx, ds:word_511D4 ;~ 17C5:67E8
cs=0x17c5;eip=0x0067ec; 	T(ax = bx;);	// 96783                  mov     ax, bx ;~ 17C5:67EC
cs=0x17c5;eip=0x0067ee; 	T(SHL(bx, 1));	// 96784                  shl     bx, 1 ;~ 17C5:67EE
cs=0x17c5;eip=0x0067f0; 	T(ADD(bx, ax));	// 96785                  add     bx, ax ;~ 17C5:67F0
cs=0x17c5;eip=0x0067f2; 	T(SHL(bx, 1));	// 96786                  shl     bx, 1 ;~ 17C5:67F2
cs=0x17c5;eip=0x0067f4; 	T(SHL(bx, 1));	// 96787                  shl     bx, 1 ;~ 17C5:67F4
cs=0x17c5;eip=0x0067f6; 	X(MOV(*(dw*)(raddr(ds,bx-0x6304)), 0));	// 96788                  mov     word ptr [bx-6304h], 0 ;~ 17C5:67F6
cs=0x17c5;eip=0x0067fc; 	T(ax = word_4ef1e;);	// 96789                  mov     ax, ds:word_4EF1E ;~ 17C5:67FC
cs=0x17c5;eip=0x0067ff; 	X(word_50b76 = ax;);	// 96790                  mov     ds:word_50B76, ax ;~ 17C5:67FF
cs=0x17c5;eip=0x006802; 	X(word_4ef1e = 0;);	// 96791                  mov     ds:word_4EF1E, 0 ;~ 17C5:6802
cs=0x17c5;eip=0x006808; 	X(MOV(*(dw*)(raddr(ss,bp+var_22)), 0));	// 96792                  mov     [bp+var_22], 0 ;~ 17C5:6808
cs=0x17c5;eip=0x00680d; 	J(JMP(loc_2d71e));	// 96793                  jmp     loc_2D71E ;~ 17C5:680D
loc_2ca40:
	// 5671 
cs=0x17c5;eip=0x006810; 	X(MOV(*(dw*)(raddr(ss,bp+var_1e)), 3));	// 96798                  mov     [bp+var_1E], 3 ;~ 17C5:6810
cs=0x17c5;eip=0x006815; 	T(ax = 0x24;);	// 96799                  mov     ax, 24h ; '$' ;~ 17C5:6815
cs=0x17c5;eip=0x006818; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96800                  imul    [bp+var_22] ;~ 17C5:6818
cs=0x17c5;eip=0x00681b; 	T(bx = ax;);	// 96801                  mov     bx, ax ;~ 17C5:681B
cs=0x17c5;eip=0x00681d; 	T(TEST(*(dw*)(raddr(ds,bx-0x7696)), 0x100));	// 96802                  test    word ptr [bx-7696h], 100h ;~ 17C5:681D
cs=0x17c5;eip=0x006823; 	J(JZ(loc_2cad4));	// 96803                  jz      short loc_2CAD4 ;~ 17C5:6823
cs=0x17c5;eip=0x006825; 	T(CMP(word_4992c, 0x0FFFF));	// 96804                  cmp     word_4992C, 0FFFFh ;~ 17C5:6825
cs=0x17c5;eip=0x00682a; 	J(JZ(loc_2cad4));	// 96805                  jz      short loc_2CAD4 ;~ 17C5:682A
cs=0x17c5;eip=0x00682c; 	T(ax = 0x24;);	// 96806                  mov     ax, 24h ; '$' ;~ 17C5:682C
cs=0x17c5;eip=0x00682f; 	X(IMUL1_2(word_4992c));	// 96807                  imul    word_4992C ;~ 17C5:682F
cs=0x17c5;eip=0x006833; 	T(si = ax;);	// 96808                  mov     si, ax ;~ 17C5:6833
cs=0x17c5;eip=0x006835; 	X(PUSH(*(dw*)(raddr(ds,si-0x7694))));	// 96809                  push    word ptr [si-7694h] ;~ 17C5:6835
cs=0x17c5;eip=0x006839; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_22))));	// 96810                  mov     ax, [bp+var_22] ;~ 17C5:6839
cs=0x17c5;eip=0x00683c; 	T(AND(ax, 7));	// 96811                  and     ax, 7 ;~ 17C5:683C
cs=0x17c5;eip=0x00683f; 	T(cl = 0x0B;);	// 96812                  mov     cl, 0Bh ;~ 17C5:683F
cs=0x17c5;eip=0x006841; 	T(SHL(ax, cl));	// 96813                  shl     ax, cl ;~ 17C5:6841
cs=0x17c5;eip=0x006843; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x769E))));	// 96814                  add     ax, [si-769Eh] ;~ 17C5:6843
cs=0x17c5;eip=0x006847; 	T(SUB(ax, 0x1800));	// 96815                  sub     ax, 1800h ;~ 17C5:6847
cs=0x17c5;eip=0x00684a; 	X(PUSH(ax));	// 96816                  push    ax ;~ 17C5:684A
cs=0x17c5;eip=0x00684b; 	J(CALL(sub_333a8,0));	// 96817                  call    sub_333A8 ;~ 17C5:684B
cs=0x17c5;eip=0x00684e; 	T(ADD(sp, 4));	// 96818                  add     sp, 4 ;~ 17C5:684E
cs=0x17c5;eip=0x006851; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 96819                  add     ax, [si-76ACh] ;~ 17C5:6851
cs=0x17c5;eip=0x006855; 	X(MOV(*(dw*)(raddr(ss,bp+var_30)), ax));	// 96820                  mov     [bp+var_30], ax ;~ 17C5:6855
cs=0x17c5;eip=0x006858; 	T(ax = 0x24;);	// 96821                  mov     ax, 24h ; '$' ;~ 17C5:6858
cs=0x17c5;eip=0x00685b; 	X(IMUL1_2(word_4992c));	// 96822                  imul    word_4992C ;~ 17C5:685B
cs=0x17c5;eip=0x00685f; 	T(si = ax;);	// 96823                  mov     si, ax ;~ 17C5:685F
cs=0x17c5;eip=0x006861; 	X(PUSH(*(dw*)(raddr(ds,si-0x7694))));	// 96824                  push    word ptr [si-7694h] ;~ 17C5:6861
cs=0x17c5;eip=0x006865; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_22))));	// 96825                  mov     ax, [bp+var_22] ;~ 17C5:6865
cs=0x17c5;eip=0x006868; 	T(AND(ax, 7));	// 96826                  and     ax, 7 ;~ 17C5:6868
cs=0x17c5;eip=0x00686b; 	T(cl = 0x0B;);	// 96827                  mov     cl, 0Bh ;~ 17C5:686B
cs=0x17c5;eip=0x00686d; 	T(SHL(ax, cl));	// 96828                  shl     ax, cl ;~ 17C5:686D
cs=0x17c5;eip=0x00686f; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x769E))));	// 96829                  add     ax, [si-769Eh] ;~ 17C5:686F
cs=0x17c5;eip=0x006873; 	T(SUB(ax, 0x1800));	// 96830                  sub     ax, 1800h ;~ 17C5:6873
cs=0x17c5;eip=0x006876; 	X(PUSH(ax));	// 96831                  push    ax ;~ 17C5:6876
cs=0x17c5;eip=0x006877; 	J(CALL(sub_333c0,0));	// 96832                  call    sub_333C0 ;~ 17C5:6877
cs=0x17c5;eip=0x00687a; 	T(ADD(sp, 4));	// 96833                  add     sp, 4 ;~ 17C5:687A
cs=0x17c5;eip=0x00687d; 	T(MOV(cx, *(dw*)(raddr(ds,si-0x76AA))));	// 96834                  mov     cx, [si-76AAh] ;~ 17C5:687D
cs=0x17c5;eip=0x006881; 	T(SUB(cx, ax));	// 96835                  sub     cx, ax ;~ 17C5:6881
cs=0x17c5;eip=0x006883; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), cx));	// 96836                  mov     [bp+var_36], cx ;~ 17C5:6883
cs=0x17c5;eip=0x006886; 	T(ax = 0x24;);	// 96837                  mov     ax, 24h ; '$' ;~ 17C5:6886
cs=0x17c5;eip=0x006889; 	X(IMUL1_2(word_4992c));	// 96838                  imul    word_4992C ;~ 17C5:6889
cs=0x17c5;eip=0x00688d; 	T(bx = ax;);	// 96839                  mov     bx, ax ;~ 17C5:688D
cs=0x17c5;eip=0x00688f; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x76A8))));	// 96840                  mov     ax, [bx-76A8h] ;~ 17C5:688F
cs=0x17c5;eip=0x006893; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_22))));	// 96841                  mov     dx, [bp+var_22] ;~ 17C5:6893
cs=0x17c5;eip=0x006896; 	T(AND(dx, 7));	// 96842                  and     dx, 7 ;~ 17C5:6896
cs=0x17c5;eip=0x006899; 	T(cl = 6;);	// 96843                  mov     cl, 6 ;~ 17C5:6899
cs=0x17c5;eip=0x00689b; 	T(SHL(dx, cl));	// 96844                  shl     dx, cl ;~ 17C5:689B
cs=0x17c5;eip=0x00689d; 	T(ADD(ax, dx));	// 96845                  add     ax, dx ;~ 17C5:689D
cs=0x17c5;eip=0x00689f; 	J(JMP(loc_2cc27));	// 96846                  jmp     loc_2CC27 ;~ 17C5:689F
loc_2cad4:
	// 5672 
cs=0x17c5;eip=0x0068a4; 	T(MOV(al, *(raddr(ss,bp+var_22))));	// 96854                  mov     al, byte ptr [bp+var_22] ;~ 17C5:68A4
cs=0x17c5;eip=0x0068a7; 	T(cl = 3;);	// 96855                  mov     cl, 3 ;~ 17C5:68A7
cs=0x17c5;eip=0x0068a9; 	T(SHL(al, cl));	// 96856                  shl     al, cl ;~ 17C5:68A9
cs=0x17c5;eip=0x0068ab; 	T(ADD(al, *(db*)(&word_4f210)));	// 96857                  add     al, byte ptr ds:word_4F210 ;~ 17C5:68AB
cs=0x17c5;eip=0x0068af; 	T(TEST(al, 0x0BF));	// 96858                  test    al, 0BFh ;~ 17C5:68AF
cs=0x17c5;eip=0x0068b1; 	J(JZ(loc_2cae6));	// 96859                  jz      short loc_2CAE6 ;~ 17C5:68B1
cs=0x17c5;eip=0x0068b3; 	J(JMP(loc_2cbef));	// 96860                  jmp     loc_2CBEF ;~ 17C5:68B3
loc_2cae6:
	// 5673 
cs=0x17c5;eip=0x0068b6; 	T(ax = 0x24;);	// 96864                  mov     ax, 24h ; '$' ;~ 17C5:68B6
cs=0x17c5;eip=0x0068b9; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96865                  imul    [bp+var_22] ;~ 17C5:68B9
cs=0x17c5;eip=0x0068bc; 	T(si = ax;);	// 96866                  mov     si, ax ;~ 17C5:68BC
cs=0x17c5;eip=0x0068be; 	T(TEST(*(raddr(ds,si-0x7696)), 0x40));	// 96867                  test    byte ptr [si-7696h], 40h ;~ 17C5:68BE
cs=0x17c5;eip=0x0068c3; 	J(JZ(loc_2caf8));	// 96868                  jz      short loc_2CAF8 ;~ 17C5:68C3
cs=0x17c5;eip=0x0068c5; 	J(JMP(loc_2cbef));	// 96869                  jmp     loc_2CBEF ;~ 17C5:68C5
loc_2caf8:
	// 5674 
cs=0x17c5;eip=0x0068c8; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), 0x7FFF));	// 96873                  mov     [bp+var_1C], 7FFFh ;~ 17C5:68C8
cs=0x17c5;eip=0x0068cd; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 96874                  mov     ax, [si-76AAh] ;~ 17C5:68CD
cs=0x17c5;eip=0x0068d1; 	T(SUB(ax, word_52100));	// 96875                  sub     ax, ds:word_52100 ;~ 17C5:68D1
cs=0x17c5;eip=0x0068d5; 	X(PUSH(ax));	// 96876                  push    ax ;~ 17C5:68D5
cs=0x17c5;eip=0x0068d6; 	T(ax = word_520f0;);	// 96877                  mov     ax, ds:word_520F0 ;~ 17C5:68D6
cs=0x17c5;eip=0x0068d9; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 96878                  sub     ax, [si-76ACh] ;~ 17C5:68D9
cs=0x17c5;eip=0x0068dd; 	X(PUSH(ax));	// 96879                  push    ax ;~ 17C5:68DD
cs=0x17c5;eip=0x0068de; 	J(CALL(sub_33238,0));	// 96880                  call    sub_33238 ;~ 17C5:68DE
cs=0x17c5;eip=0x0068e1; 	T(ADD(sp, 4));	// 96881                  add     sp, 4 ;~ 17C5:68E1
cs=0x17c5;eip=0x0068e4; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 96882                  mov     [bp+var_8], ax ;~ 17C5:68E4
cs=0x17c5;eip=0x0068e7; 	X(MOV(*(dw*)(raddr(ss,bp+var_26)), 0));	// 96883                  mov     [bp+var_26], 0 ;~ 17C5:68E7
cs=0x17c5;eip=0x0068ec; 	J(JMP(loc_2cb21));	// 96884                  jmp     short loc_2CB21 ;~ 17C5:68EC
loc_2cb1e:
	// 5675 
cs=0x17c5;eip=0x0068ee; 	X(INC(*(dw*)(raddr(ss,bp+var_26))));	// 96889                  inc     [bp+var_26] ;~ 17C5:68EE
loc_2cb21:
	// 5676 
cs=0x17c5;eip=0x0068f1; 	T(CMP(*(dw*)(raddr(ss,bp+var_26)), 8));	// 96892                  cmp     [bp+var_26], 8 ;~ 17C5:68F1
cs=0x17c5;eip=0x0068f5; 	J(JL(loc_2cb2a));	// 96893                  jl      short loc_2CB2A ;~ 17C5:68F5
cs=0x17c5;eip=0x0068f7; 	J(JMP(loc_2cbae));	// 96894                  jmp     loc_2CBAE ;~ 17C5:68F7
loc_2cb2a:
	// 5677 
cs=0x17c5;eip=0x0068fa; 	X(PUSH(word_52102));	// 96898                  push    ds:word_52102 ;~ 17C5:68FA
cs=0x17c5;eip=0x0068fe; 	J(CALL(sub_33430,0));	// 96899                  call    sub_33430 ;~ 17C5:68FE
cs=0x17c5;eip=0x006901; 	T(ADD(sp, 2));	// 96900                  add     sp, 2 ;~ 17C5:6901
cs=0x17c5;eip=0x006904; 	T(INC(ax));	// 96901                  inc     ax ;~ 17C5:6904
cs=0x17c5;eip=0x006905; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 96902                  mov     [bp+var_10], ax ;~ 17C5:6905
cs=0x17c5;eip=0x006908; 	T(si = ax;);	// 96903                  mov     si, ax ;~ 17C5:6908
cs=0x17c5;eip=0x00690a; 	T(cl = 4;);	// 96904                  mov     cl, 4 ;~ 17C5:690A
cs=0x17c5;eip=0x00690c; 	T(SHL(si, cl));	// 96905                  shl     si, cl ;~ 17C5:690C
cs=0x17c5;eip=0x00690e; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x400));	// 96906                  test    word ptr [si-7E4Ch], 400h ;~ 17C5:690E
cs=0x17c5;eip=0x006914; 	J(JNZ(loc_2cb1e));	// 96907                  jnz     short loc_2CB1E ;~ 17C5:6914
cs=0x17c5;eip=0x006916; 	T(ax = 0x24;);	// 96908                  mov     ax, 24h ; '$' ;~ 17C5:6916
cs=0x17c5;eip=0x006919; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96909                  imul    [bp+var_22] ;~ 17C5:6919
cs=0x17c5;eip=0x00691c; 	T(di = ax;);	// 96910                  mov     di, ax ;~ 17C5:691C
cs=0x17c5;eip=0x00691e; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x76AA))));	// 96911                  mov     ax, [di-76AAh] ;~ 17C5:691E
cs=0x17c5;eip=0x006922; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 96912                  sub     ax, [si-7E50h] ;~ 17C5:6922
cs=0x17c5;eip=0x006926; 	X(PUSH(ax));	// 96913                  push    ax ;~ 17C5:6926
cs=0x17c5;eip=0x006927; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 96914                  mov     ax, [si-7E52h] ;~ 17C5:6927
cs=0x17c5;eip=0x00692b; 	T(SUB(ax, *(dw*)(raddr(ds,di-0x76AC))));	// 96915                  sub     ax, [di-76ACh] ;~ 17C5:692B
cs=0x17c5;eip=0x00692f; 	X(PUSH(ax));	// 96916                  push    ax ;~ 17C5:692F
cs=0x17c5;eip=0x006930; 	J(CALL(sub_33238,0));	// 96917                  call    sub_33238 ;~ 17C5:6930
cs=0x17c5;eip=0x006933; 	T(ADD(sp, 4));	// 96918                  add     sp, 4 ;~ 17C5:6933
cs=0x17c5;eip=0x006936; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 96919                  mov     [bp+var_4], ax ;~ 17C5:6936
cs=0x17c5;eip=0x006939; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 96920                  mov     ax, [bp+var_8] ;~ 17C5:6939
cs=0x17c5;eip=0x00693c; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_4))));	// 96921                  sub     ax, [bp+var_4] ;~ 17C5:693C
cs=0x17c5;eip=0x00693f; 	X(PUSH(ax));	// 96922                  push    ax ;~ 17C5:693F
cs=0x17c5;eip=0x006940; 	J(CALL(sub_34dc0,0));	// 96923                  call    sub_34DC0 ;~ 17C5:6940
cs=0x17c5;eip=0x006943; 	T(ADD(sp, 2));	// 96924                  add     sp, 2 ;~ 17C5:6943
cs=0x17c5;eip=0x006946; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_1c))));	// 96925                  cmp     ax, [bp+var_1C] ;~ 17C5:6946
cs=0x17c5;eip=0x006949; 	J(JGE(loc_2cb1e));	// 96926                  jge     short loc_2CB1E ;~ 17C5:6949
cs=0x17c5;eip=0x00694b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 96927                  mov     ax, [bp+var_8] ;~ 17C5:694B
cs=0x17c5;eip=0x00694e; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_4))));	// 96928                  sub     ax, [bp+var_4] ;~ 17C5:694E
cs=0x17c5;eip=0x006951; 	X(PUSH(ax));	// 96929                  push    ax ;~ 17C5:6951
cs=0x17c5;eip=0x006952; 	J(CALL(sub_34dc0,0));	// 96930                  call    sub_34DC0 ;~ 17C5:6952
cs=0x17c5;eip=0x006955; 	T(ADD(sp, 2));	// 96931                  add     sp, 2 ;~ 17C5:6955
cs=0x17c5;eip=0x006958; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 96932                  mov     [bp+var_1C], ax ;~ 17C5:6958
cs=0x17c5;eip=0x00695b; 	T(ax = 0x24;);	// 96933                  mov     ax, 24h ; '$' ;~ 17C5:695B
cs=0x17c5;eip=0x00695e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96934                  imul    [bp+var_22] ;~ 17C5:695E
cs=0x17c5;eip=0x006961; 	T(bx = ax;);	// 96935                  mov     bx, ax ;~ 17C5:6961
cs=0x17c5;eip=0x006963; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_10))));	// 96936                  mov     ax, [bp+var_10] ;~ 17C5:6963
cs=0x17c5;eip=0x006966; 	X(MOV(*(dw*)(raddr(ds,bx-0x76AE)), ax));	// 96937                  mov     [bx-76AEh], ax ;~ 17C5:6966
cs=0x17c5;eip=0x00696a; 	T(ax = word_492e8;);	// 96938                  mov     ax, word_492E8 ;~ 17C5:696A
cs=0x17c5;eip=0x00696d; 	T(cl = 0x0C;);	// 96939                  mov     cl, 0Ch ;~ 17C5:696D
cs=0x17c5;eip=0x00696f; 	T(SHL(ax, cl));	// 96940                  shl     ax, cl ;~ 17C5:696F
cs=0x17c5;eip=0x006971; 	T(SUB(ax, 0x4000));	// 96941                  sub     ax, 4000h ;~ 17C5:6971
cs=0x17c5;eip=0x006974; 	T(NEG(ax));	// 96942                  neg     ax ;~ 17C5:6974
cs=0x17c5;eip=0x006976; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_1c))));	// 96943                  cmp     ax, [bp+var_1C] ;~ 17C5:6976
cs=0x17c5;eip=0x006979; 	J(JG(loc_2cbae));	// 96944                  jg      short loc_2CBAE ;~ 17C5:6979
cs=0x17c5;eip=0x00697b; 	J(JMP(loc_2cb1e));	// 96945                  jmp     loc_2CB1E ;~ 17C5:697B
loc_2cbae:
	// 5678 
cs=0x17c5;eip=0x00697e; 	T(ax = 0x24;);	// 96950                  mov     ax, 24h ; '$' ;~ 17C5:697E
cs=0x17c5;eip=0x006981; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96951                  imul    [bp+var_22] ;~ 17C5:6981
cs=0x17c5;eip=0x006984; 	T(si = ax;);	// 96952                  mov     si, ax ;~ 17C5:6984
cs=0x17c5;eip=0x006986; 	T(ax = word_52100;);	// 96953                  mov     ax, ds:word_52100 ;~ 17C5:6986
cs=0x17c5;eip=0x006989; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 96954                  sub     ax, [si-76AAh] ;~ 17C5:6989
cs=0x17c5;eip=0x00698d; 	X(PUSH(ax));	// 96955                  push    ax ;~ 17C5:698D
cs=0x17c5;eip=0x00698e; 	T(ax = word_520f0;);	// 96956                  mov     ax, ds:word_520F0 ;~ 17C5:698E
cs=0x17c5;eip=0x006991; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 96957                  sub     ax, [si-76ACh] ;~ 17C5:6991
cs=0x17c5;eip=0x006995; 	X(PUSH(ax));	// 96958                  push    ax ;~ 17C5:6995
cs=0x17c5;eip=0x006996; 	J(CALL(sub_331d6,0));	// 96959                  call    sub_331D6 ;~ 17C5:6996
cs=0x17c5;eip=0x006999; 	T(ADD(sp, 4));	// 96960                  add     sp, 4 ;~ 17C5:6999
cs=0x17c5;eip=0x00699c; 	T(cl = 6;);	// 96961                  mov     cl, 6 ;~ 17C5:699C
cs=0x17c5;eip=0x00699e; 	T(SHR(ax, cl));	// 96962                  shr     ax, cl ;~ 17C5:699E
cs=0x17c5;eip=0x0069a0; 	T(CMP(ax, 0x15E));	// 96963                  cmp     ax, 15Eh ;~ 17C5:69A0
cs=0x17c5;eip=0x0069a3; 	J(JBE(loc_2cbef));	// 96964                  jbe     short loc_2CBEF ;~ 17C5:69A3
cs=0x17c5;eip=0x0069a5; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 96965                  cmp     [bp+var_22], 0 ;~ 17C5:69A5
cs=0x17c5;eip=0x0069a9; 	J(JZ(loc_2cbef));	// 96966                  jz      short loc_2CBEF ;~ 17C5:69A9
cs=0x17c5;eip=0x0069ab; 	T(ax = 0x24;);	// 96967                  mov     ax, 24h ; '$' ;~ 17C5:69AB
cs=0x17c5;eip=0x0069ae; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96968                  imul    [bp+var_22] ;~ 17C5:69AE
cs=0x17c5;eip=0x0069b1; 	T(si = ax;);	// 96969                  mov     si, ax ;~ 17C5:69B1
cs=0x17c5;eip=0x0069b3; 	X(AND(*(dw*)(raddr(ds,si-0x7696)), 0x1C1));	// 96970                  and     word ptr [si-7696h], 1C1h ;~ 17C5:69B3
cs=0x17c5;eip=0x0069b9; 	X(MOV(*(dw*)(raddr(ds,si-0x7692)), 0));	// 96971                  mov     word ptr [si-7692h], 0 ;~ 17C5:69B9
loc_2cbef:
	// 5679 
cs=0x17c5;eip=0x0069bf; 	T(ax = 0x24;);	// 96975                  mov     ax, 24h ; '$' ;~ 17C5:69BF
cs=0x17c5;eip=0x0069c2; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 96976                  imul    [bp+var_22] ;~ 17C5:69C2
cs=0x17c5;eip=0x0069c5; 	T(bx = ax;);	// 96977                  mov     bx, ax ;~ 17C5:69C5
cs=0x17c5;eip=0x0069c7; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x76AE))));	// 96978                  mov     ax, [bx-76AEh] ;~ 17C5:69C7
cs=0x17c5;eip=0x0069cb; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 96979                  mov     [bp+var_10], ax ;~ 17C5:69CB
cs=0x17c5;eip=0x0069ce; 	T(si = ax;);	// 96980                  mov     si, ax ;~ 17C5:69CE
cs=0x17c5;eip=0x0069d0; 	T(cl = 4;);	// 96981                  mov     cl, 4 ;~ 17C5:69D0
cs=0x17c5;eip=0x0069d2; 	T(SHL(si, cl));	// 96982                  shl     si, cl ;~ 17C5:69D2
cs=0x17c5;eip=0x0069d4; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 96983                  mov     ax, [si-7E52h] ;~ 17C5:69D4
cs=0x17c5;eip=0x0069d8; 	X(MOV(*(dw*)(raddr(ss,bp+var_30)), ax));	// 96984                  mov     [bp+var_30], ax ;~ 17C5:69D8
cs=0x17c5;eip=0x0069db; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 96985                  mov     ax, [si-7E50h] ;~ 17C5:69DB
cs=0x17c5;eip=0x0069df; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), ax));	// 96986                  mov     [bp+var_36], ax ;~ 17C5:69DF
cs=0x17c5;eip=0x0069e2; 	T(ax = 0x4E20;);	// 96987                  mov     ax, 4E20h ;~ 17C5:69E2
cs=0x17c5;eip=0x0069e5; 	X(PUSH(ax));	// 96988                  push    ax ;~ 17C5:69E5
cs=0x17c5;eip=0x0069e6; 	T(ax = 0x1388;);	// 96989                  mov     ax, 1388h ;~ 17C5:69E6
cs=0x17c5;eip=0x0069e9; 	X(PUSH(ax));	// 96990                  push    ax ;~ 17C5:69E9
cs=0x17c5;eip=0x0069ea; 	T(ax = word_4e2fe;);	// 96991                  mov     ax, ds:word_4E2FE ;~ 17C5:69EA
cs=0x17c5;eip=0x0069ed; 	T(ADD(ax, 0x3E8));	// 96992                  add     ax, 3E8h ;~ 17C5:69ED
cs=0x17c5;eip=0x0069f0; 	X(PUSH(ax));	// 96993                  push    ax ;~ 17C5:69F0
loc_2cc21:
	// 5680 
cs=0x17c5;eip=0x0069f1; 	J(CALL(sub_33194,0));	// 96996                  call    sub_33194 ;~ 17C5:69F1
cs=0x17c5;eip=0x0069f4; 	T(ADD(sp, 6));	// 96997                  add     sp, 6 ;~ 17C5:69F4
loc_2cc27:
	// 5681 
cs=0x17c5;eip=0x0069f7; 	X(MOV(*(dw*)(raddr(ss,bp+var_3a)), ax));	// 97000                  mov     [bp+var_3A], ax ;~ 17C5:69F7
cs=0x17c5;eip=0x0069fa; 	J(JMP(loc_2ccc6));	// 97001                  jmp     loc_2CCC6 ;~ 17C5:69FA
loc_2cc2e:
	// 5682 
cs=0x17c5;eip=0x0069fe; 	T(ax = 0x24;);	// 97007                  mov     ax, 24h ; '$' ;~ 17C5:69FE
cs=0x17c5;eip=0x006a01; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97008                  imul    [bp+var_22] ;~ 17C5:6A01
cs=0x17c5;eip=0x006a04; 	T(si = ax;);	// 97009                  mov     si, ax ;~ 17C5:6A04
cs=0x17c5;eip=0x006a06; 	T(MOV(di, *(dw*)(raddr(ds,si-0x76AE))));	// 97010                  mov     di, [si-76AEh] ;~ 17C5:6A06
cs=0x17c5;eip=0x006a0a; 	T(cl = 4;);	// 97011                  mov     cl, 4 ;~ 17C5:6A0A
cs=0x17c5;eip=0x006a0c; 	T(SHL(di, cl));	// 97012                  shl     di, cl ;~ 17C5:6A0C
cs=0x17c5;eip=0x006a0e; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E52))));	// 97013                  mov     ax, [di-7E52h] ;~ 17C5:6A0E
cs=0x17c5;eip=0x006a12; 	X(MOV(*(dw*)(raddr(ss,bp+var_30)), ax));	// 97014                  mov     [bp+var_30], ax ;~ 17C5:6A12
cs=0x17c5;eip=0x006a15; 	T(TEST(*(dw*)(raddr(ds,si-0x7696)), 0x200));	// 97015                  test    word ptr [si-7696h], 200h ;~ 17C5:6A15
cs=0x17c5;eip=0x006a1b; 	J(JZ(loc_2cc86));	// 97016                  jz      short loc_2CC86 ;~ 17C5:6A1B
cs=0x17c5;eip=0x006a1d; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 97017                  mov     ax, [si-76ACh] ;~ 17C5:6A1D
cs=0x17c5;eip=0x006a21; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_30))));	// 97018                  sub     ax, [bp+var_30] ;~ 17C5:6A21
cs=0x17c5;eip=0x006a24; 	X(MOV(*(dw*)(raddr(ss,bp+var_3a)), ax));	// 97019                  mov     [bp+var_3A], ax ;~ 17C5:6A24
cs=0x17c5;eip=0x006a27; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E50))));	// 97020                  mov     ax, [di-7E50h] ;~ 17C5:6A27
cs=0x17c5;eip=0x006a2b; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), ax));	// 97021                  mov     [bp+var_36], ax ;~ 17C5:6A2B
cs=0x17c5;eip=0x006a2e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_3a))));	// 97022                  mov     ax, [bp+var_3A] ;~ 17C5:6A2E
cs=0x17c5;eip=0x006a31; 	T(SHL(ax, 1));	// 97023                  shl     ax, 1 ;~ 17C5:6A31
cs=0x17c5;eip=0x006a33; 	X(SUB(*(dw*)(raddr(ss,bp+var_30)), ax));	// 97024                  sub     [bp+var_30], ax ;~ 17C5:6A33
cs=0x17c5;eip=0x006a36; 	X(PUSH(*(dw*)(raddr(ss,bp+var_3a))));	// 97025                  push    [bp+var_3A] ;~ 17C5:6A36
cs=0x17c5;eip=0x006a39; 	J(CALL(sub_34dc0,0));	// 97026                  call    sub_34DC0 ;~ 17C5:6A39
cs=0x17c5;eip=0x006a3c; 	T(ADD(sp, 2));	// 97027                  add     sp, 2 ;~ 17C5:6A3C
cs=0x17c5;eip=0x006a3f; 	T(MOV(cx, *(dw*)(raddr(ds,di-0x7E4C))));	// 97028                  mov     cx, [di-7E4Ch] ;~ 17C5:6A3F
cs=0x17c5;eip=0x006a43; 	T(ADD(cx, ax));	// 97029                  add     cx, ax ;~ 17C5:6A43
cs=0x17c5;eip=0x006a45; 	T(TEST(cx, 0x200));	// 97030                  test    cx, 200h ;~ 17C5:6A45
cs=0x17c5;eip=0x006a49; 	J(JZ(loc_2cc80));	// 97031                  jz      short loc_2CC80 ;~ 17C5:6A49
cs=0x17c5;eip=0x006a4b; 	T(ax = 0x8C;);	// 97032                  mov     ax, 8Ch ;~ 17C5:6A4B
cs=0x17c5;eip=0x006a4e; 	J(JMP(loc_2ccbe));	// 97033                  jmp     short loc_2CCBE ;~ 17C5:6A4E
loc_2cc80:
	// 5683 
cs=0x17c5;eip=0x006a50; 	T(ax = 0x0C;);	// 97037                  mov     ax, 0Ch ;~ 17C5:6A50
cs=0x17c5;eip=0x006a53; 	J(JMP(loc_2ccbe));	// 97038                  jmp     short loc_2CCBE ;~ 17C5:6A53
loc_2cc86:
	// 5684 
cs=0x17c5;eip=0x006a56; 	T(ax = 0x24;);	// 97044                  mov     ax, 24h ; '$' ;~ 17C5:6A56
cs=0x17c5;eip=0x006a59; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97045                  imul    [bp+var_22] ;~ 17C5:6A59
cs=0x17c5;eip=0x006a5c; 	T(si = ax;);	// 97046                  mov     si, ax ;~ 17C5:6A5C
cs=0x17c5;eip=0x006a5e; 	T(ax = 0x500;);	// 97047                  mov     ax, 500h ;~ 17C5:6A5E
cs=0x17c5;eip=0x006a61; 	X(IMUL1_2(word_511d8));	// 97048                  imul    ds:word_511D8 ;~ 17C5:6A61
cs=0x17c5;eip=0x006a65; 	T(MOV(bx, *(dw*)(raddr(ds,si-0x76AE))));	// 97049                  mov     bx, [si-76AEh] ;~ 17C5:6A65
cs=0x17c5;eip=0x006a69; 	T(cl = 4;);	// 97050                  mov     cl, 4 ;~ 17C5:6A69
cs=0x17c5;eip=0x006a6b; 	T(SHL(bx, cl));	// 97051                  shl     bx, cl ;~ 17C5:6A6B
cs=0x17c5;eip=0x006a6d; 	T(MOV(cx, *(dw*)(raddr(ds,bx-0x7E50))));	// 97052                  mov     cx, [bx-7E50h] ;~ 17C5:6A6D
cs=0x17c5;eip=0x006a71; 	T(ADD(cx, ax));	// 97053                  add     cx, ax ;~ 17C5:6A71
cs=0x17c5;eip=0x006a73; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), cx));	// 97054                  mov     [bp+var_36], cx ;~ 17C5:6A73
cs=0x17c5;eip=0x006a76; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 97055                  mov     ax, [si-76AAh] ;~ 17C5:6A76
cs=0x17c5;eip=0x006a7a; 	T(SUB(ax, cx));	// 97056                  sub     ax, cx ;~ 17C5:6A7A
cs=0x17c5;eip=0x006a7c; 	X(PUSH(ax));	// 97057                  push    ax ;~ 17C5:6A7C
cs=0x17c5;eip=0x006a7d; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 97058                  mov     ax, [si-76ACh] ;~ 17C5:6A7D
cs=0x17c5;eip=0x006a81; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_30))));	// 97059                  sub     ax, [bp+var_30] ;~ 17C5:6A81
cs=0x17c5;eip=0x006a84; 	X(PUSH(ax));	// 97060                  push    ax ;~ 17C5:6A84
cs=0x17c5;eip=0x006a85; 	J(CALL(sub_331d6,0));	// 97061                  call    sub_331D6 ;~ 17C5:6A85
cs=0x17c5;eip=0x006a88; 	T(ADD(sp, 4));	// 97062                  add     sp, 4 ;~ 17C5:6A88
cs=0x17c5;eip=0x006a8b; 	T(ADD(ax, 0x7D0));	// 97063                  add     ax, 7D0h ;~ 17C5:6A8B
loc_2ccbe:
	// 5685 
cs=0x17c5;eip=0x006a8e; 	X(MOV(*(dw*)(raddr(ss,bp+var_3a)), ax));	// 97067                  mov     [bp+var_3A], ax ;~ 17C5:6A8E
cs=0x17c5;eip=0x006a91; 	X(MOV(*(dw*)(raddr(ss,bp+var_1e)), 2));	// 97068                  mov     [bp+var_1E], 2 ;~ 17C5:6A91
loc_2ccc6:
	// 5686 
cs=0x17c5;eip=0x006a96; 	T(CMP(*(dw*)(raddr(ss,bp+var_1e)), 3));	// 97072                  cmp     [bp+var_1E], 3 ;~ 17C5:6A96
cs=0x17c5;eip=0x006a9a; 	J(JNZ(loc_2ccee));	// 97073                  jnz     short loc_2CCEE ;~ 17C5:6A9A
cs=0x17c5;eip=0x006a9c; 	T(ax = 0x24;);	// 97074                  mov     ax, 24h ; '$' ;~ 17C5:6A9C
cs=0x17c5;eip=0x006a9f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97075                  imul    [bp+var_22] ;~ 17C5:6A9F
cs=0x17c5;eip=0x006aa2; 	T(si = ax;);	// 97076                  mov     si, ax ;~ 17C5:6AA2
cs=0x17c5;eip=0x006aa4; 	T(TEST(*(raddr(ds,si-0x7696)), 8));	// 97077                  test    byte ptr [si-7696h], 8 ;~ 17C5:6AA4
cs=0x17c5;eip=0x006aa9; 	J(JZ(loc_2ccee));	// 97078                  jz      short loc_2CCEE ;~ 17C5:6AA9
cs=0x17c5;eip=0x006aab; 	T(ax = word_520f0;);	// 97079                  mov     ax, ds:word_520F0 ;~ 17C5:6AAB
cs=0x17c5;eip=0x006aae; 	X(MOV(*(dw*)(raddr(ss,bp+var_30)), ax));	// 97080                  mov     [bp+var_30], ax ;~ 17C5:6AAE
cs=0x17c5;eip=0x006ab1; 	T(ax = word_52100;);	// 97081                  mov     ax, ds:word_52100 ;~ 17C5:6AB1
cs=0x17c5;eip=0x006ab4; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), ax));	// 97082                  mov     [bp+var_36], ax ;~ 17C5:6AB4
cs=0x17c5;eip=0x006ab7; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 97083                  mov     ax, [si-76A8h] ;~ 17C5:6AB7
cs=0x17c5;eip=0x006abb; 	X(MOV(*(dw*)(raddr(ss,bp+var_3a)), ax));	// 97084                  mov     [bp+var_3A], ax ;~ 17C5:6ABB
loc_2ccee:
	// 5687 
cs=0x17c5;eip=0x006abe; 	T(ax = 0x24;);	// 97088                  mov     ax, 24h ; '$' ;~ 17C5:6ABE
cs=0x17c5;eip=0x006ac1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97089                  imul    [bp+var_22] ;~ 17C5:6AC1
cs=0x17c5;eip=0x006ac4; 	T(si = ax;);	// 97090                  mov     si, ax ;~ 17C5:6AC4
cs=0x17c5;eip=0x006ac6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_30))));	// 97091                  mov     ax, [bp+var_30] ;~ 17C5:6AC6
cs=0x17c5;eip=0x006ac9; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 97092                  sub     ax, [si-76ACh] ;~ 17C5:6AC9
cs=0x17c5;eip=0x006acd; 	X(MOV(*(dw*)(raddr(ss,bp+var_2e)), ax));	// 97093                  mov     [bp+var_2E], ax ;~ 17C5:6ACD
cs=0x17c5;eip=0x006ad0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_36))));	// 97094                  mov     ax, [bp+var_36] ;~ 17C5:6AD0
cs=0x17c5;eip=0x006ad3; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 97095                  sub     ax, [si-76AAh] ;~ 17C5:6AD3
cs=0x17c5;eip=0x006ad7; 	X(MOV(*(dw*)(raddr(ss,bp+var_34)), ax));	// 97096                  mov     [bp+var_34], ax ;~ 17C5:6AD7
cs=0x17c5;eip=0x006ada; 	T(NEG(ax));	// 97097                  neg     ax ;~ 17C5:6ADA
cs=0x17c5;eip=0x006adc; 	X(PUSH(ax));	// 97098                  push    ax ;~ 17C5:6ADC
cs=0x17c5;eip=0x006add; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2e))));	// 97099                  push    [bp+var_2E] ;~ 17C5:6ADD
cs=0x17c5;eip=0x006ae0; 	J(CALL(sub_33238,0));	// 97100                  call    sub_33238 ;~ 17C5:6AE0
cs=0x17c5;eip=0x006ae3; 	T(ADD(sp, 4));	// 97101                  add     sp, 4 ;~ 17C5:6AE3
cs=0x17c5;eip=0x006ae6; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 97102                  mov     [bp+var_C], ax ;~ 17C5:6AE6
cs=0x17c5;eip=0x006ae9; 	X(PUSH(*(dw*)(raddr(ss,bp+var_34))));	// 97103                  push    [bp+var_34] ;~ 17C5:6AE9
cs=0x17c5;eip=0x006aec; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2e))));	// 97104                  push    [bp+var_2E] ;~ 17C5:6AEC
cs=0x17c5;eip=0x006aef; 	J(CALL(sub_331d6,0));	// 97105                  call    sub_331D6 ;~ 17C5:6AEF
cs=0x17c5;eip=0x006af2; 	T(ADD(sp, 4));	// 97106                  add     sp, 4 ;~ 17C5:6AF2
cs=0x17c5;eip=0x006af5; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 97107                  mov     [bp+var_1A], ax ;~ 17C5:6AF5
cs=0x17c5;eip=0x006af8; 	X(PUSH(ax));	// 97108                  push    ax ;~ 17C5:6AF8
cs=0x17c5;eip=0x006af9; 	T(ax = 0x24;);	// 97109                  mov     ax, 24h ; '$' ;~ 17C5:6AF9
cs=0x17c5;eip=0x006afc; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97110                  imul    [bp+var_22] ;~ 17C5:6AFC
cs=0x17c5;eip=0x006aff; 	T(bx = ax;);	// 97111                  mov     bx, ax ;~ 17C5:6AFF
cs=0x17c5;eip=0x006b01; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_3a))));	// 97112                  mov     ax, [bp+var_3A] ;~ 17C5:6B01
cs=0x17c5;eip=0x006b04; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x76A8))));	// 97113                  sub     ax, [bx-76A8h] ;~ 17C5:6B04
cs=0x17c5;eip=0x006b08; 	T(cl = 5;);	// 97114                  mov     cl, 5 ;~ 17C5:6B08
cs=0x17c5;eip=0x006b0a; 	T(SAR(ax, cl));	// 97115                  sar     ax, cl ;~ 17C5:6B0A
cs=0x17c5;eip=0x006b0c; 	X(PUSH(ax));	// 97116                  push    ax ;~ 17C5:6B0C
cs=0x17c5;eip=0x006b0d; 	J(CALL(sub_33238,0));	// 97117                  call    sub_33238 ;~ 17C5:6B0D
cs=0x17c5;eip=0x006b10; 	T(ADD(sp, 4));	// 97118                  add     sp, 4 ;~ 17C5:6B10
cs=0x17c5;eip=0x006b13; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 97119                  mov     [bp+var_2], ax ;~ 17C5:6B13
cs=0x17c5;eip=0x006b16; 	T(ax = 0x1000;);	// 97120                  mov     ax, 1000h ;~ 17C5:6B16
cs=0x17c5;eip=0x006b19; 	X(PUSH(ax));	// 97121                  push    ax ;~ 17C5:6B19
cs=0x17c5;eip=0x006b1a; 	T(ax = 0x0E000;);	// 97122                  mov     ax, 0E000h ;~ 17C5:6B1A
cs=0x17c5;eip=0x006b1d; 	X(PUSH(ax));	// 97123                  push    ax ;~ 17C5:6B1D
cs=0x17c5;eip=0x006b1e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 97124                  push    [bp+var_2] ;~ 17C5:6B1E
cs=0x17c5;eip=0x006b21; 	J(CALL(sub_33194,0));	// 97125                  call    sub_33194 ;~ 17C5:6B21
cs=0x17c5;eip=0x006b24; 	T(ADD(sp, 6));	// 97126                  add     sp, 6 ;~ 17C5:6B24
cs=0x17c5;eip=0x006b27; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 97127                  mov     [bp+var_2], ax ;~ 17C5:6B27
cs=0x17c5;eip=0x006b2a; 	T(CMP(*(dw*)(raddr(ss,bp+var_1e)), 1));	// 97128                  cmp     [bp+var_1E], 1 ;~ 17C5:6B2A
cs=0x17c5;eip=0x006b2e; 	J(JZ(loc_2cd63));	// 97129                  jz      short loc_2CD63 ;~ 17C5:6B2E
cs=0x17c5;eip=0x006b30; 	J(JMP(loc_2d006));	// 97130                  jmp     loc_2D006 ;~ 17C5:6B30
loc_2cd63:
	// 5688 
cs=0x17c5;eip=0x006b33; 	T(CMP(*(dw*)(raddr(ss,bp+var_1a)), 0x600));	// 97134                  cmp     [bp+var_1A], 600h ;~ 17C5:6B33
cs=0x17c5;eip=0x006b38; 	J(JC(loc_2cd6d));	// 97135                  jb      short loc_2CD6D ;~ 17C5:6B38
cs=0x17c5;eip=0x006b3a; 	J(JMP(loc_2d006));	// 97136                  jmp     loc_2D006 ;~ 17C5:6B3A
loc_2cd6d:
	// 5689 
cs=0x17c5;eip=0x006b3d; 	X(INC(word_4ef1e));	// 97140                  inc     ds:word_4EF1E ;~ 17C5:6B3D
cs=0x17c5;eip=0x006b41; 	T(CMP(*(dw*)(raddr(ss,bp+var_1a)), 0x400));	// 97141                  cmp     [bp+var_1A], 400h ;~ 17C5:6B41
cs=0x17c5;eip=0x006b46; 	J(JC(loc_2cd7b));	// 97142                  jb      short loc_2CD7B ;~ 17C5:6B46
cs=0x17c5;eip=0x006b48; 	J(JMP(loc_2ce9d));	// 97143                  jmp     loc_2CE9D ;~ 17C5:6B48
loc_2cd7b:
	// 5690 
cs=0x17c5;eip=0x006b4b; 	T(TEST(*(db*)(&word_49918), 3));	// 97147                  test    byte ptr word_49918, 3 ;~ 17C5:6B4B
cs=0x17c5;eip=0x006b50; 	J(JZ(loc_2cd85));	// 97148                  jz      short loc_2CD85 ;~ 17C5:6B50
cs=0x17c5;eip=0x006b52; 	J(JMP(loc_2ce9d));	// 97149                  jmp     loc_2CE9D ;~ 17C5:6B52
loc_2cd85:
	// 5691 
cs=0x17c5;eip=0x006b55; 	T(ax = 0x24;);	// 97153                  mov     ax, 24h ; '$' ;~ 17C5:6B55
cs=0x17c5;eip=0x006b58; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97154                  imul    [bp+var_22] ;~ 17C5:6B58
cs=0x17c5;eip=0x006b5b; 	T(bx = ax;);	// 97155                  mov     bx, ax ;~ 17C5:6B5B
cs=0x17c5;eip=0x006b5d; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x769E))));	// 97156                  mov     ax, [bx-769Eh] ;~ 17C5:6B5D
cs=0x17c5;eip=0x006b61; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_c))));	// 97157                  sub     ax, [bp+var_C] ;~ 17C5:6B61
cs=0x17c5;eip=0x006b64; 	X(PUSH(ax));	// 97158                  push    ax ;~ 17C5:6B64
cs=0x17c5;eip=0x006b65; 	J(CALL(sub_34dc0,0));	// 97159                  call    sub_34DC0 ;~ 17C5:6B65
cs=0x17c5;eip=0x006b68; 	T(ADD(sp, 2));	// 97160                  add     sp, 2 ;~ 17C5:6B68
cs=0x17c5;eip=0x006b6b; 	T(CMP(ax, 0x800));	// 97161                  cmp     ax, 800h ;~ 17C5:6B6B
cs=0x17c5;eip=0x006b6e; 	J(JL(loc_2cda3));	// 97162                  jl      short loc_2CDA3 ;~ 17C5:6B6E
cs=0x17c5;eip=0x006b70; 	J(JMP(loc_2ce9d));	// 97163                  jmp     loc_2CE9D ;~ 17C5:6B70
loc_2cda3:
	// 5692 
cs=0x17c5;eip=0x006b73; 	T(ax = 0x24;);	// 97167                  mov     ax, 24h ; '$' ;~ 17C5:6B73
cs=0x17c5;eip=0x006b76; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97168                  imul    [bp+var_22] ;~ 17C5:6B76
cs=0x17c5;eip=0x006b79; 	T(bx = ax;);	// 97169                  mov     bx, ax ;~ 17C5:6B79
cs=0x17c5;eip=0x006b7b; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x769C))));	// 97170                  mov     ax, [bx-769Ch] ;~ 17C5:6B7B
cs=0x17c5;eip=0x006b7f; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_2))));	// 97171                  sub     ax, [bp+var_2] ;~ 17C5:6B7F
cs=0x17c5;eip=0x006b82; 	X(PUSH(ax));	// 97172                  push    ax ;~ 17C5:6B82
cs=0x17c5;eip=0x006b83; 	J(CALL(sub_34dc0,0));	// 97173                  call    sub_34DC0 ;~ 17C5:6B83
cs=0x17c5;eip=0x006b86; 	T(ADD(sp, 2));	// 97174                  add     sp, 2 ;~ 17C5:6B86
cs=0x17c5;eip=0x006b89; 	T(CMP(ax, 0x800));	// 97175                  cmp     ax, 800h ;~ 17C5:6B89
cs=0x17c5;eip=0x006b8c; 	J(JL(loc_2cdc1));	// 97176                  jl      short loc_2CDC1 ;~ 17C5:6B8C
cs=0x17c5;eip=0x006b8e; 	J(JMP(loc_2ce9d));	// 97177                  jmp     loc_2CE9D ;~ 17C5:6B8E
loc_2cdc1:
	// 5693 
cs=0x17c5;eip=0x006b91; 	T(ax = word_49918;);	// 97181                  mov     ax, word_49918 ;~ 17C5:6B91
cs=0x17c5;eip=0x006b94; 	T(SAR(ax, 1));	// 97182                  sar     ax, 1 ;~ 17C5:6B94
cs=0x17c5;eip=0x006b96; 	T(SAR(ax, 1));	// 97183                  sar     ax, 1 ;~ 17C5:6B96
cs=0x17c5;eip=0x006b98; 	T(AND(ax, 3));	// 97184                  and     ax, 3 ;~ 17C5:6B98
cs=0x17c5;eip=0x006b9b; 	T(ADD(ax, word_511d4));	// 97185                  add     ax, ds:word_511D4 ;~ 17C5:6B9B
cs=0x17c5;eip=0x006b9f; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 97186                  mov     [bp+var_2A], ax ;~ 17C5:6B9F
cs=0x17c5;eip=0x006ba2; 	T(ax = 0x138;);	// 97187                  mov     ax, 138h ;~ 17C5:6BA2
cs=0x17c5;eip=0x006ba5; 	T(CWD);	// 97188                  cwd ;~ 17C5:6BA5
cs=0x17c5;eip=0x006ba6; 	T(cx = word_492f4;);	// 97189                  mov     cx, word_492F4 ;~ 17C5:6BA6
cs=0x17c5;eip=0x006baa; 	T(IDIV2(cx));	// 97190                  idiv    cx ;~ 17C5:6BAA
cs=0x17c5;eip=0x006bac; 	X(MOV(*(dw*)(raddr(ss,bp+var_28)), ax));	// 97191                  mov     [bp+var_28], ax ;~ 17C5:6BAC
cs=0x17c5;eip=0x006baf; 	X(PUSH(ax));	// 97192                  push    ax ;~ 17C5:6BAF
cs=0x17c5;eip=0x006bb0; 	T(ax = 0x24;);	// 97193                  mov     ax, 24h ; '$' ;~ 17C5:6BB0
cs=0x17c5;eip=0x006bb3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97194                  imul    [bp+var_22] ;~ 17C5:6BB3
cs=0x17c5;eip=0x006bb6; 	T(bx = ax;);	// 97195                  mov     bx, ax ;~ 17C5:6BB6
cs=0x17c5;eip=0x006bb8; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x769C))));	// 97196                  mov     ax, [bx-769Ch] ;~ 17C5:6BB8
cs=0x17c5;eip=0x006bbc; 	T(NEG(ax));	// 97197                  neg     ax ;~ 17C5:6BBC
cs=0x17c5;eip=0x006bbe; 	X(PUSH(ax));	// 97198                  push    ax ;~ 17C5:6BBE
cs=0x17c5;eip=0x006bbf; 	J(CALL(sub_333a8,0));	// 97199                  call    sub_333A8 ;~ 17C5:6BBF
cs=0x17c5;eip=0x006bc2; 	T(ADD(sp, 4));	// 97200                  add     sp, 4 ;~ 17C5:6BC2
cs=0x17c5;eip=0x006bc5; 	T(cl = 5;);	// 97201                  mov     cl, 5 ;~ 17C5:6BC5
cs=0x17c5;eip=0x006bc7; 	T(SHL(ax, cl));	// 97202                  shl     ax, cl ;~ 17C5:6BC7
cs=0x17c5;eip=0x006bc9; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2a))));	// 97203                  mov     bx, [bp+var_2A] ;~ 17C5:6BC9
cs=0x17c5;eip=0x006bcc; 	T(cx = bx;);	// 97204                  mov     cx, bx ;~ 17C5:6BCC
cs=0x17c5;eip=0x006bce; 	T(SHL(bx, 1));	// 97205                  shl     bx, 1 ;~ 17C5:6BCE
cs=0x17c5;eip=0x006bd0; 	T(ADD(bx, cx));	// 97206                  add     bx, cx ;~ 17C5:6BD0
cs=0x17c5;eip=0x006bd2; 	T(SHL(bx, 1));	// 97207                  shl     bx, 1 ;~ 17C5:6BD2
cs=0x17c5;eip=0x006bd4; 	T(SHL(bx, 1));	// 97208                  shl     bx, 1 ;~ 17C5:6BD4
cs=0x17c5;eip=0x006bd6; 	X(MOV(*(dw*)(raddr(ds,bx-0x62FA)), ax));	// 97209                  mov     [bx-62FAh], ax ;~ 17C5:6BD6
cs=0x17c5;eip=0x006bda; 	X(PUSH(*(dw*)(raddr(ss,bp+var_28))));	// 97210                  push    [bp+var_28] ;~ 17C5:6BDA
cs=0x17c5;eip=0x006bdd; 	T(ax = 0x24;);	// 97211                  mov     ax, 24h ; '$' ;~ 17C5:6BDD
cs=0x17c5;eip=0x006be0; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97212                  imul    [bp+var_22] ;~ 17C5:6BE0
cs=0x17c5;eip=0x006be3; 	T(bx = ax;);	// 97213                  mov     bx, ax ;~ 17C5:6BE3
cs=0x17c5;eip=0x006be5; 	X(PUSH(*(dw*)(raddr(ds,bx-0x769C))));	// 97214                  push    word ptr [bx-769Ch] ;~ 17C5:6BE5
cs=0x17c5;eip=0x006be9; 	J(CALL(sub_333c0,0));	// 97215                  call    sub_333C0 ;~ 17C5:6BE9
cs=0x17c5;eip=0x006bec; 	T(ADD(sp, 4));	// 97216                  add     sp, 4 ;~ 17C5:6BEC
cs=0x17c5;eip=0x006bef; 	X(MOV(*(dw*)(raddr(ss,bp+var_28)), ax));	// 97217                  mov     [bp+var_28], ax ;~ 17C5:6BEF
cs=0x17c5;eip=0x006bf2; 	X(PUSH(ax));	// 97218                  push    ax ;~ 17C5:6BF2
cs=0x17c5;eip=0x006bf3; 	T(ax = 0x24;);	// 97219                  mov     ax, 24h ; '$' ;~ 17C5:6BF3
cs=0x17c5;eip=0x006bf6; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97220                  imul    [bp+var_22] ;~ 17C5:6BF6
cs=0x17c5;eip=0x006bf9; 	T(bx = ax;);	// 97221                  mov     bx, ax ;~ 17C5:6BF9
cs=0x17c5;eip=0x006bfb; 	X(PUSH(*(dw*)(raddr(ds,bx-0x769E))));	// 97222                  push    word ptr [bx-769Eh] ;~ 17C5:6BFB
cs=0x17c5;eip=0x006bff; 	J(CALL(sub_333a8,0));	// 97223                  call    sub_333A8 ;~ 17C5:6BFF
cs=0x17c5;eip=0x006c02; 	T(ADD(sp, 4));	// 97224                  add     sp, 4 ;~ 17C5:6C02
cs=0x17c5;eip=0x006c05; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2a))));	// 97225                  mov     bx, [bp+var_2A] ;~ 17C5:6C05
cs=0x17c5;eip=0x006c08; 	T(cx = bx;);	// 97226                  mov     cx, bx ;~ 17C5:6C08
cs=0x17c5;eip=0x006c0a; 	T(SHL(bx, 1));	// 97227                  shl     bx, 1 ;~ 17C5:6C0A
cs=0x17c5;eip=0x006c0c; 	T(ADD(bx, cx));	// 97228                  add     bx, cx ;~ 17C5:6C0C
cs=0x17c5;eip=0x006c0e; 	T(SHL(bx, 1));	// 97229                  shl     bx, 1 ;~ 17C5:6C0E
cs=0x17c5;eip=0x006c10; 	T(SHL(bx, 1));	// 97230                  shl     bx, 1 ;~ 17C5:6C10
cs=0x17c5;eip=0x006c12; 	X(MOV(*(dw*)(raddr(ds,bx-0x62FE)), ax));	// 97231                  mov     [bx-62FEh], ax ;~ 17C5:6C12
cs=0x17c5;eip=0x006c16; 	X(PUSH(*(dw*)(raddr(ss,bp+var_28))));	// 97232                  push    [bp+var_28] ;~ 17C5:6C16
cs=0x17c5;eip=0x006c19; 	T(ax = 0x24;);	// 97233                  mov     ax, 24h ; '$' ;~ 17C5:6C19
cs=0x17c5;eip=0x006c1c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97234                  imul    [bp+var_22] ;~ 17C5:6C1C
cs=0x17c5;eip=0x006c1f; 	T(bx = ax;);	// 97235                  mov     bx, ax ;~ 17C5:6C1F
cs=0x17c5;eip=0x006c21; 	X(PUSH(*(dw*)(raddr(ds,bx-0x769E))));	// 97236                  push    word ptr [bx-769Eh] ;~ 17C5:6C21
cs=0x17c5;eip=0x006c25; 	J(CALL(sub_333c0,0));	// 97237                  call    sub_333C0 ;~ 17C5:6C25
cs=0x17c5;eip=0x006c28; 	T(ADD(sp, 4));	// 97238                  add     sp, 4 ;~ 17C5:6C28
cs=0x17c5;eip=0x006c2b; 	T(NEG(ax));	// 97239                  neg     ax ;~ 17C5:6C2B
cs=0x17c5;eip=0x006c2d; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2a))));	// 97240                  mov     bx, [bp+var_2A] ;~ 17C5:6C2D
cs=0x17c5;eip=0x006c30; 	T(cx = bx;);	// 97241                  mov     cx, bx ;~ 17C5:6C30
cs=0x17c5;eip=0x006c32; 	T(SHL(bx, 1));	// 97242                  shl     bx, 1 ;~ 17C5:6C32
cs=0x17c5;eip=0x006c34; 	T(ADD(bx, cx));	// 97243                  add     bx, cx ;~ 17C5:6C34
cs=0x17c5;eip=0x006c36; 	T(SHL(bx, 1));	// 97244                  shl     bx, 1 ;~ 17C5:6C36
cs=0x17c5;eip=0x006c38; 	T(SHL(bx, 1));	// 97245                  shl     bx, 1 ;~ 17C5:6C38
cs=0x17c5;eip=0x006c3a; 	X(MOV(*(dw*)(raddr(ds,bx-0x62FC)), ax));	// 97246                  mov     [bx-62FCh], ax ;~ 17C5:6C3A
cs=0x17c5;eip=0x006c3e; 	T(ax = 0x24;);	// 97247                  mov     ax, 24h ; '$' ;~ 17C5:6C3E
cs=0x17c5;eip=0x006c41; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97248                  imul    [bp+var_22] ;~ 17C5:6C41
cs=0x17c5;eip=0x006c44; 	T(si = ax;);	// 97249                  mov     si, ax ;~ 17C5:6C44
cs=0x17c5;eip=0x006c46; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2a))));	// 97250                  mov     ax, [bp+var_2A] ;~ 17C5:6C46
cs=0x17c5;eip=0x006c49; 	T(cx = ax;);	// 97251                  mov     cx, ax ;~ 17C5:6C49
cs=0x17c5;eip=0x006c4b; 	T(SHL(ax, 1));	// 97252                  shl     ax, 1 ;~ 17C5:6C4B
cs=0x17c5;eip=0x006c4d; 	T(ADD(ax, cx));	// 97253                  add     ax, cx ;~ 17C5:6C4D
cs=0x17c5;eip=0x006c4f; 	T(SHL(ax, 1));	// 97254                  shl     ax, 1 ;~ 17C5:6C4F
cs=0x17c5;eip=0x006c51; 	T(SHL(ax, 1));	// 97255                  shl     ax, 1 ;~ 17C5:6C51
cs=0x17c5;eip=0x006c53; 	T(di = ax;);	// 97256                  mov     di, ax ;~ 17C5:6C53
cs=0x17c5;eip=0x006c55; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 97257                  mov     ax, [si-76ACh] ;~ 17C5:6C55
cs=0x17c5;eip=0x006c59; 	X(MOV(*(dw*)(raddr(ds,di-0x6304)), ax));	// 97258                  mov     [di-6304h], ax ;~ 17C5:6C59
cs=0x17c5;eip=0x006c5d; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 97259                  mov     ax, [si-76AAh] ;~ 17C5:6C5D
cs=0x17c5;eip=0x006c61; 	X(MOV(*(dw*)(raddr(ds,di-0x6302)), ax));	// 97260                  mov     [di-6302h], ax ;~ 17C5:6C61
cs=0x17c5;eip=0x006c65; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 97261                  mov     ax, [si-76A8h] ;~ 17C5:6C65
cs=0x17c5;eip=0x006c69; 	X(MOV(*(dw*)(raddr(ds,di-0x6300)), ax));	// 97262                  mov     [di-6300h], ax ;~ 17C5:6C69
loc_2ce9d:
	// 5694 
cs=0x17c5;eip=0x006c6d; 	T(ax = 2;);	// 97266                  mov     ax, 2 ;~ 17C5:6C6D
cs=0x17c5;eip=0x006c70; 	X(PUSH(ax));	// 97267                  push    ax ;~ 17C5:6C70
cs=0x17c5;eip=0x006c71; 	T(SUB(ax, ax));	// 97268                  sub     ax, ax ;~ 17C5:6C71
cs=0x17c5;eip=0x006c73; 	X(PUSH(ax));	// 97269                  push    ax ;~ 17C5:6C73
cs=0x17c5;eip=0x006c74; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_22))));	// 97270                  mov     ax, [bp+var_22] ;~ 17C5:6C74
cs=0x17c5;eip=0x006c77; 	T(AND(ax, 3));	// 97271                  and     ax, 3 ;~ 17C5:6C77
cs=0x17c5;eip=0x006c7a; 	T(ADD(ax, word_492e8));	// 97272                  add     ax, word_492E8 ;~ 17C5:6C7A
cs=0x17c5;eip=0x006c7e; 	X(PUSH(ax));	// 97273                  push    ax ;~ 17C5:6C7E
cs=0x17c5;eip=0x006c7f; 	J(CALL(sub_33194,0));	// 97274                  call    sub_33194 ;~ 17C5:6C7F
cs=0x17c5;eip=0x006c82; 	T(ADD(sp, 6));	// 97275                  add     sp, 6 ;~ 17C5:6C82
cs=0x17c5;eip=0x006c85; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 97276                  mov     [bp+var_6], ax ;~ 17C5:6C85
cs=0x17c5;eip=0x006c88; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 97277                  cmp     [bp+var_22], 0 ;~ 17C5:6C88
cs=0x17c5;eip=0x006c8c; 	J(JNZ(loc_2cec3));	// 97278                  jnz     short loc_2CEC3 ;~ 17C5:6C8C
cs=0x17c5;eip=0x006c8e; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 1));	// 97279                  mov     [bp+var_6], 1 ;~ 17C5:6C8E
loc_2cec3:
	// 5695 
cs=0x17c5;eip=0x006c93; 	T(ax = 0x24;);	// 97282                  mov     ax, 24h ; '$' ;~ 17C5:6C93
cs=0x17c5;eip=0x006c96; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97283                  imul    [bp+var_22] ;~ 17C5:6C96
cs=0x17c5;eip=0x006c99; 	T(si = ax;);	// 97284                  mov     si, ax ;~ 17C5:6C99
cs=0x17c5;eip=0x006c9b; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x769E))));	// 97285                  mov     ax, [si-769Eh] ;~ 17C5:6C9B
cs=0x17c5;eip=0x006c9f; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 97286                  mov     [bp+var_14], ax ;~ 17C5:6C9F
cs=0x17c5;eip=0x006ca2; 	X(PUSH(*(dw*)(raddr(ds,si-0x769A))));	// 97287                  push    word ptr [si-769Ah] ;~ 17C5:6CA2
cs=0x17c5;eip=0x006ca6; 	J(CALL(sub_34dc0,0));	// 97288                  call    sub_34DC0 ;~ 17C5:6CA6
cs=0x17c5;eip=0x006ca9; 	T(ADD(sp, 2));	// 97289                  add     sp, 2 ;~ 17C5:6CA9
cs=0x17c5;eip=0x006cac; 	T(CMP(ax, 0x4000));	// 97290                  cmp     ax, 4000h ;~ 17C5:6CAC
cs=0x17c5;eip=0x006caf; 	J(JGE(loc_2cef4));	// 97291                  jge     short loc_2CEF4 ;~ 17C5:6CAF
cs=0x17c5;eip=0x006cb1; 	T(ax = 0x24;);	// 97292                  mov     ax, 24h ; '$' ;~ 17C5:6CB1
cs=0x17c5;eip=0x006cb4; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97293                  imul    [bp+var_22] ;~ 17C5:6CB4
cs=0x17c5;eip=0x006cb7; 	T(bx = ax;);	// 97294                  mov     bx, ax ;~ 17C5:6CB7
cs=0x17c5;eip=0x006cb9; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x769A))));	// 97295                  mov     ax, [bx-769Ah] ;~ 17C5:6CB9
cs=0x17c5;eip=0x006cbd; 	T(SAR(ax, 1));	// 97296                  sar     ax, 1 ;~ 17C5:6CBD
cs=0x17c5;eip=0x006cbf; 	T(SAR(ax, 1));	// 97297                  sar     ax, 1 ;~ 17C5:6CBF
cs=0x17c5;eip=0x006cc1; 	X(ADD(*(dw*)(raddr(ss,bp+var_14)), ax));	// 97298                  add     [bp+var_14], ax ;~ 17C5:6CC1
loc_2cef4:
	// 5696 
cs=0x17c5;eip=0x006cc4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 97301                  mov     ax, [bp+var_C] ;~ 17C5:6CC4
cs=0x17c5;eip=0x006cc7; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_14))));	// 97302                  sub     ax, [bp+var_14] ;~ 17C5:6CC7
cs=0x17c5;eip=0x006cca; 	T(cl = 0x0D;);	// 97303                  mov     cl, 0Dh ;~ 17C5:6CCA
cs=0x17c5;eip=0x006ccc; 	T(SAR(ax, cl));	// 97304                  sar     ax, cl ;~ 17C5:6CCC
cs=0x17c5;eip=0x006cce; 	T(AND(ax, 7));	// 97305                  and     ax, 7 ;~ 17C5:6CCE
cs=0x17c5;eip=0x006cd1; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 97306                  mov     [bp+var_A], ax ;~ 17C5:6CD1
cs=0x17c5;eip=0x006cd4; 	T(ax = word_4e2f8;);	// 97307                  mov     ax, ds:word_4E2F8 ;~ 17C5:6CD4
cs=0x17c5;eip=0x006cd7; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 97308                  mov     [bp+var_14], ax ;~ 17C5:6CD7
cs=0x17c5;eip=0x006cda; 	X(PUSH(word_4e2fc));	// 97309                  push    ds:word_4E2FC ;~ 17C5:6CDA
cs=0x17c5;eip=0x006cde; 	J(CALL(sub_34dc0,0));	// 97310                  call    sub_34DC0 ;~ 17C5:6CDE
cs=0x17c5;eip=0x006ce1; 	T(ADD(sp, 2));	// 97311                  add     sp, 2 ;~ 17C5:6CE1
cs=0x17c5;eip=0x006ce4; 	T(CMP(ax, 0x4000));	// 97312                  cmp     ax, 4000h ;~ 17C5:6CE4
cs=0x17c5;eip=0x006ce7; 	J(JGE(loc_2cf21));	// 97313                  jge     short loc_2CF21 ;~ 17C5:6CE7
cs=0x17c5;eip=0x006ce9; 	T(ax = word_4e2fc;);	// 97314                  mov     ax, ds:word_4E2FC ;~ 17C5:6CE9
cs=0x17c5;eip=0x006cec; 	T(SAR(ax, 1));	// 97315                  sar     ax, 1 ;~ 17C5:6CEC
cs=0x17c5;eip=0x006cee; 	X(ADD(*(dw*)(raddr(ss,bp+var_14)), ax));	// 97316                  add     [bp+var_14], ax ;~ 17C5:6CEE
loc_2cf21:
	// 5697 
cs=0x17c5;eip=0x006cf1; 	T(ax = 0x24;);	// 97319                  mov     ax, 24h ; '$' ;~ 17C5:6CF1
cs=0x17c5;eip=0x006cf4; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97320                  imul    [bp+var_22] ;~ 17C5:6CF4
cs=0x17c5;eip=0x006cf7; 	T(bx = ax;);	// 97321                  mov     bx, ax ;~ 17C5:6CF7
cs=0x17c5;eip=0x006cf9; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x769E))));	// 97322                  mov     ax, [bx-769Eh] ;~ 17C5:6CF9
cs=0x17c5;eip=0x006cfd; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_14))));	// 97323                  sub     ax, [bp+var_14] ;~ 17C5:6CFD
cs=0x17c5;eip=0x006d00; 	T(cl = 0x0D;);	// 97324                  mov     cl, 0Dh ;~ 17C5:6D00
cs=0x17c5;eip=0x006d02; 	T(SAR(ax, cl));	// 97325                  sar     ax, cl ;~ 17C5:6D02
cs=0x17c5;eip=0x006d04; 	T(ADD(ax, 4));	// 97326                  add     ax, 4 ;~ 17C5:6D04
cs=0x17c5;eip=0x006d07; 	T(AND(ax, 7));	// 97327                  and     ax, 7 ;~ 17C5:6D07
cs=0x17c5;eip=0x006d0a; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), ax));	// 97328                  mov     [bp+var_12], ax ;~ 17C5:6D0A
cs=0x17c5;eip=0x006d0d; 	T(MOV(di, *(dw*)(raddr(ss,bp+var_6))));	// 97329                  mov     di, [bp+var_6] ;~ 17C5:6D0D
cs=0x17c5;eip=0x006d10; 	T(cl = 7;);	// 97330                  mov     cl, 7 ;~ 17C5:6D10
cs=0x17c5;eip=0x006d12; 	T(SHL(di, cl));	// 97331                  shl     di, cl ;~ 17C5:6D12
cs=0x17c5;eip=0x006d14; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 97332                  mov     ax, [bp+var_A] ;~ 17C5:6D14
cs=0x17c5;eip=0x006d17; 	T(cl = 4;);	// 97333                  mov     cl, 4 ;~ 17C5:6D17
cs=0x17c5;eip=0x006d19; 	T(SHL(ax, cl));	// 97334                  shl     ax, cl ;~ 17C5:6D19
cs=0x17c5;eip=0x006d1b; 	T(ADD(di, ax));	// 97335                  add     di, ax ;~ 17C5:6D1B
cs=0x17c5;eip=0x006d1d; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_12))));	// 97336                  mov     bx, [bp+var_12] ;~ 17C5:6D1D
cs=0x17c5;eip=0x006d20; 	T(SHL(bx, 1));	// 97337                  shl     bx, 1 ;~ 17C5:6D20
cs=0x17c5;eip=0x006d22; 	T(MOV(si, *(dw*)(raddr(ds,bx+di+0x0B94))));	// 97338                  mov     si, [bx+di+0B94h] ;~ 17C5:6D22
cs=0x17c5;eip=0x006d26; 	T(ax = si;);	// 97339                  mov     ax, si ;~ 17C5:6D26
cs=0x17c5;eip=0x006d28; 	T(AND(ax, 0x0F));	// 97340                  and     ax, 0Fh ;~ 17C5:6D28
cs=0x17c5;eip=0x006d2b; 	T(cl = 0x0C;);	// 97341                  mov     cl, 0Ch ;~ 17C5:6D2B
cs=0x17c5;eip=0x006d2d; 	T(SHL(ax, cl));	// 97342                  shl     ax, cl ;~ 17C5:6D2D
cs=0x17c5;eip=0x006d2f; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 97343                  mov     [bp+var_32], ax ;~ 17C5:6D2F
cs=0x17c5;eip=0x006d32; 	T(CMP(si, 0x100));	// 97344                  cmp     si, 100h ;~ 17C5:6D32
cs=0x17c5;eip=0x006d36; 	J(JNZ(loc_2cf81));	// 97345                  jnz     short loc_2CF81 ;~ 17C5:6D36
cs=0x17c5;eip=0x006d38; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0x6000));	// 97346                  mov     [bp+var_2], 6000h ;~ 17C5:6D38
cs=0x17c5;eip=0x006d3d; 	T(ax = word_49918;);	// 97347                  mov     ax, word_49918 ;~ 17C5:6D3D
cs=0x17c5;eip=0x006d40; 	T(cl = 8;);	// 97348                  mov     cl, 8 ;~ 17C5:6D40
cs=0x17c5;eip=0x006d42; 	T(SAR(ax, cl));	// 97349                  sar     ax, cl ;~ 17C5:6D42
cs=0x17c5;eip=0x006d44; 	T(AND(ax, 8));	// 97350                  and     ax, 8 ;~ 17C5:6D44
cs=0x17c5;eip=0x006d47; 	T(cl = 0x0C;);	// 97351                  mov     cl, 0Ch ;~ 17C5:6D47
cs=0x17c5;eip=0x006d49; 	T(SHL(ax, cl));	// 97352                  shl     ax, cl ;~ 17C5:6D49
cs=0x17c5;eip=0x006d4b; 	T(SUB(ax, 0x4000));	// 97353                  sub     ax, 4000h ;~ 17C5:6D4B
cs=0x17c5;eip=0x006d4e; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 97354                  mov     [bp+var_32], ax ;~ 17C5:6D4E
loc_2cf81:
	// 5698 
cs=0x17c5;eip=0x006d51; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_6))));	// 97357                  mov     si, [bp+var_6] ;~ 17C5:6D51
cs=0x17c5;eip=0x006d54; 	T(cl = 7;);	// 97358                  mov     cl, 7 ;~ 17C5:6D54
cs=0x17c5;eip=0x006d56; 	T(SHL(si, cl));	// 97359                  shl     si, cl ;~ 17C5:6D56
cs=0x17c5;eip=0x006d58; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 97360                  mov     ax, [bp+var_A] ;~ 17C5:6D58
cs=0x17c5;eip=0x006d5b; 	T(cl = 4;);	// 97361                  mov     cl, 4 ;~ 17C5:6D5B
cs=0x17c5;eip=0x006d5d; 	T(SHL(ax, cl));	// 97362                  shl     ax, cl ;~ 17C5:6D5D
cs=0x17c5;eip=0x006d5f; 	T(ADD(si, ax));	// 97363                  add     si, ax ;~ 17C5:6D5F
cs=0x17c5;eip=0x006d61; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_12))));	// 97364                  mov     bx, [bp+var_12] ;~ 17C5:6D61
cs=0x17c5;eip=0x006d64; 	T(SHL(bx, 1));	// 97365                  shl     bx, 1 ;~ 17C5:6D64
cs=0x17c5;eip=0x006d66; 	T(CMP(*(dw*)(raddr(ds,bx+si+0x0B94)), 0x200));	// 97366                  cmp     word ptr [bx+si+0B94h], 200h ;~ 17C5:6D66
cs=0x17c5;eip=0x006d6c; 	J(JNZ(loc_2cfb9));	// 97367                  jnz     short loc_2CFB9 ;~ 17C5:6D6C
cs=0x17c5;eip=0x006d6e; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0x0A000));	// 97368                  mov     [bp+var_2], 0A000h ;~ 17C5:6D6E
cs=0x17c5;eip=0x006d73; 	T(ax = word_49918;);	// 97369                  mov     ax, word_49918 ;~ 17C5:6D73
cs=0x17c5;eip=0x006d76; 	T(cl = 8;);	// 97370                  mov     cl, 8 ;~ 17C5:6D76
cs=0x17c5;eip=0x006d78; 	T(SAR(ax, cl));	// 97371                  sar     ax, cl ;~ 17C5:6D78
cs=0x17c5;eip=0x006d7a; 	T(AND(ax, 8));	// 97372                  and     ax, 8 ;~ 17C5:6D7A
cs=0x17c5;eip=0x006d7d; 	T(SUB(ax, 4));	// 97373                  sub     ax, 4 ;~ 17C5:6D7D
cs=0x17c5;eip=0x006d80; 	T(NEG(ax));	// 97374                  neg     ax ;~ 17C5:6D80
cs=0x17c5;eip=0x006d82; 	T(cl = 0x0C;);	// 97375                  mov     cl, 0Ch ;~ 17C5:6D82
cs=0x17c5;eip=0x006d84; 	T(SHL(ax, cl));	// 97376                  shl     ax, cl ;~ 17C5:6D84
cs=0x17c5;eip=0x006d86; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 97377                  mov     [bp+var_32], ax ;~ 17C5:6D86
loc_2cfb9:
	// 5699 
cs=0x17c5;eip=0x006d89; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0x0A000));	// 97380                  cmp     [bp+var_2], 0A000h ;~ 17C5:6D89
cs=0x17c5;eip=0x006d8e; 	J(JNZ(loc_2cfe5));	// 97381                  jnz     short loc_2CFE5 ;~ 17C5:6D8E
cs=0x17c5;eip=0x006d90; 	T(ax = 0x24;);	// 97382                  mov     ax, 24h ; '$' ;~ 17C5:6D90
cs=0x17c5;eip=0x006d93; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97383                  imul    [bp+var_22] ;~ 17C5:6D93
cs=0x17c5;eip=0x006d96; 	T(si = ax;);	// 97384                  mov     si, ax ;~ 17C5:6D96
cs=0x17c5;eip=0x006d98; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x769C))));	// 97385                  mov     ax, [si-769Ch] ;~ 17C5:6D98
cs=0x17c5;eip=0x006d9c; 	T(cl = 3;);	// 97386                  mov     cl, 3 ;~ 17C5:6D9C
cs=0x17c5;eip=0x006d9e; 	T(SAR(ax, cl));	// 97387                  sar     ax, cl ;~ 17C5:6D9E
cs=0x17c5;eip=0x006da0; 	T(SUB(ax, 0x0BB8));	// 97388                  sub     ax, 0BB8h ;~ 17C5:6DA0
cs=0x17c5;eip=0x006da3; 	T(NEG(ax));	// 97389                  neg     ax ;~ 17C5:6DA3
cs=0x17c5;eip=0x006da5; 	T(CMP(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 97390                  cmp     ax, [si-76A8h] ;~ 17C5:6DA5
cs=0x17c5;eip=0x006da9; 	J(JLE(loc_2cfe5));	// 97391                  jle     short loc_2CFE5 ;~ 17C5:6DA9
cs=0x17c5;eip=0x006dab; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x769C))));	// 97392                  mov     ax, [si-769Ch] ;~ 17C5:6DAB
cs=0x17c5;eip=0x006daf; 	T(ADD(ah, 0x10));	// 97393                  add     ah, 10h ;~ 17C5:6DAF
cs=0x17c5;eip=0x006db2; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 97394                  mov     [bp+var_2], ax ;~ 17C5:6DB2
loc_2cfe5:
	// 5700 
cs=0x17c5;eip=0x006db5; 	T(ax = 0x24;);	// 97398                  mov     ax, 24h ; '$' ;~ 17C5:6DB5
cs=0x17c5;eip=0x006db8; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97399                  imul    [bp+var_22] ;~ 17C5:6DB8
cs=0x17c5;eip=0x006dbb; 	T(bx = ax;);	// 97400                  mov     bx, ax ;~ 17C5:6DBB
cs=0x17c5;eip=0x006dbd; 	X(PUSH(*(dw*)(raddr(ds,bx-0x769A))));	// 97401                  push    word ptr [bx-769Ah] ;~ 17C5:6DBD
cs=0x17c5;eip=0x006dc1; 	J(CALL(sub_34dc0,0));	// 97402                  call    sub_34DC0 ;~ 17C5:6DC1
cs=0x17c5;eip=0x006dc4; 	T(ADD(sp, 2));	// 97403                  add     sp, 2 ;~ 17C5:6DC4
cs=0x17c5;eip=0x006dc7; 	T(CMP(ax, 0x4000));	// 97404                  cmp     ax, 4000h ;~ 17C5:6DC7
cs=0x17c5;eip=0x006dca; 	J(JLE(loc_2d03e));	// 97405                  jle     short loc_2D03E ;~ 17C5:6DCA
cs=0x17c5;eip=0x006dcc; 	T(SUB(ax, ax));	// 97406                  sub     ax, ax ;~ 17C5:6DCC
cs=0x17c5;eip=0x006dce; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 97407                  mov     [bp+var_32], ax ;~ 17C5:6DCE
cs=0x17c5;eip=0x006dd1; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 97408                  mov     [bp+var_2], ax ;~ 17C5:6DD1
cs=0x17c5;eip=0x006dd4; 	J(JMP(loc_2d03e));	// 97409                  jmp     short loc_2D03E ;~ 17C5:6DD4
loc_2d006:
	// 5701 
cs=0x17c5;eip=0x006dd6; 	T(ax = 0x3000;);	// 97414                  mov     ax, 3000h ;~ 17C5:6DD6
cs=0x17c5;eip=0x006dd9; 	X(PUSH(ax));	// 97415                  push    ax ;~ 17C5:6DD9
cs=0x17c5;eip=0x006dda; 	T(ax = 0x0D000;);	// 97416                  mov     ax, 0D000h ;~ 17C5:6DDA
cs=0x17c5;eip=0x006ddd; 	X(PUSH(ax));	// 97417                  push    ax ;~ 17C5:6DDD
cs=0x17c5;eip=0x006dde; 	T(ax = 0x24;);	// 97418                  mov     ax, 24h ; '$' ;~ 17C5:6DDE
cs=0x17c5;eip=0x006de1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97419                  imul    [bp+var_22] ;~ 17C5:6DE1
cs=0x17c5;eip=0x006de4; 	T(bx = ax;);	// 97420                  mov     bx, ax ;~ 17C5:6DE4
cs=0x17c5;eip=0x006de6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 97421                  mov     ax, [bp+var_C] ;~ 17C5:6DE6
cs=0x17c5;eip=0x006de9; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x769E))));	// 97422                  sub     ax, [bx-769Eh] ;~ 17C5:6DE9
cs=0x17c5;eip=0x006ded; 	X(PUSH(ax));	// 97423                  push    ax ;~ 17C5:6DED
cs=0x17c5;eip=0x006dee; 	J(CALL(sub_33194,0));	// 97424                  call    sub_33194 ;~ 17C5:6DEE
cs=0x17c5;eip=0x006df1; 	T(ADD(sp, 6));	// 97425                  add     sp, 6 ;~ 17C5:6DF1
cs=0x17c5;eip=0x006df4; 	T(SHL(ax, 1));	// 97426                  shl     ax, 1 ;~ 17C5:6DF4
cs=0x17c5;eip=0x006df6; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 97427                  mov     [bp+var_32], ax ;~ 17C5:6DF6
cs=0x17c5;eip=0x006df9; 	T(CMP(*(dw*)(raddr(ss,bp+var_1e)), 1));	// 97428                  cmp     [bp+var_1E], 1 ;~ 17C5:6DF9
cs=0x17c5;eip=0x006dfd; 	J(JNZ(loc_2d03e));	// 97429                  jnz     short loc_2D03E ;~ 17C5:6DFD
cs=0x17c5;eip=0x006dff; 	T(ax = word_492e8;);	// 97430                  mov     ax, word_492E8 ;~ 17C5:6DFF
cs=0x17c5;eip=0x006e02; 	T(INC(ax));	// 97431                  inc     ax ;~ 17C5:6E02
cs=0x17c5;eip=0x006e03; 	T(CMP(ax, word_50b76));	// 97432                  cmp     ax, ds:word_50B76 ;~ 17C5:6E03
cs=0x17c5;eip=0x006e07; 	J(JG(loc_2d03e));	// 97433                  jg      short loc_2D03E ;~ 17C5:6E07
cs=0x17c5;eip=0x006e09; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), 0x3000));	// 97434                  mov     [bp+var_32], 3000h ;~ 17C5:6E09
loc_2d03e:
	// 5702 
cs=0x17c5;eip=0x006e0e; 	T(CMP(*(dw*)(raddr(ss,bp+var_1e)), 1));	// 97438                  cmp     [bp+var_1E], 1 ;~ 17C5:6E0E
cs=0x17c5;eip=0x006e12; 	J(JNZ(loc_2d061));	// 97439                  jnz     short loc_2D061 ;~ 17C5:6E12
cs=0x17c5;eip=0x006e14; 	T(bx = word_5239a;);	// 97440                  mov     bx, ds:word_5239A ;~ 17C5:6E14
cs=0x17c5;eip=0x006e18; 	T(cl = 4;);	// 97441                  mov     cl, 4 ;~ 17C5:6E18
cs=0x17c5;eip=0x006e1a; 	T(SHL(bx, cl));	// 97442                  shl     bx, cl ;~ 17C5:6E1A
cs=0x17c5;eip=0x006e1c; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x400));	// 97443                  test    word ptr [bx-7E4Ch], 400h ;~ 17C5:6E1C
cs=0x17c5;eip=0x006e22; 	J(JZ(loc_2d061));	// 97444                  jz      short loc_2D061 ;~ 17C5:6E22
cs=0x17c5;eip=0x006e24; 	T(CMP(word_4f21e, 0x780));	// 97445                  cmp     ds:word_4F21E, 780h ;~ 17C5:6E24
cs=0x17c5;eip=0x006e2a; 	J(JGE(loc_2d061));	// 97446                  jge     short loc_2D061 ;~ 17C5:6E2A
cs=0x17c5;eip=0x006e2c; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), 0x3000));	// 97447                  mov     [bp+var_32], 3000h ;~ 17C5:6E2C
loc_2d061:
	// 5703 
cs=0x17c5;eip=0x006e31; 	T(bx = word_4ef1c;);	// 97451                  mov     bx, ds:word_4EF1C ;~ 17C5:6E31
cs=0x17c5;eip=0x006e35; 	T(cl = 5;);	// 97452                  mov     cl, 5 ;~ 17C5:6E35
cs=0x17c5;eip=0x006e37; 	T(SHL(bx, cl));	// 97453                  shl     bx, cl ;~ 17C5:6E37
cs=0x17c5;eip=0x006e39; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x2DE))));	// 97454                  mov     si, [bx+2DEh] ;~ 17C5:6E39
cs=0x17c5;eip=0x006e3d; 	T(ax = si;);	// 97455                  mov     ax, si ;~ 17C5:6E3D
cs=0x17c5;eip=0x006e3f; 	T(cl = 0x0C;);	// 97456                  mov     cl, 0Ch ;~ 17C5:6E3F
cs=0x17c5;eip=0x006e41; 	T(SHL(ax, cl));	// 97457                  shl     ax, cl ;~ 17C5:6E41
cs=0x17c5;eip=0x006e43; 	X(PUSH(ax));	// 97458                  push    ax ;~ 17C5:6E43
cs=0x17c5;eip=0x006e44; 	T(ax = si;);	// 97459                  mov     ax, si ;~ 17C5:6E44
cs=0x17c5;eip=0x006e46; 	T(NEG(ax));	// 97460                  neg     ax ;~ 17C5:6E46
cs=0x17c5;eip=0x006e48; 	T(SHL(ax, cl));	// 97461                  shl     ax, cl ;~ 17C5:6E48
cs=0x17c5;eip=0x006e4a; 	X(PUSH(ax));	// 97462                  push    ax ;~ 17C5:6E4A
cs=0x17c5;eip=0x006e4b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_32))));	// 97463                  push    [bp+var_32] ;~ 17C5:6E4B
cs=0x17c5;eip=0x006e4e; 	J(CALL(sub_33194,0));	// 97464                  call    sub_33194 ;~ 17C5:6E4E
cs=0x17c5;eip=0x006e51; 	T(ADD(sp, 6));	// 97465                  add     sp, 6 ;~ 17C5:6E51
cs=0x17c5;eip=0x006e54; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 97466                  mov     [bp+var_32], ax ;~ 17C5:6E54
cs=0x17c5;eip=0x006e57; 	T(bx = word_4ef1c;);	// 97467                  mov     bx, ds:word_4EF1C ;~ 17C5:6E57
cs=0x17c5;eip=0x006e5b; 	T(cl = 5;);	// 97468                  mov     cl, 5 ;~ 17C5:6E5B
cs=0x17c5;eip=0x006e5d; 	T(SHL(bx, cl));	// 97469                  shl     bx, cl ;~ 17C5:6E5D
cs=0x17c5;eip=0x006e5f; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x2DE))));	// 97470                  mov     si, [bx+2DEh] ;~ 17C5:6E5F
cs=0x17c5;eip=0x006e63; 	T(ax = si;);	// 97471                  mov     ax, si ;~ 17C5:6E63
cs=0x17c5;eip=0x006e65; 	T(cl = 8;);	// 97472                  mov     cl, 8 ;~ 17C5:6E65
cs=0x17c5;eip=0x006e67; 	T(SHL(ax, cl));	// 97473                  shl     ax, cl ;~ 17C5:6E67
cs=0x17c5;eip=0x006e69; 	X(PUSH(ax));	// 97474                  push    ax ;~ 17C5:6E69
cs=0x17c5;eip=0x006e6a; 	T(ax = si;);	// 97475                  mov     ax, si ;~ 17C5:6E6A
cs=0x17c5;eip=0x006e6c; 	T(NEG(ax));	// 97476                  neg     ax ;~ 17C5:6E6C
cs=0x17c5;eip=0x006e6e; 	T(ch = al;);	// 97477                  mov     ch, al ;~ 17C5:6E6E
cs=0x17c5;eip=0x006e70; 	T(SUB(cl, cl));	// 97478                  sub     cl, cl ;~ 17C5:6E70
cs=0x17c5;eip=0x006e72; 	X(PUSH(cx));	// 97479                  push    cx ;~ 17C5:6E72
cs=0x17c5;eip=0x006e73; 	T(ax = 0x24;);	// 97480                  mov     ax, 24h ; '$' ;~ 17C5:6E73
cs=0x17c5;eip=0x006e76; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97481                  imul    [bp+var_22] ;~ 17C5:6E76
cs=0x17c5;eip=0x006e79; 	T(bx = ax;);	// 97482                  mov     bx, ax ;~ 17C5:6E79
cs=0x17c5;eip=0x006e7b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 97483                  mov     ax, [bp+var_32] ;~ 17C5:6E7B
cs=0x17c5;eip=0x006e7e; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x769A))));	// 97484                  sub     ax, [bx-769Ah] ;~ 17C5:6E7E
cs=0x17c5;eip=0x006e82; 	X(PUSH(ax));	// 97485                  push    ax ;~ 17C5:6E82
cs=0x17c5;eip=0x006e83; 	J(CALL(sub_33194,0));	// 97486                  call    sub_33194 ;~ 17C5:6E83
cs=0x17c5;eip=0x006e86; 	T(ADD(sp, 6));	// 97487                  add     sp, 6 ;~ 17C5:6E86
cs=0x17c5;eip=0x006e89; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 97488                  mov     [bp+var_32], ax ;~ 17C5:6E89
cs=0x17c5;eip=0x006e8c; 	T(ax = 0x24;);	// 97489                  mov     ax, 24h ; '$' ;~ 17C5:6E8C
cs=0x17c5;eip=0x006e8f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97490                  imul    [bp+var_22] ;~ 17C5:6E8F
cs=0x17c5;eip=0x006e92; 	T(si = ax;);	// 97491                  mov     si, ax ;~ 17C5:6E92
cs=0x17c5;eip=0x006e94; 	T(TEST(*(dw*)(raddr(ds,si-0x7696)), 0x400));	// 97492                  test    word ptr [si-7696h], 400h ;~ 17C5:6E94
cs=0x17c5;eip=0x006e9a; 	J(JZ(loc_2d12d));	// 97493                  jz      short loc_2D12D ;~ 17C5:6E9A
cs=0x17c5;eip=0x006e9c; 	T(CMP(*(dw*)(raddr(ds,si-0x7694)), 0x96));	// 97494                  cmp     word ptr [si-7694h], 96h ;~ 17C5:6E9C
cs=0x17c5;eip=0x006ea2; 	J(JGE(loc_2d0dc));	// 97495                  jge     short loc_2D0DC ;~ 17C5:6EA2
cs=0x17c5;eip=0x006ea4; 	X(MOV(*(dw*)(raddr(ds,si-0x769C)), 0));	// 97496                  mov     word ptr [si-769Ch], 0 ;~ 17C5:6EA4
cs=0x17c5;eip=0x006eaa; 	J(JMP(loc_2d0e9));	// 97497                  jmp     short loc_2D0E9 ;~ 17C5:6EAA
loc_2d0dc:
	// 5704 
cs=0x17c5;eip=0x006eac; 	T(ax = 0x24;);	// 97501                  mov     ax, 24h ; '$' ;~ 17C5:6EAC
cs=0x17c5;eip=0x006eaf; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97502                  imul    [bp+var_22] ;~ 17C5:6EAF
cs=0x17c5;eip=0x006eb2; 	T(bx = ax;);	// 97503                  mov     bx, ax ;~ 17C5:6EB2
cs=0x17c5;eip=0x006eb4; 	X(ADD(*(raddr(ds,bx-0x769B)), 1));	// 97504                  add     byte ptr [bx-769Bh], 1 ;~ 17C5:6EB4
loc_2d0e9:
	// 5705 
cs=0x17c5;eip=0x006eb9; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), 0));	// 97507                  mov     [bp+var_32], 0 ;~ 17C5:6EB9
cs=0x17c5;eip=0x006ebe; 	T(ax = 0x24;);	// 97508                  mov     ax, 24h ; '$' ;~ 17C5:6EBE
cs=0x17c5;eip=0x006ec1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97509                  imul    [bp+var_22] ;~ 17C5:6EC1
cs=0x17c5;eip=0x006ec4; 	T(si = ax;);	// 97510                  mov     si, ax ;~ 17C5:6EC4
cs=0x17c5;eip=0x006ec6; 	T(ADD(si, 0x896C));	// 97511                  add     si, 896Ch ;~ 17C5:6EC6
cs=0x17c5;eip=0x006eca; 	T(bx = word_4ef1c;);	// 97512                  mov     bx, ds:word_4EF1C ;~ 17C5:6ECA
cs=0x17c5;eip=0x006ece; 	T(cl = 5;);	// 97513                  mov     cl, 5 ;~ 17C5:6ECE
cs=0x17c5;eip=0x006ed0; 	T(SHL(bx, cl));	// 97514                  shl     bx, cl ;~ 17C5:6ED0
cs=0x17c5;eip=0x006ed2; 	T(MOV(ax, *(dw*)(raddr(ds,si))));	// 97515                  mov     ax, [si] ;~ 17C5:6ED2
cs=0x17c5;eip=0x006ed4; 	T(CMP(*(dw*)(raddr(ds,bx+0x2DA)), ax));	// 97516                  cmp     [bx+2DAh], ax ;~ 17C5:6ED4
cs=0x17c5;eip=0x006ed8; 	J(JLE(loc_2d118));	// 97517                  jle     short loc_2D118 ;~ 17C5:6ED8
cs=0x17c5;eip=0x006eda; 	T(ax = 0x3C;);	// 97518                  mov     ax, 3Ch ; '<' ;~ 17C5:6EDA
cs=0x17c5;eip=0x006edd; 	T(CWD);	// 97519                  cwd ;~ 17C5:6EDD
cs=0x17c5;eip=0x006ede; 	T(cx = word_492f4;);	// 97520                  mov     cx, word_492F4 ;~ 17C5:6EDE
cs=0x17c5;eip=0x006ee2; 	T(IDIV2(cx));	// 97521                  idiv    cx ;~ 17C5:6EE2
cs=0x17c5;eip=0x006ee4; 	X(ADD(*(dw*)(raddr(ds,si)), ax));	// 97522                  add     [si], ax ;~ 17C5:6EE4
cs=0x17c5;eip=0x006ee6; 	J(JMP(loc_2d12d));	// 97523                  jmp     short loc_2D12D ;~ 17C5:6EE6
loc_2d118:
	// 5706 
cs=0x17c5;eip=0x006ee8; 	T(ax = 0x24;);	// 97527                  mov     ax, 24h ; '$' ;~ 17C5:6EE8
cs=0x17c5;eip=0x006eeb; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97528                  imul    [bp+var_22] ;~ 17C5:6EEB
cs=0x17c5;eip=0x006eee; 	T(si = ax;);	// 97529                  mov     si, ax ;~ 17C5:6EEE
cs=0x17c5;eip=0x006ef0; 	T(CMP(*(dw*)(raddr(ds,si-0x76A8)), 0x12C));	// 97530                  cmp     word ptr [si-76A8h], 12Ch ;~ 17C5:6EF0
cs=0x17c5;eip=0x006ef6; 	J(JLE(loc_2d12d));	// 97531                  jle     short loc_2D12D ;~ 17C5:6EF6
cs=0x17c5;eip=0x006ef8; 	X(AND(*(raddr(ds,si-0x7695)), 0x0FB));	// 97532                  and     byte ptr [si-7695h], 0FBh ;~ 17C5:6EF8
loc_2d12d:
	// 5707 
cs=0x17c5;eip=0x006efd; 	T(ax = 0x24;);	// 97536                  mov     ax, 24h ; '$' ;~ 17C5:6EFD
cs=0x17c5;eip=0x006f00; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97537                  imul    [bp+var_22] ;~ 17C5:6F00
cs=0x17c5;eip=0x006f03; 	T(bx = ax;);	// 97538                  mov     bx, ax ;~ 17C5:6F03
cs=0x17c5;eip=0x006f05; 	T(TEST(*(raddr(ds,bx-0x7696)), 0x30));	// 97539                  test    byte ptr [bx-7696h], 30h ;~ 17C5:6F05
cs=0x17c5;eip=0x006f0a; 	J(JZ(loc_2d141));	// 97540                  jz      short loc_2D141 ;~ 17C5:6F0A
cs=0x17c5;eip=0x006f0c; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), 0x400));	// 97541                  mov     [bp+var_32], 400h ;~ 17C5:6F0C
loc_2d141:
	// 5708 
cs=0x17c5;eip=0x006f11; 	T(MOV(al, *(raddr(ss,bp+var_22))));	// 97544                  mov     al, byte ptr [bp+var_22] ;~ 17C5:6F11
cs=0x17c5;eip=0x006f14; 	T(AND(al, 3));	// 97545                  and     al, 3 ;~ 17C5:6F14
cs=0x17c5;eip=0x006f16; 	T(cl = *(db*)(&word_49918););	// 97546                  mov     cl, byte ptr word_49918 ;~ 17C5:6F16
cs=0x17c5;eip=0x006f1a; 	T(AND(cl, 3));	// 97547                  and     cl, 3 ;~ 17C5:6F1A
cs=0x17c5;eip=0x006f1d; 	T(CMP(al, cl));	// 97548                  cmp     al, cl ;~ 17C5:6F1D
cs=0x17c5;eip=0x006f1f; 	J(JNZ(loc_2d18f));	// 97549                  jnz     short loc_2D18F ;~ 17C5:6F1F
cs=0x17c5;eip=0x006f21; 	T(ax = 0x24;);	// 97550                  mov     ax, 24h ; '$' ;~ 17C5:6F21
cs=0x17c5;eip=0x006f24; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97551                  imul    [bp+var_22] ;~ 17C5:6F24
cs=0x17c5;eip=0x006f27; 	T(si = ax;);	// 97552                  mov     si, ax ;~ 17C5:6F27
cs=0x17c5;eip=0x006f29; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 97553                  push    word ptr [si-76A8h] ;~ 17C5:6F29
cs=0x17c5;eip=0x006f2d; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 97554                  push    word ptr [si-76AAh] ;~ 17C5:6F2D
cs=0x17c5;eip=0x006f31; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 97555                  push    word ptr [si-76ACh] ;~ 17C5:6F31
cs=0x17c5;eip=0x006f35; 	J(CALL(sub_2f024,0));	// 97556                  call    sub_2F024 ;~ 17C5:6F35
cs=0x17c5;eip=0x006f38; 	T(ADD(sp, 6));	// 97557                  add     sp, 6 ;~ 17C5:6F38
cs=0x17c5;eip=0x006f3b; 	T(CMP(*(db*)(&word_4cdb6), 0));	// 97558                  cmp     byte ptr ds:word_4CDB6, 0 ;~ 17C5:6F3B
cs=0x17c5;eip=0x006f40; 	J(JZ(loc_2d182));	// 97559                  jz      short loc_2D182 ;~ 17C5:6F40
cs=0x17c5;eip=0x006f42; 	T(ax = 0x24;);	// 97560                  mov     ax, 24h ; '$' ;~ 17C5:6F42
cs=0x17c5;eip=0x006f45; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97561                  imul    [bp+var_22] ;~ 17C5:6F45
cs=0x17c5;eip=0x006f48; 	T(bx = ax;);	// 97562                  mov     bx, ax ;~ 17C5:6F48
cs=0x17c5;eip=0x006f4a; 	X(OR(*(raddr(ds,bx-0x7695)), 0x20));	// 97563                  or      byte ptr [bx-7695h], 20h ;~ 17C5:6F4A
cs=0x17c5;eip=0x006f4f; 	J(JMP(loc_2d18f));	// 97564                  jmp     short loc_2D18F ;~ 17C5:6F4F
loc_2d182:
	// 5709 
cs=0x17c5;eip=0x006f52; 	T(ax = 0x24;);	// 97569                  mov     ax, 24h ; '$' ;~ 17C5:6F52
cs=0x17c5;eip=0x006f55; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97570                  imul    [bp+var_22] ;~ 17C5:6F55
cs=0x17c5;eip=0x006f58; 	T(bx = ax;);	// 97571                  mov     bx, ax ;~ 17C5:6F58
cs=0x17c5;eip=0x006f5a; 	X(AND(*(raddr(ds,bx-0x7695)), 0x0DF));	// 97572                  and     byte ptr [bx-7695h], 0DFh ;~ 17C5:6F5A
loc_2d18f:
	// 5710 
cs=0x17c5;eip=0x006f5f; 	T(ax = 0x24;);	// 97576                  mov     ax, 24h ; '$' ;~ 17C5:6F5F
cs=0x17c5;eip=0x006f62; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97577                  imul    [bp+var_22] ;~ 17C5:6F62
cs=0x17c5;eip=0x006f65; 	T(bx = ax;);	// 97578                  mov     bx, ax ;~ 17C5:6F65
cs=0x17c5;eip=0x006f67; 	T(TEST(*(dw*)(raddr(ds,bx-0x7696)), 0x2000));	// 97579                  test    word ptr [bx-7696h], 2000h ;~ 17C5:6F67
cs=0x17c5;eip=0x006f6d; 	J(JZ(loc_2d1a4));	// 97580                  jz      short loc_2D1A4 ;~ 17C5:6F6D
cs=0x17c5;eip=0x006f6f; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0x3000));	// 97581                  mov     [bp+var_2], 3000h ;~ 17C5:6F6F
loc_2d1a4:
	// 5711 
cs=0x17c5;eip=0x006f74; 	T(CMP(word_4f210, 0x0A));	// 97584                  cmp     ds:word_4F210, 0Ah ;~ 17C5:6F74
cs=0x17c5;eip=0x006f79; 	J(JGE(loc_2d1b0));	// 97585                  jge     short loc_2D1B0 ;~ 17C5:6F79
cs=0x17c5;eip=0x006f7b; 	T(cl = 2;);	// 97586                  mov     cl, 2 ;~ 17C5:6F7B
cs=0x17c5;eip=0x006f7d; 	X(SAR(*(dw*)(raddr(ss,bp+var_32)), cl));	// 97587                  sar     [bp+var_32], cl ;~ 17C5:6F7D
loc_2d1b0:
	// 5712 
cs=0x17c5;eip=0x006f80; 	T(ax = 0x24;);	// 97590                  mov     ax, 24h ; '$' ;~ 17C5:6F80
cs=0x17c5;eip=0x006f83; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97591                  imul    [bp+var_22] ;~ 17C5:6F83
cs=0x17c5;eip=0x006f86; 	T(si = ax;);	// 97592                  mov     si, ax ;~ 17C5:6F86
cs=0x17c5;eip=0x006f88; 	T(cx = word_492e8;);	// 97593                  mov     cx, word_492E8 ;~ 17C5:6F88
cs=0x17c5;eip=0x006f8c; 	T(ADD(cx, 2));	// 97594                  add     cx, 2 ;~ 17C5:6F8C
cs=0x17c5;eip=0x006f8f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 97595                  mov     ax, [bp+var_32] ;~ 17C5:6F8F
cs=0x17c5;eip=0x006f92; 	T(IMUL1_2(cx));	// 97596                  imul    cx ;~ 17C5:6F92
cs=0x17c5;eip=0x006f94; 	T(CWD);	// 97597                  cwd ;~ 17C5:6F94
cs=0x17c5;eip=0x006f95; 	T(cx = word_492f4;);	// 97598                  mov     cx, word_492F4 ;~ 17C5:6F95
cs=0x17c5;eip=0x006f99; 	T(IDIV2(cx));	// 97599                  idiv    cx ;~ 17C5:6F99
cs=0x17c5;eip=0x006f9b; 	X(ADD(*(dw*)(raddr(ds,si-0x769A)), ax));	// 97600                  add     [si-769Ah], ax ;~ 17C5:6F9B
cs=0x17c5;eip=0x006f9f; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x769A))));	// 97601                  mov     ax, [si-769Ah] ;~ 17C5:6F9F
cs=0x17c5;eip=0x006fa3; 	T(cl = 3;);	// 97602                  mov     cl, 3 ;~ 17C5:6FA3
cs=0x17c5;eip=0x006fa5; 	T(SAR(ax, cl));	// 97603                  sar     ax, cl ;~ 17C5:6FA5
cs=0x17c5;eip=0x006fa7; 	T(CWD);	// 97604                  cwd ;~ 17C5:6FA7
cs=0x17c5;eip=0x006fa8; 	T(cx = word_492f4;);	// 97605                  mov     cx, word_492F4 ;~ 17C5:6FA8
cs=0x17c5;eip=0x006fac; 	T(IDIV2(cx));	// 97606                  idiv    cx ;~ 17C5:6FAC
cs=0x17c5;eip=0x006fae; 	X(ADD(*(dw*)(raddr(ds,si-0x769E)), ax));	// 97607                  add     [si-769Eh], ax ;~ 17C5:6FAE
cs=0x17c5;eip=0x006fb2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 97608                  mov     ax, [bp+var_2] ;~ 17C5:6FB2
cs=0x17c5;eip=0x006fb5; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x769C))));	// 97609                  sub     ax, [si-769Ch] ;~ 17C5:6FB5
cs=0x17c5;eip=0x006fb9; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 97610                  mov     [bp+var_2C], ax ;~ 17C5:6FB9
cs=0x17c5;eip=0x006fbc; 	T(TEST(*(raddr(ds,si-0x7696)), 0x20));	// 97611                  test    byte ptr [si-7696h], 20h ;~ 17C5:6FBC
cs=0x17c5;eip=0x006fc1; 	J(JZ(loc_2d24d));	// 97612                  jz      short loc_2D24D ;~ 17C5:6FC1
cs=0x17c5;eip=0x006fc3; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), 0x0FE00));	// 97613                  mov     [bp+var_2C], 0FE00h ;~ 17C5:6FC3
cs=0x17c5;eip=0x006fc8; 	T(TEST(*(db*)(&word_49918), 3));	// 97614                  test    byte ptr word_49918, 3 ;~ 17C5:6FC8
cs=0x17c5;eip=0x006fcd; 	J(JNZ(loc_2d24d));	// 97615                  jnz     short loc_2D24D ;~ 17C5:6FCD
cs=0x17c5;eip=0x006fcf; 	T(ax = word_49918;);	// 97616                  mov     ax, word_49918 ;~ 17C5:6FCF
cs=0x17c5;eip=0x006fd2; 	T(SAR(ax, 1));	// 97617                  sar     ax, 1 ;~ 17C5:6FD2
cs=0x17c5;eip=0x006fd4; 	T(AND(ax, 7));	// 97618                  and     ax, 7 ;~ 17C5:6FD4
cs=0x17c5;eip=0x006fd7; 	X(MOV(*(dw*)(raddr(ss,bp+var_3c)), ax));	// 97619                  mov     [bp+var_3C], ax ;~ 17C5:6FD7
cs=0x17c5;eip=0x006fda; 	T(bx = ax;);	// 97620                  mov     bx, ax ;~ 17C5:6FDA
cs=0x17c5;eip=0x006fdc; 	T(cl = 3;);	// 97621                  mov     cl, 3 ;~ 17C5:6FDC
cs=0x17c5;eip=0x006fde; 	T(SHL(bx, cl));	// 97622                  shl     bx, cl ;~ 17C5:6FDE
cs=0x17c5;eip=0x006fe0; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 97623                  mov     ax, [si-76ACh] ;~ 17C5:6FE0
cs=0x17c5;eip=0x006fe4; 	X(MOV(*(dw*)(raddr(ds,bx+0x0B52)), ax));	// 97624                  mov     [bx+0B52h], ax ;~ 17C5:6FE4
cs=0x17c5;eip=0x006fe8; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_3c))));	// 97625                  mov     si, [bp+var_3C] ;~ 17C5:6FE8
cs=0x17c5;eip=0x006feb; 	T(SHL(si, cl));	// 97626                  shl     si, cl ;~ 17C5:6FEB
cs=0x17c5;eip=0x006fed; 	T(ax = 0x24;);	// 97627                  mov     ax, 24h ; '$' ;~ 17C5:6FED
cs=0x17c5;eip=0x006ff0; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97628                  imul    [bp+var_22] ;~ 17C5:6FF0
cs=0x17c5;eip=0x006ff3; 	T(di = ax;);	// 97629                  mov     di, ax ;~ 17C5:6FF3
cs=0x17c5;eip=0x006ff5; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x76AA))));	// 97630                  mov     ax, [di-76AAh] ;~ 17C5:6FF5
cs=0x17c5;eip=0x006ff9; 	X(MOV(*(dw*)(raddr(ds,si+0x0B54)), ax));	// 97631                  mov     [si+0B54h], ax ;~ 17C5:6FF9
cs=0x17c5;eip=0x006ffd; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x76A8))));	// 97632                  mov     ax, [di-76A8h] ;~ 17C5:6FFD
cs=0x17c5;eip=0x007001; 	X(MOV(*(dw*)(raddr(ds,si+0x0B56)), ax));	// 97633                  mov     [si+0B56h], ax ;~ 17C5:7001
cs=0x17c5;eip=0x007005; 	T(ax = 0x20;);	// 97634                  mov     ax, 20h ; ' ' ;~ 17C5:7005
cs=0x17c5;eip=0x007008; 	X(PUSH(ax));	// 97635                  push    ax ;~ 17C5:7008
cs=0x17c5;eip=0x007009; 	J(CALL(sub_33430,0));	// 97636                  call    sub_33430 ;~ 17C5:7009
cs=0x17c5;eip=0x00700c; 	T(ADD(sp, 2));	// 97637                  add     sp, 2 ;~ 17C5:700C
cs=0x17c5;eip=0x00700f; 	T(cl = 0x0B;);	// 97638                  mov     cl, 0Bh ;~ 17C5:700F
cs=0x17c5;eip=0x007011; 	T(SHL(ax, cl));	// 97639                  shl     ax, cl ;~ 17C5:7011
cs=0x17c5;eip=0x007013; 	X(MOV(*(dw*)(raddr(ds,si+0x0B58)), ax));	// 97640                  mov     [si+0B58h], ax ;~ 17C5:7013
cs=0x17c5;eip=0x007017; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_3c))));	// 97641                  mov     ax, [bp+var_3C] ;~ 17C5:7017
cs=0x17c5;eip=0x00701a; 	X(word_49672 = ax;);	// 97642                  mov     word_49672, ax ;~ 17C5:701A
loc_2d24d:
	// 5713 
cs=0x17c5;eip=0x00701d; 	T(ax = 0x24;);	// 97646                  mov     ax, 24h ; '$' ;~ 17C5:701D
cs=0x17c5;eip=0x007020; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97647                  imul    [bp+var_22] ;~ 17C5:7020
cs=0x17c5;eip=0x007023; 	T(si = ax;);	// 97648                  mov     si, ax ;~ 17C5:7023
cs=0x17c5;eip=0x007025; 	T(CMP(*(dw*)(raddr(ds,si-0x769C)), 0));	// 97649                  cmp     word ptr [si-769Ch], 0 ;~ 17C5:7025
cs=0x17c5;eip=0x00702a; 	J(JGE(loc_2d28a));	// 97650                  jge     short loc_2D28A ;~ 17C5:702A
cs=0x17c5;eip=0x00702c; 	T(ax = 0x7D0;);	// 97651                  mov     ax, 7D0h ;~ 17C5:702C
cs=0x17c5;eip=0x00702f; 	X(PUSH(ax));	// 97652                  push    ax ;~ 17C5:702F
cs=0x17c5;eip=0x007030; 	X(PUSH(*(dw*)(raddr(ds,si-0x769C))));	// 97653                  push    word ptr [si-769Ch] ;~ 17C5:7030
cs=0x17c5;eip=0x007034; 	J(CALL(sub_333a8,0));	// 97654                  call    sub_333A8 ;~ 17C5:7034
cs=0x17c5;eip=0x007037; 	T(ADD(sp, 4));	// 97655                  add     sp, 4 ;~ 17C5:7037
cs=0x17c5;eip=0x00703a; 	T(SUB(ax, 0x0C8));	// 97656                  sub     ax, 0C8h ;~ 17C5:703A
cs=0x17c5;eip=0x00703d; 	T(NEG(ax));	// 97657                  neg     ax ;~ 17C5:703D
cs=0x17c5;eip=0x00703f; 	T(CMP(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 97658                  cmp     ax, [si-76A8h] ;~ 17C5:703F
cs=0x17c5;eip=0x007043; 	J(JLE(loc_2d28a));	// 97659                  jle     short loc_2D28A ;~ 17C5:7043
cs=0x17c5;eip=0x007045; 	T(ax = 0x24;);	// 97660                  mov     ax, 24h ; '$' ;~ 17C5:7045
cs=0x17c5;eip=0x007048; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97661                  imul    [bp+var_22] ;~ 17C5:7048
cs=0x17c5;eip=0x00704b; 	T(bx = ax;);	// 97662                  mov     bx, ax ;~ 17C5:704B
cs=0x17c5;eip=0x00704d; 	T(TEST(*(dw*)(raddr(ds,bx-0x7696)), 0x220));	// 97663                  test    word ptr [bx-7696h], 220h ;~ 17C5:704D
cs=0x17c5;eip=0x007053; 	J(JNZ(loc_2d28a));	// 97664                  jnz     short loc_2D28A ;~ 17C5:7053
cs=0x17c5;eip=0x007055; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), 0x400));	// 97665                  mov     [bp+var_2C], 400h ;~ 17C5:7055
loc_2d28a:
	// 5714 
cs=0x17c5;eip=0x00705a; 	T(ax = 0x400;);	// 97669                  mov     ax, 400h ;~ 17C5:705A
cs=0x17c5;eip=0x00705d; 	X(PUSH(ax));	// 97670                  push    ax ;~ 17C5:705D
cs=0x17c5;eip=0x00705e; 	T(ax = 0x0FC00;);	// 97671                  mov     ax, 0FC00h ;~ 17C5:705E
cs=0x17c5;eip=0x007061; 	X(PUSH(ax));	// 97672                  push    ax ;~ 17C5:7061
cs=0x17c5;eip=0x007062; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2c))));	// 97673                  push    [bp+var_2C] ;~ 17C5:7062
cs=0x17c5;eip=0x007065; 	J(CALL(sub_33194,0));	// 97674                  call    sub_33194 ;~ 17C5:7065
cs=0x17c5;eip=0x007068; 	T(ADD(sp, 6));	// 97675                  add     sp, 6 ;~ 17C5:7068
cs=0x17c5;eip=0x00706b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 97676                  mov     [bp+var_2C], ax ;~ 17C5:706B
cs=0x17c5;eip=0x00706e; 	T(ax = 0x24;);	// 97677                  mov     ax, 24h ; '$' ;~ 17C5:706E
cs=0x17c5;eip=0x007071; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97678                  imul    [bp+var_22] ;~ 17C5:7071
cs=0x17c5;eip=0x007074; 	T(si = ax;);	// 97679                  mov     si, ax ;~ 17C5:7074
cs=0x17c5;eip=0x007076; 	T(ADD(si, 0x8964));	// 97680                  add     si, 8964h ;~ 17C5:7076
cs=0x17c5;eip=0x00707a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2c))));	// 97681                  mov     ax, [bp+var_2C] ;~ 17C5:707A
cs=0x17c5;eip=0x00707d; 	T(SHL(ax, 1));	// 97682                  shl     ax, 1 ;~ 17C5:707D
cs=0x17c5;eip=0x00707f; 	T(SHL(ax, 1));	// 97683                  shl     ax, 1 ;~ 17C5:707F
cs=0x17c5;eip=0x007081; 	T(CWD);	// 97684                  cwd ;~ 17C5:7081
cs=0x17c5;eip=0x007082; 	T(cx = word_492f4;);	// 97685                  mov     cx, word_492F4 ;~ 17C5:7082
cs=0x17c5;eip=0x007086; 	T(IDIV2(cx));	// 97686                  idiv    cx ;~ 17C5:7086
cs=0x17c5;eip=0x007088; 	X(ADD(*(dw*)(raddr(ds,si)), ax));	// 97687                  add     [si], ax ;~ 17C5:7088
cs=0x17c5;eip=0x00708a; 	X(PUSH(*(dw*)(raddr(ds,si))));	// 97688                  push    word ptr [si] ;~ 17C5:708A
cs=0x17c5;eip=0x00708c; 	J(CALL(sub_34dc0,0));	// 97689                  call    sub_34DC0 ;~ 17C5:708C
cs=0x17c5;eip=0x00708f; 	T(ADD(sp, 2));	// 97690                  add     sp, 2 ;~ 17C5:708F
cs=0x17c5;eip=0x007092; 	T(CMP(ax, 0x4000));	// 97691                  cmp     ax, 4000h ;~ 17C5:7092
cs=0x17c5;eip=0x007095; 	J(JLE(loc_2d2e4));	// 97692                  jle     short loc_2D2E4 ;~ 17C5:7095
cs=0x17c5;eip=0x007097; 	T(ax = 0x24;);	// 97693                  mov     ax, 24h ; '$' ;~ 17C5:7097
cs=0x17c5;eip=0x00709a; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97694                  imul    [bp+var_22] ;~ 17C5:709A
cs=0x17c5;eip=0x00709d; 	T(si = ax;);	// 97695                  mov     si, ax ;~ 17C5:709D
cs=0x17c5;eip=0x00709f; 	X(ADD(*(raddr(ds,si-0x769D)), 0x80));	// 97696                  add     byte ptr [si-769Dh], 80h ;~ 17C5:709F
cs=0x17c5;eip=0x0070a4; 	X(ADD(*(raddr(ds,si-0x7699)), 0x80));	// 97697                  add     byte ptr [si-7699h], 80h ;~ 17C5:70A4
cs=0x17c5;eip=0x0070a9; 	T(ax = 0x8000;);	// 97698                  mov     ax, 8000h ;~ 17C5:70A9
cs=0x17c5;eip=0x0070ac; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x769C))));	// 97699                  sub     ax, [si-769Ch] ;~ 17C5:70AC
cs=0x17c5;eip=0x0070b0; 	X(MOV(*(dw*)(raddr(ds,si-0x769C)), ax));	// 97700                  mov     [si-769Ch], ax ;~ 17C5:70B0
loc_2d2e4:
	// 5715 
cs=0x17c5;eip=0x0070b4; 	T(ax = 0x24;);	// 97703                  mov     ax, 24h ; '$' ;~ 17C5:70B4
cs=0x17c5;eip=0x0070b7; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97704                  imul    [bp+var_22] ;~ 17C5:70B7
cs=0x17c5;eip=0x0070ba; 	T(si = ax;);	// 97705                  mov     si, ax ;~ 17C5:70BA
cs=0x17c5;eip=0x0070bc; 	X(AND(*(raddr(ds,si-0x7696)), 0x0EF));	// 97706                  and     byte ptr [si-7696h], 0EFh ;~ 17C5:70BC
cs=0x17c5;eip=0x0070c1; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7694))));	// 97707                  mov     ax, [si-7694h] ;~ 17C5:70C1
cs=0x17c5;eip=0x0070c5; 	T(CWD);	// 97708                  cwd ;~ 17C5:70C5
cs=0x17c5;eip=0x0070c6; 	X(PUSH(dx));	// 97709                  push    dx ;~ 17C5:70C6
cs=0x17c5;eip=0x0070c7; 	X(PUSH(ax));	// 97710                  push    ax ;~ 17C5:70C7
cs=0x17c5;eip=0x0070c8; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x769C))));	// 97711                  mov     ax, [si-769Ch] ;~ 17C5:70C8
cs=0x17c5;eip=0x0070cc; 	T(CWD);	// 97712                  cwd ;~ 17C5:70CC
cs=0x17c5;eip=0x0070cd; 	T(SUB(ax, dx));	// 97713                  sub     ax, dx ;~ 17C5:70CD
cs=0x17c5;eip=0x0070cf; 	T(SAR(ax, 1));	// 97714                  sar     ax, 1 ;~ 17C5:70CF
cs=0x17c5;eip=0x0070d1; 	T(SUB(ax, 0x8000));	// 97715                  sub     ax, 8000h ;~ 17C5:70D1
cs=0x17c5;eip=0x0070d4; 	T(NEG(ax));	// 97716                  neg     ax ;~ 17C5:70D4
cs=0x17c5;eip=0x0070d6; 	T(SUB(cx, cx));	// 97717                  sub     cx, cx ;~ 17C5:70D6
cs=0x17c5;eip=0x0070d8; 	X(PUSH(cx));	// 97718                  push    cx ;~ 17C5:70D8
cs=0x17c5;eip=0x0070d9; 	X(PUSH(ax));	// 97719                  push    ax ;~ 17C5:70D9
cs=0x17c5;eip=0x0070da; 	J(CALL(sub_34ee0,0));	// 97720                  call    sub_34EE0 ;~ 17C5:70DA
cs=0x17c5;eip=0x0070dd; 	T(cl = 0x0E;);	// 97721                  mov     cl, 0Eh ;~ 17C5:70DD
loc_2d30f:
	// 5716 
cs=0x17c5;eip=0x0070df; 	T(SHR(dx, 1));	// 97724                  shr     dx, 1 ;~ 17C5:70DF
cs=0x17c5;eip=0x0070e1; 	T(RCR(ax, 1));	// 97725                  rcr     ax, 1 ;~ 17C5:70E1
cs=0x17c5;eip=0x0070e3; 	T(DEC(cl));	// 97726                  dec     cl ;~ 17C5:70E3
cs=0x17c5;eip=0x0070e5; 	J(JNZ(loc_2d30f));	// 97727                  jnz     short loc_2D30F ;~ 17C5:70E5
cs=0x17c5;eip=0x0070e7; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), ax));	// 97728                  mov     [bp+var_20], ax ;~ 17C5:70E7
cs=0x17c5;eip=0x0070ea; 	X(PUSH(ax));	// 97729                  push    ax ;~ 17C5:70EA
cs=0x17c5;eip=0x0070eb; 	X(PUSH(*(dw*)(raddr(ds,si-0x769A))));	// 97730                  push    word ptr [si-769Ah] ;~ 17C5:70EB
cs=0x17c5;eip=0x0070ef; 	J(CALL(sub_333a8,0));	// 97731                  call    sub_333A8 ;~ 17C5:70EF
cs=0x17c5;eip=0x0070f2; 	T(ADD(sp, 4));	// 97732                  add     sp, 4 ;~ 17C5:70F2
cs=0x17c5;eip=0x0070f5; 	X(PUSH(ax));	// 97733                  push    ax ;~ 17C5:70F5
cs=0x17c5;eip=0x0070f6; 	J(CALL(sub_34dc0,0));	// 97734                  call    sub_34DC0 ;~ 17C5:70F6
cs=0x17c5;eip=0x0070f9; 	T(ADD(sp, 2));	// 97735                  add     sp, 2 ;~ 17C5:70F9
cs=0x17c5;eip=0x0070fc; 	T(SAR(ax, 1));	// 97736                  sar     ax, 1 ;~ 17C5:70FC
cs=0x17c5;eip=0x0070fe; 	X(SUB(*(dw*)(raddr(ss,bp+var_20)), ax));	// 97737                  sub     [bp+var_20], ax ;~ 17C5:70FE
cs=0x17c5;eip=0x007101; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 97738                  mov     ax, [bp+var_20] ;~ 17C5:7101
cs=0x17c5;eip=0x007104; 	T(SHL(ax, 1));	// 97739                  shl     ax, 1 ;~ 17C5:7104
cs=0x17c5;eip=0x007106; 	T(SHL(ax, 1));	// 97740                  shl     ax, 1 ;~ 17C5:7106
cs=0x17c5;eip=0x007108; 	T(CWD);	// 97741                  cwd ;~ 17C5:7108
cs=0x17c5;eip=0x007109; 	T(cx = word_492f4;);	// 97742                  mov     cx, word_492F4 ;~ 17C5:7109
cs=0x17c5;eip=0x00710d; 	T(IDIV2(cx));	// 97743                  idiv    cx ;~ 17C5:710D
cs=0x17c5;eip=0x00710f; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), ax));	// 97744                  mov     [bp+var_20], ax ;~ 17C5:710F
cs=0x17c5;eip=0x007112; 	T(cl = 2;);	// 97745                  mov     cl, 2 ;~ 17C5:7112
cs=0x17c5;eip=0x007114; 	X(SAR(*(dw*)(raddr(ss,bp+var_20)), cl));	// 97746                  sar     [bp+var_20], cl ;~ 17C5:7114
cs=0x17c5;eip=0x007117; 	X(PUSH(*(dw*)(raddr(ss,bp+var_20))));	// 97747                  push    [bp+var_20] ;~ 17C5:7117
cs=0x17c5;eip=0x00711a; 	T(ax = 0x24;);	// 97748                  mov     ax, 24h ; '$' ;~ 17C5:711A
cs=0x17c5;eip=0x00711d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97749                  imul    [bp+var_22] ;~ 17C5:711D
cs=0x17c5;eip=0x007120; 	T(bx = ax;);	// 97750                  mov     bx, ax ;~ 17C5:7120
cs=0x17c5;eip=0x007122; 	X(PUSH(*(dw*)(raddr(ds,bx-0x769C))));	// 97751                  push    word ptr [bx-769Ch] ;~ 17C5:7122
cs=0x17c5;eip=0x007126; 	J(CALL(sub_333c0,0));	// 97752                  call    sub_333C0 ;~ 17C5:7126
cs=0x17c5;eip=0x007129; 	T(ADD(sp, 4));	// 97753                  add     sp, 4 ;~ 17C5:7129
cs=0x17c5;eip=0x00712c; 	X(MOV(*(dw*)(raddr(ss,bp+var_38)), ax));	// 97754                  mov     [bp+var_38], ax ;~ 17C5:712C
cs=0x17c5;eip=0x00712f; 	T(ax = 0x24;);	// 97755                  mov     ax, 24h ; '$' ;~ 17C5:712F
cs=0x17c5;eip=0x007132; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97756                  imul    [bp+var_22] ;~ 17C5:7132
cs=0x17c5;eip=0x007135; 	T(si = ax;);	// 97757                  mov     si, ax ;~ 17C5:7135
cs=0x17c5;eip=0x007137; 	X(PUSH(*(dw*)(raddr(ss,bp+var_38))));	// 97758                  push    [bp+var_38] ;~ 17C5:7137
cs=0x17c5;eip=0x00713a; 	X(PUSH(*(dw*)(raddr(ds,si-0x769E))));	// 97759                  push    word ptr [si-769Eh] ;~ 17C5:713A
cs=0x17c5;eip=0x00713e; 	J(CALL(sub_333a8,0));	// 97760                  call    sub_333A8 ;~ 17C5:713E
cs=0x17c5;eip=0x007141; 	T(ADD(sp, 4));	// 97761                  add     sp, 4 ;~ 17C5:7141
cs=0x17c5;eip=0x007144; 	T(CWD);	// 97762                  cwd ;~ 17C5:7144
cs=0x17c5;eip=0x007145; 	X(ADD(*(dw*)(raddr(ds,si-0x76A6)), ax));	// 97763                  add     [si-76A6h], ax ;~ 17C5:7145
cs=0x17c5;eip=0x007149; 	X(ADC(*(dw*)(raddr(ds,si-0x76A4)), dx));	// 97764                  adc     [si-76A4h], dx ;~ 17C5:7149
cs=0x17c5;eip=0x00714d; 	T(ax = 0x24;);	// 97765                  mov     ax, 24h ; '$' ;~ 17C5:714D
cs=0x17c5;eip=0x007150; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97766                  imul    [bp+var_22] ;~ 17C5:7150
cs=0x17c5;eip=0x007153; 	T(si = ax;);	// 97767                  mov     si, ax ;~ 17C5:7153
cs=0x17c5;eip=0x007155; 	X(PUSH(*(dw*)(raddr(ss,bp+var_38))));	// 97768                  push    [bp+var_38] ;~ 17C5:7155
cs=0x17c5;eip=0x007158; 	X(PUSH(*(dw*)(raddr(ds,si-0x769E))));	// 97769                  push    word ptr [si-769Eh] ;~ 17C5:7158
cs=0x17c5;eip=0x00715c; 	J(CALL(sub_333c0,0));	// 97770                  call    sub_333C0 ;~ 17C5:715C
cs=0x17c5;eip=0x00715f; 	T(ADD(sp, 4));	// 97771                  add     sp, 4 ;~ 17C5:715F
cs=0x17c5;eip=0x007162; 	T(CWD);	// 97772                  cwd ;~ 17C5:7162
cs=0x17c5;eip=0x007163; 	X(SUB(*(dw*)(raddr(ds,si-0x76A2)), ax));	// 97773                  sub     [si-76A2h], ax ;~ 17C5:7163
cs=0x17c5;eip=0x007167; 	X(SBB(*(dw*)(raddr(ds,si-0x76A0)), dx));	// 97774                  sbb     [si-76A0h], dx ;~ 17C5:7167
cs=0x17c5;eip=0x00716b; 	T(ax = 0x24;);	// 97775                  mov     ax, 24h ; '$' ;~ 17C5:716B
cs=0x17c5;eip=0x00716e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97776                  imul    [bp+var_22] ;~ 17C5:716E
cs=0x17c5;eip=0x007171; 	T(si = ax;);	// 97777                  mov     si, ax ;~ 17C5:7171
cs=0x17c5;eip=0x007173; 	X(PUSH(*(dw*)(raddr(ss,bp+var_20))));	// 97778                  push    [bp+var_20] ;~ 17C5:7173
cs=0x17c5;eip=0x007176; 	X(PUSH(*(dw*)(raddr(ds,si-0x769C))));	// 97779                  push    word ptr [si-769Ch] ;~ 17C5:7176
cs=0x17c5;eip=0x00717a; 	J(CALL(sub_333a8,0));	// 97780                  call    sub_333A8 ;~ 17C5:717A
cs=0x17c5;eip=0x00717d; 	T(ADD(sp, 4));	// 97781                  add     sp, 4 ;~ 17C5:717D
cs=0x17c5;eip=0x007180; 	X(ADD(*(dw*)(raddr(ds,si-0x76A8)), ax));	// 97782                  add     [si-76A8h], ax ;~ 17C5:7180
cs=0x17c5;eip=0x007184; 	T(ax = 0x24;);	// 97783                  mov     ax, 24h ; '$' ;~ 17C5:7184
cs=0x17c5;eip=0x007187; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97784                  imul    [bp+var_22] ;~ 17C5:7187
cs=0x17c5;eip=0x00718a; 	T(si = ax;);	// 97785                  mov     si, ax ;~ 17C5:718A
cs=0x17c5;eip=0x00718c; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A6))));	// 97786                  mov     ax, [si-76A6h] ;~ 17C5:718C
cs=0x17c5;eip=0x007190; 	T(MOV(dx, *(dw*)(raddr(ds,si-0x76A4))));	// 97787                  mov     dx, [si-76A4h] ;~ 17C5:7190
cs=0x17c5;eip=0x007194; 	T(cl = 5;);	// 97788                  mov     cl, 5 ;~ 17C5:7194
loc_2d3c6:
	// 5717 
cs=0x17c5;eip=0x007196; 	T(SAR(dx, 1));	// 97791                  sar     dx, 1 ;~ 17C5:7196
cs=0x17c5;eip=0x007198; 	T(RCR(ax, 1));	// 97792                  rcr     ax, 1 ;~ 17C5:7198
cs=0x17c5;eip=0x00719a; 	T(DEC(cl));	// 97793                  dec     cl ;~ 17C5:719A
cs=0x17c5;eip=0x00719c; 	J(JNZ(loc_2d3c6));	// 97794                  jnz     short loc_2D3C6 ;~ 17C5:719C
cs=0x17c5;eip=0x00719e; 	X(MOV(*(dw*)(raddr(ds,si-0x76AC)), ax));	// 97795                  mov     [si-76ACh], ax ;~ 17C5:719E
cs=0x17c5;eip=0x0071a2; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A2))));	// 97796                  mov     ax, [si-76A2h] ;~ 17C5:71A2
cs=0x17c5;eip=0x0071a6; 	T(MOV(dx, *(dw*)(raddr(ds,si-0x76A0))));	// 97797                  mov     dx, [si-76A0h] ;~ 17C5:71A6
cs=0x17c5;eip=0x0071aa; 	T(cl = 5;);	// 97798                  mov     cl, 5 ;~ 17C5:71AA
loc_2d3dc:
	// 5718 
cs=0x17c5;eip=0x0071ac; 	T(SAR(dx, 1));	// 97801                  sar     dx, 1 ;~ 17C5:71AC
cs=0x17c5;eip=0x0071ae; 	T(RCR(ax, 1));	// 97802                  rcr     ax, 1 ;~ 17C5:71AE
cs=0x17c5;eip=0x0071b0; 	T(DEC(cl));	// 97803                  dec     cl ;~ 17C5:71B0
cs=0x17c5;eip=0x0071b2; 	J(JNZ(loc_2d3dc));	// 97804                  jnz     short loc_2D3DC ;~ 17C5:71B2
cs=0x17c5;eip=0x0071b4; 	X(MOV(*(dw*)(raddr(ds,si-0x76AA)), ax));	// 97805                  mov     [si-76AAh], ax ;~ 17C5:71B4
cs=0x17c5;eip=0x0071b8; 	T(CMP(*(dw*)(raddr(ds,si-0x76A8)), 0x7530));	// 97806                  cmp     word ptr [si-76A8h], 7530h ;~ 17C5:71B8
cs=0x17c5;eip=0x0071be; 	J(JLE(loc_2d3fe));	// 97807                  jle     short loc_2D3FE ;~ 17C5:71BE
cs=0x17c5;eip=0x0071c0; 	T(ax = 0x24;);	// 97808                  mov     ax, 24h ; '$' ;~ 17C5:71C0
cs=0x17c5;eip=0x0071c3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97809                  imul    [bp+var_22] ;~ 17C5:71C3
cs=0x17c5;eip=0x0071c6; 	T(bx = ax;);	// 97810                  mov     bx, ax ;~ 17C5:71C6
cs=0x17c5;eip=0x0071c8; 	X(MOV(*(dw*)(raddr(ds,bx-0x769C)), 0));	// 97811                  mov     word ptr [bx-769Ch], 0 ;~ 17C5:71C8
loc_2d3fe:
	// 5719 
cs=0x17c5;eip=0x0071ce; 	T(ax = 0x24;);	// 97814                  mov     ax, 24h ; '$' ;~ 17C5:71CE
cs=0x17c5;eip=0x0071d1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97815                  imul    [bp+var_22] ;~ 17C5:71D1
cs=0x17c5;eip=0x0071d4; 	T(si = ax;);	// 97816                  mov     si, ax ;~ 17C5:71D4
cs=0x17c5;eip=0x0071d6; 	T(CMP(*(dw*)(raddr(ds,si-0x76A8)), 0));	// 97817                  cmp     word ptr [si-76A8h], 0 ;~ 17C5:71D6
cs=0x17c5;eip=0x0071db; 	J(JGE(loc_2d447));	// 97818                  jge     short loc_2D447 ;~ 17C5:71DB
cs=0x17c5;eip=0x0071dd; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 97819                  cmp     [bp+var_22], 0 ;~ 17C5:71DD
cs=0x17c5;eip=0x0071e1; 	J(JZ(loc_2d418));	// 97820                  jz      short loc_2D418 ;~ 17C5:71E1
cs=0x17c5;eip=0x0071e3; 	T(ax = 0x1C1;);	// 97821                  mov     ax, 1C1h ;~ 17C5:71E3
cs=0x17c5;eip=0x0071e6; 	J(JMP(loc_2d41a));	// 97822                  jmp     short loc_2D41A ;~ 17C5:71E6
loc_2d418:
	// 5720 
cs=0x17c5;eip=0x0071e8; 	T(SUB(ax, ax));	// 97826                  sub     ax, ax ;~ 17C5:71E8
loc_2d41a:
	// 5721 
cs=0x17c5;eip=0x0071ea; 	X(AND(*(dw*)(raddr(ds,si-0x7696)), ax));	// 97829                  and     [si-7696h], ax ;~ 17C5:71EA
cs=0x17c5;eip=0x0071ee; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 97830                  mov     ax, [si-76ACh] ;~ 17C5:71EE
cs=0x17c5;eip=0x0071f2; 	X(word_520ec = ax;);	// 97831                  mov     ds:word_520EC, ax ;~ 17C5:71F2
cs=0x17c5;eip=0x0071f5; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 97832                  mov     ax, [si-76AAh] ;~ 17C5:71F5
cs=0x17c5;eip=0x0071f9; 	X(word_520f8 = ax;);	// 97833                  mov     ds:word_520F8, ax ;~ 17C5:71F9
cs=0x17c5;eip=0x0071fc; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 97834                  mov     ax, [si-76A8h] ;~ 17C5:71FC
cs=0x17c5;eip=0x007200; 	X(word_520fe = ax;);	// 97835                  mov     ds:word_520FE, ax ;~ 17C5:7200
cs=0x17c5;eip=0x007203; 	X(word_4f836 = 0x0FFF8;);	// 97836                  mov     ds:word_4F836, 0FFF8h ;~ 17C5:7203
cs=0x17c5;eip=0x007209; 	T(ax = word_49922;);	// 97837                  mov     ax, word_49922 ;~ 17C5:7209
cs=0x17c5;eip=0x00720c; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), ax));	// 97838                  cmp     [bp+var_22], ax ;~ 17C5:720C
cs=0x17c5;eip=0x00720f; 	J(JNZ(loc_2d447));	// 97839                  jnz     short loc_2D447 ;~ 17C5:720F
cs=0x17c5;eip=0x007211; 	X(word_49922 = 0x0FFFF;);	// 97840                  mov     word_49922, 0FFFFh ;~ 17C5:7211
loc_2d447:
	// 5722 
cs=0x17c5;eip=0x007217; 	T(CMP(*(dw*)(raddr(ss,bp+var_1a)), 0x10));	// 97844                  cmp     [bp+var_1A], 10h ;~ 17C5:7217
cs=0x17c5;eip=0x00721b; 	J(JNC(loc_2d479));	// 97845                  jnb     short loc_2D479 ;~ 17C5:721B
cs=0x17c5;eip=0x00721d; 	T(CMP(*(dw*)(raddr(ss,bp+var_1e)), 2));	// 97846                  cmp     [bp+var_1E], 2 ;~ 17C5:721D
cs=0x17c5;eip=0x007221; 	J(JNZ(loc_2d479));	// 97847                  jnz     short loc_2D479 ;~ 17C5:7221
cs=0x17c5;eip=0x007223; 	T(ax = 0x24;);	// 97848                  mov     ax, 24h ; '$' ;~ 17C5:7223
cs=0x17c5;eip=0x007226; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97849                  imul    [bp+var_22] ;~ 17C5:7226
cs=0x17c5;eip=0x007229; 	T(si = ax;);	// 97850                  mov     si, ax ;~ 17C5:7229
cs=0x17c5;eip=0x00722b; 	T(ADD(si, 0x896A));	// 97851                  add     si, 896Ah ;~ 17C5:722B
cs=0x17c5;eip=0x00722f; 	T(TEST(*(dw*)(raddr(ds,si)), 0x200));	// 97852                  test    word ptr [si], 200h ;~ 17C5:722F
cs=0x17c5;eip=0x007233; 	J(JZ(loc_2d46c));	// 97853                  jz      short loc_2D46C ;~ 17C5:7233
cs=0x17c5;eip=0x007235; 	X(OR(*(raddr(ds,si+1)), 0x10));	// 97854                  or      byte ptr [si+1], 10h ;~ 17C5:7235
cs=0x17c5;eip=0x007239; 	J(JMP(loc_2d479));	// 97855                  jmp     short loc_2D479 ;~ 17C5:7239
loc_2d46c:
	// 5723 
cs=0x17c5;eip=0x00723c; 	T(ax = 0x24;);	// 97860                  mov     ax, 24h ; '$' ;~ 17C5:723C
cs=0x17c5;eip=0x00723f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97861                  imul    [bp+var_22] ;~ 17C5:723F
cs=0x17c5;eip=0x007242; 	T(bx = ax;);	// 97862                  mov     bx, ax ;~ 17C5:7242
cs=0x17c5;eip=0x007244; 	X(OR(*(raddr(ds,bx-0x7695)), 2));	// 97863                  or      byte ptr [bx-7695h], 2 ;~ 17C5:7244
loc_2d479:
	// 5724 
cs=0x17c5;eip=0x007249; 	T(ax = 0x24;);	// 97867                  mov     ax, 24h ; '$' ;~ 17C5:7249
cs=0x17c5;eip=0x00724c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97868                  imul    [bp+var_22] ;~ 17C5:724C
cs=0x17c5;eip=0x00724f; 	T(si = ax;);	// 97869                  mov     si, ax ;~ 17C5:724F
cs=0x17c5;eip=0x007251; 	T(TEST(*(dw*)(raddr(ds,si-0x7696)), 0x1000));	// 97870                  test    word ptr [si-7696h], 1000h ;~ 17C5:7251
cs=0x17c5;eip=0x007257; 	J(JNZ(loc_2d48c));	// 97871                  jnz     short loc_2D48C ;~ 17C5:7257
cs=0x17c5;eip=0x007259; 	J(JMP(loc_2d51f));	// 97872                  jmp     loc_2D51F ;~ 17C5:7259
loc_2d48c:
	// 5725 
cs=0x17c5;eip=0x00725c; 	T(SUB(ax, ax));	// 97876                  sub     ax, ax ;~ 17C5:725C
cs=0x17c5;eip=0x00725e; 	X(MOV(*(dw*)(raddr(ds,si-0x769C)), ax));	// 97877                  mov     [si-769Ch], ax ;~ 17C5:725E
cs=0x17c5;eip=0x007262; 	X(MOV(*(dw*)(raddr(ds,si-0x769A)), ax));	// 97878                  mov     [si-769Ah], ax ;~ 17C5:7262
cs=0x17c5;eip=0x007266; 	T(CMP(word_511d8, 1));	// 97879                  cmp     ds:word_511D8, 1 ;~ 17C5:7266
cs=0x17c5;eip=0x00726b; 	J(JZ(loc_2d4a0));	// 97880                  jz      short loc_2D4A0 ;~ 17C5:726B
cs=0x17c5;eip=0x00726d; 	T(ax = 0x8000;);	// 97881                  mov     ax, 8000h ;~ 17C5:726D
loc_2d4a0:
	// 5726 
cs=0x17c5;eip=0x007270; 	X(MOV(*(dw*)(raddr(ds,si-0x769E)), ax));	// 97884                  mov     [si-769Eh], ax ;~ 17C5:7270
cs=0x17c5;eip=0x007274; 	T(bx = word_5239a;);	// 97885                  mov     bx, ds:word_5239A ;~ 17C5:7274
cs=0x17c5;eip=0x007278; 	T(cl = 4;);	// 97886                  mov     cl, 4 ;~ 17C5:7278
cs=0x17c5;eip=0x00727a; 	T(SHL(bx, cl));	// 97887                  shl     bx, cl ;~ 17C5:727A
cs=0x17c5;eip=0x00727c; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 97888                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:727C
cs=0x17c5;eip=0x007282; 	J(JZ(loc_2d4ba));	// 97889                  jz      short loc_2D4BA ;~ 17C5:7282
cs=0x17c5;eip=0x007284; 	T(ax = 0x8C;);	// 97890                  mov     ax, 8Ch ;~ 17C5:7284
cs=0x17c5;eip=0x007287; 	J(JMP(loc_2d4bd));	// 97891                  jmp     short loc_2D4BD ;~ 17C5:7287
loc_2d4ba:
	// 5727 
cs=0x17c5;eip=0x00728a; 	T(ax = 0x0C;);	// 97896                  mov     ax, 0Ch ;~ 17C5:728A
loc_2d4bd:
	// 5728 
cs=0x17c5;eip=0x00728d; 	X(MOV(*(dw*)(raddr(ds,si-0x76A8)), ax));	// 97899                  mov     [si-76A8h], ax ;~ 17C5:728D
cs=0x17c5;eip=0x007291; 	T(CMP(*(dw*)(raddr(ds,si-0x7694)), 0));	// 97900                  cmp     word ptr [si-7694h], 0 ;~ 17C5:7291
cs=0x17c5;eip=0x007296; 	J(JLE(loc_2d4d8));	// 97901                  jle     short loc_2D4D8 ;~ 17C5:7296
cs=0x17c5;eip=0x007298; 	T(ax = 0x78;);	// 97902                  mov     ax, 78h ; 'x' ;~ 17C5:7298
cs=0x17c5;eip=0x00729b; 	T(CWD);	// 97903                  cwd ;~ 17C5:729B
cs=0x17c5;eip=0x00729c; 	T(cx = word_492f4;);	// 97904                  mov     cx, word_492F4 ;~ 17C5:729C
cs=0x17c5;eip=0x0072a0; 	T(IDIV2(cx));	// 97905                  idiv    cx ;~ 17C5:72A0
cs=0x17c5;eip=0x0072a2; 	X(SUB(*(dw*)(raddr(ds,si-0x7694)), ax));	// 97906                  sub     [si-7694h], ax ;~ 17C5:72A2
cs=0x17c5;eip=0x0072a6; 	J(JMP(loc_2d4f9));	// 97907                  jmp     short loc_2D4F9 ;~ 17C5:72A6
loc_2d4d8:
	// 5729 
cs=0x17c5;eip=0x0072a8; 	T(ax = 0x24;);	// 97911                  mov     ax, 24h ; '$' ;~ 17C5:72A8
cs=0x17c5;eip=0x0072ab; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97912                  imul    [bp+var_22] ;~ 17C5:72AB
cs=0x17c5;eip=0x0072ae; 	T(si = ax;);	// 97913                  mov     si, ax ;~ 17C5:72AE
cs=0x17c5;eip=0x0072b0; 	T(ADD(si, 0x896A));	// 97914                  add     si, 896Ah ;~ 17C5:72B0
cs=0x17c5;eip=0x0072b4; 	X(AND(*(dw*)(raddr(ds,si)), 0x1C1));	// 97915                  and     word ptr [si], 1C1h ;~ 17C5:72B4
cs=0x17c5;eip=0x0072b8; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 97916                  cmp     [bp+var_22], 0 ;~ 17C5:72B8
cs=0x17c5;eip=0x0072bc; 	J(JNZ(loc_2d4f9));	// 97917                  jnz     short loc_2D4F9 ;~ 17C5:72BC
cs=0x17c5;eip=0x0072be; 	T(CMP(word_51374, 5));	// 97918                  cmp     ds:word_51374, 5 ;~ 17C5:72BE
cs=0x17c5;eip=0x0072c3; 	J(JL(loc_2d4f9));	// 97919                  jl      short loc_2D4F9 ;~ 17C5:72C3
cs=0x17c5;eip=0x0072c5; 	X(MOV(*(dw*)(raddr(ds,si)), 0));	// 97920                  mov     word ptr [si], 0 ;~ 17C5:72C5
loc_2d4f9:
	// 5730 
cs=0x17c5;eip=0x0072c9; 	T(ax = word_52276;);	// 97924                  mov     ax, ds:word_52276 ;~ 17C5:72C9
cs=0x17c5;eip=0x0072cc; 	T(SUB(ax, 4));	// 97925                  sub     ax, 4 ;~ 17C5:72CC
cs=0x17c5;eip=0x0072cf; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), ax));	// 97926                  cmp     [bp+var_22], ax ;~ 17C5:72CF
cs=0x17c5;eip=0x0072d2; 	J(JL(loc_2d51f));	// 97927                  jl      short loc_2D51F ;~ 17C5:72D2
cs=0x17c5;eip=0x0072d4; 	T(ax = 0x24;);	// 97928                  mov     ax, 24h ; '$' ;~ 17C5:72D4
cs=0x17c5;eip=0x0072d7; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97929                  imul    [bp+var_22] ;~ 17C5:72D7
cs=0x17c5;eip=0x0072da; 	T(si = ax;);	// 97930                  mov     si, ax ;~ 17C5:72DA
cs=0x17c5;eip=0x0072dc; 	T(CMP(*(dw*)(raddr(ds,si-0x7694)), 0x64));	// 97931                  cmp     word ptr [si-7694h], 64h ; 'd' ;~ 17C5:72DC
cs=0x17c5;eip=0x0072e1; 	J(JGE(loc_2d51f));	// 97932                  jge     short loc_2D51F ;~ 17C5:72E1
cs=0x17c5;eip=0x0072e3; 	X(AND(*(dw*)(raddr(ds,si-0x7696)), 0x1C1));	// 97933                  and     word ptr [si-7696h], 1C1h ;~ 17C5:72E3
cs=0x17c5;eip=0x0072e9; 	X(OR(*(dw*)(raddr(ds,si-0x7696)), 0x406));	// 97934                  or      word ptr [si-7696h], 406h ;~ 17C5:72E9
loc_2d51f:
	// 5731 
cs=0x17c5;eip=0x0072ef; 	T(ax = 0x24;);	// 97938                  mov     ax, 24h ; '$' ;~ 17C5:72EF
cs=0x17c5;eip=0x0072f2; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97939                  imul    [bp+var_22] ;~ 17C5:72F2
cs=0x17c5;eip=0x0072f5; 	T(si = ax;);	// 97940                  mov     si, ax ;~ 17C5:72F5
cs=0x17c5;eip=0x0072f7; 	X(DEC(*(dw*)(raddr(ds,si-0x7692))));	// 97941                  dec     word ptr [si-7692h] ;~ 17C5:72F7
cs=0x17c5;eip=0x0072fb; 	J(JNZ(loc_2d59c));	// 97942                  jnz     short loc_2D59C ;~ 17C5:72FB
cs=0x17c5;eip=0x0072fd; 	X(OR(*(raddr(ds,si-0x7696)), 4));	// 97943                  or      byte ptr [si-7696h], 4 ;~ 17C5:72FD
cs=0x17c5;eip=0x007302; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), 0x7FFF));	// 97944                  mov     [bp+var_1C], 7FFFh ;~ 17C5:7302
cs=0x17c5;eip=0x007307; 	X(MOV(*(dw*)(raddr(ss,bp+var_26)), 3));	// 97945                  mov     [bp+var_26], 3 ;~ 17C5:7307
cs=0x17c5;eip=0x00730c; 	J(JMP(loc_2d594));	// 97946                  jmp     short loc_2D594 ;~ 17C5:730C
loc_2d53e:
	// 5732 
cs=0x17c5;eip=0x00730e; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_26))));	// 97950                  mov     si, [bp+var_26] ;~ 17C5:730E
cs=0x17c5;eip=0x007311; 	T(cl = 4;);	// 97951                  mov     cl, 4 ;~ 17C5:7311
cs=0x17c5;eip=0x007313; 	T(SHL(si, cl));	// 97952                  shl     si, cl ;~ 17C5:7313
cs=0x17c5;eip=0x007315; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E4C))));	// 97953                  mov     ax, [si-7E4Ch] ;~ 17C5:7315
cs=0x17c5;eip=0x007319; 	T(AND(ax, 0x101));	// 97954                  and     ax, 101h ;~ 17C5:7319
cs=0x17c5;eip=0x00731c; 	T(CMP(ax, 1));	// 97955                  cmp     ax, 1 ;~ 17C5:731C
cs=0x17c5;eip=0x00731f; 	J(JNZ(loc_2d591));	// 97956                  jnz     short loc_2D591 ;~ 17C5:731F
cs=0x17c5;eip=0x007321; 	T(ax = 0x24;);	// 97957                  mov     ax, 24h ; '$' ;~ 17C5:7321
cs=0x17c5;eip=0x007324; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97958                  imul    [bp+var_22] ;~ 17C5:7324
cs=0x17c5;eip=0x007327; 	T(di = ax;);	// 97959                  mov     di, ax ;~ 17C5:7327
cs=0x17c5;eip=0x007329; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x76AA))));	// 97960                  mov     ax, [di-76AAh] ;~ 17C5:7329
cs=0x17c5;eip=0x00732d; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 97961                  sub     ax, [si-7E50h] ;~ 17C5:732D
cs=0x17c5;eip=0x007331; 	X(PUSH(ax));	// 97962                  push    ax ;~ 17C5:7331
cs=0x17c5;eip=0x007332; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x76AC))));	// 97963                  mov     ax, [di-76ACh] ;~ 17C5:7332
cs=0x17c5;eip=0x007336; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 97964                  sub     ax, [si-7E52h] ;~ 17C5:7336
cs=0x17c5;eip=0x00733a; 	X(PUSH(ax));	// 97965                  push    ax ;~ 17C5:733A
cs=0x17c5;eip=0x00733b; 	J(CALL(sub_331d6,0));	// 97966                  call    sub_331D6 ;~ 17C5:733B
cs=0x17c5;eip=0x00733e; 	T(ADD(sp, 4));	// 97967                  add     sp, 4 ;~ 17C5:733E
cs=0x17c5;eip=0x007341; 	X(MOV(*(dw*)(raddr(ss,bp+var_3c)), ax));	// 97968                  mov     [bp+var_3C], ax ;~ 17C5:7341
cs=0x17c5;eip=0x007344; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1c))));	// 97969                  mov     ax, [bp+var_1C] ;~ 17C5:7344
cs=0x17c5;eip=0x007347; 	T(CMP(*(dw*)(raddr(ss,bp+var_3c)), ax));	// 97970                  cmp     [bp+var_3C], ax ;~ 17C5:7347
cs=0x17c5;eip=0x00734a; 	J(JGE(loc_2d591));	// 97971                  jge     short loc_2D591 ;~ 17C5:734A
cs=0x17c5;eip=0x00734c; 	T(ax = 0x24;);	// 97972                  mov     ax, 24h ; '$' ;~ 17C5:734C
cs=0x17c5;eip=0x00734f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97973                  imul    [bp+var_22] ;~ 17C5:734F
cs=0x17c5;eip=0x007352; 	T(bx = ax;);	// 97974                  mov     bx, ax ;~ 17C5:7352
cs=0x17c5;eip=0x007354; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_26))));	// 97975                  mov     ax, [bp+var_26] ;~ 17C5:7354
cs=0x17c5;eip=0x007357; 	X(MOV(*(dw*)(raddr(ds,bx-0x76AE)), ax));	// 97976                  mov     [bx-76AEh], ax ;~ 17C5:7357
cs=0x17c5;eip=0x00735b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_3c))));	// 97977                  mov     ax, [bp+var_3C] ;~ 17C5:735B
cs=0x17c5;eip=0x00735e; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 97978                  mov     [bp+var_1C], ax ;~ 17C5:735E
loc_2d591:
	// 5733 
cs=0x17c5;eip=0x007361; 	X(INC(*(dw*)(raddr(ss,bp+var_26))));	// 97982                  inc     [bp+var_26] ;~ 17C5:7361
loc_2d594:
	// 5734 
cs=0x17c5;eip=0x007364; 	T(ax = word_528ce;);	// 97985                  mov     ax, ds:word_528CE ;~ 17C5:7364
cs=0x17c5;eip=0x007367; 	T(CMP(*(dw*)(raddr(ss,bp+var_26)), ax));	// 97986                  cmp     [bp+var_26], ax ;~ 17C5:7367
cs=0x17c5;eip=0x00736a; 	J(JL(loc_2d53e));	// 97987                  jl      short loc_2D53E ;~ 17C5:736A
loc_2d59c:
	// 5735 
cs=0x17c5;eip=0x00736c; 	T(ax = 0x24;);	// 97990                  mov     ax, 24h ; '$' ;~ 17C5:736C
cs=0x17c5;eip=0x00736f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97991                  imul    [bp+var_22] ;~ 17C5:736F
cs=0x17c5;eip=0x007372; 	T(si = ax;);	// 97992                  mov     si, ax ;~ 17C5:7372
cs=0x17c5;eip=0x007374; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 97993                  push    word ptr [si-76AAh] ;~ 17C5:7374
cs=0x17c5;eip=0x007378; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 97994                  push    word ptr [si-76ACh] ;~ 17C5:7378
cs=0x17c5;eip=0x00737c; 	J(CALL(sub_2fc7d,0));	// 97995                  call    sub_2FC7D ;~ 17C5:737C
cs=0x17c5;eip=0x00737f; 	T(ADD(sp, 4));	// 97996                  add     sp, 4 ;~ 17C5:737F
cs=0x17c5;eip=0x007382; 	X(MOV(*(dw*)(raddr(ds,si-0x768E)), ax));	// 97997                  mov     [si-768Eh], ax ;~ 17C5:7382
cs=0x17c5;eip=0x007386; 	T(ax = 0x24;);	// 97998                  mov     ax, 24h ; '$' ;~ 17C5:7386
cs=0x17c5;eip=0x007389; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 97999                  imul    [bp+var_22] ;~ 17C5:7389
cs=0x17c5;eip=0x00738c; 	T(bx = ax;);	// 98000                  mov     bx, ax ;~ 17C5:738C
cs=0x17c5;eip=0x00738e; 	T(MOV(al, *(raddr(ds,bx-0x7696))));	// 98001                  mov     al, [bx-7696h] ;~ 17C5:738E
cs=0x17c5;eip=0x007392; 	X(MOV(*(raddr(ss,bp+var_40)), al));	// 98002                  mov     [bp+var_40], al ;~ 17C5:7392
cs=0x17c5;eip=0x007395; 	T(TEST(*(raddr(ss,bp+var_40)), 2));	// 98003                  test    [bp+var_40], 2 ;~ 17C5:7395
cs=0x17c5;eip=0x007399; 	J(JNZ(loc_2d5ce));	// 98004                  jnz     short loc_2D5CE ;~ 17C5:7399
cs=0x17c5;eip=0x00739b; 	J(JMP(loc_2d71b));	// 98005                  jmp     loc_2D71B ;~ 17C5:739B
loc_2d5ce:
	// 5736 
cs=0x17c5;eip=0x00739e; 	T(MOV(al, *(raddr(ss,bp+var_22))));	// 98009                  mov     al, byte ptr [bp+var_22] ;~ 17C5:739E
cs=0x17c5;eip=0x0073a1; 	T(SUB(ah, ah));	// 98010                  sub     ah, ah ;~ 17C5:73A1
cs=0x17c5;eip=0x0073a3; 	T(AND(ax, 8));	// 98011                  and     ax, 8 ;~ 17C5:73A3
cs=0x17c5;eip=0x0073a6; 	T(cl = 3;);	// 98012                  mov     cl, 3 ;~ 17C5:73A6
cs=0x17c5;eip=0x0073a8; 	T(SHR(ax, cl));	// 98013                  shr     ax, cl ;~ 17C5:73A8
cs=0x17c5;eip=0x0073aa; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_22))));	// 98014                  mov     cx, [bp+var_22] ;~ 17C5:73AA
cs=0x17c5;eip=0x0073ad; 	T(AND(cx, 7));	// 98015                  and     cx, 7 ;~ 17C5:73AD
cs=0x17c5;eip=0x0073b0; 	T(SHL(cx, 1));	// 98016                  shl     cx, 1 ;~ 17C5:73B0
cs=0x17c5;eip=0x0073b2; 	T(ADD(ax, cx));	// 98017                  add     ax, cx ;~ 17C5:73B2
cs=0x17c5;eip=0x0073b4; 	X(MOV(*(dw*)(raddr(ss,bp+var_24)), ax));	// 98018                  mov     [bp+var_24], ax ;~ 17C5:73B4
cs=0x17c5;eip=0x0073b7; 	T(ax = word_49918;);	// 98019                  mov     ax, word_49918 ;~ 17C5:73B7
cs=0x17c5;eip=0x0073ba; 	T(CWD);	// 98020                  cwd ;~ 17C5:73BA
cs=0x17c5;eip=0x0073bb; 	T(bx = word_492f4;);	// 98021                  mov     bx, word_492F4 ;~ 17C5:73BB
cs=0x17c5;eip=0x0073bf; 	T(cl = 4;);	// 98022                  mov     cl, 4 ;~ 17C5:73BF
cs=0x17c5;eip=0x0073c1; 	T(SHL(bx, cl));	// 98023                  shl     bx, cl ;~ 17C5:73C1
cs=0x17c5;eip=0x0073c3; 	T(IDIV2(bx));	// 98024                  idiv    bx ;~ 17C5:73C3
cs=0x17c5;eip=0x0073c5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_24))));	// 98025                  mov     ax, [bp+var_24] ;~ 17C5:73C5
cs=0x17c5;eip=0x0073c8; 	T(cx = dx;);	// 98026                  mov     cx, dx ;~ 17C5:73C8
cs=0x17c5;eip=0x0073ca; 	X(IMUL1_2(word_492f4));	// 98027                  imul    word_492F4 ;~ 17C5:73CA
cs=0x17c5;eip=0x0073ce; 	T(CMP(ax, cx));	// 98028                  cmp     ax, cx ;~ 17C5:73CE
cs=0x17c5;eip=0x0073d0; 	J(JZ(loc_2d605));	// 98029                  jz      short loc_2D605 ;~ 17C5:73D0
cs=0x17c5;eip=0x0073d2; 	J(JMP(loc_2d71b));	// 98030                  jmp     loc_2D71B ;~ 17C5:73D2
loc_2d605:
	// 5737 
cs=0x17c5;eip=0x0073d5; 	T(TEST(*(raddr(ss,bp+var_40)), 0x20));	// 98034                  test    [bp+var_40], 20h ;~ 17C5:73D5
cs=0x17c5;eip=0x0073d9; 	J(JZ(loc_2d60e));	// 98035                  jz      short loc_2D60E ;~ 17C5:73D9
cs=0x17c5;eip=0x0073db; 	J(JMP(loc_2d71b));	// 98036                  jmp     loc_2D71B ;~ 17C5:73DB
loc_2d60e:
	// 5738 
cs=0x17c5;eip=0x0073de; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 98040                  push    [bp+var_22] ;~ 17C5:73DE
cs=0x17c5;eip=0x0073e1; 	J(CALL(sub_2d7c4,0));	// 98041                  call    sub_2D7C4 ;~ 17C5:73E1
cs=0x17c5;eip=0x0073e4; 	T(ADD(sp, 2));	// 98042                  add     sp, 2 ;~ 17C5:73E4
cs=0x17c5;eip=0x0073e7; 	J(JMP(loc_2d71b));	// 98043                  jmp     loc_2D71B ;~ 17C5:73E7
loc_2d61a:
	// 5739 
cs=0x17c5;eip=0x0073ea; 	T(MOV(al, *(raddr(ss,bp+var_22))));	// 98048                  mov     al, byte ptr [bp+var_22] ;~ 17C5:73EA
cs=0x17c5;eip=0x0073ed; 	T(AND(al, 7));	// 98049                  and     al, 7 ;~ 17C5:73ED
cs=0x17c5;eip=0x0073ef; 	T(dx = word_4f210;);	// 98050                  mov     dx, ds:word_4F210 ;~ 17C5:73EF
cs=0x17c5;eip=0x0073f3; 	T(cl = 4;);	// 98051                  mov     cl, 4 ;~ 17C5:73F3
cs=0x17c5;eip=0x0073f5; 	T(SAR(dx, cl));	// 98052                  sar     dx, cl ;~ 17C5:73F5
cs=0x17c5;eip=0x0073f7; 	T(AND(dl, 7));	// 98053                  and     dl, 7 ;~ 17C5:73F7
cs=0x17c5;eip=0x0073fa; 	T(CMP(al, dl));	// 98054                  cmp     al, dl ;~ 17C5:73FA
cs=0x17c5;eip=0x0073fc; 	J(JZ(loc_2d631));	// 98055                  jz      short loc_2D631 ;~ 17C5:73FC
cs=0x17c5;eip=0x0073fe; 	J(JMP(loc_2d71b));	// 98056                  jmp     loc_2D71B ;~ 17C5:73FE
loc_2d631:
	// 5740 
cs=0x17c5;eip=0x007401; 	T(ax = word_52276;);	// 98060                  mov     ax, ds:word_52276 ;~ 17C5:7401
cs=0x17c5;eip=0x007404; 	T(SUB(ax, 4));	// 98061                  sub     ax, 4 ;~ 17C5:7404
cs=0x17c5;eip=0x007407; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), ax));	// 98062                  cmp     [bp+var_22], ax ;~ 17C5:7407
cs=0x17c5;eip=0x00740a; 	J(JL(loc_2d63f));	// 98063                  jl      short loc_2D63F ;~ 17C5:740A
cs=0x17c5;eip=0x00740c; 	J(JMP(loc_2d71b));	// 98064                  jmp     loc_2D71B ;~ 17C5:740C
loc_2d63f:
	// 5741 
cs=0x17c5;eip=0x00740f; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 98068                  cmp     [bp+var_22], 0 ;~ 17C5:740F
cs=0x17c5;eip=0x007413; 	J(JNZ(loc_2d648));	// 98069                  jnz     short loc_2D648 ;~ 17C5:7413
cs=0x17c5;eip=0x007415; 	J(JMP(loc_2d71b));	// 98070                  jmp     loc_2D71B ;~ 17C5:7415
loc_2d648:
	// 5742 
cs=0x17c5;eip=0x007418; 	T(ax = 0x0E0;);	// 98074                  mov     ax, 0E0h ;~ 17C5:7418
cs=0x17c5;eip=0x00741b; 	T(CWD);	// 98075                  cwd ;~ 17C5:741B
cs=0x17c5;eip=0x00741c; 	T(cx = word_492e8;);	// 98076                  mov     cx, word_492E8 ;~ 17C5:741C
cs=0x17c5;eip=0x007420; 	T(ADD(cx, 2));	// 98077                  add     cx, 2 ;~ 17C5:7420
cs=0x17c5;eip=0x007423; 	T(IDIV2(cx));	// 98078                  idiv    cx ;~ 17C5:7423
cs=0x17c5;eip=0x007425; 	T(cx = word_4f210;);	// 98079                  mov     cx, ds:word_4F210 ;~ 17C5:7425
cs=0x17c5;eip=0x007429; 	T(SUB(cx, word_4e38e));	// 98080                  sub     cx, ds:word_4E38E ;~ 17C5:7429
cs=0x17c5;eip=0x00742d; 	T(CMP(cx, ax));	// 98081                  cmp     cx, ax ;~ 17C5:742D
cs=0x17c5;eip=0x00742f; 	J(JG(loc_2d664));	// 98082                  jg      short loc_2D664 ;~ 17C5:742F
cs=0x17c5;eip=0x007431; 	J(JMP(loc_2d71b));	// 98083                  jmp     loc_2D71B ;~ 17C5:7431
loc_2d664:
	// 5743 
cs=0x17c5;eip=0x007434; 	X(PUSH(word_528ce));	// 98087                  push    ds:word_528CE ;~ 17C5:7434
cs=0x17c5;eip=0x007438; 	J(CALL(sub_33430,0));	// 98088                  call    sub_33430 ;~ 17C5:7438
cs=0x17c5;eip=0x00743b; 	T(ADD(sp, 2));	// 98089                  add     sp, 2 ;~ 17C5:743B
cs=0x17c5;eip=0x00743e; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 98090                  mov     [bp+var_10], ax ;~ 17C5:743E
cs=0x17c5;eip=0x007441; 	T(CMP(word_49920, 0));	// 98091                  cmp     word_49920, 0 ;~ 17C5:7441
cs=0x17c5;eip=0x007446; 	J(JNZ(loc_2d68a));	// 98092                  jnz     short loc_2D68A ;~ 17C5:7446
cs=0x17c5;eip=0x007448; 	T(ax = 0x24;);	// 98093                  mov     ax, 24h ; '$' ;~ 17C5:7448
cs=0x17c5;eip=0x00744b; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 98094                  imul    [bp+var_22] ;~ 17C5:744B
cs=0x17c5;eip=0x00744e; 	T(bx = ax;);	// 98095                  mov     bx, ax ;~ 17C5:744E
cs=0x17c5;eip=0x007450; 	T(TEST(*(raddr(ds,bx-0x7696)), 0x80));	// 98096                  test    byte ptr [bx-7696h], 80h ;~ 17C5:7450
cs=0x17c5;eip=0x007455; 	J(JNZ(loc_2d68a));	// 98097                  jnz     short loc_2D68A ;~ 17C5:7455
cs=0x17c5;eip=0x007457; 	J(JMP(loc_2d71b));	// 98098                  jmp     loc_2D71B ;~ 17C5:7457
loc_2d68a:
	// 5744 
cs=0x17c5;eip=0x00745a; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_10))));	// 98103                  mov     si, [bp+var_10] ;~ 17C5:745A
cs=0x17c5;eip=0x00745d; 	T(cl = 4;);	// 98104                  mov     cl, 4 ;~ 17C5:745D
cs=0x17c5;eip=0x00745f; 	T(SHL(si, cl));	// 98105                  shl     si, cl ;~ 17C5:745F
cs=0x17c5;eip=0x007461; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E4C))));	// 98106                  mov     ax, [si-7E4Ch] ;~ 17C5:7461
cs=0x17c5;eip=0x007465; 	T(AND(ax, 0x181));	// 98107                  and     ax, 181h ;~ 17C5:7465
cs=0x17c5;eip=0x007468; 	T(CMP(ax, 1));	// 98108                  cmp     ax, 1 ;~ 17C5:7468
cs=0x17c5;eip=0x00746b; 	J(JNZ(loc_2d71b));	// 98109                  jnz     short loc_2D71B ;~ 17C5:746B
cs=0x17c5;eip=0x00746d; 	T(ax = 0x24;);	// 98110                  mov     ax, 24h ; '$' ;~ 17C5:746D
cs=0x17c5;eip=0x007470; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 98111                  imul    [bp+var_22] ;~ 17C5:7470
cs=0x17c5;eip=0x007473; 	T(bx = ax;);	// 98112                  mov     bx, ax ;~ 17C5:7473
cs=0x17c5;eip=0x007475; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E4A))));	// 98113                  mov     ax, [si-7E4Ah] ;~ 17C5:7475
cs=0x17c5;eip=0x007479; 	T(CMP(*(dw*)(raddr(ds,bx-0x7698)), ax));	// 98114                  cmp     [bx-7698h], ax ;~ 17C5:7479
cs=0x17c5;eip=0x00747d; 	J(JNZ(loc_2d71b));	// 98115                  jnz     short loc_2D71B ;~ 17C5:747D
cs=0x17c5;eip=0x00747f; 	T(ax = word_492e8;);	// 98116                  mov     ax, word_492E8 ;~ 17C5:747F
cs=0x17c5;eip=0x007482; 	T(SHL(ax, 1));	// 98117                  shl     ax, 1 ;~ 17C5:7482
cs=0x17c5;eip=0x007484; 	T(CMP(ax, word_50b76));	// 98118                  cmp     ax, ds:word_50B76 ;~ 17C5:7484
cs=0x17c5;eip=0x007488; 	J(JL(loc_2d71b));	// 98119                  jl      short loc_2D71B ;~ 17C5:7488
cs=0x17c5;eip=0x00748a; 	T(ax = word_51708;);	// 98120                  mov     ax, ds:word_51708 ;~ 17C5:748A
cs=0x17c5;eip=0x00748d; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 98121                  sub     ax, [si-7E52h] ;~ 17C5:748D
cs=0x17c5;eip=0x007491; 	X(MOV(*(dw*)(raddr(ss,bp+var_2e)), ax));	// 98122                  mov     [bp+var_2E], ax ;~ 17C5:7491
cs=0x17c5;eip=0x007494; 	T(ax = word_51710;);	// 98123                  mov     ax, ds:word_51710 ;~ 17C5:7494
cs=0x17c5;eip=0x007497; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 98124                  sub     ax, [si-7E50h] ;~ 17C5:7497
cs=0x17c5;eip=0x00749b; 	X(MOV(*(dw*)(raddr(ss,bp+var_34)), ax));	// 98125                  mov     [bp+var_34], ax ;~ 17C5:749B
cs=0x17c5;eip=0x00749e; 	X(PUSH(ax));	// 98126                  push    ax ;~ 17C5:749E
cs=0x17c5;eip=0x00749f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2e))));	// 98127                  push    [bp+var_2E] ;~ 17C5:749F
cs=0x17c5;eip=0x0074a2; 	J(CALL(sub_331d6,0));	// 98128                  call    sub_331D6 ;~ 17C5:74A2
cs=0x17c5;eip=0x0074a5; 	T(ADD(sp, 4));	// 98129                  add     sp, 4 ;~ 17C5:74A5
cs=0x17c5;eip=0x0074a8; 	T(cl = 6;);	// 98130                  mov     cl, 6 ;~ 17C5:74A8
cs=0x17c5;eip=0x0074aa; 	T(SHR(ax, cl));	// 98131                  shr     ax, cl ;~ 17C5:74AA
cs=0x17c5;eip=0x0074ac; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 98132                  mov     [bp+var_1A], ax ;~ 17C5:74AC
cs=0x17c5;eip=0x0074af; 	T(bx = word_4ef1c;);	// 98133                  mov     bx, ds:word_4EF1C ;~ 17C5:74AF
cs=0x17c5;eip=0x0074b3; 	T(cl = 5;);	// 98134                  mov     cl, 5 ;~ 17C5:74B3
cs=0x17c5;eip=0x0074b5; 	T(SHL(bx, cl));	// 98135                  shl     bx, cl ;~ 17C5:74B5
cs=0x17c5;eip=0x0074b7; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x2DC))));	// 98136                  mov     ax, [bx+2DCh] ;~ 17C5:74B7
cs=0x17c5;eip=0x0074bb; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 98137                  mov     [bp+var_E], ax ;~ 17C5:74BB
cs=0x17c5;eip=0x0074be; 	T(CWD);	// 98138                  cwd ;~ 17C5:74BE
cs=0x17c5;eip=0x0074bf; 	T(SUB(ax, dx));	// 98139                  sub     ax, dx ;~ 17C5:74BF
cs=0x17c5;eip=0x0074c1; 	T(SAR(ax, 1));	// 98140                  sar     ax, 1 ;~ 17C5:74C1
cs=0x17c5;eip=0x0074c3; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_1a))));	// 98141                  cmp     ax, [bp+var_1A] ;~ 17C5:74C3
cs=0x17c5;eip=0x0074c6; 	J(JBE(loc_2d71b));	// 98142                  jbe     short loc_2D71B ;~ 17C5:74C6
cs=0x17c5;eip=0x0074c8; 	T(ax = word_4f210;);	// 98143                  mov     ax, ds:word_4F210 ;~ 17C5:74C8
cs=0x17c5;eip=0x0074cb; 	X(word_4e38e = ax;);	// 98144                  mov     ds:word_4E38E, ax ;~ 17C5:74CB
cs=0x17c5;eip=0x0074ce; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 98145                  push    [bp+var_10] ;~ 17C5:74CE
cs=0x17c5;eip=0x0074d1; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 98146                  push    [bp+var_22] ;~ 17C5:74D1
cs=0x17c5;eip=0x0074d4; 	J(CALL(sub_2da6a,0));	// 98147                  call    sub_2DA6A ;~ 17C5:74D4
cs=0x17c5;eip=0x0074d7; 	T(ADD(sp, 4));	// 98148                  add     sp, 4 ;~ 17C5:74D7
cs=0x17c5;eip=0x0074da; 	T(ax = 2;);	// 98149                  mov     ax, 2 ;~ 17C5:74DA
cs=0x17c5;eip=0x0074dd; 	X(PUSH(ax));	// 98150                  push    ax ;~ 17C5:74DD
cs=0x17c5;eip=0x0074de; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_22))));	// 98151                  mov     ax, [bp+var_22] ;~ 17C5:74DE
cs=0x17c5;eip=0x0074e1; 	T(ADD(ax, 0x20));	// 98152                  add     ax, 20h ; ' ' ;~ 17C5:74E1
cs=0x17c5;eip=0x0074e4; 	X(PUSH(ax));	// 98153                  push    ax ;~ 17C5:74E4
cs=0x17c5;eip=0x0074e5; 	J(CALL(sub_27df3,0));	// 98154                  call    sub_27DF3 ;~ 17C5:74E5
cs=0x17c5;eip=0x0074e8; 	T(ADD(sp, 4));	// 98155                  add     sp, 4 ;~ 17C5:74E8
loc_2d71b:
	// 5745 
cs=0x17c5;eip=0x0074eb; 	X(INC(*(dw*)(raddr(ss,bp+var_22))));	// 98159                  inc     [bp+var_22] ;~ 17C5:74EB
loc_2d71e:
	// 5746 
cs=0x17c5;eip=0x0074ee; 	T(ax = word_52276;);	// 98162                  mov     ax, ds:word_52276 ;~ 17C5:74EE
cs=0x17c5;eip=0x0074f1; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), ax));	// 98163                  cmp     [bp+var_22], ax ;~ 17C5:74F1
cs=0x17c5;eip=0x0074f4; 	J(JL(loc_2d729));	// 98164                  jl      short loc_2D729 ;~ 17C5:74F4
cs=0x17c5;eip=0x0074f6; 	J(JMP(loc_2d7be));	// 98165                  jmp     loc_2D7BE ;~ 17C5:74F6
loc_2d729:
	// 5747 
cs=0x17c5;eip=0x0074f9; 	T(ax = 0x24;);	// 98169                  mov     ax, 24h ; '$' ;~ 17C5:74F9
cs=0x17c5;eip=0x0074fc; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_22))));	// 98170                  imul    [bp+var_22] ;~ 17C5:74FC
cs=0x17c5;eip=0x0074ff; 	T(si = ax;);	// 98171                  mov     si, ax ;~ 17C5:74FF
cs=0x17c5;eip=0x007501; 	T(TEST(*(raddr(ds,si-0x7696)), 1));	// 98172                  test    byte ptr [si-7696h], 1 ;~ 17C5:7501
cs=0x17c5;eip=0x007506; 	J(JZ(loc_2d71b));	// 98173                  jz      short loc_2D71B ;~ 17C5:7506
cs=0x17c5;eip=0x007508; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7698))));	// 98174                  mov     ax, [si-7698h] ;~ 17C5:7508
cs=0x17c5;eip=0x00750c; 	X(word_4ef1c = ax;);	// 98175                  mov     ds:word_4EF1C, ax ;~ 17C5:750C
cs=0x17c5;eip=0x00750f; 	T(TEST(*(raddr(ds,si-0x7696)), 2));	// 98176                  test    byte ptr [si-7696h], 2 ;~ 17C5:750F
cs=0x17c5;eip=0x007514; 	J(JNZ(loc_2d749));	// 98177                  jnz     short loc_2D749 ;~ 17C5:7514
cs=0x17c5;eip=0x007516; 	J(JMP(loc_2d61a));	// 98178                  jmp     loc_2D61A ;~ 17C5:7516
loc_2d749:
	// 5748 
cs=0x17c5;eip=0x007519; 	T(CMP(*(dw*)(raddr(ds,si-0x7694)), 0));	// 98182                  cmp     word ptr [si-7694h], 0 ;~ 17C5:7519
cs=0x17c5;eip=0x00751e; 	J(JNZ(loc_2d753));	// 98183                  jnz     short loc_2D753 ;~ 17C5:751E
cs=0x17c5;eip=0x007520; 	J(JMP(loc_2d61a));	// 98184                  jmp     loc_2D61A ;~ 17C5:7520
loc_2d753:
	// 5749 
cs=0x17c5;eip=0x007523; 	X(MOV(*(dw*)(raddr(ss,bp+var_1e)), 0));	// 98188                  mov     [bp+var_1E], 0 ;~ 17C5:7523
cs=0x17c5;eip=0x007528; 	T(TEST(*(raddr(ds,si-0x7696)), 4));	// 98189                  test    byte ptr [si-7696h], 4 ;~ 17C5:7528
cs=0x17c5;eip=0x00752d; 	J(JZ(loc_2d762));	// 98190                  jz      short loc_2D762 ;~ 17C5:752D
cs=0x17c5;eip=0x00752f; 	J(JMP(loc_2cc2e));	// 98191                  jmp     loc_2CC2E ;~ 17C5:752F
loc_2d762:
	// 5750 
cs=0x17c5;eip=0x007532; 	T(CMP(word_49920, 0));	// 98195                  cmp     word_49920, 0 ;~ 17C5:7532
cs=0x17c5;eip=0x007537; 	J(JNZ(loc_2d76c));	// 98196                  jnz     short loc_2D76C ;~ 17C5:7537
cs=0x17c5;eip=0x007539; 	J(JMP(loc_2ca40));	// 98197                  jmp     loc_2CA40 ;~ 17C5:7539
loc_2d76c:
	// 5751 
cs=0x17c5;eip=0x00753c; 	T(TEST(*(dw*)(raddr(ds,si-0x7696)), 0x140));	// 98201                  test    word ptr [si-7696h], 140h ;~ 17C5:753C
cs=0x17c5;eip=0x007542; 	J(JZ(loc_2d780));	// 98202                  jz      short loc_2D780 ;~ 17C5:7542
cs=0x17c5;eip=0x007544; 	T(ax = word_4fb8c;);	// 98203                  mov     ax, ds:word_4FB8C ;~ 17C5:7544
cs=0x17c5;eip=0x007547; 	T(CMP(word_49920, ax));	// 98204                  cmp     word_49920, ax ;~ 17C5:7547
cs=0x17c5;eip=0x00754b; 	J(JG(loc_2d780));	// 98205                  jg      short loc_2D780 ;~ 17C5:754B
cs=0x17c5;eip=0x00754d; 	J(JMP(loc_2ca40));	// 98206                  jmp     loc_2CA40 ;~ 17C5:754D
loc_2d780:
	// 5752 
cs=0x17c5;eip=0x007550; 	T(ax = word_51708;);	// 98211                  mov     ax, ds:word_51708 ;~ 17C5:7550
cs=0x17c5;eip=0x007553; 	X(MOV(*(dw*)(raddr(ss,bp+var_30)), ax));	// 98212                  mov     [bp+var_30], ax ;~ 17C5:7553
cs=0x17c5;eip=0x007556; 	T(ax = word_51710;);	// 98213                  mov     ax, ds:word_51710 ;~ 17C5:7556
cs=0x17c5;eip=0x007559; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), ax));	// 98214                  mov     [bp+var_36], ax ;~ 17C5:7559
cs=0x17c5;eip=0x00755c; 	T(ax = word_51806;);	// 98215                  mov     ax, ds:word_51806 ;~ 17C5:755C
cs=0x17c5;eip=0x00755f; 	X(MOV(*(dw*)(raddr(ss,bp+var_3a)), ax));	// 98216                  mov     [bp+var_3A], ax ;~ 17C5:755F
cs=0x17c5;eip=0x007562; 	X(MOV(*(dw*)(raddr(ss,bp+var_1e)), 1));	// 98217                  mov     [bp+var_1E], 1 ;~ 17C5:7562
cs=0x17c5;eip=0x007567; 	T(CMP(*(word_4960a), 0));	// 98218                  cmp     word_4960A, 0 ;~ 17C5:7567
cs=0x17c5;eip=0x00756c; 	J(JNZ(loc_2d7a1));	// 98219                  jnz     short loc_2D7A1 ;~ 17C5:756C
cs=0x17c5;eip=0x00756e; 	J(JMP(loc_2ccc6));	// 98220                  jmp     loc_2CCC6 ;~ 17C5:756E
loc_2d7a1:
	// 5753 
cs=0x17c5;eip=0x007571; 	T(ax = word_49602;);	// 98224                  mov     ax, word_49602 ;~ 17C5:7571
cs=0x17c5;eip=0x007574; 	X(MOV(*(dw*)(raddr(ss,bp+var_30)), ax));	// 98225                  mov     [bp+var_30], ax ;~ 17C5:7574
cs=0x17c5;eip=0x007577; 	T(ax = word_49604;);	// 98226                  mov     ax, word_49604 ;~ 17C5:7577
cs=0x17c5;eip=0x00757a; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), ax));	// 98227                  mov     [bp+var_36], ax ;~ 17C5:757A
cs=0x17c5;eip=0x00757d; 	T(ax = 0x7530;);	// 98228                  mov     ax, 7530h ;~ 17C5:757D
cs=0x17c5;eip=0x007580; 	X(PUSH(ax));	// 98229                  push    ax ;~ 17C5:7580
cs=0x17c5;eip=0x007581; 	T(ax = 0x3E8;);	// 98230                  mov     ax, 3E8h ;~ 17C5:7581
cs=0x17c5;eip=0x007584; 	X(PUSH(ax));	// 98231                  push    ax ;~ 17C5:7584
cs=0x17c5;eip=0x007585; 	X(PUSH(word_4e2fe));	// 98232                  push    ds:word_4E2FE ;~ 17C5:7585
cs=0x17c5;eip=0x007589; 	J(JMP(loc_2cc21));	// 98233                  jmp     loc_2CC21 ;~ 17C5:7589
loc_2d7be:
	// 5754 
cs=0x17c5;eip=0x00758e; 	X(POP(si));	// 98239                  pop     si ;~ 17C5:758E
cs=0x17c5;eip=0x00758f; 	X(POP(di));	// 98240                  pop     di ;~ 17C5:758F
cs=0x17c5;eip=0x007590; 	T(sp = bp;);	// 98241                  mov     sp, bp ;~ 17C5:7590
cs=0x17c5;eip=0x007592; 	X(POP(bp));	// 98242                  pop     bp ;~ 17C5:7592
cs=0x17c5;eip=0x007593; 	J(RETN(0));	// 98243                  retn ;~ 17C5:7593

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2ca0d: 	goto loc_2ca0d;
        case m2c::kloc_2ca40: 	goto loc_2ca40;
        case m2c::kloc_2cad4: 	goto loc_2cad4;
        case m2c::kloc_2cae6: 	goto loc_2cae6;
        case m2c::kloc_2caf8: 	goto loc_2caf8;
        case m2c::kloc_2cb1e: 	goto loc_2cb1e;
        case m2c::kloc_2cb21: 	goto loc_2cb21;
        case m2c::kloc_2cb2a: 	goto loc_2cb2a;
        case m2c::kloc_2cbae: 	goto loc_2cbae;
        case m2c::kloc_2cbef: 	goto loc_2cbef;
        case m2c::kloc_2cc21: 	goto loc_2cc21;
        case m2c::kloc_2cc27: 	goto loc_2cc27;
        case m2c::kloc_2cc2e: 	goto loc_2cc2e;
        case m2c::kloc_2cc80: 	goto loc_2cc80;
        case m2c::kloc_2cc86: 	goto loc_2cc86;
        case m2c::kloc_2ccbe: 	goto loc_2ccbe;
        case m2c::kloc_2ccc6: 	goto loc_2ccc6;
        case m2c::kloc_2ccee: 	goto loc_2ccee;
        case m2c::kloc_2cd63: 	goto loc_2cd63;
        case m2c::kloc_2cd6d: 	goto loc_2cd6d;
        case m2c::kloc_2cd7b: 	goto loc_2cd7b;
        case m2c::kloc_2cd85: 	goto loc_2cd85;
        case m2c::kloc_2cda3: 	goto loc_2cda3;
        case m2c::kloc_2cdc1: 	goto loc_2cdc1;
        case m2c::kloc_2ce9d: 	goto loc_2ce9d;
        case m2c::kloc_2cec3: 	goto loc_2cec3;
        case m2c::kloc_2cef4: 	goto loc_2cef4;
        case m2c::kloc_2cf21: 	goto loc_2cf21;
        case m2c::kloc_2cf81: 	goto loc_2cf81;
        case m2c::kloc_2cfb9: 	goto loc_2cfb9;
        case m2c::kloc_2cfe5: 	goto loc_2cfe5;
        case m2c::kloc_2d006: 	goto loc_2d006;
        case m2c::kloc_2d03e: 	goto loc_2d03e;
        case m2c::kloc_2d061: 	goto loc_2d061;
        case m2c::kloc_2d0dc: 	goto loc_2d0dc;
        case m2c::kloc_2d0e9: 	goto loc_2d0e9;
        case m2c::kloc_2d118: 	goto loc_2d118;
        case m2c::kloc_2d12d: 	goto loc_2d12d;
        case m2c::kloc_2d141: 	goto loc_2d141;
        case m2c::kloc_2d182: 	goto loc_2d182;
        case m2c::kloc_2d18f: 	goto loc_2d18f;
        case m2c::kloc_2d1a4: 	goto loc_2d1a4;
        case m2c::kloc_2d1b0: 	goto loc_2d1b0;
        case m2c::kloc_2d24d: 	goto loc_2d24d;
        case m2c::kloc_2d28a: 	goto loc_2d28a;
        case m2c::kloc_2d2e4: 	goto loc_2d2e4;
        case m2c::kloc_2d30f: 	goto loc_2d30f;
        case m2c::kloc_2d3c6: 	goto loc_2d3c6;
        case m2c::kloc_2d3dc: 	goto loc_2d3dc;
        case m2c::kloc_2d3fe: 	goto loc_2d3fe;
        case m2c::kloc_2d418: 	goto loc_2d418;
        case m2c::kloc_2d41a: 	goto loc_2d41a;
        case m2c::kloc_2d447: 	goto loc_2d447;
        case m2c::kloc_2d46c: 	goto loc_2d46c;
        case m2c::kloc_2d479: 	goto loc_2d479;
        case m2c::kloc_2d48c: 	goto loc_2d48c;
        case m2c::kloc_2d4a0: 	goto loc_2d4a0;
        case m2c::kloc_2d4ba: 	goto loc_2d4ba;
        case m2c::kloc_2d4bd: 	goto loc_2d4bd;
        case m2c::kloc_2d4d8: 	goto loc_2d4d8;
        case m2c::kloc_2d4f9: 	goto loc_2d4f9;
        case m2c::kloc_2d51f: 	goto loc_2d51f;
        case m2c::kloc_2d53e: 	goto loc_2d53e;
        case m2c::kloc_2d591: 	goto loc_2d591;
        case m2c::kloc_2d594: 	goto loc_2d594;
        case m2c::kloc_2d59c: 	goto loc_2d59c;
        case m2c::kloc_2d5ce: 	goto loc_2d5ce;
        case m2c::kloc_2d605: 	goto loc_2d605;
        case m2c::kloc_2d60e: 	goto loc_2d60e;
        case m2c::kloc_2d61a: 	goto loc_2d61a;
        case m2c::kloc_2d631: 	goto loc_2d631;
        case m2c::kloc_2d63f: 	goto loc_2d63f;
        case m2c::kloc_2d648: 	goto loc_2d648;
        case m2c::kloc_2d664: 	goto loc_2d664;
        case m2c::kloc_2d68a: 	goto loc_2d68a;
        case m2c::kloc_2d71b: 	goto loc_2d71b;
        case m2c::kloc_2d71e: 	goto loc_2d71e;
        case m2c::kloc_2d729: 	goto loc_2d729;
        case m2c::kloc_2d749: 	goto loc_2d749;
        case m2c::kloc_2d753: 	goto loc_2d753;
        case m2c::kloc_2d762: 	goto loc_2d762;
        case m2c::kloc_2d76c: 	goto loc_2d76c;
        case m2c::kloc_2d780: 	goto loc_2d780;
        case m2c::kloc_2d7a1: 	goto loc_2d7a1;
        case m2c::kloc_2d7be: 	goto loc_2d7be;
        case m2c::ksub_2c9e4: 	goto sub_2c9e4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2d7c4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2d7c4:
    _begin:
#undef var_20
#define var_20 -0x20
	// 98253 var_20          = word ptr -20h ;~ 17C5:7594
#undef var_1c
#define var_1c -0x1C
	// 98254 var_1C          = word ptr -1Ch ;~ 17C5:7594
#undef var_16
#define var_16 -0x16
	// 98255 var_16          = word ptr -16h ;~ 17C5:7594
#undef var_14
#define var_14 -0x14
	// 98256 var_14          = word ptr -14h ;~ 17C5:7594
#undef var_10
#define var_10 -0x10
	// 98257 var_10          = word ptr -10h ;~ 17C5:7594
#undef var_a
#define var_a -0x0A
	// 98258 var_A           = word ptr -0Ah ;~ 17C5:7594
#undef arg_0
#define arg_0 4
	// 98259 arg_0           = word ptr  4 ;~ 17C5:7594
cs=0x17c5;eip=0x007594; 	X(PUSH(bp));	// 98261                  push    bp ;~ 17C5:7594
cs=0x17c5;eip=0x007595; 	T(bp = sp;);	// 98262                  mov     bp, sp ;~ 17C5:7595
cs=0x17c5;eip=0x007597; 	T(SUB(sp, 0x20));	// 98263                  sub     sp, 20h ;~ 17C5:7597
cs=0x17c5;eip=0x00759a; 	X(PUSH(di));	// 98264                  push    di ;~ 17C5:759A
cs=0x17c5;eip=0x00759b; 	X(PUSH(si));	// 98265                  push    si ;~ 17C5:759B
cs=0x17c5;eip=0x00759c; 	T(bx = word_4ef1c;);	// 98266                  mov     bx, ds:word_4EF1C ;~ 17C5:759C
cs=0x17c5;eip=0x0075a0; 	T(cl = 5;);	// 98267                  mov     cl, 5 ;~ 17C5:75A0
cs=0x17c5;eip=0x0075a2; 	T(SHL(bx, cl));	// 98268                  shl     bx, cl ;~ 17C5:75A2
cs=0x17c5;eip=0x0075a4; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x2E0))));	// 98269                  mov     ax, [bx+2E0h] ;~ 17C5:75A4
cs=0x17c5;eip=0x0075a8; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 98270                  mov     [bp+var_14], ax ;~ 17C5:75A8
cs=0x17c5;eip=0x0075ab; 	T(ax = 0x24;);	// 98271                  mov     ax, 24h ; '$' ;~ 17C5:75AB
cs=0x17c5;eip=0x0075ae; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98272                  imul    [bp+arg_0] ;~ 17C5:75AE
cs=0x17c5;eip=0x0075b1; 	T(si = ax;);	// 98273                  mov     si, ax ;~ 17C5:75B1
cs=0x17c5;eip=0x0075b3; 	T(ax = bp+var_10);	// 98274                  lea     ax, [bp+var_10] ;~ 17C5:75B3
cs=0x17c5;eip=0x0075b6; 	X(PUSH(ax));	// 98275                  push    ax ;~ 17C5:75B6
cs=0x17c5;eip=0x0075b7; 	T(ax = bp+var_a);	// 98276                  lea     ax, [bp+var_A] ;~ 17C5:75B7
cs=0x17c5;eip=0x0075ba; 	X(PUSH(ax));	// 98277                  push    ax ;~ 17C5:75BA
cs=0x17c5;eip=0x0075bb; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 98278                  push    [bp+var_14] ;~ 17C5:75BB
cs=0x17c5;eip=0x0075be; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 98279                  push    word ptr [si-76A8h] ;~ 17C5:75BE
cs=0x17c5;eip=0x0075c2; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 98280                  push    word ptr [si-76AAh] ;~ 17C5:75C2
cs=0x17c5;eip=0x0075c6; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 98281                  push    word ptr [si-76ACh] ;~ 17C5:75C6
cs=0x17c5;eip=0x0075ca; 	J(CALL(sub_2c83e,0));	// 98282                  call    sub_2C83E ;~ 17C5:75CA
cs=0x17c5;eip=0x0075cd; 	T(ADD(sp, 0x0C));	// 98283                  add     sp, 0Ch ;~ 17C5:75CD
cs=0x17c5;eip=0x0075d0; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 98284                  mov     [bp+var_1C], ax ;~ 17C5:75D0
cs=0x17c5;eip=0x0075d3; 	X(word_4992a = 4;);	// 98285                  mov     word_4992A, 4 ;~ 17C5:75D3
cs=0x17c5;eip=0x0075d9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_10))));	// 98286                  mov     ax, [bp+var_10] ;~ 17C5:75D9
cs=0x17c5;eip=0x0075dc; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 98287                  cmp     [bp+var_1C], ax ;~ 17C5:75DC
cs=0x17c5;eip=0x0075df; 	J(JA(loc_2d814));	// 98288                  ja      short loc_2D814 ;~ 17C5:75DF
cs=0x17c5;eip=0x0075e1; 	J(JMP(loc_2da34));	// 98289                  jmp     loc_2DA34 ;~ 17C5:75E1
loc_2d814:
	// 5755 
cs=0x17c5;eip=0x0075e4; 	T(ax = 0x24;);	// 98293                  mov     ax, 24h ; '$' ;~ 17C5:75E4
cs=0x17c5;eip=0x0075e7; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98294                  imul    [bp+arg_0] ;~ 17C5:75E7
cs=0x17c5;eip=0x0075ea; 	T(si = ax;);	// 98295                  mov     si, ax ;~ 17C5:75EA
cs=0x17c5;eip=0x0075ec; 	T(ax = word_492ea;);	// 98296                  mov     ax, word_492EA ;~ 17C5:75EC
cs=0x17c5;eip=0x0075ef; 	T(ADD(ax, word_492e8));	// 98297                  add     ax, word_492E8 ;~ 17C5:75EF
cs=0x17c5;eip=0x0075f3; 	T(cl = 4;);	// 98298                  mov     cl, 4 ;~ 17C5:75F3
cs=0x17c5;eip=0x0075f5; 	T(SHL(ax, cl));	// 98299                  shl     ax, cl ;~ 17C5:75F5
cs=0x17c5;eip=0x0075f7; 	T(ADD(ax, 0x20));	// 98300                  add     ax, 20h ; ' ' ;~ 17C5:75F7
cs=0x17c5;eip=0x0075fa; 	T(cl = *(db*)(&word_4f42e););	// 98301                  mov     cl, byte ptr ds:word_4F42E ;~ 17C5:75FA
cs=0x17c5;eip=0x0075fe; 	T(AND(cl, 0x10));	// 98302                  and     cl, 10h ;~ 17C5:75FE
cs=0x17c5;eip=0x007601; 	T(dx = cx;);	// 98303                  mov     dx, cx ;~ 17C5:7601
cs=0x17c5;eip=0x007603; 	T(CMP(dl, 1));	// 98304                  cmp     dl, 1 ;~ 17C5:7603
cs=0x17c5;eip=0x007606; 	T(SBB(cx, cx));	// 98305                  sbb     cx, cx ;~ 17C5:7606
cs=0x17c5;eip=0x007608; 	T(INC(cx));	// 98306                  inc     cx ;~ 17C5:7608
cs=0x17c5;eip=0x007609; 	T(SAR(ax, cl));	// 98307                  sar     ax, cl ;~ 17C5:7609
cs=0x17c5;eip=0x00760b; 	X(ADD(*(dw*)(raddr(ds,si-0x768C)), ax));	// 98308                  add     [si-768Ch], ax ;~ 17C5:760B
cs=0x17c5;eip=0x00760f; 	T(CMP(*(dw*)(raddr(ds,si-0x768C)), 0x0C0));	// 98309                  cmp     word ptr [si-768Ch], 0C0h ;~ 17C5:760F
cs=0x17c5;eip=0x007615; 	J(JG(loc_2d84a));	// 98310                  jg      short loc_2D84A ;~ 17C5:7615
cs=0x17c5;eip=0x007617; 	J(JMP(loc_2da25));	// 98311                  jmp     loc_2DA25 ;~ 17C5:7617
loc_2d84a:
	// 5756 
cs=0x17c5;eip=0x00761a; 	X(INC(word_522cc));	// 98315                  inc     ds:word_522CC ;~ 17C5:761A
cs=0x17c5;eip=0x00761e; 	X(OR(*(raddr(ds,si-0x7695)), 0x40));	// 98316                  or      byte ptr [si-7695h], 40h ;~ 17C5:761E
cs=0x17c5;eip=0x007623; 	J(CALL(sub_2c8ee,0));	// 98317                  call    sub_2C8EE ;~ 17C5:7623
cs=0x17c5;eip=0x007626; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 98318                  mov     ax, [bp+arg_0] ;~ 17C5:7626
cs=0x17c5;eip=0x007629; 	T(CWD);	// 98319                  cwd ;~ 17C5:7629
cs=0x17c5;eip=0x00762a; 	T(cx = word_492e8;);	// 98320                  mov     cx, word_492E8 ;~ 17C5:762A
cs=0x17c5;eip=0x00762e; 	T(INC(cx));	// 98321                  inc     cx ;~ 17C5:762E
cs=0x17c5;eip=0x00762f; 	T(IDIV2(cx));	// 98322                  idiv    cx ;~ 17C5:762F
cs=0x17c5;eip=0x007631; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), dx));	// 98323                  mov     [bp+var_16], dx ;~ 17C5:7631
cs=0x17c5;eip=0x007634; 	T(ax = word_492e8;);	// 98324                  mov     ax, word_492E8 ;~ 17C5:7634
cs=0x17c5;eip=0x007637; 	T(SHL(ax, 1));	// 98325                  shl     ax, 1 ;~ 17C5:7637
cs=0x17c5;eip=0x007639; 	T(CMP(ax, word_50b76));	// 98326                  cmp     ax, ds:word_50B76 ;~ 17C5:7639
cs=0x17c5;eip=0x00763d; 	J(JGE(loc_2d872));	// 98327                  jge     short loc_2D872 ;~ 17C5:763D
cs=0x17c5;eip=0x00763f; 	J(JMP(loc_2da25));	// 98328                  jmp     loc_2DA25 ;~ 17C5:763F
loc_2d872:
	// 5757 
cs=0x17c5;eip=0x007642; 	T(ax = 0x18;);	// 98332                  mov     ax, 18h ;~ 17C5:7642
cs=0x17c5;eip=0x007645; 	T(IMUL1_2(dx));	// 98333                  imul    dx ;~ 17C5:7645
cs=0x17c5;eip=0x007647; 	T(bx = ax;);	// 98334                  mov     bx, ax ;~ 17C5:7647
cs=0x17c5;eip=0x007649; 	T(CMP(*(dw*)(raddr(ds,bx+0x0D22)), 0));	// 98335                  cmp     word ptr [bx+0D22h], 0 ;~ 17C5:7649
cs=0x17c5;eip=0x00764e; 	J(JZ(loc_2d883));	// 98336                  jz      short loc_2D883 ;~ 17C5:764E
cs=0x17c5;eip=0x007650; 	J(JMP(loc_2da25));	// 98337                  jmp     loc_2DA25 ;~ 17C5:7650
loc_2d883:
	// 5758 
cs=0x17c5;eip=0x007653; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 8));	// 98341                  cmp     [bp+var_10], 8 ;~ 17C5:7653
cs=0x17c5;eip=0x007657; 	J(JA(loc_2d88c));	// 98342                  ja      short loc_2D88C ;~ 17C5:7657
cs=0x17c5;eip=0x007659; 	J(JMP(loc_2da25));	// 98343                  jmp     loc_2DA25 ;~ 17C5:7659
loc_2d88c:
	// 5759 
cs=0x17c5;eip=0x00765c; 	T(ax = 0x24;);	// 98347                  mov     ax, 24h ; '$' ;~ 17C5:765C
cs=0x17c5;eip=0x00765f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98348                  imul    [bp+arg_0] ;~ 17C5:765F
cs=0x17c5;eip=0x007662; 	T(bx = ax;);	// 98349                  mov     bx, ax ;~ 17C5:7662
cs=0x17c5;eip=0x007664; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 98350                  mov     ax, [bp+var_A] ;~ 17C5:7664
cs=0x17c5;eip=0x007667; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x769E))));	// 98351                  sub     ax, [bx-769Eh] ;~ 17C5:7667
cs=0x17c5;eip=0x00766b; 	X(PUSH(ax));	// 98352                  push    ax ;~ 17C5:766B
cs=0x17c5;eip=0x00766c; 	J(CALL(sub_34dc0,0));	// 98353                  call    sub_34DC0 ;~ 17C5:766C
cs=0x17c5;eip=0x00766f; 	T(ADD(sp, 2));	// 98354                  add     sp, 2 ;~ 17C5:766F
cs=0x17c5;eip=0x007672; 	T(CMP(ax, 0x1800));	// 98355                  cmp     ax, 1800h ;~ 17C5:7672
cs=0x17c5;eip=0x007675; 	J(JL(loc_2d8aa));	// 98356                  jl      short loc_2D8AA ;~ 17C5:7675
cs=0x17c5;eip=0x007677; 	J(JMP(loc_2da25));	// 98357                  jmp     loc_2DA25 ;~ 17C5:7677
loc_2d8aa:
	// 5760 
cs=0x17c5;eip=0x00767a; 	T(ax = 0x24;);	// 98361                  mov     ax, 24h ; '$' ;~ 17C5:767A
cs=0x17c5;eip=0x00767d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98362                  imul    [bp+arg_0] ;~ 17C5:767D
cs=0x17c5;eip=0x007680; 	T(si = ax;);	// 98363                  mov     si, ax ;~ 17C5:7680
cs=0x17c5;eip=0x007682; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7690))));	// 98364                  mov     ax, [si-7690h] ;~ 17C5:7682
cs=0x17c5;eip=0x007686; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 98365                  mov     [bp+var_14], ax ;~ 17C5:7686
cs=0x17c5;eip=0x007689; 	T(ax = 0x12;);	// 98366                  mov     ax, 12h ;~ 17C5:7689
cs=0x17c5;eip=0x00768c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_14))));	// 98367                  imul    [bp+var_14] ;~ 17C5:768C
cs=0x17c5;eip=0x00768f; 	T(bx = ax;);	// 98368                  mov     bx, ax ;~ 17C5:768F
cs=0x17c5;eip=0x007691; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_10))));	// 98369                  mov     ax, [bp+var_10] ;~ 17C5:7691
cs=0x17c5;eip=0x007694; 	T(SHR(ax, 1));	// 98370                  shr     ax, 1 ;~ 17C5:7694
cs=0x17c5;eip=0x007696; 	T(CMP(*(dw*)(raddr(ds,bx+0x530)), ax));	// 98371                  cmp     [bx+530h], ax ;~ 17C5:7696
cs=0x17c5;eip=0x00769a; 	J(JA(loc_2d8cf));	// 98372                  ja      short loc_2D8CF ;~ 17C5:769A
cs=0x17c5;eip=0x00769c; 	J(JMP(loc_2da25));	// 98373                  jmp     loc_2DA25 ;~ 17C5:769C
loc_2d8cf:
	// 5761 
cs=0x17c5;eip=0x00769f; 	T(ax = word_492e8;);	// 98377                  mov     ax, word_492E8 ;~ 17C5:769F
cs=0x17c5;eip=0x0076a2; 	T(cx = ax;);	// 98378                  mov     cx, ax ;~ 17C5:76A2
cs=0x17c5;eip=0x0076a4; 	T(SHL(ax, 1));	// 98379                  shl     ax, 1 ;~ 17C5:76A4
cs=0x17c5;eip=0x0076a6; 	T(ADD(ax, cx));	// 98380                  add     ax, cx ;~ 17C5:76A6
cs=0x17c5;eip=0x0076a8; 	T(SUB(ax, 0x10));	// 98381                  sub     ax, 10h ;~ 17C5:76A8
cs=0x17c5;eip=0x0076ab; 	T(NEG(ax));	// 98382                  neg     ax ;~ 17C5:76AB
cs=0x17c5;eip=0x0076ad; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_10))));	// 98383                  cmp     ax, [bp+var_10] ;~ 17C5:76AD
cs=0x17c5;eip=0x0076b0; 	J(JC(loc_2d8e5));	// 98384                  jb      short loc_2D8E5 ;~ 17C5:76B0
cs=0x17c5;eip=0x0076b2; 	J(JMP(loc_2da25));	// 98385                  jmp     loc_2DA25 ;~ 17C5:76B2
loc_2d8e5:
	// 5762 
cs=0x17c5;eip=0x0076b5; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 0x1000));	// 98389                  cmp     [bp+var_10], 1000h ;~ 17C5:76B5
cs=0x17c5;eip=0x0076ba; 	J(JC(loc_2d8ef));	// 98390                  jb      short loc_2D8EF ;~ 17C5:76BA
cs=0x17c5;eip=0x0076bc; 	J(JMP(loc_2da25));	// 98391                  jmp     loc_2DA25 ;~ 17C5:76BC
loc_2d8ef:
	// 5763 
cs=0x17c5;eip=0x0076bf; 	T(CMP(*(dw*)(raddr(ss,bp+var_14)), 0));	// 98395                  cmp     [bp+var_14], 0 ;~ 17C5:76BF
cs=0x17c5;eip=0x0076c3; 	J(JNZ(loc_2d8f8));	// 98396                  jnz     short loc_2D8F8 ;~ 17C5:76C3
cs=0x17c5;eip=0x0076c5; 	J(JMP(loc_2da25));	// 98397                  jmp     loc_2DA25 ;~ 17C5:76C5
loc_2d8f8:
	// 5764 
cs=0x17c5;eip=0x0076c8; 	T(ax = 0x18;);	// 98401                  mov     ax, 18h ;~ 17C5:76C8
cs=0x17c5;eip=0x0076cb; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_16))));	// 98402                  imul    [bp+var_16] ;~ 17C5:76CB
cs=0x17c5;eip=0x0076ce; 	T(di = ax;);	// 98403                  mov     di, ax ;~ 17C5:76CE
cs=0x17c5;eip=0x0076d0; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 98404                  mov     ax, [si-76ACh] ;~ 17C5:76D0
cs=0x17c5;eip=0x0076d4; 	X(MOV(*(dw*)(raddr(ds,di+0x0D14)), ax));	// 98405                  mov     [di+0D14h], ax ;~ 17C5:76D4
cs=0x17c5;eip=0x0076d8; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 98406                  mov     ax, [si-76AAh] ;~ 17C5:76D8
cs=0x17c5;eip=0x0076dc; 	X(MOV(*(dw*)(raddr(ds,di+0x0D16)), ax));	// 98407                  mov     [di+0D16h], ax ;~ 17C5:76DC
cs=0x17c5;eip=0x0076e0; 	T(ax = 0x18;);	// 98408                  mov     ax, 18h ;~ 17C5:76E0
cs=0x17c5;eip=0x0076e3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_16))));	// 98409                  imul    [bp+var_16] ;~ 17C5:76E3
cs=0x17c5;eip=0x0076e6; 	T(si = ax;);	// 98410                  mov     si, ax ;~ 17C5:76E6
cs=0x17c5;eip=0x0076e8; 	T(ax = 0x24;);	// 98411                  mov     ax, 24h ; '$' ;~ 17C5:76E8
cs=0x17c5;eip=0x0076eb; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98412                  imul    [bp+arg_0] ;~ 17C5:76EB
cs=0x17c5;eip=0x0076ee; 	T(di = ax;);	// 98413                  mov     di, ax ;~ 17C5:76EE
cs=0x17c5;eip=0x0076f0; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x76A8))));	// 98414                  mov     ax, [di-76A8h] ;~ 17C5:76F0
cs=0x17c5;eip=0x0076f4; 	T(SUB(ax, 0x19));	// 98415                  sub     ax, 19h ;~ 17C5:76F4
cs=0x17c5;eip=0x0076f7; 	X(MOV(*(dw*)(raddr(ds,si+0x0D18)), ax));	// 98416                  mov     [si+0D18h], ax ;~ 17C5:76F7
cs=0x17c5;eip=0x0076fb; 	T(ax = 0x12;);	// 98417                  mov     ax, 12h ;~ 17C5:76FB
cs=0x17c5;eip=0x0076fe; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_14))));	// 98418                  imul    [bp+var_14] ;~ 17C5:76FE
cs=0x17c5;eip=0x007701; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), ax));	// 98419                  mov     [bp+var_20], ax ;~ 17C5:7701
cs=0x17c5;eip=0x007704; 	T(bx = ax;);	// 98420                  mov     bx, ax ;~ 17C5:7704
cs=0x17c5;eip=0x007706; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x532))));	// 98421                  mov     ax, [bx+532h] ;~ 17C5:7706
cs=0x17c5;eip=0x00770a; 	T(cl = 6;);	// 98422                  mov     cl, 6 ;~ 17C5:770A
cs=0x17c5;eip=0x00770c; 	T(SAR(ax, cl));	// 98423                  sar     ax, cl ;~ 17C5:770C
cs=0x17c5;eip=0x00770e; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1A)), ax));	// 98424                  mov     [si+0D1Ah], ax ;~ 17C5:770E
cs=0x17c5;eip=0x007712; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x769E))));	// 98425                  mov     ax, [di-769Eh] ;~ 17C5:7712
cs=0x17c5;eip=0x007716; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1C)), ax));	// 98426                  mov     [si+0D1Ch], ax ;~ 17C5:7716
cs=0x17c5;eip=0x00771a; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x769C))));	// 98427                  mov     ax, [di-769Ch] ;~ 17C5:771A
cs=0x17c5;eip=0x00771e; 	T(SUB(ax, 0x400));	// 98428                  sub     ax, 400h ;~ 17C5:771E
cs=0x17c5;eip=0x007721; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1E)), ax));	// 98429                  mov     [si+0D1Eh], ax ;~ 17C5:7721
cs=0x17c5;eip=0x007725; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x769A))));	// 98430                  mov     ax, [di-769Ah] ;~ 17C5:7725
cs=0x17c5;eip=0x007729; 	X(MOV(*(dw*)(raddr(ds,si+0x0D20)), ax));	// 98431                  mov     [si+0D20h], ax ;~ 17C5:7729
cs=0x17c5;eip=0x00772d; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D1A))));	// 98432                  mov     ax, [si+0D1Ah] ;~ 17C5:772D
cs=0x17c5;eip=0x007731; 	T(CWD);	// 98433                  cwd ;~ 17C5:7731
cs=0x17c5;eip=0x007732; 	X(PUSH(dx));	// 98434                  push    dx ;~ 17C5:7732
cs=0x17c5;eip=0x007733; 	X(PUSH(ax));	// 98435                  push    ax ;~ 17C5:7733
cs=0x17c5;eip=0x007734; 	T(ax = word_492f4;);	// 98436                  mov     ax, word_492F4 ;~ 17C5:7734
cs=0x17c5;eip=0x007737; 	T(CWD);	// 98437                  cwd ;~ 17C5:7737
cs=0x17c5;eip=0x007738; 	X(PUSH(dx));	// 98438                  push    dx ;~ 17C5:7738
cs=0x17c5;eip=0x007739; 	X(PUSH(ax));	// 98439                  push    ax ;~ 17C5:7739
cs=0x17c5;eip=0x00773a; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_20))));	// 98440                  mov     bx, [bp+var_20] ;~ 17C5:773A
cs=0x17c5;eip=0x00773d; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x530))));	// 98441                  mov     ax, [bx+530h] ;~ 17C5:773D
cs=0x17c5;eip=0x007741; 	T(CWD);	// 98442                  cwd ;~ 17C5:7741
cs=0x17c5;eip=0x007742; 	T(cl = 3;);	// 98443                  mov     cl, 3 ;~ 17C5:7742
loc_2d974:
	// 5765 
cs=0x17c5;eip=0x007744; 	T(SHL(ax, 1));	// 98446                  shl     ax, 1 ;~ 17C5:7744
cs=0x17c5;eip=0x007746; 	T(RCL(dx, 1));	// 98447                  rcl     dx, 1 ;~ 17C5:7746
cs=0x17c5;eip=0x007748; 	T(DEC(cl));	// 98448                  dec     cl ;~ 17C5:7748
cs=0x17c5;eip=0x00774a; 	J(JNZ(loc_2d974));	// 98449                  jnz     short loc_2D974 ;~ 17C5:774A
cs=0x17c5;eip=0x00774c; 	X(PUSH(dx));	// 98450                  push    dx ;~ 17C5:774C
cs=0x17c5;eip=0x00774d; 	X(PUSH(ax));	// 98451                  push    ax ;~ 17C5:774D
cs=0x17c5;eip=0x00774e; 	J(CALL(sub_34ee0,0));	// 98452                  call    sub_34EE0 ;~ 17C5:774E
cs=0x17c5;eip=0x007751; 	X(PUSH(dx));	// 98453                  push    dx ;~ 17C5:7751
cs=0x17c5;eip=0x007752; 	X(PUSH(ax));	// 98454                  push    ax ;~ 17C5:7752
cs=0x17c5;eip=0x007753; 	J(CALL(sub_34e44,0));	// 98455                  call    sub_34E44 ;~ 17C5:7753
cs=0x17c5;eip=0x007756; 	X(MOV(*(dw*)(raddr(ds,si+0x0D22)), ax));	// 98456                  mov     [si+0D22h], ax ;~ 17C5:7756
cs=0x17c5;eip=0x00775a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_14))));	// 98457                  mov     ax, [bp+var_14] ;~ 17C5:775A
cs=0x17c5;eip=0x00775d; 	X(MOV(*(dw*)(raddr(ds,si+0x0D24)), ax));	// 98458                  mov     [si+0D24h], ax ;~ 17C5:775D
cs=0x17c5;eip=0x007761; 	T(ax = 0x18;);	// 98459                  mov     ax, 18h ;~ 17C5:7761
cs=0x17c5;eip=0x007764; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_16))));	// 98460                  imul    [bp+var_16] ;~ 17C5:7764
cs=0x17c5;eip=0x007767; 	T(bx = ax;);	// 98461                  mov     bx, ax ;~ 17C5:7767
cs=0x17c5;eip=0x007769; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 98462                  mov     ax, [bp+arg_0] ;~ 17C5:7769
cs=0x17c5;eip=0x00776c; 	T(NEG(ax));	// 98463                  neg     ax ;~ 17C5:776C
cs=0x17c5;eip=0x00776e; 	X(MOV(*(dw*)(raddr(ds,bx+0x0D2A)), ax));	// 98464                  mov     [bx+0D2Ah], ax ;~ 17C5:776E
cs=0x17c5;eip=0x007772; 	T(ax = 0x12;);	// 98465                  mov     ax, 12h ;~ 17C5:7772
cs=0x17c5;eip=0x007775; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_14))));	// 98466                  imul    [bp+var_14] ;~ 17C5:7775
cs=0x17c5;eip=0x007778; 	T(ADD(ax, 0x528));	// 98467                  add     ax, 528h ;~ 17C5:7778
cs=0x17c5;eip=0x00777b; 	X(PUSH(ax));	// 98468                  push    ax ;~ 17C5:777B
cs=0x17c5;eip=0x00777c; 	T(ax = 0x66C4;);	// 98469                  mov     ax, 66C4h ;~ 17C5:777C
cs=0x17c5;eip=0x00777f; 	X(PUSH(ax));	// 98470                  push    ax ;~ 17C5:777F
cs=0x17c5;eip=0x007780; 	J(CALL(sub_34c1c,0));	// 98471                  call    sub_34C1C ;~ 17C5:7780
cs=0x17c5;eip=0x007783; 	T(ADD(sp, 4));	// 98472                  add     sp, 4 ;~ 17C5:7783
cs=0x17c5;eip=0x007786; 	T(ax = 0x58B0;);	// 98473                  mov     ax, 58B0h ;~ 17C5:7786
cs=0x17c5;eip=0x007789; 	X(PUSH(ax));	// 98474                  push    ax ;~ 17C5:7789
cs=0x17c5;eip=0x00778a; 	T(ax = 0x66C4;);	// 98475                  mov     ax, 66C4h ;~ 17C5:778A
cs=0x17c5;eip=0x00778d; 	X(PUSH(ax));	// 98476                  push    ax ;~ 17C5:778D
cs=0x17c5;eip=0x00778e; 	J(CALL(sub_34bdc,0));	// 98477                  call    sub_34BDC ;~ 17C5:778E
cs=0x17c5;eip=0x007791; 	T(ADD(sp, 4));	// 98478                  add     sp, 4 ;~ 17C5:7791
cs=0x17c5;eip=0x007794; 	T(ax = word_4ef1c;);	// 98479                  mov     ax, ds:word_4EF1C ;~ 17C5:7794
cs=0x17c5;eip=0x007797; 	T(cl = 5;);	// 98480                  mov     cl, 5 ;~ 17C5:7797
cs=0x17c5;eip=0x007799; 	T(SHL(ax, cl));	// 98481                  shl     ax, cl ;~ 17C5:7799
cs=0x17c5;eip=0x00779b; 	T(ADD(ax, 0x2C8));	// 98482                  add     ax, 2C8h ;~ 17C5:779B
cs=0x17c5;eip=0x00779e; 	X(PUSH(ax));	// 98483                  push    ax ;~ 17C5:779E
cs=0x17c5;eip=0x00779f; 	T(ax = 0x66C4;);	// 98484                  mov     ax, 66C4h ;~ 17C5:779F
cs=0x17c5;eip=0x0077a2; 	X(PUSH(ax));	// 98485                  push    ax ;~ 17C5:77A2
cs=0x17c5;eip=0x0077a3; 	J(CALL(sub_34bdc,0));	// 98486                  call    sub_34BDC ;~ 17C5:77A3
cs=0x17c5;eip=0x0077a6; 	T(ADD(sp, 4));	// 98487                  add     sp, 4 ;~ 17C5:77A6
cs=0x17c5;eip=0x0077a9; 	T(ax = 0x66C4;);	// 98488                  mov     ax, 66C4h ;~ 17C5:77A9
cs=0x17c5;eip=0x0077ac; 	X(PUSH(ax));	// 98489                  push    ax ;~ 17C5:77AC
cs=0x17c5;eip=0x0077ad; 	J(CALL(sub_30414,0));	// 98490                  call    sub_30414 ;~ 17C5:77AD
cs=0x17c5;eip=0x0077b0; 	T(ADD(sp, 2));	// 98491                  add     sp, 2 ;~ 17C5:77B0
cs=0x17c5;eip=0x0077b3; 	T(ax = 2;);	// 98492                  mov     ax, 2 ;~ 17C5:77B3
cs=0x17c5;eip=0x0077b6; 	X(PUSH(ax));	// 98493                  push    ax ;~ 17C5:77B6
cs=0x17c5;eip=0x0077b7; 	T(ax = 6;);	// 98494                  mov     ax, 6 ;~ 17C5:77B7
cs=0x17c5;eip=0x0077ba; 	X(PUSH(ax));	// 98495                  push    ax ;~ 17C5:77BA
cs=0x17c5;eip=0x0077bb; 	J(CALL(sub_33c65,0));	// 98496                  call    sub_33C65 ;~ 17C5:77BB
cs=0x17c5;eip=0x0077be; 	T(ADD(sp, 4));	// 98498                  add     sp, 4 ;~ 17C5:77BE
cs=0x17c5;eip=0x0077c1; 	T(LES(bx, dword_528d6));	// 98499                  les     bx, ds:dword_528D6 ;~ 17C5:77C1
cs=0x17c5;eip=0x0077c5; 	X(INC(*(dw*)(raddr(es,bx+0x2C))));	// 98501                  inc     word ptr es:[bx+2Ch] ;~ 17C5:77C5
cs=0x17c5;eip=0x0077c9; 	T(ax = 2;);	// 98502                  mov     ax, 2 ;~ 17C5:77C9
cs=0x17c5;eip=0x0077cc; 	X(PUSH(ax));	// 98503                  push    ax ;~ 17C5:77CC
cs=0x17c5;eip=0x0077cd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 98504                  mov     ax, [bp+arg_0] ;~ 17C5:77CD
cs=0x17c5;eip=0x0077d0; 	T(ADD(ax, 0x20));	// 98505                  add     ax, 20h ; ' ' ;~ 17C5:77D0
cs=0x17c5;eip=0x0077d3; 	X(PUSH(ax));	// 98506                  push    ax ;~ 17C5:77D3
cs=0x17c5;eip=0x0077d4; 	J(CALL(sub_27df3,0));	// 98507                  call    sub_27DF3 ;~ 17C5:77D4
cs=0x17c5;eip=0x0077d7; 	T(ADD(sp, 4));	// 98508                  add     sp, 4 ;~ 17C5:77D7
cs=0x17c5;eip=0x0077da; 	T(ax = 4;);	// 98509                  mov     ax, 4 ;~ 17C5:77DA
cs=0x17c5;eip=0x0077dd; 	X(PUSH(ax));	// 98510                  push    ax ;~ 17C5:77DD
cs=0x17c5;eip=0x0077de; 	J(CALL(sub_33430,0));	// 98511                  call    sub_33430 ;~ 17C5:77DE
cs=0x17c5;eip=0x0077e1; 	T(ADD(sp, 2));	// 98512                  add     sp, 2 ;~ 17C5:77E1
cs=0x17c5;eip=0x0077e4; 	T(OR(ax, ax));	// 98513                  or      ax, ax ;~ 17C5:77E4
cs=0x17c5;eip=0x0077e6; 	J(JNZ(loc_2da25));	// 98514                  jnz     short loc_2DA25 ;~ 17C5:77E6
cs=0x17c5;eip=0x0077e8; 	T(ax = 0x24;);	// 98515                  mov     ax, 24h ; '$' ;~ 17C5:77E8
cs=0x17c5;eip=0x0077eb; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98516                  imul    [bp+arg_0] ;~ 17C5:77EB
cs=0x17c5;eip=0x0077ee; 	T(bx = ax;);	// 98517                  mov     bx, ax ;~ 17C5:77EE
cs=0x17c5;eip=0x0077f0; 	X(OR(*(raddr(ds,bx-0x7696)), 4));	// 98518                  or      byte ptr [bx-7696h], 4 ;~ 17C5:77F0
loc_2da25:
	// 5766 
cs=0x17c5;eip=0x0077f5; 	T(ax = 0x24;);	// 98522                  mov     ax, 24h ; '$' ;~ 17C5:77F5
cs=0x17c5;eip=0x0077f8; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98523                  imul    [bp+arg_0] ;~ 17C5:77F8
cs=0x17c5;eip=0x0077fb; 	T(bx = ax;);	// 98524                  mov     bx, ax ;~ 17C5:77FB
cs=0x17c5;eip=0x0077fd; 	X(OR(*(raddr(ds,bx-0x7696)), 8));	// 98525                  or      byte ptr [bx-7696h], 8 ;~ 17C5:77FD
cs=0x17c5;eip=0x007802; 	J(JMP(loc_2da46));	// 98526                  jmp     short loc_2DA46 ;~ 17C5:7802
loc_2da34:
	// 5767 
cs=0x17c5;eip=0x007804; 	T(ax = 0x24;);	// 98530                  mov     ax, 24h ; '$' ;~ 17C5:7804
cs=0x17c5;eip=0x007807; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98531                  imul    [bp+arg_0] ;~ 17C5:7807
cs=0x17c5;eip=0x00780a; 	T(si = ax;);	// 98532                  mov     si, ax ;~ 17C5:780A
cs=0x17c5;eip=0x00780c; 	X(AND(*(raddr(ds,si-0x7696)), 0x0F7));	// 98533                  and     byte ptr [si-7696h], 0F7h ;~ 17C5:780C
cs=0x17c5;eip=0x007811; 	X(SUB(*(dw*)(raddr(ds,si-0x768C)), 0x20));	// 98534                  sub     word ptr [si-768Ch], 20h ; ' ' ;~ 17C5:7811
loc_2da46:
	// 5768 
cs=0x17c5;eip=0x007816; 	T(ax = 0x24;);	// 98537                  mov     ax, 24h ; '$' ;~ 17C5:7816
cs=0x17c5;eip=0x007819; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98538                  imul    [bp+arg_0] ;~ 17C5:7819
cs=0x17c5;eip=0x00781c; 	T(si = ax;);	// 98539                  mov     si, ax ;~ 17C5:781C
cs=0x17c5;eip=0x00781e; 	T(ADD(si, 0x8974));	// 98540                  add     si, 8974h ;~ 17C5:781E
cs=0x17c5;eip=0x007822; 	T(ax = 0x0FF;);	// 98541                  mov     ax, 0FFh ;~ 17C5:7822
cs=0x17c5;eip=0x007825; 	X(PUSH(ax));	// 98542                  push    ax ;~ 17C5:7825
cs=0x17c5;eip=0x007826; 	T(SUB(ax, ax));	// 98543                  sub     ax, ax ;~ 17C5:7826
cs=0x17c5;eip=0x007828; 	X(PUSH(ax));	// 98544                  push    ax ;~ 17C5:7828
cs=0x17c5;eip=0x007829; 	X(PUSH(*(dw*)(raddr(ds,si))));	// 98545                  push    word ptr [si] ;~ 17C5:7829
cs=0x17c5;eip=0x00782b; 	J(CALL(sub_33194,0));	// 98546                  call    sub_33194 ;~ 17C5:782B
cs=0x17c5;eip=0x00782e; 	T(ADD(sp, 6));	// 98547                  add     sp, 6 ;~ 17C5:782E
cs=0x17c5;eip=0x007831; 	X(MOV(*(dw*)(raddr(ds,si)), ax));	// 98548                  mov     [si], ax ;~ 17C5:7831
cs=0x17c5;eip=0x007833; 	X(POP(si));	// 98549                  pop     si ;~ 17C5:7833
cs=0x17c5;eip=0x007834; 	X(POP(di));	// 98550                  pop     di ;~ 17C5:7834
cs=0x17c5;eip=0x007835; 	T(sp = bp;);	// 98551                  mov     sp, bp ;~ 17C5:7835
cs=0x17c5;eip=0x007837; 	X(POP(bp));	// 98552                  pop     bp ;~ 17C5:7837
cs=0x17c5;eip=0x007838; 	J(RETN(0));	// 98553                  retn ;~ 17C5:7838

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2d814: 	goto loc_2d814;
        case m2c::kloc_2d84a: 	goto loc_2d84a;
        case m2c::kloc_2d872: 	goto loc_2d872;
        case m2c::kloc_2d883: 	goto loc_2d883;
        case m2c::kloc_2d88c: 	goto loc_2d88c;
        case m2c::kloc_2d8aa: 	goto loc_2d8aa;
        case m2c::kloc_2d8cf: 	goto loc_2d8cf;
        case m2c::kloc_2d8e5: 	goto loc_2d8e5;
        case m2c::kloc_2d8ef: 	goto loc_2d8ef;
        case m2c::kloc_2d8f8: 	goto loc_2d8f8;
        case m2c::kloc_2d974: 	goto loc_2d974;
        case m2c::kloc_2da25: 	goto loc_2da25;
        case m2c::kloc_2da34: 	goto loc_2da34;
        case m2c::kloc_2da46: 	goto loc_2da46;
        case m2c::ksub_2d7c4: 	goto sub_2d7c4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2da6a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2da6a:
    _begin:
#undef var_2
#define var_2 -2
	// 98566 var_2           = word ptr -2 ;~ 17C5:783A
#undef arg_0
#define arg_0 4
	// 98567 arg_0           = word ptr  4 ;~ 17C5:783A
#undef arg_2
#define arg_2 6
	// 98568 arg_2           = word ptr  6 ;~ 17C5:783A
cs=0x17c5;eip=0x00783a; 	X(PUSH(bp));	// 98570                  push    bp ;~ 17C5:783A
cs=0x17c5;eip=0x00783b; 	T(bp = sp;);	// 98571                  mov     bp, sp ;~ 17C5:783B
cs=0x17c5;eip=0x00783d; 	T(SUB(sp, 2));	// 98572                  sub     sp, 2 ;~ 17C5:783D
cs=0x17c5;eip=0x007840; 	X(PUSH(di));	// 98573                  push    di ;~ 17C5:7840
cs=0x17c5;eip=0x007841; 	X(PUSH(si));	// 98574                  push    si ;~ 17C5:7841
cs=0x17c5;eip=0x007842; 	T(ax = 0x24;);	// 98575                  mov     ax, 24h ; '$' ;~ 17C5:7842
cs=0x17c5;eip=0x007845; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98576                  imul    [bp+arg_0] ;~ 17C5:7845
cs=0x17c5;eip=0x007848; 	T(si = ax;);	// 98577                  mov     si, ax ;~ 17C5:7848
cs=0x17c5;eip=0x00784a; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7698))));	// 98578                  mov     ax, [si-7698h] ;~ 17C5:784A
cs=0x17c5;eip=0x00784e; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 98579                  mov     [bp+var_2], ax ;~ 17C5:784E
cs=0x17c5;eip=0x007851; 	T(CMP(word_511d8, 1));	// 98580                  cmp     ds:word_511D8, 1 ;~ 17C5:7851
cs=0x17c5;eip=0x007856; 	J(JNZ(loc_2da8c));	// 98581                  jnz     short loc_2DA8C ;~ 17C5:7856
cs=0x17c5;eip=0x007858; 	T(SUB(ax, ax));	// 98582                  sub     ax, ax ;~ 17C5:7858
cs=0x17c5;eip=0x00785a; 	J(JMP(loc_2da8f));	// 98583                  jmp     short loc_2DA8F ;~ 17C5:785A
loc_2da8c:
	// 5769 
cs=0x17c5;eip=0x00785c; 	T(ax = 0x8000;);	// 98587                  mov     ax, 8000h ;~ 17C5:785C
loc_2da8f:
	// 5770 
cs=0x17c5;eip=0x00785f; 	X(MOV(*(dw*)(raddr(ds,si-0x769E)), ax));	// 98590                  mov     [si-769Eh], ax ;~ 17C5:785F
cs=0x17c5;eip=0x007863; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_2))));	// 98591                  mov     di, [bp+arg_2] ;~ 17C5:7863
cs=0x17c5;eip=0x007866; 	T(cl = 4;);	// 98592                  mov     cl, 4 ;~ 17C5:7866
cs=0x17c5;eip=0x007868; 	T(SHL(di, cl));	// 98593                  shl     di, cl ;~ 17C5:7868
cs=0x17c5;eip=0x00786a; 	T(TEST(*(dw*)(raddr(ds,di-0x7E4C)), 0x200));	// 98594                  test    word ptr [di-7E4Ch], 200h ;~ 17C5:786A
cs=0x17c5;eip=0x007870; 	J(JZ(loc_2dade));	// 98595                  jz      short loc_2DADE ;~ 17C5:7870
cs=0x17c5;eip=0x007872; 	T(ax = word_511d8;);	// 98596                  mov     ax, ds:word_511D8 ;~ 17C5:7872
cs=0x17c5;eip=0x007875; 	T(cx = ax;);	// 98597                  mov     cx, ax ;~ 17C5:7875
cs=0x17c5;eip=0x007877; 	T(SHL(ax, 1));	// 98598                  shl     ax, 1 ;~ 17C5:7877
cs=0x17c5;eip=0x007879; 	T(ADD(ax, cx));	// 98599                  add     ax, cx ;~ 17C5:7879
cs=0x17c5;eip=0x00787b; 	T(ADD(ax, *(dw*)(raddr(ds,di-0x7E52))));	// 98600                  add     ax, [di-7E52h] ;~ 17C5:787B
cs=0x17c5;eip=0x00787f; 	X(MOV(*(dw*)(raddr(ds,si-0x76AC)), ax));	// 98601                  mov     [si-76ACh], ax ;~ 17C5:787F
cs=0x17c5;eip=0x007883; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E50))));	// 98602                  mov     ax, [di-7E50h] ;~ 17C5:7883
cs=0x17c5;eip=0x007887; 	T(cx = word_511d8;);	// 98603                  mov     cx, ds:word_511D8 ;~ 17C5:7887
cs=0x17c5;eip=0x00788b; 	T(dx = cx;);	// 98604                  mov     dx, cx ;~ 17C5:788B
cs=0x17c5;eip=0x00788d; 	T(SHL(cx, 1));	// 98605                  shl     cx, 1 ;~ 17C5:788D
cs=0x17c5;eip=0x00788f; 	T(ADD(cx, dx));	// 98606                  add     cx, dx ;~ 17C5:788F
cs=0x17c5;eip=0x007891; 	T(SHL(cx, 1));	// 98607                  shl     cx, 1 ;~ 17C5:7891
cs=0x17c5;eip=0x007893; 	T(SHL(cx, 1));	// 98608                  shl     cx, 1 ;~ 17C5:7893
cs=0x17c5;eip=0x007895; 	T(SUB(ax, cx));	// 98609                  sub     ax, cx ;~ 17C5:7895
cs=0x17c5;eip=0x007897; 	X(MOV(*(dw*)(raddr(ds,si-0x76AA)), ax));	// 98610                  mov     [si-76AAh], ax ;~ 17C5:7897
cs=0x17c5;eip=0x00789b; 	X(MOV(*(dw*)(raddr(ds,si-0x76A8)), 0x8C));	// 98611                  mov     word ptr [si-76A8h], 8Ch ;~ 17C5:789B
cs=0x17c5;eip=0x0078a1; 	X(MOV(*(dw*)(raddr(ds,si-0x7694)), 0x64));	// 98612                  mov     word ptr [si-7694h], 64h ; 'd' ;~ 17C5:78A1
cs=0x17c5;eip=0x0078a7; 	X(ADD(*(raddr(ds,si-0x769D)), 0x0FC));	// 98613                  add     byte ptr [si-769Dh], 0FCh ;~ 17C5:78A7
cs=0x17c5;eip=0x0078ac; 	J(JMP(loc_2db10));	// 98614                  jmp     short loc_2DB10 ;~ 17C5:78AC
loc_2dade:
	// 5771 
cs=0x17c5;eip=0x0078ae; 	T(ax = 0x24;);	// 98618                  mov     ax, 24h ; '$' ;~ 17C5:78AE
cs=0x17c5;eip=0x0078b1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98619                  imul    [bp+arg_0] ;~ 17C5:78B1
cs=0x17c5;eip=0x0078b4; 	T(si = ax;);	// 98620                  mov     si, ax ;~ 17C5:78B4
cs=0x17c5;eip=0x0078b6; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_2))));	// 98621                  mov     di, [bp+arg_2] ;~ 17C5:78B6
cs=0x17c5;eip=0x0078b9; 	T(cl = 4;);	// 98622                  mov     cl, 4 ;~ 17C5:78B9
cs=0x17c5;eip=0x0078bb; 	T(SHL(di, cl));	// 98623                  shl     di, cl ;~ 17C5:78BB
cs=0x17c5;eip=0x0078bd; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x7E52))));	// 98624                  mov     ax, [di-7E52h] ;~ 17C5:78BD
cs=0x17c5;eip=0x0078c1; 	X(MOV(*(dw*)(raddr(ds,si-0x76AC)), ax));	// 98625                  mov     [si-76ACh], ax ;~ 17C5:78C1
cs=0x17c5;eip=0x0078c5; 	T(ax = 0x1E;);	// 98626                  mov     ax, 1Eh ;~ 17C5:78C5
cs=0x17c5;eip=0x0078c8; 	X(IMUL1_2(word_511d8));	// 98627                  imul    ds:word_511D8 ;~ 17C5:78C8
cs=0x17c5;eip=0x0078cc; 	T(ADD(ax, *(dw*)(raddr(ds,di-0x7E50))));	// 98628                  add     ax, [di-7E50h] ;~ 17C5:78CC
cs=0x17c5;eip=0x0078d0; 	X(MOV(*(dw*)(raddr(ds,si-0x76AA)), ax));	// 98629                  mov     [si-76AAh], ax ;~ 17C5:78D0
cs=0x17c5;eip=0x0078d4; 	X(MOV(*(dw*)(raddr(ds,si-0x76A8)), 0x0C));	// 98630                  mov     word ptr [si-76A8h], 0Ch ;~ 17C5:78D4
cs=0x17c5;eip=0x0078da; 	X(MOV(*(dw*)(raddr(ds,si-0x7694)), 0x0A));	// 98631                  mov     word ptr [si-7694h], 0Ah ;~ 17C5:78DA
loc_2db10:
	// 5772 
cs=0x17c5;eip=0x0078e0; 	T(ax = 0x24;);	// 98634                  mov     ax, 24h ; '$' ;~ 17C5:78E0
cs=0x17c5;eip=0x0078e3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98635                  imul    [bp+arg_0] ;~ 17C5:78E3
cs=0x17c5;eip=0x0078e6; 	T(si = ax;);	// 98636                  mov     si, ax ;~ 17C5:78E6
cs=0x17c5;eip=0x0078e8; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 98637                  mov     ax, [si-76ACh] ;~ 17C5:78E8
cs=0x17c5;eip=0x0078ec; 	T(SUB(dx, dx));	// 98638                  sub     dx, dx ;~ 17C5:78EC
cs=0x17c5;eip=0x0078ee; 	T(cl = 5;);	// 98639                  mov     cl, 5 ;~ 17C5:78EE
loc_2db20:
	// 5773 
cs=0x17c5;eip=0x0078f0; 	T(SHL(ax, 1));	// 98642                  shl     ax, 1 ;~ 17C5:78F0
cs=0x17c5;eip=0x0078f2; 	T(RCL(dx, 1));	// 98643                  rcl     dx, 1 ;~ 17C5:78F2
cs=0x17c5;eip=0x0078f4; 	T(DEC(cl));	// 98644                  dec     cl ;~ 17C5:78F4
cs=0x17c5;eip=0x0078f6; 	J(JNZ(loc_2db20));	// 98645                  jnz     short loc_2DB20 ;~ 17C5:78F6
cs=0x17c5;eip=0x0078f8; 	X(MOV(*(dw*)(raddr(ds,si-0x76A6)), ax));	// 98646                  mov     [si-76A6h], ax ;~ 17C5:78F8
cs=0x17c5;eip=0x0078fc; 	X(MOV(*(dw*)(raddr(ds,si-0x76A4)), dx));	// 98647                  mov     [si-76A4h], dx ;~ 17C5:78FC
cs=0x17c5;eip=0x007900; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 98648                  mov     ax, [si-76AAh] ;~ 17C5:7900
cs=0x17c5;eip=0x007904; 	T(SUB(dx, dx));	// 98649                  sub     dx, dx ;~ 17C5:7904
cs=0x17c5;eip=0x007906; 	T(cl = 5;);	// 98650                  mov     cl, 5 ;~ 17C5:7906
loc_2db38:
	// 5774 
cs=0x17c5;eip=0x007908; 	T(SHL(ax, 1));	// 98653                  shl     ax, 1 ;~ 17C5:7908
cs=0x17c5;eip=0x00790a; 	T(RCL(dx, 1));	// 98654                  rcl     dx, 1 ;~ 17C5:790A
cs=0x17c5;eip=0x00790c; 	T(DEC(cl));	// 98655                  dec     cl ;~ 17C5:790C
cs=0x17c5;eip=0x00790e; 	J(JNZ(loc_2db38));	// 98656                  jnz     short loc_2DB38 ;~ 17C5:790E
cs=0x17c5;eip=0x007910; 	X(MOV(*(dw*)(raddr(ds,si-0x76A2)), ax));	// 98657                  mov     [si-76A2h], ax ;~ 17C5:7910
cs=0x17c5;eip=0x007914; 	X(MOV(*(dw*)(raddr(ds,si-0x76A0)), dx));	// 98658                  mov     [si-76A0h], dx ;~ 17C5:7914
cs=0x17c5;eip=0x007918; 	X(MOV(*(dw*)(raddr(ds,si-0x769C)), 0));	// 98659                  mov     word ptr [si-769Ch], 0 ;~ 17C5:7918
cs=0x17c5;eip=0x00791e; 	X(MOV(*(dw*)(raddr(ds,si-0x769A)), 0));	// 98660                  mov     word ptr [si-769Ah], 0 ;~ 17C5:791E
cs=0x17c5;eip=0x007924; 	X(OR(*(dw*)(raddr(ds,si-0x7696)), 0x403));	// 98661                  or      word ptr [si-7696h], 403h ;~ 17C5:7924
cs=0x17c5;eip=0x00792a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 98662                  mov     ax, [bp+arg_2] ;~ 17C5:792A
cs=0x17c5;eip=0x00792d; 	X(MOV(*(dw*)(raddr(ds,si-0x76AE)), ax));	// 98663                  mov     [si-76AEh], ax ;~ 17C5:792D
cs=0x17c5;eip=0x007931; 	T(MOV(di, *(dw*)(raddr(ss,bp+var_2))));	// 98664                  mov     di, [bp+var_2] ;~ 17C5:7931
cs=0x17c5;eip=0x007934; 	T(cl = 5;);	// 98665                  mov     cl, 5 ;~ 17C5:7934
cs=0x17c5;eip=0x007936; 	T(SHL(di, cl));	// 98666                  shl     di, cl ;~ 17C5:7936
cs=0x17c5;eip=0x007938; 	T(MOV(ax, *(dw*)(raddr(ds,di+0x2DA))));	// 98667                  mov     ax, [di+2DAh] ;~ 17C5:7938
cs=0x17c5;eip=0x00793c; 	T(CWD);	// 98668                  cwd ;~ 17C5:793C
cs=0x17c5;eip=0x00793d; 	X(PUSH(dx));	// 98669                  push    dx ;~ 17C5:793D
cs=0x17c5;eip=0x00793e; 	X(PUSH(ax));	// 98670                  push    ax ;~ 17C5:793E
cs=0x17c5;eip=0x00793f; 	T(ax = word_492f4;);	// 98671                  mov     ax, word_492F4 ;~ 17C5:793F
cs=0x17c5;eip=0x007942; 	T(CWD);	// 98672                  cwd ;~ 17C5:7942
cs=0x17c5;eip=0x007943; 	X(PUSH(dx));	// 98673                  push    dx ;~ 17C5:7943
cs=0x17c5;eip=0x007944; 	X(PUSH(ax));	// 98674                  push    ax ;~ 17C5:7944
cs=0x17c5;eip=0x007945; 	T(MOV(ax, *(dw*)(raddr(ds,di+0x2DC))));	// 98675                  mov     ax, [di+2DCh] ;~ 17C5:7945
cs=0x17c5;eip=0x007949; 	T(CWD);	// 98676                  cwd ;~ 17C5:7949
cs=0x17c5;eip=0x00794a; 	T(cl = 0x0B;);	// 98677                  mov     cl, 0Bh ;~ 17C5:794A
loc_2db7c:
	// 5775 
cs=0x17c5;eip=0x00794c; 	T(SHL(ax, 1));	// 98680                  shl     ax, 1 ;~ 17C5:794C
cs=0x17c5;eip=0x00794e; 	T(RCL(dx, 1));	// 98681                  rcl     dx, 1 ;~ 17C5:794E
cs=0x17c5;eip=0x007950; 	T(DEC(cl));	// 98682                  dec     cl ;~ 17C5:7950
cs=0x17c5;eip=0x007952; 	J(JNZ(loc_2db7c));	// 98683                  jnz     short loc_2DB7C ;~ 17C5:7952
cs=0x17c5;eip=0x007954; 	X(PUSH(dx));	// 98684                  push    dx ;~ 17C5:7954
cs=0x17c5;eip=0x007955; 	X(PUSH(ax));	// 98685                  push    ax ;~ 17C5:7955
cs=0x17c5;eip=0x007956; 	J(CALL(sub_34ee0,0));	// 98686                  call    sub_34EE0 ;~ 17C5:7956
cs=0x17c5;eip=0x007959; 	X(PUSH(dx));	// 98687                  push    dx ;~ 17C5:7959
cs=0x17c5;eip=0x00795a; 	X(PUSH(ax));	// 98688                  push    ax ;~ 17C5:795A
cs=0x17c5;eip=0x00795b; 	J(CALL(sub_34e44,0));	// 98689                  call    sub_34E44 ;~ 17C5:795B
cs=0x17c5;eip=0x00795e; 	X(MOV(*(dw*)(raddr(ds,si-0x7692)), ax));	// 98690                  mov     [si-7692h], ax ;~ 17C5:795E
cs=0x17c5;eip=0x007962; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_2))));	// 98691                  mov     di, [bp+arg_2] ;~ 17C5:7962
cs=0x17c5;eip=0x007965; 	T(cl = 4;);	// 98692                  mov     cl, 4 ;~ 17C5:7965
cs=0x17c5;eip=0x007967; 	T(SHL(di, cl));	// 98693                  shl     di, cl ;~ 17C5:7967
cs=0x17c5;eip=0x007969; 	X(PUSH(*(dw*)(raddr(ds,di-0x7E50))));	// 98694                  push    word ptr [di-7E50h] ;~ 17C5:7969
cs=0x17c5;eip=0x00796d; 	X(PUSH(*(dw*)(raddr(ds,di-0x7E52))));	// 98695                  push    word ptr [di-7E52h] ;~ 17C5:796D
cs=0x17c5;eip=0x007971; 	J(CALL(sub_2fc7d,0));	// 98696                  call    sub_2FC7D ;~ 17C5:7971
cs=0x17c5;eip=0x007974; 	T(ADD(sp, 4));	// 98697                  add     sp, 4 ;~ 17C5:7974
cs=0x17c5;eip=0x007977; 	X(MOV(*(dw*)(raddr(ds,si-0x768E)), ax));	// 98698                  mov     [si-768Eh], ax ;~ 17C5:7977
cs=0x17c5;eip=0x00797b; 	T(CMP(word_4992c, 0x0FFFF));	// 98699                  cmp     word_4992C, 0FFFFh ;~ 17C5:797B
cs=0x17c5;eip=0x007980; 	J(JNZ(loc_2dbbf));	// 98700                  jnz     short loc_2DBBF ;~ 17C5:7980
cs=0x17c5;eip=0x007982; 	T(ax = 0x24;);	// 98701                  mov     ax, 24h ; '$' ;~ 17C5:7982
cs=0x17c5;eip=0x007985; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98702                  imul    [bp+arg_0] ;~ 17C5:7985
cs=0x17c5;eip=0x007988; 	T(bx = ax;);	// 98703                  mov     bx, ax ;~ 17C5:7988
cs=0x17c5;eip=0x00798a; 	X(AND(*(raddr(ds,bx-0x7695)), 0x0FE));	// 98704                  and     byte ptr [bx-7695h], 0FEh ;~ 17C5:798A
loc_2dbbf:
	// 5776 
cs=0x17c5;eip=0x00798f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 98707                  push    [bp+arg_2] ;~ 17C5:798F
cs=0x17c5;eip=0x007992; 	J(CALL(sub_27f9e,0));	// 98708                  call    sub_27F9E ;~ 17C5:7992
cs=0x17c5;eip=0x007995; 	T(ADD(sp, 2));	// 98709                  add     sp, 2 ;~ 17C5:7995
cs=0x17c5;eip=0x007998; 	T(ax = 0x58BB;);	// 98710                  mov     ax, 58BBh ;~ 17C5:7998
cs=0x17c5;eip=0x00799b; 	X(PUSH(ax));	// 98711                  push    ax ;~ 17C5:799B
cs=0x17c5;eip=0x00799c; 	T(ax = 0x66C4;);	// 98712                  mov     ax, 66C4h ;~ 17C5:799C
cs=0x17c5;eip=0x00799f; 	X(PUSH(ax));	// 98713                  push    ax ;~ 17C5:799F
cs=0x17c5;eip=0x0079a0; 	J(CALL(sub_34bdc,0));	// 98714                  call    sub_34BDC ;~ 17C5:79A0
cs=0x17c5;eip=0x0079a3; 	T(ADD(sp, 4));	// 98715                  add     sp, 4 ;~ 17C5:79A3
cs=0x17c5;eip=0x0079a6; 	T(ax = 0x24;);	// 98716                  mov     ax, 24h ; '$' ;~ 17C5:79A6
cs=0x17c5;eip=0x0079a9; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 98717                  imul    [bp+arg_0] ;~ 17C5:79A9
cs=0x17c5;eip=0x0079ac; 	T(bx = ax;);	// 98718                  mov     bx, ax ;~ 17C5:79AC
cs=0x17c5;eip=0x0079ae; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7698))));	// 98719                  mov     ax, [bx-7698h] ;~ 17C5:79AE
cs=0x17c5;eip=0x0079b2; 	T(cl = 5;);	// 98720                  mov     cl, 5 ;~ 17C5:79B2
cs=0x17c5;eip=0x0079b4; 	T(SHL(ax, cl));	// 98721                  shl     ax, cl ;~ 17C5:79B4
cs=0x17c5;eip=0x0079b6; 	T(ADD(ax, 0x2C8));	// 98722                  add     ax, 2C8h ;~ 17C5:79B6
cs=0x17c5;eip=0x0079b9; 	X(PUSH(ax));	// 98723                  push    ax ;~ 17C5:79B9
cs=0x17c5;eip=0x0079ba; 	T(ax = 0x66C4;);	// 98724                  mov     ax, 66C4h ;~ 17C5:79BA
cs=0x17c5;eip=0x0079bd; 	X(PUSH(ax));	// 98725                  push    ax ;~ 17C5:79BD
cs=0x17c5;eip=0x0079be; 	J(CALL(sub_34bdc,0));	// 98726                  call    sub_34BDC ;~ 17C5:79BE
cs=0x17c5;eip=0x0079c1; 	T(ADD(sp, 4));	// 98727                  add     sp, 4 ;~ 17C5:79C1
cs=0x17c5;eip=0x0079c4; 	T(ax = 0x58BF;);	// 98728                  mov     ax, 58BFh ;~ 17C5:79C4
cs=0x17c5;eip=0x0079c7; 	X(PUSH(ax));	// 98729                  push    ax ;~ 17C5:79C7
cs=0x17c5;eip=0x0079c8; 	T(ax = 0x66C4;);	// 98730                  mov     ax, 66C4h ;~ 17C5:79C8
cs=0x17c5;eip=0x0079cb; 	X(PUSH(ax));	// 98731                  push    ax ;~ 17C5:79CB
cs=0x17c5;eip=0x0079cc; 	J(CALL(sub_34bdc,0));	// 98732                  call    sub_34BDC ;~ 17C5:79CC
cs=0x17c5;eip=0x0079cf; 	T(ADD(sp, 4));	// 98733                  add     sp, 4 ;~ 17C5:79CF
cs=0x17c5;eip=0x0079d2; 	T(ax = word_52276;);	// 98734                  mov     ax, ds:word_52276 ;~ 17C5:79D2
cs=0x17c5;eip=0x0079d5; 	T(SUB(ax, 4));	// 98735                  sub     ax, 4 ;~ 17C5:79D5
cs=0x17c5;eip=0x0079d8; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 98736                  cmp     [bp+arg_0], ax ;~ 17C5:79D8
cs=0x17c5;eip=0x0079db; 	J(JGE(loc_2dc17));	// 98737                  jge     short loc_2DC17 ;~ 17C5:79DB
cs=0x17c5;eip=0x0079dd; 	T(ax = 0x66C4;);	// 98738                  mov     ax, 66C4h ;~ 17C5:79DD
cs=0x17c5;eip=0x0079e0; 	X(PUSH(ax));	// 98739                  push    ax ;~ 17C5:79E0
cs=0x17c5;eip=0x0079e1; 	J(CALL(sub_30414,0));	// 98740                  call    sub_30414 ;~ 17C5:79E1
cs=0x17c5;eip=0x0079e4; 	T(ADD(sp, 2));	// 98741                  add     sp, 2 ;~ 17C5:79E4
loc_2dc17:
	// 5777 
cs=0x17c5;eip=0x0079e7; 	X(POP(si));	// 98744                  pop     si ;~ 17C5:79E7
cs=0x17c5;eip=0x0079e8; 	X(POP(di));	// 98745                  pop     di ;~ 17C5:79E8
cs=0x17c5;eip=0x0079e9; 	T(sp = bp;);	// 98746                  mov     sp, bp ;~ 17C5:79E9
cs=0x17c5;eip=0x0079eb; 	X(POP(bp));	// 98747                  pop     bp ;~ 17C5:79EB
cs=0x17c5;eip=0x0079ec; 	J(RETN(0));	// 98748                  retn ;~ 17C5:79EC

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2da8c: 	goto loc_2da8c;
        case m2c::kloc_2da8f: 	goto loc_2da8f;
        case m2c::kloc_2dade: 	goto loc_2dade;
        case m2c::kloc_2db10: 	goto loc_2db10;
        case m2c::kloc_2db20: 	goto loc_2db20;
        case m2c::kloc_2db38: 	goto loc_2db38;
        case m2c::kloc_2db7c: 	goto loc_2db7c;
        case m2c::kloc_2dbbf: 	goto loc_2dbbf;
        case m2c::kloc_2dc17: 	goto loc_2dc17;
        case m2c::ksub_2da6a: 	goto sub_2da6a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2dc1e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2dc1e:
    _begin:
#undef var_36
#define var_36 -0x36
	// 98760 var_36          = word ptr -36h ;~ 17C5:79EE
#undef var_34
#define var_34 -0x34
	// 98761 var_34          = word ptr -34h ;~ 17C5:79EE
#undef var_32
#define var_32 -0x32
	// 98762 var_32          = word ptr -32h ;~ 17C5:79EE
#undef var_30
#define var_30 -0x30
	// 98763 var_30          = word ptr -30h ;~ 17C5:79EE
#undef var_2c
#define var_2c -0x2C
	// 98764 var_2C          = word ptr -2Ch ;~ 17C5:79EE
#undef var_2a
#define var_2a -0x2A
	// 98765 var_2A          = word ptr -2Ah ;~ 17C5:79EE
#undef var_26
#define var_26 -0x26
	// 98766 var_26          = word ptr -26h ;~ 17C5:79EE
#undef var_24
#define var_24 -0x24
	// 98767 var_24          = word ptr -24h ;~ 17C5:79EE
#undef var_22
#define var_22 -0x22
	// 98768 var_22          = word ptr -22h ;~ 17C5:79EE
#undef var_20
#define var_20 -0x20
	// 98769 var_20          = word ptr -20h ;~ 17C5:79EE
#undef var_1c
#define var_1c -0x1C
	// 98770 var_1C          = word ptr -1Ch ;~ 17C5:79EE
#undef var_1a
#define var_1a -0x1A
	// 98771 var_1A          = word ptr -1Ah ;~ 17C5:79EE
#undef var_16
#define var_16 -0x16
	// 98772 var_16          = word ptr -16h ;~ 17C5:79EE
#undef var_14
#define var_14 -0x14
	// 98773 var_14          = word ptr -14h ;~ 17C5:79EE
#undef var_12
#define var_12 -0x12
	// 98774 var_12          = word ptr -12h ;~ 17C5:79EE
#undef var_10
#define var_10 -0x10
	// 98775 var_10          = word ptr -10h ;~ 17C5:79EE
#undef var_e
#define var_e -0x0E
	// 98776 var_E           = word ptr -0Eh ;~ 17C5:79EE
#undef var_6
#define var_6 -6
	// 98777 var_6           = word ptr -6 ;~ 17C5:79EE
#undef var_4
#define var_4 -4
	// 98778 var_4           = word ptr -4 ;~ 17C5:79EE
#undef var_2
#define var_2 -2
	// 98779 var_2           = word ptr -2 ;~ 17C5:79EE
cs=0x17c5;eip=0x0079ee; 	X(PUSH(bp));	// 98781                  push    bp ;~ 17C5:79EE
cs=0x17c5;eip=0x0079ef; 	T(bp = sp;);	// 98782                  mov     bp, sp ;~ 17C5:79EF
cs=0x17c5;eip=0x0079f1; 	T(SUB(sp, 0x36));	// 98783                  sub     sp, 36h ;~ 17C5:79F1
cs=0x17c5;eip=0x0079f4; 	X(PUSH(di));	// 98784                  push    di ;~ 17C5:79F4
cs=0x17c5;eip=0x0079f5; 	X(PUSH(si));	// 98785                  push    si ;~ 17C5:79F5
cs=0x17c5;eip=0x0079f6; 	T(ax = 8;);	// 98786                  mov     ax, 8 ;~ 17C5:79F6
cs=0x17c5;eip=0x0079f9; 	X(PUSH(ax));	// 98787                  push    ax ;~ 17C5:79F9
cs=0x17c5;eip=0x0079fa; 	T(SUB(ax, ax));	// 98788                  sub     ax, ax ;~ 17C5:79FA
cs=0x17c5;eip=0x0079fc; 	X(PUSH(ax));	// 98789                  push    ax ;~ 17C5:79FC
cs=0x17c5;eip=0x0079fd; 	J(CALL(sub_300e6,0));	// 98790                  call    sub_300E6 ;~ 17C5:79FD
cs=0x17c5;eip=0x007a00; 	T(ADD(sp, 4));	// 98791                  add     sp, 4 ;~ 17C5:7A00
cs=0x17c5;eip=0x007a03; 	T(ax = 8;);	// 98792                  mov     ax, 8 ;~ 17C5:7A03
cs=0x17c5;eip=0x007a06; 	X(PUSH(ax));	// 98793                  push    ax ;~ 17C5:7A06
cs=0x17c5;eip=0x007a07; 	T(ax = 1;);	// 98794                  mov     ax, 1 ;~ 17C5:7A07
cs=0x17c5;eip=0x007a0a; 	X(PUSH(ax));	// 98795                  push    ax ;~ 17C5:7A0A
cs=0x17c5;eip=0x007a0b; 	J(CALL(sub_300e6,0));	// 98796                  call    sub_300E6 ;~ 17C5:7A0B
cs=0x17c5;eip=0x007a0e; 	T(ADD(sp, 4));	// 98797                  add     sp, 4 ;~ 17C5:7A0E
cs=0x17c5;eip=0x007a11; 	T(CMP(*(word_4960a), 0));	// 98798                  cmp     word_4960A, 0 ;~ 17C5:7A11
cs=0x17c5;eip=0x007a16; 	J(JZ(loc_2dc54));	// 98799                  jz      short loc_2DC54 ;~ 17C5:7A16
cs=0x17c5;eip=0x007a18; 	T(ax = word_49602;);	// 98800                  mov     ax, word_49602 ;~ 17C5:7A18
cs=0x17c5;eip=0x007a1b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 98801                  mov     [bp+var_2A], ax ;~ 17C5:7A1B
cs=0x17c5;eip=0x007a1e; 	T(ax = word_49604;);	// 98802                  mov     ax, word_49604 ;~ 17C5:7A1E
cs=0x17c5;eip=0x007a21; 	J(JMP(loc_2dc5d));	// 98803                  jmp     short loc_2DC5D ;~ 17C5:7A21
loc_2dc54:
	// 5778 
cs=0x17c5;eip=0x007a24; 	T(ax = word_520f0;);	// 98808                  mov     ax, ds:word_520F0 ;~ 17C5:7A24
cs=0x17c5;eip=0x007a27; 	X(MOV(*(dw*)(raddr(ss,bp+var_2a)), ax));	// 98809                  mov     [bp+var_2A], ax ;~ 17C5:7A27
cs=0x17c5;eip=0x007a2a; 	T(ax = word_52100;);	// 98810                  mov     ax, ds:word_52100 ;~ 17C5:7A2A
loc_2dc5d:
	// 5779 
cs=0x17c5;eip=0x007a2d; 	X(MOV(*(dw*)(raddr(ss,bp+var_30)), ax));	// 98813                  mov     [bp+var_30], ax ;~ 17C5:7A2D
cs=0x17c5;eip=0x007a30; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), 0));	// 98814                  mov     [bp+var_1C], 0 ;~ 17C5:7A30
cs=0x17c5;eip=0x007a35; 	J(JMP(loc_2e627));	// 98815                  jmp     loc_2E627 ;~ 17C5:7A35
loc_2dc68:
	// 5780 
cs=0x17c5;eip=0x007a38; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), 0x7FFF));	// 98819                  mov     [bp+var_10], 7FFFh ;~ 17C5:7A38
cs=0x17c5;eip=0x007a3d; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 7));	// 98820                  cmp     [bp+var_22], 7 ;~ 17C5:7A3D
cs=0x17c5;eip=0x007a41; 	J(JZ(loc_2dc76));	// 98821                  jz      short loc_2DC76 ;~ 17C5:7A41
cs=0x17c5;eip=0x007a43; 	J(JMP(loc_2dd0e));	// 98822                  jmp     loc_2DD0E ;~ 17C5:7A43
loc_2dc76:
	// 5781 
cs=0x17c5;eip=0x007a46; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), 0));	// 98826                  mov     [bp+var_20], 0 ;~ 17C5:7A46
cs=0x17c5;eip=0x007a4b; 	J(JMP(loc_2dd03));	// 98827                  jmp     loc_2DD03 ;~ 17C5:7A4B
loc_2dc7e:
	// 5782 
cs=0x17c5;eip=0x007a4e; 	T(ax = 0x24;);	// 98831                  mov     ax, 24h ; '$' ;~ 17C5:7A4E
cs=0x17c5;eip=0x007a51; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_20))));	// 98832                  imul    [bp+var_20] ;~ 17C5:7A51
cs=0x17c5;eip=0x007a54; 	T(si = ax;);	// 98833                  mov     si, ax ;~ 17C5:7A54
cs=0x17c5;eip=0x007a56; 	T(TEST(*(raddr(ds,si-0x7696)), 2));	// 98834                  test    byte ptr [si-7696h], 2 ;~ 17C5:7A56
cs=0x17c5;eip=0x007a5b; 	J(JZ(loc_2dd00));	// 98835                  jz      short loc_2DD00 ;~ 17C5:7A5B
cs=0x17c5;eip=0x007a5d; 	T(CMP(*(dw*)(raddr(ds,si-0x7694)), 0));	// 98836                  cmp     word ptr [si-7694h], 0 ;~ 17C5:7A5D
cs=0x17c5;eip=0x007a62; 	J(JZ(loc_2dd00));	// 98837                  jz      short loc_2DD00 ;~ 17C5:7A62
cs=0x17c5;eip=0x007a64; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 98838                  push    [bp+var_22] ;~ 17C5:7A64
cs=0x17c5;eip=0x007a67; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 98839                  push    word ptr [si-76A8h] ;~ 17C5:7A67
cs=0x17c5;eip=0x007a6b; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 98840                  push    word ptr [si-76AAh] ;~ 17C5:7A6B
cs=0x17c5;eip=0x007a6f; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 98841                  push    word ptr [si-76ACh] ;~ 17C5:7A6F
cs=0x17c5;eip=0x007a73; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 98842                  push    [bp+var_1C] ;~ 17C5:7A73
cs=0x17c5;eip=0x007a76; 	J(CALL(sub_2e7ee,0));	// 98843                  call    sub_2E7EE ;~ 17C5:7A76
cs=0x17c5;eip=0x007a79; 	T(ADD(sp, 0x0A));	// 98844                  add     sp, 0Ah ;~ 17C5:7A79
cs=0x17c5;eip=0x007a7c; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 98845                  mov     [bp+var_2], ax ;~ 17C5:7A7C
cs=0x17c5;eip=0x007a7f; 	T(ax = word_4ef20;);	// 98846                  mov     ax, ds:word_4EF20 ;~ 17C5:7A7F
cs=0x17c5;eip=0x007a82; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), ax));	// 98847                  cmp     [bp+var_10], ax ;~ 17C5:7A82
cs=0x17c5;eip=0x007a85; 	J(JBE(loc_2dd00));	// 98848                  jbe     short loc_2DD00 ;~ 17C5:7A85
cs=0x17c5;eip=0x007a87; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0));	// 98849                  cmp     [bp+var_2], 0 ;~ 17C5:7A87
cs=0x17c5;eip=0x007a8b; 	J(JZ(loc_2dd00));	// 98850                  jz      short loc_2DD00 ;~ 17C5:7A8B
cs=0x17c5;eip=0x007a8d; 	T(ax = word_4ef22;);	// 98851                  mov     ax, ds:word_4EF22 ;~ 17C5:7A8D
cs=0x17c5;eip=0x007a90; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 98852                  mov     [bp+var_6], ax ;~ 17C5:7A90
cs=0x17c5;eip=0x007a93; 	T(ax = word_4ef20;);	// 98853                  mov     ax, ds:word_4EF20 ;~ 17C5:7A93
cs=0x17c5;eip=0x007a96; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 98854                  mov     [bp+var_10], ax ;~ 17C5:7A96
cs=0x17c5;eip=0x007a99; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 98855                  mov     ax, [bp+var_20] ;~ 17C5:7A99
cs=0x17c5;eip=0x007a9c; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 98856                  mov     [bp+var_14], ax ;~ 17C5:7A9C
cs=0x17c5;eip=0x007a9f; 	T(ax = 0x24;);	// 98857                  mov     ax, 24h ; '$' ;~ 17C5:7A9F
cs=0x17c5;eip=0x007aa2; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_20))));	// 98858                  imul    [bp+var_20] ;~ 17C5:7AA2
cs=0x17c5;eip=0x007aa5; 	T(si = ax;);	// 98859                  mov     si, ax ;~ 17C5:7AA5
cs=0x17c5;eip=0x007aa7; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 98860                  mov     ax, [si-76A8h] ;~ 17C5:7AA7
cs=0x17c5;eip=0x007aab; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 98861                  mov     [bp+var_32], ax ;~ 17C5:7AAB
cs=0x17c5;eip=0x007aae; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 1));	// 98862                  mov     [bp+var_4], 1 ;~ 17C5:7AAE
cs=0x17c5;eip=0x007ab3; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 0x180));	// 98863                  cmp     [bp+var_10], 180h ;~ 17C5:7AB3
cs=0x17c5;eip=0x007ab8; 	J(JNC(loc_2dd00));	// 98864                  jnb     short loc_2DD00 ;~ 17C5:7AB8
cs=0x17c5;eip=0x007aba; 	X(OR(*(raddr(ds,si-0x7696)), 0x10));	// 98865                  or      byte ptr [si-7696h], 10h ;~ 17C5:7ABA
cs=0x17c5;eip=0x007abf; 	T(ax = 1;);	// 98866                  mov     ax, 1 ;~ 17C5:7ABF
cs=0x17c5;eip=0x007ac2; 	X(PUSH(ax));	// 98867                  push    ax ;~ 17C5:7AC2
cs=0x17c5;eip=0x007ac3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 98868                  mov     ax, [bp+var_20] ;~ 17C5:7AC3
cs=0x17c5;eip=0x007ac6; 	T(ADD(ax, 0x20));	// 98869                  add     ax, 20h ; ' ' ;~ 17C5:7AC6
cs=0x17c5;eip=0x007ac9; 	X(PUSH(ax));	// 98870                  push    ax ;~ 17C5:7AC9
cs=0x17c5;eip=0x007aca; 	J(CALL(sub_27df3,0));	// 98871                  call    sub_27DF3 ;~ 17C5:7ACA
cs=0x17c5;eip=0x007acd; 	T(ADD(sp, 4));	// 98872                  add     sp, 4 ;~ 17C5:7ACD
loc_2dd00:
	// 5783 
cs=0x17c5;eip=0x007ad0; 	X(INC(*(dw*)(raddr(ss,bp+var_20))));	// 98876                  inc     [bp+var_20] ;~ 17C5:7AD0
loc_2dd03:
	// 5784 
cs=0x17c5;eip=0x007ad3; 	T(ax = word_52276;);	// 98879                  mov     ax, ds:word_52276 ;~ 17C5:7AD3
cs=0x17c5;eip=0x007ad6; 	T(CMP(*(dw*)(raddr(ss,bp+var_20)), ax));	// 98880                  cmp     [bp+var_20], ax ;~ 17C5:7AD6
cs=0x17c5;eip=0x007ad9; 	J(JGE(loc_2dd0e));	// 98881                  jge     short loc_2DD0E ;~ 17C5:7AD9
cs=0x17c5;eip=0x007adb; 	J(JMP(loc_2dc7e));	// 98882                  jmp     loc_2DC7E ;~ 17C5:7ADB
loc_2dd0e:
	// 5785 
cs=0x17c5;eip=0x007ade; 	T(ax = 0x18;);	// 98887                  mov     ax, 18h ;~ 17C5:7ADE
cs=0x17c5;eip=0x007ae1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 98888                  imul    [bp+var_1C] ;~ 17C5:7AE1
cs=0x17c5;eip=0x007ae4; 	T(si = ax;);	// 98889                  mov     si, ax ;~ 17C5:7AE4
cs=0x17c5;eip=0x007ae6; 	T(ax = 0x12;);	// 98890                  mov     ax, 12h ;~ 17C5:7AE6
cs=0x17c5;eip=0x007ae9; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_12))));	// 98891                  imul    [bp+var_12] ;~ 17C5:7AE9
cs=0x17c5;eip=0x007aec; 	T(bx = ax;);	// 98892                  mov     bx, ax ;~ 17C5:7AEC
cs=0x17c5;eip=0x007aee; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x532))));	// 98893                  mov     ax, [bx+532h] ;~ 17C5:7AEE
cs=0x17c5;eip=0x007af2; 	T(cl = 6;);	// 98894                  mov     cl, 6 ;~ 17C5:7AF2
cs=0x17c5;eip=0x007af4; 	T(SAR(ax, cl));	// 98895                  sar     ax, cl ;~ 17C5:7AF4
cs=0x17c5;eip=0x007af6; 	T(CMP(ax, *(dw*)(raddr(ds,si+0x0D1A))));	// 98896                  cmp     ax, [si+0D1Ah] ;~ 17C5:7AF6
cs=0x17c5;eip=0x007afa; 	J(JLE(loc_2dd3e));	// 98897                  jle     short loc_2DD3E ;~ 17C5:7AFA
cs=0x17c5;eip=0x007afc; 	T(TEST(*(db*)(&word_49918), 1));	// 98898                  test    byte ptr word_49918, 1 ;~ 17C5:7AFC
cs=0x17c5;eip=0x007b01; 	J(JZ(loc_2dd3e));	// 98899                  jz      short loc_2DD3E ;~ 17C5:7B01
cs=0x17c5;eip=0x007b03; 	X(INC(*(dw*)(raddr(ds,si+0x0D1A))));	// 98900                  inc     word ptr [si+0D1Ah] ;~ 17C5:7B03
cs=0x17c5;eip=0x007b07; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D1C))));	// 98901                  mov     ax, [si+0D1Ch] ;~ 17C5:7B07
cs=0x17c5;eip=0x007b0b; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 98902                  mov     [bp+var_6], ax ;~ 17C5:7B0B
loc_2dd3e:
	// 5786 
cs=0x17c5;eip=0x007b0e; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 4));	// 98906                  cmp     [bp+var_22], 4 ;~ 17C5:7B0E
cs=0x17c5;eip=0x007b12; 	J(JZ(loc_2dd59));	// 98907                  jz      short loc_2DD59 ;~ 17C5:7B12
cs=0x17c5;eip=0x007b14; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 6));	// 98908                  cmp     [bp+var_22], 6 ;~ 17C5:7B14
cs=0x17c5;eip=0x007b18; 	J(JZ(loc_2dd59));	// 98909                  jz      short loc_2DD59 ;~ 17C5:7B18
cs=0x17c5;eip=0x007b1a; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 5));	// 98910                  cmp     [bp+var_22], 5 ;~ 17C5:7B1A
cs=0x17c5;eip=0x007b1e; 	J(JZ(loc_2dd59));	// 98911                  jz      short loc_2DD59 ;~ 17C5:7B1E
cs=0x17c5;eip=0x007b20; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1C));	// 98912                  cmp     [bp+var_22], 1Ch ;~ 17C5:7B20
cs=0x17c5;eip=0x007b24; 	J(JZ(loc_2dd59));	// 98913                  jz      short loc_2DD59 ;~ 17C5:7B24
cs=0x17c5;eip=0x007b26; 	J(JMP(loc_2de77));	// 98914                  jmp     loc_2DE77 ;~ 17C5:7B26
loc_2dd59:
	// 5787 
cs=0x17c5;eip=0x007b29; 	T(ax = 0x18;);	// 98919                  mov     ax, 18h ;~ 17C5:7B29
cs=0x17c5;eip=0x007b2c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 98920                  imul    [bp+var_1C] ;~ 17C5:7B2C
cs=0x17c5;eip=0x007b2f; 	T(bx = ax;);	// 98921                  mov     bx, ax ;~ 17C5:7B2F
cs=0x17c5;eip=0x007b31; 	T(CMP(*(dw*)(raddr(ds,bx+0x0D28)), 0x0FFFF));	// 98922                  cmp     word ptr [bx+0D28h], 0FFFFh ;~ 17C5:7B31
cs=0x17c5;eip=0x007b36; 	J(JZ(loc_2dd6b));	// 98923                  jz      short loc_2DD6B ;~ 17C5:7B36
cs=0x17c5;eip=0x007b38; 	J(JMP(loc_2de10));	// 98924                  jmp     loc_2DE10 ;~ 17C5:7B38
loc_2dd6b:
	// 5788 
cs=0x17c5;eip=0x007b3b; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), 0));	// 98928                  mov     [bp+var_20], 0 ;~ 17C5:7B3B
cs=0x17c5;eip=0x007b40; 	J(JMP(loc_2dd75));	// 98929                  jmp     short loc_2DD75 ;~ 17C5:7B40
loc_2dd72:
	// 5789 
cs=0x17c5;eip=0x007b42; 	X(INC(*(dw*)(raddr(ss,bp+var_20))));	// 98934                  inc     [bp+var_20] ;~ 17C5:7B42
loc_2dd75:
	// 5790 
cs=0x17c5;eip=0x007b45; 	T(ax = word_52102;);	// 98937                  mov     ax, ds:word_52102 ;~ 17C5:7B45
cs=0x17c5;eip=0x007b48; 	T(CMP(*(dw*)(raddr(ss,bp+var_20)), ax));	// 98938                  cmp     [bp+var_20], ax ;~ 17C5:7B48
cs=0x17c5;eip=0x007b4b; 	J(JL(loc_2dd80));	// 98939                  jl      short loc_2DD80 ;~ 17C5:7B4B
cs=0x17c5;eip=0x007b4d; 	J(JMP(loc_2de77));	// 98940                  jmp     loc_2DE77 ;~ 17C5:7B4D
loc_2dd80:
	// 5791 
cs=0x17c5;eip=0x007b50; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 4));	// 98944                  cmp     [bp+var_22], 4 ;~ 17C5:7B50
cs=0x17c5;eip=0x007b54; 	J(JNZ(loc_2dd94));	// 98945                  jnz     short loc_2DD94 ;~ 17C5:7B54
cs=0x17c5;eip=0x007b56; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_20))));	// 98946                  mov     bx, [bp+var_20] ;~ 17C5:7B56
cs=0x17c5;eip=0x007b59; 	T(cl = 4;);	// 98947                  mov     cl, 4 ;~ 17C5:7B59
cs=0x17c5;eip=0x007b5b; 	T(SHL(bx, cl));	// 98948                  shl     bx, cl ;~ 17C5:7B5B
cs=0x17c5;eip=0x007b5d; 	T(CMP(*(dw*)(raddr(ds,bx-0x7E4E)), 0));	// 98949                  cmp     word ptr [bx-7E4Eh], 0 ;~ 17C5:7B5D
cs=0x17c5;eip=0x007b62; 	J(JZ(loc_2dd72));	// 98950                  jz      short loc_2DD72 ;~ 17C5:7B62
loc_2dd94:
	// 5792 
cs=0x17c5;eip=0x007b64; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 5));	// 98953                  cmp     [bp+var_22], 5 ;~ 17C5:7B64
cs=0x17c5;eip=0x007b68; 	J(JZ(loc_2dda0));	// 98954                  jz      short loc_2DDA0 ;~ 17C5:7B68
cs=0x17c5;eip=0x007b6a; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 6));	// 98955                  cmp     [bp+var_22], 6 ;~ 17C5:7B6A
cs=0x17c5;eip=0x007b6e; 	J(JNZ(loc_2ddae));	// 98956                  jnz     short loc_2DDAE ;~ 17C5:7B6E
loc_2dda0:
	// 5793 
cs=0x17c5;eip=0x007b70; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_20))));	// 98959                  mov     bx, [bp+var_20] ;~ 17C5:7B70
cs=0x17c5;eip=0x007b73; 	T(cl = 4;);	// 98960                  mov     cl, 4 ;~ 17C5:7B73
cs=0x17c5;eip=0x007b75; 	T(SHL(bx, cl));	// 98961                  shl     bx, cl ;~ 17C5:7B75
cs=0x17c5;eip=0x007b77; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 8));	// 98962                  test    byte ptr [bx-7E4Ch], 8 ;~ 17C5:7B77
cs=0x17c5;eip=0x007b7c; 	J(JNZ(loc_2ddc2));	// 98963                  jnz     short loc_2DDC2 ;~ 17C5:7B7C
loc_2ddae:
	// 5794 
cs=0x17c5;eip=0x007b7e; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 5));	// 98966                  cmp     [bp+var_22], 5 ;~ 17C5:7B7E
cs=0x17c5;eip=0x007b82; 	J(JZ(loc_2dd72));	// 98967                  jz      short loc_2DD72 ;~ 17C5:7B82
cs=0x17c5;eip=0x007b84; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_20))));	// 98968                  mov     bx, [bp+var_20] ;~ 17C5:7B84
cs=0x17c5;eip=0x007b87; 	T(cl = 4;);	// 98969                  mov     cl, 4 ;~ 17C5:7B87
cs=0x17c5;eip=0x007b89; 	T(SHL(bx, cl));	// 98970                  shl     bx, cl ;~ 17C5:7B89
cs=0x17c5;eip=0x007b8b; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 8));	// 98971                  test    byte ptr [bx-7E4Ch], 8 ;~ 17C5:7B8B
cs=0x17c5;eip=0x007b90; 	J(JNZ(loc_2dd72));	// 98972                  jnz     short loc_2DD72 ;~ 17C5:7B90
loc_2ddc2:
	// 5795 
cs=0x17c5;eip=0x007b92; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_20))));	// 98975                  mov     si, [bp+var_20] ;~ 17C5:7B92
cs=0x17c5;eip=0x007b95; 	T(cl = 4;);	// 98976                  mov     cl, 4 ;~ 17C5:7B95
cs=0x17c5;eip=0x007b97; 	T(SHL(si, cl));	// 98977                  shl     si, cl ;~ 17C5:7B97
cs=0x17c5;eip=0x007b99; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 98978                  push    [bp+var_22] ;~ 17C5:7B99
cs=0x17c5;eip=0x007b9c; 	T(SUB(ax, ax));	// 98979                  sub     ax, ax ;~ 17C5:7B9C
cs=0x17c5;eip=0x007b9e; 	X(PUSH(ax));	// 98980                  push    ax ;~ 17C5:7B9E
cs=0x17c5;eip=0x007b9f; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 98981                  push    word ptr [si-7E50h] ;~ 17C5:7B9F
cs=0x17c5;eip=0x007ba3; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 98982                  push    word ptr [si-7E52h] ;~ 17C5:7BA3
cs=0x17c5;eip=0x007ba7; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 98983                  push    [bp+var_1C] ;~ 17C5:7BA7
cs=0x17c5;eip=0x007baa; 	J(CALL(sub_2e7ee,0));	// 98984                  call    sub_2E7EE ;~ 17C5:7BAA
cs=0x17c5;eip=0x007bad; 	T(ADD(sp, 0x0A));	// 98985                  add     sp, 0Ah ;~ 17C5:7BAD
cs=0x17c5;eip=0x007bb0; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 98986                  mov     [bp+var_2], ax ;~ 17C5:7BB0
cs=0x17c5;eip=0x007bb3; 	T(ax = word_4ef20;);	// 98987                  mov     ax, ds:word_4EF20 ;~ 17C5:7BB3
cs=0x17c5;eip=0x007bb6; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), ax));	// 98988                  cmp     [bp+var_10], ax ;~ 17C5:7BB6
cs=0x17c5;eip=0x007bb9; 	J(JBE(loc_2dd72));	// 98989                  jbe     short loc_2DD72 ;~ 17C5:7BB9
cs=0x17c5;eip=0x007bbb; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0));	// 98990                  cmp     [bp+var_2], 0 ;~ 17C5:7BBB
cs=0x17c5;eip=0x007bbf; 	J(JZ(loc_2dd72));	// 98991                  jz      short loc_2DD72 ;~ 17C5:7BBF
cs=0x17c5;eip=0x007bc1; 	T(ax = word_4ef22;);	// 98992                  mov     ax, ds:word_4EF22 ;~ 17C5:7BC1
cs=0x17c5;eip=0x007bc4; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 98993                  mov     [bp+var_6], ax ;~ 17C5:7BC4
cs=0x17c5;eip=0x007bc7; 	T(ax = word_4ef20;);	// 98994                  mov     ax, ds:word_4EF20 ;~ 17C5:7BC7
cs=0x17c5;eip=0x007bca; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 98995                  mov     [bp+var_10], ax ;~ 17C5:7BCA
cs=0x17c5;eip=0x007bcd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 98996                  mov     ax, [bp+var_20] ;~ 17C5:7BCD
cs=0x17c5;eip=0x007bd0; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 98997                  mov     [bp+var_14], ax ;~ 17C5:7BD0
cs=0x17c5;eip=0x007bd3; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), 0));	// 98998                  mov     [bp+var_32], 0 ;~ 17C5:7BD3
cs=0x17c5;eip=0x007bd8; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 1));	// 98999                  mov     [bp+var_4], 1 ;~ 17C5:7BD8
cs=0x17c5;eip=0x007bdd; 	J(JMP(loc_2dd72));	// 99000                  jmp     loc_2DD72 ;~ 17C5:7BDD
loc_2de10:
	// 5796 
cs=0x17c5;eip=0x007be0; 	T(ax = 0x18;);	// 99004                  mov     ax, 18h ;~ 17C5:7BE0
cs=0x17c5;eip=0x007be3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99005                  imul    [bp+var_1C] ;~ 17C5:7BE3
cs=0x17c5;eip=0x007be6; 	T(bx = ax;);	// 99006                  mov     bx, ax ;~ 17C5:7BE6
cs=0x17c5;eip=0x007be8; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0D28))));	// 99007                  mov     ax, [bx+0D28h] ;~ 17C5:7BE8
cs=0x17c5;eip=0x007bec; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), ax));	// 99008                  mov     [bp+var_20], ax ;~ 17C5:7BEC
cs=0x17c5;eip=0x007bef; 	T(si = ax;);	// 99009                  mov     si, ax ;~ 17C5:7BEF
cs=0x17c5;eip=0x007bf1; 	T(cl = 4;);	// 99010                  mov     cl, 4 ;~ 17C5:7BF1
cs=0x17c5;eip=0x007bf3; 	T(SHL(si, cl));	// 99011                  shl     si, cl ;~ 17C5:7BF3
cs=0x17c5;eip=0x007bf5; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 99012                  push    [bp+var_22] ;~ 17C5:7BF5
cs=0x17c5;eip=0x007bf8; 	T(SUB(ax, ax));	// 99013                  sub     ax, ax ;~ 17C5:7BF8
cs=0x17c5;eip=0x007bfa; 	X(PUSH(ax));	// 99014                  push    ax ;~ 17C5:7BFA
cs=0x17c5;eip=0x007bfb; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 99015                  push    word ptr [si-7E50h] ;~ 17C5:7BFB
cs=0x17c5;eip=0x007bff; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 99016                  push    word ptr [si-7E52h] ;~ 17C5:7BFF
cs=0x17c5;eip=0x007c03; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 99017                  push    [bp+var_1C] ;~ 17C5:7C03
cs=0x17c5;eip=0x007c06; 	J(CALL(sub_2e7ee,0));	// 99018                  call    sub_2E7EE ;~ 17C5:7C06
cs=0x17c5;eip=0x007c09; 	T(ADD(sp, 0x0A));	// 99019                  add     sp, 0Ah ;~ 17C5:7C09
cs=0x17c5;eip=0x007c0c; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 99020                  mov     [bp+var_2], ax ;~ 17C5:7C0C
cs=0x17c5;eip=0x007c0f; 	T(OR(ax, ax));	// 99021                  or      ax, ax ;~ 17C5:7C0F
cs=0x17c5;eip=0x007c11; 	J(JZ(loc_2de77));	// 99022                  jz      short loc_2DE77 ;~ 17C5:7C11
cs=0x17c5;eip=0x007c13; 	T(ax = word_4ef22;);	// 99023                  mov     ax, ds:word_4EF22 ;~ 17C5:7C13
cs=0x17c5;eip=0x007c16; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 99024                  mov     [bp+var_6], ax ;~ 17C5:7C16
cs=0x17c5;eip=0x007c19; 	T(ax = word_4ef20;);	// 99025                  mov     ax, ds:word_4EF20 ;~ 17C5:7C19
cs=0x17c5;eip=0x007c1c; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 99026                  mov     [bp+var_10], ax ;~ 17C5:7C1C
cs=0x17c5;eip=0x007c1f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 99027                  mov     ax, [bp+var_20] ;~ 17C5:7C1F
cs=0x17c5;eip=0x007c22; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 99028                  mov     [bp+var_14], ax ;~ 17C5:7C22
cs=0x17c5;eip=0x007c25; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), 0));	// 99029                  mov     [bp+var_32], 0 ;~ 17C5:7C25
cs=0x17c5;eip=0x007c2a; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 1));	// 99030                  mov     [bp+var_4], 1 ;~ 17C5:7C2A
cs=0x17c5;eip=0x007c2f; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 0x0C0));	// 99031                  cmp     [bp+var_10], 0C0h ;~ 17C5:7C2F
cs=0x17c5;eip=0x007c34; 	J(JNC(loc_2de77));	// 99032                  jnb     short loc_2DE77 ;~ 17C5:7C34
cs=0x17c5;eip=0x007c36; 	T(ax = 1;);	// 99033                  mov     ax, 1 ;~ 17C5:7C36
cs=0x17c5;eip=0x007c39; 	X(PUSH(ax));	// 99034                  push    ax ;~ 17C5:7C39
cs=0x17c5;eip=0x007c3a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 99035                  mov     ax, [bp+var_20] ;~ 17C5:7C3A
cs=0x17c5;eip=0x007c3d; 	T(ADD(ax, 0x40));	// 99036                  add     ax, 40h ; '@' ;~ 17C5:7C3D
cs=0x17c5;eip=0x007c40; 	X(PUSH(ax));	// 99037                  push    ax ;~ 17C5:7C40
cs=0x17c5;eip=0x007c41; 	J(CALL(sub_27df3,0));	// 99038                  call    sub_27DF3 ;~ 17C5:7C41
cs=0x17c5;eip=0x007c44; 	T(ADD(sp, 4));	// 99039                  add     sp, 4 ;~ 17C5:7C44
loc_2de77:
	// 5797 
cs=0x17c5;eip=0x007c47; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 99043                  cmp     [bp+var_4], 0 ;~ 17C5:7C47
cs=0x17c5;eip=0x007c4b; 	J(JNZ(loc_2de80));	// 99044                  jnz     short loc_2DE80 ;~ 17C5:7C4B
cs=0x17c5;eip=0x007c4d; 	J(JMP(loc_2df17));	// 99045                  jmp     loc_2DF17 ;~ 17C5:7C4D
loc_2de80:
	// 5798 
cs=0x17c5;eip=0x007c50; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99049                  cmp     [bp+var_1C], 8 ;~ 17C5:7C50
cs=0x17c5;eip=0x007c54; 	J(JL(loc_2de89));	// 99050                  jl      short loc_2DE89 ;~ 17C5:7C54
cs=0x17c5;eip=0x007c56; 	J(JMP(loc_2df17));	// 99051                  jmp     loc_2DF17 ;~ 17C5:7C56
loc_2de89:
	// 5799 
cs=0x17c5;eip=0x007c59; 	T(ax = 0x18;);	// 99055                  mov     ax, 18h ;~ 17C5:7C59
cs=0x17c5;eip=0x007c5c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99056                  imul    [bp+var_1C] ;~ 17C5:7C5C
cs=0x17c5;eip=0x007c5f; 	T(bx = ax;);	// 99057                  mov     bx, ax ;~ 17C5:7C5F
cs=0x17c5;eip=0x007c61; 	T(ax = word_4ef22;);	// 99058                  mov     ax, ds:word_4EF22 ;~ 17C5:7C61
cs=0x17c5;eip=0x007c64; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0D1C))));	// 99059                  sub     ax, [bx+0D1Ch] ;~ 17C5:7C64
cs=0x17c5;eip=0x007c68; 	X(PUSH(ax));	// 99060                  push    ax ;~ 17C5:7C68
cs=0x17c5;eip=0x007c69; 	J(CALL(sub_34dc0,0));	// 99061                  call    sub_34DC0 ;~ 17C5:7C69
cs=0x17c5;eip=0x007c6c; 	T(ADD(sp, 2));	// 99062                  add     sp, 2 ;~ 17C5:7C6C
cs=0x17c5;eip=0x007c6f; 	T(CMP(ax, 0x1000));	// 99063                  cmp     ax, 1000h ;~ 17C5:7C6F
cs=0x17c5;eip=0x007c72; 	J(JGE(loc_2df17));	// 99064                  jge     short loc_2DF17 ;~ 17C5:7C72
cs=0x17c5;eip=0x007c74; 	T(CMP(*(word_4960a), 0));	// 99065                  cmp     word_4960A, 0 ;~ 17C5:7C74
cs=0x17c5;eip=0x007c79; 	J(JNZ(loc_2df17));	// 99066                  jnz     short loc_2DF17 ;~ 17C5:7C79
cs=0x17c5;eip=0x007c7b; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 99067                  cmp     [bp+var_22], 0 ;~ 17C5:7C7B
cs=0x17c5;eip=0x007c7f; 	J(JG(loc_2dec6));	// 99068                  jg      short loc_2DEC6 ;~ 17C5:7C7F
cs=0x17c5;eip=0x007c81; 	T(TEST(*(db*)(&word_49918), 2));	// 99069                  test    byte ptr word_49918, 2 ;~ 17C5:7C81
cs=0x17c5;eip=0x007c86; 	J(JZ(loc_2dec6));	// 99070                  jz      short loc_2DEC6 ;~ 17C5:7C86
cs=0x17c5;eip=0x007c88; 	T(ax = 0x0C;);	// 99071                  mov     ax, 0Ch ;~ 17C5:7C88
cs=0x17c5;eip=0x007c8b; 	X(PUSH(ax));	// 99072                  push    ax ;~ 17C5:7C8B
cs=0x17c5;eip=0x007c8c; 	T(ax = 1;);	// 99073                  mov     ax, 1 ;~ 17C5:7C8C
cs=0x17c5;eip=0x007c8f; 	X(PUSH(ax));	// 99074                  push    ax ;~ 17C5:7C8F
cs=0x17c5;eip=0x007c90; 	J(CALL(sub_300e6,0));	// 99075                  call    sub_300E6 ;~ 17C5:7C90
cs=0x17c5;eip=0x007c93; 	T(ADD(sp, 4));	// 99076                  add     sp, 4 ;~ 17C5:7C93
loc_2dec6:
	// 5800 
cs=0x17c5;eip=0x007c96; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 99080                  cmp     [bp+var_22], 0 ;~ 17C5:7C96
cs=0x17c5;eip=0x007c9a; 	J(JZ(loc_2dee0));	// 99081                  jz      short loc_2DEE0 ;~ 17C5:7C9A
cs=0x17c5;eip=0x007c9c; 	T(TEST(*(db*)(&word_49918), 2));	// 99082                  test    byte ptr word_49918, 2 ;~ 17C5:7C9C
cs=0x17c5;eip=0x007ca1; 	J(JNZ(loc_2dee0));	// 99083                  jnz     short loc_2DEE0 ;~ 17C5:7CA1
cs=0x17c5;eip=0x007ca3; 	T(ax = 0x0E;);	// 99084                  mov     ax, 0Eh ;~ 17C5:7CA3
cs=0x17c5;eip=0x007ca6; 	X(PUSH(ax));	// 99085                  push    ax ;~ 17C5:7CA6
cs=0x17c5;eip=0x007ca7; 	T(SUB(ax, ax));	// 99086                  sub     ax, ax ;~ 17C5:7CA7
cs=0x17c5;eip=0x007ca9; 	X(PUSH(ax));	// 99087                  push    ax ;~ 17C5:7CA9
cs=0x17c5;eip=0x007caa; 	J(CALL(sub_300e6,0));	// 99088                  call    sub_300E6 ;~ 17C5:7CAA
cs=0x17c5;eip=0x007cad; 	T(ADD(sp, 4));	// 99089                  add     sp, 4 ;~ 17C5:7CAD
loc_2dee0:
	// 5801 
cs=0x17c5;eip=0x007cb0; 	T(TEST(*(db*)(&word_49918), 3));	// 99093                  test    byte ptr word_49918, 3 ;~ 17C5:7CB0
cs=0x17c5;eip=0x007cb5; 	J(JNZ(loc_2df17));	// 99094                  jnz     short loc_2DF17 ;~ 17C5:7CB5
cs=0x17c5;eip=0x007cb7; 	T(ax = 0x18;);	// 99095                  mov     ax, 18h ;~ 17C5:7CB7
cs=0x17c5;eip=0x007cba; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99096                  imul    [bp+var_1C] ;~ 17C5:7CBA
cs=0x17c5;eip=0x007cbd; 	T(bx = ax;);	// 99097                  mov     bx, ax ;~ 17C5:7CBD
cs=0x17c5;eip=0x007cbf; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0D1A))));	// 99098                  mov     ax, [bx+0D1Ah] ;~ 17C5:7CBF
cs=0x17c5;eip=0x007cc3; 	T(cl = 5;);	// 99099                  mov     cl, 5 ;~ 17C5:7CC3
cs=0x17c5;eip=0x007cc5; 	T(SHL(ax, cl));	// 99100                  shl     ax, cl ;~ 17C5:7CC5
cs=0x17c5;eip=0x007cc7; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_10))));	// 99101                  cmp     ax, [bp+var_10] ;~ 17C5:7CC7
cs=0x17c5;eip=0x007cca; 	J(JBE(loc_2df17));	// 99102                  jbe     short loc_2DF17 ;~ 17C5:7CCA
cs=0x17c5;eip=0x007ccc; 	T(ax = 1;);	// 99103                  mov     ax, 1 ;~ 17C5:7CCC
cs=0x17c5;eip=0x007ccf; 	X(PUSH(ax));	// 99104                  push    ax ;~ 17C5:7CCF
cs=0x17c5;eip=0x007cd0; 	T(ax = 0x0A;);	// 99105                  mov     ax, 0Ah ;~ 17C5:7CD0
cs=0x17c5;eip=0x007cd3; 	X(PUSH(ax));	// 99106                  push    ax ;~ 17C5:7CD3
cs=0x17c5;eip=0x007cd4; 	J(CALL(sub_33c65,0));	// 99107                  call    sub_33C65 ;~ 17C5:7CD4
cs=0x17c5;eip=0x007cd7; 	T(ADD(sp, 4));	// 99109                  add     sp, 4 ;~ 17C5:7CD7
cs=0x17c5;eip=0x007cda; 	T(ax = 2;);	// 99110                  mov     ax, 2 ;~ 17C5:7CDA
cs=0x17c5;eip=0x007cdd; 	X(PUSH(ax));	// 99111                  push    ax ;~ 17C5:7CDD
cs=0x17c5;eip=0x007cde; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 99112                  push    [bp+var_1C] ;~ 17C5:7CDE
cs=0x17c5;eip=0x007ce1; 	J(CALL(sub_27df3,0));	// 99113                  call    sub_27DF3 ;~ 17C5:7CE1
cs=0x17c5;eip=0x007ce4; 	T(ADD(sp, 4));	// 99114                  add     sp, 4 ;~ 17C5:7CE4
loc_2df17:
	// 5802 
cs=0x17c5;eip=0x007ce7; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), 0));	// 99118                  cmp     [bp+var_6], 0 ;~ 17C5:7CE7
cs=0x17c5;eip=0x007ceb; 	J(JNZ(loc_2df20));	// 99119                  jnz     short loc_2DF20 ;~ 17C5:7CEB
cs=0x17c5;eip=0x007ced; 	J(JMP(loc_2e078));	// 99120                  jmp     loc_2E078 ;~ 17C5:7CED
loc_2df20:
	// 5803 
cs=0x17c5;eip=0x007cf0; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 99124                  cmp     [bp+var_4], 0 ;~ 17C5:7CF0
cs=0x17c5;eip=0x007cf4; 	J(JNZ(loc_2df29));	// 99125                  jnz     short loc_2DF29 ;~ 17C5:7CF4
cs=0x17c5;eip=0x007cf6; 	J(JMP(loc_2e078));	// 99126                  jmp     loc_2E078 ;~ 17C5:7CF6
loc_2df29:
	// 5804 
cs=0x17c5;eip=0x007cf9; 	T(ax = 0x18;);	// 99130                  mov     ax, 18h ;~ 17C5:7CF9
cs=0x17c5;eip=0x007cfc; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99131                  imul    [bp+var_1C] ;~ 17C5:7CFC
cs=0x17c5;eip=0x007cff; 	T(bx = ax;);	// 99132                  mov     bx, ax ;~ 17C5:7CFF
cs=0x17c5;eip=0x007d01; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 99133                  mov     ax, [bp+var_6] ;~ 17C5:7D01
cs=0x17c5;eip=0x007d04; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0D1C))));	// 99134                  sub     ax, [bx+0D1Ch] ;~ 17C5:7D04
cs=0x17c5;eip=0x007d08; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 99135                  mov     [bp+var_1A], ax ;~ 17C5:7D08
cs=0x17c5;eip=0x007d0b; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99136                  cmp     [bp+var_1C], 8 ;~ 17C5:7D0B
cs=0x17c5;eip=0x007d0f; 	J(JGE(loc_2df62));	// 99137                  jge     short loc_2DF62 ;~ 17C5:7D0F
cs=0x17c5;eip=0x007d11; 	T(ah = *(db*)(&word_492e8););	// 99138                  mov     ah, byte ptr word_492E8 ;~ 17C5:7D11
cs=0x17c5;eip=0x007d15; 	T(SUB(al, al));	// 99139                  sub     al, al ;~ 17C5:7D15
cs=0x17c5;eip=0x007d17; 	T(ADD(ah, 1));	// 99140                  add     ah, 1 ;~ 17C5:7D17
cs=0x17c5;eip=0x007d1a; 	X(PUSH(ax));	// 99141                  push    ax ;~ 17C5:7D1A
cs=0x17c5;eip=0x007d1b; 	T(ax = word_492e8;);	// 99142                  mov     ax, word_492E8 ;~ 17C5:7D1B
cs=0x17c5;eip=0x007d1e; 	T(INC(ax));	// 99143                  inc     ax ;~ 17C5:7D1E
cs=0x17c5;eip=0x007d1f; 	T(NEG(ax));	// 99144                  neg     ax ;~ 17C5:7D1F
cs=0x17c5;eip=0x007d21; 	T(ch = al;);	// 99145                  mov     ch, al ;~ 17C5:7D21
cs=0x17c5;eip=0x007d23; 	T(SUB(cl, cl));	// 99146                  sub     cl, cl ;~ 17C5:7D23
cs=0x17c5;eip=0x007d25; 	X(PUSH(cx));	// 99147                  push    cx ;~ 17C5:7D25
cs=0x17c5;eip=0x007d26; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1a))));	// 99148                  push    [bp+var_1A] ;~ 17C5:7D26
cs=0x17c5;eip=0x007d29; 	J(CALL(sub_33194,0));	// 99149                  call    sub_33194 ;~ 17C5:7D29
cs=0x17c5;eip=0x007d2c; 	T(ADD(sp, 6));	// 99150                  add     sp, 6 ;~ 17C5:7D2C
cs=0x17c5;eip=0x007d2f; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 99151                  mov     [bp+var_1A], ax ;~ 17C5:7D2F
loc_2df62:
	// 5805 
cs=0x17c5;eip=0x007d32; 	T(ax = 0x12;);	// 99154                  mov     ax, 12h ;~ 17C5:7D32
cs=0x17c5;eip=0x007d35; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_12))));	// 99155                  imul    [bp+var_12] ;~ 17C5:7D35
cs=0x17c5;eip=0x007d38; 	T(bx = ax;);	// 99156                  mov     bx, ax ;~ 17C5:7D38
cs=0x17c5;eip=0x007d3a; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x536))));	// 99157                  mov     si, [bx+536h] ;~ 17C5:7D3A
cs=0x17c5;eip=0x007d3e; 	T(cl = 7;);	// 99158                  mov     cl, 7 ;~ 17C5:7D3E
cs=0x17c5;eip=0x007d40; 	T(SHL(si, cl));	// 99159                  shl     si, cl ;~ 17C5:7D40
cs=0x17c5;eip=0x007d42; 	X(PUSH(si));	// 99160                  push    si ;~ 17C5:7D42
cs=0x17c5;eip=0x007d43; 	T(ax = si;);	// 99161                  mov     ax, si ;~ 17C5:7D43
cs=0x17c5;eip=0x007d45; 	T(NEG(ax));	// 99162                  neg     ax ;~ 17C5:7D45
cs=0x17c5;eip=0x007d47; 	X(PUSH(ax));	// 99163                  push    ax ;~ 17C5:7D47
cs=0x17c5;eip=0x007d48; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1a))));	// 99164                  push    [bp+var_1A] ;~ 17C5:7D48
cs=0x17c5;eip=0x007d4b; 	J(CALL(sub_33194,0));	// 99165                  call    sub_33194 ;~ 17C5:7D4B
cs=0x17c5;eip=0x007d4e; 	T(ADD(sp, 6));	// 99166                  add     sp, 6 ;~ 17C5:7D4E
cs=0x17c5;eip=0x007d51; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 99167                  mov     [bp+var_1A], ax ;~ 17C5:7D51
cs=0x17c5;eip=0x007d54; 	T(ax = 0x18;);	// 99168                  mov     ax, 18h ;~ 17C5:7D54
cs=0x17c5;eip=0x007d57; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99169                  imul    [bp+var_1C] ;~ 17C5:7D57
cs=0x17c5;eip=0x007d5a; 	T(si = ax;);	// 99170                  mov     si, ax ;~ 17C5:7D5A
cs=0x17c5;eip=0x007d5c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1a))));	// 99171                  mov     ax, [bp+var_1A] ;~ 17C5:7D5C
cs=0x17c5;eip=0x007d5f; 	T(SHL(ax, 1));	// 99172                  shl     ax, 1 ;~ 17C5:7D5F
cs=0x17c5;eip=0x007d61; 	T(SHL(ax, 1));	// 99173                  shl     ax, 1 ;~ 17C5:7D61
cs=0x17c5;eip=0x007d63; 	T(CWD);	// 99174                  cwd ;~ 17C5:7D63
cs=0x17c5;eip=0x007d64; 	T(cx = word_492f4;);	// 99175                  mov     cx, word_492F4 ;~ 17C5:7D64
cs=0x17c5;eip=0x007d68; 	T(IDIV2(cx));	// 99176                  idiv    cx ;~ 17C5:7D68
cs=0x17c5;eip=0x007d6a; 	X(ADD(*(dw*)(raddr(ds,si+0x0D1C)), ax));	// 99177                  add     [si+0D1Ch], ax ;~ 17C5:7D6A
cs=0x17c5;eip=0x007d6e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1a))));	// 99178                  mov     ax, [bp+var_1A] ;~ 17C5:7D6E
cs=0x17c5;eip=0x007d71; 	T(SHL(ax, 1));	// 99179                  shl     ax, 1 ;~ 17C5:7D71
cs=0x17c5;eip=0x007d73; 	X(MOV(*(dw*)(raddr(ds,si+0x0D20)), ax));	// 99180                  mov     [si+0D20h], ax ;~ 17C5:7D73
cs=0x17c5;eip=0x007d77; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99181                  cmp     [bp+var_1C], 8 ;~ 17C5:7D77
cs=0x17c5;eip=0x007d7b; 	J(JGE(loc_2dfd4));	// 99182                  jge     short loc_2DFD4 ;~ 17C5:7D7B
cs=0x17c5;eip=0x007d7d; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 0x400));	// 99183                  cmp     [bp+var_10], 400h ;~ 17C5:7D7D
cs=0x17c5;eip=0x007d82; 	J(JNC(loc_2dfd4));	// 99184                  jnb     short loc_2DFD4 ;~ 17C5:7D82
cs=0x17c5;eip=0x007d84; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 99185                  push    [bp+var_10] ;~ 17C5:7D84
cs=0x17c5;eip=0x007d87; 	J(CALL(sub_34dc0,0));	// 99186                  call    sub_34DC0 ;~ 17C5:7D87
cs=0x17c5;eip=0x007d8a; 	T(ADD(sp, 2));	// 99187                  add     sp, 2 ;~ 17C5:7D8A
cs=0x17c5;eip=0x007d8d; 	X(PUSH(ax));	// 99188                  push    ax ;~ 17C5:7D8D
cs=0x17c5;eip=0x007d8e; 	T(ax = 0x18;);	// 99189                  mov     ax, 18h ;~ 17C5:7D8E
cs=0x17c5;eip=0x007d91; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99190                  imul    [bp+var_1C] ;~ 17C5:7D91
cs=0x17c5;eip=0x007d94; 	T(bx = ax;);	// 99191                  mov     bx, ax ;~ 17C5:7D94
cs=0x17c5;eip=0x007d96; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 99192                  mov     ax, [bp+var_32] ;~ 17C5:7D96
cs=0x17c5;eip=0x007d99; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0D18))));	// 99193                  sub     ax, [bx+0D18h] ;~ 17C5:7D99
cs=0x17c5;eip=0x007d9d; 	T(cl = 4;);	// 99194                  mov     cl, 4 ;~ 17C5:7D9D
cs=0x17c5;eip=0x007d9f; 	T(SAR(ax, cl));	// 99195                  sar     ax, cl ;~ 17C5:7D9F
cs=0x17c5;eip=0x007da1; 	J(JMP(loc_2e017));	// 99196                  jmp     short loc_2E017 ;~ 17C5:7DA1
loc_2dfd4:
	// 5806 
cs=0x17c5;eip=0x007da4; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 99202                  push    [bp+var_10] ;~ 17C5:7DA4
cs=0x17c5;eip=0x007da7; 	J(CALL(sub_34dc0,0));	// 99203                  call    sub_34DC0 ;~ 17C5:7DA7
cs=0x17c5;eip=0x007daa; 	T(ADD(sp, 2));	// 99204                  add     sp, 2 ;~ 17C5:7DAA
cs=0x17c5;eip=0x007dad; 	X(PUSH(ax));	// 99205                  push    ax ;~ 17C5:7DAD
cs=0x17c5;eip=0x007dae; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 99206                  push    [bp+var_10] ;~ 17C5:7DAE
cs=0x17c5;eip=0x007db1; 	J(CALL(sub_34dc0,0));	// 99207                  call    sub_34DC0 ;~ 17C5:7DB1
cs=0x17c5;eip=0x007db4; 	T(ADD(sp, 2));	// 99208                  add     sp, 2 ;~ 17C5:7DB4
cs=0x17c5;eip=0x007db7; 	T(CMP(ax, 0x140));	// 99209                  cmp     ax, 140h ;~ 17C5:7DB7
cs=0x17c5;eip=0x007dba; 	J(JLE(loc_2dffc));	// 99210                  jle     short loc_2DFFC ;~ 17C5:7DBA
cs=0x17c5;eip=0x007dbc; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 99211                  push    [bp+var_10] ;~ 17C5:7DBC
cs=0x17c5;eip=0x007dbf; 	J(CALL(sub_34dc0,0));	// 99212                  call    sub_34DC0 ;~ 17C5:7DBF
cs=0x17c5;eip=0x007dc2; 	T(ADD(sp, 2));	// 99213                  add     sp, 2 ;~ 17C5:7DC2
cs=0x17c5;eip=0x007dc5; 	T(cl = 3;);	// 99214                  mov     cl, 3 ;~ 17C5:7DC5
cs=0x17c5;eip=0x007dc7; 	T(SAR(ax, cl));	// 99215                  sar     ax, cl ;~ 17C5:7DC7
cs=0x17c5;eip=0x007dc9; 	J(JMP(loc_2dffe));	// 99216                  jmp     short loc_2DFFE ;~ 17C5:7DC9
loc_2dffc:
	// 5807 
cs=0x17c5;eip=0x007dcc; 	T(SUB(ax, ax));	// 99221                  sub     ax, ax ;~ 17C5:7DCC
loc_2dffe:
	// 5808 
cs=0x17c5;eip=0x007dce; 	T(cx = ax;);	// 99224                  mov     cx, ax ;~ 17C5:7DCE
cs=0x17c5;eip=0x007dd0; 	T(ax = 0x18;);	// 99225                  mov     ax, 18h ;~ 17C5:7DD0
cs=0x17c5;eip=0x007dd3; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99226                  imul    [bp+var_1C] ;~ 17C5:7DD3
cs=0x17c5;eip=0x007dd6; 	T(bx = ax;);	// 99227                  mov     bx, ax ;~ 17C5:7DD6
cs=0x17c5;eip=0x007dd8; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 99228                  mov     ax, [bp+var_32] ;~ 17C5:7DD8
cs=0x17c5;eip=0x007ddb; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0D18))));	// 99229                  sub     ax, [bx+0D18h] ;~ 17C5:7DDB
cs=0x17c5;eip=0x007ddf; 	T(dx = cx;);	// 99230                  mov     dx, cx ;~ 17C5:7DDF
cs=0x17c5;eip=0x007de1; 	T(cl = 5;);	// 99231                  mov     cl, 5 ;~ 17C5:7DE1
cs=0x17c5;eip=0x007de3; 	T(SAR(ax, cl));	// 99232                  sar     ax, cl ;~ 17C5:7DE3
cs=0x17c5;eip=0x007de5; 	T(ADD(ax, dx));	// 99233                  add     ax, dx ;~ 17C5:7DE5
loc_2e017:
	// 5809 
cs=0x17c5;eip=0x007de7; 	X(PUSH(ax));	// 99236                  push    ax ;~ 17C5:7DE7
cs=0x17c5;eip=0x007de8; 	J(CALL(sub_33238,0));	// 99237                  call    sub_33238 ;~ 17C5:7DE8
cs=0x17c5;eip=0x007deb; 	T(ADD(sp, 4));	// 99238                  add     sp, 4 ;~ 17C5:7DEB
cs=0x17c5;eip=0x007dee; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 99239                  mov     [bp+var_6], ax ;~ 17C5:7DEE
cs=0x17c5;eip=0x007df1; 	T(ax = 0x18;);	// 99240                  mov     ax, 18h ;~ 17C5:7DF1
cs=0x17c5;eip=0x007df4; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99241                  imul    [bp+var_1C] ;~ 17C5:7DF4
cs=0x17c5;eip=0x007df7; 	T(bx = ax;);	// 99242                  mov     bx, ax ;~ 17C5:7DF7
cs=0x17c5;eip=0x007df9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 99243                  mov     ax, [bp+var_6] ;~ 17C5:7DF9
cs=0x17c5;eip=0x007dfc; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0D1E))));	// 99244                  sub     ax, [bx+0D1Eh] ;~ 17C5:7DFC
cs=0x17c5;eip=0x007e00; 	X(MOV(*(dw*)(raddr(ss,bp+var_24)), ax));	// 99245                  mov     [bp+var_24], ax ;~ 17C5:7E00
cs=0x17c5;eip=0x007e03; 	T(ax = 0x12;);	// 99246                  mov     ax, 12h ;~ 17C5:7E03
cs=0x17c5;eip=0x007e06; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_12))));	// 99247                  imul    [bp+var_12] ;~ 17C5:7E06
cs=0x17c5;eip=0x007e09; 	T(bx = ax;);	// 99248                  mov     bx, ax ;~ 17C5:7E09
cs=0x17c5;eip=0x007e0b; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x536))));	// 99249                  mov     si, [bx+536h] ;~ 17C5:7E0B
cs=0x17c5;eip=0x007e0f; 	T(ax = si;);	// 99250                  mov     ax, si ;~ 17C5:7E0F
cs=0x17c5;eip=0x007e11; 	T(cl = 9;);	// 99251                  mov     cl, 9 ;~ 17C5:7E11
cs=0x17c5;eip=0x007e13; 	T(SHL(ax, cl));	// 99252                  shl     ax, cl ;~ 17C5:7E13
cs=0x17c5;eip=0x007e15; 	X(PUSH(ax));	// 99253                  push    ax ;~ 17C5:7E15
cs=0x17c5;eip=0x007e16; 	T(ax = si;);	// 99254                  mov     ax, si ;~ 17C5:7E16
cs=0x17c5;eip=0x007e18; 	T(cl = 0x0B;);	// 99255                  mov     cl, 0Bh ;~ 17C5:7E18
cs=0x17c5;eip=0x007e1a; 	T(SHL(ax, cl));	// 99256                  shl     ax, cl ;~ 17C5:7E1A
cs=0x17c5;eip=0x007e1c; 	T(NEG(ax));	// 99257                  neg     ax ;~ 17C5:7E1C
cs=0x17c5;eip=0x007e1e; 	X(PUSH(ax));	// 99258                  push    ax ;~ 17C5:7E1E
cs=0x17c5;eip=0x007e1f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_24))));	// 99259                  push    [bp+var_24] ;~ 17C5:7E1F
cs=0x17c5;eip=0x007e22; 	J(CALL(sub_33194,0));	// 99260                  call    sub_33194 ;~ 17C5:7E22
cs=0x17c5;eip=0x007e25; 	T(ADD(sp, 6));	// 99261                  add     sp, 6 ;~ 17C5:7E25
cs=0x17c5;eip=0x007e28; 	X(MOV(*(dw*)(raddr(ss,bp+var_24)), ax));	// 99262                  mov     [bp+var_24], ax ;~ 17C5:7E28
cs=0x17c5;eip=0x007e2b; 	T(ax = 0x18;);	// 99263                  mov     ax, 18h ;~ 17C5:7E2B
cs=0x17c5;eip=0x007e2e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99264                  imul    [bp+var_1C] ;~ 17C5:7E2E
cs=0x17c5;eip=0x007e31; 	T(bx = ax;);	// 99265                  mov     bx, ax ;~ 17C5:7E31
cs=0x17c5;eip=0x007e33; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_24))));	// 99266                  mov     ax, [bp+var_24] ;~ 17C5:7E33
cs=0x17c5;eip=0x007e36; 	T(SHL(ax, 1));	// 99267                  shl     ax, 1 ;~ 17C5:7E36
cs=0x17c5;eip=0x007e38; 	T(SHL(ax, 1));	// 99268                  shl     ax, 1 ;~ 17C5:7E38
cs=0x17c5;eip=0x007e3a; 	T(CWD);	// 99269                  cwd ;~ 17C5:7E3A
cs=0x17c5;eip=0x007e3b; 	T(cx = word_492f4;);	// 99270                  mov     cx, word_492F4 ;~ 17C5:7E3B
cs=0x17c5;eip=0x007e3f; 	T(IDIV2(cx));	// 99271                  idiv    cx ;~ 17C5:7E3F
cs=0x17c5;eip=0x007e41; 	X(ADD(*(dw*)(raddr(ds,bx+0x0D1E)), ax));	// 99272                  add     [bx+0D1Eh], ax ;~ 17C5:7E41
cs=0x17c5;eip=0x007e45; 	J(JMP(loc_2e0a4));	// 99273                  jmp     short loc_2E0A4 ;~ 17C5:7E45
loc_2e078:
	// 5810 
cs=0x17c5;eip=0x007e48; 	T(ax = 0x18;);	// 99279                  mov     ax, 18h ;~ 17C5:7E48
cs=0x17c5;eip=0x007e4b; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99280                  imul    [bp+var_1C] ;~ 17C5:7E4B
cs=0x17c5;eip=0x007e4e; 	T(si = ax;);	// 99281                  mov     si, ax ;~ 17C5:7E4E
cs=0x17c5;eip=0x007e50; 	T(ADD(si, 0x0D1E));	// 99282                  add     si, 0D1Eh ;~ 17C5:7E50
cs=0x17c5;eip=0x007e54; 	T(CMP(*(dw*)(raddr(ds,si)), 0));	// 99283                  cmp     word ptr [si], 0 ;~ 17C5:7E54
cs=0x17c5;eip=0x007e57; 	J(JLE(loc_2e0a4));	// 99284                  jle     short loc_2E0A4 ;~ 17C5:7E57
cs=0x17c5;eip=0x007e59; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1E));	// 99285                  cmp     [bp+var_22], 1Eh ;~ 17C5:7E59
cs=0x17c5;eip=0x007e5d; 	J(JZ(loc_2e0a4));	// 99286                  jz      short loc_2E0A4 ;~ 17C5:7E5D
cs=0x17c5;eip=0x007e5f; 	X(PUSH(*(dw*)(raddr(ds,si))));	// 99287                  push    word ptr [si] ;~ 17C5:7E5F
cs=0x17c5;eip=0x007e61; 	J(CALL(sub_333f8,0));	// 99288                  call    sub_333F8 ;~ 17C5:7E61
cs=0x17c5;eip=0x007e64; 	T(ADD(sp, 2));	// 99289                  add     sp, 2 ;~ 17C5:7E64
cs=0x17c5;eip=0x007e67; 	T(cl = 0x0C;);	// 99290                  mov     cl, 0Ch ;~ 17C5:7E67
cs=0x17c5;eip=0x007e69; 	T(SHL(ax, cl));	// 99291                  shl     ax, cl ;~ 17C5:7E69
cs=0x17c5;eip=0x007e6b; 	T(CWD);	// 99292                  cwd ;~ 17C5:7E6B
cs=0x17c5;eip=0x007e6c; 	T(cx = word_492f4;);	// 99293                  mov     cx, word_492F4 ;~ 17C5:7E6C
cs=0x17c5;eip=0x007e70; 	T(IDIV2(cx));	// 99294                  idiv    cx ;~ 17C5:7E70
cs=0x17c5;eip=0x007e72; 	X(SUB(*(dw*)(raddr(ds,si)), ax));	// 99295                  sub     [si], ax ;~ 17C5:7E72
loc_2e0a4:
	// 5811 
cs=0x17c5;eip=0x007e74; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1C));	// 99299                  cmp     [bp+var_22], 1Ch ;~ 17C5:7E74
cs=0x17c5;eip=0x007e78; 	J(JNZ(loc_2e0c0));	// 99300                  jnz     short loc_2E0C0 ;~ 17C5:7E78
cs=0x17c5;eip=0x007e7a; 	T(ax = 0x18;);	// 99301                  mov     ax, 18h ;~ 17C5:7E7A
cs=0x17c5;eip=0x007e7d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99302                  imul    [bp+var_1C] ;~ 17C5:7E7D
cs=0x17c5;eip=0x007e80; 	T(si = ax;);	// 99303                  mov     si, ax ;~ 17C5:7E80
cs=0x17c5;eip=0x007e82; 	T(ADD(si, 0x0D1E));	// 99304                  add     si, 0D1Eh ;~ 17C5:7E82
cs=0x17c5;eip=0x007e86; 	T(CMP(*(dw*)(raddr(ds,si)), 0x0F800));	// 99305                  cmp     word ptr [si], 0F800h ;~ 17C5:7E86
cs=0x17c5;eip=0x007e8a; 	J(JLE(loc_2e0c0));	// 99306                  jle     short loc_2E0C0 ;~ 17C5:7E8A
cs=0x17c5;eip=0x007e8c; 	X(MOV(*(dw*)(raddr(ds,si)), 0x0F800));	// 99307                  mov     word ptr [si], 0F800h ;~ 17C5:7E8C
loc_2e0c0:
	// 5812 
cs=0x17c5;eip=0x007e90; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1E));	// 99311                  cmp     [bp+var_22], 1Eh ;~ 17C5:7E90
cs=0x17c5;eip=0x007e94; 	J(JZ(loc_2e0d5));	// 99312                  jz      short loc_2E0D5 ;~ 17C5:7E94
cs=0x17c5;eip=0x007e96; 	T(ax = 0x18;);	// 99313                  mov     ax, 18h ;~ 17C5:7E96
cs=0x17c5;eip=0x007e99; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99314                  imul    [bp+var_1C] ;~ 17C5:7E99
cs=0x17c5;eip=0x007e9c; 	T(bx = ax;);	// 99315                  mov     bx, ax ;~ 17C5:7E9C
cs=0x17c5;eip=0x007e9e; 	T(CMP(*(dw*)(raddr(ds,bx+0x0D18)), 1));	// 99316                  cmp     word ptr [bx+0D18h], 1 ;~ 17C5:7E9E
cs=0x17c5;eip=0x007ea3; 	J(JNZ(loc_2e0f9));	// 99317                  jnz     short loc_2E0F9 ;~ 17C5:7EA3
loc_2e0d5:
	// 5813 
cs=0x17c5;eip=0x007ea5; 	T(ax = 0x18;);	// 99320                  mov     ax, 18h ;~ 17C5:7EA5
cs=0x17c5;eip=0x007ea8; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99321                  imul    [bp+var_1C] ;~ 17C5:7EA8
cs=0x17c5;eip=0x007eab; 	T(si = ax;);	// 99322                  mov     si, ax ;~ 17C5:7EAB
cs=0x17c5;eip=0x007ead; 	T(ax = 0x800;);	// 99323                  mov     ax, 800h ;~ 17C5:7EAD
cs=0x17c5;eip=0x007eb0; 	T(CWD);	// 99324                  cwd ;~ 17C5:7EB0
cs=0x17c5;eip=0x007eb1; 	T(cx = word_492f4;);	// 99325                  mov     cx, word_492F4 ;~ 17C5:7EB1
cs=0x17c5;eip=0x007eb5; 	T(IDIV2(cx));	// 99326                  idiv    cx ;~ 17C5:7EB5
cs=0x17c5;eip=0x007eb7; 	X(SUB(*(dw*)(raddr(ds,si+0x0D1E)), ax));	// 99327                  sub     [si+0D1Eh], ax ;~ 17C5:7EB7
cs=0x17c5;eip=0x007ebb; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D2A))));	// 99328                  mov     ax, [si+0D2Ah] ;~ 17C5:7EBB
cs=0x17c5;eip=0x007ebf; 	T(CMP(*(dw*)(raddr(ds,si+0x0D1E)), ax));	// 99329                  cmp     [si+0D1Eh], ax ;~ 17C5:7EBF
cs=0x17c5;eip=0x007ec3; 	J(JGE(loc_2e0f9));	// 99330                  jge     short loc_2E0F9 ;~ 17C5:7EC3
cs=0x17c5;eip=0x007ec5; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1E)), ax));	// 99331                  mov     [si+0D1Eh], ax ;~ 17C5:7EC5
loc_2e0f9:
	// 5814 
cs=0x17c5;eip=0x007ec9; 	T(ax = 0x18;);	// 99335                  mov     ax, 18h ;~ 17C5:7EC9
cs=0x17c5;eip=0x007ecc; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99336                  imul    [bp+var_1C] ;~ 17C5:7ECC
cs=0x17c5;eip=0x007ecf; 	T(si = ax;);	// 99337                  mov     si, ax ;~ 17C5:7ECF
cs=0x17c5;eip=0x007ed1; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D1A))));	// 99338                  push    word ptr [si+0D1Ah] ;~ 17C5:7ED1
cs=0x17c5;eip=0x007ed5; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D1E))));	// 99339                  push    word ptr [si+0D1Eh] ;~ 17C5:7ED5
cs=0x17c5;eip=0x007ed9; 	J(CALL(sub_333c0,0));	// 99340                  call    sub_333C0 ;~ 17C5:7ED9
cs=0x17c5;eip=0x007edc; 	T(ADD(sp, 4));	// 99341                  add     sp, 4 ;~ 17C5:7EDC
cs=0x17c5;eip=0x007edf; 	T(cl = 3;);	// 99342                  mov     cl, 3 ;~ 17C5:7EDF
cs=0x17c5;eip=0x007ee1; 	T(SHL(ax, cl));	// 99343                  shl     ax, cl ;~ 17C5:7EE1
cs=0x17c5;eip=0x007ee3; 	T(CWD);	// 99344                  cwd ;~ 17C5:7EE3
cs=0x17c5;eip=0x007ee4; 	T(cx = word_492f4;);	// 99345                  mov     cx, word_492F4 ;~ 17C5:7EE4
cs=0x17c5;eip=0x007ee8; 	T(IDIV2(cx));	// 99346                  idiv    cx ;~ 17C5:7EE8
cs=0x17c5;eip=0x007eea; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), ax));	// 99347                  mov     [bp+var_16], ax ;~ 17C5:7EEA
cs=0x17c5;eip=0x007eed; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1E));	// 99348                  cmp     [bp+var_22], 1Eh ;~ 17C5:7EED
cs=0x17c5;eip=0x007ef1; 	J(JNZ(loc_2e13e));	// 99349                  jnz     short loc_2E13E ;~ 17C5:7EF1
cs=0x17c5;eip=0x007ef3; 	T(cx = 2;);	// 99350                  mov     cx, 2 ;~ 17C5:7EF3
cs=0x17c5;eip=0x007ef6; 	T(CWD);	// 99351                  cwd ;~ 17C5:7EF6
cs=0x17c5;eip=0x007ef7; 	T(IDIV2(cx));	// 99352                  idiv    cx ;~ 17C5:7EF7
cs=0x17c5;eip=0x007ef9; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), ax));	// 99353                  mov     [bp+var_16], ax ;~ 17C5:7EF9
cs=0x17c5;eip=0x007efc; 	T(ax = 0x18;);	// 99354                  mov     ax, 18h ;~ 17C5:7EFC
cs=0x17c5;eip=0x007eff; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99355                  imul    [bp+var_1C] ;~ 17C5:7EFF
cs=0x17c5;eip=0x007f02; 	T(si = ax;);	// 99356                  mov     si, ax ;~ 17C5:7F02
cs=0x17c5;eip=0x007f04; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D1A))));	// 99357                  mov     ax, [si+0D1Ah] ;~ 17C5:7F04
cs=0x17c5;eip=0x007f08; 	T(cl = 7;);	// 99358                  mov     cl, 7 ;~ 17C5:7F08
cs=0x17c5;eip=0x007f0a; 	T(SHL(ax, cl));	// 99359                  shl     ax, cl ;~ 17C5:7F0A
cs=0x17c5;eip=0x007f0c; 	J(JMP(loc_2e14c));	// 99360                  jmp     short loc_2E14C ;~ 17C5:7F0C
loc_2e13e:
	// 5815 
cs=0x17c5;eip=0x007f0e; 	T(ax = 0x18;);	// 99364                  mov     ax, 18h ;~ 17C5:7F0E
cs=0x17c5;eip=0x007f11; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99365                  imul    [bp+var_1C] ;~ 17C5:7F11
cs=0x17c5;eip=0x007f14; 	T(si = ax;);	// 99366                  mov     si, ax ;~ 17C5:7F14
cs=0x17c5;eip=0x007f16; 	T(MOV(ah, *(raddr(ds,si+0x0D1A))));	// 99367                  mov     ah, [si+0D1Ah] ;~ 17C5:7F16
cs=0x17c5;eip=0x007f1a; 	T(SUB(al, al));	// 99368                  sub     al, al ;~ 17C5:7F1A
loc_2e14c:
	// 5816 
cs=0x17c5;eip=0x007f1c; 	T(CWD);	// 99371                  cwd ;~ 17C5:7F1C
cs=0x17c5;eip=0x007f1d; 	T(cx = word_492f4;);	// 99372                  mov     cx, word_492F4 ;~ 17C5:7F1D
cs=0x17c5;eip=0x007f21; 	T(IDIV2(cx));	// 99373                  idiv    cx ;~ 17C5:7F21
cs=0x17c5;eip=0x007f23; 	X(PUSH(ax));	// 99374                  push    ax ;~ 17C5:7F23
cs=0x17c5;eip=0x007f24; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D1E))));	// 99375                  push    word ptr [si+0D1Eh] ;~ 17C5:7F24
cs=0x17c5;eip=0x007f28; 	J(CALL(sub_333a8,0));	// 99376                  call    sub_333A8 ;~ 17C5:7F28
cs=0x17c5;eip=0x007f2b; 	T(ADD(sp, 4));	// 99377                  add     sp, 4 ;~ 17C5:7F2B
cs=0x17c5;eip=0x007f2e; 	X(ADD(*(dw*)(raddr(ds,si+0x0D18)), ax));	// 99378                  add     [si+0D18h], ax ;~ 17C5:7F2E
cs=0x17c5;eip=0x007f32; 	T(ax = 0x18;);	// 99379                  mov     ax, 18h ;~ 17C5:7F32
cs=0x17c5;eip=0x007f35; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99380                  imul    [bp+var_1C] ;~ 17C5:7F35
cs=0x17c5;eip=0x007f38; 	T(si = ax;);	// 99381                  mov     si, ax ;~ 17C5:7F38
cs=0x17c5;eip=0x007f3a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_16))));	// 99382                  push    [bp+var_16] ;~ 17C5:7F3A
cs=0x17c5;eip=0x007f3d; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D1C))));	// 99383                  push    word ptr [si+0D1Ch] ;~ 17C5:7F3D
cs=0x17c5;eip=0x007f41; 	J(CALL(sub_333a8,0));	// 99384                  call    sub_333A8 ;~ 17C5:7F41
cs=0x17c5;eip=0x007f44; 	T(ADD(sp, 4));	// 99385                  add     sp, 4 ;~ 17C5:7F44
cs=0x17c5;eip=0x007f47; 	X(ADD(*(dw*)(raddr(ds,si+0x0D14)), ax));	// 99386                  add     [si+0D14h], ax ;~ 17C5:7F47
cs=0x17c5;eip=0x007f4b; 	T(ax = 0x18;);	// 99387                  mov     ax, 18h ;~ 17C5:7F4B
cs=0x17c5;eip=0x007f4e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99388                  imul    [bp+var_1C] ;~ 17C5:7F4E
cs=0x17c5;eip=0x007f51; 	T(si = ax;);	// 99389                  mov     si, ax ;~ 17C5:7F51
cs=0x17c5;eip=0x007f53; 	X(PUSH(*(dw*)(raddr(ss,bp+var_16))));	// 99390                  push    [bp+var_16] ;~ 17C5:7F53
cs=0x17c5;eip=0x007f56; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D1C))));	// 99391                  push    word ptr [si+0D1Ch] ;~ 17C5:7F56
cs=0x17c5;eip=0x007f5a; 	J(CALL(sub_333c0,0));	// 99392                  call    sub_333C0 ;~ 17C5:7F5A
cs=0x17c5;eip=0x007f5d; 	T(ADD(sp, 4));	// 99393                  add     sp, 4 ;~ 17C5:7F5D
cs=0x17c5;eip=0x007f60; 	X(SUB(*(dw*)(raddr(ds,si+0x0D16)), ax));	// 99394                  sub     [si+0D16h], ax ;~ 17C5:7F60
cs=0x17c5;eip=0x007f64; 	T(ax = 0x18;);	// 99395                  mov     ax, 18h ;~ 17C5:7F64
cs=0x17c5;eip=0x007f67; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99396                  imul    [bp+var_1C] ;~ 17C5:7F67
cs=0x17c5;eip=0x007f6a; 	T(bx = ax;);	// 99397                  mov     bx, ax ;~ 17C5:7F6A
cs=0x17c5;eip=0x007f6c; 	X(DEC(*(dw*)(raddr(ds,bx+0x0D22))));	// 99398                  dec     word ptr [bx+0D22h] ;~ 17C5:7F6C
cs=0x17c5;eip=0x007f70; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99399                  cmp     [bp+var_1C], 8 ;~ 17C5:7F70
cs=0x17c5;eip=0x007f74; 	J(JGE(loc_2e1c9));	// 99400                  jge     short loc_2E1C9 ;~ 17C5:7F74
cs=0x17c5;eip=0x007f76; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 99401                  cmp     [bp+var_4], 0 ;~ 17C5:7F76
cs=0x17c5;eip=0x007f7a; 	J(JNZ(loc_2e1bc));	// 99402                  jnz     short loc_2E1BC ;~ 17C5:7F7A
cs=0x17c5;eip=0x007f7c; 	T(ax = 0x18;);	// 99403                  mov     ax, 18h ;~ 17C5:7F7C
cs=0x17c5;eip=0x007f7f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99404                  imul    [bp+var_1C] ;~ 17C5:7F7F
cs=0x17c5;eip=0x007f82; 	T(bx = ax;);	// 99405                  mov     bx, ax ;~ 17C5:7F82
cs=0x17c5;eip=0x007f84; 	X(AND(*(raddr(ds,bx+0x0D18)), 0x0FE));	// 99406                  and     byte ptr [bx+0D18h], 0FEh ;~ 17C5:7F84
cs=0x17c5;eip=0x007f89; 	J(JMP(loc_2e1c9));	// 99407                  jmp     short loc_2E1C9 ;~ 17C5:7F89
loc_2e1bc:
	// 5817 
cs=0x17c5;eip=0x007f8c; 	T(ax = 0x18;);	// 99412                  mov     ax, 18h ;~ 17C5:7F8C
cs=0x17c5;eip=0x007f8f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99413                  imul    [bp+var_1C] ;~ 17C5:7F8F
cs=0x17c5;eip=0x007f92; 	T(bx = ax;);	// 99414                  mov     bx, ax ;~ 17C5:7F92
cs=0x17c5;eip=0x007f94; 	X(OR(*(raddr(ds,bx+0x0D18)), 1));	// 99415                  or      byte ptr [bx+0D18h], 1 ;~ 17C5:7F94
loc_2e1c9:
	// 5818 
cs=0x17c5;eip=0x007f99; 	X(*(db*)(&word_4cdb6) = 0;);	// 99419                  mov     byte ptr ds:word_4CDB6, 0 ;~ 17C5:7F99
cs=0x17c5;eip=0x007f9e; 	T(MOV(al, *(raddr(ss,bp+var_1c))));	// 99420                  mov     al, byte ptr [bp+var_1C] ;~ 17C5:7F9E
cs=0x17c5;eip=0x007fa1; 	T(AND(al, 3));	// 99421                  and     al, 3 ;~ 17C5:7FA1
cs=0x17c5;eip=0x007fa3; 	T(cl = *(db*)(&word_49918););	// 99422                  mov     cl, byte ptr word_49918 ;~ 17C5:7FA3
cs=0x17c5;eip=0x007fa7; 	T(AND(cl, 3));	// 99423                  and     cl, 3 ;~ 17C5:7FA7
cs=0x17c5;eip=0x007faa; 	T(CMP(al, cl));	// 99424                  cmp     al, cl ;~ 17C5:7FAA
cs=0x17c5;eip=0x007fac; 	J(JNZ(loc_2e1f8));	// 99425                  jnz     short loc_2E1F8 ;~ 17C5:7FAC
cs=0x17c5;eip=0x007fae; 	T(ax = 0x18;);	// 99426                  mov     ax, 18h ;~ 17C5:7FAE
cs=0x17c5;eip=0x007fb1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99427                  imul    [bp+var_1C] ;~ 17C5:7FB1
cs=0x17c5;eip=0x007fb4; 	T(si = ax;);	// 99428                  mov     si, ax ;~ 17C5:7FB4
cs=0x17c5;eip=0x007fb6; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D18))));	// 99429                  push    word ptr [si+0D18h] ;~ 17C5:7FB6
cs=0x17c5;eip=0x007fba; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D16))));	// 99430                  push    word ptr [si+0D16h] ;~ 17C5:7FBA
cs=0x17c5;eip=0x007fbe; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D14))));	// 99431                  push    word ptr [si+0D14h] ;~ 17C5:7FBE
cs=0x17c5;eip=0x007fc2; 	J(CALL(sub_2f024,0));	// 99432                  call    sub_2F024 ;~ 17C5:7FC2
cs=0x17c5;eip=0x007fc5; 	T(ADD(sp, 6));	// 99433                  add     sp, 6 ;~ 17C5:7FC5
loc_2e1f8:
	// 5819 
cs=0x17c5;eip=0x007fc8; 	T(ax = 0x18;);	// 99436                  mov     ax, 18h ;~ 17C5:7FC8
cs=0x17c5;eip=0x007fcb; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99437                  imul    [bp+var_1C] ;~ 17C5:7FCB
cs=0x17c5;eip=0x007fce; 	T(bx = ax;);	// 99438                  mov     bx, ax ;~ 17C5:7FCE
cs=0x17c5;eip=0x007fd0; 	T(CMP(*(dw*)(raddr(ds,bx+0x0D18)), 0));	// 99439                  cmp     word ptr [bx+0D18h], 0 ;~ 17C5:7FD0
cs=0x17c5;eip=0x007fd5; 	J(JL(loc_2e211));	// 99440                  jl      short loc_2E211 ;~ 17C5:7FD5
cs=0x17c5;eip=0x007fd7; 	T(CMP(*(db*)(&word_4cdb6), 0));	// 99441                  cmp     byte ptr ds:word_4CDB6, 0 ;~ 17C5:7FD7
cs=0x17c5;eip=0x007fdc; 	J(JNZ(loc_2e211));	// 99442                  jnz     short loc_2E211 ;~ 17C5:7FDC
cs=0x17c5;eip=0x007fde; 	J(JMP(loc_2e3d3));	// 99443                  jmp     loc_2E3D3 ;~ 17C5:7FDE
loc_2e211:
	// 5820 
cs=0x17c5;eip=0x007fe1; 	T(ax = 0x18;);	// 99448                  mov     ax, 18h ;~ 17C5:7FE1
cs=0x17c5;eip=0x007fe4; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99449                  imul    [bp+var_1C] ;~ 17C5:7FE4
cs=0x17c5;eip=0x007fe7; 	T(si = ax;);	// 99450                  mov     si, ax ;~ 17C5:7FE7
cs=0x17c5;eip=0x007fe9; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D14))));	// 99451                  mov     ax, [si+0D14h] ;~ 17C5:7FE9
cs=0x17c5;eip=0x007fed; 	X(word_520ec = ax;);	// 99452                  mov     ds:word_520EC, ax ;~ 17C5:7FED
cs=0x17c5;eip=0x007ff0; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D16))));	// 99453                  mov     ax, [si+0D16h] ;~ 17C5:7FF0
cs=0x17c5;eip=0x007ff4; 	X(word_520f8 = ax;);	// 99454                  mov     ds:word_520F8, ax ;~ 17C5:7FF4
cs=0x17c5;eip=0x007ff7; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D18))));	// 99455                  mov     ax, [si+0D18h] ;~ 17C5:7FF7
cs=0x17c5;eip=0x007ffb; 	X(word_520fe = ax;);	// 99456                  mov     ds:word_520FE, ax ;~ 17C5:7FFB
cs=0x17c5;eip=0x007ffe; 	X(word_4f836 = 0x0FFFD;);	// 99457                  mov     ds:word_4F836, 0FFFDh ;~ 17C5:7FFE
cs=0x17c5;eip=0x008004; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D22))));	// 99458                  mov     ax, [si+0D22h] ;~ 17C5:8004
cs=0x17c5;eip=0x008008; 	X(word_51a0e = ax;);	// 99459                  mov     ds:word_51A0E, ax ;~ 17C5:8008
cs=0x17c5;eip=0x00800b; 	X(MOV(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 99460                  mov     word ptr [si+0D22h], 0 ;~ 17C5:800B
cs=0x17c5;eip=0x008011; 	T(ax = 0x18;);	// 99461                  mov     ax, 18h ;~ 17C5:8011
cs=0x17c5;eip=0x008014; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99462                  imul    [bp+var_1C] ;~ 17C5:8014
cs=0x17c5;eip=0x008017; 	T(bx = ax;);	// 99463                  mov     bx, ax ;~ 17C5:8017
cs=0x17c5;eip=0x008019; 	T(ax = 0x1A;);	// 99464                  mov     ax, 1Ah ;~ 17C5:8019
cs=0x17c5;eip=0x00801c; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x0D26))));	// 99465                  imul    word ptr [bx+0D26h] ;~ 17C5:801C
cs=0x17c5;eip=0x008020; 	T(ADD(ax, 0x820));	// 99466                  add     ax, 820h ;~ 17C5:8020
cs=0x17c5;eip=0x008023; 	X(PUSH(ax));	// 99467                  push    ax ;~ 17C5:8023
cs=0x17c5;eip=0x008024; 	T(ax = 0x66C4;);	// 99468                  mov     ax, 66C4h ;~ 17C5:8024
cs=0x17c5;eip=0x008027; 	X(PUSH(ax));	// 99469                  push    ax ;~ 17C5:8027
cs=0x17c5;eip=0x008028; 	J(CALL(sub_34c1c,0));	// 99470                  call    sub_34C1C ;~ 17C5:8028
cs=0x17c5;eip=0x00802b; 	T(ADD(sp, 4));	// 99471                  add     sp, 4 ;~ 17C5:802B
cs=0x17c5;eip=0x00802e; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1E));	// 99472                  cmp     [bp+var_22], 1Eh ;~ 17C5:802E
cs=0x17c5;eip=0x008032; 	J(JZ(loc_2e273));	// 99473                  jz      short loc_2E273 ;~ 17C5:8032
cs=0x17c5;eip=0x008034; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1D));	// 99474                  cmp     [bp+var_22], 1Dh ;~ 17C5:8034
cs=0x17c5;eip=0x008038; 	J(JZ(loc_2e273));	// 99475                  jz      short loc_2E273 ;~ 17C5:8038
cs=0x17c5;eip=0x00803a; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0x1C));	// 99476                  cmp     [bp+var_22], 1Ch ;~ 17C5:803A
cs=0x17c5;eip=0x00803e; 	J(JZ(loc_2e273));	// 99477                  jz      short loc_2E273 ;~ 17C5:803E
cs=0x17c5;eip=0x008040; 	J(JMP(loc_2e3a2));	// 99478                  jmp     loc_2E3A2 ;~ 17C5:8040
loc_2e273:
	// 5821 
cs=0x17c5;eip=0x008043; 	T(ax = 1;);	// 99483                  mov     ax, 1 ;~ 17C5:8043
cs=0x17c5;eip=0x008046; 	X(PUSH(ax));	// 99484                  push    ax ;~ 17C5:8046
cs=0x17c5;eip=0x008047; 	T(SUB(ax, ax));	// 99485                  sub     ax, ax ;~ 17C5:8047
cs=0x17c5;eip=0x008049; 	X(PUSH(ax));	// 99486                  push    ax ;~ 17C5:8049
cs=0x17c5;eip=0x00804a; 	J(CALL(sub_27e2d,0));	// 99487                  call    sub_27E2D ;~ 17C5:804A
cs=0x17c5;eip=0x00804d; 	T(ADD(sp, 4));	// 99488                  add     sp, 4 ;~ 17C5:804D
cs=0x17c5;eip=0x008050; 	T(ax = 2;);	// 99489                  mov     ax, 2 ;~ 17C5:8050
cs=0x17c5;eip=0x008053; 	X(PUSH(ax));	// 99490                  push    ax ;~ 17C5:8053
cs=0x17c5;eip=0x008054; 	X(PUSH(ax));	// 99491                  push    ax ;~ 17C5:8054
cs=0x17c5;eip=0x008055; 	J(CALL(sub_33c65,0));	// 99492                  call    sub_33C65 ;~ 17C5:8055
cs=0x17c5;eip=0x008058; 	T(ADD(sp, 4));	// 99494                  add     sp, 4 ;~ 17C5:8058
cs=0x17c5;eip=0x00805b; 	T(ax = 0x58CC;);	// 99495                  mov     ax, 58CCh ;~ 17C5:805B
cs=0x17c5;eip=0x00805e; 	X(PUSH(ax));	// 99496                  push    ax ;~ 17C5:805E
cs=0x17c5;eip=0x00805f; 	T(ax = 0x66C4;);	// 99497                  mov     ax, 66C4h ;~ 17C5:805F
cs=0x17c5;eip=0x008062; 	X(PUSH(ax));	// 99498                  push    ax ;~ 17C5:8062
cs=0x17c5;eip=0x008063; 	J(CALL(sub_34bdc,0));	// 99499                  call    sub_34BDC ;~ 17C5:8063
cs=0x17c5;eip=0x008066; 	T(ADD(sp, 4));	// 99500                  add     sp, 4 ;~ 17C5:8066
cs=0x17c5;eip=0x008069; 	T(si = word_52250;);	// 99501                  mov     si, ds:word_52250 ;~ 17C5:8069
cs=0x17c5;eip=0x00806d; 	T(cl = 4;);	// 99502                  mov     cl, 4 ;~ 17C5:806D
cs=0x17c5;eip=0x00806f; 	T(SHL(si, cl));	// 99503                  shl     si, cl ;~ 17C5:806F
cs=0x17c5;eip=0x008071; 	T(ax = word_520f8;);	// 99504                  mov     ax, ds:word_520F8 ;~ 17C5:8071
cs=0x17c5;eip=0x008074; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 99505                  sub     ax, [si-7E50h] ;~ 17C5:8074
cs=0x17c5;eip=0x008078; 	X(PUSH(ax));	// 99506                  push    ax ;~ 17C5:8078
cs=0x17c5;eip=0x008079; 	T(ax = word_520ec;);	// 99507                  mov     ax, ds:word_520EC ;~ 17C5:8079
cs=0x17c5;eip=0x00807c; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 99508                  sub     ax, [si-7E52h] ;~ 17C5:807C
cs=0x17c5;eip=0x008080; 	X(PUSH(ax));	// 99509                  push    ax ;~ 17C5:8080
cs=0x17c5;eip=0x008081; 	J(CALL(sub_331d6,0));	// 99510                  call    sub_331D6 ;~ 17C5:8081
cs=0x17c5;eip=0x008084; 	T(ADD(sp, 4));	// 99511                  add     sp, 4 ;~ 17C5:8084
cs=0x17c5;eip=0x008087; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 99512                  mov     [bp+var_E], ax ;~ 17C5:8087
cs=0x17c5;eip=0x00808a; 	T(ax = 0x100;);	// 99513                  mov     ax, 100h ;~ 17C5:808A
cs=0x17c5;eip=0x00808d; 	T(CWD);	// 99514                  cwd ;~ 17C5:808D
cs=0x17c5;eip=0x00808e; 	T(cx = word_492e8;);	// 99515                  mov     cx, word_492E8 ;~ 17C5:808E
cs=0x17c5;eip=0x008092; 	T(INC(cx));	// 99516                  inc     cx ;~ 17C5:8092
cs=0x17c5;eip=0x008093; 	T(IDIV2(cx));	// 99517                  idiv    cx ;~ 17C5:8093
cs=0x17c5;eip=0x008095; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_e))));	// 99518                  cmp     ax, [bp+var_E] ;~ 17C5:8095
cs=0x17c5;eip=0x008098; 	J(JBE(loc_2e2da));	// 99519                  jbe     short loc_2E2DA ;~ 17C5:8098
cs=0x17c5;eip=0x00809a; 	X(PUSH(word_52250));	// 99520                  push    ds:word_52250 ;~ 17C5:809A
cs=0x17c5;eip=0x00809e; 	J(CALL(sub_2ea1a,0));	// 99521                  call    sub_2EA1A ;~ 17C5:809E
cs=0x17c5;eip=0x0080a1; 	T(ADD(sp, 2));	// 99523                  add     sp, 2 ;~ 17C5:80A1
cs=0x17c5;eip=0x0080a4; 	T(ax = 0x58D5;);	// 99524                  mov     ax, 58D5h ;~ 17C5:80A4
cs=0x17c5;eip=0x0080a7; 	J(JMP(loc_2e36b));	// 99525                  jmp     loc_2E36B ;~ 17C5:80A7
loc_2e2da:
	// 5822 
cs=0x17c5;eip=0x0080aa; 	X(PUSH(word_520f8));	// 99529                  push    ds:word_520F8 ;~ 17C5:80AA
cs=0x17c5;eip=0x0080ae; 	X(PUSH(word_520ec));	// 99530                  push    ds:word_520EC ;~ 17C5:80AE
cs=0x17c5;eip=0x0080b2; 	J(CALL(sub_328ee,0));	// 99531                  call    sub_328EE ;~ 17C5:80B2
cs=0x17c5;eip=0x0080b5; 	T(ADD(sp, 4));	// 99532                  add     sp, 4 ;~ 17C5:80B5
cs=0x17c5;eip=0x0080b8; 	X(MOV(*(dw*)(raddr(ss,bp+var_36)), ax));	// 99533                  mov     [bp+var_36], ax ;~ 17C5:80B8
cs=0x17c5;eip=0x0080bb; 	T(CMP(ax, 0x0FFFF));	// 99534                  cmp     ax, 0FFFFh ;~ 17C5:80BB
cs=0x17c5;eip=0x0080be; 	J(JNZ(loc_2e2f3));	// 99535                  jnz     short loc_2E2F3 ;~ 17C5:80BE
cs=0x17c5;eip=0x0080c0; 	J(JMP(loc_2e3c9));	// 99536                  jmp     loc_2E3C9 ;~ 17C5:80C0
loc_2e2f3:
	// 5823 
cs=0x17c5;eip=0x0080c3; 	T(bx = ax;);	// 99540                  mov     bx, ax ;~ 17C5:80C3
cs=0x17c5;eip=0x0080c5; 	T(cl = 4;);	// 99541                  mov     cl, 4 ;~ 17C5:80C5
cs=0x17c5;eip=0x0080c7; 	T(SHL(bx, cl));	// 99542                  shl     bx, cl ;~ 17C5:80C7
cs=0x17c5;eip=0x0080c9; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 0x80));	// 99543                  test    byte ptr [bx-7E4Ch], 80h ;~ 17C5:80C9
cs=0x17c5;eip=0x0080ce; 	J(JZ(loc_2e303));	// 99544                  jz      short loc_2E303 ;~ 17C5:80CE
cs=0x17c5;eip=0x0080d0; 	J(JMP(loc_2e3c9));	// 99545                  jmp     loc_2E3C9 ;~ 17C5:80D0
loc_2e303:
	// 5824 
cs=0x17c5;eip=0x0080d3; 	T(bx = word_4fa38;);	// 99549                  mov     bx, ds:word_4FA38 ;~ 17C5:80D3
cs=0x17c5;eip=0x0080d7; 	T(MOV(ax, *(dw*)(raddr(ds,bx+4))));	// 99550                  mov     ax, [bx+4] ;~ 17C5:80D7
cs=0x17c5;eip=0x0080da; 	T(MOV(dx, *(dw*)(raddr(ds,bx+6))));	// 99551                  mov     dx, [bx+6] ;~ 17C5:80DA
cs=0x17c5;eip=0x0080dd; 	T(cl = 5;);	// 99552                  mov     cl, 5 ;~ 17C5:80DD
loc_2e30f:
	// 5825 
cs=0x17c5;eip=0x0080df; 	T(SAR(dx, 1));	// 99555                  sar     dx, 1 ;~ 17C5:80DF
cs=0x17c5;eip=0x0080e1; 	T(RCR(ax, 1));	// 99556                  rcr     ax, 1 ;~ 17C5:80E1
cs=0x17c5;eip=0x0080e3; 	T(DEC(cl));	// 99557                  dec     cl ;~ 17C5:80E3
cs=0x17c5;eip=0x0080e5; 	J(JNZ(loc_2e30f));	// 99558                  jnz     short loc_2E30F ;~ 17C5:80E5
cs=0x17c5;eip=0x0080e7; 	X(MOV(*(dw*)(raddr(ss,bp+var_26)), ax));	// 99559                  mov     [bp+var_26], ax ;~ 17C5:80E7
cs=0x17c5;eip=0x0080ea; 	T(bx = word_4fa38;);	// 99560                  mov     bx, ds:word_4FA38 ;~ 17C5:80EA
cs=0x17c5;eip=0x0080ee; 	T(MOV(ax, *(dw*)(raddr(ds,bx+8))));	// 99561                  mov     ax, [bx+8] ;~ 17C5:80EE
cs=0x17c5;eip=0x0080f1; 	T(MOV(dx, *(dw*)(raddr(ds,bx+0x0A))));	// 99562                  mov     dx, [bx+0Ah] ;~ 17C5:80F1
cs=0x17c5;eip=0x0080f4; 	T(cl = 5;);	// 99563                  mov     cl, 5 ;~ 17C5:80F4
loc_2e326:
	// 5826 
cs=0x17c5;eip=0x0080f6; 	T(SAR(dx, 1));	// 99566                  sar     dx, 1 ;~ 17C5:80F6
cs=0x17c5;eip=0x0080f8; 	T(RCR(ax, 1));	// 99567                  rcr     ax, 1 ;~ 17C5:80F8
cs=0x17c5;eip=0x0080fa; 	T(DEC(cl));	// 99568                  dec     cl ;~ 17C5:80FA
cs=0x17c5;eip=0x0080fc; 	J(JNZ(loc_2e326));	// 99569                  jnz     short loc_2E326 ;~ 17C5:80FC
cs=0x17c5;eip=0x0080fe; 	T(SUB(ax, 0x8000));	// 99570                  sub     ax, 8000h ;~ 17C5:80FE
cs=0x17c5;eip=0x008101; 	T(NEG(ax));	// 99571                  neg     ax ;~ 17C5:8101
cs=0x17c5;eip=0x008103; 	X(MOV(*(dw*)(raddr(ss,bp+var_2c)), ax));	// 99572                  mov     [bp+var_2C], ax ;~ 17C5:8103
cs=0x17c5;eip=0x008106; 	T(ax = word_520f8;);	// 99573                  mov     ax, ds:word_520F8 ;~ 17C5:8106
cs=0x17c5;eip=0x008109; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_2c))));	// 99574                  sub     ax, [bp+var_2C] ;~ 17C5:8109
cs=0x17c5;eip=0x00810c; 	X(PUSH(ax));	// 99575                  push    ax ;~ 17C5:810C
cs=0x17c5;eip=0x00810d; 	T(ax = word_520ec;);	// 99576                  mov     ax, ds:word_520EC ;~ 17C5:810D
cs=0x17c5;eip=0x008110; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_26))));	// 99577                  sub     ax, [bp+var_26] ;~ 17C5:8110
cs=0x17c5;eip=0x008113; 	X(PUSH(ax));	// 99578                  push    ax ;~ 17C5:8113
cs=0x17c5;eip=0x008114; 	J(CALL(sub_331d6,0));	// 99579                  call    sub_331D6 ;~ 17C5:8114
cs=0x17c5;eip=0x008117; 	T(ADD(sp, 4));	// 99580                  add     sp, 4 ;~ 17C5:8117
cs=0x17c5;eip=0x00811a; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 99581                  mov     [bp+var_E], ax ;~ 17C5:811A
cs=0x17c5;eip=0x00811d; 	T(ax = 0x180;);	// 99582                  mov     ax, 180h ;~ 17C5:811D
cs=0x17c5;eip=0x008120; 	T(CWD);	// 99583                  cwd ;~ 17C5:8120
cs=0x17c5;eip=0x008121; 	T(cx = word_492e8;);	// 99584                  mov     cx, word_492E8 ;~ 17C5:8121
cs=0x17c5;eip=0x008125; 	T(ADD(cx, 2));	// 99585                  add     cx, 2 ;~ 17C5:8125
cs=0x17c5;eip=0x008128; 	T(IDIV2(cx));	// 99586                  idiv    cx ;~ 17C5:8128
cs=0x17c5;eip=0x00812a; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_e))));	// 99587                  cmp     ax, [bp+var_E] ;~ 17C5:812A
cs=0x17c5;eip=0x00812d; 	J(JBE(loc_2e3c9));	// 99588                  jbe     short loc_2E3C9 ;~ 17C5:812D
cs=0x17c5;eip=0x00812f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_36))));	// 99589                  push    [bp+var_36] ;~ 17C5:812F
cs=0x17c5;eip=0x008132; 	J(CALL(sub_2ea1a,0));	// 99590                  call    sub_2EA1A ;~ 17C5:8132
cs=0x17c5;eip=0x008135; 	T(ADD(sp, 2));	// 99592                  add     sp, 2 ;~ 17C5:8135
cs=0x17c5;eip=0x008138; 	T(ax = 0x58E4;);	// 99593                  mov     ax, 58E4h ;~ 17C5:8138
loc_2e36b:
	// 5827 
cs=0x17c5;eip=0x00813b; 	X(PUSH(ax));	// 99596                  push    ax ;~ 17C5:813B
cs=0x17c5;eip=0x00813c; 	T(ax = 0x66C4;);	// 99597                  mov     ax, 66C4h ;~ 17C5:813C
cs=0x17c5;eip=0x00813f; 	X(PUSH(ax));	// 99598                  push    ax ;~ 17C5:813F
cs=0x17c5;eip=0x008140; 	J(CALL(sub_34bdc,0));	// 99599                  call    sub_34BDC ;~ 17C5:8140
cs=0x17c5;eip=0x008143; 	T(ADD(sp, 4));	// 99600                  add     sp, 4 ;~ 17C5:8143
cs=0x17c5;eip=0x008146; 	T(ax = 0x18;);	// 99601                  mov     ax, 18h ;~ 17C5:8146
cs=0x17c5;eip=0x008149; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99602                  imul    [bp+var_1C] ;~ 17C5:8149
cs=0x17c5;eip=0x00814c; 	T(bx = ax;);	// 99603                  mov     bx, ax ;~ 17C5:814C
cs=0x17c5;eip=0x00814e; 	T(ax = 0x1A;);	// 99604                  mov     ax, 1Ah ;~ 17C5:814E
cs=0x17c5;eip=0x008151; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x0D26))));	// 99605                  imul    word ptr [bx+0D26h] ;~ 17C5:8151
cs=0x17c5;eip=0x008155; 	T(ADD(ax, 0x820));	// 99606                  add     ax, 820h ;~ 17C5:8155
cs=0x17c5;eip=0x008158; 	X(PUSH(ax));	// 99607                  push    ax ;~ 17C5:8158
cs=0x17c5;eip=0x008159; 	T(ax = 0x66C4;);	// 99608                  mov     ax, 66C4h ;~ 17C5:8159
cs=0x17c5;eip=0x00815c; 	X(PUSH(ax));	// 99609                  push    ax ;~ 17C5:815C
cs=0x17c5;eip=0x00815d; 	J(CALL(sub_34bdc,0));	// 99610                  call    sub_34BDC ;~ 17C5:815D
cs=0x17c5;eip=0x008160; 	T(ADD(sp, 4));	// 99611                  add     sp, 4 ;~ 17C5:8160
cs=0x17c5;eip=0x008163; 	X(word_4f836 = 8;);	// 99612                  mov     ds:word_4F836, 8 ;~ 17C5:8163
cs=0x17c5;eip=0x008169; 	X(word_520fe = 0;);	// 99613                  mov     ds:word_520FE, 0 ;~ 17C5:8169
cs=0x17c5;eip=0x00816f; 	J(JMP(loc_2e3c9));	// 99614                  jmp     short loc_2E3C9 ;~ 17C5:816F
loc_2e3a2:
	// 5828 
cs=0x17c5;eip=0x008172; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99619                  cmp     [bp+var_1C], 8 ;~ 17C5:8172
cs=0x17c5;eip=0x008176; 	J(JL(loc_2e3d3));	// 99620                  jl      short loc_2E3D3 ;~ 17C5:8176
cs=0x17c5;eip=0x008178; 	T(ax = 0x18;);	// 99621                  mov     ax, 18h ;~ 17C5:8178
cs=0x17c5;eip=0x00817b; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99622                  imul    [bp+var_1C] ;~ 17C5:817B
cs=0x17c5;eip=0x00817e; 	T(bx = ax;);	// 99623                  mov     bx, ax ;~ 17C5:817E
cs=0x17c5;eip=0x008180; 	T(ax = word_492f4;);	// 99624                  mov     ax, word_492F4 ;~ 17C5:8180
cs=0x17c5;eip=0x008183; 	T(SHL(ax, 1));	// 99625                  shl     ax, 1 ;~ 17C5:8183
cs=0x17c5;eip=0x008185; 	T(CMP(*(dw*)(raddr(ds,bx+0x0D22)), ax));	// 99626                  cmp     [bx+0D22h], ax ;~ 17C5:8185
cs=0x17c5;eip=0x008189; 	J(JLE(loc_2e3d3));	// 99627                  jle     short loc_2E3D3 ;~ 17C5:8189
cs=0x17c5;eip=0x00818b; 	T(ax = 0x58F3;);	// 99628                  mov     ax, 58F3h ;~ 17C5:818B
cs=0x17c5;eip=0x00818e; 	X(PUSH(ax));	// 99629                  push    ax ;~ 17C5:818E
cs=0x17c5;eip=0x00818f; 	T(ax = 0x66C4;);	// 99630                  mov     ax, 66C4h ;~ 17C5:818F
cs=0x17c5;eip=0x008192; 	X(PUSH(ax));	// 99631                  push    ax ;~ 17C5:8192
cs=0x17c5;eip=0x008193; 	J(CALL(sub_34bdc,0));	// 99632                  call    sub_34BDC ;~ 17C5:8193
cs=0x17c5;eip=0x008196; 	T(ADD(sp, 4));	// 99633                  add     sp, 4 ;~ 17C5:8196
loc_2e3c9:
	// 5829 
cs=0x17c5;eip=0x008199; 	T(ax = 0x66C4;);	// 99637                  mov     ax, 66C4h ;~ 17C5:8199
cs=0x17c5;eip=0x00819c; 	X(PUSH(ax));	// 99638                  push    ax ;~ 17C5:819C
cs=0x17c5;eip=0x00819d; 	J(CALL(sub_30414,0));	// 99639                  call    sub_30414 ;~ 17C5:819D
cs=0x17c5;eip=0x0081a0; 	T(ADD(sp, 2));	// 99640                  add     sp, 2 ;~ 17C5:81A0
loc_2e3d3:
	// 5830 
cs=0x17c5;eip=0x0081a3; 	T(ax = 0x18;);	// 99644                  mov     ax, 18h ;~ 17C5:81A3
cs=0x17c5;eip=0x0081a6; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99645                  imul    [bp+var_1C] ;~ 17C5:81A6
cs=0x17c5;eip=0x0081a9; 	T(si = ax;);	// 99646                  mov     si, ax ;~ 17C5:81A9
cs=0x17c5;eip=0x0081ab; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_32))));	// 99647                  mov     ax, [bp+var_32] ;~ 17C5:81AB
cs=0x17c5;eip=0x0081ae; 	T(SUB(ax, *(dw*)(raddr(ds,si+0x0D18))));	// 99648                  sub     ax, [si+0D18h] ;~ 17C5:81AE
cs=0x17c5;eip=0x0081b2; 	X(PUSH(ax));	// 99649                  push    ax ;~ 17C5:81B2
cs=0x17c5;eip=0x0081b3; 	J(CALL(sub_34dc0,0));	// 99650                  call    sub_34DC0 ;~ 17C5:81B3
cs=0x17c5;eip=0x0081b6; 	T(ADD(sp, 2));	// 99651                  add     sp, 2 ;~ 17C5:81B6
cs=0x17c5;eip=0x0081b9; 	T(cl = 5;);	// 99652                  mov     cl, 5 ;~ 17C5:81B9
cs=0x17c5;eip=0x0081bb; 	T(SAR(ax, cl));	// 99653                  sar     ax, cl ;~ 17C5:81BB
cs=0x17c5;eip=0x0081bd; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_10))));	// 99654                  add     ax, [bp+var_10] ;~ 17C5:81BD
cs=0x17c5;eip=0x0081c0; 	T(cx = ax;);	// 99655                  mov     cx, ax ;~ 17C5:81C0
cs=0x17c5;eip=0x0081c2; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D1A))));	// 99656                  mov     ax, [si+0D1Ah] ;~ 17C5:81C2
cs=0x17c5;eip=0x0081c6; 	T(dx = cx;);	// 99657                  mov     dx, cx ;~ 17C5:81C6
cs=0x17c5;eip=0x0081c8; 	T(cl = 4;);	// 99658                  mov     cl, 4 ;~ 17C5:81C8
cs=0x17c5;eip=0x0081ca; 	T(SHL(ax, cl));	// 99659                  shl     ax, cl ;~ 17C5:81CA
cs=0x17c5;eip=0x0081cc; 	T(cx = dx;);	// 99660                  mov     cx, dx ;~ 17C5:81CC
cs=0x17c5;eip=0x0081ce; 	T(CWD);	// 99661                  cwd ;~ 17C5:81CE
cs=0x17c5;eip=0x0081cf; 	T(bx = word_492f4;);	// 99662                  mov     bx, word_492F4 ;~ 17C5:81CF
cs=0x17c5;eip=0x0081d3; 	T(IDIV2(bx));	// 99663                  idiv    bx ;~ 17C5:81D3
cs=0x17c5;eip=0x0081d5; 	T(CMP(cx, ax));	// 99664                  cmp     cx, ax ;~ 17C5:81D5
cs=0x17c5;eip=0x0081d7; 	J(JC(loc_2e40c));	// 99665                  jb      short loc_2E40C ;~ 17C5:81D7
cs=0x17c5;eip=0x0081d9; 	J(JMP(loc_2e5dc));	// 99666                  jmp     loc_2E5DC ;~ 17C5:81D9
loc_2e40c:
	// 5831 
cs=0x17c5;eip=0x0081dc; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 99670                  cmp     [bp+var_4], 0 ;~ 17C5:81DC
cs=0x17c5;eip=0x0081e0; 	J(JNZ(loc_2e415));	// 99671                  jnz     short loc_2E415 ;~ 17C5:81E0
cs=0x17c5;eip=0x0081e2; 	J(JMP(loc_2e5dc));	// 99672                  jmp     loc_2E5DC ;~ 17C5:81E2
loc_2e415:
	// 5832 
cs=0x17c5;eip=0x0081e5; 	T(ax = 0x18;);	// 99676                  mov     ax, 18h ;~ 17C5:81E5
cs=0x17c5;eip=0x0081e8; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99677                  imul    [bp+var_1C] ;~ 17C5:81E8
cs=0x17c5;eip=0x0081eb; 	T(bx = ax;);	// 99678                  mov     bx, ax ;~ 17C5:81EB
cs=0x17c5;eip=0x0081ed; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0D14))));	// 99679                  mov     ax, [bx+0D14h] ;~ 17C5:81ED
cs=0x17c5;eip=0x0081f1; 	X(word_520ec = ax;);	// 99680                  mov     ds:word_520EC, ax ;~ 17C5:81F1
cs=0x17c5;eip=0x0081f4; 	T(ax = 0x18;);	// 99681                  mov     ax, 18h ;~ 17C5:81F4
cs=0x17c5;eip=0x0081f7; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99682                  imul    [bp+var_1C] ;~ 17C5:81F7
cs=0x17c5;eip=0x0081fa; 	T(si = ax;);	// 99683                  mov     si, ax ;~ 17C5:81FA
cs=0x17c5;eip=0x0081fc; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D16))));	// 99684                  mov     ax, [si+0D16h] ;~ 17C5:81FC
cs=0x17c5;eip=0x008200; 	X(word_520f8 = ax;);	// 99685                  mov     ds:word_520F8, ax ;~ 17C5:8200
cs=0x17c5;eip=0x008203; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D18))));	// 99686                  mov     ax, [si+0D18h] ;~ 17C5:8203
cs=0x17c5;eip=0x008207; 	X(word_520fe = ax;);	// 99687                  mov     ds:word_520FE, ax ;~ 17C5:8207
cs=0x17c5;eip=0x00820a; 	X(word_4f836 = 8;);	// 99688                  mov     ds:word_4F836, 8 ;~ 17C5:820A
cs=0x17c5;eip=0x008210; 	T(CMP(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 99689                  cmp     word ptr [si+0D22h], 0 ;~ 17C5:8210
cs=0x17c5;eip=0x008215; 	J(JZ(loc_2e44e));	// 99690                  jz      short loc_2E44E ;~ 17C5:8215
cs=0x17c5;eip=0x008217; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D22))));	// 99691                  mov     ax, [si+0D22h] ;~ 17C5:8217
cs=0x17c5;eip=0x00821b; 	X(word_51a0e = ax;);	// 99692                  mov     ds:word_51A0E, ax ;~ 17C5:821B
loc_2e44e:
	// 5833 
cs=0x17c5;eip=0x00821e; 	T(ax = 0x18;);	// 99695                  mov     ax, 18h ;~ 17C5:821E
cs=0x17c5;eip=0x008221; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99696                  imul    [bp+var_1C] ;~ 17C5:8221
cs=0x17c5;eip=0x008224; 	T(bx = ax;);	// 99697                  mov     bx, ax ;~ 17C5:8224
cs=0x17c5;eip=0x008226; 	X(MOV(*(dw*)(raddr(ds,bx+0x0D22)), 0));	// 99698                  mov     word ptr [bx+0D22h], 0 ;~ 17C5:8226
cs=0x17c5;eip=0x00822c; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99699                  cmp     [bp+var_1C], 8 ;~ 17C5:822C
cs=0x17c5;eip=0x008230; 	J(JGE(loc_2e4dc));	// 99700                  jge     short loc_2E4DC ;~ 17C5:8230
cs=0x17c5;eip=0x008232; 	T(CMP(*(word_4960a), 0));	// 99701                  cmp     word_4960A, 0 ;~ 17C5:8232
cs=0x17c5;eip=0x008237; 	J(JZ(loc_2e46c));	// 99702                  jz      short loc_2E46C ;~ 17C5:8237
cs=0x17c5;eip=0x008239; 	J(JMP(loc_2e5dc));	// 99703                  jmp     loc_2E5DC ;~ 17C5:8239
loc_2e46c:
	// 5834 
cs=0x17c5;eip=0x00823c; 	T(ax = 0x5902;);	// 99707                  mov     ax, 5902h ;~ 17C5:823C
cs=0x17c5;eip=0x00823f; 	X(PUSH(ax));	// 99708                  push    ax ;~ 17C5:823F
cs=0x17c5;eip=0x008240; 	T(ax = 0x66C4;);	// 99709                  mov     ax, 66C4h ;~ 17C5:8240
cs=0x17c5;eip=0x008243; 	X(PUSH(ax));	// 99710                  push    ax ;~ 17C5:8243
cs=0x17c5;eip=0x008244; 	J(CALL(sub_34c1c,0));	// 99711                  call    sub_34C1C ;~ 17C5:8244
cs=0x17c5;eip=0x008247; 	T(ADD(sp, 4));	// 99712                  add     sp, 4 ;~ 17C5:8247
cs=0x17c5;eip=0x00824a; 	T(ax = 0x12;);	// 99713                  mov     ax, 12h ;~ 17C5:824A
cs=0x17c5;eip=0x00824d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_12))));	// 99714                  imul    [bp+var_12] ;~ 17C5:824D
cs=0x17c5;eip=0x008250; 	T(ADD(ax, 0x528));	// 99715                  add     ax, 528h ;~ 17C5:8250
cs=0x17c5;eip=0x008253; 	X(PUSH(ax));	// 99716                  push    ax ;~ 17C5:8253
cs=0x17c5;eip=0x008254; 	T(ax = 0x66C4;);	// 99717                  mov     ax, 66C4h ;~ 17C5:8254
cs=0x17c5;eip=0x008257; 	X(PUSH(ax));	// 99718                  push    ax ;~ 17C5:8257
cs=0x17c5;eip=0x008258; 	J(CALL(sub_34bdc,0));	// 99719                  call    sub_34BDC ;~ 17C5:8258
cs=0x17c5;eip=0x00825b; 	T(ADD(sp, 4));	// 99720                  add     sp, 4 ;~ 17C5:825B
cs=0x17c5;eip=0x00825e; 	T(ax = 0x66C4;);	// 99721                  mov     ax, 66C4h ;~ 17C5:825E
cs=0x17c5;eip=0x008261; 	X(PUSH(ax));	// 99722                  push    ax ;~ 17C5:8261
cs=0x17c5;eip=0x008262; 	J(CALL(sub_30414,0));	// 99723                  call    sub_30414 ;~ 17C5:8262
cs=0x17c5;eip=0x008265; 	T(ADD(sp, 2));	// 99724                  add     sp, 2 ;~ 17C5:8265
cs=0x17c5;eip=0x008268; 	J(CALL(sub_2ec74,0));	// 99725                  call    sub_2EC74 ;~ 17C5:8268
cs=0x17c5;eip=0x00826b; 	T(ax = word_49918;);	// 99726                  mov     ax, word_49918 ;~ 17C5:826B
cs=0x17c5;eip=0x00826e; 	T(SAR(ax, 1));	// 99727                  sar     ax, 1 ;~ 17C5:826E
cs=0x17c5;eip=0x008270; 	T(AND(ax, 7));	// 99728                  and     ax, 7 ;~ 17C5:8270
cs=0x17c5;eip=0x008273; 	X(MOV(*(dw*)(raddr(ss,bp+var_34)), ax));	// 99729                  mov     [bp+var_34], ax ;~ 17C5:8273
cs=0x17c5;eip=0x008276; 	T(si = ax;);	// 99730                  mov     si, ax ;~ 17C5:8276
cs=0x17c5;eip=0x008278; 	T(cl = 3;);	// 99731                  mov     cl, 3 ;~ 17C5:8278
cs=0x17c5;eip=0x00827a; 	T(SHL(si, cl));	// 99732                  shl     si, cl ;~ 17C5:827A
cs=0x17c5;eip=0x00827c; 	T(ax = word_520ec;);	// 99733                  mov     ax, ds:word_520EC ;~ 17C5:827C
cs=0x17c5;eip=0x00827f; 	X(MOV(*(dw*)(raddr(ds,si+0x0B52)), ax));	// 99734                  mov     [si+0B52h], ax ;~ 17C5:827F
cs=0x17c5;eip=0x008283; 	T(ax = word_520f8;);	// 99735                  mov     ax, ds:word_520F8 ;~ 17C5:8283
cs=0x17c5;eip=0x008286; 	X(MOV(*(dw*)(raddr(ds,si+0x0B54)), ax));	// 99736                  mov     [si+0B54h], ax ;~ 17C5:8286
cs=0x17c5;eip=0x00828a; 	T(ax = word_520fe;);	// 99737                  mov     ax, ds:word_520FE ;~ 17C5:828A
cs=0x17c5;eip=0x00828d; 	X(MOV(*(dw*)(raddr(ds,si+0x0B56)), ax));	// 99738                  mov     [si+0B56h], ax ;~ 17C5:828D
cs=0x17c5;eip=0x008291; 	T(TEST(word_4f42e, 0x1000));	// 99739                  test    ds:word_4F42E, 1000h ;~ 17C5:8291
cs=0x17c5;eip=0x008297; 	J(JZ(loc_2e4cc));	// 99740                  jz      short loc_2E4CC ;~ 17C5:8297
cs=0x17c5;eip=0x008299; 	J(JMP(loc_2e5dc));	// 99741                  jmp     loc_2E5DC ;~ 17C5:8299
loc_2e4cc:
	// 5835 
cs=0x17c5;eip=0x00829c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_12))));	// 99745                  push    [bp+var_12] ;~ 17C5:829C
cs=0x17c5;eip=0x00829f; 	T(ax = 5;);	// 99746                  mov     ax, 5 ;~ 17C5:829F
cs=0x17c5;eip=0x0082a2; 	X(PUSH(ax));	// 99747                  push    ax ;~ 17C5:82A2
cs=0x17c5;eip=0x0082a3; 	J(CALL(sub_27f40,0));	// 99748                  call    sub_27F40 ;~ 17C5:82A3
cs=0x17c5;eip=0x0082a6; 	T(ADD(sp, 4));	// 99749                  add     sp, 4 ;~ 17C5:82A6
cs=0x17c5;eip=0x0082a9; 	J(JMP(loc_2e5dc));	// 99750                  jmp     loc_2E5DC ;~ 17C5:82A9
loc_2e4dc:
	// 5836 
cs=0x17c5;eip=0x0082ac; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 7));	// 99754                  cmp     [bp+var_22], 7 ;~ 17C5:82AC
cs=0x17c5;eip=0x0082b0; 	J(JNZ(loc_2e536));	// 99755                  jnz     short loc_2E536 ;~ 17C5:82B0
cs=0x17c5;eip=0x0082b2; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 99756                  push    [bp+var_14] ;~ 17C5:82B2
cs=0x17c5;eip=0x0082b5; 	J(CALL(sub_2e928,0));	// 99757                  call    sub_2E928 ;~ 17C5:82B5
cs=0x17c5;eip=0x0082b8; 	T(ADD(sp, 2));	// 99759                  add     sp, 2 ;~ 17C5:82B8
cs=0x17c5;eip=0x0082bb; 	T(ax = word_49918;);	// 99760                  mov     ax, word_49918 ;~ 17C5:82BB
cs=0x17c5;eip=0x0082be; 	T(SAR(ax, 1));	// 99761                  sar     ax, 1 ;~ 17C5:82BE
cs=0x17c5;eip=0x0082c0; 	T(AND(ax, 7));	// 99762                  and     ax, 7 ;~ 17C5:82C0
cs=0x17c5;eip=0x0082c3; 	X(MOV(*(dw*)(raddr(ss,bp+var_34)), ax));	// 99763                  mov     [bp+var_34], ax ;~ 17C5:82C3
cs=0x17c5;eip=0x0082c6; 	T(ax = 0x24;);	// 99764                  mov     ax, 24h ; '$' ;~ 17C5:82C6
cs=0x17c5;eip=0x0082c9; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_14))));	// 99765                  imul    [bp+var_14] ;~ 17C5:82C9
cs=0x17c5;eip=0x0082cc; 	T(si = ax;);	// 99766                  mov     si, ax ;~ 17C5:82CC
cs=0x17c5;eip=0x0082ce; 	T(MOV(di, *(dw*)(raddr(ss,bp+var_34))));	// 99767                  mov     di, [bp+var_34] ;~ 17C5:82CE
cs=0x17c5;eip=0x0082d1; 	T(cl = 3;);	// 99768                  mov     cl, 3 ;~ 17C5:82D1
cs=0x17c5;eip=0x0082d3; 	T(SHL(di, cl));	// 99769                  shl     di, cl ;~ 17C5:82D3
cs=0x17c5;eip=0x0082d5; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 99770                  mov     ax, [si-76ACh] ;~ 17C5:82D5
cs=0x17c5;eip=0x0082d9; 	X(word_520ec = ax;);	// 99771                  mov     ds:word_520EC, ax ;~ 17C5:82D9
cs=0x17c5;eip=0x0082dc; 	X(MOV(*(dw*)(raddr(ds,di+0x0B52)), ax));	// 99772                  mov     [di+0B52h], ax ;~ 17C5:82DC
cs=0x17c5;eip=0x0082e0; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 99773                  mov     ax, [si-76AAh] ;~ 17C5:82E0
cs=0x17c5;eip=0x0082e4; 	X(word_520f8 = ax;);	// 99774                  mov     ds:word_520F8, ax ;~ 17C5:82E4
cs=0x17c5;eip=0x0082e7; 	X(MOV(*(dw*)(raddr(ds,di+0x0B54)), ax));	// 99775                  mov     [di+0B54h], ax ;~ 17C5:82E7
cs=0x17c5;eip=0x0082eb; 	T(ax = 0x24;);	// 99776                  mov     ax, 24h ; '$' ;~ 17C5:82EB
cs=0x17c5;eip=0x0082ee; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_14))));	// 99777                  imul    [bp+var_14] ;~ 17C5:82EE
cs=0x17c5;eip=0x0082f1; 	T(bx = ax;);	// 99778                  mov     bx, ax ;~ 17C5:82F1
cs=0x17c5;eip=0x0082f3; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x76A8))));	// 99779                  mov     ax, [bx-76A8h] ;~ 17C5:82F3
cs=0x17c5;eip=0x0082f7; 	X(word_520fe = ax;);	// 99780                  mov     ds:word_520FE, ax ;~ 17C5:82F7
cs=0x17c5;eip=0x0082fa; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_34))));	// 99781                  mov     bx, [bp+var_34] ;~ 17C5:82FA
cs=0x17c5;eip=0x0082fd; 	T(SHL(bx, cl));	// 99782                  shl     bx, cl ;~ 17C5:82FD
cs=0x17c5;eip=0x0082ff; 	X(MOV(*(dw*)(raddr(ds,bx+0x0B56)), ax));	// 99783                  mov     [bx+0B56h], ax ;~ 17C5:82FF
cs=0x17c5;eip=0x008303; 	J(JMP(loc_2e5b0));	// 99784                  jmp     short loc_2E5B0 ;~ 17C5:8303
loc_2e536:
	// 5837 
cs=0x17c5;eip=0x008306; 	T(ax = 4;);	// 99789                  mov     ax, 4 ;~ 17C5:8306
cs=0x17c5;eip=0x008309; 	X(PUSH(ax));	// 99790                  push    ax ;~ 17C5:8309
cs=0x17c5;eip=0x00830a; 	J(CALL(sub_33430,0));	// 99791                  call    sub_33430 ;~ 17C5:830A
cs=0x17c5;eip=0x00830d; 	T(ADD(sp, 2));	// 99792                  add     sp, 2 ;~ 17C5:830D
cs=0x17c5;eip=0x008310; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 99793                  push    [bp+var_14] ;~ 17C5:8310
cs=0x17c5;eip=0x008313; 	T(cx = ax;);	// 99794                  mov     cx, ax ;~ 17C5:8313
cs=0x17c5;eip=0x008315; 	T(ax = 0x18;);	// 99795                  mov     ax, 18h ;~ 17C5:8315
cs=0x17c5;eip=0x008318; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99796                  imul    [bp+var_1C] ;~ 17C5:8318
cs=0x17c5;eip=0x00831b; 	T(bx = ax;);	// 99797                  mov     bx, ax ;~ 17C5:831B
cs=0x17c5;eip=0x00831d; 	X(PUSH(*(dw*)(raddr(ds,bx+0x0D26))));	// 99798                  push    word ptr [bx+0D26h] ;~ 17C5:831D
cs=0x17c5;eip=0x008321; 	T(si = cx;);	// 99799                  mov     si, cx ;~ 17C5:8321
cs=0x17c5;eip=0x008323; 	J(CALL(sub_30454,0));	// 99800                  call    sub_30454 ;~ 17C5:8323
cs=0x17c5;eip=0x008326; 	T(ADD(sp, 4));	// 99801                  add     sp, 4 ;~ 17C5:8326
cs=0x17c5;eip=0x008329; 	T(CMP(ax, si));	// 99802                  cmp     ax, si ;~ 17C5:8329
cs=0x17c5;eip=0x00832b; 	J(JG(loc_2e570));	// 99803                  jg      short loc_2E570 ;~ 17C5:832B
cs=0x17c5;eip=0x00832d; 	T(ax = word_492f4;);	// 99804                  mov     ax, word_492F4 ;~ 17C5:832D
cs=0x17c5;eip=0x008330; 	T(cx = ax;);	// 99805                  mov     cx, ax ;~ 17C5:8330
cs=0x17c5;eip=0x008332; 	T(SHL(ax, 1));	// 99806                  shl     ax, 1 ;~ 17C5:8332
cs=0x17c5;eip=0x008334; 	T(SHL(ax, 1));	// 99807                  shl     ax, 1 ;~ 17C5:8334
cs=0x17c5;eip=0x008336; 	T(ADD(ax, cx));	// 99808                  add     ax, cx ;~ 17C5:8336
cs=0x17c5;eip=0x008338; 	T(SHL(ax, 1));	// 99809                  shl     ax, 1 ;~ 17C5:8338
cs=0x17c5;eip=0x00833a; 	T(CMP(ax, word_51a0e));	// 99810                  cmp     ax, ds:word_51A0E ;~ 17C5:833A
cs=0x17c5;eip=0x00833e; 	J(JA(loc_2e57c));	// 99811                  ja      short loc_2E57C ;~ 17C5:833E
loc_2e570:
	// 5838 
cs=0x17c5;eip=0x008340; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 99814                  push    [bp+var_14] ;~ 17C5:8340
cs=0x17c5;eip=0x008343; 	J(CALL(sub_2ea1a,0));	// 99815                  call    sub_2EA1A ;~ 17C5:8343
cs=0x17c5;eip=0x008346; 	T(ADD(sp, 2));	// 99817                  add     sp, 2 ;~ 17C5:8346
cs=0x17c5;eip=0x008349; 	J(JMP(loc_2e58a));	// 99818                  jmp     short loc_2E58A ;~ 17C5:8349
loc_2e57c:
	// 5839 
cs=0x17c5;eip=0x00834c; 	T(ax = 0x590A;);	// 99823                  mov     ax, 590Ah ;~ 17C5:834C
cs=0x17c5;eip=0x00834f; 	X(PUSH(ax));	// 99824                  push    ax ;~ 17C5:834F
cs=0x17c5;eip=0x008350; 	T(ax = 0x66C4;);	// 99825                  mov     ax, 66C4h ;~ 17C5:8350
cs=0x17c5;eip=0x008353; 	X(PUSH(ax));	// 99826                  push    ax ;~ 17C5:8353
cs=0x17c5;eip=0x008354; 	J(CALL(sub_34c1c,0));	// 99827                  call    sub_34C1C ;~ 17C5:8354
cs=0x17c5;eip=0x008357; 	T(ADD(sp, 4));	// 99828                  add     sp, 4 ;~ 17C5:8357
loc_2e58a:
	// 5840 
cs=0x17c5;eip=0x00835a; 	T(ax = 0x18;);	// 99831                  mov     ax, 18h ;~ 17C5:835A
cs=0x17c5;eip=0x00835d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99832                  imul    [bp+var_1C] ;~ 17C5:835D
cs=0x17c5;eip=0x008360; 	T(bx = ax;);	// 99833                  mov     bx, ax ;~ 17C5:8360
cs=0x17c5;eip=0x008362; 	X(MOV(*(dw*)(raddr(ds,bx+0x0D22)), 0));	// 99834                  mov     word ptr [bx+0D22h], 0 ;~ 17C5:8362
cs=0x17c5;eip=0x008368; 	T(ax = *(dw*)(asc_512dc););	// 99835                  mov     ax, word ptr ds:asc_512DC ; "\v\v\v\v\v\v\v\v\v\v" ;~ 17C5:8368
cs=0x17c5;eip=0x00836b; 	X(word_49920 = ax;);	// 99836                  mov     word_49920, ax ;~ 17C5:836B
cs=0x17c5;eip=0x00836e; 	T(ax = word_520ec;);	// 99837                  mov     ax, ds:word_520EC ;~ 17C5:836E
cs=0x17c5;eip=0x008371; 	X(word_51708 = ax;);	// 99838                  mov     ds:word_51708, ax ;~ 17C5:8371
cs=0x17c5;eip=0x008374; 	T(ax = word_520f8;);	// 99839                  mov     ax, ds:word_520F8 ;~ 17C5:8374
cs=0x17c5;eip=0x008377; 	X(word_51710 = ax;);	// 99840                  mov     ds:word_51710, ax ;~ 17C5:8377
cs=0x17c5;eip=0x00837a; 	X(word_51806 = 0x0BB8;);	// 99841                  mov     ds:word_51806, 0BB8h ;~ 17C5:837A
loc_2e5b0:
	// 5841 
cs=0x17c5;eip=0x008380; 	T(ax = 0x5916;);	// 99844                  mov     ax, 5916h ;~ 17C5:8380
cs=0x17c5;eip=0x008383; 	X(PUSH(ax));	// 99845                  push    ax ;~ 17C5:8383
cs=0x17c5;eip=0x008384; 	T(ax = 0x66C4;);	// 99846                  mov     ax, 66C4h ;~ 17C5:8384
cs=0x17c5;eip=0x008387; 	X(PUSH(ax));	// 99847                  push    ax ;~ 17C5:8387
cs=0x17c5;eip=0x008388; 	J(CALL(sub_34bdc,0));	// 99848                  call    sub_34BDC ;~ 17C5:8388
cs=0x17c5;eip=0x00838b; 	T(ADD(sp, 4));	// 99849                  add     sp, 4 ;~ 17C5:838B
cs=0x17c5;eip=0x00838e; 	T(ax = 0x12;);	// 99850                  mov     ax, 12h ;~ 17C5:838E
cs=0x17c5;eip=0x008391; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_12))));	// 99851                  imul    [bp+var_12] ;~ 17C5:8391
cs=0x17c5;eip=0x008394; 	T(ADD(ax, 0x528));	// 99852                  add     ax, 528h ;~ 17C5:8394
cs=0x17c5;eip=0x008397; 	X(PUSH(ax));	// 99853                  push    ax ;~ 17C5:8397
cs=0x17c5;eip=0x008398; 	T(ax = 0x66C4;);	// 99854                  mov     ax, 66C4h ;~ 17C5:8398
cs=0x17c5;eip=0x00839b; 	X(PUSH(ax));	// 99855                  push    ax ;~ 17C5:839B
cs=0x17c5;eip=0x00839c; 	J(CALL(sub_34bdc,0));	// 99856                  call    sub_34BDC ;~ 17C5:839C
cs=0x17c5;eip=0x00839f; 	T(ADD(sp, 4));	// 99857                  add     sp, 4 ;~ 17C5:839F
cs=0x17c5;eip=0x0083a2; 	T(ax = 0x66C4;);	// 99858                  mov     ax, 66C4h ;~ 17C5:83A2
cs=0x17c5;eip=0x0083a5; 	X(PUSH(ax));	// 99859                  push    ax ;~ 17C5:83A5
cs=0x17c5;eip=0x0083a6; 	J(CALL(sub_30414,0));	// 99860                  call    sub_30414 ;~ 17C5:83A6
cs=0x17c5;eip=0x0083a9; 	T(ADD(sp, 2));	// 99861                  add     sp, 2 ;~ 17C5:83A9
loc_2e5dc:
	// 5842 
cs=0x17c5;eip=0x0083ac; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99865                  cmp     [bp+var_1C], 8 ;~ 17C5:83AC
cs=0x17c5;eip=0x0083b0; 	J(JGE(loc_2e624));	// 99866                  jge     short loc_2E624 ;~ 17C5:83B0
cs=0x17c5;eip=0x0083b2; 	T(ax = 0x18;);	// 99867                  mov     ax, 18h ;~ 17C5:83B2
cs=0x17c5;eip=0x0083b5; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99868                  imul    [bp+var_1C] ;~ 17C5:83B5
cs=0x17c5;eip=0x0083b8; 	T(si = ax;);	// 99869                  mov     si, ax ;~ 17C5:83B8
cs=0x17c5;eip=0x0083ba; 	T(CMP(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 99870                  cmp     word ptr [si+0D22h], 0 ;~ 17C5:83BA
cs=0x17c5;eip=0x0083bf; 	J(JZ(loc_2e624));	// 99871                  jz      short loc_2E624 ;~ 17C5:83BF
cs=0x17c5;eip=0x0083c1; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D16))));	// 99872                  push    word ptr [si+0D16h] ;~ 17C5:83C1
cs=0x17c5;eip=0x0083c5; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D14))));	// 99873                  push    word ptr [si+0D14h] ;~ 17C5:83C5
cs=0x17c5;eip=0x0083c9; 	J(CALL(sub_2fc7d,0));	// 99874                  call    sub_2FC7D ;~ 17C5:83C9
cs=0x17c5;eip=0x0083cc; 	T(ADD(sp, 4));	// 99875                  add     sp, 4 ;~ 17C5:83CC
cs=0x17c5;eip=0x0083cf; 	X(MOV(*(dw*)(raddr(ds,si+0x0D28)), ax));	// 99876                  mov     [si+0D28h], ax ;~ 17C5:83CF
cs=0x17c5;eip=0x0083d3; 	T(TEST(*(db*)(&word_49918), 1));	// 99877                  test    byte ptr word_49918, 1 ;~ 17C5:83D3
cs=0x17c5;eip=0x0083d8; 	J(JZ(loc_2e624));	// 99878                  jz      short loc_2E624 ;~ 17C5:83D8
cs=0x17c5;eip=0x0083da; 	T(ax = 0x18;);	// 99879                  mov     ax, 18h ;~ 17C5:83DA
cs=0x17c5;eip=0x0083dd; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99880                  imul    [bp+var_1C] ;~ 17C5:83DD
cs=0x17c5;eip=0x0083e0; 	T(si = ax;);	// 99881                  mov     si, ax ;~ 17C5:83E0
cs=0x17c5;eip=0x0083e2; 	T(ax = 0x0E;);	// 99882                  mov     ax, 0Eh ;~ 17C5:83E2
cs=0x17c5;eip=0x0083e5; 	X(PUSH(ax));	// 99883                  push    ax ;~ 17C5:83E5
cs=0x17c5;eip=0x0083e6; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D16))));	// 99884                  push    word ptr [si+0D16h] ;~ 17C5:83E6
cs=0x17c5;eip=0x0083ea; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D14))));	// 99885                  push    word ptr [si+0D14h] ;~ 17C5:83EA
cs=0x17c5;eip=0x0083ee; 	J(CALL(sub_2fb6a,0));	// 99886                  call    sub_2FB6A ;~ 17C5:83EE
cs=0x17c5;eip=0x0083f1; 	T(ADD(sp, 6));	// 99887                  add     sp, 6 ;~ 17C5:83F1
loc_2e624:
	// 5843 
cs=0x17c5;eip=0x0083f4; 	X(INC(*(dw*)(raddr(ss,bp+var_1c))));	// 99891                  inc     [bp+var_1C] ;~ 17C5:83F4
loc_2e627:
	// 5844 
cs=0x17c5;eip=0x0083f7; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 0x0C));	// 99894                  cmp     [bp+var_1C], 0Ch ;~ 17C5:83F7
cs=0x17c5;eip=0x0083fb; 	J(JL(loc_2e630));	// 99895                  jl      short loc_2E630 ;~ 17C5:83FB
cs=0x17c5;eip=0x0083fd; 	J(JMP(loc_2e7e8));	// 99896                  jmp     loc_2E7E8 ;~ 17C5:83FD
loc_2e630:
	// 5845 
cs=0x17c5;eip=0x008400; 	T(ax = 0x18;);	// 99900                  mov     ax, 18h ;~ 17C5:8400
cs=0x17c5;eip=0x008403; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99901                  imul    [bp+var_1C] ;~ 17C5:8403
cs=0x17c5;eip=0x008406; 	T(si = ax;);	// 99902                  mov     si, ax ;~ 17C5:8406
cs=0x17c5;eip=0x008408; 	T(CMP(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 99903                  cmp     word ptr [si+0D22h], 0 ;~ 17C5:8408
cs=0x17c5;eip=0x00840d; 	J(JZ(loc_2e624));	// 99904                  jz      short loc_2E624 ;~ 17C5:840D
cs=0x17c5;eip=0x00840f; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D24))));	// 99905                  mov     ax, [si+0D24h] ;~ 17C5:840F
cs=0x17c5;eip=0x008413; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), ax));	// 99906                  mov     [bp+var_12], ax ;~ 17C5:8413
cs=0x17c5;eip=0x008416; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 99907                  mov     [bp+var_4], 0 ;~ 17C5:8416
cs=0x17c5;eip=0x00841b; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0));	// 99908                  mov     [bp+var_6], 0 ;~ 17C5:841B
cs=0x17c5;eip=0x008420; 	T(ax = 0x12;);	// 99909                  mov     ax, 12h ;~ 17C5:8420
cs=0x17c5;eip=0x008423; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_12))));	// 99910                  imul    [bp+var_12] ;~ 17C5:8423
cs=0x17c5;eip=0x008426; 	T(bx = ax;);	// 99911                  mov     bx, ax ;~ 17C5:8426
cs=0x17c5;eip=0x008428; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x534))));	// 99912                  mov     ax, [bx+534h] ;~ 17C5:8428
cs=0x17c5;eip=0x00842c; 	X(MOV(*(dw*)(raddr(ss,bp+var_22)), ax));	// 99913                  mov     [bp+var_22], ax ;~ 17C5:842C
cs=0x17c5;eip=0x00842f; 	T(CMP(*(dw*)(raddr(ss,bp+var_1c)), 8));	// 99914                  cmp     [bp+var_1C], 8 ;~ 17C5:842F
cs=0x17c5;eip=0x008433; 	J(JL(loc_2e668));	// 99915                  jl      short loc_2E668 ;~ 17C5:8433
cs=0x17c5;eip=0x008435; 	J(JMP(loc_2dc68));	// 99916                  jmp     loc_2DC68 ;~ 17C5:8435
loc_2e668:
	// 5846 
cs=0x17c5;eip=0x008438; 	T(ax = 0x18;);	// 99920                  mov     ax, 18h ;~ 17C5:8438
cs=0x17c5;eip=0x00843b; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 99921                  imul    [bp+var_1C] ;~ 17C5:843B
cs=0x17c5;eip=0x00843e; 	T(si = ax;);	// 99922                  mov     si, ax ;~ 17C5:843E
cs=0x17c5;eip=0x008440; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D28))));	// 99923                  push    word ptr [si+0D28h] ;~ 17C5:8440
cs=0x17c5;eip=0x008444; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D16))));	// 99924                  push    word ptr [si+0D16h] ;~ 17C5:8444
cs=0x17c5;eip=0x008448; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D14))));	// 99925                  push    word ptr [si+0D14h] ;~ 17C5:8448
cs=0x17c5;eip=0x00844c; 	J(CALL(sub_2fb6a,0));	// 99926                  call    sub_2FB6A ;~ 17C5:844C
cs=0x17c5;eip=0x00844f; 	T(ADD(sp, 6));	// 99927                  add     sp, 6 ;~ 17C5:844F
cs=0x17c5;eip=0x008452; 	T(ax = word_4e2fe;);	// 99928                  mov     ax, ds:word_4E2FE ;~ 17C5:8452
cs=0x17c5;eip=0x008455; 	X(MOV(*(dw*)(raddr(ss,bp+var_32)), ax));	// 99929                  mov     [bp+var_32], ax ;~ 17C5:8455
cs=0x17c5;eip=0x008458; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 99930                  push    [bp+var_22] ;~ 17C5:8458
cs=0x17c5;eip=0x00845b; 	X(PUSH(ax));	// 99931                  push    ax ;~ 17C5:845B
cs=0x17c5;eip=0x00845c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_30))));	// 99932                  push    [bp+var_30] ;~ 17C5:845C
cs=0x17c5;eip=0x00845f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2a))));	// 99933                  push    [bp+var_2A] ;~ 17C5:845F
cs=0x17c5;eip=0x008462; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 99934                  push    [bp+var_1C] ;~ 17C5:8462
cs=0x17c5;eip=0x008465; 	J(CALL(sub_2e7ee,0));	// 99935                  call    sub_2E7EE ;~ 17C5:8465
cs=0x17c5;eip=0x008468; 	T(ADD(sp, 0x0A));	// 99936                  add     sp, 0Ah ;~ 17C5:8468
cs=0x17c5;eip=0x00846b; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 99937                  mov     [bp+var_4], ax ;~ 17C5:846B
cs=0x17c5;eip=0x00846e; 	T(ax = word_4ef20;);	// 99938                  mov     ax, ds:word_4EF20 ;~ 17C5:846E
cs=0x17c5;eip=0x008471; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 99939                  mov     [bp+var_10], ax ;~ 17C5:8471
cs=0x17c5;eip=0x008474; 	T(ax = word_4ef22;);	// 99940                  mov     ax, ds:word_4EF22 ;~ 17C5:8474
cs=0x17c5;eip=0x008477; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 99941                  mov     [bp+var_6], ax ;~ 17C5:8477
cs=0x17c5;eip=0x00847a; 	X(MOV(*(dw*)(raddr(ss,bp+var_20)), 1));	// 99942                  mov     [bp+var_20], 1 ;~ 17C5:847A
loc_2e6af:
	// 5847 
cs=0x17c5;eip=0x00847f; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_20))));	// 99945                  mov     bx, [bp+var_20] ;~ 17C5:847F
cs=0x17c5;eip=0x008482; 	T(ax = bx;);	// 99946                  mov     ax, bx ;~ 17C5:8482
cs=0x17c5;eip=0x008484; 	T(SHL(bx, 1));	// 99947                  shl     bx, 1 ;~ 17C5:8484
cs=0x17c5;eip=0x008486; 	T(ADD(bx, ax));	// 99948                  add     bx, ax ;~ 17C5:8486
cs=0x17c5;eip=0x008488; 	T(SHL(bx, 1));	// 99949                  shl     bx, 1 ;~ 17C5:8488
cs=0x17c5;eip=0x00848a; 	T(SHL(bx, 1));	// 99950                  shl     bx, 1 ;~ 17C5:848A
cs=0x17c5;eip=0x00848c; 	T(CMP(*(dw*)(raddr(ds,bx+0x0B28)), 1));	// 99951                  cmp     word ptr [bx+0B28h], 1 ;~ 17C5:848C
cs=0x17c5;eip=0x008491; 	J(JNZ(loc_2e6c9));	// 99952                  jnz     short loc_2E6C9 ;~ 17C5:8491
cs=0x17c5;eip=0x008493; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 0));	// 99953                  cmp     [bp+var_22], 0 ;~ 17C5:8493
cs=0x17c5;eip=0x008497; 	J(JLE(loc_2e722));	// 99954                  jle     short loc_2E722 ;~ 17C5:8497
loc_2e6c9:
	// 5848 
cs=0x17c5;eip=0x008499; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_20))));	// 99957                  mov     bx, [bp+var_20] ;~ 17C5:8499
cs=0x17c5;eip=0x00849c; 	T(ax = bx;);	// 99958                  mov     ax, bx ;~ 17C5:849C
cs=0x17c5;eip=0x00849e; 	T(SHL(bx, 1));	// 99959                  shl     bx, 1 ;~ 17C5:849E
cs=0x17c5;eip=0x0084a0; 	T(ADD(bx, ax));	// 99960                  add     bx, ax ;~ 17C5:84A0
cs=0x17c5;eip=0x0084a2; 	T(SHL(bx, 1));	// 99961                  shl     bx, 1 ;~ 17C5:84A2
cs=0x17c5;eip=0x0084a4; 	T(SHL(bx, 1));	// 99962                  shl     bx, 1 ;~ 17C5:84A4
cs=0x17c5;eip=0x0084a6; 	T(CMP(*(dw*)(raddr(ds,bx+0x0B28)), 2));	// 99963                  cmp     word ptr [bx+0B28h], 2 ;~ 17C5:84A6
cs=0x17c5;eip=0x0084ab; 	J(JNZ(loc_2e758));	// 99964                  jnz     short loc_2E758 ;~ 17C5:84AB
cs=0x17c5;eip=0x0084ad; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 1));	// 99965                  cmp     [bp+var_22], 1 ;~ 17C5:84AD
cs=0x17c5;eip=0x0084b1; 	J(JZ(loc_2e722));	// 99966                  jz      short loc_2E722 ;~ 17C5:84B1
cs=0x17c5;eip=0x0084b3; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 2));	// 99967                  cmp     [bp+var_22], 2 ;~ 17C5:84B3
cs=0x17c5;eip=0x0084b7; 	J(JZ(loc_2e722));	// 99968                  jz      short loc_2E722 ;~ 17C5:84B7
cs=0x17c5;eip=0x0084b9; 	T(CMP(*(dw*)(raddr(ss,bp+var_22)), 3));	// 99969                  cmp     [bp+var_22], 3 ;~ 17C5:84B9
cs=0x17c5;eip=0x0084bd; 	J(JNZ(loc_2e758));	// 99970                  jnz     short loc_2E758 ;~ 17C5:84BD
cs=0x17c5;eip=0x0084bf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 99971                  mov     ax, [bp+var_6] ;~ 17C5:84BF
cs=0x17c5;eip=0x0084c2; 	T(SUB(ax, word_4e2f8));	// 99972                  sub     ax, ds:word_4E2F8 ;~ 17C5:84C2
cs=0x17c5;eip=0x0084c6; 	T(cl = 8;);	// 99973                  mov     cl, 8 ;~ 17C5:84C6
cs=0x17c5;eip=0x0084c8; 	T(SAR(ax, cl));	// 99974                  sar     ax, cl ;~ 17C5:84C8
cs=0x17c5;eip=0x0084ca; 	X(PUSH(ax));	// 99975                  push    ax ;~ 17C5:84CA
cs=0x17c5;eip=0x0084cb; 	J(CALL(sub_34dc0,0));	// 99976                  call    sub_34DC0 ;~ 17C5:84CB
cs=0x17c5;eip=0x0084ce; 	T(ADD(sp, 2));	// 99977                  add     sp, 2 ;~ 17C5:84CE
cs=0x17c5;eip=0x0084d1; 	T(SUB(ax, 0x40));	// 99978                  sub     ax, 40h ; '@' ;~ 17C5:84D1
cs=0x17c5;eip=0x0084d4; 	X(PUSH(ax));	// 99979                  push    ax ;~ 17C5:84D4
cs=0x17c5;eip=0x0084d5; 	J(CALL(sub_34dc0,0));	// 99980                  call    sub_34DC0 ;~ 17C5:84D5
cs=0x17c5;eip=0x0084d8; 	T(ADD(sp, 2));	// 99981                  add     sp, 2 ;~ 17C5:84D8
cs=0x17c5;eip=0x0084db; 	T(cx = word_492e8;);	// 99982                  mov     cx, word_492E8 ;~ 17C5:84DB
cs=0x17c5;eip=0x0084df; 	T(dx = cx;);	// 99983                  mov     dx, cx ;~ 17C5:84DF
cs=0x17c5;eip=0x0084e1; 	T(SHL(cx, 1));	// 99984                  shl     cx, 1 ;~ 17C5:84E1
cs=0x17c5;eip=0x0084e3; 	T(ADD(cx, dx));	// 99985                  add     cx, dx ;~ 17C5:84E3
cs=0x17c5;eip=0x0084e5; 	T(SHL(cx, 1));	// 99986                  shl     cx, 1 ;~ 17C5:84E5
cs=0x17c5;eip=0x0084e7; 	T(SHL(cx, 1));	// 99987                  shl     cx, 1 ;~ 17C5:84E7
cs=0x17c5;eip=0x0084e9; 	T(SUB(cx, 0x40));	// 99988                  sub     cx, 40h ; '@' ;~ 17C5:84E9
cs=0x17c5;eip=0x0084ec; 	T(NEG(cx));	// 99989                  neg     cx ;~ 17C5:84EC
cs=0x17c5;eip=0x0084ee; 	T(CMP(cx, ax));	// 99990                  cmp     cx, ax ;~ 17C5:84EE
cs=0x17c5;eip=0x0084f0; 	J(JLE(loc_2e758));	// 99991                  jle     short loc_2E758 ;~ 17C5:84F0
loc_2e722:
	// 5849 
cs=0x17c5;eip=0x0084f2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_20))));	// 99995                  mov     ax, [bp+var_20] ;~ 17C5:84F2
cs=0x17c5;eip=0x0084f5; 	T(cx = ax;);	// 99996                  mov     cx, ax ;~ 17C5:84F5
cs=0x17c5;eip=0x0084f7; 	T(SHL(ax, 1));	// 99997                  shl     ax, 1 ;~ 17C5:84F7
cs=0x17c5;eip=0x0084f9; 	T(ADD(ax, cx));	// 99998                  add     ax, cx ;~ 17C5:84F9
cs=0x17c5;eip=0x0084fb; 	T(SHL(ax, 1));	// 99999                  shl     ax, 1 ;~ 17C5:84FB
cs=0x17c5;eip=0x0084fd; 	T(SHL(ax, 1));	// 100000                  shl     ax, 1 ;~ 17C5:84FD
cs=0x17c5;eip=0x0084ff; 	T(si = ax;);	// 100001                  mov     si, ax ;~ 17C5:84FF
cs=0x17c5;eip=0x008501; 	X(PUSH(*(dw*)(raddr(ss,bp+var_22))));	// 100002                  push    [bp+var_22] ;~ 17C5:8501
cs=0x17c5;eip=0x008504; 	X(PUSH(word_4e2fe));	// 100003                  push    ds:word_4E2FE ;~ 17C5:8504
cs=0x17c5;eip=0x008508; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B24))));	// 100004                  push    word ptr [si+0B24h] ;~ 17C5:8508
cs=0x17c5;eip=0x00850c; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B22))));	// 100005                  push    word ptr [si+0B22h] ;~ 17C5:850C
cs=0x17c5;eip=0x008510; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 100006                  push    [bp+var_1C] ;~ 17C5:8510
cs=0x17c5;eip=0x008513; 	J(CALL(sub_2e7ee,0));	// 100007                  call    sub_2E7EE ;~ 17C5:8513
cs=0x17c5;eip=0x008516; 	T(ADD(sp, 0x0A));	// 100008                  add     sp, 0Ah ;~ 17C5:8516
cs=0x17c5;eip=0x008519; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 100009                  mov     [bp+var_2], ax ;~ 17C5:8519
cs=0x17c5;eip=0x00851c; 	T(OR(ax, ax));	// 100010                  or      ax, ax ;~ 17C5:851C
cs=0x17c5;eip=0x00851e; 	J(JZ(loc_2e758));	// 100011                  jz      short loc_2E758 ;~ 17C5:851E
cs=0x17c5;eip=0x008520; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 100012                  mov     [bp+var_6], ax ;~ 17C5:8520
cs=0x17c5;eip=0x008523; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 100013                  mov     [bp+var_4], 0 ;~ 17C5:8523
loc_2e758:
	// 5850 
cs=0x17c5;eip=0x008528; 	X(INC(*(dw*)(raddr(ss,bp+var_20))));	// 100017                  inc     [bp+var_20] ;~ 17C5:8528
cs=0x17c5;eip=0x00852b; 	T(CMP(*(dw*)(raddr(ss,bp+var_20)), 4));	// 100018                  cmp     [bp+var_20], 4 ;~ 17C5:852B
cs=0x17c5;eip=0x00852f; 	J(JGE(loc_2e764));	// 100019                  jge     short loc_2E764 ;~ 17C5:852F
cs=0x17c5;eip=0x008531; 	J(JMP(loc_2e6af));	// 100020                  jmp     loc_2E6AF ;~ 17C5:8531
loc_2e764:
	// 5851 
cs=0x17c5;eip=0x008534; 	T(CMP(*(dw*)(raddr(ss,bp+var_10)), 0x200));	// 100024                  cmp     [bp+var_10], 200h ;~ 17C5:8534
cs=0x17c5;eip=0x008539; 	J(JBE(loc_2e7b5));	// 100025                  jbe     short loc_2E7B5 ;~ 17C5:8539
cs=0x17c5;eip=0x00853b; 	T(ax = 0x18;);	// 100026                  mov     ax, 18h ;~ 17C5:853B
cs=0x17c5;eip=0x00853e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 100027                  imul    [bp+var_1C] ;~ 17C5:853E
cs=0x17c5;eip=0x008541; 	T(bx = ax;);	// 100028                  mov     bx, ax ;~ 17C5:8541
cs=0x17c5;eip=0x008543; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x0D2A))));	// 100029                  mov     si, [bx+0D2Ah] ;~ 17C5:8543
cs=0x17c5;eip=0x008547; 	T(CMP(si, 2));	// 100030                  cmp     si, 2 ;~ 17C5:8547
cs=0x17c5;eip=0x00854a; 	J(JLE(loc_2e78e));	// 100031                  jle     short loc_2E78E ;~ 17C5:854A
cs=0x17c5;eip=0x00854c; 	T(bx = si;);	// 100032                  mov     bx, si ;~ 17C5:854C
cs=0x17c5;eip=0x00854e; 	T(cl = 4;);	// 100033                  mov     cl, 4 ;~ 17C5:854E
cs=0x17c5;eip=0x008550; 	T(SHL(bx, cl));	// 100034                  shl     bx, cl ;~ 17C5:8550
cs=0x17c5;eip=0x008552; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 0x10));	// 100035                  test    byte ptr [bx-7E4Ch], 10h ;~ 17C5:8552
cs=0x17c5;eip=0x008557; 	J(JNZ(loc_2e78e));	// 100036                  jnz     short loc_2E78E ;~ 17C5:8557
cs=0x17c5;eip=0x008559; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 100037                  mov     [bp+var_4], 0 ;~ 17C5:8559
loc_2e78e:
	// 5852 
cs=0x17c5;eip=0x00855e; 	T(ax = 0x18;);	// 100041                  mov     ax, 18h ;~ 17C5:855E
cs=0x17c5;eip=0x008561; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 100042                  imul    [bp+var_1C] ;~ 17C5:8561
cs=0x17c5;eip=0x008564; 	T(bx = ax;);	// 100043                  mov     bx, ax ;~ 17C5:8564
cs=0x17c5;eip=0x008566; 	T(MOV(si, *(dw*)(raddr(ds,bx+0x0D2A))));	// 100044                  mov     si, [bx+0D2Ah] ;~ 17C5:8566
cs=0x17c5;eip=0x00856a; 	T(OR(si, si));	// 100045                  or      si, si ;~ 17C5:856A
cs=0x17c5;eip=0x00856c; 	J(JG(loc_2e7b5));	// 100046                  jg      short loc_2E7B5 ;~ 17C5:856C
cs=0x17c5;eip=0x00856e; 	T(ax = si;);	// 100047                  mov     ax, si ;~ 17C5:856E
cs=0x17c5;eip=0x008570; 	T(NEG(ax));	// 100048                  neg     ax ;~ 17C5:8570
cs=0x17c5;eip=0x008572; 	T(cx = 0x24;);	// 100049                  mov     cx, 24h ; '$' ;~ 17C5:8572
cs=0x17c5;eip=0x008575; 	T(IMUL1_2(cx));	// 100050                  imul    cx ;~ 17C5:8575
cs=0x17c5;eip=0x008577; 	T(bx = ax;);	// 100051                  mov     bx, ax ;~ 17C5:8577
cs=0x17c5;eip=0x008579; 	T(TEST(*(raddr(ds,bx-0x7696)), 8));	// 100052                  test    byte ptr [bx-7696h], 8 ;~ 17C5:8579
cs=0x17c5;eip=0x00857e; 	J(JNZ(loc_2e7b5));	// 100053                  jnz     short loc_2E7B5 ;~ 17C5:857E
cs=0x17c5;eip=0x008580; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 100054                  mov     [bp+var_4], 0 ;~ 17C5:8580
loc_2e7b5:
	// 5853 
cs=0x17c5;eip=0x008585; 	T(ax = 0x18;);	// 100058                  mov     ax, 18h ;~ 17C5:8585
cs=0x17c5;eip=0x008588; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_1c))));	// 100059                  imul    [bp+var_1C] ;~ 17C5:8588
cs=0x17c5;eip=0x00858b; 	T(si = ax;);	// 100060                  mov     si, ax ;~ 17C5:858B
cs=0x17c5;eip=0x00858d; 	T(ADD(si, 0x0D1A));	// 100061                  add     si, 0D1Ah ;~ 17C5:858D
cs=0x17c5;eip=0x008591; 	T(ax = 0x12;);	// 100062                  mov     ax, 12h ;~ 17C5:8591
cs=0x17c5;eip=0x008594; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_12))));	// 100063                  imul    [bp+var_12] ;~ 17C5:8594
cs=0x17c5;eip=0x008597; 	T(bx = ax;);	// 100064                  mov     bx, ax ;~ 17C5:8597
cs=0x17c5;eip=0x008599; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x532))));	// 100065                  mov     ax, [bx+532h] ;~ 17C5:8599
cs=0x17c5;eip=0x00859d; 	T(cl = 6;);	// 100066                  mov     cl, 6 ;~ 17C5:859D
cs=0x17c5;eip=0x00859f; 	T(SAR(ax, cl));	// 100067                  sar     ax, cl ;~ 17C5:859F
cs=0x17c5;eip=0x0085a1; 	T(CMP(ax, *(dw*)(raddr(ds,si))));	// 100068                  cmp     ax, [si] ;~ 17C5:85A1
cs=0x17c5;eip=0x0085a3; 	J(JG(loc_2e7d8));	// 100069                  jg      short loc_2E7D8 ;~ 17C5:85A3
cs=0x17c5;eip=0x0085a5; 	J(JMP(loc_2de77));	// 100070                  jmp     loc_2DE77 ;~ 17C5:85A5
loc_2e7d8:
	// 5854 
cs=0x17c5;eip=0x0085a8; 	T(TEST(*(db*)(&word_49918), 1));	// 100074                  test    byte ptr word_49918, 1 ;~ 17C5:85A8
cs=0x17c5;eip=0x0085ad; 	J(JNZ(loc_2e7e2));	// 100075                  jnz     short loc_2E7E2 ;~ 17C5:85AD
cs=0x17c5;eip=0x0085af; 	J(JMP(loc_2de77));	// 100076                  jmp     loc_2DE77 ;~ 17C5:85AF
loc_2e7e2:
	// 5855 
cs=0x17c5;eip=0x0085b2; 	X(INC(*(dw*)(raddr(ds,si))));	// 100080                  inc     word ptr [si] ;~ 17C5:85B2
cs=0x17c5;eip=0x0085b4; 	J(JMP(loc_2de77));	// 100081                  jmp     loc_2DE77 ;~ 17C5:85B4
loc_2e7e8:
	// 5856 
cs=0x17c5;eip=0x0085b8; 	X(POP(si));	// 100086                  pop     si ;~ 17C5:85B8
cs=0x17c5;eip=0x0085b9; 	X(POP(di));	// 100087                  pop     di ;~ 17C5:85B9
cs=0x17c5;eip=0x0085ba; 	T(sp = bp;);	// 100088                  mov     sp, bp ;~ 17C5:85BA
cs=0x17c5;eip=0x0085bc; 	X(POP(bp));	// 100089                  pop     bp ;~ 17C5:85BC
cs=0x17c5;eip=0x0085bd; 	J(RETN(0));	// 100090                  retn ;~ 17C5:85BD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2dc54: 	goto loc_2dc54;
        case m2c::kloc_2dc5d: 	goto loc_2dc5d;
        case m2c::kloc_2dc68: 	goto loc_2dc68;
        case m2c::kloc_2dc76: 	goto loc_2dc76;
        case m2c::kloc_2dc7e: 	goto loc_2dc7e;
        case m2c::kloc_2dd00: 	goto loc_2dd00;
        case m2c::kloc_2dd03: 	goto loc_2dd03;
        case m2c::kloc_2dd0e: 	goto loc_2dd0e;
        case m2c::kloc_2dd3e: 	goto loc_2dd3e;
        case m2c::kloc_2dd59: 	goto loc_2dd59;
        case m2c::kloc_2dd6b: 	goto loc_2dd6b;
        case m2c::kloc_2dd72: 	goto loc_2dd72;
        case m2c::kloc_2dd75: 	goto loc_2dd75;
        case m2c::kloc_2dd80: 	goto loc_2dd80;
        case m2c::kloc_2dd94: 	goto loc_2dd94;
        case m2c::kloc_2dda0: 	goto loc_2dda0;
        case m2c::kloc_2ddae: 	goto loc_2ddae;
        case m2c::kloc_2ddc2: 	goto loc_2ddc2;
        case m2c::kloc_2de10: 	goto loc_2de10;
        case m2c::kloc_2de77: 	goto loc_2de77;
        case m2c::kloc_2de80: 	goto loc_2de80;
        case m2c::kloc_2de89: 	goto loc_2de89;
        case m2c::kloc_2dec6: 	goto loc_2dec6;
        case m2c::kloc_2dee0: 	goto loc_2dee0;
        case m2c::kloc_2df17: 	goto loc_2df17;
        case m2c::kloc_2df20: 	goto loc_2df20;
        case m2c::kloc_2df29: 	goto loc_2df29;
        case m2c::kloc_2df62: 	goto loc_2df62;
        case m2c::kloc_2dfd4: 	goto loc_2dfd4;
        case m2c::kloc_2dffc: 	goto loc_2dffc;
        case m2c::kloc_2dffe: 	goto loc_2dffe;
        case m2c::kloc_2e017: 	goto loc_2e017;
        case m2c::kloc_2e078: 	goto loc_2e078;
        case m2c::kloc_2e0a4: 	goto loc_2e0a4;
        case m2c::kloc_2e0c0: 	goto loc_2e0c0;
        case m2c::kloc_2e0d5: 	goto loc_2e0d5;
        case m2c::kloc_2e0f9: 	goto loc_2e0f9;
        case m2c::kloc_2e13e: 	goto loc_2e13e;
        case m2c::kloc_2e14c: 	goto loc_2e14c;
        case m2c::kloc_2e1bc: 	goto loc_2e1bc;
        case m2c::kloc_2e1c9: 	goto loc_2e1c9;
        case m2c::kloc_2e1f8: 	goto loc_2e1f8;
        case m2c::kloc_2e211: 	goto loc_2e211;
        case m2c::kloc_2e273: 	goto loc_2e273;
        case m2c::kloc_2e2da: 	goto loc_2e2da;
        case m2c::kloc_2e2f3: 	goto loc_2e2f3;
        case m2c::kloc_2e303: 	goto loc_2e303;
        case m2c::kloc_2e30f: 	goto loc_2e30f;
        case m2c::kloc_2e326: 	goto loc_2e326;
        case m2c::kloc_2e36b: 	goto loc_2e36b;
        case m2c::kloc_2e3a2: 	goto loc_2e3a2;
        case m2c::kloc_2e3c9: 	goto loc_2e3c9;
        case m2c::kloc_2e3d3: 	goto loc_2e3d3;
        case m2c::kloc_2e40c: 	goto loc_2e40c;
        case m2c::kloc_2e415: 	goto loc_2e415;
        case m2c::kloc_2e44e: 	goto loc_2e44e;
        case m2c::kloc_2e46c: 	goto loc_2e46c;
        case m2c::kloc_2e4cc: 	goto loc_2e4cc;
        case m2c::kloc_2e4dc: 	goto loc_2e4dc;
        case m2c::kloc_2e536: 	goto loc_2e536;
        case m2c::kloc_2e570: 	goto loc_2e570;
        case m2c::kloc_2e57c: 	goto loc_2e57c;
        case m2c::kloc_2e58a: 	goto loc_2e58a;
        case m2c::kloc_2e5b0: 	goto loc_2e5b0;
        case m2c::kloc_2e5dc: 	goto loc_2e5dc;
        case m2c::kloc_2e624: 	goto loc_2e624;
        case m2c::kloc_2e627: 	goto loc_2e627;
        case m2c::kloc_2e630: 	goto loc_2e630;
        case m2c::kloc_2e668: 	goto loc_2e668;
        case m2c::kloc_2e6af: 	goto loc_2e6af;
        case m2c::kloc_2e6c9: 	goto loc_2e6c9;
        case m2c::kloc_2e722: 	goto loc_2e722;
        case m2c::kloc_2e758: 	goto loc_2e758;
        case m2c::kloc_2e764: 	goto loc_2e764;
        case m2c::kloc_2e78e: 	goto loc_2e78e;
        case m2c::kloc_2e7b5: 	goto loc_2e7b5;
        case m2c::kloc_2e7d8: 	goto loc_2e7d8;
        case m2c::kloc_2e7e2: 	goto loc_2e7e2;
        case m2c::kloc_2e7e8: 	goto loc_2e7e8;
        case m2c::ksub_2dc1e: 	goto sub_2dc1e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2e7ee(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2e7ee:
    _begin:
#undef var_8
#define var_8 -8
	// 100101 var_8           = word ptr -8 ;~ 17C5:85BE
#undef var_6
#define var_6 -6
	// 100102 var_6           = word ptr -6 ;~ 17C5:85BE
#undef var_4
#define var_4 -4
	// 100103 var_4           = word ptr -4 ;~ 17C5:85BE
#undef var_2
#define var_2 -2
	// 100104 var_2           = word ptr -2 ;~ 17C5:85BE
#undef arg_0
#define arg_0 4
	// 100105 arg_0           = word ptr  4 ;~ 17C5:85BE
#undef arg_2
#define arg_2 6
	// 100106 arg_2           = word ptr  6 ;~ 17C5:85BE
#undef arg_4
#define arg_4 8
	// 100107 arg_4           = word ptr  8 ;~ 17C5:85BE
#undef arg_8
#define arg_8 0x0C
	// 100108 arg_8           = word ptr  0Ch ;~ 17C5:85BE
cs=0x17c5;eip=0x0085be; 	X(PUSH(bp));	// 100110                  push    bp ;~ 17C5:85BE
cs=0x17c5;eip=0x0085bf; 	T(bp = sp;);	// 100111                  mov     bp, sp ;~ 17C5:85BF
cs=0x17c5;eip=0x0085c1; 	T(SUB(sp, 8));	// 100112                  sub     sp, 8 ;~ 17C5:85C1
cs=0x17c5;eip=0x0085c4; 	X(PUSH(si));	// 100113                  push    si ;~ 17C5:85C4
cs=0x17c5;eip=0x0085c5; 	T(ax = 0x18;);	// 100114                  mov     ax, 18h ;~ 17C5:85C5
cs=0x17c5;eip=0x0085c8; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100115                  imul    [bp+arg_0] ;~ 17C5:85C8
cs=0x17c5;eip=0x0085cb; 	T(si = ax;);	// 100116                  mov     si, ax ;~ 17C5:85CB
cs=0x17c5;eip=0x0085cd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 100117                  mov     ax, [bp+arg_2] ;~ 17C5:85CD
cs=0x17c5;eip=0x0085d0; 	T(SUB(ax, *(dw*)(raddr(ds,si+0x0D14))));	// 100118                  sub     ax, [si+0D14h] ;~ 17C5:85D0
cs=0x17c5;eip=0x0085d4; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 100119                  mov     [bp+var_6], ax ;~ 17C5:85D4
cs=0x17c5;eip=0x0085d7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 100120                  mov     ax, [bp+arg_4] ;~ 17C5:85D7
cs=0x17c5;eip=0x0085da; 	T(SUB(ax, *(dw*)(raddr(ds,si+0x0D16))));	// 100121                  sub     ax, [si+0D16h] ;~ 17C5:85DA
cs=0x17c5;eip=0x0085de; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 100122                  mov     [bp+var_8], ax ;~ 17C5:85DE
cs=0x17c5;eip=0x0085e1; 	X(PUSH(ax));	// 100123                  push    ax ;~ 17C5:85E1
cs=0x17c5;eip=0x0085e2; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 100124                  push    [bp+var_6] ;~ 17C5:85E2
cs=0x17c5;eip=0x0085e5; 	J(CALL(sub_331d6,0));	// 100125                  call    sub_331D6 ;~ 17C5:85E5
cs=0x17c5;eip=0x0085e8; 	T(ADD(sp, 4));	// 100126                  add     sp, 4 ;~ 17C5:85E8
cs=0x17c5;eip=0x0085eb; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 100127                  mov     [bp+var_4], ax ;~ 17C5:85EB
cs=0x17c5;eip=0x0085ee; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 100128                  mov     ax, [bp+var_8] ;~ 17C5:85EE
cs=0x17c5;eip=0x0085f1; 	T(NEG(ax));	// 100129                  neg     ax ;~ 17C5:85F1
cs=0x17c5;eip=0x0085f3; 	X(PUSH(ax));	// 100130                  push    ax ;~ 17C5:85F3
cs=0x17c5;eip=0x0085f4; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 100131                  push    [bp+var_6] ;~ 17C5:85F4
cs=0x17c5;eip=0x0085f7; 	J(CALL(sub_33238,0));	// 100132                  call    sub_33238 ;~ 17C5:85F7
cs=0x17c5;eip=0x0085fa; 	T(ADD(sp, 4));	// 100133                  add     sp, 4 ;~ 17C5:85FA
cs=0x17c5;eip=0x0085fd; 	X(word_4ef22 = ax;);	// 100134                  mov     ds:word_4EF22, ax ;~ 17C5:85FD
cs=0x17c5;eip=0x008600; 	T(ax = 0x18;);	// 100135                  mov     ax, 18h ;~ 17C5:8600
cs=0x17c5;eip=0x008603; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100136                  imul    [bp+arg_0] ;~ 17C5:8603
cs=0x17c5;eip=0x008606; 	T(bx = ax;);	// 100137                  mov     bx, ax ;~ 17C5:8606
cs=0x17c5;eip=0x008608; 	T(ax = 0x18;);	// 100138                  mov     ax, 18h ;~ 17C5:8608
cs=0x17c5;eip=0x00860b; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x0D1A))));	// 100139                  imul    word ptr [bx+0D1Ah] ;~ 17C5:860B
cs=0x17c5;eip=0x00860f; 	T(CWD);	// 100140                  cwd ;~ 17C5:860F
cs=0x17c5;eip=0x008610; 	T(cx = word_492f4;);	// 100141                  mov     cx, word_492F4 ;~ 17C5:8610
cs=0x17c5;eip=0x008614; 	T(IDIV2(cx));	// 100142                  idiv    cx ;~ 17C5:8614
cs=0x17c5;eip=0x008616; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_4))));	// 100143                  cmp     ax, [bp+var_4] ;~ 17C5:8616
cs=0x17c5;eip=0x008619; 	J(JLE(loc_2e85a));	// 100144                  jle     short loc_2E85A ;~ 17C5:8619
loc_2e84b:
	// 5857 
cs=0x17c5;eip=0x00861b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 100148                  mov     ax, [bp+var_4] ;~ 17C5:861B
cs=0x17c5;eip=0x00861e; 	X(word_4ef20 = ax;);	// 100149                  mov     ds:word_4EF20, ax ;~ 17C5:861E
cs=0x17c5;eip=0x008621; 	T(ax = 1;);	// 100150                  mov     ax, 1 ;~ 17C5:8621
cs=0x17c5;eip=0x008624; 	X(POP(si));	// 100151                  pop     si ;~ 17C5:8624
cs=0x17c5;eip=0x008625; 	T(sp = bp;);	// 100152                  mov     sp, bp ;~ 17C5:8625
cs=0x17c5;eip=0x008627; 	X(POP(bp));	// 100153                  pop     bp ;~ 17C5:8627
cs=0x17c5;eip=0x008628; 	J(RETN(0));	// 100154                  retn ;~ 17C5:8628
loc_2e85a:
	// 5858 
cs=0x17c5;eip=0x00862a; 	T(ax = 0x18;);	// 100159                  mov     ax, 18h ;~ 17C5:862A
cs=0x17c5;eip=0x00862d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100160                  imul    [bp+arg_0] ;~ 17C5:862D
cs=0x17c5;eip=0x008630; 	T(bx = ax;);	// 100161                  mov     bx, ax ;~ 17C5:8630
cs=0x17c5;eip=0x008632; 	T(ax = word_4ef22;);	// 100162                  mov     ax, ds:word_4EF22 ;~ 17C5:8632
cs=0x17c5;eip=0x008635; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0D1C))));	// 100163                  sub     ax, [bx+0D1Ch] ;~ 17C5:8635
cs=0x17c5;eip=0x008639; 	X(PUSH(ax));	// 100164                  push    ax ;~ 17C5:8639
cs=0x17c5;eip=0x00863a; 	J(CALL(sub_34dc0,0));	// 100165                  call    sub_34DC0 ;~ 17C5:863A
cs=0x17c5;eip=0x00863d; 	T(ADD(sp, 2));	// 100166                  add     sp, 2 ;~ 17C5:863D
cs=0x17c5;eip=0x008640; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 100167                  mov     [bp+var_2], ax ;~ 17C5:8640
cs=0x17c5;eip=0x008643; 	T(CMP(ax, 0x1000));	// 100168                  cmp     ax, 1000h ;~ 17C5:8643
cs=0x17c5;eip=0x008646; 	J(JLE(loc_2e8c4));	// 100169                  jle     short loc_2E8C4 ;~ 17C5:8646
cs=0x17c5;eip=0x008648; 	T(CMP(*(dw*)(raddr(ss,bp+arg_8)), 3));	// 100170                  cmp     [bp+arg_8], 3 ;~ 17C5:8648
cs=0x17c5;eip=0x00864c; 	J(JZ(loc_2e8c4));	// 100171                  jz      short loc_2E8C4 ;~ 17C5:864C
cs=0x17c5;eip=0x00864e; 	T(CMP(ax, 0x6000));	// 100172                  cmp     ax, 6000h ;~ 17C5:864E
cs=0x17c5;eip=0x008651; 	J(JLE(loc_2e8bd));	// 100173                  jle     short loc_2E8BD ;~ 17C5:8651
cs=0x17c5;eip=0x008653; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 8));	// 100174                  cmp     [bp+arg_0], 8 ;~ 17C5:8653
cs=0x17c5;eip=0x008657; 	J(JGE(loc_2e8bd));	// 100175                  jge     short loc_2E8BD ;~ 17C5:8657
cs=0x17c5;eip=0x008659; 	T(ax = 0x18;);	// 100176                  mov     ax, 18h ;~ 17C5:8659
cs=0x17c5;eip=0x00865c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100177                  imul    [bp+arg_0] ;~ 17C5:865C
cs=0x17c5;eip=0x00865f; 	T(si = ax;);	// 100178                  mov     si, ax ;~ 17C5:865F
cs=0x17c5;eip=0x008661; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D1A))));	// 100179                  mov     ax, [si+0D1Ah] ;~ 17C5:8661
cs=0x17c5;eip=0x008665; 	T(cl = 4;);	// 100180                  mov     cl, 4 ;~ 17C5:8665
cs=0x17c5;eip=0x008667; 	T(SHL(ax, cl));	// 100181                  shl     ax, cl ;~ 17C5:8667
cs=0x17c5;eip=0x008669; 	T(CWD);	// 100182                  cwd ;~ 17C5:8669
cs=0x17c5;eip=0x00866a; 	T(cx = word_492f4;);	// 100183                  mov     cx, word_492F4 ;~ 17C5:866A
cs=0x17c5;eip=0x00866e; 	T(IDIV2(cx));	// 100184                  idiv    cx ;~ 17C5:866E
cs=0x17c5;eip=0x008670; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_4))));	// 100185                  cmp     ax, [bp+var_4] ;~ 17C5:8670
cs=0x17c5;eip=0x008673; 	J(JGE(loc_2e8bd));	// 100186                  jge     short loc_2E8BD ;~ 17C5:8673
cs=0x17c5;eip=0x008675; 	T(ax = cx;);	// 100187                  mov     ax, cx ;~ 17C5:8675
cs=0x17c5;eip=0x008677; 	T(cl = 4;);	// 100188                  mov     cl, 4 ;~ 17C5:8677
cs=0x17c5;eip=0x008679; 	T(SHL(ax, cl));	// 100189                  shl     ax, cl ;~ 17C5:8679
cs=0x17c5;eip=0x00867b; 	X(PUSH(ax));	// 100190                  push    ax ;~ 17C5:867B
cs=0x17c5;eip=0x00867c; 	T(SUB(ax, ax));	// 100191                  sub     ax, ax ;~ 17C5:867C
cs=0x17c5;eip=0x00867e; 	X(PUSH(ax));	// 100192                  push    ax ;~ 17C5:867E
cs=0x17c5;eip=0x00867f; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D22))));	// 100193                  push    word ptr [si+0D22h] ;~ 17C5:867F
cs=0x17c5;eip=0x008683; 	J(CALL(sub_33194,0));	// 100194                  call    sub_33194 ;~ 17C5:8683
cs=0x17c5;eip=0x008686; 	T(ADD(sp, 6));	// 100195                  add     sp, 6 ;~ 17C5:8686
cs=0x17c5;eip=0x008689; 	X(MOV(*(dw*)(raddr(ds,si+0x0D22)), ax));	// 100196                  mov     [si+0D22h], ax ;~ 17C5:8689
loc_2e8bd:
	// 5859 
cs=0x17c5;eip=0x00868d; 	T(SUB(ax, ax));	// 100200                  sub     ax, ax ;~ 17C5:868D
cs=0x17c5;eip=0x00868f; 	X(POP(si));	// 100201                  pop     si ;~ 17C5:868F
cs=0x17c5;eip=0x008690; 	T(sp = bp;);	// 100202                  mov     sp, bp ;~ 17C5:8690
cs=0x17c5;eip=0x008692; 	X(POP(bp));	// 100203                  pop     bp ;~ 17C5:8692
cs=0x17c5;eip=0x008693; 	J(RETN(0));	// 100204                  retn ;~ 17C5:8693
loc_2e8c4:
	// 5860 
cs=0x17c5;eip=0x008694; 	T(CMP(*(dw*)(raddr(ss,bp+arg_8)), 0));	// 100209                  cmp     [bp+arg_8], 0 ;~ 17C5:8694
cs=0x17c5;eip=0x008698; 	J(JNZ(loc_2e8e6));	// 100210                  jnz     short loc_2E8E6 ;~ 17C5:8698
cs=0x17c5;eip=0x00869a; 	T(ax = 0x18;);	// 100211                  mov     ax, 18h ;~ 17C5:869A
cs=0x17c5;eip=0x00869d; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100212                  imul    [bp+arg_0] ;~ 17C5:869D
cs=0x17c5;eip=0x0086a0; 	T(bx = ax;);	// 100213                  mov     bx, ax ;~ 17C5:86A0
cs=0x17c5;eip=0x0086a2; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0D1C))));	// 100214                  mov     ax, [bx+0D1Ch] ;~ 17C5:86A2
cs=0x17c5;eip=0x0086a6; 	T(SUB(ax, word_4e2f8));	// 100215                  sub     ax, ds:word_4E2F8 ;~ 17C5:86A6
cs=0x17c5;eip=0x0086aa; 	X(PUSH(ax));	// 100216                  push    ax ;~ 17C5:86AA
cs=0x17c5;eip=0x0086ab; 	J(CALL(sub_34dc0,0));	// 100217                  call    sub_34DC0 ;~ 17C5:86AB
cs=0x17c5;eip=0x0086ae; 	T(ADD(sp, 2));	// 100218                  add     sp, 2 ;~ 17C5:86AE
cs=0x17c5;eip=0x0086b1; 	T(CMP(ax, 0x2000));	// 100219                  cmp     ax, 2000h ;~ 17C5:86B1
cs=0x17c5;eip=0x0086b4; 	J(JG(loc_2e8bd));	// 100220                  jg      short loc_2E8BD ;~ 17C5:86B4
loc_2e8e6:
	// 5861 
cs=0x17c5;eip=0x0086b6; 	T(CMP(*(dw*)(raddr(ss,bp+arg_8)), 0));	// 100223                  cmp     [bp+arg_8], 0 ;~ 17C5:86B6
cs=0x17c5;eip=0x0086ba; 	J(JNZ(loc_2e8ef));	// 100224                  jnz     short loc_2E8EF ;~ 17C5:86BA
cs=0x17c5;eip=0x0086bc; 	J(JMP(loc_2e84b));	// 100225                  jmp     loc_2E84B ;~ 17C5:86BC
loc_2e8ef:
	// 5862 
cs=0x17c5;eip=0x0086bf; 	T(ax = 0x18;);	// 100229                  mov     ax, 18h ;~ 17C5:86BF
cs=0x17c5;eip=0x0086c2; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100230                  imul    [bp+arg_0] ;~ 17C5:86C2
cs=0x17c5;eip=0x0086c5; 	T(bx = ax;);	// 100231                  mov     bx, ax ;~ 17C5:86C5
cs=0x17c5;eip=0x0086c7; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0D1C))));	// 100232                  mov     ax, [bx+0D1Ch] ;~ 17C5:86C7
cs=0x17c5;eip=0x0086cb; 	T(SUB(ax, word_4e2f8));	// 100233                  sub     ax, ds:word_4E2F8 ;~ 17C5:86CB
cs=0x17c5;eip=0x0086cf; 	X(PUSH(ax));	// 100234                  push    ax ;~ 17C5:86CF
cs=0x17c5;eip=0x0086d0; 	J(CALL(sub_34dc0,0));	// 100235                  call    sub_34DC0 ;~ 17C5:86D0
cs=0x17c5;eip=0x0086d3; 	T(ADD(sp, 2));	// 100236                  add     sp, 2 ;~ 17C5:86D3
cs=0x17c5;eip=0x0086d6; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 100237                  mov     [bp+var_2], ax ;~ 17C5:86D6
cs=0x17c5;eip=0x0086d9; 	T(SUB(ax, 0x4000));	// 100238                  sub     ax, 4000h ;~ 17C5:86D9
cs=0x17c5;eip=0x0086dc; 	X(PUSH(ax));	// 100239                  push    ax ;~ 17C5:86DC
cs=0x17c5;eip=0x0086dd; 	J(CALL(sub_34dc0,0));	// 100240                  call    sub_34DC0 ;~ 17C5:86DD
cs=0x17c5;eip=0x0086e0; 	T(ADD(sp, 2));	// 100241                  add     sp, 2 ;~ 17C5:86E0
cs=0x17c5;eip=0x0086e3; 	T(dx = word_492e8;);	// 100242                  mov     dx, word_492E8 ;~ 17C5:86E3
cs=0x17c5;eip=0x0086e7; 	T(cl = 0x0B;);	// 100243                  mov     cl, 0Bh ;~ 17C5:86E7
cs=0x17c5;eip=0x0086e9; 	T(SHL(dx, cl));	// 100244                  shl     dx, cl ;~ 17C5:86E9
cs=0x17c5;eip=0x0086eb; 	T(SUB(dx, 0x2000));	// 100245                  sub     dx, 2000h ;~ 17C5:86EB
cs=0x17c5;eip=0x0086ef; 	T(NEG(dx));	// 100246                  neg     dx ;~ 17C5:86EF
cs=0x17c5;eip=0x0086f1; 	T(CMP(ax, dx));	// 100247                  cmp     ax, dx ;~ 17C5:86F1
cs=0x17c5;eip=0x0086f3; 	J(JL(loc_2e8bd));	// 100248                  jl      short loc_2E8BD ;~ 17C5:86F3
cs=0x17c5;eip=0x0086f5; 	J(JMP(loc_2e84b));	// 100249                  jmp     loc_2E84B ;~ 17C5:86F5

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2e84b: 	goto loc_2e84b;
        case m2c::kloc_2e85a: 	goto loc_2e85a;
        case m2c::kloc_2e8bd: 	goto loc_2e8bd;
        case m2c::kloc_2e8c4: 	goto loc_2e8c4;
        case m2c::kloc_2e8e6: 	goto loc_2e8e6;
        case m2c::kloc_2e8ef: 	goto loc_2e8ef;
        case m2c::ksub_2e7ee: 	goto sub_2e7ee;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group40(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group40:
    _begin:
sub_2e928:
	// 100257 
#undef var_2
#define var_2 -2
	// 100260 var_2           = word ptr -2 ;~ 17C5:86F8
#undef arg_0
#define arg_0 4
	// 100261 arg_0           = word ptr  4 ;~ 17C5:86F8
cs=0x17c5;eip=0x0086f8; 	X(PUSH(bp));	// 100263                  push    bp ;~ 17C5:86F8
cs=0x17c5;eip=0x0086f9; 	T(bp = sp;);	// 100264                  mov     bp, sp ;~ 17C5:86F9
cs=0x17c5;eip=0x0086fb; 	T(SUB(sp, 2));	// 100265                  sub     sp, 2 ;~ 17C5:86FB
cs=0x17c5;eip=0x0086fe; 	X(PUSH(si));	// 100266                  push    si ;~ 17C5:86FE
cs=0x17c5;eip=0x0086ff; 	T(ax = 0x24;);	// 100267                  mov     ax, 24h ; '$' ;~ 17C5:86FF
cs=0x17c5;eip=0x008702; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100268                  imul    [bp+arg_0] ;~ 17C5:8702
cs=0x17c5;eip=0x008705; 	T(si = ax;);	// 100269                  mov     si, ax ;~ 17C5:8705
cs=0x17c5;eip=0x008707; 	T(TEST(*(raddr(ds,si-0x7696)), 0x20));	// 100270                  test    byte ptr [si-7696h], 20h ;~ 17C5:8707
cs=0x17c5;eip=0x00870c; 	J(JZ(loc_2e941));	// 100271                  jz      short loc_2E941 ;~ 17C5:870C
cs=0x17c5;eip=0x00870e; 	J(JMP(loc_2e9d6));	// 100272                  jmp     loc_2E9D6 ;~ 17C5:870E
loc_2e941:
	// 5863 
cs=0x17c5;eip=0x008711; 	T(MOV(bx, *(dw*)(raddr(ds,si-0x7698))));	// 100276                  mov     bx, [si-7698h] ;~ 17C5:8711
cs=0x17c5;eip=0x008715; 	T(cl = 5;);	// 100277                  mov     cl, 5 ;~ 17C5:8715
cs=0x17c5;eip=0x008717; 	T(SHL(bx, cl));	// 100278                  shl     bx, cl ;~ 17C5:8717
cs=0x17c5;eip=0x008719; 	X(INC(*(dw*)(raddr(ds,bx+0x2E6))));	// 100279                  inc     word ptr [bx+2E6h] ;~ 17C5:8719
cs=0x17c5;eip=0x00871d; 	T(TEST(*(dw*)(raddr(ds,si-0x7696)), 0x800));	// 100280                  test    word ptr [si-7696h], 800h ;~ 17C5:871D
cs=0x17c5;eip=0x008723; 	J(JZ(loc_2e959));	// 100281                  jz      short loc_2E959 ;~ 17C5:8723
cs=0x17c5;eip=0x008725; 	X(DEC(word_52274));	// 100282                  dec     ds:word_52274 ;~ 17C5:8725
loc_2e959:
	// 5864 
cs=0x17c5;eip=0x008729; 	T(ax = word_4992c;);	// 100285                  mov     ax, word_4992C ;~ 17C5:8729
cs=0x17c5;eip=0x00872c; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 100286                  cmp     [bp+arg_0], ax ;~ 17C5:872C
cs=0x17c5;eip=0x00872f; 	J(JNZ(loc_2e967));	// 100287                  jnz     short loc_2E967 ;~ 17C5:872F
cs=0x17c5;eip=0x008731; 	X(word_4992c = 0x0FFFF;);	// 100288                  mov     word_4992C, 0FFFFh ;~ 17C5:8731
loc_2e967:
	// 5865 
cs=0x17c5;eip=0x008737; 	T(ax = 0x24;);	// 100291                  mov     ax, 24h ; '$' ;~ 17C5:8737
cs=0x17c5;eip=0x00873a; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100292                  imul    [bp+arg_0] ;~ 17C5:873A
cs=0x17c5;eip=0x00873d; 	T(si = ax;);	// 100293                  mov     si, ax ;~ 17C5:873D
cs=0x17c5;eip=0x00873f; 	X(OR(*(raddr(ds,si-0x7696)), 0x20));	// 100294                  or      byte ptr [si-7696h], 20h ;~ 17C5:873F
cs=0x17c5;eip=0x008744; 	X(word_49926 = 0x0FFFF;);	// 100295                  mov     word_49926, 0FFFFh ;~ 17C5:8744
cs=0x17c5;eip=0x00874a; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 100296                  mov     ax, [si-76ACh] ;~ 17C5:874A
cs=0x17c5;eip=0x00874e; 	X(word_520f2 = ax;);	// 100297                  mov     ds:word_520F2, ax ;~ 17C5:874E
cs=0x17c5;eip=0x008751; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 100298                  mov     ax, [si-76AAh] ;~ 17C5:8751
cs=0x17c5;eip=0x008755; 	X(word_52106 = ax;);	// 100299                  mov     ds:word_52106, ax ;~ 17C5:8755
cs=0x17c5;eip=0x008758; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 100300                  mov     ax, [si-76A8h] ;~ 17C5:8758
cs=0x17c5;eip=0x00875c; 	X(word_521d2 = ax;);	// 100301                  mov     ds:word_521D2, ax ;~ 17C5:875C
cs=0x17c5;eip=0x00875f; 	X(word_5170c = 0x80;);	// 100302                  mov     ds:word_5170C, 80h ;~ 17C5:875F
cs=0x17c5;eip=0x008765; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 3));	// 100303                  mov     [bp+var_2], 3 ;~ 17C5:8765
cs=0x17c5;eip=0x00876a; 	T(TEST(*(dw*)(raddr(ds,si-0x7696)), 0x4000));	// 100304                  test    word ptr [si-7696h], 4000h ;~ 17C5:876A
cs=0x17c5;eip=0x008770; 	J(JZ(loc_2e9a8));	// 100305                  jz      short loc_2E9A8 ;~ 17C5:8770
cs=0x17c5;eip=0x008772; 	T(ax = 0x80;);	// 100306                  mov     ax, 80h ;~ 17C5:8772
cs=0x17c5;eip=0x008775; 	J(JMP(loc_2e9aa));	// 100307                  jmp     short loc_2E9AA ;~ 17C5:8775
loc_2e9a8:
	// 5866 
cs=0x17c5;eip=0x008778; 	T(SUB(ax, ax));	// 100312                  sub     ax, ax ;~ 17C5:8778
loc_2e9aa:
	// 5867 
cs=0x17c5;eip=0x00877a; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x7698))));	// 100315                  add     ax, [si-7698h] ;~ 17C5:877A
cs=0x17c5;eip=0x00877e; 	X(PUSH(ax));	// 100316                  push    ax ;~ 17C5:877E
cs=0x17c5;eip=0x00877f; 	T(ax = 3;);	// 100317                  mov     ax, 3 ;~ 17C5:877F
cs=0x17c5;eip=0x008782; 	X(PUSH(ax));	// 100318                  push    ax ;~ 17C5:8782
cs=0x17c5;eip=0x008783; 	J(CALL(sub_27f40,0));	// 100319                  call    sub_27F40 ;~ 17C5:8783
cs=0x17c5;eip=0x008786; 	T(ADD(sp, 4));	// 100320                  add     sp, 4 ;~ 17C5:8786
cs=0x17c5;eip=0x008789; 	T(ax = 0x24;);	// 100321                  mov     ax, 24h ; '$' ;~ 17C5:8789
cs=0x17c5;eip=0x00878c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100322                  imul    [bp+arg_0] ;~ 17C5:878C
cs=0x17c5;eip=0x00878f; 	T(bx = ax;);	// 100323                  mov     bx, ax ;~ 17C5:878F
cs=0x17c5;eip=0x008791; 	T(CMP(*(dw*)(raddr(ds,bx-0x7694)), 0));	// 100324                  cmp     word ptr [bx-7694h], 0 ;~ 17C5:8791
cs=0x17c5;eip=0x008796; 	J(JNZ(loc_2e9d6));	// 100325                  jnz     short loc_2E9D6 ;~ 17C5:8796
cs=0x17c5;eip=0x008798; 	T(ax = 0x24;);	// 100326                  mov     ax, 24h ; '$' ;~ 17C5:8798
cs=0x17c5;eip=0x00879b; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100327                  imul    [bp+arg_0] ;~ 17C5:879B
cs=0x17c5;eip=0x00879e; 	T(bx = ax;);	// 100328                  mov     bx, ax ;~ 17C5:879E
cs=0x17c5;eip=0x0087a0; 	X(AND(*(dw*)(raddr(ds,bx-0x7696)), 0x1C1));	// 100329                  and     word ptr [bx-7696h], 1C1h ;~ 17C5:87A0
loc_2e9d6:
	// 5868 
cs=0x17c5;eip=0x0087a6; 	T(ax = 0x24;);	// 100333                  mov     ax, 24h ; '$' ;~ 17C5:87A6
cs=0x17c5;eip=0x0087a9; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100334                  imul    [bp+arg_0] ;~ 17C5:87A9
cs=0x17c5;eip=0x0087ac; 	T(bx = ax;);	// 100335                  mov     bx, ax ;~ 17C5:87AC
cs=0x17c5;eip=0x0087ae; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7698))));	// 100336                  mov     ax, [bx-7698h] ;~ 17C5:87AE
cs=0x17c5;eip=0x0087b2; 	T(cl = 5;);	// 100337                  mov     cl, 5 ;~ 17C5:87B2
cs=0x17c5;eip=0x0087b4; 	T(SHL(ax, cl));	// 100338                  shl     ax, cl ;~ 17C5:87B4
cs=0x17c5;eip=0x0087b6; 	T(ADD(ax, 0x2C8));	// 100339                  add     ax, 2C8h ;~ 17C5:87B6
cs=0x17c5;eip=0x0087b9; 	X(PUSH(ax));	// 100340                  push    ax ;~ 17C5:87B9
cs=0x17c5;eip=0x0087ba; 	T(ax = 0x66C4;);	// 100341                  mov     ax, 66C4h ;~ 17C5:87BA
cs=0x17c5;eip=0x0087bd; 	X(PUSH(ax));	// 100342                  push    ax ;~ 17C5:87BD
cs=0x17c5;eip=0x0087be; 	J(CALL(sub_34c1c,0));	// 100343                  call    sub_34C1C ;~ 17C5:87BE
cs=0x17c5;eip=0x0087c1; 	T(ADD(sp, 4));	// 100344                  add     sp, 4 ;~ 17C5:87C1
cs=0x17c5;eip=0x0087c4; 	T(ax = 2;);	// 100345                  mov     ax, 2 ;~ 17C5:87C4
cs=0x17c5;eip=0x0087c7; 	X(PUSH(ax));	// 100346                  push    ax ;~ 17C5:87C7
cs=0x17c5;eip=0x0087c8; 	X(PUSH(ax));	// 100347                  push    ax ;~ 17C5:87C8
cs=0x17c5;eip=0x0087c9; 	J(CALL(sub_33c65,0));	// 100348                  call    sub_33C65 ;~ 17C5:87C9
seg2623_87cc_proc:
	// 100352 
cs=0x17c5;eip=0x0087cc; 	T(ADD(sp, 4));	// 100352                  add     sp, 4 ;~ 17C5:87CC
cs=0x17c5;eip=0x0087cf; 	T(CMP(word_5268c, 1));	// 100353                  cmp     ds:word_5268C, 1 ;~ 17C5:87CF
cs=0x17c5;eip=0x0087d4; 	J(JNZ(loc_2ea14));	// 100354                  jnz     short loc_2EA14 ;~ 17C5:87D4
cs=0x17c5;eip=0x0087d6; 	T(ax = word_49922;);	// 100355                  mov     ax, word_49922 ;~ 17C5:87D6
cs=0x17c5;eip=0x0087d9; 	T(CMP(*(dw*)(raddr(ss,bp+4)), ax));	// 100356                  cmp     [bp+4], ax ;~ 17C5:87D9
cs=0x17c5;eip=0x0087dc; 	J(JNZ(loc_2ea14));	// 100357                  jnz     short loc_2EA14 ;~ 17C5:87DC
cs=0x17c5;eip=0x0087de; 	X(word_4f834 = 1;);	// 100358                  mov     ds:word_4F834, 1 ;~ 17C5:87DE
loc_2ea14:
	// 5869 
cs=0x17c5;eip=0x0087e4; 	X(POP(si));	// 100362                  pop     si ;~ 17C5:87E4
cs=0x17c5;eip=0x0087e5; 	T(sp = bp;);	// 100363                  mov     sp, bp ;~ 17C5:87E5
cs=0x17c5;eip=0x0087e7; 	X(POP(bp));	// 100364                  pop     bp ;~ 17C5:87E7
cs=0x17c5;eip=0x0087e8; 	J(RETN(0));	// 100365                  retn ;~ 17C5:87E8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2e941: 	goto loc_2e941;
        case m2c::kloc_2e959: 	goto loc_2e959;
        case m2c::kloc_2e967: 	goto loc_2e967;
        case m2c::kloc_2e9a8: 	goto loc_2e9a8;
        case m2c::kloc_2e9aa: 	goto loc_2e9aa;
        case m2c::kloc_2e9d6: 	goto loc_2e9d6;
        case m2c::kloc_2ea14: 	goto loc_2ea14;
        case m2c::kseg2623_87cc_proc: 	goto seg2623_87cc_proc;
        case m2c::ksub_2e928: 	goto sub_2e928;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group41(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group41:
    _begin:
sub_2ea1a:
	// 100373 
#undef var_6
#define var_6 -6
	// 100376 var_6           = word ptr -6 ;~ 17C5:87EA
#undef var_4
#define var_4 -4
	// 100377 var_4           = word ptr -4 ;~ 17C5:87EA
#undef var_2
#define var_2 -2
	// 100378 var_2           = word ptr -2 ;~ 17C5:87EA
#undef arg_0
#define arg_0 4
	// 100379 arg_0           = word ptr  4 ;~ 17C5:87EA
cs=0x17c5;eip=0x0087ea; 	X(PUSH(bp));	// 100381                  push    bp ;~ 17C5:87EA
cs=0x17c5;eip=0x0087eb; 	T(bp = sp;);	// 100382                  mov     bp, sp ;~ 17C5:87EB
cs=0x17c5;eip=0x0087ed; 	T(SUB(sp, 6));	// 100383                  sub     sp, 6 ;~ 17C5:87ED
cs=0x17c5;eip=0x0087f0; 	X(PUSH(si));	// 100384                  push    si ;~ 17C5:87F0
cs=0x17c5;eip=0x0087f1; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 100385                  push    [bp+arg_0] ;~ 17C5:87F1
cs=0x17c5;eip=0x0087f4; 	J(CALL(sub_27f9e,0));	// 100386                  call    sub_27F9E ;~ 17C5:87F4
cs=0x17c5;eip=0x0087f7; 	T(ADD(sp, 2));	// 100387                  add     sp, 2 ;~ 17C5:87F7
cs=0x17c5;eip=0x0087fa; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 1));	// 100388                  mov     [bp+var_2], 1 ;~ 17C5:87FA
cs=0x17c5;eip=0x0087ff; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 100389                  mov     bx, [bp+arg_0] ;~ 17C5:87FF
cs=0x17c5;eip=0x008802; 	T(cl = 4;);	// 100390                  mov     cl, 4 ;~ 17C5:8802
cs=0x17c5;eip=0x008804; 	T(SHL(bx, cl));	// 100391                  shl     bx, cl ;~ 17C5:8804
cs=0x17c5;eip=0x008806; 	T(MOV(si, *(dw*)(raddr(ds,bx-0x7E4C))));	// 100392                  mov     si, [bx-7E4Ch] ;~ 17C5:8806
cs=0x17c5;eip=0x00880a; 	T(ax = si;);	// 100393                  mov     ax, si ;~ 17C5:880A
cs=0x17c5;eip=0x00880c; 	T(TEST(al, 0x80));	// 100394                  test    al, 80h ;~ 17C5:880C
cs=0x17c5;eip=0x00880e; 	J(JZ(loc_2ea43));	// 100395                  jz      short loc_2EA43 ;~ 17C5:880E
cs=0x17c5;eip=0x008810; 	J(JMP(loc_2eb8f));	// 100396                  jmp     loc_2EB8F ;~ 17C5:8810
loc_2ea43:
	// 5870 
cs=0x17c5;eip=0x008813; 	T(TEST(ax, 0x1000));	// 100400                  test    ax, 1000h ;~ 17C5:8813
cs=0x17c5;eip=0x008816; 	J(JZ(loc_2ea4c));	// 100401                  jz      short loc_2EA4C ;~ 17C5:8816
cs=0x17c5;eip=0x008818; 	X(DEC(word_52278));	// 100402                  dec     ds:word_52278 ;~ 17C5:8818
loc_2ea4c:
	// 5871 
cs=0x17c5;eip=0x00881c; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 100405                  mov     si, [bp+arg_0] ;~ 17C5:881C
cs=0x17c5;eip=0x00881f; 	T(cl = 4;);	// 100406                  mov     cl, 4 ;~ 17C5:881F
cs=0x17c5;eip=0x008821; 	T(SHL(si, cl));	// 100407                  shl     si, cl ;~ 17C5:8821
cs=0x17c5;eip=0x008823; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 100408                  mov     ax, [si-7E50h] ;~ 17C5:8823
cs=0x17c5;eip=0x008827; 	T(SUB(dx, dx));	// 100409                  sub     dx, dx ;~ 17C5:8827
cs=0x17c5;eip=0x008829; 	T(SUB(ax, 0x8000));	// 100410                  sub     ax, 8000h ;~ 17C5:8829
cs=0x17c5;eip=0x00882c; 	T(SBB(dx, dx));	// 100411                  sbb     dx, dx ;~ 17C5:882C
cs=0x17c5;eip=0x00882e; 	T(NEG(ax));	// 100412                  neg     ax ;~ 17C5:882E
cs=0x17c5;eip=0x008830; 	T(ADC(dx, 0));	// 100413                  adc     dx, 0 ;~ 17C5:8830
cs=0x17c5;eip=0x008833; 	T(NEG(dx));	// 100414                  neg     dx ;~ 17C5:8833
cs=0x17c5;eip=0x008835; 	T(cl = 5;);	// 100415                  mov     cl, 5 ;~ 17C5:8835
loc_2ea67:
	// 5872 
cs=0x17c5;eip=0x008837; 	T(SHL(ax, 1));	// 100418                  shl     ax, 1 ;~ 17C5:8837
cs=0x17c5;eip=0x008839; 	T(RCL(dx, 1));	// 100419                  rcl     dx, 1 ;~ 17C5:8839
cs=0x17c5;eip=0x00883b; 	T(DEC(cl));	// 100420                  dec     cl ;~ 17C5:883B
cs=0x17c5;eip=0x00883d; 	J(JNZ(loc_2ea67));	// 100421                  jnz     short loc_2EA67 ;~ 17C5:883D
cs=0x17c5;eip=0x00883f; 	X(PUSH(dx));	// 100422                  push    dx ;~ 17C5:883F
cs=0x17c5;eip=0x008840; 	X(PUSH(ax));	// 100423                  push    ax ;~ 17C5:8840
cs=0x17c5;eip=0x008841; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 100424                  mov     ax, [si-7E52h] ;~ 17C5:8841
cs=0x17c5;eip=0x008845; 	T(SUB(dx, dx));	// 100425                  sub     dx, dx ;~ 17C5:8845
cs=0x17c5;eip=0x008847; 	T(cl = 5;);	// 100426                  mov     cl, 5 ;~ 17C5:8847
loc_2ea79:
	// 5873 
cs=0x17c5;eip=0x008849; 	T(SHL(ax, 1));	// 100429                  shl     ax, 1 ;~ 17C5:8849
cs=0x17c5;eip=0x00884b; 	T(RCL(dx, 1));	// 100430                  rcl     dx, 1 ;~ 17C5:884B
cs=0x17c5;eip=0x00884d; 	T(DEC(cl));	// 100431                  dec     cl ;~ 17C5:884D
cs=0x17c5;eip=0x00884f; 	J(JNZ(loc_2ea79));	// 100432                  jnz     short loc_2EA79 ;~ 17C5:884F
cs=0x17c5;eip=0x008851; 	X(PUSH(dx));	// 100433                  push    dx ;~ 17C5:8851
cs=0x17c5;eip=0x008852; 	X(PUSH(ax));	// 100434                  push    ax ;~ 17C5:8852
cs=0x17c5;eip=0x008853; 	J(CALL(sub_2920a,0));	// 100435                  call    sub_2920A ;~ 17C5:8853
cs=0x17c5;eip=0x008856; 	T(ADD(sp, 8));	// 100436                  add     sp, 8 ;~ 17C5:8856
cs=0x17c5;eip=0x008859; 	X(word_4fa38 = ax;);	// 100437                  mov     ds:word_4FA38, ax ;~ 17C5:8859
cs=0x17c5;eip=0x00885c; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 100438                  cmp     [bp+arg_0], 0 ;~ 17C5:885C
cs=0x17c5;eip=0x008860; 	J(JNZ(loc_2ea95));	// 100439                  jnz     short loc_2EA95 ;~ 17C5:8860
cs=0x17c5;eip=0x008862; 	J(JMP(loc_2eb28));	// 100440                  jmp     loc_2EB28 ;~ 17C5:8862
loc_2ea95:
	// 5874 
cs=0x17c5;eip=0x008865; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 100444                  mov     bx, [bp+arg_0] ;~ 17C5:8865
cs=0x17c5;eip=0x008868; 	T(cl = 4;);	// 100445                  mov     cl, 4 ;~ 17C5:8868
cs=0x17c5;eip=0x00886a; 	T(SHL(bx, cl));	// 100446                  shl     bx, cl ;~ 17C5:886A
cs=0x17c5;eip=0x00886c; 	T(CMP(*(dw*)(raddr(ds,bx-0x7E4E)), 0));	// 100447                  cmp     word ptr [bx-7E4Eh], 0 ;~ 17C5:886C
cs=0x17c5;eip=0x008871; 	J(JNZ(loc_2eaa8));	// 100448                  jnz     short loc_2EAA8 ;~ 17C5:8871
cs=0x17c5;eip=0x008873; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0x0C));	// 100449                  mov     [bp+var_2], 0Ch ;~ 17C5:8873
loc_2eaa8:
	// 5875 
cs=0x17c5;eip=0x008878; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 100452                  mov     si, [bp+arg_0] ;~ 17C5:8878
cs=0x17c5;eip=0x00887b; 	T(cl = 4;);	// 100453                  mov     cl, 4 ;~ 17C5:887B
cs=0x17c5;eip=0x00887d; 	T(SHL(si, cl));	// 100454                  shl     si, cl ;~ 17C5:887D
cs=0x17c5;eip=0x00887f; 	X(OR(*(raddr(ds,si-0x7E4C)), 0x80));	// 100455                  or      byte ptr [si-7E4Ch], 80h ;~ 17C5:887F
cs=0x17c5;eip=0x008884; 	X(MOV(*(dw*)(raddr(ds,si-0x7E4E)), 0));	// 100456                  mov     word ptr [si-7E4Eh], 0 ;~ 17C5:8884
cs=0x17c5;eip=0x00888a; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0));	// 100457                  mov     [bp+var_4], 0 ;~ 17C5:888A
cs=0x17c5;eip=0x00888f; 	J(JMP(loc_2eae2));	// 100458                  jmp     short loc_2EAE2 ;~ 17C5:888F
loc_2eac2:
	// 5876 
cs=0x17c5;eip=0x008892; 	T(ax = 0x80;);	// 100463                  mov     ax, 80h ;~ 17C5:8892
loc_2eac5:
	// 5877 
cs=0x17c5;eip=0x008895; 	X(OR(*(dw*)(raddr(ss,bp+var_2)), ax));	// 100466                  or      [bp+var_2], ax ;~ 17C5:8895
cs=0x17c5;eip=0x008898; 	T(ax = word_49918;);	// 100467                  mov     ax, word_49918 ;~ 17C5:8898
cs=0x17c5;eip=0x00889b; 	T(ADD(ax, word_492f4));	// 100468                  add     ax, word_492F4 ;~ 17C5:889B
cs=0x17c5;eip=0x00889f; 	X(_unk_4991e = ax;);	// 100469                  mov     _unk_4991E, ax ;~ 17C5:889F
cs=0x17c5;eip=0x0088a2; 	T(ax = 2;);	// 100470                  mov     ax, 2 ;~ 17C5:88A2
cs=0x17c5;eip=0x0088a5; 	X(PUSH(ax));	// 100471                  push    ax ;~ 17C5:88A5
cs=0x17c5;eip=0x0088a6; 	T(SUB(ax, ax));	// 100472                  sub     ax, ax ;~ 17C5:88A6
cs=0x17c5;eip=0x0088a8; 	X(PUSH(ax));	// 100473                  push    ax ;~ 17C5:88A8
cs=0x17c5;eip=0x0088a9; 	J(CALL(sub_33c65,0));	// 100474                  call    sub_33C65 ;~ 17C5:88A9
cs=0x17c5;eip=0x0088ac; 	T(ADD(sp, 4));	// 100476                  add     sp, 4 ;~ 17C5:88AC
loc_2eadf:
	// 5878 
cs=0x17c5;eip=0x0088af; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 100479                  inc     [bp+var_4] ;~ 17C5:88AF
loc_2eae2:
	// 5879 
cs=0x17c5;eip=0x0088b2; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 2));	// 100482                  cmp     [bp+var_4], 2 ;~ 17C5:88B2
cs=0x17c5;eip=0x0088b6; 	J(JGE(loc_2eb0e));	// 100483                  jge     short loc_2EB0E ;~ 17C5:88B6
cs=0x17c5;eip=0x0088b8; 	T(ax = 0x12;);	// 100484                  mov     ax, 12h ;~ 17C5:88B8
cs=0x17c5;eip=0x0088bb; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_4))));	// 100485                  imul    [bp+var_4] ;~ 17C5:88BB
cs=0x17c5;eip=0x0088be; 	T(bx = ax;);	// 100486                  mov     bx, ax ;~ 17C5:88BE
cs=0x17c5;eip=0x0088c0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 100487                  mov     ax, [bp+arg_0] ;~ 17C5:88C0
cs=0x17c5;eip=0x0088c3; 	T(CMP(*(dw*)(raddr(ds,bx-0x776A)), ax));	// 100488                  cmp     [bx-776Ah], ax ;~ 17C5:88C3
cs=0x17c5;eip=0x0088c7; 	J(JNZ(loc_2eadf));	// 100489                  jnz     short loc_2EADF ;~ 17C5:88C7
cs=0x17c5;eip=0x0088c9; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 100490                  push    [bp+var_4] ;~ 17C5:88C9
cs=0x17c5;eip=0x0088cc; 	J(CALL(sub_2ebda,0));	// 100491                  call    sub_2EBDA ;~ 17C5:88CC
cs=0x17c5;eip=0x0088cf; 	T(ADD(sp, 2));	// 100492                  add     sp, 2 ;~ 17C5:88CF
cs=0x17c5;eip=0x0088d2; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 100493                  cmp     [bp+var_4], 0 ;~ 17C5:88D2
cs=0x17c5;eip=0x0088d6; 	J(JZ(loc_2eac2));	// 100494                  jz      short loc_2EAC2 ;~ 17C5:88D6
cs=0x17c5;eip=0x0088d8; 	T(ax = 0x40;);	// 100495                  mov     ax, 40h ; '@' ;~ 17C5:88D8
cs=0x17c5;eip=0x0088db; 	J(JMP(loc_2eac5));	// 100496                  jmp     short loc_2EAC5 ;~ 17C5:88DB
loc_2eb0e:
	// 5880 
cs=0x17c5;eip=0x0088de; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 100501                  push    [bp+arg_0] ;~ 17C5:88DE
cs=0x17c5;eip=0x0088e1; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 100502                  push    [bp+var_2] ;~ 17C5:88E1
cs=0x17c5;eip=0x0088e4; 	J(CALL(sub_27f40,0));	// 100503                  call    sub_27F40 ;~ 17C5:88E4
cs=0x17c5;eip=0x0088e7; 	T(ADD(sp, 4));	// 100504                  add     sp, 4 ;~ 17C5:88E7
cs=0x17c5;eip=0x0088ea; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 100505                  push    [bp+arg_0] ;~ 17C5:88EA
cs=0x17c5;eip=0x0088ed; 	J(CALL(sub_32a94,0));	// 100506                  call    sub_32A94 ;~ 17C5:88ED
cs=0x17c5;eip=0x0088f0; 	T(ADD(sp, 2));	// 100507                  add     sp, 2 ;~ 17C5:88F0
cs=0x17c5;eip=0x0088f3; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 100508                  mov     [bp+var_6], ax ;~ 17C5:88F3
cs=0x17c5;eip=0x0088f6; 	J(JMP(loc_2eb71));	// 100509                  jmp     short loc_2EB71 ;~ 17C5:88F6
loc_2eb28:
	// 5881 
cs=0x17c5;eip=0x0088f8; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 100513                  push    [bp+arg_0] ;~ 17C5:88F8
cs=0x17c5;eip=0x0088fb; 	J(CALL(sub_32ad4,0));	// 100514                  call    sub_32AD4 ;~ 17C5:88FB
cs=0x17c5;eip=0x0088fe; 	T(ADD(sp, 2));	// 100515                  add     sp, 2 ;~ 17C5:88FE
cs=0x17c5;eip=0x008901; 	T(OR(ax, ax));	// 100516                  or      ax, ax ;~ 17C5:8901
cs=0x17c5;eip=0x008903; 	J(JZ(loc_2eb3a));	// 100517                  jz      short loc_2EB3A ;~ 17C5:8903
cs=0x17c5;eip=0x008905; 	T(al = byte_520f4;);	// 100518                  mov     al, ds:byte_520F4 ;~ 17C5:8905
cs=0x17c5;eip=0x008908; 	J(JMP(loc_2eb3d));	// 100519                  jmp     short loc_2EB3D ;~ 17C5:8908
loc_2eb3a:
	// 5882 
cs=0x17c5;eip=0x00890a; 	T(al = byte_5225a;);	// 100523                  mov     al, ds:byte_5225A ;~ 17C5:890A
loc_2eb3d:
	// 5883 
cs=0x17c5;eip=0x00890d; 	T(CBW);	// 100526                  cbw ;~ 17C5:890D
cs=0x17c5;eip=0x00890e; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 100527                  mov     [bp+var_6], ax ;~ 17C5:890E
cs=0x17c5;eip=0x008911; 	T(bx = word_4fa38;);	// 100528                  mov     bx, ds:word_4FA38 ;~ 17C5:8911
cs=0x17c5;eip=0x008915; 	T(MOV(si, *(dw*)(raddr(ds,bx))));	// 100529                  mov     si, [bx] ;~ 17C5:8915
cs=0x17c5;eip=0x008917; 	T(CMP(ax, si));	// 100530                  cmp     ax, si ;~ 17C5:8917
cs=0x17c5;eip=0x008919; 	J(JZ(loc_2eb5f));	// 100531                  jz      short loc_2EB5F ;~ 17C5:8919
cs=0x17c5;eip=0x00891b; 	X(INC(*(raddr(ds,si-0x69D8))));	// 100532                  inc     byte ptr [si-69D8h] ;~ 17C5:891B
cs=0x17c5;eip=0x00891f; 	T(bx = word_4fa38;);	// 100533                  mov     bx, ds:word_4FA38 ;~ 17C5:891F
cs=0x17c5;eip=0x008923; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 100534                  push    word ptr [bx] ;~ 17C5:8923
cs=0x17c5;eip=0x008925; 	T(ax = 2;);	// 100535                  mov     ax, 2 ;~ 17C5:8925
cs=0x17c5;eip=0x008928; 	X(PUSH(ax));	// 100536                  push    ax ;~ 17C5:8928
cs=0x17c5;eip=0x008929; 	J(CALL(sub_27f40,0));	// 100537                  call    sub_27F40 ;~ 17C5:8929
cs=0x17c5;eip=0x00892c; 	T(ADD(sp, 4));	// 100538                  add     sp, 4 ;~ 17C5:892C
loc_2eb5f:
	// 5884 
cs=0x17c5;eip=0x00892f; 	X(OR(*(raddr(ss,bp+var_6+1)), 1));	// 100541                  or      byte ptr [bp+var_6+1], 1 ;~ 17C5:892F
cs=0x17c5;eip=0x008933; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 100542                  mov     bx, [bp+arg_0] ;~ 17C5:8933
cs=0x17c5;eip=0x008936; 	T(cl = 4;);	// 100543                  mov     cl, 4 ;~ 17C5:8936
cs=0x17c5;eip=0x008938; 	T(SHL(bx, cl));	// 100544                  shl     bx, cl ;~ 17C5:8938
cs=0x17c5;eip=0x00893a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 100545                  mov     ax, [bp+var_6] ;~ 17C5:893A
cs=0x17c5;eip=0x00893d; 	X(MOV(*(dw*)(raddr(ds,bx-0x7E46)), ax));	// 100546                  mov     [bx-7E46h], ax ;~ 17C5:893D
loc_2eb71:
	// 5885 
cs=0x17c5;eip=0x008941; 	T(CMP(word_4fa38, 0));	// 100549                  cmp     ds:word_4FA38, 0 ;~ 17C5:8941
cs=0x17c5;eip=0x008946; 	J(JZ(loc_2eb8f));	// 100550                  jz      short loc_2EB8F ;~ 17C5:8946
cs=0x17c5;eip=0x008948; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 100551                  push    [bp+var_6] ;~ 17C5:8948
cs=0x17c5;eip=0x00894b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 100552                  push    [bp+var_6] ;~ 17C5:894B
cs=0x17c5;eip=0x00894e; 	J(CALL(sub_33162,0));	// 100553                  call    sub_33162 ;~ 17C5:894E
cs=0x17c5;eip=0x008951; 	T(ADD(sp, 2));	// 100554                  add     sp, 2 ;~ 17C5:8951
cs=0x17c5;eip=0x008954; 	X(PUSH(ax));	// 100555                  push    ax ;~ 17C5:8954
cs=0x17c5;eip=0x008955; 	X(PUSH(word_4fa38));	// 100556                  push    ds:word_4FA38 ;~ 17C5:8955
cs=0x17c5;eip=0x008959; 	J(CALL(sub_29454,0));	// 100557                  call    sub_29454 ;~ 17C5:8959
cs=0x17c5;eip=0x00895c; 	T(ADD(sp, 6));	// 100558                  add     sp, 6 ;~ 17C5:895C
loc_2eb8f:
	// 5886 
cs=0x17c5;eip=0x00895f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 100562                  mov     ax, [bp+arg_0] ;~ 17C5:895F
cs=0x17c5;eip=0x008962; 	X(word_49926 = ax;);	// 100563                  mov     word_49926, ax ;~ 17C5:8962
cs=0x17c5;eip=0x008965; 	T(ax = 2;);	// 100564                  mov     ax, 2 ;~ 17C5:8965
cs=0x17c5;eip=0x008968; 	X(PUSH(ax));	// 100565                  push    ax ;~ 17C5:8968
cs=0x17c5;eip=0x008969; 	X(PUSH(ax));	// 100566                  push    ax ;~ 17C5:8969
cs=0x17c5;eip=0x00896a; 	J(CALL(sub_33c65,0));	// 100567                  call    sub_33C65 ;~ 17C5:896A
seg2623_896d_proc:
	// 100571 
cs=0x17c5;eip=0x00896d; 	T(ADD(sp, 4));	// 100571                  add     sp, 4 ;~ 17C5:896D
cs=0x17c5;eip=0x008970; 	T(CMP(word_5268c, 2));	// 100572                  cmp     ds:word_5268C, 2 ;~ 17C5:8970
cs=0x17c5;eip=0x008975; 	J(JNZ(loc_2ebb5));	// 100573                  jnz     short loc_2EBB5 ;~ 17C5:8975
cs=0x17c5;eip=0x008977; 	T(ax = word_49924;);	// 100574                  mov     ax, word_49924 ;~ 17C5:8977
cs=0x17c5;eip=0x00897a; 	T(CMP(*(dw*)(raddr(ss,bp+4)), ax));	// 100575                  cmp     [bp+4], ax ;~ 17C5:897A
cs=0x17c5;eip=0x00897d; 	J(JNZ(loc_2ebb5));	// 100576                  jnz     short loc_2EBB5 ;~ 17C5:897D
cs=0x17c5;eip=0x00897f; 	X(word_4f834 = 1;);	// 100577                  mov     ds:word_4F834, 1 ;~ 17C5:897F
loc_2ebb5:
	// 5887 
cs=0x17c5;eip=0x008985; 	T(CMP(word_522ca, 0));	// 100581                  cmp     ds:word_522CA, 0 ;~ 17C5:8985
cs=0x17c5;eip=0x00898a; 	J(JNZ(loc_2ebca));	// 100582                  jnz     short loc_2EBCA ;~ 17C5:898A
cs=0x17c5;eip=0x00898c; 	X(PUSH(word_52100));	// 100583                  push    ds:word_52100 ;~ 17C5:898C
cs=0x17c5;eip=0x008990; 	X(PUSH(word_520f0));	// 100584                  push    ds:word_520F0 ;~ 17C5:8990
cs=0x17c5;eip=0x008994; 	J(CALL(sub_2f7f9,0));	// 100585                  call    sub_2F7F9 ;~ 17C5:8994
cs=0x17c5;eip=0x008997; 	T(ADD(sp, 4));	// 100586                  add     sp, 4 ;~ 17C5:8997
loc_2ebca:
	// 5888 
cs=0x17c5;eip=0x00899a; 	T(CMP(word_492e8, 2));	// 100589                  cmp     word_492E8, 2 ;~ 17C5:899A
cs=0x17c5;eip=0x00899f; 	J(JGE(loc_2ebd4));	// 100590                  jge     short loc_2EBD4 ;~ 17C5:899F
cs=0x17c5;eip=0x0089a1; 	J(CALL(sub_2c8ee,0));	// 100591                  call    sub_2C8EE ;~ 17C5:89A1
loc_2ebd4:
	// 5889 
cs=0x17c5;eip=0x0089a4; 	X(POP(si));	// 100594                  pop     si ;~ 17C5:89A4
cs=0x17c5;eip=0x0089a5; 	T(sp = bp;);	// 100595                  mov     sp, bp ;~ 17C5:89A5
cs=0x17c5;eip=0x0089a7; 	X(POP(bp));	// 100596                  pop     bp ;~ 17C5:89A7
cs=0x17c5;eip=0x0089a8; 	J(RETN(0));	// 100597                  retn ;~ 17C5:89A8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2ea43: 	goto loc_2ea43;
        case m2c::kloc_2ea4c: 	goto loc_2ea4c;
        case m2c::kloc_2ea67: 	goto loc_2ea67;
        case m2c::kloc_2ea79: 	goto loc_2ea79;
        case m2c::kloc_2ea95: 	goto loc_2ea95;
        case m2c::kloc_2eaa8: 	goto loc_2eaa8;
        case m2c::kloc_2eac2: 	goto loc_2eac2;
        case m2c::kloc_2eac5: 	goto loc_2eac5;
        case m2c::kloc_2eadf: 	goto loc_2eadf;
        case m2c::kloc_2eae2: 	goto loc_2eae2;
        case m2c::kloc_2eb0e: 	goto loc_2eb0e;
        case m2c::kloc_2eb28: 	goto loc_2eb28;
        case m2c::kloc_2eb3a: 	goto loc_2eb3a;
        case m2c::kloc_2eb3d: 	goto loc_2eb3d;
        case m2c::kloc_2eb5f: 	goto loc_2eb5f;
        case m2c::kloc_2eb71: 	goto loc_2eb71;
        case m2c::kloc_2eb8f: 	goto loc_2eb8f;
        case m2c::kloc_2ebb5: 	goto loc_2ebb5;
        case m2c::kloc_2ebca: 	goto loc_2ebca;
        case m2c::kloc_2ebd4: 	goto loc_2ebd4;
        case m2c::kseg2623_896d_proc: 	goto seg2623_896d_proc;
        case m2c::ksub_2ea1a: 	goto sub_2ea1a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2ebda(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2ebda:
    _begin:
#undef arg_0
#define arg_0 4
	// 100607 arg_0           = word ptr  4 ;~ 17C5:89AA
cs=0x17c5;eip=0x0089aa; 	X(PUSH(bp));	// 100609                  push    bp ;~ 17C5:89AA
cs=0x17c5;eip=0x0089ab; 	T(bp = sp;);	// 100610                  mov     bp, sp ;~ 17C5:89AB
cs=0x17c5;eip=0x0089ad; 	X(PUSH(si));	// 100611                  push    si ;~ 17C5:89AD
cs=0x17c5;eip=0x0089ae; 	T(ax = 0x4000;);	// 100612                  mov     ax, 4000h ;~ 17C5:89AE
cs=0x17c5;eip=0x0089b1; 	T(MOV(cl, *(raddr(ss,bp+arg_0))));	// 100613                  mov     cl, byte ptr [bp+arg_0] ;~ 17C5:89B1
cs=0x17c5;eip=0x0089b4; 	T(SAR(ax, cl));	// 100614                  sar     ax, cl ;~ 17C5:89B4
cs=0x17c5;eip=0x0089b6; 	T(TEST(word_4f42e, ax));	// 100615                  test    ds:word_4F42E, ax ;~ 17C5:89B6
cs=0x17c5;eip=0x0089ba; 	J(JZ(loc_2ebf2));	// 100616                  jz      short loc_2EBF2 ;~ 17C5:89BA
cs=0x17c5;eip=0x0089bc; 	T(SUB(ax, ax));	// 100617                  sub     ax, ax ;~ 17C5:89BC
cs=0x17c5;eip=0x0089be; 	X(POP(si));	// 100618                  pop     si ;~ 17C5:89BE
cs=0x17c5;eip=0x0089bf; 	X(POP(bp));	// 100619                  pop     bp ;~ 17C5:89BF
cs=0x17c5;eip=0x0089c0; 	J(RETN(0));	// 100620                  retn ;~ 17C5:89C0
loc_2ebf2:
	// 5890 
cs=0x17c5;eip=0x0089c2; 	T(ax = 0x12;);	// 100625                  mov     ax, 12h ;~ 17C5:89C2
cs=0x17c5;eip=0x0089c5; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 100626                  imul    [bp+arg_0] ;~ 17C5:89C5
cs=0x17c5;eip=0x0089c8; 	T(bx = ax;);	// 100627                  mov     bx, ax ;~ 17C5:89C8
cs=0x17c5;eip=0x0089ca; 	T(MOV(si, *(dw*)(raddr(ds,bx-0x776C))));	// 100628                  mov     si, [bx-776Ch] ;~ 17C5:89CA
cs=0x17c5;eip=0x0089ce; 	T(CMP(si, 4));	// 100629                  cmp     si, 4 ;~ 17C5:89CE
cs=0x17c5;eip=0x0089d1; 	J(JZ(loc_2ec08));	// 100630                  jz      short loc_2EC08 ;~ 17C5:89D1
cs=0x17c5;eip=0x0089d3; 	T(CMP(si, 3));	// 100631                  cmp     si, 3 ;~ 17C5:89D3
cs=0x17c5;eip=0x0089d6; 	J(JNZ(loc_2ec23));	// 100632                  jnz     short loc_2EC23 ;~ 17C5:89D6
loc_2ec08:
	// 5891 
cs=0x17c5;eip=0x0089d8; 	T(SUB(ax, ax));	// 100635                  sub     ax, ax ;~ 17C5:89D8
cs=0x17c5;eip=0x0089da; 	X(PUSH(ax));	// 100636                  push    ax ;~ 17C5:89DA
cs=0x17c5;eip=0x0089db; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 100637                  cmp     [bp+arg_0], ax ;~ 17C5:89DB
cs=0x17c5;eip=0x0089de; 	J(JZ(loc_2ec16));	// 100638                  jz      short loc_2EC16 ;~ 17C5:89DE
cs=0x17c5;eip=0x0089e0; 	T(ax = 0x40;);	// 100639                  mov     ax, 40h ; '@' ;~ 17C5:89E0
cs=0x17c5;eip=0x0089e3; 	J(JMP(loc_2ec19));	// 100640                  jmp     short loc_2EC19 ;~ 17C5:89E3
loc_2ec16:
	// 5892 
cs=0x17c5;eip=0x0089e6; 	T(ax = 0x80;);	// 100645                  mov     ax, 80h ;~ 17C5:89E6
loc_2ec19:
	// 5893 
cs=0x17c5;eip=0x0089e9; 	T(ADD(ax, 0x0B));	// 100648                  add     ax, 0Bh ;~ 17C5:89E9
cs=0x17c5;eip=0x0089ec; 	X(PUSH(ax));	// 100649                  push    ax ;~ 17C5:89EC
cs=0x17c5;eip=0x0089ed; 	J(CALL(sub_27f40,0));	// 100650                  call    sub_27F40 ;~ 17C5:89ED
cs=0x17c5;eip=0x0089f0; 	T(ADD(sp, 4));	// 100651                  add     sp, 4 ;~ 17C5:89F0
loc_2ec23:
	// 5894 
cs=0x17c5;eip=0x0089f3; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 100654                  cmp     [bp+arg_0], 0 ;~ 17C5:89F3
cs=0x17c5;eip=0x0089f7; 	J(JZ(loc_2ec44));	// 100655                  jz      short loc_2EC44 ;~ 17C5:89F7
cs=0x17c5;eip=0x0089f9; 	T(ax = 0x5926;);	// 100656                  mov     ax, 5926h ;~ 17C5:89F9
cs=0x17c5;eip=0x0089fc; 	X(PUSH(ax));	// 100657                  push    ax ;~ 17C5:89FC
cs=0x17c5;eip=0x0089fd; 	T(ax = 0x66C4;);	// 100658                  mov     ax, 66C4h ;~ 17C5:89FD
cs=0x17c5;eip=0x008a00; 	X(PUSH(ax));	// 100659                  push    ax ;~ 17C5:8A00
cs=0x17c5;eip=0x008a01; 	J(CALL(sub_34c1c,0));	// 100660                  call    sub_34C1C ;~ 17C5:8A01
cs=0x17c5;eip=0x008a04; 	T(ADD(sp, 4));	// 100661                  add     sp, 4 ;~ 17C5:8A04
cs=0x17c5;eip=0x008a07; 	X(word_48c62 = 1;);	// 100662                  mov     word_48C62, 1 ;~ 17C5:8A07
cs=0x17c5;eip=0x008a0d; 	X(OR(*(db*)(((db*)&word_4f42e)+1), 0x20));	// 100663                  or      byte ptr ds:word_4F42E+1, 20h ;~ 17C5:8A0D
cs=0x17c5;eip=0x008a12; 	J(JMP(loc_2ec5d));	// 100664                  jmp     short loc_2EC5D ;~ 17C5:8A12
loc_2ec44:
	// 5895 
cs=0x17c5;eip=0x008a14; 	T(ax = 0x5935;);	// 100668                  mov     ax, 5935h ;~ 17C5:8A14
cs=0x17c5;eip=0x008a17; 	X(PUSH(ax));	// 100669                  push    ax ;~ 17C5:8A17
cs=0x17c5;eip=0x008a18; 	T(ax = 0x66C4;);	// 100670                  mov     ax, 66C4h ;~ 17C5:8A18
cs=0x17c5;eip=0x008a1b; 	X(PUSH(ax));	// 100671                  push    ax ;~ 17C5:8A1B
cs=0x17c5;eip=0x008a1c; 	J(CALL(sub_34c1c,0));	// 100672                  call    sub_34C1C ;~ 17C5:8A1C
cs=0x17c5;eip=0x008a1f; 	T(ADD(sp, 4));	// 100673                  add     sp, 4 ;~ 17C5:8A1F
cs=0x17c5;eip=0x008a22; 	X(word_48c62 = 2;);	// 100674                  mov     word_48C62, 2 ;~ 17C5:8A22
cs=0x17c5;eip=0x008a28; 	X(OR(*(db*)(((db*)&word_4f42e)+1), 0x40));	// 100675                  or      byte ptr ds:word_4F42E+1, 40h ;~ 17C5:8A28
loc_2ec5d:
	// 5896 
cs=0x17c5;eip=0x008a2d; 	T(ax = word_4f42e;);	// 100678                  mov     ax, ds:word_4F42E ;~ 17C5:8A2D
cs=0x17c5;eip=0x008a30; 	T(AND(ax, 0x6000));	// 100679                  and     ax, 6000h ;~ 17C5:8A30
cs=0x17c5;eip=0x008a33; 	T(CMP(ax, 0x6000));	// 100680                  cmp     ax, 6000h ;~ 17C5:8A33
cs=0x17c5;eip=0x008a36; 	J(JNZ(loc_2ec6e));	// 100681                  jnz     short loc_2EC6E ;~ 17C5:8A36
cs=0x17c5;eip=0x008a38; 	X(word_48c62 = 3;);	// 100682                  mov     word_48C62, 3 ;~ 17C5:8A38
loc_2ec6e:
	// 5897 
cs=0x17c5;eip=0x008a3e; 	T(ax = 1;);	// 100685                  mov     ax, 1 ;~ 17C5:8A3E
cs=0x17c5;eip=0x008a41; 	X(POP(si));	// 100686                  pop     si ;~ 17C5:8A41
cs=0x17c5;eip=0x008a42; 	X(POP(bp));	// 100687                  pop     bp ;~ 17C5:8A42
cs=0x17c5;eip=0x008a43; 	J(RETN(0));	// 100688                  retn ;~ 17C5:8A43

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2ebf2: 	goto loc_2ebf2;
        case m2c::kloc_2ec08: 	goto loc_2ec08;
        case m2c::kloc_2ec16: 	goto loc_2ec16;
        case m2c::kloc_2ec19: 	goto loc_2ec19;
        case m2c::kloc_2ec23: 	goto loc_2ec23;
        case m2c::kloc_2ec44: 	goto loc_2ec44;
        case m2c::kloc_2ec5d: 	goto loc_2ec5d;
        case m2c::kloc_2ec6e: 	goto loc_2ec6e;
        case m2c::ksub_2ebda: 	goto sub_2ebda;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2ec74(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2ec74:
    _begin:
#undef var_2
#define var_2 -2
	// 100699 var_2           = word ptr -2 ;~ 17C5:8A44
cs=0x17c5;eip=0x008a44; 	X(PUSH(bp));	// 100701                  push    bp ;~ 17C5:8A44
cs=0x17c5;eip=0x008a45; 	T(bp = sp;);	// 100702                  mov     bp, sp ;~ 17C5:8A45
cs=0x17c5;eip=0x008a47; 	T(SUB(sp, 2));	// 100703                  sub     sp, 2 ;~ 17C5:8A47
cs=0x17c5;eip=0x008a4a; 	T(TEST(word_4f42e, 0x1000));	// 100704                  test    ds:word_4F42E, 1000h ;~ 17C5:8A4A
cs=0x17c5;eip=0x008a50; 	J(JNZ(loc_2ecd1));	// 100705                  jnz     short loc_2ECD1 ;~ 17C5:8A50
cs=0x17c5;eip=0x008a52; 	T(CMP(word_4991a, 0x0FFFF));	// 100706                  cmp     word_4991A, 0FFFFh ;~ 17C5:8A52
cs=0x17c5;eip=0x008a57; 	J(JZ(loc_2ecd1));	// 100707                  jz      short loc_2ECD1 ;~ 17C5:8A57
cs=0x17c5;eip=0x008a59; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 100708                  mov     [bp+var_2], 0 ;~ 17C5:8A59
cs=0x17c5;eip=0x008a5e; 	J(JMP(loc_2ecac));	// 100709                  jmp     short loc_2ECAC ;~ 17C5:8A5E
loc_2ec90:
	// 5898 
cs=0x17c5;eip=0x008a60; 	T(ax = 8;);	// 100713                  mov     ax, 8 ;~ 17C5:8A60
cs=0x17c5;eip=0x008a63; 	X(PUSH(ax));	// 100714                  push    ax ;~ 17C5:8A63
cs=0x17c5;eip=0x008a64; 	J(CALL(sub_33430,0));	// 100715                  call    sub_33430 ;~ 17C5:8A64
cs=0x17c5;eip=0x008a67; 	T(ADD(sp, 2));	// 100716                  add     sp, 2 ;~ 17C5:8A67
cs=0x17c5;eip=0x008a6a; 	T(cx = ax;);	// 100717                  mov     cx, ax ;~ 17C5:8A6A
cs=0x17c5;eip=0x008a6c; 	T(ax = 1;);	// 100718                  mov     ax, 1 ;~ 17C5:8A6C
cs=0x17c5;eip=0x008a6f; 	T(SHL(ax, cl));	// 100719                  shl     ax, cl ;~ 17C5:8A6F
cs=0x17c5;eip=0x008a71; 	X(OR(word_492c6, ax));	// 100720                  or      word_492C6, ax ;~ 17C5:8A71
cs=0x17c5;eip=0x008a75; 	X(INC(word_521c0));	// 100721                  inc     ds:word_521C0 ;~ 17C5:8A75
cs=0x17c5;eip=0x008a79; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 100722                  inc     [bp+var_2] ;~ 17C5:8A79
loc_2ecac:
	// 5899 
cs=0x17c5;eip=0x008a7c; 	T(ax = word_492e8;);	// 100725                  mov     ax, word_492E8 ;~ 17C5:8A7C
cs=0x17c5;eip=0x008a7f; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 100726                  cmp     [bp+var_2], ax ;~ 17C5:8A7F
cs=0x17c5;eip=0x008a82; 	J(JLE(loc_2ec90));	// 100727                  jle     short loc_2EC90 ;~ 17C5:8A82
cs=0x17c5;eip=0x008a84; 	T(ax = 0x16;);	// 100728                  mov     ax, 16h ;~ 17C5:8A84
cs=0x17c5;eip=0x008a87; 	X(PUSH(ax));	// 100729                  push    ax ;~ 17C5:8A87
cs=0x17c5;eip=0x008a88; 	J(CALL(sub_2f7aa,0));	// 100730                  call    sub_2F7AA ;~ 17C5:8A88
cs=0x17c5;eip=0x008a8b; 	T(ADD(sp, 2));	// 100731                  add     sp, 2 ;~ 17C5:8A8B
cs=0x17c5;eip=0x008a8e; 	X(word_4f21a = 1;);	// 100732                  mov     ds:word_4F21A, 1 ;~ 17C5:8A8E
cs=0x17c5;eip=0x008a94; 	T(ax = 2;);	// 100733                  mov     ax, 2 ;~ 17C5:8A94
cs=0x17c5;eip=0x008a97; 	X(PUSH(ax));	// 100734                  push    ax ;~ 17C5:8A97
cs=0x17c5;eip=0x008a98; 	T(SUB(ax, ax));	// 100735                  sub     ax, ax ;~ 17C5:8A98
cs=0x17c5;eip=0x008a9a; 	X(PUSH(ax));	// 100736                  push    ax ;~ 17C5:8A9A
cs=0x17c5;eip=0x008a9b; 	J(CALL(sub_33c65,0));	// 100737                  call    sub_33C65 ;~ 17C5:8A9B
cs=0x17c5;eip=0x008a9e; 	T(ADD(sp, 4));	// 100739                  add     sp, 4 ;~ 17C5:8A9E
loc_2ecd1:
	// 5900 
cs=0x17c5;eip=0x008aa1; 	T(sp = bp;);	// 100743                  mov     sp, bp ;~ 17C5:8AA1
cs=0x17c5;eip=0x008aa3; 	X(POP(bp));	// 100744                  pop     bp ;~ 17C5:8AA3
cs=0x17c5;eip=0x008aa4; 	J(RETN(0));	// 100745                  retn ;~ 17C5:8AA4

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2ec90: 	goto loc_2ec90;
        case m2c::kloc_2ecac: 	goto loc_2ecac;
        case m2c::kloc_2ecd1: 	goto loc_2ecd1;
        case m2c::ksub_2ec74: 	goto sub_2ec74;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2ecd6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2ecd6:
    _begin:
#undef var_8
#define var_8 -8
	// 100757 var_8           = word ptr -8 ;~ 17C5:8AA6
#undef var_6
#define var_6 -6
	// 100758 var_6           = word ptr -6 ;~ 17C5:8AA6
#undef var_4
#define var_4 -4
	// 100759 var_4           = word ptr -4 ;~ 17C5:8AA6
#undef var_2
#define var_2 -2
	// 100760 var_2           = word ptr -2 ;~ 17C5:8AA6
cs=0x17c5;eip=0x008aa6; 	X(PUSH(bp));	// 100762                  push    bp ;~ 17C5:8AA6
cs=0x17c5;eip=0x008aa7; 	T(bp = sp;);	// 100763                  mov     bp, sp ;~ 17C5:8AA7
cs=0x17c5;eip=0x008aa9; 	T(SUB(sp, 8));	// 100764                  sub     sp, 8 ;~ 17C5:8AA9
cs=0x17c5;eip=0x008aac; 	X(PUSH(di));	// 100765                  push    di ;~ 17C5:8AAC
cs=0x17c5;eip=0x008aad; 	X(PUSH(si));	// 100766                  push    si ;~ 17C5:8AAD
cs=0x17c5;eip=0x008aae; 	X(PUSH(word_4e2fc));	// 100767                  push    ds:word_4E2FC ;~ 17C5:8AAE
cs=0x17c5;eip=0x008ab2; 	J(CALL(sub_34dc0,0));	// 100768                  call    sub_34DC0 ;~ 17C5:8AB2
cs=0x17c5;eip=0x008ab5; 	T(ADD(sp, 2));	// 100769                  add     sp, 2 ;~ 17C5:8AB5
cs=0x17c5;eip=0x008ab8; 	T(CMP(ax, 0x3000));	// 100770                  cmp     ax, 3000h ;~ 17C5:8AB8
cs=0x17c5;eip=0x008abb; 	J(JLE(loc_2ecf0));	// 100771                  jle     short loc_2ECF0 ;~ 17C5:8ABB
cs=0x17c5;eip=0x008abd; 	J(JMP(loc_2f01e));	// 100772                  jmp     loc_2F01E ;~ 17C5:8ABD
loc_2ecf0:
	// 5901 
cs=0x17c5;eip=0x008ac0; 	T(CMP(word_49932, 0));	// 100776                  cmp     word_49932, 0 ;~ 17C5:8AC0
cs=0x17c5;eip=0x008ac5; 	J(JZ(loc_2ecfa));	// 100777                  jz      short loc_2ECFA ;~ 17C5:8AC5
cs=0x17c5;eip=0x008ac7; 	J(JMP(loc_2f01e));	// 100778                  jmp     loc_2F01E ;~ 17C5:8AC7
loc_2ecfa:
	// 5902 
cs=0x17c5;eip=0x008aca; 	T(CMP(word_5206c, 0));	// 100782                  cmp     ds:word_5206C, 0 ;~ 17C5:8ACA
cs=0x17c5;eip=0x008acf; 	J(JZ(loc_2ed04));	// 100783                  jz      short loc_2ED04 ;~ 17C5:8ACF
cs=0x17c5;eip=0x008ad1; 	J(JMP(loc_2f01e));	// 100784                  jmp     loc_2F01E ;~ 17C5:8AD1
loc_2ed04:
	// 5903 
cs=0x17c5;eip=0x008ad4; 	T(si = word_492e2;);	// 100788                  mov     si, word_492E2 ;~ 17C5:8AD4
cs=0x17c5;eip=0x008ad8; 	T(cl = 2;);	// 100789                  mov     cl, 2 ;~ 17C5:8AD8
cs=0x17c5;eip=0x008ada; 	T(SHL(si, cl));	// 100790                  shl     si, cl ;~ 17C5:8ADA
cs=0x17c5;eip=0x008adc; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x7F2))));	// 100791                  mov     ax, [si+7F2h] ;~ 17C5:8ADC
cs=0x17c5;eip=0x008ae0; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 100792                  mov     [bp+var_6], ax ;~ 17C5:8AE0
cs=0x17c5;eip=0x008ae3; 	T(ax = 0x1A;);	// 100793                  mov     ax, 1Ah ;~ 17C5:8AE3
cs=0x17c5;eip=0x008ae6; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_6))));	// 100794                  imul    [bp+var_6] ;~ 17C5:8AE6
cs=0x17c5;eip=0x008ae9; 	T(di = ax;);	// 100795                  mov     di, ax ;~ 17C5:8AE9
cs=0x17c5;eip=0x008aeb; 	T(MOV(ax, *(dw*)(raddr(ds,di+0x82C))));	// 100796                  mov     ax, [di+82Ch] ;~ 17C5:8AEB
cs=0x17c5;eip=0x008aef; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 100797                  mov     [bp+var_2], ax ;~ 17C5:8AEF
cs=0x17c5;eip=0x008af2; 	T(CMP(*(dw*)(raddr(ds,si+0x7F4)), 0));	// 100798                  cmp     word ptr [si+7F4h], 0 ;~ 17C5:8AF2
cs=0x17c5;eip=0x008af7; 	J(JNZ(loc_2ed52));	// 100799                  jnz     short loc_2ED52 ;~ 17C5:8AF7
cs=0x17c5;eip=0x008af9; 	T(ax = di;);	// 100800                  mov     ax, di ;~ 17C5:8AF9
cs=0x17c5;eip=0x008afb; 	T(ADD(ax, 0x820));	// 100801                  add     ax, 820h ;~ 17C5:8AFB
cs=0x17c5;eip=0x008afe; 	X(PUSH(ax));	// 100802                  push    ax ;~ 17C5:8AFE
cs=0x17c5;eip=0x008aff; 	T(ax = 0x66C4;);	// 100803                  mov     ax, 66C4h ;~ 17C5:8AFF
cs=0x17c5;eip=0x008b02; 	X(PUSH(ax));	// 100804                  push    ax ;~ 17C5:8B02
cs=0x17c5;eip=0x008b03; 	J(CALL(sub_34c1c,0));	// 100805                  call    sub_34C1C ;~ 17C5:8B03
cs=0x17c5;eip=0x008b06; 	T(ADD(sp, 4));	// 100806                  add     sp, 4 ;~ 17C5:8B06
cs=0x17c5;eip=0x008b09; 	T(ax = 0x5944;);	// 100807                  mov     ax, 5944h ;~ 17C5:8B09
cs=0x17c5;eip=0x008b0c; 	X(PUSH(ax));	// 100808                  push    ax ;~ 17C5:8B0C
cs=0x17c5;eip=0x008b0d; 	T(ax = 0x66C4;);	// 100809                  mov     ax, 66C4h ;~ 17C5:8B0D
cs=0x17c5;eip=0x008b10; 	X(PUSH(ax));	// 100810                  push    ax ;~ 17C5:8B10
cs=0x17c5;eip=0x008b11; 	J(CALL(sub_34bdc,0));	// 100811                  call    sub_34BDC ;~ 17C5:8B11
cs=0x17c5;eip=0x008b14; 	T(ADD(sp, 4));	// 100812                  add     sp, 4 ;~ 17C5:8B14
cs=0x17c5;eip=0x008b17; 	T(ax = 0x66C4;);	// 100813                  mov     ax, 66C4h ;~ 17C5:8B17
cs=0x17c5;eip=0x008b1a; 	X(PUSH(ax));	// 100814                  push    ax ;~ 17C5:8B1A
cs=0x17c5;eip=0x008b1b; 	J(CALL(sub_30434,0));	// 100815                  call    sub_30434 ;~ 17C5:8B1B
cs=0x17c5;eip=0x008b1e; 	J(JMP(loc_2f01b));	// 100816                  jmp     loc_2F01B ;~ 17C5:8B1E
loc_2ed52:
	// 5904 
cs=0x17c5;eip=0x008b22; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0));	// 100821                  cmp     [bp+var_2], 0 ;~ 17C5:8B22
cs=0x17c5;eip=0x008b26; 	J(JNZ(loc_2ed5b));	// 100822                  jnz     short loc_2ED5B ;~ 17C5:8B26
cs=0x17c5;eip=0x008b28; 	J(JMP(loc_2f01e));	// 100823                  jmp     loc_2F01E ;~ 17C5:8B28
loc_2ed5b:
	// 5905 
cs=0x17c5;eip=0x008b2b; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0x0FFFF));	// 100827                  cmp     [bp+var_2], 0FFFFh ;~ 17C5:8B2B
cs=0x17c5;eip=0x008b2f; 	J(JNZ(loc_2ed64));	// 100828                  jnz     short loc_2ED64 ;~ 17C5:8B2F
cs=0x17c5;eip=0x008b31; 	J(JMP(loc_2f01e));	// 100829                  jmp     loc_2F01E ;~ 17C5:8B31
loc_2ed64:
	// 5906 
cs=0x17c5;eip=0x008b34; 	T(bx = word_492e2;);	// 100833                  mov     bx, word_492E2 ;~ 17C5:8B34
cs=0x17c5;eip=0x008b38; 	T(SHL(bx, 1));	// 100834                  shl     bx, 1 ;~ 17C5:8B38
cs=0x17c5;eip=0x008b3a; 	T(SHL(bx, 1));	// 100835                  shl     bx, 1 ;~ 17C5:8B3A
cs=0x17c5;eip=0x008b3c; 	X(DEC(*(dw*)(raddr(ds,bx+0x7F4))));	// 100836                  dec     word ptr [bx+7F4h] ;~ 17C5:8B3C
cs=0x17c5;eip=0x008b40; 	T(CMP(word_492f2, 0));	// 100837                  cmp     word_492F2, 0 ;~ 17C5:8B40
cs=0x17c5;eip=0x008b45; 	J(JNZ(loc_2ed7a));	// 100838                  jnz     short loc_2ED7A ;~ 17C5:8B45
cs=0x17c5;eip=0x008b47; 	J(JMP(loc_2ee18));	// 100839                  jmp     loc_2EE18 ;~ 17C5:8B47
loc_2ed7a:
	// 5907 
cs=0x17c5;eip=0x008b4a; 	T(SUB(ax, ax));	// 100843                  sub     ax, ax ;~ 17C5:8B4A
cs=0x17c5;eip=0x008b4c; 	X(PUSH(ax));	// 100844                  push    ax ;~ 17C5:8B4C
cs=0x17c5;eip=0x008b4d; 	J(CALL(sub_30074,0));	// 100845                  call    sub_30074 ;~ 17C5:8B4D
cs=0x17c5;eip=0x008b50; 	T(ADD(sp, 2));	// 100846                  add     sp, 2 ;~ 17C5:8B50
cs=0x17c5;eip=0x008b53; 	T(bx = word_492e2;);	// 100847                  mov     bx, word_492E2 ;~ 17C5:8B53
cs=0x17c5;eip=0x008b57; 	T(SHL(bx, 1));	// 100848                  shl     bx, 1 ;~ 17C5:8B57
cs=0x17c5;eip=0x008b59; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x5920))));	// 100849                  mov     ax, [bx+5920h] ;~ 17C5:8B59
cs=0x17c5;eip=0x008b5d; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 100850                  mov     [bp+var_4], ax ;~ 17C5:8B5D
cs=0x17c5;eip=0x008b60; 	T(ax = 0x0C2;);	// 100851                  mov     ax, 0C2h ;~ 17C5:8B60
cs=0x17c5;eip=0x008b63; 	X(PUSH(ax));	// 100852                  push    ax ;~ 17C5:8B63
cs=0x17c5;eip=0x008b64; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 100853                  mov     ax, [bp+var_4] ;~ 17C5:8B64
cs=0x17c5;eip=0x008b67; 	T(ADD(ax, 2));	// 100854                  add     ax, 2 ;~ 17C5:8B67
cs=0x17c5;eip=0x008b6a; 	X(PUSH(ax));	// 100855                  push    ax ;~ 17C5:8B6A
cs=0x17c5;eip=0x008b6b; 	T(ax = 0x0BE;);	// 100856                  mov     ax, 0BEh ;~ 17C5:8B6B
cs=0x17c5;eip=0x008b6e; 	X(PUSH(ax));	// 100857                  push    ax ;~ 17C5:8B6E
cs=0x17c5;eip=0x008b6f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 100858                  mov     ax, [bp+var_4] ;~ 17C5:8B6F
cs=0x17c5;eip=0x008b72; 	T(DEC(ax));	// 100859                  dec     ax ;~ 17C5:8B72
cs=0x17c5;eip=0x008b73; 	X(PUSH(ax));	// 100860                  push    ax ;~ 17C5:8B73
cs=0x17c5;eip=0x008b74; 	J(CALL(sub_3008d,0));	// 100861                  call    sub_3008D ;~ 17C5:8B74
cs=0x17c5;eip=0x008b77; 	T(ADD(sp, 8));	// 100863                  add     sp, 8 ;~ 17C5:8B77
cs=0x17c5;eip=0x008b7a; 	T(ax = 0x0C;);	// 100864                  mov     ax, 0Ch ;~ 17C5:8B7A
cs=0x17c5;eip=0x008b7d; 	X(PUSH(ax));	// 100865                  push    ax ;~ 17C5:8B7D
cs=0x17c5;eip=0x008b7e; 	T(ax = 0x0BE;);	// 100866                  mov     ax, 0BEh ;~ 17C5:8B7E
cs=0x17c5;eip=0x008b81; 	X(PUSH(ax));	// 100867                  push    ax ;~ 17C5:8B81
cs=0x17c5;eip=0x008b82; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 100868                  push    [bp+var_4] ;~ 17C5:8B82
cs=0x17c5;eip=0x008b85; 	T(bx = word_492e2;);	// 100869                  mov     bx, word_492E2 ;~ 17C5:8B85
cs=0x17c5;eip=0x008b89; 	T(SHL(bx, 1));	// 100870                  shl     bx, 1 ;~ 17C5:8B89
cs=0x17c5;eip=0x008b8b; 	T(SHL(bx, 1));	// 100871                  shl     bx, 1 ;~ 17C5:8B8B
cs=0x17c5;eip=0x008b8d; 	X(PUSH(*(dw*)(raddr(ds,bx+0x7F4))));	// 100872                  push    word ptr [bx+7F4h] ;~ 17C5:8B8D
cs=0x17c5;eip=0x008b91; 	J(CALL(sub_303b3,0));	// 100873                  call    sub_303B3 ;~ 17C5:8B91
cs=0x17c5;eip=0x008b94; 	T(ADD(sp, 8));	// 100875                  add     sp, 8 ;~ 17C5:8B94
cs=0x17c5;eip=0x008b97; 	T(ax = 0x1A;);	// 100876                  mov     ax, 1Ah ;~ 17C5:8B97
cs=0x17c5;eip=0x008b9a; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_6))));	// 100877                  imul    [bp+var_6] ;~ 17C5:8B9A
cs=0x17c5;eip=0x008b9d; 	T(ADD(ax, 0x820));	// 100878                  add     ax, 820h ;~ 17C5:8B9D
cs=0x17c5;eip=0x008ba0; 	X(PUSH(ax));	// 100879                  push    ax ;~ 17C5:8BA0
cs=0x17c5;eip=0x008ba1; 	T(ax = 0x66C4;);	// 100880                  mov     ax, 66C4h ;~ 17C5:8BA1
cs=0x17c5;eip=0x008ba4; 	X(PUSH(ax));	// 100881                  push    ax ;~ 17C5:8BA4
cs=0x17c5;eip=0x008ba5; 	J(CALL(sub_34c1c,0));	// 100882                  call    sub_34C1C ;~ 17C5:8BA5
cs=0x17c5;eip=0x008ba8; 	T(ADD(sp, 4));	// 100883                  add     sp, 4 ;~ 17C5:8BA8
cs=0x17c5;eip=0x008bab; 	T(ax = 0x5947;);	// 100884                  mov     ax, 5947h ;~ 17C5:8BAB
cs=0x17c5;eip=0x008bae; 	X(PUSH(ax));	// 100885                  push    ax ;~ 17C5:8BAE
cs=0x17c5;eip=0x008baf; 	T(ax = 0x66C4;);	// 100886                  mov     ax, 66C4h ;~ 17C5:8BAF
cs=0x17c5;eip=0x008bb2; 	X(PUSH(ax));	// 100887                  push    ax ;~ 17C5:8BB2
cs=0x17c5;eip=0x008bb3; 	J(CALL(sub_34bdc,0));	// 100888                  call    sub_34BDC ;~ 17C5:8BB3
cs=0x17c5;eip=0x008bb6; 	T(ADD(sp, 4));	// 100889                  add     sp, 4 ;~ 17C5:8BB6
cs=0x17c5;eip=0x008bb9; 	T(ax = 0x0A;);	// 100890                  mov     ax, 0Ah ;~ 17C5:8BB9
cs=0x17c5;eip=0x008bbc; 	X(PUSH(ax));	// 100891                  push    ax ;~ 17C5:8BBC
cs=0x17c5;eip=0x008bbd; 	T(ax = 0x9780;);	// 100892                  mov     ax, 9780h ;~ 17C5:8BBD
cs=0x17c5;eip=0x008bc0; 	X(PUSH(ax));	// 100893                  push    ax ;~ 17C5:8BC0
cs=0x17c5;eip=0x008bc1; 	T(bx = word_492e2;);	// 100894                  mov     bx, word_492E2 ;~ 17C5:8BC1
cs=0x17c5;eip=0x008bc5; 	T(SHL(bx, 1));	// 100895                  shl     bx, 1 ;~ 17C5:8BC5
cs=0x17c5;eip=0x008bc7; 	T(SHL(bx, 1));	// 100896                  shl     bx, 1 ;~ 17C5:8BC7
cs=0x17c5;eip=0x008bc9; 	X(PUSH(*(dw*)(raddr(ds,bx+0x7F4))));	// 100897                  push    word ptr [bx+7F4h] ;~ 17C5:8BC9
cs=0x17c5;eip=0x008bcd; 	J(CALL(sub_34c6a,0));	// 100898                  call    sub_34C6A ;~ 17C5:8BCD
cs=0x17c5;eip=0x008bd0; 	T(ADD(sp, 6));	// 100899                  add     sp, 6 ;~ 17C5:8BD0
cs=0x17c5;eip=0x008bd3; 	X(PUSH(ax));	// 100900                  push    ax ;~ 17C5:8BD3
cs=0x17c5;eip=0x008bd4; 	T(ax = 0x66C4;);	// 100901                  mov     ax, 66C4h ;~ 17C5:8BD4
cs=0x17c5;eip=0x008bd7; 	X(PUSH(ax));	// 100902                  push    ax ;~ 17C5:8BD7
cs=0x17c5;eip=0x008bd8; 	J(CALL(sub_34bdc,0));	// 100903                  call    sub_34BDC ;~ 17C5:8BD8
cs=0x17c5;eip=0x008bdb; 	T(ADD(sp, 4));	// 100904                  add     sp, 4 ;~ 17C5:8BDB
cs=0x17c5;eip=0x008bde; 	T(ax = 0x66C4;);	// 100905                  mov     ax, 66C4h ;~ 17C5:8BDE
cs=0x17c5;eip=0x008be1; 	X(PUSH(ax));	// 100906                  push    ax ;~ 17C5:8BE1
cs=0x17c5;eip=0x008be2; 	J(CALL(sub_30434,0));	// 100907                  call    sub_30434 ;~ 17C5:8BE2
cs=0x17c5;eip=0x008be5; 	T(ADD(sp, 2));	// 100908                  add     sp, 2 ;~ 17C5:8BE5
loc_2ee18:
	// 5908 
cs=0x17c5;eip=0x008be8; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), 0x0FFFF));	// 100911                  mov     [bp+var_8], 0FFFFh ;~ 17C5:8BE8
cs=0x17c5;eip=0x008bed; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 8));	// 100912                  mov     [bp+var_4], 8 ;~ 17C5:8BED
loc_2ee22:
	// 5909 
cs=0x17c5;eip=0x008bf2; 	T(ax = 0x18;);	// 100915                  mov     ax, 18h ;~ 17C5:8BF2
cs=0x17c5;eip=0x008bf5; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_4))));	// 100916                  imul    [bp+var_4] ;~ 17C5:8BF5
cs=0x17c5;eip=0x008bf8; 	T(bx = ax;);	// 100917                  mov     bx, ax ;~ 17C5:8BF8
cs=0x17c5;eip=0x008bfa; 	T(CMP(*(dw*)(raddr(ds,bx+0x0D22)), 0));	// 100918                  cmp     word ptr [bx+0D22h], 0 ;~ 17C5:8BFA
cs=0x17c5;eip=0x008bff; 	J(JNZ(loc_2ee37));	// 100919                  jnz     short loc_2EE37 ;~ 17C5:8BFF
cs=0x17c5;eip=0x008c01; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 100920                  mov     ax, [bp+var_4] ;~ 17C5:8C01
cs=0x17c5;eip=0x008c04; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 100921                  mov     [bp+var_8], ax ;~ 17C5:8C04
loc_2ee37:
	// 5910 
cs=0x17c5;eip=0x008c07; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 100924                  inc     [bp+var_4] ;~ 17C5:8C07
cs=0x17c5;eip=0x008c0a; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x0C));	// 100925                  cmp     [bp+var_4], 0Ch ;~ 17C5:8C0A
cs=0x17c5;eip=0x008c0e; 	J(JL(loc_2ee22));	// 100926                  jl      short loc_2EE22 ;~ 17C5:8C0E
cs=0x17c5;eip=0x008c10; 	T(CMP(*(dw*)(raddr(ss,bp+var_8)), 0x0FFFF));	// 100927                  cmp     [bp+var_8], 0FFFFh ;~ 17C5:8C10
cs=0x17c5;eip=0x008c14; 	J(JNZ(loc_2ee49));	// 100928                  jnz     short loc_2EE49 ;~ 17C5:8C14
cs=0x17c5;eip=0x008c16; 	J(JMP(loc_2f00d));	// 100929                  jmp     loc_2F00D ;~ 17C5:8C16
loc_2ee49:
	// 5911 
cs=0x17c5;eip=0x008c19; 	T(ax = 0x18;);	// 100933                  mov     ax, 18h ;~ 17C5:8C19
cs=0x17c5;eip=0x008c1c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 100934                  imul    [bp+var_8] ;~ 17C5:8C1C
cs=0x17c5;eip=0x008c1f; 	T(si = ax;);	// 100935                  mov     si, ax ;~ 17C5:8C1F
cs=0x17c5;eip=0x008c21; 	T(ax = word_520f0;);	// 100936                  mov     ax, ds:word_520F0 ;~ 17C5:8C21
cs=0x17c5;eip=0x008c24; 	X(MOV(*(dw*)(raddr(ds,si+0x0D14)), ax));	// 100937                  mov     [si+0D14h], ax ;~ 17C5:8C24
cs=0x17c5;eip=0x008c28; 	T(ax = word_52100;);	// 100938                  mov     ax, ds:word_52100 ;~ 17C5:8C28
cs=0x17c5;eip=0x008c2b; 	X(MOV(*(dw*)(raddr(ds,si+0x0D16)), ax));	// 100939                  mov     [si+0D16h], ax ;~ 17C5:8C2B
cs=0x17c5;eip=0x008c2f; 	T(ax = word_4e2fe;);	// 100940                  mov     ax, ds:word_4E2FE ;~ 17C5:8C2F
cs=0x17c5;eip=0x008c32; 	T(SUB(ax, 0x14));	// 100941                  sub     ax, 14h ;~ 17C5:8C32
cs=0x17c5;eip=0x008c35; 	X(MOV(*(dw*)(raddr(ds,si+0x0D18)), ax));	// 100942                  mov     [si+0D18h], ax ;~ 17C5:8C35
cs=0x17c5;eip=0x008c39; 	T(ax = word_50b74;);	// 100943                  mov     ax, ds:word_50B74 ;~ 17C5:8C39
cs=0x17c5;eip=0x008c3c; 	T(cl = 0x0B;);	// 100944                  mov     cl, 0Bh ;~ 17C5:8C3C
cs=0x17c5;eip=0x008c3e; 	T(SHR(ax, cl));	// 100945                  shr     ax, cl ;~ 17C5:8C3E
cs=0x17c5;eip=0x008c40; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1A)), ax));	// 100946                  mov     [si+0D1Ah], ax ;~ 17C5:8C40
cs=0x17c5;eip=0x008c44; 	T(ax = 0x18;);	// 100947                  mov     ax, 18h ;~ 17C5:8C44
cs=0x17c5;eip=0x008c47; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 100948                  imul    [bp+var_8] ;~ 17C5:8C47
cs=0x17c5;eip=0x008c4a; 	T(si = ax;);	// 100949                  mov     si, ax ;~ 17C5:8C4A
cs=0x17c5;eip=0x008c4c; 	T(ax = word_4e2f8;);	// 100950                  mov     ax, ds:word_4E2F8 ;~ 17C5:8C4C
cs=0x17c5;eip=0x008c4f; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1C)), ax));	// 100951                  mov     [si+0D1Ch], ax ;~ 17C5:8C4F
cs=0x17c5;eip=0x008c53; 	T(ax = word_4e2fa;);	// 100952                  mov     ax, ds:word_4E2FA ;~ 17C5:8C53
cs=0x17c5;eip=0x008c56; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1E)), ax));	// 100953                  mov     [si+0D1Eh], ax ;~ 17C5:8C56
cs=0x17c5;eip=0x008c5a; 	T(ax = word_4e2fc;);	// 100954                  mov     ax, ds:word_4E2FC ;~ 17C5:8C5A
cs=0x17c5;eip=0x008c5d; 	X(MOV(*(dw*)(raddr(ds,si+0x0D20)), ax));	// 100955                  mov     [si+0D20h], ax ;~ 17C5:8C5D
cs=0x17c5;eip=0x008c61; 	T(ax = 0x12;);	// 100956                  mov     ax, 12h ;~ 17C5:8C61
cs=0x17c5;eip=0x008c64; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 100957                  imul    [bp+var_2] ;~ 17C5:8C64
cs=0x17c5;eip=0x008c67; 	T(di = ax;);	// 100958                  mov     di, ax ;~ 17C5:8C67
cs=0x17c5;eip=0x008c69; 	T(MOV(ax, *(dw*)(raddr(ds,di+0x532))));	// 100959                  mov     ax, [di+532h] ;~ 17C5:8C69
cs=0x17c5;eip=0x008c6d; 	T(cl = 6;);	// 100960                  mov     cl, 6 ;~ 17C5:8C6D
cs=0x17c5;eip=0x008c6f; 	T(SAR(ax, cl));	// 100961                  sar     ax, cl ;~ 17C5:8C6F
cs=0x17c5;eip=0x008c71; 	T(INC(ax));	// 100962                  inc     ax ;~ 17C5:8C71
cs=0x17c5;eip=0x008c72; 	T(CWD);	// 100963                  cwd ;~ 17C5:8C72
cs=0x17c5;eip=0x008c73; 	X(PUSH(dx));	// 100964                  push    dx ;~ 17C5:8C73
cs=0x17c5;eip=0x008c74; 	X(PUSH(ax));	// 100965                  push    ax ;~ 17C5:8C74
cs=0x17c5;eip=0x008c75; 	T(ax = word_492f4;);	// 100966                  mov     ax, word_492F4 ;~ 17C5:8C75
cs=0x17c5;eip=0x008c78; 	T(CWD);	// 100967                  cwd ;~ 17C5:8C78
cs=0x17c5;eip=0x008c79; 	X(PUSH(dx));	// 100968                  push    dx ;~ 17C5:8C79
cs=0x17c5;eip=0x008c7a; 	X(PUSH(ax));	// 100969                  push    ax ;~ 17C5:8C7A
cs=0x17c5;eip=0x008c7b; 	T(CMP(*(dw*)(raddr(ds,di+0x534)), 6));	// 100970                  cmp     word ptr [di+534h], 6 ;~ 17C5:8C7B
cs=0x17c5;eip=0x008c80; 	J(JNZ(loc_2eeb6));	// 100971                  jnz     short loc_2EEB6 ;~ 17C5:8C80
cs=0x17c5;eip=0x008c82; 	T(cl = 3;);	// 100972                  mov     cl, 3 ;~ 17C5:8C82
cs=0x17c5;eip=0x008c84; 	J(JMP(loc_2eeb8));	// 100973                  jmp     short loc_2EEB8 ;~ 17C5:8C84
loc_2eeb6:
	// 5912 
cs=0x17c5;eip=0x008c86; 	T(cl = 2;);	// 100977                  mov     cl, 2 ;~ 17C5:8C86
loc_2eeb8:
	// 5913 
cs=0x17c5;eip=0x008c88; 	T(SUB(cl, 6));	// 100980                  sub     cl, 6 ;~ 17C5:8C88
cs=0x17c5;eip=0x008c8b; 	T(NEG(cl));	// 100981                  neg     cl ;~ 17C5:8C8B
cs=0x17c5;eip=0x008c8d; 	T(MOV(ax, *(dw*)(raddr(ds,di+0x530))));	// 100982                  mov     ax, [di+530h] ;~ 17C5:8C8D
cs=0x17c5;eip=0x008c91; 	T(CWD);	// 100983                  cwd ;~ 17C5:8C91
cs=0x17c5;eip=0x008c92; 	T(OR(cl, cl));	// 100984                  or      cl, cl ;~ 17C5:8C92
cs=0x17c5;eip=0x008c94; 	J(JZ(loc_2eece));	// 100985                  jz      short loc_2EECE ;~ 17C5:8C94
loc_2eec6:
	// 5914 
cs=0x17c5;eip=0x008c96; 	T(SHL(ax, 1));	// 100988                  shl     ax, 1 ;~ 17C5:8C96
cs=0x17c5;eip=0x008c98; 	T(RCL(dx, 1));	// 100989                  rcl     dx, 1 ;~ 17C5:8C98
cs=0x17c5;eip=0x008c9a; 	T(DEC(cl));	// 100990                  dec     cl ;~ 17C5:8C9A
cs=0x17c5;eip=0x008c9c; 	J(JNZ(loc_2eec6));	// 100991                  jnz     short loc_2EEC6 ;~ 17C5:8C9C
loc_2eece:
	// 5915 
cs=0x17c5;eip=0x008c9e; 	X(PUSH(dx));	// 100994                  push    dx ;~ 17C5:8C9E
cs=0x17c5;eip=0x008c9f; 	X(PUSH(ax));	// 100995                  push    ax ;~ 17C5:8C9F
cs=0x17c5;eip=0x008ca0; 	J(CALL(sub_34ee0,0));	// 100996                  call    sub_34EE0 ;~ 17C5:8CA0
cs=0x17c5;eip=0x008ca3; 	X(PUSH(dx));	// 100997                  push    dx ;~ 17C5:8CA3
cs=0x17c5;eip=0x008ca4; 	X(PUSH(ax));	// 100998                  push    ax ;~ 17C5:8CA4
cs=0x17c5;eip=0x008ca5; 	J(CALL(sub_34e44,0));	// 100999                  call    sub_34E44 ;~ 17C5:8CA5
cs=0x17c5;eip=0x008ca8; 	T(ADD(ax, 6));	// 101000                  add     ax, 6 ;~ 17C5:8CA8
cs=0x17c5;eip=0x008cab; 	X(MOV(*(dw*)(raddr(ds,si+0x0D22)), ax));	// 101001                  mov     [si+0D22h], ax ;~ 17C5:8CAB
cs=0x17c5;eip=0x008caf; 	T(ax = 0x18;);	// 101002                  mov     ax, 18h ;~ 17C5:8CAF
cs=0x17c5;eip=0x008cb2; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 101003                  imul    [bp+var_8] ;~ 17C5:8CB2
cs=0x17c5;eip=0x008cb5; 	T(si = ax;);	// 101004                  mov     si, ax ;~ 17C5:8CB5
cs=0x17c5;eip=0x008cb7; 	T(ADD(si, 0x0D22));	// 101005                  add     si, 0D22h ;~ 17C5:8CB7
cs=0x17c5;eip=0x008cbb; 	T(CMP(*(dw*)(raddr(ds,si)), 6));	// 101006                  cmp     word ptr [si], 6 ;~ 17C5:8CBB
cs=0x17c5;eip=0x008cbe; 	J(JG(loc_2eef4));	// 101007                  jg      short loc_2EEF4 ;~ 17C5:8CBE
cs=0x17c5;eip=0x008cc0; 	X(MOV(*(dw*)(raddr(ds,si)), 0x3E7));	// 101008                  mov     word ptr [si], 3E7h ;~ 17C5:8CC0
loc_2eef4:
	// 5916 
cs=0x17c5;eip=0x008cc4; 	T(ax = 0x18;);	// 101011                  mov     ax, 18h ;~ 17C5:8CC4
cs=0x17c5;eip=0x008cc7; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 101012                  imul    [bp+var_8] ;~ 17C5:8CC7
cs=0x17c5;eip=0x008cca; 	T(si = ax;);	// 101013                  mov     si, ax ;~ 17C5:8CCA
cs=0x17c5;eip=0x008ccc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 101014                  mov     ax, [bp+var_2] ;~ 17C5:8CCC
cs=0x17c5;eip=0x008ccf; 	X(MOV(*(dw*)(raddr(ds,si+0x0D24)), ax));	// 101015                  mov     [si+0D24h], ax ;~ 17C5:8CCF
cs=0x17c5;eip=0x008cd3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 101016                  mov     ax, [bp+var_6] ;~ 17C5:8CD3
cs=0x17c5;eip=0x008cd6; 	X(MOV(*(dw*)(raddr(ds,si+0x0D26)), ax));	// 101017                  mov     [si+0D26h], ax ;~ 17C5:8CD6
cs=0x17c5;eip=0x008cda; 	X(MOV(*(dw*)(raddr(ds,si+0x0D28)), 0x0FFFF));	// 101018                  mov     word ptr [si+0D28h], 0FFFFh ;~ 17C5:8CDA
cs=0x17c5;eip=0x008ce0; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0x1E));	// 101019                  cmp     [bp+var_2], 1Eh ;~ 17C5:8CE0
cs=0x17c5;eip=0x008ce4; 	J(JZ(loc_2ef1e));	// 101020                  jz      short loc_2EF1E ;~ 17C5:8CE4
cs=0x17c5;eip=0x008ce6; 	X(SUB(*(dw*)(raddr(ds,si+0x0D1E)), 0x1000));	// 101021                  sub     word ptr [si+0D1Eh], 1000h ;~ 17C5:8CE6
cs=0x17c5;eip=0x008cec; 	J(JMP(loc_2ef38));	// 101022                  jmp     short loc_2EF38 ;~ 17C5:8CEC
loc_2ef1e:
	// 5917 
cs=0x17c5;eip=0x008cee; 	J(CALL(sub_32a5d,0));	// 101026                  call    sub_32A5D ;~ 17C5:8CEE
cs=0x17c5;eip=0x008cf1; 	T(SUB(ax, 0x400));	// 101027                  sub     ax, 400h ;~ 17C5:8CF1
cs=0x17c5;eip=0x008cf4; 	T(cx = ax;);	// 101028                  mov     cx, ax ;~ 17C5:8CF4
cs=0x17c5;eip=0x008cf6; 	T(ax = 0x18;);	// 101029                  mov     ax, 18h ;~ 17C5:8CF6
cs=0x17c5;eip=0x008cf9; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 101030                  imul    [bp+var_8] ;~ 17C5:8CF9
cs=0x17c5;eip=0x008cfc; 	T(bx = ax;);	// 101031                  mov     bx, ax ;~ 17C5:8CFC
cs=0x17c5;eip=0x008cfe; 	X(MOV(*(dw*)(raddr(ds,bx+0x0D2A)), cx));	// 101032                  mov     [bx+0D2Ah], cx ;~ 17C5:8CFE
cs=0x17c5;eip=0x008d02; 	T(ax = word_49924;);	// 101033                  mov     ax, word_49924 ;~ 17C5:8D02
cs=0x17c5;eip=0x008d05; 	X(word_52250 = ax;);	// 101034                  mov     ds:word_52250, ax ;~ 17C5:8D05
loc_2ef38:
	// 5918 
cs=0x17c5;eip=0x008d08; 	T(CMP(word_49924, 0));	// 101037                  cmp     word_49924, 0 ;~ 17C5:8D08
cs=0x17c5;eip=0x008d0d; 	J(JL(loc_2ef5d));	// 101038                  jl      short loc_2EF5D ;~ 17C5:8D0D
cs=0x17c5;eip=0x008d0f; 	T(ax = 0x12;);	// 101039                  mov     ax, 12h ;~ 17C5:8D0F
cs=0x17c5;eip=0x008d12; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 101040                  imul    [bp+var_2] ;~ 17C5:8D12
cs=0x17c5;eip=0x008d15; 	T(bx = ax;);	// 101041                  mov     bx, ax ;~ 17C5:8D15
cs=0x17c5;eip=0x008d17; 	T(CMP(*(dw*)(raddr(ds,bx+0x534)), 6));	// 101042                  cmp     word ptr [bx+534h], 6 ;~ 17C5:8D17
cs=0x17c5;eip=0x008d1c; 	J(JNZ(loc_2ef5d));	// 101043                  jnz     short loc_2EF5D ;~ 17C5:8D1C
cs=0x17c5;eip=0x008d1e; 	T(ax = 0x18;);	// 101044                  mov     ax, 18h ;~ 17C5:8D1E
cs=0x17c5;eip=0x008d21; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 101045                  imul    [bp+var_8] ;~ 17C5:8D21
cs=0x17c5;eip=0x008d24; 	T(bx = ax;);	// 101046                  mov     bx, ax ;~ 17C5:8D24
cs=0x17c5;eip=0x008d26; 	T(ax = word_49924;);	// 101047                  mov     ax, word_49924 ;~ 17C5:8D26
cs=0x17c5;eip=0x008d29; 	X(MOV(*(dw*)(raddr(ds,bx+0x0D28)), ax));	// 101048                  mov     [bx+0D28h], ax ;~ 17C5:8D29
loc_2ef5d:
	// 5919 
cs=0x17c5;eip=0x008d2d; 	T(CMP(word_49924, 0));	// 101052                  cmp     word_49924, 0 ;~ 17C5:8D2D
cs=0x17c5;eip=0x008d32; 	J(JL(loc_2ef91));	// 101053                  jl      short loc_2EF91 ;~ 17C5:8D32
cs=0x17c5;eip=0x008d34; 	T(ax = 0x12;);	// 101054                  mov     ax, 12h ;~ 17C5:8D34
cs=0x17c5;eip=0x008d37; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 101055                  imul    [bp+var_2] ;~ 17C5:8D37
cs=0x17c5;eip=0x008d3a; 	T(bx = ax;);	// 101056                  mov     bx, ax ;~ 17C5:8D3A
cs=0x17c5;eip=0x008d3c; 	T(CMP(*(dw*)(raddr(ds,bx+0x534)), 5));	// 101057                  cmp     word ptr [bx+534h], 5 ;~ 17C5:8D3C
cs=0x17c5;eip=0x008d41; 	J(JNZ(loc_2ef91));	// 101058                  jnz     short loc_2EF91 ;~ 17C5:8D41
cs=0x17c5;eip=0x008d43; 	T(bx = word_49924;);	// 101059                  mov     bx, word_49924 ;~ 17C5:8D43
cs=0x17c5;eip=0x008d47; 	T(cl = 4;);	// 101060                  mov     cl, 4 ;~ 17C5:8D47
cs=0x17c5;eip=0x008d49; 	T(SHL(bx, cl));	// 101061                  shl     bx, cl ;~ 17C5:8D49
cs=0x17c5;eip=0x008d4b; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 8));	// 101062                  test    byte ptr [bx-7E4Ch], 8 ;~ 17C5:8D4B
cs=0x17c5;eip=0x008d50; 	J(JZ(loc_2ef91));	// 101063                  jz      short loc_2EF91 ;~ 17C5:8D50
cs=0x17c5;eip=0x008d52; 	T(ax = 0x18;);	// 101064                  mov     ax, 18h ;~ 17C5:8D52
cs=0x17c5;eip=0x008d55; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 101065                  imul    [bp+var_8] ;~ 17C5:8D55
cs=0x17c5;eip=0x008d58; 	T(bx = ax;);	// 101066                  mov     bx, ax ;~ 17C5:8D58
cs=0x17c5;eip=0x008d5a; 	T(ax = word_49924;);	// 101067                  mov     ax, word_49924 ;~ 17C5:8D5A
cs=0x17c5;eip=0x008d5d; 	X(MOV(*(dw*)(raddr(ds,bx+0x0D28)), ax));	// 101068                  mov     [bx+0D28h], ax ;~ 17C5:8D5D
loc_2ef91:
	// 5920 
cs=0x17c5;eip=0x008d61; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 0x1D));	// 101072                  cmp     [bp+var_2], 1Dh ;~ 17C5:8D61
cs=0x17c5;eip=0x008d65; 	J(JNZ(loc_2efab));	// 101073                  jnz     short loc_2EFAB ;~ 17C5:8D65
cs=0x17c5;eip=0x008d67; 	T(ax = 0x18;);	// 101074                  mov     ax, 18h ;~ 17C5:8D67
cs=0x17c5;eip=0x008d6a; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_8))));	// 101075                  imul    [bp+var_8] ;~ 17C5:8D6A
cs=0x17c5;eip=0x008d6d; 	T(si = ax;);	// 101076                  mov     si, ax ;~ 17C5:8D6D
cs=0x17c5;eip=0x008d6f; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1E)), 0x0C000));	// 101077                  mov     word ptr [si+0D1Eh], 0C000h ;~ 17C5:8D6F
cs=0x17c5;eip=0x008d75; 	X(MOV(*(dw*)(raddr(ds,si+0x0D1A)), 1));	// 101078                  mov     word ptr [si+0D1Ah], 1 ;~ 17C5:8D75
loc_2efab:
	// 5921 
cs=0x17c5;eip=0x008d7b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_8))));	// 101081                  mov     ax, [bp+var_8] ;~ 17C5:8D7B
cs=0x17c5;eip=0x008d7e; 	X(word_50b70 = ax;);	// 101082                  mov     ds:word_50B70, ax ;~ 17C5:8D7E
cs=0x17c5;eip=0x008d81; 	T(ax = 0x1A;);	// 101083                  mov     ax, 1Ah ;~ 17C5:8D81
cs=0x17c5;eip=0x008d84; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_6))));	// 101084                  imul    [bp+var_6] ;~ 17C5:8D84
cs=0x17c5;eip=0x008d87; 	T(ADD(ax, 0x820));	// 101085                  add     ax, 820h ;~ 17C5:8D87
cs=0x17c5;eip=0x008d8a; 	X(PUSH(ax));	// 101086                  push    ax ;~ 17C5:8D8A
cs=0x17c5;eip=0x008d8b; 	T(ax = 0x66C4;);	// 101087                  mov     ax, 66C4h ;~ 17C5:8D8B
cs=0x17c5;eip=0x008d8e; 	X(PUSH(ax));	// 101088                  push    ax ;~ 17C5:8D8E
cs=0x17c5;eip=0x008d8f; 	J(CALL(sub_34c1c,0));	// 101089                  call    sub_34C1C ;~ 17C5:8D8F
cs=0x17c5;eip=0x008d92; 	T(ADD(sp, 4));	// 101090                  add     sp, 4 ;~ 17C5:8D92
cs=0x17c5;eip=0x008d95; 	T(ax = 0x5949;);	// 101091                  mov     ax, 5949h ;~ 17C5:8D95
cs=0x17c5;eip=0x008d98; 	X(PUSH(ax));	// 101092                  push    ax ;~ 17C5:8D98
cs=0x17c5;eip=0x008d99; 	T(ax = 0x66C4;);	// 101093                  mov     ax, 66C4h ;~ 17C5:8D99
cs=0x17c5;eip=0x008d9c; 	X(PUSH(ax));	// 101094                  push    ax ;~ 17C5:8D9C
cs=0x17c5;eip=0x008d9d; 	J(CALL(sub_34bdc,0));	// 101095                  call    sub_34BDC ;~ 17C5:8D9D
cs=0x17c5;eip=0x008da0; 	T(ADD(sp, 4));	// 101096                  add     sp, 4 ;~ 17C5:8DA0
cs=0x17c5;eip=0x008da3; 	T(ax = 0x66C4;);	// 101097                  mov     ax, 66C4h ;~ 17C5:8DA3
cs=0x17c5;eip=0x008da6; 	X(PUSH(ax));	// 101098                  push    ax ;~ 17C5:8DA6
cs=0x17c5;eip=0x008da7; 	J(CALL(sub_30414,0));	// 101099                  call    sub_30414 ;~ 17C5:8DA7
cs=0x17c5;eip=0x008daa; 	T(ADD(sp, 2));	// 101100                  add     sp, 2 ;~ 17C5:8DAA
cs=0x17c5;eip=0x008dad; 	T(ax = 2;);	// 101101                  mov     ax, 2 ;~ 17C5:8DAD
cs=0x17c5;eip=0x008db0; 	X(PUSH(ax));	// 101102                  push    ax ;~ 17C5:8DB0
cs=0x17c5;eip=0x008db1; 	T(ax = 0x12;);	// 101103                  mov     ax, 12h ;~ 17C5:8DB1
cs=0x17c5;eip=0x008db4; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+var_2))));	// 101104                  imul    [bp+var_2] ;~ 17C5:8DB4
cs=0x17c5;eip=0x008db7; 	T(bx = ax;);	// 101105                  mov     bx, ax ;~ 17C5:8DB7
cs=0x17c5;eip=0x008db9; 	T(CMP(*(dw*)(raddr(ds,bx+0x530)), 0));	// 101106                  cmp     word ptr [bx+530h], 0 ;~ 17C5:8DB9
cs=0x17c5;eip=0x008dbe; 	J(JZ(loc_2eff6));	// 101107                  jz      short loc_2EFF6 ;~ 17C5:8DBE
cs=0x17c5;eip=0x008dc0; 	T(ax = 0x12;);	// 101108                  mov     ax, 12h ;~ 17C5:8DC0
cs=0x17c5;eip=0x008dc3; 	J(JMP(loc_2eff9));	// 101109                  jmp     short loc_2EFF9 ;~ 17C5:8DC3
loc_2eff6:
	// 5922 
cs=0x17c5;eip=0x008dc6; 	T(ax = 0x18;);	// 101114                  mov     ax, 18h ;~ 17C5:8DC6
loc_2eff9:
	// 5923 
cs=0x17c5;eip=0x008dc9; 	X(PUSH(ax));	// 101117                  push    ax ;~ 17C5:8DC9
cs=0x17c5;eip=0x008dca; 	J(CALL(sub_33c65,0));	// 101118                  call    sub_33C65 ;~ 17C5:8DCA
cs=0x17c5;eip=0x008dcd; 	T(ADD(sp, 4));	// 101120                  add     sp, 4 ;~ 17C5:8DCD
cs=0x17c5;eip=0x008dd0; 	T(ax = 1;);	// 101121                  mov     ax, 1 ;~ 17C5:8DD0
cs=0x17c5;eip=0x008dd3; 	X(PUSH(ax));	// 101122                  push    ax ;~ 17C5:8DD3
cs=0x17c5;eip=0x008dd4; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 101123                  push    [bp+var_8] ;~ 17C5:8DD4
cs=0x17c5;eip=0x008dd7; 	J(CALL(sub_27df3,0));	// 101124                  call    sub_27DF3 ;~ 17C5:8DD7
cs=0x17c5;eip=0x008dda; 	T(ADD(sp, 4));	// 101125                  add     sp, 4 ;~ 17C5:8DDA
loc_2f00d:
	// 5924 
cs=0x17c5;eip=0x008ddd; 	T(CMP(word_522ce, 0x15));	// 101128                  cmp     ds:word_522CE, 15h ;~ 17C5:8DDD
cs=0x17c5;eip=0x008de2; 	J(JNZ(loc_2f01e));	// 101129                  jnz     short loc_2F01E ;~ 17C5:8DE2
cs=0x17c5;eip=0x008de4; 	T(ax = 0x15;);	// 101130                  mov     ax, 15h ;~ 17C5:8DE4
cs=0x17c5;eip=0x008de7; 	X(PUSH(ax));	// 101131                  push    ax ;~ 17C5:8DE7
cs=0x17c5;eip=0x008de8; 	J(CALL(sub_2f7aa,0));	// 101132                  call    sub_2F7AA ;~ 17C5:8DE8
loc_2f01b:
	// 5925 
cs=0x17c5;eip=0x008deb; 	T(ADD(sp, 2));	// 101135                  add     sp, 2 ;~ 17C5:8DEB
loc_2f01e:
	// 5926 
cs=0x17c5;eip=0x008dee; 	X(POP(si));	// 101139                  pop     si ;~ 17C5:8DEE
cs=0x17c5;eip=0x008def; 	X(POP(di));	// 101140                  pop     di ;~ 17C5:8DEF
cs=0x17c5;eip=0x008df0; 	T(sp = bp;);	// 101141                  mov     sp, bp ;~ 17C5:8DF0
cs=0x17c5;eip=0x008df2; 	X(POP(bp));	// 101142                  pop     bp ;~ 17C5:8DF2
cs=0x17c5;eip=0x008df3; 	J(RETN(0));	// 101143                  retn ;~ 17C5:8DF3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2ecf0: 	goto loc_2ecf0;
        case m2c::kloc_2ecfa: 	goto loc_2ecfa;
        case m2c::kloc_2ed04: 	goto loc_2ed04;
        case m2c::kloc_2ed52: 	goto loc_2ed52;
        case m2c::kloc_2ed5b: 	goto loc_2ed5b;
        case m2c::kloc_2ed64: 	goto loc_2ed64;
        case m2c::kloc_2ed7a: 	goto loc_2ed7a;
        case m2c::kloc_2ee18: 	goto loc_2ee18;
        case m2c::kloc_2ee22: 	goto loc_2ee22;
        case m2c::kloc_2ee37: 	goto loc_2ee37;
        case m2c::kloc_2ee49: 	goto loc_2ee49;
        case m2c::kloc_2eeb6: 	goto loc_2eeb6;
        case m2c::kloc_2eeb8: 	goto loc_2eeb8;
        case m2c::kloc_2eec6: 	goto loc_2eec6;
        case m2c::kloc_2eece: 	goto loc_2eece;
        case m2c::kloc_2eef4: 	goto loc_2eef4;
        case m2c::kloc_2ef1e: 	goto loc_2ef1e;
        case m2c::kloc_2ef38: 	goto loc_2ef38;
        case m2c::kloc_2ef5d: 	goto loc_2ef5d;
        case m2c::kloc_2ef91: 	goto loc_2ef91;
        case m2c::kloc_2efab: 	goto loc_2efab;
        case m2c::kloc_2eff6: 	goto loc_2eff6;
        case m2c::kloc_2eff9: 	goto loc_2eff9;
        case m2c::kloc_2f00d: 	goto loc_2f00d;
        case m2c::kloc_2f01b: 	goto loc_2f01b;
        case m2c::kloc_2f01e: 	goto loc_2f01e;
        case m2c::ksub_2ecd6: 	goto sub_2ecd6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2f024(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2f024:
    _begin:
#undef arg_0
#define arg_0 4
	// 101154 arg_0           = word ptr  4 ;~ 17C5:8DF4
#undef arg_2
#define arg_2 6
	// 101155 arg_2           = word ptr  6 ;~ 17C5:8DF4
#undef arg_4
#define arg_4 8
	// 101156 arg_4           = word ptr  8 ;~ 17C5:8DF4
cs=0x17c5;eip=0x008df4; 	X(PUSH(bp));	// 101158                  push    bp ;~ 17C5:8DF4
cs=0x17c5;eip=0x008df5; 	T(bp = sp;);	// 101159                  mov     bp, sp ;~ 17C5:8DF5
cs=0x17c5;eip=0x008df7; 	X(*(db*)(&word_4cdb6) = 0;);	// 101160                  mov     byte ptr ds:word_4CDB6, 0 ;~ 17C5:8DF7
cs=0x17c5;eip=0x008dfc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 101161                  mov     ax, [bp+arg_4] ;~ 17C5:8DFC
cs=0x17c5;eip=0x008dff; 	T(CWD);	// 101162                  cwd ;~ 17C5:8DFF
cs=0x17c5;eip=0x008e00; 	X(PUSH(dx));	// 101163                  push    dx ;~ 17C5:8E00
cs=0x17c5;eip=0x008e01; 	X(PUSH(ax));	// 101164                  push    ax ;~ 17C5:8E01
cs=0x17c5;eip=0x008e02; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 101165                  mov     ax, [bp+arg_2] ;~ 17C5:8E02
cs=0x17c5;eip=0x008e05; 	T(CWD);	// 101166                  cwd ;~ 17C5:8E05
cs=0x17c5;eip=0x008e06; 	T(SUB(ax, 0x8000));	// 101167                  sub     ax, 8000h ;~ 17C5:8E06
cs=0x17c5;eip=0x008e09; 	T(SBB(dx, 0));	// 101168                  sbb     dx, 0 ;~ 17C5:8E09
cs=0x17c5;eip=0x008e0c; 	T(NEG(ax));	// 101169                  neg     ax ;~ 17C5:8E0C
cs=0x17c5;eip=0x008e0e; 	T(ADC(dx, 0));	// 101170                  adc     dx, 0 ;~ 17C5:8E0E
cs=0x17c5;eip=0x008e11; 	T(NEG(dx));	// 101171                  neg     dx ;~ 17C5:8E11
cs=0x17c5;eip=0x008e13; 	T(cl = 5;);	// 101172                  mov     cl, 5 ;~ 17C5:8E13
loc_2f045:
	// 5927 
cs=0x17c5;eip=0x008e15; 	T(SHL(ax, 1));	// 101175                  shl     ax, 1 ;~ 17C5:8E15
cs=0x17c5;eip=0x008e17; 	T(RCL(dx, 1));	// 101176                  rcl     dx, 1 ;~ 17C5:8E17
cs=0x17c5;eip=0x008e19; 	T(DEC(cl));	// 101177                  dec     cl ;~ 17C5:8E19
cs=0x17c5;eip=0x008e1b; 	J(JNZ(loc_2f045));	// 101178                  jnz     short loc_2F045 ;~ 17C5:8E1B
cs=0x17c5;eip=0x008e1d; 	X(PUSH(dx));	// 101179                  push    dx ;~ 17C5:8E1D
cs=0x17c5;eip=0x008e1e; 	X(PUSH(ax));	// 101180                  push    ax ;~ 17C5:8E1E
cs=0x17c5;eip=0x008e1f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 101181                  mov     ax, [bp+arg_0] ;~ 17C5:8E1F
cs=0x17c5;eip=0x008e22; 	T(CWD);	// 101182                  cwd ;~ 17C5:8E22
cs=0x17c5;eip=0x008e23; 	T(cl = 5;);	// 101183                  mov     cl, 5 ;~ 17C5:8E23
loc_2f055:
	// 5928 
cs=0x17c5;eip=0x008e25; 	T(SHL(ax, 1));	// 101186                  shl     ax, 1 ;~ 17C5:8E25
cs=0x17c5;eip=0x008e27; 	T(RCL(dx, 1));	// 101187                  rcl     dx, 1 ;~ 17C5:8E27
cs=0x17c5;eip=0x008e29; 	T(DEC(cl));	// 101188                  dec     cl ;~ 17C5:8E29
cs=0x17c5;eip=0x008e2b; 	J(JNZ(loc_2f055));	// 101189                  jnz     short loc_2F055 ;~ 17C5:8E2B
cs=0x17c5;eip=0x008e2d; 	X(PUSH(dx));	// 101190                  push    dx ;~ 17C5:8E2D
cs=0x17c5;eip=0x008e2e; 	X(PUSH(ax));	// 101191                  push    ax ;~ 17C5:8E2E
cs=0x17c5;eip=0x008e2f; 	J(CALL(sub_294ea,0));	// 101192                  call    sub_294EA ;~ 17C5:8E2F
cs=0x17c5;eip=0x008e32; 	T(ADD(sp, 0x0C));	// 101193                  add     sp, 0Ch ;~ 17C5:8E32
cs=0x17c5;eip=0x008e35; 	X(POP(bp));	// 101194                  pop     bp ;~ 17C5:8E35
cs=0x17c5;eip=0x008e36; 	J(RETN(0));	// 101195                  retn ;~ 17C5:8E36

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2f045: 	goto loc_2f045;
        case m2c::kloc_2f055: 	goto loc_2f055;
        case m2c::ksub_2f024: 	goto sub_2f024;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_8e38_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_8e38_proc:
    _begin:
loc_2f068:
	// 5929 
cs=0x17c5;eip=0x008e38; 	X(PUSH(bp));	// 101202                  push    bp ;~ 17C5:8E38
cs=0x17c5;eip=0x008e39; 	T(bp = sp;);	// 101203                  mov     bp, sp ;~ 17C5:8E39
cs=0x17c5;eip=0x008e3b; 	T(SUB(ax, ax));	// 101204                  sub     ax, ax ;~ 17C5:8E3B
cs=0x17c5;eip=0x008e3d; 	X(PUSH(ax));	// 101205                  push    ax ;~ 17C5:8E3D
cs=0x17c5;eip=0x008e3e; 	T(ax = 0x5950;);	// 101206                  mov     ax, 5950h ;~ 17C5:8E3E
cs=0x17c5;eip=0x008e41; 	X(PUSH(ax));	// 101207                  push    ax ;~ 17C5:8E41
cs=0x17c5;eip=0x008e42; 	T(ax = 2;);	// 101208                  mov     ax, 2 ;~ 17C5:8E42
cs=0x17c5;eip=0x008e45; 	X(PUSH(ax));	// 101209                  push    ax ;~ 17C5:8E45
cs=0x17c5;eip=0x008e46; 	J(CALL(sub_301dd,0));	// 101210                  call    sub_301DD ;~ 17C5:8E46
cs=0x17c5;eip=0x008e49; 	T(ADD(sp, 6));	// 101211                  add     sp, 6 ;~ 17C5:8E49
cs=0x17c5;eip=0x008e4c; 	T(sp = bp;);	// 101212                  mov     sp, bp ;~ 17C5:8E4C
cs=0x17c5;eip=0x008e4e; 	X(POP(bp));	// 101213                  pop     bp ;~ 17C5:8E4E
cs=0x17c5;eip=0x008e4f; 	J(RETN(0));	// 101214                  retn ;~ 17C5:8E4F
loc_2f080:
	// 5930 
cs=0x17c5;eip=0x008e50; 	X(PUSH(bp));	// 101218                  push    bp ;~ 17C5:8E50
cs=0x17c5;eip=0x008e51; 	T(bp = sp;);	// 101219                  mov     bp, sp ;~ 17C5:8E51
cs=0x17c5;eip=0x008e53; 	T(SUB(sp, 0x1C));	// 101220                  sub     sp, 1Ch ;~ 17C5:8E53
cs=0x17c5;eip=0x008e56; 	X(PUSH(si));	// 101221                  push    si ;~ 17C5:8E56
cs=0x17c5;eip=0x008e57; 	J(CALLF(sub_49a7f,0));	// 101222                  call    far ptr sub_49A7F ;~ 17C5:8E57
cs=0x17c5;eip=0x008e5c; 	X(byte_527d0 = al;);	// 101224                  mov     ds:byte_527D0, al ;~ 17C5:8E5C
cs=0x17c5;eip=0x008e5f; 	T(si = word_48c62;);	// 101225                  mov     si, word_48C62 ;~ 17C5:8E5F
cs=0x17c5;eip=0x008e63; 	T(cl = 2;);	// 101226                  mov     cl, 2 ;~ 17C5:8E63
cs=0x17c5;eip=0x008e65; 	T(SHL(si, cl));	// 101227                  shl     si, cl ;~ 17C5:8E65
cs=0x17c5;eip=0x008e67; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x172))));	// 101228                  mov     ax, [si+172h] ;~ 17C5:8E67
cs=0x17c5;eip=0x008e6b; 	T(SUB(ax, word_520f0));	// 101229                  sub     ax, ds:word_520F0 ;~ 17C5:8E6B
cs=0x17c5;eip=0x008e6f; 	X(MOV(*(dw*)(raddr(ss,bp-0x16)), ax));	// 101230                  mov     [bp-16h], ax ;~ 17C5:8E6F
cs=0x17c5;eip=0x008e72; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x174))));	// 101231                  mov     ax, [si+174h] ;~ 17C5:8E72
cs=0x17c5;eip=0x008e76; 	T(SUB(ax, word_52100));	// 101232                  sub     ax, ds:word_52100 ;~ 17C5:8E76
cs=0x17c5;eip=0x008e7a; 	X(MOV(*(dw*)(raddr(ss,bp-0x1A)), ax));	// 101233                  mov     [bp-1Ah], ax ;~ 17C5:8E7A
cs=0x17c5;eip=0x008e7d; 	T(NEG(ax));	// 101234                  neg     ax ;~ 17C5:8E7D
cs=0x17c5;eip=0x008e7f; 	X(PUSH(ax));	// 101235                  push    ax ;~ 17C5:8E7F
cs=0x17c5;eip=0x008e80; 	X(PUSH(*(dw*)(raddr(ss,bp-0x16))));	// 101236                  push    word ptr [bp-16h] ;~ 17C5:8E80
cs=0x17c5;eip=0x008e83; 	J(CALL(sub_33238,0));	// 101237                  call    sub_33238 ;~ 17C5:8E83
cs=0x17c5;eip=0x008e86; 	T(ADD(sp, 4));	// 101238                  add     sp, 4 ;~ 17C5:8E86
cs=0x17c5;eip=0x008e89; 	X(word_520c2 = ax;);	// 101239                  mov     ds:word_520C2, ax ;~ 17C5:8E89
cs=0x17c5;eip=0x008e8c; 	T(CMP(word_492f2, 0));	// 101240                  cmp     word_492F2, 0 ;~ 17C5:8E8C
cs=0x17c5;eip=0x008e91; 	J(JNZ(loc_2f0c6));	// 101241                  jnz     short loc_2F0C6 ;~ 17C5:8E91
cs=0x17c5;eip=0x008e93; 	J(JMP(loc_2f5ff));	// 101242                  jmp     loc_2F5FF ;~ 17C5:8E93
loc_2f0c6:
	// 5931 
cs=0x17c5;eip=0x008e96; 	T(CMP(word_4f21a, 0));	// 101246                  cmp     ds:word_4F21A, 0 ;~ 17C5:8E96
cs=0x17c5;eip=0x008e9b; 	J(JZ(loc_2f102));	// 101247                  jz      short loc_2F102 ;~ 17C5:8E9B
cs=0x17c5;eip=0x008e9d; 	X(word_4f21a = 0;);	// 101248                  mov     ds:word_4F21A, 0 ;~ 17C5:8E9D
cs=0x17c5;eip=0x008ea3; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 101249                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:8EA3
cs=0x17c5;eip=0x008ea8; 	J(JNZ(loc_2f102));	// 101250                  jnz     short loc_2F102 ;~ 17C5:8EA8
cs=0x17c5;eip=0x008eaa; 	T(ax = 0x0D;);	// 101251                  mov     ax, 0Dh ;~ 17C5:8EAA
cs=0x17c5;eip=0x008ead; 	X(PUSH(ax));	// 101252                  push    ax ;~ 17C5:8EAD
cs=0x17c5;eip=0x008eae; 	J(CALL(sub_30074,0));	// 101253                  call    sub_30074 ;~ 17C5:8EAE
cs=0x17c5;eip=0x008eb1; 	T(ADD(sp, 2));	// 101254                  add     sp, 2 ;~ 17C5:8EB1
cs=0x17c5;eip=0x008eb4; 	T(ax = 0x60;);	// 101255                  mov     ax, 60h ; '`' ;~ 17C5:8EB4
cs=0x17c5;eip=0x008eb7; 	X(PUSH(ax));	// 101256                  push    ax ;~ 17C5:8EB7
cs=0x17c5;eip=0x008eb8; 	T(ax = 0x13F;);	// 101257                  mov     ax, 13Fh ;~ 17C5:8EB8
cs=0x17c5;eip=0x008ebb; 	X(PUSH(ax));	// 101258                  push    ax ;~ 17C5:8EBB
cs=0x17c5;eip=0x008ebc; 	T(SUB(ax, ax));	// 101259                  sub     ax, ax ;~ 17C5:8EBC
cs=0x17c5;eip=0x008ebe; 	X(PUSH(ax));	// 101260                  push    ax ;~ 17C5:8EBE
cs=0x17c5;eip=0x008ebf; 	X(PUSH(ax));	// 101261                  push    ax ;~ 17C5:8EBF
cs=0x17c5;eip=0x008ec0; 	J(CALL(sub_3008d,0));	// 101262                  call    sub_3008D ;~ 17C5:8EC0
cs=0x17c5;eip=0x008ec3; 	T(ADD(sp, 8));	// 101264                  add     sp, 8 ;~ 17C5:8EC3
cs=0x17c5;eip=0x008ec6; 	T(ax = 0x3C;);	// 101265                  mov     ax, 3Ch ; '<' ;~ 17C5:8EC6
cs=0x17c5;eip=0x008ec9; 	X(PUSH(ax));	// 101266                  push    ax ;~ 17C5:8EC9
cs=0x17c5;eip=0x008eca; 	J(CALLF(sub_49b29,0));	// 101267                  call    far ptr sub_49B29 ;~ 17C5:8ECA
cs=0x17c5;eip=0x008ecf; 	T(ADD(sp, 2));	// 101269                  add     sp, 2 ;~ 17C5:8ECF
loc_2f102:
	// 5932 
cs=0x17c5;eip=0x008ed2; 	X(byte_4de5f = 1;);	// 101273                  mov     ds:byte_4DE5F, 1 ;~ 17C5:8ED2
cs=0x17c5;eip=0x008ed7; 	T(CMP(word_520c0, 0));	// 101274                  cmp     ds:word_520C0, 0 ;~ 17C5:8ED7
cs=0x17c5;eip=0x008edc; 	J(JZ(loc_2f111));	// 101275                  jz      short loc_2F111 ;~ 17C5:8EDC
cs=0x17c5;eip=0x008ede; 	J(JMP(loc_2f5f4));	// 101276                  jmp     loc_2F5F4 ;~ 17C5:8EDE
loc_2f111:
	// 5933 
cs=0x17c5;eip=0x008ee1; 	T(CMP(byte_4de54, 0));	// 101280                  cmp     ds:byte_4DE54, 0 ;~ 17C5:8EE1
cs=0x17c5;eip=0x008ee6; 	J(JZ(loc_2f11b));	// 101281                  jz      short loc_2F11B ;~ 17C5:8EE6
cs=0x17c5;eip=0x008ee8; 	J(JMP(loc_2f5f4));	// 101282                  jmp     loc_2F5F4 ;~ 17C5:8EE8
loc_2f11b:
	// 5934 
cs=0x17c5;eip=0x008eeb; 	T(LES(bx, dword_528d6));	// 101286                  les     bx, ds:dword_528D6 ;~ 17C5:8EEB
cs=0x17c5;eip=0x008eef; 	T(CMP(*(dw*)(raddr(es,bx+0x72)), 0));	// 101287                  cmp     word ptr es:[bx+72h], 0 ;~ 17C5:8EEF
cs=0x17c5;eip=0x008ef4; 	J(JZ(loc_2f129));	// 101288                  jz      short loc_2F129 ;~ 17C5:8EF4
cs=0x17c5;eip=0x008ef6; 	J(JMP(loc_2f1fe));	// 101289                  jmp     loc_2F1FE ;~ 17C5:8EF6
loc_2f129:
	// 5935 
cs=0x17c5;eip=0x008ef9; 	T(SUB(ax, ax));	// 101293                  sub     ax, ax ;~ 17C5:8EF9
cs=0x17c5;eip=0x008efb; 	X(PUSH(ax));	// 101294                  push    ax ;~ 17C5:8EFB
cs=0x17c5;eip=0x008efc; 	J(CALL(sub_30074,0));	// 101295                  call    sub_30074 ;~ 17C5:8EFC
cs=0x17c5;eip=0x008eff; 	T(ADD(sp, 2));	// 101296                  add     sp, 2 ;~ 17C5:8EFF
cs=0x17c5;eip=0x008f02; 	T(ax = 0x53;);	// 101297                  mov     ax, 53h ; 'S' ;~ 17C5:8F02
cs=0x17c5;eip=0x008f05; 	X(PUSH(ax));	// 101298                  push    ax ;~ 17C5:8F05
cs=0x17c5;eip=0x008f06; 	T(ax = 0x125;);	// 101299                  mov     ax, 125h ;~ 17C5:8F06
cs=0x17c5;eip=0x008f09; 	X(PUSH(ax));	// 101300                  push    ax ;~ 17C5:8F09
cs=0x17c5;eip=0x008f0a; 	T(ax = 0x53;);	// 101301                  mov     ax, 53h ; 'S' ;~ 17C5:8F0A
cs=0x17c5;eip=0x008f0d; 	X(PUSH(ax));	// 101302                  push    ax ;~ 17C5:8F0D
cs=0x17c5;eip=0x008f0e; 	T(ax = 0x115;);	// 101303                  mov     ax, 115h ;~ 17C5:8F0E
cs=0x17c5;eip=0x008f11; 	X(PUSH(ax));	// 101304                  push    ax ;~ 17C5:8F11
cs=0x17c5;eip=0x008f12; 	J(CALL(sub_2fe3c,0));	// 101305                  call    sub_2FE3C ;~ 17C5:8F12
cs=0x17c5;eip=0x008f15; 	T(ADD(sp, 8));	// 101307                  add     sp, 8 ;~ 17C5:8F15
cs=0x17c5;eip=0x008f18; 	T(ax = 0x5F;);	// 101308                  mov     ax, 5Fh ; '_' ;~ 17C5:8F18
cs=0x17c5;eip=0x008f1b; 	X(PUSH(ax));	// 101309                  push    ax ;~ 17C5:8F1B
cs=0x17c5;eip=0x008f1c; 	T(ax = 0x125;);	// 101310                  mov     ax, 125h ;~ 17C5:8F1C
cs=0x17c5;eip=0x008f1f; 	X(PUSH(ax));	// 101311                  push    ax ;~ 17C5:8F1F
cs=0x17c5;eip=0x008f20; 	T(ax = 0x53;);	// 101312                  mov     ax, 53h ; 'S' ;~ 17C5:8F20
cs=0x17c5;eip=0x008f23; 	X(PUSH(ax));	// 101313                  push    ax ;~ 17C5:8F23
cs=0x17c5;eip=0x008f24; 	T(ax = 0x125;);	// 101314                  mov     ax, 125h ;~ 17C5:8F24
cs=0x17c5;eip=0x008f27; 	X(PUSH(ax));	// 101315                  push    ax ;~ 17C5:8F27
cs=0x17c5;eip=0x008f28; 	J(CALL(sub_2fe3c,0));	// 101316                  call    sub_2FE3C ;~ 17C5:8F28
cs=0x17c5;eip=0x008f2b; 	T(ADD(sp, 8));	// 101318                  add     sp, 8 ;~ 17C5:8F2B
cs=0x17c5;eip=0x008f2e; 	T(ax = 0x5F;);	// 101319                  mov     ax, 5Fh ; '_' ;~ 17C5:8F2E
cs=0x17c5;eip=0x008f31; 	X(PUSH(ax));	// 101320                  push    ax ;~ 17C5:8F31
cs=0x17c5;eip=0x008f32; 	T(ax = 0x115;);	// 101321                  mov     ax, 115h ;~ 17C5:8F32
cs=0x17c5;eip=0x008f35; 	X(PUSH(ax));	// 101322                  push    ax ;~ 17C5:8F35
cs=0x17c5;eip=0x008f36; 	T(ax = 0x5F;);	// 101323                  mov     ax, 5Fh ; '_' ;~ 17C5:8F36
cs=0x17c5;eip=0x008f39; 	X(PUSH(ax));	// 101324                  push    ax ;~ 17C5:8F39
cs=0x17c5;eip=0x008f3a; 	T(ax = 0x125;);	// 101325                  mov     ax, 125h ;~ 17C5:8F3A
cs=0x17c5;eip=0x008f3d; 	X(PUSH(ax));	// 101326                  push    ax ;~ 17C5:8F3D
cs=0x17c5;eip=0x008f3e; 	J(CALL(sub_2fe3c,0));	// 101327                  call    sub_2FE3C ;~ 17C5:8F3E
cs=0x17c5;eip=0x008f41; 	T(ADD(sp, 8));	// 101329                  add     sp, 8 ;~ 17C5:8F41
cs=0x17c5;eip=0x008f44; 	T(ax = 0x53;);	// 101330                  mov     ax, 53h ; 'S' ;~ 17C5:8F44
cs=0x17c5;eip=0x008f47; 	X(PUSH(ax));	// 101331                  push    ax ;~ 17C5:8F47
cs=0x17c5;eip=0x008f48; 	T(ax = 0x115;);	// 101332                  mov     ax, 115h ;~ 17C5:8F48
cs=0x17c5;eip=0x008f4b; 	X(PUSH(ax));	// 101333                  push    ax ;~ 17C5:8F4B
cs=0x17c5;eip=0x008f4c; 	T(ax = 0x5F;);	// 101334                  mov     ax, 5Fh ; '_' ;~ 17C5:8F4C
cs=0x17c5;eip=0x008f4f; 	X(PUSH(ax));	// 101335                  push    ax ;~ 17C5:8F4F
cs=0x17c5;eip=0x008f50; 	T(ax = 0x115;);	// 101336                  mov     ax, 115h ;~ 17C5:8F50
cs=0x17c5;eip=0x008f53; 	X(PUSH(ax));	// 101337                  push    ax ;~ 17C5:8F53
cs=0x17c5;eip=0x008f54; 	J(CALL(sub_2fe3c,0));	// 101338                  call    sub_2FE3C ;~ 17C5:8F54
cs=0x17c5;eip=0x008f57; 	T(ADD(sp, 8));	// 101340                  add     sp, 8 ;~ 17C5:8F57
cs=0x17c5;eip=0x008f5a; 	T(ax = 0x59;);	// 101341                  mov     ax, 59h ; 'Y' ;~ 17C5:8F5A
cs=0x17c5;eip=0x008f5d; 	X(PUSH(ax));	// 101342                  push    ax ;~ 17C5:8F5D
cs=0x17c5;eip=0x008f5e; 	T(ax = 0x11D;);	// 101343                  mov     ax, 11Dh ;~ 17C5:8F5E
cs=0x17c5;eip=0x008f61; 	X(PUSH(ax));	// 101344                  push    ax ;~ 17C5:8F61
cs=0x17c5;eip=0x008f62; 	T(ax = 0x59;);	// 101345                  mov     ax, 59h ; 'Y' ;~ 17C5:8F62
cs=0x17c5;eip=0x008f65; 	X(PUSH(ax));	// 101346                  push    ax ;~ 17C5:8F65
cs=0x17c5;eip=0x008f66; 	T(ax = 0x11D;);	// 101347                  mov     ax, 11Dh ;~ 17C5:8F66
cs=0x17c5;eip=0x008f69; 	X(PUSH(ax));	// 101348                  push    ax ;~ 17C5:8F69
cs=0x17c5;eip=0x008f6a; 	J(CALL(sub_2fe3c,0));	// 101349                  call    sub_2FE3C ;~ 17C5:8F6A
cs=0x17c5;eip=0x008f6d; 	T(ADD(sp, 8));	// 101351                  add     sp, 8 ;~ 17C5:8F6D
cs=0x17c5;eip=0x008f70; 	T(ax = 0x0F;);	// 101352                  mov     ax, 0Fh ;~ 17C5:8F70
cs=0x17c5;eip=0x008f73; 	X(PUSH(ax));	// 101353                  push    ax ;~ 17C5:8F73
cs=0x17c5;eip=0x008f74; 	J(CALL(sub_30074,0));	// 101354                  call    sub_30074 ;~ 17C5:8F74
cs=0x17c5;eip=0x008f77; 	T(ADD(sp, 2));	// 101355                  add     sp, 2 ;~ 17C5:8F77
cs=0x17c5;eip=0x008f7a; 	T(al = *(db*)(&word_4e1c4););	// 101356                  mov     al, byte ptr ds:word_4E1C4 ;~ 17C5:8F7A
cs=0x17c5;eip=0x008f7d; 	T(SUB(ah, ah));	// 101357                  sub     ah, ah ;~ 17C5:8F7D
cs=0x17c5;eip=0x008f7f; 	T(SUB(ax, 0x78));	// 101358                  sub     ax, 78h ; 'x' ;~ 17C5:8F7F
cs=0x17c5;eip=0x008f82; 	T(cl = 4;);	// 101359                  mov     cl, 4 ;~ 17C5:8F82
cs=0x17c5;eip=0x008f84; 	T(SAR(ax, cl));	// 101360                  sar     ax, cl ;~ 17C5:8F84
cs=0x17c5;eip=0x008f86; 	T(ADD(ax, 0x11D));	// 101361                  add     ax, 11Dh ;~ 17C5:8F86
cs=0x17c5;eip=0x008f89; 	X(MOV(*(dw*)(raddr(ss,bp-0x14)), ax));	// 101362                  mov     [bp-14h], ax ;~ 17C5:8F89
cs=0x17c5;eip=0x008f8c; 	T(al = *(db*)(((db*)&word_4e1c4)+1););	// 101363                  mov     al, byte ptr ds:word_4E1C4+1 ;~ 17C5:8F8C
cs=0x17c5;eip=0x008f8f; 	T(SUB(ah, ah));	// 101364                  sub     ah, ah ;~ 17C5:8F8F
cs=0x17c5;eip=0x008f91; 	T(cx = ax;);	// 101365                  mov     cx, ax ;~ 17C5:8F91
cs=0x17c5;eip=0x008f93; 	T(SHL(ax, 1));	// 101366                  shl     ax, 1 ;~ 17C5:8F93
cs=0x17c5;eip=0x008f95; 	T(ADD(ax, cx));	// 101367                  add     ax, cx ;~ 17C5:8F95
cs=0x17c5;eip=0x008f97; 	T(SUB(ax, 0x168));	// 101368                  sub     ax, 168h ;~ 17C5:8F97
cs=0x17c5;eip=0x008f9a; 	T(cl = 6;);	// 101369                  mov     cl, 6 ;~ 17C5:8F9A
cs=0x17c5;eip=0x008f9c; 	T(SAR(ax, cl));	// 101370                  sar     ax, cl ;~ 17C5:8F9C
cs=0x17c5;eip=0x008f9e; 	T(ADD(ax, 0x59));	// 101371                  add     ax, 59h ; 'Y' ;~ 17C5:8F9E
cs=0x17c5;eip=0x008fa1; 	X(MOV(*(dw*)(raddr(ss,bp-0x18)), ax));	// 101372                  mov     [bp-18h], ax ;~ 17C5:8FA1
cs=0x17c5;eip=0x008fa4; 	X(PUSH(ax));	// 101373                  push    ax ;~ 17C5:8FA4
cs=0x17c5;eip=0x008fa5; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x14))));	// 101374                  mov     ax, [bp-14h] ;~ 17C5:8FA5
cs=0x17c5;eip=0x008fa8; 	T(INC(ax));	// 101375                  inc     ax ;~ 17C5:8FA8
cs=0x17c5;eip=0x008fa9; 	X(PUSH(ax));	// 101376                  push    ax ;~ 17C5:8FA9
cs=0x17c5;eip=0x008faa; 	X(PUSH(*(dw*)(raddr(ss,bp-0x18))));	// 101377                  push    word ptr [bp-18h] ;~ 17C5:8FAA
cs=0x17c5;eip=0x008fad; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x14))));	// 101378                  mov     ax, [bp-14h] ;~ 17C5:8FAD
cs=0x17c5;eip=0x008fb0; 	T(DEC(ax));	// 101379                  dec     ax ;~ 17C5:8FB0
cs=0x17c5;eip=0x008fb1; 	X(PUSH(ax));	// 101380                  push    ax ;~ 17C5:8FB1
cs=0x17c5;eip=0x008fb2; 	J(CALL(sub_2fe3c,0));	// 101381                  call    sub_2FE3C ;~ 17C5:8FB2
cs=0x17c5;eip=0x008fb5; 	T(ADD(sp, 8));	// 101383                  add     sp, 8 ;~ 17C5:8FB5
cs=0x17c5;eip=0x008fb8; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x18))));	// 101384                  mov     ax, [bp-18h] ;~ 17C5:8FB8
cs=0x17c5;eip=0x008fbb; 	T(DEC(ax));	// 101385                  dec     ax ;~ 17C5:8FBB
cs=0x17c5;eip=0x008fbc; 	X(PUSH(ax));	// 101386                  push    ax ;~ 17C5:8FBC
cs=0x17c5;eip=0x008fbd; 	X(PUSH(*(dw*)(raddr(ss,bp-0x14))));	// 101387                  push    word ptr [bp-14h] ;~ 17C5:8FBD
cs=0x17c5;eip=0x008fc0; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x18))));	// 101388                  mov     ax, [bp-18h] ;~ 17C5:8FC0
cs=0x17c5;eip=0x008fc3; 	T(INC(ax));	// 101389                  inc     ax ;~ 17C5:8FC3
cs=0x17c5;eip=0x008fc4; 	X(PUSH(ax));	// 101390                  push    ax ;~ 17C5:8FC4
cs=0x17c5;eip=0x008fc5; 	X(PUSH(*(dw*)(raddr(ss,bp-0x14))));	// 101391                  push    word ptr [bp-14h] ;~ 17C5:8FC5
cs=0x17c5;eip=0x008fc8; 	J(CALL(sub_2fe3c,0));	// 101392                  call    sub_2FE3C ;~ 17C5:8FC8
cs=0x17c5;eip=0x008fcb; 	T(ADD(sp, 8));	// 101394                  add     sp, 8 ;~ 17C5:8FCB
loc_2f1fe:
	// 5936 
cs=0x17c5;eip=0x008fce; 	T(TEST(word_4f42e, 0x200));	// 101397                  test    ds:word_4F42E, 200h ;~ 17C5:8FCE
cs=0x17c5;eip=0x008fd4; 	J(JZ(loc_2f23c));	// 101398                  jz      short loc_2F23C ;~ 17C5:8FD4
cs=0x17c5;eip=0x008fd6; 	T(ax = 0x0F;);	// 101399                  mov     ax, 0Fh ;~ 17C5:8FD6
cs=0x17c5;eip=0x008fd9; 	X(PUSH(ax));	// 101400                  push    ax ;~ 17C5:8FD9
cs=0x17c5;eip=0x008fda; 	J(CALL(sub_30074,0));	// 101401                  call    sub_30074 ;~ 17C5:8FDA
cs=0x17c5;eip=0x008fdd; 	T(ADD(sp, 2));	// 101402                  add     sp, 2 ;~ 17C5:8FDD
cs=0x17c5;eip=0x008fe0; 	T(ax = 0x59;);	// 101403                  mov     ax, 59h ; 'Y' ;~ 17C5:8FE0
cs=0x17c5;eip=0x008fe3; 	X(PUSH(ax));	// 101404                  push    ax ;~ 17C5:8FE3
cs=0x17c5;eip=0x008fe4; 	T(ax = 0x0A4;);	// 101405                  mov     ax, 0A4h ;~ 17C5:8FE4
cs=0x17c5;eip=0x008fe7; 	X(PUSH(ax));	// 101406                  push    ax ;~ 17C5:8FE7
cs=0x17c5;eip=0x008fe8; 	T(ax = 0x59;);	// 101407                  mov     ax, 59h ; 'Y' ;~ 17C5:8FE8
cs=0x17c5;eip=0x008feb; 	X(PUSH(ax));	// 101408                  push    ax ;~ 17C5:8FEB
cs=0x17c5;eip=0x008fec; 	T(ax = 0x9C;);	// 101409                  mov     ax, 9Ch ;~ 17C5:8FEC
cs=0x17c5;eip=0x008fef; 	X(PUSH(ax));	// 101410                  push    ax ;~ 17C5:8FEF
cs=0x17c5;eip=0x008ff0; 	J(CALL(sub_2fe3c,0));	// 101411                  call    sub_2FE3C ;~ 17C5:8FF0
cs=0x17c5;eip=0x008ff3; 	T(ADD(sp, 8));	// 101413                  add     sp, 8 ;~ 17C5:8FF3
cs=0x17c5;eip=0x008ff6; 	T(ax = 0x5C;);	// 101414                  mov     ax, 5Ch ; '\' ;~ 17C5:8FF6
cs=0x17c5;eip=0x008ff9; 	X(PUSH(ax));	// 101415                  push    ax ;~ 17C5:8FF9
cs=0x17c5;eip=0x008ffa; 	T(ax = 0x0A0;);	// 101416                  mov     ax, 0A0h ;~ 17C5:8FFA
cs=0x17c5;eip=0x008ffd; 	X(PUSH(ax));	// 101417                  push    ax ;~ 17C5:8FFD
cs=0x17c5;eip=0x008ffe; 	T(ax = 0x56;);	// 101418                  mov     ax, 56h ; 'V' ;~ 17C5:8FFE
cs=0x17c5;eip=0x009001; 	X(PUSH(ax));	// 101419                  push    ax ;~ 17C5:9001
cs=0x17c5;eip=0x009002; 	T(ax = 0x0A0;);	// 101420                  mov     ax, 0A0h ;~ 17C5:9002
cs=0x17c5;eip=0x009005; 	X(PUSH(ax));	// 101421                  push    ax ;~ 17C5:9005
cs=0x17c5;eip=0x009006; 	J(CALL(sub_2fe3c,0));	// 101422                  call    sub_2FE3C ;~ 17C5:9006
cs=0x17c5;eip=0x009009; 	T(ADD(sp, 8));	// 101424                  add     sp, 8 ;~ 17C5:9009
loc_2f23c:
	// 5937 
cs=0x17c5;eip=0x00900c; 	T(CMP(word_492ec, 0));	// 101427                  cmp     word_492EC, 0 ;~ 17C5:900C
cs=0x17c5;eip=0x009011; 	J(JZ(loc_2f248));	// 101428                  jz      short loc_2F248 ;~ 17C5:9011
cs=0x17c5;eip=0x009013; 	T(ax = 4;);	// 101429                  mov     ax, 4 ;~ 17C5:9013
cs=0x17c5;eip=0x009016; 	J(JMP(loc_2f24a));	// 101430                  jmp     short loc_2F24A ;~ 17C5:9016
loc_2f248:
	// 5938 
cs=0x17c5;eip=0x009018; 	T(SUB(ax, ax));	// 101434                  sub     ax, ax ;~ 17C5:9018
loc_2f24a:
	// 5939 
cs=0x17c5;eip=0x00901a; 	X(PUSH(ax));	// 101437                  push    ax ;~ 17C5:901A
cs=0x17c5;eip=0x00901b; 	J(CALL(sub_30074,0));	// 101438                  call    sub_30074 ;~ 17C5:901B
cs=0x17c5;eip=0x00901e; 	T(ADD(sp, 2));	// 101439                  add     sp, 2 ;~ 17C5:901E
cs=0x17c5;eip=0x009021; 	T(ax = 0x3D;);	// 101440                  mov     ax, 3Dh ; '=' ;~ 17C5:9021
cs=0x17c5;eip=0x009024; 	X(PUSH(ax));	// 101441                  push    ax ;~ 17C5:9024
cs=0x17c5;eip=0x009025; 	T(SUB(ax, ax));	// 101442                  sub     ax, ax ;~ 17C5:9025
cs=0x17c5;eip=0x009027; 	X(PUSH(ax));	// 101443                  push    ax ;~ 17C5:9027
cs=0x17c5;eip=0x009028; 	T(ax = word_527d6;);	// 101444                  mov     ax, ds:word_527D6 ;~ 17C5:9028
cs=0x17c5;eip=0x00902b; 	T(SUB(ax, word_50c8a));	// 101445                  sub     ax, ds:word_50C8A ;~ 17C5:902B
cs=0x17c5;eip=0x00902f; 	T(SHL(ax, 1));	// 101446                  shl     ax, 1 ;~ 17C5:902F
cs=0x17c5;eip=0x009031; 	T(CWD);	// 101447                  cwd ;~ 17C5:9031
cs=0x17c5;eip=0x009032; 	T(cx = 5;);	// 101448                  mov     cx, 5 ;~ 17C5:9032
cs=0x17c5;eip=0x009035; 	T(IDIV2(cx));	// 101449                  idiv    cx ;~ 17C5:9035
cs=0x17c5;eip=0x009037; 	T(ADD(ax, 0x1D));	// 101450                  add     ax, 1Dh ;~ 17C5:9037
cs=0x17c5;eip=0x00903a; 	X(PUSH(ax));	// 101451                  push    ax ;~ 17C5:903A
cs=0x17c5;eip=0x00903b; 	J(CALL(sub_33194,0));	// 101452                  call    sub_33194 ;~ 17C5:903B
cs=0x17c5;eip=0x00903e; 	T(ADD(sp, 6));	// 101453                  add     sp, 6 ;~ 17C5:903E
cs=0x17c5;eip=0x009041; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), ax));	// 101454                  mov     [bp-10h], ax ;~ 17C5:9041
cs=0x17c5;eip=0x009044; 	T(OR(ax, ax));	// 101455                  or      ax, ax ;~ 17C5:9044
cs=0x17c5;eip=0x009046; 	J(JZ(loc_2f291));	// 101456                  jz      short loc_2F291 ;~ 17C5:9046
cs=0x17c5;eip=0x009048; 	T(ax = 0x55;);	// 101457                  mov     ax, 55h ; 'U' ;~ 17C5:9048
cs=0x17c5;eip=0x00904b; 	X(PUSH(ax));	// 101458                  push    ax ;~ 17C5:904B
cs=0x17c5;eip=0x00904c; 	T(ax = 0x48;);	// 101459                  mov     ax, 48h ; 'H' ;~ 17C5:904C
cs=0x17c5;eip=0x00904f; 	X(PUSH(ax));	// 101460                  push    ax ;~ 17C5:904F
cs=0x17c5;eip=0x009050; 	T(ax = 0x55;);	// 101461                  mov     ax, 55h ; 'U' ;~ 17C5:9050
cs=0x17c5;eip=0x009053; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x10))));	// 101462                  sub     ax, [bp-10h] ;~ 17C5:9053
cs=0x17c5;eip=0x009056; 	X(PUSH(ax));	// 101463                  push    ax ;~ 17C5:9056
cs=0x17c5;eip=0x009057; 	T(ax = 0x48;);	// 101464                  mov     ax, 48h ; 'H' ;~ 17C5:9057
cs=0x17c5;eip=0x00905a; 	X(PUSH(ax));	// 101465                  push    ax ;~ 17C5:905A
cs=0x17c5;eip=0x00905b; 	J(CALL(sub_2fe3c,0));	// 101466                  call    sub_2FE3C ;~ 17C5:905B
cs=0x17c5;eip=0x00905e; 	T(ADD(sp, 8));	// 101468                  add     sp, 8 ;~ 17C5:905E
loc_2f291:
	// 5940 
cs=0x17c5;eip=0x009061; 	T(ax = 0x55;);	// 101471                  mov     ax, 55h ; 'U' ;~ 17C5:9061
cs=0x17c5;eip=0x009064; 	X(PUSH(ax));	// 101472                  push    ax ;~ 17C5:9064
cs=0x17c5;eip=0x009065; 	T(ax = 0x14;);	// 101473                  mov     ax, 14h ;~ 17C5:9065
cs=0x17c5;eip=0x009068; 	X(PUSH(ax));	// 101474                  push    ax ;~ 17C5:9068
cs=0x17c5;eip=0x009069; 	T(ax = word_52ae6;);	// 101475                  mov     ax, ds:word_52AE6 ;~ 17C5:9069
cs=0x17c5;eip=0x00906c; 	T(cl = 4;);	// 101476                  mov     cl, 4 ;~ 17C5:906C
cs=0x17c5;eip=0x00906e; 	T(SAR(ax, cl));	// 101477                  sar     ax, cl ;~ 17C5:906E
cs=0x17c5;eip=0x009070; 	T(SUB(ax, 0x38));	// 101478                  sub     ax, 38h ; '8' ;~ 17C5:9070
cs=0x17c5;eip=0x009073; 	T(NEG(ax));	// 101479                  neg     ax ;~ 17C5:9073
cs=0x17c5;eip=0x009075; 	X(PUSH(ax));	// 101480                  push    ax ;~ 17C5:9075
cs=0x17c5;eip=0x009076; 	J(CALL(sub_33194,0));	// 101481                  call    sub_33194 ;~ 17C5:9076
cs=0x17c5;eip=0x009079; 	T(ADD(sp, 6));	// 101482                  add     sp, 6 ;~ 17C5:9079
cs=0x17c5;eip=0x00907c; 	X(PUSH(ax));	// 101483                  push    ax ;~ 17C5:907C
cs=0x17c5;eip=0x00907d; 	T(ax = 0x0F7;);	// 101484                  mov     ax, 0F7h ;~ 17C5:907D
cs=0x17c5;eip=0x009080; 	X(PUSH(ax));	// 101485                  push    ax ;~ 17C5:9080
cs=0x17c5;eip=0x009081; 	T(ax = 0x38;);	// 101486                  mov     ax, 38h ; '8' ;~ 17C5:9081
cs=0x17c5;eip=0x009084; 	X(PUSH(ax));	// 101487                  push    ax ;~ 17C5:9084
cs=0x17c5;eip=0x009085; 	T(ax = 0x0F7;);	// 101488                  mov     ax, 0F7h ;~ 17C5:9085
cs=0x17c5;eip=0x009088; 	X(PUSH(ax));	// 101489                  push    ax ;~ 17C5:9088
cs=0x17c5;eip=0x009089; 	J(CALL(sub_2fe3c,0));	// 101490                  call    sub_2FE3C ;~ 17C5:9089
cs=0x17c5;eip=0x00908c; 	T(ADD(sp, 8));	// 101492                  add     sp, 8 ;~ 17C5:908C
cs=0x17c5;eip=0x00908f; 	T(TEST(*(db*)(&word_4f42e), 1));	// 101493                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:908F
cs=0x17c5;eip=0x009094; 	J(JNZ(loc_2f345));	// 101494                  jnz     short loc_2F345 ;~ 17C5:9094
cs=0x17c5;eip=0x009096; 	T(TEST(*(db*)(&word_49918), 1));	// 101495                  test    byte ptr word_49918, 1 ;~ 17C5:9096
cs=0x17c5;eip=0x00909b; 	J(JZ(loc_2f345));	// 101496                  jz      short loc_2F345 ;~ 17C5:909B
cs=0x17c5;eip=0x00909d; 	T(LES(bx, dword_4f220));	// 101497                  les     bx, ds:dword_4F220 ;~ 17C5:909D
cs=0x17c5;eip=0x0090a1; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 0));	// 101498                  cmp     word ptr es:[bx+40h], 0 ;~ 17C5:90A1
cs=0x17c5;eip=0x0090a6; 	J(JZ(loc_2f345));	// 101499                  jz      short loc_2F345 ;~ 17C5:90A6
cs=0x17c5;eip=0x0090a8; 	T(CMP(word_52ae6, 0));	// 101500                  cmp     ds:word_52AE6, 0 ;~ 17C5:90A8
cs=0x17c5;eip=0x0090ad; 	J(JGE(loc_2f345));	// 101501                  jge     short loc_2F345 ;~ 17C5:90AD
cs=0x17c5;eip=0x0090af; 	T(bx = word_5239a;);	// 101502                  mov     bx, ds:word_5239A ;~ 17C5:90AF
cs=0x17c5;eip=0x0090b3; 	T(cl = 4;);	// 101503                  mov     cl, 4 ;~ 17C5:90B3
cs=0x17c5;eip=0x0090b5; 	T(SHL(bx, cl));	// 101504                  shl     bx, cl ;~ 17C5:90B5
cs=0x17c5;eip=0x0090b7; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x200));	// 101505                  test    word ptr [bx-7E4Ch], 200h ;~ 17C5:90B7
cs=0x17c5;eip=0x0090bd; 	J(JZ(loc_2f2f4));	// 101506                  jz      short loc_2F2F4 ;~ 17C5:90BD
cs=0x17c5;eip=0x0090bf; 	T(ax = 0x100;);	// 101507                  mov     ax, 100h ;~ 17C5:90BF
cs=0x17c5;eip=0x0090c2; 	J(JMP(loc_2f2f7));	// 101508                  jmp     short loc_2F2F7 ;~ 17C5:90C2
loc_2f2f4:
	// 5941 
cs=0x17c5;eip=0x0090c4; 	T(ax = 0x80;);	// 101512                  mov     ax, 80h ;~ 17C5:90C4
loc_2f2f7:
	// 5942 
cs=0x17c5;eip=0x0090c7; 	T(SUB(dx, dx));	// 101515                  sub     dx, dx ;~ 17C5:90C7
cs=0x17c5;eip=0x0090c9; 	T(bx = *(dw*)(&dword_4f220););	// 101516                  mov     bx, word ptr ds:dword_4F220 ;~ 17C5:90C9
cs=0x17c5;eip=0x0090cd; 	X(DIV2(*(dw*)(raddr(es,bx+0x40))));	// 101517                  div     word ptr es:[bx+40h] ;~ 17C5:90CD
cs=0x17c5;eip=0x0090d1; 	T(cl = 4;);	// 101518                  mov     cl, 4 ;~ 17C5:90D1
cs=0x17c5;eip=0x0090d3; 	T(SHR(ax, cl));	// 101519                  shr     ax, cl ;~ 17C5:90D3
cs=0x17c5;eip=0x0090d5; 	T(ADD(ax, 0x38));	// 101520                  add     ax, 38h ; '8' ;~ 17C5:90D5
cs=0x17c5;eip=0x0090d8; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 101521                  mov     [bp-2], ax ;~ 17C5:90D8
cs=0x17c5;eip=0x0090db; 	T(ax = 0x0F;);	// 101522                  mov     ax, 0Fh ;~ 17C5:90DB
cs=0x17c5;eip=0x0090de; 	X(PUSH(ax));	// 101523                  push    ax ;~ 17C5:90DE
cs=0x17c5;eip=0x0090df; 	J(CALL(sub_30074,0));	// 101524                  call    sub_30074 ;~ 17C5:90DF
cs=0x17c5;eip=0x0090e2; 	T(ADD(sp, 2));	// 101525                  add     sp, 2 ;~ 17C5:90E2
cs=0x17c5;eip=0x0090e5; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 101526                  push    word ptr [bp-2] ;~ 17C5:90E5
cs=0x17c5;eip=0x0090e8; 	T(ax = 0x0F4;);	// 101527                  mov     ax, 0F4h ;~ 17C5:90E8
cs=0x17c5;eip=0x0090eb; 	X(PUSH(ax));	// 101528                  push    ax ;~ 17C5:90EB
cs=0x17c5;eip=0x0090ec; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 101529                  mov     ax, [bp-2] ;~ 17C5:90EC
cs=0x17c5;eip=0x0090ef; 	T(SUB(ax, 2));	// 101530                  sub     ax, 2 ;~ 17C5:90EF
cs=0x17c5;eip=0x0090f2; 	X(PUSH(ax));	// 101531                  push    ax ;~ 17C5:90F2
cs=0x17c5;eip=0x0090f3; 	T(ax = 0x0F2;);	// 101532                  mov     ax, 0F2h ;~ 17C5:90F3
cs=0x17c5;eip=0x0090f6; 	X(PUSH(ax));	// 101533                  push    ax ;~ 17C5:90F6
cs=0x17c5;eip=0x0090f7; 	J(CALL(sub_2fe3c,0));	// 101534                  call    sub_2FE3C ;~ 17C5:90F7
cs=0x17c5;eip=0x0090fa; 	T(ADD(sp, 8));	// 101536                  add     sp, 8 ;~ 17C5:90FA
cs=0x17c5;eip=0x0090fd; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 101537                  push    word ptr [bp-2] ;~ 17C5:90FD
cs=0x17c5;eip=0x009100; 	T(ax = 0x0F4;);	// 101538                  mov     ax, 0F4h ;~ 17C5:9100
cs=0x17c5;eip=0x009103; 	X(PUSH(ax));	// 101539                  push    ax ;~ 17C5:9103
cs=0x17c5;eip=0x009104; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 101540                  mov     ax, [bp-2] ;~ 17C5:9104
cs=0x17c5;eip=0x009107; 	T(ADD(ax, 2));	// 101541                  add     ax, 2 ;~ 17C5:9107
cs=0x17c5;eip=0x00910a; 	X(PUSH(ax));	// 101542                  push    ax ;~ 17C5:910A
cs=0x17c5;eip=0x00910b; 	T(ax = 0x0F2;);	// 101543                  mov     ax, 0F2h ;~ 17C5:910B
cs=0x17c5;eip=0x00910e; 	X(PUSH(ax));	// 101544                  push    ax ;~ 17C5:910E
cs=0x17c5;eip=0x00910f; 	J(CALL(sub_2fe3c,0));	// 101545                  call    sub_2FE3C ;~ 17C5:910F
cs=0x17c5;eip=0x009112; 	T(ADD(sp, 8));	// 101547                  add     sp, 8 ;~ 17C5:9112
loc_2f345:
	// 5943 
cs=0x17c5;eip=0x009115; 	T(ax = word_527d6;);	// 101551                  mov     ax, ds:word_527D6 ;~ 17C5:9115
cs=0x17c5;eip=0x009118; 	T(CMP(word_50c8a, ax));	// 101552                  cmp     ds:word_50C8A, ax ;~ 17C5:9118
cs=0x17c5;eip=0x00911c; 	J(JGE(loc_2f374));	// 101553                  jge     short loc_2F374 ;~ 17C5:911C
cs=0x17c5;eip=0x00911e; 	T(ax = word_4e2fe;);	// 101554                  mov     ax, ds:word_4E2FE ;~ 17C5:911E
cs=0x17c5;eip=0x009121; 	T(CMP(word_520ee, ax));	// 101555                  cmp     ds:word_520EE, ax ;~ 17C5:9121
cs=0x17c5;eip=0x009125; 	J(JZ(loc_2f374));	// 101556                  jz      short loc_2F374 ;~ 17C5:9125
cs=0x17c5;eip=0x009127; 	T(TEST(*(db*)(&word_49918), 1));	// 101557                  test    byte ptr word_49918, 1 ;~ 17C5:9127
cs=0x17c5;eip=0x00912c; 	J(JZ(loc_2f374));	// 101558                  jz      short loc_2F374 ;~ 17C5:912C
cs=0x17c5;eip=0x00912e; 	T(ax = 0x0F;);	// 101559                  mov     ax, 0Fh ;~ 17C5:912E
cs=0x17c5;eip=0x009131; 	X(PUSH(ax));	// 101560                  push    ax ;~ 17C5:9131
cs=0x17c5;eip=0x009132; 	T(ax = 0x1E;);	// 101561                  mov     ax, 1Eh ;~ 17C5:9132
cs=0x17c5;eip=0x009135; 	X(PUSH(ax));	// 101562                  push    ax ;~ 17C5:9135
cs=0x17c5;eip=0x009136; 	T(ax = 0x84;);	// 101563                  mov     ax, 84h ;~ 17C5:9136
cs=0x17c5;eip=0x009139; 	X(PUSH(ax));	// 101564                  push    ax ;~ 17C5:9139
cs=0x17c5;eip=0x00913a; 	T(ax = 0x5B46;);	// 101565                  mov     ax, 5B46h ;~ 17C5:913A
cs=0x17c5;eip=0x00913d; 	X(PUSH(ax));	// 101566                  push    ax ;~ 17C5:913D
cs=0x17c5;eip=0x00913e; 	J(CALL(sub_3032e,0));	// 101567                  call    sub_3032E ;~ 17C5:913E
cs=0x17c5;eip=0x009141; 	T(ADD(sp, 8));	// 101569                  add     sp, 8 ;~ 17C5:9141
loc_2f374:
	// 5944 
cs=0x17c5;eip=0x009144; 	T(CMP(word_5268c, 0));	// 101573                  cmp     ds:word_5268C, 0 ;~ 17C5:9144
cs=0x17c5;eip=0x009149; 	J(JZ(loc_2f382));	// 101574                  jz      short loc_2F382 ;~ 17C5:9149
cs=0x17c5;eip=0x00914b; 	T(CMP(word_5268c, 2));	// 101575                  cmp     ds:word_5268C, 2 ;~ 17C5:914B
cs=0x17c5;eip=0x009150; 	J(JNZ(loc_2f3c8));	// 101576                  jnz     short loc_2F3C8 ;~ 17C5:9150
loc_2f382:
	// 5945 
cs=0x17c5;eip=0x009152; 	T(ax = 7;);	// 101579                  mov     ax, 7 ;~ 17C5:9152
cs=0x17c5;eip=0x009155; 	X(PUSH(ax));	// 101580                  push    ax ;~ 17C5:9155
cs=0x17c5;eip=0x009156; 	J(CALL(sub_30074,0));	// 101581                  call    sub_30074 ;~ 17C5:9156
cs=0x17c5;eip=0x009159; 	T(ADD(sp, 2));	// 101582                  add     sp, 2 ;~ 17C5:9159
cs=0x17c5;eip=0x00915c; 	T(ax = word_4f1f4;);	// 101583                  mov     ax, ds:word_4F1F4 ;~ 17C5:915C
cs=0x17c5;eip=0x00915f; 	T(cl = 6;);	// 101584                  mov     cl, 6 ;~ 17C5:915F
cs=0x17c5;eip=0x009161; 	T(SAR(ax, cl));	// 101585                  sar     ax, cl ;~ 17C5:9161
cs=0x17c5;eip=0x009163; 	T(ADD(ax, 0x38));	// 101586                  add     ax, 38h ; '8' ;~ 17C5:9163
cs=0x17c5;eip=0x009166; 	X(word_52238 = ax;);	// 101587                  mov     ds:word_52238, ax ;~ 17C5:9166
cs=0x17c5;eip=0x009169; 	T(CMP(ax, 0x0A));	// 101588                  cmp     ax, 0Ah ;~ 17C5:9169
cs=0x17c5;eip=0x00916c; 	J(JLE(loc_2f3c8));	// 101589                  jle     short loc_2F3C8 ;~ 17C5:916C
cs=0x17c5;eip=0x00916e; 	T(CMP(ax, 0x6F));	// 101590                  cmp     ax, 6Fh ; 'o' ;~ 17C5:916E
cs=0x17c5;eip=0x009171; 	J(JGE(loc_2f3c8));	// 101591                  jge     short loc_2F3C8 ;~ 17C5:9171
cs=0x17c5;eip=0x009173; 	T(ax = 0x0F;);	// 101592                  mov     ax, 0Fh ;~ 17C5:9173
cs=0x17c5;eip=0x009176; 	X(PUSH(ax));	// 101593                  push    ax ;~ 17C5:9176
cs=0x17c5;eip=0x009177; 	T(ax = 7;);	// 101594                  mov     ax, 7 ;~ 17C5:9177
cs=0x17c5;eip=0x00917a; 	X(PUSH(ax));	// 101595                  push    ax ;~ 17C5:917A
cs=0x17c5;eip=0x00917b; 	T(ax = 0x0B;);	// 101596                  mov     ax, 0Bh ;~ 17C5:917B
cs=0x17c5;eip=0x00917e; 	X(PUSH(ax));	// 101597                  push    ax ;~ 17C5:917E
cs=0x17c5;eip=0x00917f; 	T(ax = 0x15;);	// 101598                  mov     ax, 15h ;~ 17C5:917F
cs=0x17c5;eip=0x009182; 	X(PUSH(ax));	// 101599                  push    ax ;~ 17C5:9182
cs=0x17c5;eip=0x009183; 	T(ax = 0x94;);	// 101600                  mov     ax, 94h ;~ 17C5:9183
cs=0x17c5;eip=0x009186; 	X(PUSH(ax));	// 101601                  push    ax ;~ 17C5:9186
cs=0x17c5;eip=0x009187; 	T(ax = word_52238;);	// 101602                  mov     ax, ds:word_52238 ;~ 17C5:9187
cs=0x17c5;eip=0x00918a; 	T(SUB(ax, 4));	// 101603                  sub     ax, 4 ;~ 17C5:918A
cs=0x17c5;eip=0x00918d; 	X(PUSH(ax));	// 101604                  push    ax ;~ 17C5:918D
cs=0x17c5;eip=0x00918e; 	T(ax = 0x9A;);	// 101605                  mov     ax, 9Ah ;~ 17C5:918E
cs=0x17c5;eip=0x009191; 	X(PUSH(ax));	// 101606                  push    ax ;~ 17C5:9191
cs=0x17c5;eip=0x009192; 	J(CALL(sub_30af8,0));	// 101607                  call    sub_30AF8 ;~ 17C5:9192
cs=0x17c5;eip=0x009195; 	T(ADD(sp, 0x0E));	// 101609                  add     sp, 0Eh ;~ 17C5:9195
loc_2f3c8:
	// 5946 
cs=0x17c5;eip=0x009198; 	T(CMP(word_5268c, 1));	// 101613                  cmp     ds:word_5268C, 1 ;~ 17C5:9198
cs=0x17c5;eip=0x00919d; 	J(JZ(loc_2f3d2));	// 101614                  jz      short loc_2F3D2 ;~ 17C5:919D
cs=0x17c5;eip=0x00919f; 	J(JMP(loc_2f4cf));	// 101615                  jmp     loc_2F4CF ;~ 17C5:919F
loc_2f3d2:
	// 5947 
cs=0x17c5;eip=0x0091a2; 	T(al = byte_4de54;);	// 101619                  mov     al, ds:byte_4DE54 ;~ 17C5:91A2
cs=0x17c5;eip=0x0091a5; 	T(ADD(al, 4));	// 101620                  add     al, 4 ;~ 17C5:91A5
cs=0x17c5;eip=0x0091a7; 	X(MOV(*(raddr(ss,bp-0x1C)), al));	// 101621                  mov     [bp-1Ch], al ;~ 17C5:91A7
cs=0x17c5;eip=0x0091aa; 	T(ax = word_528d4;);	// 101622                  mov     ax, ds:word_528D4 ;~ 17C5:91AA
cs=0x17c5;eip=0x0091ad; 	T(MOV(cl, *(raddr(ss,bp-0x1C))));	// 101623                  mov     cl, [bp-1Ch] ;~ 17C5:91AD
cs=0x17c5;eip=0x0091b0; 	T(SAR(ax, cl));	// 101624                  sar     ax, cl ;~ 17C5:91B0
cs=0x17c5;eip=0x0091b2; 	T(ADD(ax, 0x9F));	// 101625                  add     ax, 9Fh ;~ 17C5:91B2
cs=0x17c5;eip=0x0091b5; 	X(MOV(*(dw*)(raddr(ss,bp-0x14)), ax));	// 101626                  mov     [bp-14h], ax ;~ 17C5:91B5
cs=0x17c5;eip=0x0091b8; 	T(ax = word_528dc;);	// 101627                  mov     ax, ds:word_528DC ;~ 17C5:91B8
cs=0x17c5;eip=0x0091bb; 	T(SAR(ax, cl));	// 101628                  sar     ax, cl ;~ 17C5:91BB
cs=0x17c5;eip=0x0091bd; 	T(ADD(ax, 0x38));	// 101629                  add     ax, 38h ; '8' ;~ 17C5:91BD
cs=0x17c5;eip=0x0091c0; 	X(MOV(*(dw*)(raddr(ss,bp-0x18)), ax));	// 101630                  mov     [bp-18h], ax ;~ 17C5:91C0
cs=0x17c5;eip=0x0091c3; 	T(CMP(*(dw*)(raddr(ss,bp-0x14)), 0x0A));	// 101631                  cmp     word ptr [bp-14h], 0Ah ;~ 17C5:91C3
cs=0x17c5;eip=0x0091c7; 	J(JLE(loc_2f432));	// 101632                  jle     short loc_2F432 ;~ 17C5:91C7
cs=0x17c5;eip=0x0091c9; 	T(CMP(*(dw*)(raddr(ss,bp-0x14)), 0x135));	// 101633                  cmp     word ptr [bp-14h], 135h ;~ 17C5:91C9
cs=0x17c5;eip=0x0091ce; 	J(JGE(loc_2f432));	// 101634                  jge     short loc_2F432 ;~ 17C5:91CE
cs=0x17c5;eip=0x0091d0; 	T(CMP(ax, 8));	// 101635                  cmp     ax, 8 ;~ 17C5:91D0
cs=0x17c5;eip=0x0091d3; 	J(JLE(loc_2f432));	// 101636                  jle     short loc_2F432 ;~ 17C5:91D3
cs=0x17c5;eip=0x0091d5; 	T(CMP(ax, 0x5B));	// 101637                  cmp     ax, 5Bh ; '[' ;~ 17C5:91D5
cs=0x17c5;eip=0x0091d8; 	J(JGE(loc_2f432));	// 101638                  jge     short loc_2F432 ;~ 17C5:91D8
cs=0x17c5;eip=0x0091da; 	T(ax = 0x0E;);	// 101639                  mov     ax, 0Eh ;~ 17C5:91DA
cs=0x17c5;eip=0x0091dd; 	X(PUSH(ax));	// 101640                  push    ax ;~ 17C5:91DD
cs=0x17c5;eip=0x0091de; 	T(ax = 0x0B;);	// 101641                  mov     ax, 0Bh ;~ 17C5:91DE
cs=0x17c5;eip=0x0091e1; 	X(PUSH(ax));	// 101642                  push    ax ;~ 17C5:91E1
cs=0x17c5;eip=0x0091e2; 	T(ax = 0x0D;);	// 101643                  mov     ax, 0Dh ;~ 17C5:91E2
cs=0x17c5;eip=0x0091e5; 	X(PUSH(ax));	// 101644                  push    ax ;~ 17C5:91E5
cs=0x17c5;eip=0x0091e6; 	T(ax = 4;);	// 101645                  mov     ax, 4 ;~ 17C5:91E6
cs=0x17c5;eip=0x0091e9; 	X(PUSH(ax));	// 101646                  push    ax ;~ 17C5:91E9
cs=0x17c5;eip=0x0091ea; 	T(ax = 0x91;);	// 101647                  mov     ax, 91h ;~ 17C5:91EA
cs=0x17c5;eip=0x0091ed; 	X(PUSH(ax));	// 101648                  push    ax ;~ 17C5:91ED
cs=0x17c5;eip=0x0091ee; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x18))));	// 101649                  mov     ax, [bp-18h] ;~ 17C5:91EE
cs=0x17c5;eip=0x0091f1; 	T(SUB(ax, 5));	// 101650                  sub     ax, 5 ;~ 17C5:91F1
cs=0x17c5;eip=0x0091f4; 	X(PUSH(ax));	// 101651                  push    ax ;~ 17C5:91F4
cs=0x17c5;eip=0x0091f5; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x14))));	// 101652                  mov     ax, [bp-14h] ;~ 17C5:91F5
cs=0x17c5;eip=0x0091f8; 	T(SUB(ax, 6));	// 101653                  sub     ax, 6 ;~ 17C5:91F8
cs=0x17c5;eip=0x0091fb; 	X(PUSH(ax));	// 101654                  push    ax ;~ 17C5:91FB
cs=0x17c5;eip=0x0091fc; 	J(CALL(sub_30af8,0));	// 101655                  call    sub_30AF8 ;~ 17C5:91FC
cs=0x17c5;eip=0x0091ff; 	T(ADD(sp, 0x0E));	// 101657                  add     sp, 0Eh ;~ 17C5:91FF
loc_2f432:
	// 5948 
cs=0x17c5;eip=0x009202; 	T(bx = word_492e2;);	// 101661                  mov     bx, word_492E2 ;~ 17C5:9202
cs=0x17c5;eip=0x009206; 	T(SHL(bx, 1));	// 101662                  shl     bx, 1 ;~ 17C5:9206
cs=0x17c5;eip=0x009208; 	T(SHL(bx, 1));	// 101663                  shl     bx, 1 ;~ 17C5:9208
cs=0x17c5;eip=0x00920a; 	T(ax = 0x1A;);	// 101664                  mov     ax, 1Ah ;~ 17C5:920A
cs=0x17c5;eip=0x00920d; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x7F2))));	// 101665                  imul    word ptr [bx+7F2h] ;~ 17C5:920D
cs=0x17c5;eip=0x009211; 	T(bx = ax;);	// 101666                  mov     bx, ax ;~ 17C5:9211
cs=0x17c5;eip=0x009213; 	T(ax = 0x12;);	// 101667                  mov     ax, 12h ;~ 17C5:9213
cs=0x17c5;eip=0x009216; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x82C))));	// 101668                  imul    word ptr [bx+82Ch] ;~ 17C5:9216
cs=0x17c5;eip=0x00921a; 	T(bx = ax;);	// 101669                  mov     bx, ax ;~ 17C5:921A
cs=0x17c5;eip=0x00921c; 	T(CMP(*(dw*)(raddr(ds,bx+0x534)), 7));	// 101670                  cmp     word ptr [bx+534h], 7 ;~ 17C5:921C
cs=0x17c5;eip=0x009221; 	J(JNZ(loc_2f4cf));	// 101671                  jnz     short loc_2F4CF ;~ 17C5:9221
cs=0x17c5;eip=0x009223; 	T(CMP(*(db*)(&word_48b66), 0));	// 101672                  cmp     byte ptr word_48B66, 0 ;~ 17C5:9223
cs=0x17c5;eip=0x009228; 	J(JZ(loc_2f45f));	// 101673                  jz      short loc_2F45F ;~ 17C5:9228
cs=0x17c5;eip=0x00922a; 	T(ax = 0x0F;);	// 101674                  mov     ax, 0Fh ;~ 17C5:922A
cs=0x17c5;eip=0x00922d; 	J(JMP(loc_2f462));	// 101675                  jmp     short loc_2F462 ;~ 17C5:922D
loc_2f45f:
	// 5949 
cs=0x17c5;eip=0x00922f; 	T(ax = 7;);	// 101679                  mov     ax, 7 ;~ 17C5:922F
loc_2f462:
	// 5950 
cs=0x17c5;eip=0x009232; 	X(PUSH(ax));	// 101682                  push    ax ;~ 17C5:9232
cs=0x17c5;eip=0x009233; 	J(CALL(sub_30074,0));	// 101683                  call    sub_30074 ;~ 17C5:9233
cs=0x17c5;eip=0x009236; 	T(ADD(sp, 2));	// 101684                  add     sp, 2 ;~ 17C5:9236
cs=0x17c5;eip=0x009239; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 0));	// 101685                  mov     word ptr [bp-0Ah], 0 ;~ 17C5:9239
cs=0x17c5;eip=0x00923e; 	J(JMP(loc_2f474));	// 101686                  jmp     short loc_2F474 ;~ 17C5:923E
loc_2f470:
	// 5951 
cs=0x17c5;eip=0x009240; 	X(ADD(*(dw*)(raddr(ss,bp-0x0A)), 0x10));	// 101690                  add     word ptr [bp-0Ah], 10h ;~ 17C5:9240
loc_2f474:
	// 5952 
cs=0x17c5;eip=0x009244; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), 0x100));	// 101693                  cmp     word ptr [bp-0Ah], 100h ;~ 17C5:9244
cs=0x17c5;eip=0x009249; 	J(JG(loc_2f4cf));	// 101694                  jg      short loc_2F4CF ;~ 17C5:9249
cs=0x17c5;eip=0x00924b; 	T(MOV(ah, *(raddr(ss,bp-0x0A))));	// 101695                  mov     ah, [bp-0Ah] ;~ 17C5:924B
cs=0x17c5;eip=0x00924e; 	T(SUB(al, al));	// 101696                  sub     al, al ;~ 17C5:924E
cs=0x17c5;eip=0x009250; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 101697                  mov     [bp-4], ax ;~ 17C5:9250
cs=0x17c5;eip=0x009253; 	T(ax = 0x28;);	// 101698                  mov     ax, 28h ; '(' ;~ 17C5:9253
cs=0x17c5;eip=0x009256; 	X(PUSH(ax));	// 101699                  push    ax ;~ 17C5:9256
cs=0x17c5;eip=0x009257; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 101700                  push    word ptr [bp-4] ;~ 17C5:9257
cs=0x17c5;eip=0x00925a; 	J(CALL(sub_333a8,0));	// 101701                  call    sub_333A8 ;~ 17C5:925A
cs=0x17c5;eip=0x00925d; 	T(ADD(sp, 4));	// 101702                  add     sp, 4 ;~ 17C5:925D
cs=0x17c5;eip=0x009260; 	T(ADD(ax, 0x9F));	// 101703                  add     ax, 9Fh ;~ 17C5:9260
cs=0x17c5;eip=0x009263; 	X(MOV(*(dw*)(raddr(ss,bp-8)), ax));	// 101704                  mov     [bp-8], ax ;~ 17C5:9263
cs=0x17c5;eip=0x009266; 	T(ax = 0x23;);	// 101705                  mov     ax, 23h ; '#' ;~ 17C5:9266
cs=0x17c5;eip=0x009269; 	X(PUSH(ax));	// 101706                  push    ax ;~ 17C5:9269
cs=0x17c5;eip=0x00926a; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 101707                  push    word ptr [bp-4] ;~ 17C5:926A
cs=0x17c5;eip=0x00926d; 	J(CALL(sub_333c0,0));	// 101708                  call    sub_333C0 ;~ 17C5:926D
cs=0x17c5;eip=0x009270; 	T(ADD(sp, 4));	// 101709                  add     sp, 4 ;~ 17C5:9270
cs=0x17c5;eip=0x009273; 	T(SUB(ax, 0x38));	// 101710                  sub     ax, 38h ; '8' ;~ 17C5:9273
cs=0x17c5;eip=0x009276; 	T(NEG(ax));	// 101711                  neg     ax ;~ 17C5:9276
cs=0x17c5;eip=0x009278; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 101712                  mov     [bp-0Ch], ax ;~ 17C5:9278
cs=0x17c5;eip=0x00927b; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), 0));	// 101713                  cmp     word ptr [bp-0Ah], 0 ;~ 17C5:927B
cs=0x17c5;eip=0x00927f; 	J(JZ(loc_2f4c1));	// 101714                  jz      short loc_2F4C1 ;~ 17C5:927F
cs=0x17c5;eip=0x009281; 	X(PUSH(*(dw*)(raddr(ss,bp-0x12))));	// 101715                  push    word ptr [bp-12h] ;~ 17C5:9281
cs=0x17c5;eip=0x009284; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0E))));	// 101716                  push    word ptr [bp-0Eh] ;~ 17C5:9284
cs=0x17c5;eip=0x009287; 	X(PUSH(ax));	// 101717                  push    ax ;~ 17C5:9287
cs=0x17c5;eip=0x009288; 	X(PUSH(*(dw*)(raddr(ss,bp-8))));	// 101718                  push    word ptr [bp-8] ;~ 17C5:9288
cs=0x17c5;eip=0x00928b; 	J(CALL(sub_2fe3c,0));	// 101719                  call    sub_2FE3C ;~ 17C5:928B
cs=0x17c5;eip=0x00928e; 	T(ADD(sp, 8));	// 101721                  add     sp, 8 ;~ 17C5:928E
loc_2f4c1:
	// 5953 
cs=0x17c5;eip=0x009291; 	T(MOV(ax, *(dw*)(raddr(ss,bp-8))));	// 101724                  mov     ax, [bp-8] ;~ 17C5:9291
cs=0x17c5;eip=0x009294; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 101725                  mov     [bp-0Eh], ax ;~ 17C5:9294
cs=0x17c5;eip=0x009297; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0C))));	// 101726                  mov     ax, [bp-0Ch] ;~ 17C5:9297
cs=0x17c5;eip=0x00929a; 	X(MOV(*(dw*)(raddr(ss,bp-0x12)), ax));	// 101727                  mov     [bp-12h], ax ;~ 17C5:929A
cs=0x17c5;eip=0x00929d; 	J(JMP(loc_2f470));	// 101728                  jmp     short loc_2F470 ;~ 17C5:929D
loc_2f4cf:
	// 5954 
cs=0x17c5;eip=0x00929f; 	T(ax = 0x0F;);	// 101733                  mov     ax, 0Fh ;~ 17C5:929F
cs=0x17c5;eip=0x0092a2; 	X(PUSH(ax));	// 101734                  push    ax ;~ 17C5:92A2
cs=0x17c5;eip=0x0092a3; 	T(ax = 0x36;);	// 101735                  mov     ax, 36h ; '6' ;~ 17C5:92A3
cs=0x17c5;eip=0x0092a6; 	X(PUSH(ax));	// 101736                  push    ax ;~ 17C5:92A6
cs=0x17c5;eip=0x0092a7; 	T(ax = 0x50;);	// 101737                  mov     ax, 50h ; 'P' ;~ 17C5:92A7
cs=0x17c5;eip=0x0092aa; 	X(PUSH(ax));	// 101738                  push    ax ;~ 17C5:92AA
cs=0x17c5;eip=0x0092ab; 	X(PUSH(word_50c8a));	// 101739                  push    ds:word_50C8A ;~ 17C5:92AB
cs=0x17c5;eip=0x0092af; 	J(CALL(sub_303b3,0));	// 101740                  call    sub_303B3 ;~ 17C5:92AF
cs=0x17c5;eip=0x0092b2; 	T(ADD(sp, 8));	// 101742                  add     sp, 8 ;~ 17C5:92B2
cs=0x17c5;eip=0x0092b5; 	T(CMP(word_4e300, 0x4E20));	// 101743                  cmp     ds:word_4E300, 4E20h ;~ 17C5:92B5
cs=0x17c5;eip=0x0092bb; 	J(JA(loc_2f51e));	// 101744                  ja      short loc_2F51E ;~ 17C5:92BB
cs=0x17c5;eip=0x0092bd; 	T(ax = 0x0F;);	// 101745                  mov     ax, 0Fh ;~ 17C5:92BD
cs=0x17c5;eip=0x0092c0; 	X(PUSH(ax));	// 101746                  push    ax ;~ 17C5:92C0
cs=0x17c5;eip=0x0092c1; 	T(ax = 0x36;);	// 101747                  mov     ax, 36h ; '6' ;~ 17C5:92C1
cs=0x17c5;eip=0x0092c4; 	X(PUSH(ax));	// 101748                  push    ax ;~ 17C5:92C4
cs=0x17c5;eip=0x0092c5; 	T(ax = 0x0E4;);	// 101749                  mov     ax, 0E4h ;~ 17C5:92C5
cs=0x17c5;eip=0x0092c8; 	X(PUSH(ax));	// 101750                  push    ax ;~ 17C5:92C8
cs=0x17c5;eip=0x0092c9; 	T(CMP(word_4e300, 0x64));	// 101751                  cmp     ds:word_4E300, 64h ; 'd' ;~ 17C5:92C9
cs=0x17c5;eip=0x0092ce; 	J(JNC(loc_2f505));	// 101752                  jnb     short loc_2F505 ;~ 17C5:92CE
cs=0x17c5;eip=0x0092d0; 	T(ax = word_4e300;);	// 101753                  mov     ax, ds:word_4E300 ;~ 17C5:92D0
cs=0x17c5;eip=0x0092d3; 	J(JMP(loc_2f517));	// 101754                  jmp     short loc_2F517 ;~ 17C5:92D3
loc_2f505:
	// 5955 
cs=0x17c5;eip=0x0092d5; 	T(ax = word_4e300;);	// 101758                  mov     ax, ds:word_4E300 ;~ 17C5:92D5
cs=0x17c5;eip=0x0092d8; 	T(SUB(dx, dx));	// 101759                  sub     dx, dx ;~ 17C5:92D8
cs=0x17c5;eip=0x0092da; 	T(cx = 5;);	// 101760                  mov     cx, 5 ;~ 17C5:92DA
cs=0x17c5;eip=0x0092dd; 	T(DIV2(cx));	// 101761                  div     cx ;~ 17C5:92DD
cs=0x17c5;eip=0x0092df; 	T(cx = ax;);	// 101762                  mov     cx, ax ;~ 17C5:92DF
cs=0x17c5;eip=0x0092e1; 	T(SHL(ax, 1));	// 101763                  shl     ax, 1 ;~ 17C5:92E1
cs=0x17c5;eip=0x0092e3; 	T(SHL(ax, 1));	// 101764                  shl     ax, 1 ;~ 17C5:92E3
cs=0x17c5;eip=0x0092e5; 	T(ADD(ax, cx));	// 101765                  add     ax, cx ;~ 17C5:92E5
loc_2f517:
	// 5956 
cs=0x17c5;eip=0x0092e7; 	X(PUSH(ax));	// 101768                  push    ax ;~ 17C5:92E7
cs=0x17c5;eip=0x0092e8; 	J(CALL(sub_303b3,0));	// 101769                  call    sub_303B3 ;~ 17C5:92E8
cs=0x17c5;eip=0x0092eb; 	T(ADD(sp, 8));	// 101771                  add     sp, 8 ;~ 17C5:92EB
loc_2f51e:
	// 5957 
cs=0x17c5;eip=0x0092ee; 	T(CMP(word_4993a, 1));	// 101774                  cmp     word_4993A, 1 ;~ 17C5:92EE
cs=0x17c5;eip=0x0092f3; 	J(JLE(loc_2f53b));	// 101775                  jle     short loc_2F53B ;~ 17C5:92F3
cs=0x17c5;eip=0x0092f5; 	T(ax = 0x0F;);	// 101776                  mov     ax, 0Fh ;~ 17C5:92F5
cs=0x17c5;eip=0x0092f8; 	X(PUSH(ax));	// 101777                  push    ax ;~ 17C5:92F8
cs=0x17c5;eip=0x0092f9; 	T(ax = 4;);	// 101778                  mov     ax, 4 ;~ 17C5:92F9
cs=0x17c5;eip=0x0092fc; 	X(PUSH(ax));	// 101779                  push    ax ;~ 17C5:92FC
cs=0x17c5;eip=0x0092fd; 	T(ax = 0x96;);	// 101780                  mov     ax, 96h ;~ 17C5:92FD
cs=0x17c5;eip=0x009300; 	X(PUSH(ax));	// 101781                  push    ax ;~ 17C5:9300
cs=0x17c5;eip=0x009301; 	T(ax = 0x5B54;);	// 101782                  mov     ax, 5B54h ;~ 17C5:9301
cs=0x17c5;eip=0x009304; 	X(PUSH(ax));	// 101783                  push    ax ;~ 17C5:9304
cs=0x17c5;eip=0x009305; 	J(CALL(sub_302fb,0));	// 101784                  call    sub_302FB ;~ 17C5:9305
cs=0x17c5;eip=0x009308; 	T(ADD(sp, 8));	// 101786                  add     sp, 8 ;~ 17C5:9308
loc_2f53b:
	// 5958 
cs=0x17c5;eip=0x00930b; 	T(TEST(word_4f42e, 0x1000));	// 101789                  test    ds:word_4F42E, 1000h ;~ 17C5:930B
cs=0x17c5;eip=0x009311; 	J(JZ(loc_2f559));	// 101790                  jz      short loc_2F559 ;~ 17C5:9311
cs=0x17c5;eip=0x009313; 	T(ax = 0x0F;);	// 101791                  mov     ax, 0Fh ;~ 17C5:9313
cs=0x17c5;eip=0x009316; 	X(PUSH(ax));	// 101792                  push    ax ;~ 17C5:9316
cs=0x17c5;eip=0x009317; 	T(ax = 0x10;);	// 101793                  mov     ax, 10h ;~ 17C5:9317
cs=0x17c5;eip=0x00931a; 	X(PUSH(ax));	// 101794                  push    ax ;~ 17C5:931A
cs=0x17c5;eip=0x00931b; 	T(ax = 0x0EA;);	// 101795                  mov     ax, 0EAh ;~ 17C5:931B
cs=0x17c5;eip=0x00931e; 	X(PUSH(ax));	// 101796                  push    ax ;~ 17C5:931E
cs=0x17c5;eip=0x00931f; 	T(ax = 0x5B5A;);	// 101797                  mov     ax, 5B5Ah ;~ 17C5:931F
cs=0x17c5;eip=0x009322; 	X(PUSH(ax));	// 101798                  push    ax ;~ 17C5:9322
cs=0x17c5;eip=0x009323; 	J(CALL(sub_302fb,0));	// 101799                  call    sub_302FB ;~ 17C5:9323
cs=0x17c5;eip=0x009326; 	T(ADD(sp, 8));	// 101801                  add     sp, 8 ;~ 17C5:9326
loc_2f559:
	// 5959 
cs=0x17c5;eip=0x009329; 	T(CMP(word_492e6, 0));	// 101804                  cmp     word_492E6, 0 ;~ 17C5:9329
cs=0x17c5;eip=0x00932e; 	J(JZ(loc_2f576));	// 101805                  jz      short loc_2F576 ;~ 17C5:932E
cs=0x17c5;eip=0x009330; 	T(ax = 0x0F;);	// 101806                  mov     ax, 0Fh ;~ 17C5:9330
cs=0x17c5;eip=0x009333; 	X(PUSH(ax));	// 101807                  push    ax ;~ 17C5:9333
cs=0x17c5;eip=0x009334; 	T(ax = 0x5A;);	// 101808                  mov     ax, 5Ah ; 'Z' ;~ 17C5:9334
cs=0x17c5;eip=0x009337; 	X(PUSH(ax));	// 101809                  push    ax ;~ 17C5:9337
cs=0x17c5;eip=0x009338; 	T(ax = 0x0EC;);	// 101810                  mov     ax, 0ECh ;~ 17C5:9338
cs=0x17c5;eip=0x00933b; 	X(PUSH(ax));	// 101811                  push    ax ;~ 17C5:933B
cs=0x17c5;eip=0x00933c; 	T(ax = 0x5B63;);	// 101812                  mov     ax, 5B63h ;~ 17C5:933C
cs=0x17c5;eip=0x00933f; 	X(PUSH(ax));	// 101813                  push    ax ;~ 17C5:933F
cs=0x17c5;eip=0x009340; 	J(CALL(sub_302fb,0));	// 101814                  call    sub_302FB ;~ 17C5:9340
cs=0x17c5;eip=0x009343; 	T(ADD(sp, 8));	// 101816                  add     sp, 8 ;~ 17C5:9343
loc_2f576:
	// 5960 
cs=0x17c5;eip=0x009346; 	T(ax = 0x0E5;);	// 101819                  mov     ax, 0E5h ;~ 17C5:9346
cs=0x17c5;eip=0x009349; 	X(PUSH(ax));	// 101820                  push    ax ;~ 17C5:9349
cs=0x17c5;eip=0x00934a; 	T(ax = 0x59;);	// 101821                  mov     ax, 59h ; 'Y' ;~ 17C5:934A
cs=0x17c5;eip=0x00934d; 	X(PUSH(ax));	// 101822                  push    ax ;~ 17C5:934D
cs=0x17c5;eip=0x00934e; 	T(ax = word_520c2;);	// 101823                  mov     ax, ds:word_520C2 ;~ 17C5:934E
cs=0x17c5;eip=0x009351; 	T(SUB(ax, word_4e2f8));	// 101824                  sub     ax, ds:word_4E2F8 ;~ 17C5:9351
cs=0x17c5;eip=0x009355; 	T(cl = 6;);	// 101825                  mov     cl, 6 ;~ 17C5:9355
cs=0x17c5;eip=0x009357; 	T(SAR(ax, cl));	// 101826                  sar     ax, cl ;~ 17C5:9357
cs=0x17c5;eip=0x009359; 	T(CWD);	// 101827                  cwd ;~ 17C5:9359
cs=0x17c5;eip=0x00935a; 	T(cx = 3;);	// 101828                  mov     cx, 3 ;~ 17C5:935A
cs=0x17c5;eip=0x00935d; 	T(IDIV2(cx));	// 101829                  idiv    cx ;~ 17C5:935D
cs=0x17c5;eip=0x00935f; 	T(ADD(ax, 0x9F));	// 101830                  add     ax, 9Fh ;~ 17C5:935F
cs=0x17c5;eip=0x009362; 	X(PUSH(ax));	// 101831                  push    ax ;~ 17C5:9362
cs=0x17c5;eip=0x009363; 	J(CALL(sub_33194,0));	// 101832                  call    sub_33194 ;~ 17C5:9363
cs=0x17c5;eip=0x009366; 	T(ADD(sp, 6));	// 101833                  add     sp, 6 ;~ 17C5:9366
cs=0x17c5;eip=0x009369; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 101834                  mov     [bp-6], ax ;~ 17C5:9369
cs=0x17c5;eip=0x00936c; 	T(ax = 0x0B;);	// 101835                  mov     ax, 0Bh ;~ 17C5:936C
cs=0x17c5;eip=0x00936f; 	X(PUSH(ax));	// 101836                  push    ax ;~ 17C5:936F
cs=0x17c5;eip=0x009370; 	J(CALL(sub_30074,0));	// 101837                  call    sub_30074 ;~ 17C5:9370
cs=0x17c5;eip=0x009373; 	T(ADD(sp, 2));	// 101838                  add     sp, 2 ;~ 17C5:9373
cs=0x17c5;eip=0x009376; 	T(ax = 0x11;);	// 101839                  mov     ax, 11h ;~ 17C5:9376
cs=0x17c5;eip=0x009379; 	X(PUSH(ax));	// 101840                  push    ax ;~ 17C5:9379
cs=0x17c5;eip=0x00937a; 	X(PUSH(*(dw*)(raddr(ss,bp-6))));	// 101841                  push    word ptr [bp-6] ;~ 17C5:937A
cs=0x17c5;eip=0x00937d; 	T(ax = 0x0F;);	// 101842                  mov     ax, 0Fh ;~ 17C5:937D
cs=0x17c5;eip=0x009380; 	X(PUSH(ax));	// 101843                  push    ax ;~ 17C5:9380
cs=0x17c5;eip=0x009381; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 101844                  mov     ax, [bp-6] ;~ 17C5:9381
cs=0x17c5;eip=0x009384; 	T(SUB(ax, 2));	// 101845                  sub     ax, 2 ;~ 17C5:9384
cs=0x17c5;eip=0x009387; 	X(PUSH(ax));	// 101846                  push    ax ;~ 17C5:9387
cs=0x17c5;eip=0x009388; 	J(CALL(sub_2fe3c,0));	// 101847                  call    sub_2FE3C ;~ 17C5:9388
cs=0x17c5;eip=0x00938b; 	T(ADD(sp, 8));	// 101849                  add     sp, 8 ;~ 17C5:938B
cs=0x17c5;eip=0x00938e; 	T(ax = 0x0F;);	// 101850                  mov     ax, 0Fh ;~ 17C5:938E
cs=0x17c5;eip=0x009391; 	X(PUSH(ax));	// 101851                  push    ax ;~ 17C5:9391
cs=0x17c5;eip=0x009392; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 101852                  mov     ax, [bp-6] ;~ 17C5:9392
cs=0x17c5;eip=0x009395; 	T(ADD(ax, 2));	// 101853                  add     ax, 2 ;~ 17C5:9395
cs=0x17c5;eip=0x009398; 	X(PUSH(ax));	// 101854                  push    ax ;~ 17C5:9398
cs=0x17c5;eip=0x009399; 	T(ax = 0x11;);	// 101855                  mov     ax, 11h ;~ 17C5:9399
cs=0x17c5;eip=0x00939c; 	X(PUSH(ax));	// 101856                  push    ax ;~ 17C5:939C
cs=0x17c5;eip=0x00939d; 	X(PUSH(*(dw*)(raddr(ss,bp-6))));	// 101857                  push    word ptr [bp-6] ;~ 17C5:939D
cs=0x17c5;eip=0x0093a0; 	J(CALL(sub_2fe3c,0));	// 101858                  call    sub_2FE3C ;~ 17C5:93A0
cs=0x17c5;eip=0x0093a3; 	T(ADD(sp, 8));	// 101860                  add     sp, 8 ;~ 17C5:93A3
cs=0x17c5;eip=0x0093a6; 	T(ax = 0x0F;);	// 101861                  mov     ax, 0Fh ;~ 17C5:93A6
cs=0x17c5;eip=0x0093a9; 	X(PUSH(ax));	// 101862                  push    ax ;~ 17C5:93A9
cs=0x17c5;eip=0x0093aa; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 101863                  mov     ax, [bp-6] ;~ 17C5:93AA
cs=0x17c5;eip=0x0093ad; 	T(ADD(ax, 2));	// 101864                  add     ax, 2 ;~ 17C5:93AD
cs=0x17c5;eip=0x0093b0; 	X(PUSH(ax));	// 101865                  push    ax ;~ 17C5:93B0
cs=0x17c5;eip=0x0093b1; 	T(ax = 0x0F;);	// 101866                  mov     ax, 0Fh ;~ 17C5:93B1
cs=0x17c5;eip=0x0093b4; 	X(PUSH(ax));	// 101867                  push    ax ;~ 17C5:93B4
cs=0x17c5;eip=0x0093b5; 	T(MOV(ax, *(dw*)(raddr(ss,bp-6))));	// 101868                  mov     ax, [bp-6] ;~ 17C5:93B5
cs=0x17c5;eip=0x0093b8; 	T(SUB(ax, 2));	// 101869                  sub     ax, 2 ;~ 17C5:93B8
cs=0x17c5;eip=0x0093bb; 	X(PUSH(ax));	// 101870                  push    ax ;~ 17C5:93BB
cs=0x17c5;eip=0x0093bc; 	J(CALL(sub_2fe3c,0));	// 101871                  call    sub_2FE3C ;~ 17C5:93BC
cs=0x17c5;eip=0x0093bf; 	T(ADD(sp, 8));	// 101873                  add     sp, 8 ;~ 17C5:93BF
cs=0x17c5;eip=0x0093c2; 	J({;});	// 101874                  jmp     short $+2 ;~ 17C5:93C2
loc_2f5f4:
	// 5961 
cs=0x17c5;eip=0x0093c4; 	T(al = byte_527d0;);	// 101879                  mov     al, ds:byte_527D0 ;~ 17C5:93C4
cs=0x17c5;eip=0x0093c7; 	T(CBW);	// 101880                  cbw ;~ 17C5:93C7
cs=0x17c5;eip=0x0093c8; 	X(PUSH(ax));	// 101881                  push    ax ;~ 17C5:93C8
cs=0x17c5;eip=0x0093c9; 	J(CALL(sub_3048c,0));	// 101882                  call    sub_3048C ;~ 17C5:93C9
cs=0x17c5;eip=0x0093cc; 	T(ADD(sp, 2));	// 101884                  add     sp, 2 ;~ 17C5:93CC
loc_2f5ff:
	// 5962 
cs=0x17c5;eip=0x0093cf; 	T(CMP(word_4e622, 0));	// 101887                  cmp     ds:word_4E622, 0 ;~ 17C5:93CF
cs=0x17c5;eip=0x0093d4; 	J(JZ(loc_2f66f));	// 101888                  jz      short loc_2F66F ;~ 17C5:93D4
cs=0x17c5;eip=0x0093d6; 	T(CMP(word_520c0, 0));	// 101889                  cmp     ds:word_520C0, 0 ;~ 17C5:93D6
cs=0x17c5;eip=0x0093db; 	J(JNZ(loc_2f614));	// 101890                  jnz     short loc_2F614 ;~ 17C5:93DB
cs=0x17c5;eip=0x0093dd; 	T(CMP(byte_4de54, 0));	// 101891                  cmp     ds:byte_4DE54, 0 ;~ 17C5:93DD
cs=0x17c5;eip=0x0093e2; 	J(JZ(loc_2f61b));	// 101892                  jz      short loc_2F61B ;~ 17C5:93E2
loc_2f614:
	// 5963 
cs=0x17c5;eip=0x0093e4; 	T(CMP(word_4993e, 0));	// 101895                  cmp     word_4993E, 0 ;~ 17C5:93E4
cs=0x17c5;eip=0x0093e9; 	J(JZ(loc_2f66f));	// 101896                  jz      short loc_2F66F ;~ 17C5:93E9
loc_2f61b:
	// 5964 
cs=0x17c5;eip=0x0093eb; 	T(ax = 0x0F;);	// 101899                  mov     ax, 0Fh ;~ 17C5:93EB
cs=0x17c5;eip=0x0093ee; 	X(PUSH(ax));	// 101900                  push    ax ;~ 17C5:93EE
cs=0x17c5;eip=0x0093ef; 	T(ax = 0x18;);	// 101901                  mov     ax, 18h ;~ 17C5:93EF
cs=0x17c5;eip=0x0093f2; 	X(PUSH(ax));	// 101902                  push    ax ;~ 17C5:93F2
cs=0x17c5;eip=0x0093f3; 	T(ax = 0x9690;);	// 101903                  mov     ax, 9690h ;~ 17C5:93F3
cs=0x17c5;eip=0x0093f6; 	X(PUSH(ax));	// 101904                  push    ax ;~ 17C5:93F6
cs=0x17c5;eip=0x0093f7; 	J(CALL(sub_34c4e,0));	// 101905                  call    sub_34C4E ;~ 17C5:93F7
cs=0x17c5;eip=0x0093fa; 	T(ADD(sp, 2));	// 101906                  add     sp, 2 ;~ 17C5:93FA
cs=0x17c5;eip=0x0093fd; 	T(SAR(ax, 1));	// 101907                  sar     ax, 1 ;~ 17C5:93FD
cs=0x17c5;eip=0x0093ff; 	T(SUB(ax, 0x28));	// 101908                  sub     ax, 28h ; '(' ;~ 17C5:93FF
cs=0x17c5;eip=0x009402; 	T(NEG(ax));	// 101909                  neg     ax ;~ 17C5:9402
cs=0x17c5;eip=0x009404; 	T(SHL(ax, 1));	// 101910                  shl     ax, 1 ;~ 17C5:9404
cs=0x17c5;eip=0x009406; 	T(SHL(ax, 1));	// 101911                  shl     ax, 1 ;~ 17C5:9406
cs=0x17c5;eip=0x009408; 	X(PUSH(ax));	// 101912                  push    ax ;~ 17C5:9408
cs=0x17c5;eip=0x009409; 	T(ax = 0x9690;);	// 101913                  mov     ax, 9690h ;~ 17C5:9409
cs=0x17c5;eip=0x00940c; 	X(PUSH(ax));	// 101914                  push    ax ;~ 17C5:940C
cs=0x17c5;eip=0x00940d; 	J(CALL(sub_3032e,0));	// 101915                  call    sub_3032E ;~ 17C5:940D
cs=0x17c5;eip=0x009410; 	T(ADD(sp, 8));	// 101917                  add     sp, 8 ;~ 17C5:9410
cs=0x17c5;eip=0x009413; 	X(DEC(word_4e622));	// 101918                  dec     ds:word_4E622 ;~ 17C5:9413
cs=0x17c5;eip=0x009417; 	T(CMP(word_4991a, 1));	// 101919                  cmp     word_4991A, 1 ;~ 17C5:9417
cs=0x17c5;eip=0x00941c; 	J(JNZ(loc_2f66f));	// 101920                  jnz     short loc_2F66F ;~ 17C5:941C
cs=0x17c5;eip=0x00941e; 	T(CMP(word_492ec, 0));	// 101921                  cmp     word_492EC, 0 ;~ 17C5:941E
cs=0x17c5;eip=0x009423; 	J(JZ(loc_2f65a));	// 101922                  jz      short loc_2F65A ;~ 17C5:9423
cs=0x17c5;eip=0x009425; 	T(ax = 0x0E;);	// 101923                  mov     ax, 0Eh ;~ 17C5:9425
cs=0x17c5;eip=0x009428; 	J(JMP(loc_2f65c));	// 101924                  jmp     short loc_2F65C ;~ 17C5:9428
loc_2f65a:
	// 5965 
cs=0x17c5;eip=0x00942a; 	T(SUB(ax, ax));	// 101928                  sub     ax, ax ;~ 17C5:942A
loc_2f65c:
	// 5966 
cs=0x17c5;eip=0x00942c; 	X(PUSH(ax));	// 101931                  push    ax ;~ 17C5:942C
cs=0x17c5;eip=0x00942d; 	T(ax = 1;);	// 101932                  mov     ax, 1 ;~ 17C5:942D
cs=0x17c5;eip=0x009430; 	X(PUSH(ax));	// 101933                  push    ax ;~ 17C5:9430
cs=0x17c5;eip=0x009431; 	T(ax = 0x78;);	// 101934                  mov     ax, 78h ; 'x' ;~ 17C5:9431
cs=0x17c5;eip=0x009434; 	X(PUSH(ax));	// 101935                  push    ax ;~ 17C5:9434
cs=0x17c5;eip=0x009435; 	T(ax = 0x5B6D;);	// 101936                  mov     ax, 5B6Dh ;~ 17C5:9435
cs=0x17c5;eip=0x009438; 	X(PUSH(ax));	// 101937                  push    ax ;~ 17C5:9438
cs=0x17c5;eip=0x009439; 	J(CALL(sub_3032e,0));	// 101938                  call    sub_3032E ;~ 17C5:9439
cs=0x17c5;eip=0x00943c; 	T(ADD(sp, 8));	// 101940                  add     sp, 8 ;~ 17C5:943C
loc_2f66f:
	// 5967 
cs=0x17c5;eip=0x00943f; 	T(CMP(word_4e624, 0));	// 101944                  cmp     ds:word_4E624, 0 ;~ 17C5:943F
cs=0x17c5;eip=0x009444; 	J(JZ(loc_2f6b0));	// 101945                  jz      short loc_2F6B0 ;~ 17C5:9444
cs=0x17c5;eip=0x009446; 	T(CMP(word_520c0, 0));	// 101946                  cmp     ds:word_520C0, 0 ;~ 17C5:9446
cs=0x17c5;eip=0x00944b; 	J(JNZ(loc_2f6b0));	// 101947                  jnz     short loc_2F6B0 ;~ 17C5:944B
cs=0x17c5;eip=0x00944d; 	T(CMP(byte_4de54, 0));	// 101948                  cmp     ds:byte_4DE54, 0 ;~ 17C5:944D
cs=0x17c5;eip=0x009452; 	J(JNZ(loc_2f6b0));	// 101949                  jnz     short loc_2F6B0 ;~ 17C5:9452
cs=0x17c5;eip=0x009454; 	T(ax = 0x0F;);	// 101950                  mov     ax, 0Fh ;~ 17C5:9454
cs=0x17c5;eip=0x009457; 	X(PUSH(ax));	// 101951                  push    ax ;~ 17C5:9457
cs=0x17c5;eip=0x009458; 	T(ax = 0x5A;);	// 101952                  mov     ax, 5Ah ; 'Z' ;~ 17C5:9458
cs=0x17c5;eip=0x00945b; 	X(PUSH(ax));	// 101953                  push    ax ;~ 17C5:945B
cs=0x17c5;eip=0x00945c; 	T(ax = 0x979A;);	// 101954                  mov     ax, 979Ah ;~ 17C5:945C
cs=0x17c5;eip=0x00945f; 	X(PUSH(ax));	// 101955                  push    ax ;~ 17C5:945F
cs=0x17c5;eip=0x009460; 	J(CALL(sub_34c4e,0));	// 101956                  call    sub_34C4E ;~ 17C5:9460
cs=0x17c5;eip=0x009463; 	T(ADD(sp, 2));	// 101957                  add     sp, 2 ;~ 17C5:9463
cs=0x17c5;eip=0x009466; 	T(SAR(ax, 1));	// 101958                  sar     ax, 1 ;~ 17C5:9466
cs=0x17c5;eip=0x009468; 	T(SUB(ax, 0x28));	// 101959                  sub     ax, 28h ; '(' ;~ 17C5:9468
cs=0x17c5;eip=0x00946b; 	T(NEG(ax));	// 101960                  neg     ax ;~ 17C5:946B
cs=0x17c5;eip=0x00946d; 	T(SHL(ax, 1));	// 101961                  shl     ax, 1 ;~ 17C5:946D
cs=0x17c5;eip=0x00946f; 	T(SHL(ax, 1));	// 101962                  shl     ax, 1 ;~ 17C5:946F
cs=0x17c5;eip=0x009471; 	X(PUSH(ax));	// 101963                  push    ax ;~ 17C5:9471
cs=0x17c5;eip=0x009472; 	T(ax = 0x979A;);	// 101964                  mov     ax, 979Ah ;~ 17C5:9472
cs=0x17c5;eip=0x009475; 	X(PUSH(ax));	// 101965                  push    ax ;~ 17C5:9475
cs=0x17c5;eip=0x009476; 	J(CALL(sub_3032e,0));	// 101966                  call    sub_3032E ;~ 17C5:9476
cs=0x17c5;eip=0x009479; 	T(ADD(sp, 8));	// 101968                  add     sp, 8 ;~ 17C5:9479
cs=0x17c5;eip=0x00947c; 	X(DEC(word_4e624));	// 101969                  dec     ds:word_4E624 ;~ 17C5:947C
loc_2f6b0:
	// 5968 
cs=0x17c5;eip=0x009480; 	X(POP(si));	// 101973                  pop     si ;~ 17C5:9480
cs=0x17c5;eip=0x009481; 	T(sp = bp;);	// 101974                  mov     sp, bp ;~ 17C5:9481
cs=0x17c5;eip=0x009483; 	X(POP(bp));	// 101975                  pop     bp ;~ 17C5:9483
cs=0x17c5;eip=0x009484; 	J(RETN(0));	// 101976                  retn ;~ 17C5:9484
ret_17c5_9485:
	// 5969 
cs=0x17c5;eip=0x009485; 	X(PUSH(bp));	// 101978                  push    bp ;~ 17C5:9485
cs=0x17c5;eip=0x009486; 	T(bp = sp;);	// 101979                  mov     bp, sp ;~ 17C5:9486
cs=0x17c5;eip=0x009488; 	T(CMP(word_492f2, 0));	// 101980                  cmp     word_492F2, 0 ;~ 17C5:9488
cs=0x17c5;eip=0x00948d; 	J(JNZ(loc_2f6c1));	// 101981                  jnz     short loc_2F6C1 ;~ 17C5:948D
cs=0x17c5;eip=0x00948f; 	J(JMP(loc_2f6fc));	// 101982                  jmp     short loc_2F6FC ;~ 17C5:948F
loc_2f6c1:
	// 5970 
cs=0x17c5;eip=0x009491; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 101986                  mov     ax, [bp+4] ;~ 17C5:9491
cs=0x17c5;eip=0x009494; 	J(JMP(loc_2f6eb));	// 101987                  jmp     short loc_2F6EB ;~ 17C5:9494
loc_2f6c6:
	// 5971 
cs=0x17c5;eip=0x009496; 	X(PUSH(word_52100));	// 101991                  push    ds:word_52100 ;~ 17C5:9496
cs=0x17c5;eip=0x00949a; 	X(PUSH(word_520f0));	// 101992                  push    ds:word_520F0 ;~ 17C5:949A
cs=0x17c5;eip=0x00949e; 	J(CALL(sub_2f7f9,0));	// 101993                  call    sub_2F7F9 ;~ 17C5:949E
cs=0x17c5;eip=0x0094a1; 	T(ADD(sp, 4));	// 101994                  add     sp, 4 ;~ 17C5:94A1
cs=0x17c5;eip=0x0094a4; 	J(JMP(loc_2f6f6));	// 101995                  jmp     short loc_2F6F6 ;~ 17C5:94A4
loc_2f6d6:
	// 5972 
cs=0x17c5;eip=0x0094a6; 	T(SUB(ax, ax));	// 101999                  sub     ax, ax ;~ 17C5:94A6
cs=0x17c5;eip=0x0094a8; 	X(PUSH(ax));	// 102000                  push    ax ;~ 17C5:94A8
cs=0x17c5;eip=0x0094a9; 	T(ax = 0x5B83;);	// 102001                  mov     ax, 5B83h ;~ 17C5:94A9
cs=0x17c5;eip=0x0094ac; 	X(PUSH(ax));	// 102002                  push    ax ;~ 17C5:94AC
cs=0x17c5;eip=0x0094ad; 	T(ax = 1;);	// 102003                  mov     ax, 1 ;~ 17C5:94AD
cs=0x17c5;eip=0x0094b0; 	X(PUSH(ax));	// 102004                  push    ax ;~ 17C5:94B0
cs=0x17c5;eip=0x0094b1; 	J(CALL(sub_301dd,0));	// 102005                  call    sub_301DD ;~ 17C5:94B1
cs=0x17c5;eip=0x0094b4; 	T(ADD(sp, 6));	// 102006                  add     sp, 6 ;~ 17C5:94B4
cs=0x17c5;eip=0x0094b7; 	J(JMP(loc_2f6f6));	// 102007                  jmp     short loc_2F6F6 ;~ 17C5:94B7
ret_17c5_94b9:
	// 5973 
cs=0x17c5;eip=0x0094b9; 	J(JMP(loc_2f6f6));	// 102009                  jmp     short loc_2F6F6 ;~ 17C5:94B9
loc_2f6eb:
	// 5974 
cs=0x17c5;eip=0x0094bb; 	T(OR(ax, ax));	// 102013                  or      ax, ax ;~ 17C5:94BB
cs=0x17c5;eip=0x0094bd; 	J(JZ(loc_2f6c6));	// 102014                  jz      short loc_2F6C6 ;~ 17C5:94BD
cs=0x17c5;eip=0x0094bf; 	T(CMP(ax, 1));	// 102015                  cmp     ax, 1 ;~ 17C5:94BF
cs=0x17c5;eip=0x0094c2; 	J(JZ(loc_2f6d6));	// 102016                  jz      short loc_2F6D6 ;~ 17C5:94C2
cs=0x17c5;eip=0x0094c4; 	J({;});	// 102017                  jmp     short $+2 ;~ 17C5:94C4
loc_2f6f6:
	// 5975 
cs=0x17c5;eip=0x0094c6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 102022                  mov     ax, [bp+4] ;~ 17C5:94C6
cs=0x17c5;eip=0x0094c9; 	X(word_522ca = ax;);	// 102023                  mov     ds:word_522CA, ax ;~ 17C5:94C9
loc_2f6fc:
	// 5976 
cs=0x17c5;eip=0x0094cc; 	T(sp = bp;);	// 102026                  mov     sp, bp ;~ 17C5:94CC
cs=0x17c5;eip=0x0094ce; 	X(POP(bp));	// 102027                  pop     bp ;~ 17C5:94CE
cs=0x17c5;eip=0x0094cf; 	J(RETN(0));	// 102028                  retn ;~ 17C5:94CF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2f068: 	goto loc_2f068;
        case m2c::kloc_2f080: 	goto loc_2f080;
        case m2c::kloc_2f0c6: 	goto loc_2f0c6;
        case m2c::kloc_2f102: 	goto loc_2f102;
        case m2c::kloc_2f111: 	goto loc_2f111;
        case m2c::kloc_2f11b: 	goto loc_2f11b;
        case m2c::kloc_2f129: 	goto loc_2f129;
        case m2c::kloc_2f1fe: 	goto loc_2f1fe;
        case m2c::kloc_2f23c: 	goto loc_2f23c;
        case m2c::kloc_2f248: 	goto loc_2f248;
        case m2c::kloc_2f24a: 	goto loc_2f24a;
        case m2c::kloc_2f291: 	goto loc_2f291;
        case m2c::kloc_2f2f4: 	goto loc_2f2f4;
        case m2c::kloc_2f2f7: 	goto loc_2f2f7;
        case m2c::kloc_2f345: 	goto loc_2f345;
        case m2c::kloc_2f374: 	goto loc_2f374;
        case m2c::kloc_2f382: 	goto loc_2f382;
        case m2c::kloc_2f3c8: 	goto loc_2f3c8;
        case m2c::kloc_2f3d2: 	goto loc_2f3d2;
        case m2c::kloc_2f432: 	goto loc_2f432;
        case m2c::kloc_2f45f: 	goto loc_2f45f;
        case m2c::kloc_2f462: 	goto loc_2f462;
        case m2c::kloc_2f470: 	goto loc_2f470;
        case m2c::kloc_2f474: 	goto loc_2f474;
        case m2c::kloc_2f4c1: 	goto loc_2f4c1;
        case m2c::kloc_2f4cf: 	goto loc_2f4cf;
        case m2c::kloc_2f505: 	goto loc_2f505;
        case m2c::kloc_2f517: 	goto loc_2f517;
        case m2c::kloc_2f51e: 	goto loc_2f51e;
        case m2c::kloc_2f53b: 	goto loc_2f53b;
        case m2c::kloc_2f559: 	goto loc_2f559;
        case m2c::kloc_2f576: 	goto loc_2f576;
        case m2c::kloc_2f5f4: 	goto loc_2f5f4;
        case m2c::kloc_2f5ff: 	goto loc_2f5ff;
        case m2c::kloc_2f614: 	goto loc_2f614;
        case m2c::kloc_2f61b: 	goto loc_2f61b;
        case m2c::kloc_2f65a: 	goto loc_2f65a;
        case m2c::kloc_2f65c: 	goto loc_2f65c;
        case m2c::kloc_2f66f: 	goto loc_2f66f;
        case m2c::kloc_2f6b0: 	goto loc_2f6b0;
        case m2c::kloc_2f6c1: 	goto loc_2f6c1;
        case m2c::kloc_2f6c6: 	goto loc_2f6c6;
        case m2c::kloc_2f6d6: 	goto loc_2f6d6;
        case m2c::kloc_2f6eb: 	goto loc_2f6eb;
        case m2c::kloc_2f6f6: 	goto loc_2f6f6;
        case m2c::kloc_2f6fc: 	goto loc_2f6fc;
        case m2c::kret_17c5_9485: 	goto ret_17c5_9485;
        case m2c::kret_17c5_94b9: 	goto ret_17c5_94b9;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2f700(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2f700:
    _begin:
#undef arg_0
#define arg_0 4
	// 102037 arg_0           = word ptr  4 ;~ 17C5:94D0
cs=0x17c5;eip=0x0094d0; 	X(PUSH(bp));	// 102039                  push    bp ;~ 17C5:94D0
cs=0x17c5;eip=0x0094d1; 	T(bp = sp;);	// 102040                  mov     bp, sp ;~ 17C5:94D1
cs=0x17c5;eip=0x0094d3; 	T(SUB(sp, 0x14));	// 102041                  sub     sp, 14h ;~ 17C5:94D3
cs=0x17c5;eip=0x0094d6; 	T(CMP(word_492f2, 0));	// 102042                  cmp     word_492F2, 0 ;~ 17C5:94D6
cs=0x17c5;eip=0x0094db; 	J(JNZ(loc_2f710));	// 102043                  jnz     short loc_2F710 ;~ 17C5:94DB
cs=0x17c5;eip=0x0094dd; 	J(JMP(loc_2f7a6));	// 102044                  jmp     loc_2F7A6 ;~ 17C5:94DD
loc_2f710:
	// 5977 
cs=0x17c5;eip=0x0094e0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 102048                  mov     ax, [bp+arg_0] ;~ 17C5:94E0
cs=0x17c5;eip=0x0094e3; 	J(JMP(loc_2f796));	// 102049                  jmp     loc_2F796 ;~ 17C5:94E3
loc_2f716:
	// 5978 
cs=0x17c5;eip=0x0094e6; 	T(ax = 0x5B87;);	// 102053                  mov     ax, 5B87h ;~ 17C5:94E6
cs=0x17c5;eip=0x0094e9; 	X(PUSH(ax));	// 102054                  push    ax ;~ 17C5:94E9
cs=0x17c5;eip=0x0094ea; 	T(ax = 0x66C4;);	// 102055                  mov     ax, 66C4h ;~ 17C5:94EA
cs=0x17c5;eip=0x0094ed; 	X(PUSH(ax));	// 102056                  push    ax ;~ 17C5:94ED
cs=0x17c5;eip=0x0094ee; 	J(CALL(sub_34c1c,0));	// 102057                  call    sub_34C1C ;~ 17C5:94EE
cs=0x17c5;eip=0x0094f1; 	T(ADD(sp, 4));	// 102058                  add     sp, 4 ;~ 17C5:94F1
cs=0x17c5;eip=0x0094f4; 	T(ax = word_52ae2;);	// 102059                  mov     ax, ds:word_52AE2 ;~ 17C5:94F4
cs=0x17c5;eip=0x0094f7; 	J(JMP(loc_2f76b));	// 102060                  jmp     short loc_2F76B ;~ 17C5:94F7
loc_2f729:
	// 5979 
cs=0x17c5;eip=0x0094f9; 	T(ax = 0x5B91;);	// 102064                  mov     ax, 5B91h ;~ 17C5:94F9
cs=0x17c5;eip=0x0094fc; 	X(PUSH(ax));	// 102065                  push    ax ;~ 17C5:94FC
cs=0x17c5;eip=0x0094fd; 	T(ax = 0x66C4;);	// 102066                  mov     ax, 66C4h ;~ 17C5:94FD
cs=0x17c5;eip=0x009500; 	X(PUSH(ax));	// 102067                  push    ax ;~ 17C5:9500
cs=0x17c5;eip=0x009501; 	J(CALL(sub_34bdc,0));	// 102068                  call    sub_34BDC ;~ 17C5:9501
cs=0x17c5;eip=0x009504; 	T(ADD(sp, 4));	// 102069                  add     sp, 4 ;~ 17C5:9504
cs=0x17c5;eip=0x009507; 	J(JMP(loc_2f780));	// 102070                  jmp     short loc_2F780 ;~ 17C5:9507
loc_2f739:
	// 5980 
cs=0x17c5;eip=0x009509; 	T(ax = 0x5B97;);	// 102074                  mov     ax, 5B97h ;~ 17C5:9509
cs=0x17c5;eip=0x00950c; 	X(PUSH(ax));	// 102075                  push    ax ;~ 17C5:950C
cs=0x17c5;eip=0x00950d; 	T(ax = 0x66C4;);	// 102076                  mov     ax, 66C4h ;~ 17C5:950D
cs=0x17c5;eip=0x009510; 	X(PUSH(ax));	// 102077                  push    ax ;~ 17C5:9510
cs=0x17c5;eip=0x009511; 	J(CALL(sub_34bdc,0));	// 102078                  call    sub_34BDC ;~ 17C5:9511
cs=0x17c5;eip=0x009514; 	T(ADD(sp, 4));	// 102079                  add     sp, 4 ;~ 17C5:9514
cs=0x17c5;eip=0x009517; 	J(JMP(loc_2f780));	// 102080                  jmp     short loc_2F780 ;~ 17C5:9517
loc_2f749:
	// 5981 
cs=0x17c5;eip=0x009519; 	T(ax = 0x5B9C;);	// 102084                  mov     ax, 5B9Ch ;~ 17C5:9519
cs=0x17c5;eip=0x00951c; 	X(PUSH(ax));	// 102085                  push    ax ;~ 17C5:951C
cs=0x17c5;eip=0x00951d; 	T(ax = 0x66C4;);	// 102086                  mov     ax, 66C4h ;~ 17C5:951D
cs=0x17c5;eip=0x009520; 	X(PUSH(ax));	// 102087                  push    ax ;~ 17C5:9520
cs=0x17c5;eip=0x009521; 	J(CALL(sub_34bdc,0));	// 102088                  call    sub_34BDC ;~ 17C5:9521
cs=0x17c5;eip=0x009524; 	T(ADD(sp, 4));	// 102089                  add     sp, 4 ;~ 17C5:9524
cs=0x17c5;eip=0x009527; 	J(JMP(loc_2f780));	// 102090                  jmp     short loc_2F780 ;~ 17C5:9527
loc_2f759:
	// 5982 
cs=0x17c5;eip=0x009529; 	T(ax = 0x5BA2;);	// 102094                  mov     ax, 5BA2h ;~ 17C5:9529
cs=0x17c5;eip=0x00952c; 	X(PUSH(ax));	// 102095                  push    ax ;~ 17C5:952C
cs=0x17c5;eip=0x00952d; 	T(ax = 0x66C4;);	// 102096                  mov     ax, 66C4h ;~ 17C5:952D
cs=0x17c5;eip=0x009530; 	X(PUSH(ax));	// 102097                  push    ax ;~ 17C5:9530
cs=0x17c5;eip=0x009531; 	J(CALL(sub_34bdc,0));	// 102098                  call    sub_34BDC ;~ 17C5:9531
cs=0x17c5;eip=0x009534; 	T(ADD(sp, 4));	// 102099                  add     sp, 4 ;~ 17C5:9534
cs=0x17c5;eip=0x009537; 	J(JMP(loc_2f780));	// 102100                  jmp     short loc_2F780 ;~ 17C5:9537
ret_17c5_9539:
	// 5983 
cs=0x17c5;eip=0x009539; 	J(JMP(loc_2f780));	// 102102                  jmp     short loc_2F780 ;~ 17C5:9539
loc_2f76b:
	// 5984 
cs=0x17c5;eip=0x00953b; 	T(CMP(ax, 0x8000));	// 102106                  cmp     ax, 8000h ;~ 17C5:953B
cs=0x17c5;eip=0x00953e; 	J(JZ(loc_2f739));	// 102107                  jz      short loc_2F739 ;~ 17C5:953E
cs=0x17c5;eip=0x009540; 	T(CMP(ax, 0x0C000));	// 102108                  cmp     ax, 0C000h ;~ 17C5:9540
cs=0x17c5;eip=0x009543; 	J(JZ(loc_2f759));	// 102109                  jz      short loc_2F759 ;~ 17C5:9543
cs=0x17c5;eip=0x009545; 	T(OR(ax, ax));	// 102110                  or      ax, ax ;~ 17C5:9545
cs=0x17c5;eip=0x009547; 	J(JZ(loc_2f729));	// 102111                  jz      short loc_2F729 ;~ 17C5:9547
cs=0x17c5;eip=0x009549; 	T(CMP(ax, 0x4000));	// 102112                  cmp     ax, 4000h ;~ 17C5:9549
cs=0x17c5;eip=0x00954c; 	J(JZ(loc_2f749));	// 102113                  jz      short loc_2F749 ;~ 17C5:954C
cs=0x17c5;eip=0x00954e; 	J({;});	// 102114                  jmp     short $+2 ;~ 17C5:954E
loc_2f780:
	// 5985 
cs=0x17c5;eip=0x009550; 	T(ax = 3;);	// 102119                  mov     ax, 3 ;~ 17C5:9550
cs=0x17c5;eip=0x009553; 	X(PUSH(ax));	// 102120                  push    ax ;~ 17C5:9553
cs=0x17c5;eip=0x009554; 	T(ax = 0x66C4;);	// 102121                  mov     ax, 66C4h ;~ 17C5:9554
cs=0x17c5;eip=0x009557; 	X(PUSH(ax));	// 102122                  push    ax ;~ 17C5:9557
cs=0x17c5;eip=0x009558; 	T(ax = 2;);	// 102123                  mov     ax, 2 ;~ 17C5:9558
cs=0x17c5;eip=0x00955b; 	X(PUSH(ax));	// 102124                  push    ax ;~ 17C5:955B
cs=0x17c5;eip=0x00955c; 	J(CALL(sub_301dd,0));	// 102125                  call    sub_301DD ;~ 17C5:955C
cs=0x17c5;eip=0x00955f; 	T(ADD(sp, 6));	// 102126                  add     sp, 6 ;~ 17C5:955F
cs=0x17c5;eip=0x009562; 	J(JMP(loc_2f7a0));	// 102127                  jmp     short loc_2F7A0 ;~ 17C5:9562
ret_17c5_9564:
	// 5986 
cs=0x17c5;eip=0x009564; 	J(JMP(loc_2f7a0));	// 102129                  jmp     short loc_2F7A0 ;~ 17C5:9564
loc_2f796:
	// 5987 
cs=0x17c5;eip=0x009566; 	T(CMP(ax, 0x13));	// 102133                  cmp     ax, 13h ;~ 17C5:9566
cs=0x17c5;eip=0x009569; 	J(JNZ(loc_2f79e));	// 102134                  jnz     short loc_2F79E ;~ 17C5:9569
cs=0x17c5;eip=0x00956b; 	J(JMP(loc_2f716));	// 102135                  jmp     loc_2F716 ;~ 17C5:956B
loc_2f79e:
	// 5988 
cs=0x17c5;eip=0x00956e; 	J({;});	// 102139                  jmp     short $+2 ;~ 17C5:956E
loc_2f7a0:
	// 5989 
cs=0x17c5;eip=0x009570; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 102144                  mov     ax, [bp+arg_0] ;~ 17C5:9570
cs=0x17c5;eip=0x009573; 	X(word_522ce = ax;);	// 102145                  mov     ds:word_522CE, ax ;~ 17C5:9573
loc_2f7a6:
	// 5990 
cs=0x17c5;eip=0x009576; 	T(sp = bp;);	// 102148                  mov     sp, bp ;~ 17C5:9576
cs=0x17c5;eip=0x009578; 	X(POP(bp));	// 102149                  pop     bp ;~ 17C5:9578
cs=0x17c5;eip=0x009579; 	J(RETN(0));	// 102150                  retn ;~ 17C5:9579

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2f710: 	goto loc_2f710;
        case m2c::kloc_2f716: 	goto loc_2f716;
        case m2c::kloc_2f729: 	goto loc_2f729;
        case m2c::kloc_2f739: 	goto loc_2f739;
        case m2c::kloc_2f749: 	goto loc_2f749;
        case m2c::kloc_2f759: 	goto loc_2f759;
        case m2c::kloc_2f76b: 	goto loc_2f76b;
        case m2c::kloc_2f780: 	goto loc_2f780;
        case m2c::kloc_2f796: 	goto loc_2f796;
        case m2c::kloc_2f79e: 	goto loc_2f79e;
        case m2c::kloc_2f7a0: 	goto loc_2f7a0;
        case m2c::kloc_2f7a6: 	goto loc_2f7a6;
        case m2c::kret_17c5_9539: 	goto ret_17c5_9539;
        case m2c::kret_17c5_9564: 	goto ret_17c5_9564;
        case m2c::ksub_2f700: 	goto sub_2f700;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2f7aa(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2f7aa:
    _begin:
#undef arg_0
#define arg_0 4
	// 102161 arg_0           = word ptr  4 ;~ 17C5:957A
cs=0x17c5;eip=0x00957a; 	X(PUSH(bp));	// 102163                  push    bp ;~ 17C5:957A
cs=0x17c5;eip=0x00957b; 	T(bp = sp;);	// 102164                  mov     bp, sp ;~ 17C5:957B
cs=0x17c5;eip=0x00957d; 	T(SUB(sp, 2));	// 102165                  sub     sp, 2 ;~ 17C5:957D
cs=0x17c5;eip=0x009580; 	T(ax = word_522ce;);	// 102166                  mov     ax, ds:word_522CE ;~ 17C5:9580
cs=0x17c5;eip=0x009583; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 102167                  cmp     [bp+arg_0], ax ;~ 17C5:9583
cs=0x17c5;eip=0x009586; 	J(JNZ(loc_2f7c1));	// 102168                  jnz     short loc_2F7C1 ;~ 17C5:9586
cs=0x17c5;eip=0x009588; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 102169                  push    [bp+arg_0] ;~ 17C5:9588
cs=0x17c5;eip=0x00958b; 	J(CALL(sub_2f700,0));	// 102170                  call    sub_2F700 ;~ 17C5:958B
cs=0x17c5;eip=0x00958e; 	T(ADD(sp, 2));	// 102171                  add     sp, 2 ;~ 17C5:958E
loc_2f7c1:
	// 5991 
cs=0x17c5;eip=0x009591; 	T(sp = bp;);	// 102174                  mov     sp, bp ;~ 17C5:9591
cs=0x17c5;eip=0x009593; 	X(POP(bp));	// 102175                  pop     bp ;~ 17C5:9593
cs=0x17c5;eip=0x009594; 	J(RETN(0));	// 102176                  retn ;~ 17C5:9594

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2f7c1: 	goto loc_2f7c1;
        case m2c::ksub_2f7aa: 	goto sub_2f7aa;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_9595_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_9595_proc:
    _begin:
loc_2f7c5:
	// 5992 
cs=0x17c5;eip=0x009595; 	X(PUSH(bp));	// 102182                  push    bp ;~ 17C5:9595
cs=0x17c5;eip=0x009596; 	T(bp = sp;);	// 102183                  mov     bp, sp ;~ 17C5:9596
cs=0x17c5;eip=0x009598; 	X(word_522ca = 0;);	// 102184                  mov     ds:word_522CA, 0 ;~ 17C5:9598
cs=0x17c5;eip=0x00959e; 	X(word_52248 = 0x18;);	// 102185                  mov     ds:word_52248, 18h ;~ 17C5:959E
cs=0x17c5;eip=0x0095a4; 	X(word_5268e = 0x60;);	// 102186                  mov     ds:word_5268E, 60h ; '`' ;~ 17C5:95A4
cs=0x17c5;eip=0x0095aa; 	X(word_5224a = 0x70;);	// 102187                  mov     ds:word_5224A, 70h ; 'p' ;~ 17C5:95AA
cs=0x17c5;eip=0x0095b0; 	X(word_527d2 = 0x0A8;);	// 102188                  mov     ds:word_527D2, 0A8h ;~ 17C5:95B0
cs=0x17c5;eip=0x0095b6; 	X(word_4f1f8 = 0x48;);	// 102189                  mov     ds:word_4F1F8, 48h ; 'H' ;~ 17C5:95B6
cs=0x17c5;eip=0x0095bc; 	X(word_4f1fc = 0x38;);	// 102190                  mov     ds:word_4F1FC, 38h ; '8' ;~ 17C5:95BC
cs=0x17c5;eip=0x0095c2; 	J(CALL(sub_2faa5,0));	// 102191                  call    sub_2FAA5 ;~ 17C5:95C2
cs=0x17c5;eip=0x0095c5; 	T(sp = bp;);	// 102192                  mov     sp, bp ;~ 17C5:95C5
cs=0x17c5;eip=0x0095c7; 	X(POP(bp));	// 102193                  pop     bp ;~ 17C5:95C7
cs=0x17c5;eip=0x0095c8; 	J(RETN(0));	// 102194                  retn ;~ 17C5:95C8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2f7c5: 	goto loc_2f7c5;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2f7f9(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2f7f9:
    _begin:
#undef var_a
#define var_a -0x0A
	// 102203 var_A           = word ptr -0Ah ;~ 17C5:95C9
#undef var_6
#define var_6 -6
	// 102204 var_6           = word ptr -6 ;~ 17C5:95C9
#undef var_4
#define var_4 -4
	// 102205 var_4           = word ptr -4 ;~ 17C5:95C9
#undef var_2
#define var_2 -2
	// 102206 var_2           = word ptr -2 ;~ 17C5:95C9
#undef arg_0
#define arg_0 4
	// 102207 arg_0           = word ptr  4 ;~ 17C5:95C9
#undef arg_2
#define arg_2 6
	// 102208 arg_2           = word ptr  6 ;~ 17C5:95C9
cs=0x17c5;eip=0x0095c9; 	X(PUSH(bp));	// 102210                  push    bp ;~ 17C5:95C9
cs=0x17c5;eip=0x0095ca; 	T(bp = sp;);	// 102211                  mov     bp, sp ;~ 17C5:95CA
cs=0x17c5;eip=0x0095cc; 	T(SUB(sp, 0x10));	// 102212                  sub     sp, 10h ;~ 17C5:95CC
cs=0x17c5;eip=0x0095cf; 	X(PUSH(si));	// 102213                  push    si ;~ 17C5:95CF
cs=0x17c5;eip=0x0095d0; 	X(word_522ca = 0;);	// 102214                  mov     ds:word_522CA, 0 ;~ 17C5:95D0
cs=0x17c5;eip=0x0095d6; 	T(CMP(word_492f2, 0));	// 102215                  cmp     word_492F2, 0 ;~ 17C5:95D6
cs=0x17c5;eip=0x0095db; 	J(JNZ(loc_2f810));	// 102216                  jnz     short loc_2F810 ;~ 17C5:95DB
cs=0x17c5;eip=0x0095dd; 	J(JMP(loc_2faa0));	// 102217                  jmp     loc_2FAA0 ;~ 17C5:95DD
loc_2f810:
	// 5993 
cs=0x17c5;eip=0x0095e0; 	T(SUB(ax, ax));	// 102221                  sub     ax, ax ;~ 17C5:95E0
cs=0x17c5;eip=0x0095e2; 	X(PUSH(ax));	// 102222                  push    ax ;~ 17C5:95E2
cs=0x17c5;eip=0x0095e3; 	T(ax = 0x5BA7;);	// 102223                  mov     ax, 5BA7h ;~ 17C5:95E3
cs=0x17c5;eip=0x0095e6; 	X(PUSH(ax));	// 102224                  push    ax ;~ 17C5:95E6
cs=0x17c5;eip=0x0095e7; 	T(ax = 1;);	// 102225                  mov     ax, 1 ;~ 17C5:95E7
cs=0x17c5;eip=0x0095ea; 	X(PUSH(ax));	// 102226                  push    ax ;~ 17C5:95EA
cs=0x17c5;eip=0x0095eb; 	J(CALL(sub_301dd,0));	// 102227                  call    sub_301DD ;~ 17C5:95EB
cs=0x17c5;eip=0x0095ee; 	T(ADD(sp, 6));	// 102228                  add     sp, 6 ;~ 17C5:95EE
cs=0x17c5;eip=0x0095f1; 	T(ax = 0x48;);	// 102229                  mov     ax, 48h ; 'H' ;~ 17C5:95F1
cs=0x17c5;eip=0x0095f4; 	T(cl = 9;);	// 102230                  mov     cl, 9 ;~ 17C5:95F4
cs=0x17c5;eip=0x0095f6; 	T(SUB(cl, *(db*)(&word_4e61a)));	// 102231                  sub     cl, byte ptr ds:word_4E61A ;~ 17C5:95F6
cs=0x17c5;eip=0x0095fa; 	T(SHL(ax, cl));	// 102232                  shl     ax, cl ;~ 17C5:95FA
cs=0x17c5;eip=0x0095fc; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 102233                  mov     [bp+var_6], ax ;~ 17C5:95FC
cs=0x17c5;eip=0x0095ff; 	T(ax = 0x7FFF;);	// 102234                  mov     ax, 7FFFh ;~ 17C5:95FF
cs=0x17c5;eip=0x009602; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_6))));	// 102235                  sub     ax, [bp+var_6] ;~ 17C5:9602
cs=0x17c5;eip=0x009605; 	X(PUSH(ax));	// 102236                  push    ax ;~ 17C5:9605
cs=0x17c5;eip=0x009606; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 102237                  push    [bp+var_6] ;~ 17C5:9606
cs=0x17c5;eip=0x009609; 	T(ax = 0x4000;);	// 102238                  mov     ax, 4000h ;~ 17C5:9609
cs=0x17c5;eip=0x00960c; 	T(cl = *(db*)(&word_4e61a););	// 102239                  mov     cl, byte ptr ds:word_4E61A ;~ 17C5:960C
cs=0x17c5;eip=0x009610; 	T(SAR(ax, cl));	// 102240                  sar     ax, cl ;~ 17C5:9610
cs=0x17c5;eip=0x009612; 	X(PUSH(ax));	// 102241                  push    ax ;~ 17C5:9612
cs=0x17c5;eip=0x009613; 	X(PUSH(word_4e2f8));	// 102242                  push    ds:word_4E2F8 ;~ 17C5:9613
cs=0x17c5;eip=0x009617; 	J(CALL(sub_333a8,0));	// 102243                  call    sub_333A8 ;~ 17C5:9617
cs=0x17c5;eip=0x00961a; 	T(ADD(sp, 4));	// 102244                  add     sp, 4 ;~ 17C5:961A
cs=0x17c5;eip=0x00961d; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 102245                  add     ax, [bp+arg_0] ;~ 17C5:961D
cs=0x17c5;eip=0x009620; 	X(PUSH(ax));	// 102246                  push    ax ;~ 17C5:9620
cs=0x17c5;eip=0x009621; 	J(CALL(sub_33194,0));	// 102247                  call    sub_33194 ;~ 17C5:9621
cs=0x17c5;eip=0x009624; 	T(ADD(sp, 6));	// 102248                  add     sp, 6 ;~ 17C5:9624
cs=0x17c5;eip=0x009627; 	X(word_4e61e = ax;);	// 102249                  mov     ds:word_4E61E, ax ;~ 17C5:9627
cs=0x17c5;eip=0x00962a; 	T(ax = 0x38;);	// 102250                  mov     ax, 38h ; '8' ;~ 17C5:962A
cs=0x17c5;eip=0x00962d; 	T(cl = 9;);	// 102251                  mov     cl, 9 ;~ 17C5:962D
cs=0x17c5;eip=0x00962f; 	T(SUB(cl, *(db*)(&word_4e61a)));	// 102252                  sub     cl, byte ptr ds:word_4E61A ;~ 17C5:962F
cs=0x17c5;eip=0x009633; 	T(SHL(ax, cl));	// 102253                  shl     ax, cl ;~ 17C5:9633
cs=0x17c5;eip=0x009635; 	T(CWD);	// 102254                  cwd ;~ 17C5:9635
cs=0x17c5;eip=0x009636; 	T(cx = 3;);	// 102255                  mov     cx, 3 ;~ 17C5:9636
cs=0x17c5;eip=0x009639; 	T(IDIV2(cx));	// 102256                  idiv    cx ;~ 17C5:9639
cs=0x17c5;eip=0x00963b; 	T(SHL(ax, 1));	// 102257                  shl     ax, 1 ;~ 17C5:963B
cs=0x17c5;eip=0x00963d; 	T(SHL(ax, 1));	// 102258                  shl     ax, 1 ;~ 17C5:963D
cs=0x17c5;eip=0x00963f; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 102259                  mov     [bp+var_6], ax ;~ 17C5:963F
cs=0x17c5;eip=0x009642; 	T(ax = 0x7FFF;);	// 102260                  mov     ax, 7FFFh ;~ 17C5:9642
cs=0x17c5;eip=0x009645; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_6))));	// 102261                  sub     ax, [bp+var_6] ;~ 17C5:9645
cs=0x17c5;eip=0x009648; 	X(PUSH(ax));	// 102262                  push    ax ;~ 17C5:9648
cs=0x17c5;eip=0x009649; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 102263                  push    [bp+var_6] ;~ 17C5:9649
cs=0x17c5;eip=0x00964c; 	T(ax = 0x4000;);	// 102264                  mov     ax, 4000h ;~ 17C5:964C
cs=0x17c5;eip=0x00964f; 	T(cl = *(db*)(&word_4e61a););	// 102265                  mov     cl, byte ptr ds:word_4E61A ;~ 17C5:964F
cs=0x17c5;eip=0x009653; 	T(SAR(ax, cl));	// 102266                  sar     ax, cl ;~ 17C5:9653
cs=0x17c5;eip=0x009655; 	X(PUSH(ax));	// 102267                  push    ax ;~ 17C5:9655
cs=0x17c5;eip=0x009656; 	X(PUSH(word_4e2f8));	// 102268                  push    ds:word_4E2F8 ;~ 17C5:9656
cs=0x17c5;eip=0x00965a; 	J(CALL(sub_333c0,0));	// 102269                  call    sub_333C0 ;~ 17C5:965A
cs=0x17c5;eip=0x00965d; 	T(ADD(sp, 4));	// 102270                  add     sp, 4 ;~ 17C5:965D
cs=0x17c5;eip=0x009660; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_2))));	// 102271                  mov     cx, [bp+arg_2] ;~ 17C5:9660
cs=0x17c5;eip=0x009663; 	T(SUB(cx, ax));	// 102272                  sub     cx, ax ;~ 17C5:9663
cs=0x17c5;eip=0x009665; 	X(PUSH(cx));	// 102273                  push    cx ;~ 17C5:9665
cs=0x17c5;eip=0x009666; 	J(CALL(sub_33194,0));	// 102274                  call    sub_33194 ;~ 17C5:9666
cs=0x17c5;eip=0x009669; 	T(ADD(sp, 6));	// 102275                  add     sp, 6 ;~ 17C5:9669
cs=0x17c5;eip=0x00966c; 	X(word_4e620 = ax;);	// 102276                  mov     ds:word_4E620, ax ;~ 17C5:966C
cs=0x17c5;eip=0x00966f; 	T(LES(bx, dword_528d6));	// 102277                  les     bx, ds:dword_528D6 ;~ 17C5:966F
cs=0x17c5;eip=0x009673; 	T(CMP(*(dw*)(raddr(es,bx+0x78)), 0));	// 102278                  cmp     word ptr es:[bx+78h], 0 ;~ 17C5:9673
cs=0x17c5;eip=0x009678; 	J(JZ(loc_2f8ae));	// 102279                  jz      short loc_2F8AE ;~ 17C5:9678
cs=0x17c5;eip=0x00967a; 	T(SUB(ax, ax));	// 102280                  sub     ax, ax ;~ 17C5:967A
cs=0x17c5;eip=0x00967c; 	J(JMP(loc_2f8b1));	// 102281                  jmp     short loc_2F8B1 ;~ 17C5:967C
loc_2f8ae:
	// 5994 
cs=0x17c5;eip=0x00967e; 	T(ax = 3;);	// 102285                  mov     ax, 3 ;~ 17C5:967E
loc_2f8b1:
	// 5995 
cs=0x17c5;eip=0x009681; 	X(PUSH(ax));	// 102288                  push    ax ;~ 17C5:9681
cs=0x17c5;eip=0x009682; 	J(CALL(sub_284ca,0));	// 102289                  call    sub_284CA ;~ 17C5:9682
cs=0x17c5;eip=0x009685; 	T(ADD(sp, 2));	// 102290                  add     sp, 2 ;~ 17C5:9685
cs=0x17c5;eip=0x009688; 	T(ax = 0x13;);	// 102291                  mov     ax, 13h ;~ 17C5:9688
cs=0x17c5;eip=0x00968b; 	X(PUSH(ax));	// 102292                  push    ax ;~ 17C5:968B
cs=0x17c5;eip=0x00968c; 	J(CALLF(sub_49acf,0));	// 102293                  call    far ptr sub_49ACF ;~ 17C5:968C
cs=0x17c5;eip=0x009691; 	T(ADD(sp, 2));	// 102295                  add     sp, 2 ;~ 17C5:9691
cs=0x17c5;eip=0x009694; 	T(ax = 9;);	// 102296                  mov     ax, 9 ;~ 17C5:9694
cs=0x17c5;eip=0x009697; 	T(SUB(ax, word_4e61a));	// 102297                  sub     ax, ds:word_4E61A ;~ 17C5:9697
cs=0x17c5;eip=0x00969b; 	X(PUSH(ax));	// 102298                  push    ax ;~ 17C5:969B
cs=0x17c5;eip=0x00969c; 	T(ax = word_4e620;);	// 102299                  mov     ax, ds:word_4E620 ;~ 17C5:969C
cs=0x17c5;eip=0x00969f; 	T(CWD);	// 102300                  cwd ;~ 17C5:969F
cs=0x17c5;eip=0x0096a0; 	T(SUB(ax, dx));	// 102301                  sub     ax, dx ;~ 17C5:96A0
cs=0x17c5;eip=0x0096a2; 	T(SAR(ax, 1));	// 102302                  sar     ax, 1 ;~ 17C5:96A2
cs=0x17c5;eip=0x0096a4; 	T(SUB(ax, 0x4000));	// 102303                  sub     ax, 4000h ;~ 17C5:96A4
cs=0x17c5;eip=0x0096a7; 	T(NEG(ax));	// 102304                  neg     ax ;~ 17C5:96A7
cs=0x17c5;eip=0x0096a9; 	X(PUSH(ax));	// 102305                  push    ax ;~ 17C5:96A9
cs=0x17c5;eip=0x0096aa; 	T(ax = word_4e61e;);	// 102306                  mov     ax, ds:word_4E61E ;~ 17C5:96AA
cs=0x17c5;eip=0x0096ad; 	T(CWD);	// 102307                  cwd ;~ 17C5:96AD
cs=0x17c5;eip=0x0096ae; 	T(SUB(ax, dx));	// 102308                  sub     ax, dx ;~ 17C5:96AE
cs=0x17c5;eip=0x0096b0; 	T(SAR(ax, 1));	// 102309                  sar     ax, 1 ;~ 17C5:96B0
cs=0x17c5;eip=0x0096b2; 	X(PUSH(ax));	// 102310                  push    ax ;~ 17C5:96B2
cs=0x17c5;eip=0x0096b3; 	X(PUSH(word_4e5ac));	// 102311                  push    ds:word_4E5AC ;~ 17C5:96B3
cs=0x17c5;eip=0x0096b7; 	J(CALL(sub_2968e,0));	// 102312                  call    sub_2968E ;~ 17C5:96B7
cs=0x17c5;eip=0x0096ba; 	T(ADD(sp, 8));	// 102314                  add     sp, 8 ;~ 17C5:96BA
cs=0x17c5;eip=0x0096bd; 	T(LES(bx, dword_4f220));	// 102315                  les     bx, ds:dword_4F220 ;~ 17C5:96BD
cs=0x17c5;eip=0x0096c1; 	T(CMP(*(dw*)(raddr(es,bx+0x38)), 2));	// 102316                  cmp     word ptr es:[bx+38h], 2 ;~ 17C5:96C1
cs=0x17c5;eip=0x0096c6; 	J(JNC(loc_2f906));	// 102317                  jnb     short loc_2F906 ;~ 17C5:96C6
cs=0x17c5;eip=0x0096c8; 	T(ax = 0x0C;);	// 102318                  mov     ax, 0Ch ;~ 17C5:96C8
cs=0x17c5;eip=0x0096cb; 	X(PUSH(ax));	// 102319                  push    ax ;~ 17C5:96CB
cs=0x17c5;eip=0x0096cc; 	J(CALLF(sub_49acf,0));	// 102320                  call    far ptr sub_49ACF ;~ 17C5:96CC
cs=0x17c5;eip=0x0096d1; 	T(ADD(sp, 2));	// 102322                  add     sp, 2 ;~ 17C5:96D1
cs=0x17c5;eip=0x0096d4; 	J(JMP(loc_2f912));	// 102323                  jmp     short loc_2F912 ;~ 17C5:96D4
loc_2f906:
	// 5996 
cs=0x17c5;eip=0x0096d6; 	T(ax = 0x10;);	// 102327                  mov     ax, 10h ;~ 17C5:96D6
cs=0x17c5;eip=0x0096d9; 	X(PUSH(ax));	// 102328                  push    ax ;~ 17C5:96D9
cs=0x17c5;eip=0x0096da; 	J(CALLF(sub_49acf,0));	// 102329                  call    far ptr sub_49ACF ;~ 17C5:96DA
cs=0x17c5;eip=0x0096df; 	T(ADD(sp, 2));	// 102331                  add     sp, 2 ;~ 17C5:96DF
loc_2f912:
	// 5997 
cs=0x17c5;eip=0x0096e2; 	T(al = byte_527d0;);	// 102334                  mov     al, ds:byte_527D0 ;~ 17C5:96E2
cs=0x17c5;eip=0x0096e5; 	T(CBW);	// 102335                  cbw ;~ 17C5:96E5
cs=0x17c5;eip=0x0096e6; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 102336                  mov     [bp+var_A], ax ;~ 17C5:96E6
cs=0x17c5;eip=0x0096e9; 	J(CALLF(sub_49a7f,0));	// 102337                  call    far ptr sub_49A7F ;~ 17C5:96E9
cs=0x17c5;eip=0x0096ee; 	X(byte_527d0 = al;);	// 102339                  mov     ds:byte_527D0, al ;~ 17C5:96EE
cs=0x17c5;eip=0x0096f1; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 1));	// 102340                  mov     [bp+var_6], 1 ;~ 17C5:96F1
cs=0x17c5;eip=0x0096f6; 	J(JMP(loc_2f92b));	// 102341                  jmp     short loc_2F92B ;~ 17C5:96F6
loc_2f928:
	// 5998 
cs=0x17c5;eip=0x0096f8; 	X(INC(*(dw*)(raddr(ss,bp+var_6))));	// 102345                  inc     [bp+var_6] ;~ 17C5:96F8
loc_2f92b:
	// 5999 
cs=0x17c5;eip=0x0096fb; 	T(ax = word_52102;);	// 102348                  mov     ax, ds:word_52102 ;~ 17C5:96FB
cs=0x17c5;eip=0x0096fe; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), ax));	// 102349                  cmp     [bp+var_6], ax ;~ 17C5:96FE
cs=0x17c5;eip=0x009701; 	J(JL(loc_2f936));	// 102350                  jl      short loc_2F936 ;~ 17C5:9701
cs=0x17c5;eip=0x009703; 	J(JMP(loc_2f9ee));	// 102351                  jmp     loc_2F9EE ;~ 17C5:9703
loc_2f936:
	// 6000 
cs=0x17c5;eip=0x009706; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_6))));	// 102355                  mov     si, [bp+var_6] ;~ 17C5:9706
cs=0x17c5;eip=0x009709; 	T(cl = 4;);	// 102356                  mov     cl, 4 ;~ 17C5:9709
cs=0x17c5;eip=0x00970b; 	T(SHL(si, cl));	// 102357                  shl     si, cl ;~ 17C5:970B
cs=0x17c5;eip=0x00970d; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4E)), 0));	// 102358                  cmp     word ptr [si-7E4Eh], 0 ;~ 17C5:970D
cs=0x17c5;eip=0x009712; 	J(JZ(loc_2f984));	// 102359                  jz      short loc_2F984 ;~ 17C5:9712
cs=0x17c5;eip=0x009714; 	T(TEST(*(raddr(ds,si-0x7E4C)), 0x80));	// 102360                  test    byte ptr [si-7E4Ch], 80h ;~ 17C5:9714
cs=0x17c5;eip=0x009719; 	J(JNZ(loc_2f984));	// 102361                  jnz     short loc_2F984 ;~ 17C5:9719
cs=0x17c5;eip=0x00971b; 	T(ax = bp+var_4);	// 102362                  lea     ax, [bp+var_4] ;~ 17C5:971B
cs=0x17c5;eip=0x00971e; 	X(PUSH(ax));	// 102363                  push    ax ;~ 17C5:971E
cs=0x17c5;eip=0x00971f; 	T(ax = bp+var_2);	// 102364                  lea     ax, [bp+var_2] ;~ 17C5:971F
cs=0x17c5;eip=0x009722; 	X(PUSH(ax));	// 102365                  push    ax ;~ 17C5:9722
cs=0x17c5;eip=0x009723; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 102366                  push    word ptr [si-7E50h] ;~ 17C5:9723
cs=0x17c5;eip=0x009727; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 102367                  push    word ptr [si-7E52h] ;~ 17C5:9727
cs=0x17c5;eip=0x00972b; 	J(CALL(sub_2fc1c,0));	// 102368                  call    sub_2FC1C ;~ 17C5:972B
cs=0x17c5;eip=0x00972e; 	T(ADD(sp, 8));	// 102369                  add     sp, 8 ;~ 17C5:972E
cs=0x17c5;eip=0x009731; 	T(OR(ax, ax));	// 102370                  or      ax, ax ;~ 17C5:9731
cs=0x17c5;eip=0x009733; 	J(JZ(loc_2f984));	// 102371                  jz      short loc_2F984 ;~ 17C5:9733
cs=0x17c5;eip=0x009735; 	T(SUB(ax, ax));	// 102372                  sub     ax, ax ;~ 17C5:9735
cs=0x17c5;eip=0x009737; 	X(PUSH(ax));	// 102373                  push    ax ;~ 17C5:9737
cs=0x17c5;eip=0x009738; 	T(ax = 4;);	// 102374                  mov     ax, 4 ;~ 17C5:9738
cs=0x17c5;eip=0x00973b; 	X(PUSH(ax));	// 102375                  push    ax ;~ 17C5:973B
cs=0x17c5;eip=0x00973c; 	X(PUSH(ax));	// 102376                  push    ax ;~ 17C5:973C
cs=0x17c5;eip=0x00973d; 	T(SUB(ax, ax));	// 102377                  sub     ax, ax ;~ 17C5:973D
cs=0x17c5;eip=0x00973f; 	X(PUSH(ax));	// 102378                  push    ax ;~ 17C5:973F
cs=0x17c5;eip=0x009740; 	T(ax = 0x0A4;);	// 102379                  mov     ax, 0A4h ;~ 17C5:9740
cs=0x17c5;eip=0x009743; 	X(PUSH(ax));	// 102380                  push    ax ;~ 17C5:9743
cs=0x17c5;eip=0x009744; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 102381                  mov     ax, [bp+var_4] ;~ 17C5:9744
cs=0x17c5;eip=0x009747; 	T(DEC(ax));	// 102382                  dec     ax ;~ 17C5:9747
cs=0x17c5;eip=0x009748; 	X(PUSH(ax));	// 102383                  push    ax ;~ 17C5:9748
cs=0x17c5;eip=0x009749; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 102384                  mov     ax, [bp+var_2] ;~ 17C5:9749
cs=0x17c5;eip=0x00974c; 	T(DEC(ax));	// 102385                  dec     ax ;~ 17C5:974C
cs=0x17c5;eip=0x00974d; 	X(PUSH(ax));	// 102386                  push    ax ;~ 17C5:974D
cs=0x17c5;eip=0x00974e; 	J(CALL(sub_30af8,0));	// 102387                  call    sub_30AF8 ;~ 17C5:974E
cs=0x17c5;eip=0x009751; 	T(ADD(sp, 0x0E));	// 102389                  add     sp, 0Eh ;~ 17C5:9751
loc_2f984:
	// 6001 
cs=0x17c5;eip=0x009754; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_6))));	// 102393                  mov     bx, [bp+var_6] ;~ 17C5:9754
cs=0x17c5;eip=0x009757; 	T(cl = 4;);	// 102394                  mov     cl, 4 ;~ 17C5:9757
cs=0x17c5;eip=0x009759; 	T(SHL(bx, cl));	// 102395                  shl     bx, cl ;~ 17C5:9759
cs=0x17c5;eip=0x00975b; 	T(MOV(si, *(dw*)(raddr(ds,bx-0x7E4C))));	// 102396                  mov     si, [bx-7E4Ch] ;~ 17C5:975B
cs=0x17c5;eip=0x00975f; 	T(ax = si;);	// 102397                  mov     ax, si ;~ 17C5:975F
cs=0x17c5;eip=0x009761; 	T(AND(ax, 0x481));	// 102398                  and     ax, 481h ;~ 17C5:9761
cs=0x17c5;eip=0x009764; 	T(CMP(ax, 0x401));	// 102399                  cmp     ax, 401h ;~ 17C5:9764
cs=0x17c5;eip=0x009767; 	J(JZ(loc_2f99f));	// 102400                  jz      short loc_2F99F ;~ 17C5:9767
cs=0x17c5;eip=0x009769; 	T(TEST(si, 0x200));	// 102401                  test    si, 200h ;~ 17C5:9769
cs=0x17c5;eip=0x00976d; 	J(JZ(loc_2f9eb));	// 102402                  jz      short loc_2F9EB ;~ 17C5:976D
loc_2f99f:
	// 6002 
cs=0x17c5;eip=0x00976f; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_6))));	// 102405                  mov     si, [bp+var_6] ;~ 17C5:976F
cs=0x17c5;eip=0x009772; 	T(cl = 4;);	// 102406                  mov     cl, 4 ;~ 17C5:9772
cs=0x17c5;eip=0x009774; 	T(SHL(si, cl));	// 102407                  shl     si, cl ;~ 17C5:9774
cs=0x17c5;eip=0x009776; 	T(ax = bp+var_4);	// 102408                  lea     ax, [bp+var_4] ;~ 17C5:9776
cs=0x17c5;eip=0x009779; 	X(PUSH(ax));	// 102409                  push    ax ;~ 17C5:9779
cs=0x17c5;eip=0x00977a; 	T(ax = bp+var_2);	// 102410                  lea     ax, [bp+var_2] ;~ 17C5:977A
cs=0x17c5;eip=0x00977d; 	X(PUSH(ax));	// 102411                  push    ax ;~ 17C5:977D
cs=0x17c5;eip=0x00977e; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 102412                  push    word ptr [si-7E50h] ;~ 17C5:977E
cs=0x17c5;eip=0x009782; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 102413                  push    word ptr [si-7E52h] ;~ 17C5:9782
cs=0x17c5;eip=0x009786; 	J(CALL(sub_2fc1c,0));	// 102414                  call    sub_2FC1C ;~ 17C5:9786
cs=0x17c5;eip=0x009789; 	T(ADD(sp, 8));	// 102415                  add     sp, 8 ;~ 17C5:9789
cs=0x17c5;eip=0x00978c; 	T(OR(ax, ax));	// 102416                  or      ax, ax ;~ 17C5:978C
cs=0x17c5;eip=0x00978e; 	J(JZ(loc_2f9eb));	// 102417                  jz      short loc_2F9EB ;~ 17C5:978E
cs=0x17c5;eip=0x009790; 	T(SUB(ax, ax));	// 102418                  sub     ax, ax ;~ 17C5:9790
cs=0x17c5;eip=0x009792; 	X(PUSH(ax));	// 102419                  push    ax ;~ 17C5:9792
cs=0x17c5;eip=0x009793; 	T(ax = 4;);	// 102420                  mov     ax, 4 ;~ 17C5:9793
cs=0x17c5;eip=0x009796; 	X(PUSH(ax));	// 102421                  push    ax ;~ 17C5:9796
cs=0x17c5;eip=0x009797; 	X(PUSH(ax));	// 102422                  push    ax ;~ 17C5:9797
cs=0x17c5;eip=0x009798; 	T(SUB(ax, ax));	// 102423                  sub     ax, ax ;~ 17C5:9798
cs=0x17c5;eip=0x00979a; 	X(PUSH(ax));	// 102424                  push    ax ;~ 17C5:979A
cs=0x17c5;eip=0x00979b; 	T(CMP(*(db*)(&word_48b66), 0));	// 102425                  cmp     byte ptr word_48B66, 0 ;~ 17C5:979B
cs=0x17c5;eip=0x0097a0; 	J(JZ(loc_2f9d7));	// 102426                  jz      short loc_2F9D7 ;~ 17C5:97A0
cs=0x17c5;eip=0x0097a2; 	T(ax = 0x0AC;);	// 102427                  mov     ax, 0ACh ;~ 17C5:97A2
cs=0x17c5;eip=0x0097a5; 	J(JMP(loc_2f9da));	// 102428                  jmp     short loc_2F9DA ;~ 17C5:97A5
loc_2f9d7:
	// 6003 
cs=0x17c5;eip=0x0097a7; 	T(ax = 0x0B0;);	// 102432                  mov     ax, 0B0h ;~ 17C5:97A7
loc_2f9da:
	// 6004 
cs=0x17c5;eip=0x0097aa; 	X(PUSH(ax));	// 102435                  push    ax ;~ 17C5:97AA
cs=0x17c5;eip=0x0097ab; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 102436                  mov     ax, [bp+var_4] ;~ 17C5:97AB
cs=0x17c5;eip=0x0097ae; 	T(DEC(ax));	// 102437                  dec     ax ;~ 17C5:97AE
cs=0x17c5;eip=0x0097af; 	X(PUSH(ax));	// 102438                  push    ax ;~ 17C5:97AF
cs=0x17c5;eip=0x0097b0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 102439                  mov     ax, [bp+var_2] ;~ 17C5:97B0
cs=0x17c5;eip=0x0097b3; 	T(DEC(ax));	// 102440                  dec     ax ;~ 17C5:97B3
cs=0x17c5;eip=0x0097b4; 	X(PUSH(ax));	// 102441                  push    ax ;~ 17C5:97B4
cs=0x17c5;eip=0x0097b5; 	J(CALL(sub_30af8,0));	// 102442                  call    sub_30AF8 ;~ 17C5:97B5
cs=0x17c5;eip=0x0097b8; 	T(ADD(sp, 0x0E));	// 102444                  add     sp, 0Eh ;~ 17C5:97B8
loc_2f9eb:
	// 6005 
cs=0x17c5;eip=0x0097bb; 	J(JMP(loc_2f928));	// 102448                  jmp     loc_2F928 ;~ 17C5:97BB
loc_2f9ee:
	// 6006 
cs=0x17c5;eip=0x0097be; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0));	// 102452                  mov     [bp+var_6], 0 ;~ 17C5:97BE
cs=0x17c5;eip=0x0097c3; 	J(JMP(loc_2f9f8));	// 102453                  jmp     short loc_2F9F8 ;~ 17C5:97C3
loc_2f9f5:
	// 6007 
cs=0x17c5;eip=0x0097c5; 	X(INC(*(dw*)(raddr(ss,bp+var_6))));	// 102457                  inc     [bp+var_6] ;~ 17C5:97C5
loc_2f9f8:
	// 6008 
cs=0x17c5;eip=0x0097c8; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), 2));	// 102460                  cmp     [bp+var_6], 2 ;~ 17C5:97C8
cs=0x17c5;eip=0x0097cc; 	J(JGE(loc_2fa5a));	// 102461                  jge     short loc_2FA5A ;~ 17C5:97CC
cs=0x17c5;eip=0x0097ce; 	T(ax = 0x4000;);	// 102462                  mov     ax, 4000h ;~ 17C5:97CE
cs=0x17c5;eip=0x0097d1; 	T(MOV(cl, *(raddr(ss,bp+var_6))));	// 102463                  mov     cl, byte ptr [bp+var_6] ;~ 17C5:97D1
cs=0x17c5;eip=0x0097d4; 	T(SAR(ax, cl));	// 102464                  sar     ax, cl ;~ 17C5:97D4
cs=0x17c5;eip=0x0097d6; 	T(TEST(word_4f42e, ax));	// 102465                  test    ds:word_4F42E, ax ;~ 17C5:97D6
cs=0x17c5;eip=0x0097da; 	J(JNZ(loc_2fa58));	// 102466                  jnz     short loc_2FA58 ;~ 17C5:97DA
cs=0x17c5;eip=0x0097dc; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_6))));	// 102467                  mov     si, [bp+var_6] ;~ 17C5:97DC
cs=0x17c5;eip=0x0097df; 	T(cl = 2;);	// 102468                  mov     cl, 2 ;~ 17C5:97DF
cs=0x17c5;eip=0x0097e1; 	T(SHL(si, cl));	// 102469                  shl     si, cl ;~ 17C5:97E1
cs=0x17c5;eip=0x0097e3; 	T(ax = bp+var_4);	// 102470                  lea     ax, [bp+var_4] ;~ 17C5:97E3
cs=0x17c5;eip=0x0097e6; 	X(PUSH(ax));	// 102471                  push    ax ;~ 17C5:97E6
cs=0x17c5;eip=0x0097e7; 	T(ax = bp+var_2);	// 102472                  lea     ax, [bp+var_2] ;~ 17C5:97E7
cs=0x17c5;eip=0x0097ea; 	X(PUSH(ax));	// 102473                  push    ax ;~ 17C5:97EA
cs=0x17c5;eip=0x0097eb; 	X(PUSH(*(dw*)(raddr(ds,si+0x178))));	// 102474                  push    word ptr [si+178h] ;~ 17C5:97EB
cs=0x17c5;eip=0x0097ef; 	X(PUSH(*(dw*)(raddr(ds,si+0x176))));	// 102475                  push    word ptr [si+176h] ;~ 17C5:97EF
cs=0x17c5;eip=0x0097f3; 	J(CALL(sub_2fc1c,0));	// 102476                  call    sub_2FC1C ;~ 17C5:97F3
cs=0x17c5;eip=0x0097f6; 	T(ADD(sp, 8));	// 102477                  add     sp, 8 ;~ 17C5:97F6
cs=0x17c5;eip=0x0097f9; 	T(OR(ax, ax));	// 102478                  or      ax, ax ;~ 17C5:97F9
cs=0x17c5;eip=0x0097fb; 	J(JZ(loc_2fa58));	// 102479                  jz      short loc_2FA58 ;~ 17C5:97FB
cs=0x17c5;eip=0x0097fd; 	T(SUB(ax, ax));	// 102480                  sub     ax, ax ;~ 17C5:97FD
cs=0x17c5;eip=0x0097ff; 	X(PUSH(ax));	// 102481                  push    ax ;~ 17C5:97FF
cs=0x17c5;eip=0x009800; 	T(ax = 4;);	// 102482                  mov     ax, 4 ;~ 17C5:9800
cs=0x17c5;eip=0x009803; 	X(PUSH(ax));	// 102483                  push    ax ;~ 17C5:9803
cs=0x17c5;eip=0x009804; 	X(PUSH(ax));	// 102484                  push    ax ;~ 17C5:9804
cs=0x17c5;eip=0x009805; 	T(SUB(ax, ax));	// 102485                  sub     ax, ax ;~ 17C5:9805
cs=0x17c5;eip=0x009807; 	X(PUSH(ax));	// 102486                  push    ax ;~ 17C5:9807
cs=0x17c5;eip=0x009808; 	T(CMP(*(db*)(&word_48b66), 0));	// 102487                  cmp     byte ptr word_48B66, 0 ;~ 17C5:9808
cs=0x17c5;eip=0x00980d; 	J(JZ(loc_2fa44));	// 102488                  jz      short loc_2FA44 ;~ 17C5:980D
cs=0x17c5;eip=0x00980f; 	T(ax = 0x0B4;);	// 102489                  mov     ax, 0B4h ;~ 17C5:980F
cs=0x17c5;eip=0x009812; 	J(JMP(loc_2fa47));	// 102490                  jmp     short loc_2FA47 ;~ 17C5:9812
loc_2fa44:
	// 6009 
cs=0x17c5;eip=0x009814; 	T(ax = 0x0A8;);	// 102494                  mov     ax, 0A8h ;~ 17C5:9814
loc_2fa47:
	// 6010 
cs=0x17c5;eip=0x009817; 	X(PUSH(ax));	// 102497                  push    ax ;~ 17C5:9817
cs=0x17c5;eip=0x009818; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 102498                  mov     ax, [bp+var_4] ;~ 17C5:9818
cs=0x17c5;eip=0x00981b; 	T(DEC(ax));	// 102499                  dec     ax ;~ 17C5:981B
cs=0x17c5;eip=0x00981c; 	X(PUSH(ax));	// 102500                  push    ax ;~ 17C5:981C
cs=0x17c5;eip=0x00981d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 102501                  mov     ax, [bp+var_2] ;~ 17C5:981D
cs=0x17c5;eip=0x009820; 	T(DEC(ax));	// 102502                  dec     ax ;~ 17C5:9820
cs=0x17c5;eip=0x009821; 	X(PUSH(ax));	// 102503                  push    ax ;~ 17C5:9821
cs=0x17c5;eip=0x009822; 	J(CALL(sub_30af8,0));	// 102504                  call    sub_30AF8 ;~ 17C5:9822
cs=0x17c5;eip=0x009825; 	T(ADD(sp, 0x0E));	// 102506                  add     sp, 0Eh ;~ 17C5:9825
loc_2fa58:
	// 6011 
cs=0x17c5;eip=0x009828; 	J(JMP(loc_2f9f5));	// 102510                  jmp     short loc_2F9F5 ;~ 17C5:9828
loc_2fa5a:
	// 6012 
cs=0x17c5;eip=0x00982a; 	T(MOV(al, *(raddr(ss,bp+var_a))));	// 102514                  mov     al, byte ptr [bp+var_A] ;~ 17C5:982A
cs=0x17c5;eip=0x00982d; 	X(byte_527d0 = al;);	// 102515                  mov     ds:byte_527D0, al ;~ 17C5:982D
cs=0x17c5;eip=0x009830; 	J(CALLF(sub_49a7f,0));	// 102516                  call    far ptr sub_49A7F ;~ 17C5:9830
cs=0x17c5;eip=0x009835; 	T(OR(al, al));	// 102518                  or      al, al ;~ 17C5:9835
cs=0x17c5;eip=0x009837; 	J(JNZ(loc_2fa6e));	// 102519                  jnz     short loc_2FA6E ;~ 17C5:9837
cs=0x17c5;eip=0x009839; 	J(CALL(sub_30b64,0));	// 102520                  call    sub_30B64 ;~ 17C5:9839
cs=0x17c5;eip=0x00983c; 	J(JMP(loc_2fa9a));	// 102522                  jmp     short loc_2FA9A ;~ 17C5:983C
loc_2fa6e:
	// 6013 
cs=0x17c5;eip=0x00983e; 	T(ax = 0x38;);	// 102526                  mov     ax, 38h ; '8' ;~ 17C5:983E
cs=0x17c5;eip=0x009841; 	X(PUSH(ax));	// 102527                  push    ax ;~ 17C5:9841
cs=0x17c5;eip=0x009842; 	T(ax = 0x48;);	// 102528                  mov     ax, 48h ; 'H' ;~ 17C5:9842
cs=0x17c5;eip=0x009845; 	X(PUSH(ax));	// 102529                  push    ax ;~ 17C5:9845
cs=0x17c5;eip=0x009846; 	T(ax = 0x70;);	// 102530                  mov     ax, 70h ; 'p' ;~ 17C5:9846
cs=0x17c5;eip=0x009849; 	X(PUSH(ax));	// 102531                  push    ax ;~ 17C5:9849
cs=0x17c5;eip=0x00984a; 	T(ax = 0x18;);	// 102532                  mov     ax, 18h ;~ 17C5:984A
cs=0x17c5;eip=0x00984d; 	X(PUSH(ax));	// 102533                  push    ax ;~ 17C5:984D
cs=0x17c5;eip=0x00984e; 	T(bx = word_4e594;);	// 102534                  mov     bx, ds:word_4E594 ;~ 17C5:984E
cs=0x17c5;eip=0x009852; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 102535                  push    word ptr [bx] ;~ 17C5:9852
cs=0x17c5;eip=0x009854; 	T(ax = 0x70;);	// 102536                  mov     ax, 70h ; 'p' ;~ 17C5:9854
cs=0x17c5;eip=0x009857; 	X(PUSH(ax));	// 102537                  push    ax ;~ 17C5:9857
cs=0x17c5;eip=0x009858; 	T(ax = 0x18;);	// 102538                  mov     ax, 18h ;~ 17C5:9858
cs=0x17c5;eip=0x00985b; 	X(PUSH(ax));	// 102539                  push    ax ;~ 17C5:985B
cs=0x17c5;eip=0x00985c; 	T(bx = word_4e57c;);	// 102540                  mov     bx, ds:word_4E57C ;~ 17C5:985C
cs=0x17c5;eip=0x009860; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 102541                  push    word ptr [bx] ;~ 17C5:9860
cs=0x17c5;eip=0x009862; 	J(CALLF(sub_49a70,0));	// 102542                  call    far ptr sub_49A70 ;~ 17C5:9862
cs=0x17c5;eip=0x009867; 	T(ADD(sp, 0x10));	// 102544                  add     sp, 10h ;~ 17C5:9867
loc_2fa9a:
	// 6014 
cs=0x17c5;eip=0x00986a; 	J(CALL(sub_30b92,0));	// 102547                  call    sub_30B92 ;~ 17C5:986A
cs=0x17c5;eip=0x00986d; 	J(CALL(sub_27ba1,0));	// 102549                  call    sub_27BA1 ;~ 17C5:986D
loc_2faa0:
	// 6015 
cs=0x17c5;eip=0x009870; 	X(POP(si));	// 102552                  pop     si ;~ 17C5:9870
cs=0x17c5;eip=0x009871; 	T(sp = bp;);	// 102553                  mov     sp, bp ;~ 17C5:9871
cs=0x17c5;eip=0x009873; 	X(POP(bp));	// 102554                  pop     bp ;~ 17C5:9873
cs=0x17c5;eip=0x009874; 	J(RETN(0));	// 102555                  retn ;~ 17C5:9874

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2f810: 	goto loc_2f810;
        case m2c::kloc_2f8ae: 	goto loc_2f8ae;
        case m2c::kloc_2f8b1: 	goto loc_2f8b1;
        case m2c::kloc_2f906: 	goto loc_2f906;
        case m2c::kloc_2f912: 	goto loc_2f912;
        case m2c::kloc_2f928: 	goto loc_2f928;
        case m2c::kloc_2f92b: 	goto loc_2f92b;
        case m2c::kloc_2f936: 	goto loc_2f936;
        case m2c::kloc_2f984: 	goto loc_2f984;
        case m2c::kloc_2f99f: 	goto loc_2f99f;
        case m2c::kloc_2f9d7: 	goto loc_2f9d7;
        case m2c::kloc_2f9da: 	goto loc_2f9da;
        case m2c::kloc_2f9eb: 	goto loc_2f9eb;
        case m2c::kloc_2f9ee: 	goto loc_2f9ee;
        case m2c::kloc_2f9f5: 	goto loc_2f9f5;
        case m2c::kloc_2f9f8: 	goto loc_2f9f8;
        case m2c::kloc_2fa44: 	goto loc_2fa44;
        case m2c::kloc_2fa47: 	goto loc_2fa47;
        case m2c::kloc_2fa58: 	goto loc_2fa58;
        case m2c::kloc_2fa5a: 	goto loc_2fa5a;
        case m2c::kloc_2fa6e: 	goto loc_2fa6e;
        case m2c::kloc_2fa9a: 	goto loc_2fa9a;
        case m2c::kloc_2faa0: 	goto loc_2faa0;
        case m2c::ksub_2f7f9: 	goto sub_2f7f9;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2faa5(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2faa5:
    _begin:
cs=0x17c5;eip=0x009875; 	X(PUSH(bp));	// 102565                  push    bp ;~ 17C5:9875
cs=0x17c5;eip=0x009876; 	T(bp = sp;);	// 102566                  mov     bp, sp ;~ 17C5:9876
cs=0x17c5;eip=0x009878; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 102567                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:9878
cs=0x17c5;eip=0x00987d; 	J(JZ(loc_2fab5));	// 102568                  jz      short loc_2FAB5 ;~ 17C5:987D
cs=0x17c5;eip=0x00987f; 	X(DEC(word_4992e));	// 102569                  dec     word_4992E ;~ 17C5:987F
cs=0x17c5;eip=0x009883; 	J(JMP(loc_2fae0));	// 102570                  jmp     short loc_2FAE0 ;~ 17C5:9883
loc_2fab5:
	// 6016 
cs=0x17c5;eip=0x009885; 	T(CMP(word_522ca, 0));	// 102574                  cmp     ds:word_522CA, 0 ;~ 17C5:9885
cs=0x17c5;eip=0x00988a; 	J(JNZ(loc_2fad5));	// 102575                  jnz     short loc_2FAD5 ;~ 17C5:988A
cs=0x17c5;eip=0x00988c; 	T(CMP(word_4e61a, 9));	// 102576                  cmp     ds:word_4E61A, 9 ;~ 17C5:988C
cs=0x17c5;eip=0x009891; 	J(JGE(loc_2fad5));	// 102577                  jge     short loc_2FAD5 ;~ 17C5:9891
cs=0x17c5;eip=0x009893; 	X(INC(word_4e61a));	// 102578                  inc     ds:word_4E61A ;~ 17C5:9893
cs=0x17c5;eip=0x009897; 	X(PUSH(word_52100));	// 102579                  push    ds:word_52100 ;~ 17C5:9897
cs=0x17c5;eip=0x00989b; 	X(PUSH(word_520f0));	// 102580                  push    ds:word_520F0 ;~ 17C5:989B
cs=0x17c5;eip=0x00989f; 	J(CALL(sub_2f7f9,0));	// 102581                  call    sub_2F7F9 ;~ 17C5:989F
cs=0x17c5;eip=0x0098a2; 	T(ADD(sp, 4));	// 102582                  add     sp, 4 ;~ 17C5:98A2
loc_2fad5:
	// 6017 
cs=0x17c5;eip=0x0098a5; 	T(CMP(word_522ca, 1));	// 102586                  cmp     ds:word_522CA, 1 ;~ 17C5:98A5
cs=0x17c5;eip=0x0098aa; 	J(JNZ(loc_2fae0));	// 102587                  jnz     short loc_2FAE0 ;~ 17C5:98AA
cs=0x17c5;eip=0x0098ac; 	X(INC(word_4e61c));	// 102588                  inc     ds:word_4E61C ;~ 17C5:98AC
loc_2fae0:
	// 6018 
cs=0x17c5;eip=0x0098b0; 	T(sp = bp;);	// 102592                  mov     sp, bp ;~ 17C5:98B0
cs=0x17c5;eip=0x0098b2; 	X(POP(bp));	// 102593                  pop     bp ;~ 17C5:98B2
cs=0x17c5;eip=0x0098b3; 	J(RETN(0));	// 102594                  retn ;~ 17C5:98B3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2fab5: 	goto loc_2fab5;
        case m2c::kloc_2fad5: 	goto loc_2fad5;
        case m2c::kloc_2fae0: 	goto loc_2fae0;
        case m2c::ksub_2faa5: 	goto sub_2faa5;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2fae4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2fae4:
    _begin:
cs=0x17c5;eip=0x0098b4; 	X(PUSH(bp));	// 102603                  push    bp ;~ 17C5:98B4
cs=0x17c5;eip=0x0098b5; 	T(bp = sp;);	// 102604                  mov     bp, sp ;~ 17C5:98B5
cs=0x17c5;eip=0x0098b7; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 102605                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:98B7
cs=0x17c5;eip=0x0098bc; 	J(JZ(loc_2faf4));	// 102606                  jz      short loc_2FAF4 ;~ 17C5:98BC
cs=0x17c5;eip=0x0098be; 	X(INC(word_4992e));	// 102607                  inc     word_4992E ;~ 17C5:98BE
cs=0x17c5;eip=0x0098c2; 	J(JMP(loc_2fb26));	// 102608                  jmp     short loc_2FB26 ;~ 17C5:98C2
loc_2faf4:
	// 6019 
cs=0x17c5;eip=0x0098c4; 	T(CMP(word_522ca, 0));	// 102612                  cmp     ds:word_522CA, 0 ;~ 17C5:98C4
cs=0x17c5;eip=0x0098c9; 	J(JNZ(loc_2fb14));	// 102613                  jnz     short loc_2FB14 ;~ 17C5:98C9
cs=0x17c5;eip=0x0098cb; 	T(CMP(word_4e61a, 2));	// 102614                  cmp     ds:word_4E61A, 2 ;~ 17C5:98CB
cs=0x17c5;eip=0x0098d0; 	J(JLE(loc_2fb14));	// 102615                  jle     short loc_2FB14 ;~ 17C5:98D0
cs=0x17c5;eip=0x0098d2; 	X(DEC(word_4e61a));	// 102616                  dec     ds:word_4E61A ;~ 17C5:98D2
cs=0x17c5;eip=0x0098d6; 	X(PUSH(word_52100));	// 102617                  push    ds:word_52100 ;~ 17C5:98D6
cs=0x17c5;eip=0x0098da; 	X(PUSH(word_520f0));	// 102618                  push    ds:word_520F0 ;~ 17C5:98DA
cs=0x17c5;eip=0x0098de; 	J(CALL(sub_2f7f9,0));	// 102619                  call    sub_2F7F9 ;~ 17C5:98DE
cs=0x17c5;eip=0x0098e1; 	T(ADD(sp, 4));	// 102620                  add     sp, 4 ;~ 17C5:98E1
loc_2fb14:
	// 6020 
cs=0x17c5;eip=0x0098e4; 	T(CMP(word_522ca, 1));	// 102624                  cmp     ds:word_522CA, 1 ;~ 17C5:98E4
cs=0x17c5;eip=0x0098e9; 	J(JNZ(loc_2fb26));	// 102625                  jnz     short loc_2FB26 ;~ 17C5:98E9
cs=0x17c5;eip=0x0098eb; 	T(CMP(word_4e61c, 0));	// 102626                  cmp     ds:word_4E61C, 0 ;~ 17C5:98EB
cs=0x17c5;eip=0x0098f0; 	J(JZ(loc_2fb26));	// 102627                  jz      short loc_2FB26 ;~ 17C5:98F0
cs=0x17c5;eip=0x0098f2; 	X(DEC(word_4e61c));	// 102628                  dec     ds:word_4E61C ;~ 17C5:98F2
loc_2fb26:
	// 6021 
cs=0x17c5;eip=0x0098f6; 	T(sp = bp;);	// 102632                  mov     sp, bp ;~ 17C5:98F6
cs=0x17c5;eip=0x0098f8; 	X(POP(bp));	// 102633                  pop     bp ;~ 17C5:98F8
cs=0x17c5;eip=0x0098f9; 	J(RETN(0));	// 102634                  retn ;~ 17C5:98F9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2faf4: 	goto loc_2faf4;
        case m2c::kloc_2fb14: 	goto loc_2fb14;
        case m2c::kloc_2fb26: 	goto loc_2fb26;
        case m2c::ksub_2fae4: 	goto sub_2fae4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2fb2a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2fb2a:
    _begin:
#undef arg_0
#define arg_0 4
	// 102645 arg_0           = word ptr  4 ;~ 17C5:98FA
cs=0x17c5;eip=0x0098fa; 	X(PUSH(bp));	// 102647                  push    bp ;~ 17C5:98FA
cs=0x17c5;eip=0x0098fb; 	T(bp = sp;);	// 102648                  mov     bp, sp ;~ 17C5:98FB
cs=0x17c5;eip=0x0098fd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 102649                  mov     ax, [bp+arg_0] ;~ 17C5:98FD
cs=0x17c5;eip=0x009900; 	T(SUB(ax, word_4e61e));	// 102650                  sub     ax, ds:word_4E61E ;~ 17C5:9900
cs=0x17c5;eip=0x009904; 	T(cl = 0x0A;);	// 102651                  mov     cl, 0Ah ;~ 17C5:9904
cs=0x17c5;eip=0x009906; 	T(SUB(cl, *(db*)(&word_4e61a)));	// 102652                  sub     cl, byte ptr ds:word_4E61A ;~ 17C5:9906
cs=0x17c5;eip=0x00990a; 	T(SAR(ax, cl));	// 102653                  sar     ax, cl ;~ 17C5:990A
cs=0x17c5;eip=0x00990c; 	T(ADD(ax, 0x3C));	// 102654                  add     ax, 3Ch ; '<' ;~ 17C5:990C
cs=0x17c5;eip=0x00990f; 	J({;});	// 102655                  jmp     short $+2 ;~ 17C5:990F
loc_2fb41:
	// 6022 
cs=0x17c5;eip=0x009911; 	T(sp = bp;);	// 102659                  mov     sp, bp ;~ 17C5:9911
cs=0x17c5;eip=0x009913; 	X(POP(bp));	// 102660                  pop     bp ;~ 17C5:9913
cs=0x17c5;eip=0x009914; 	J(RETN(0));	// 102661                  retn ;~ 17C5:9914

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2fb41: 	goto loc_2fb41;
        case m2c::ksub_2fb2a: 	goto sub_2fb2a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2fb45(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2fb45:
    _begin:
#undef arg_0
#define arg_0 4
	// 102672 arg_0           = word ptr  4 ;~ 17C5:9915
cs=0x17c5;eip=0x009915; 	X(PUSH(bp));	// 102674                  push    bp ;~ 17C5:9915
cs=0x17c5;eip=0x009916; 	T(bp = sp;);	// 102675                  mov     bp, sp ;~ 17C5:9916
cs=0x17c5;eip=0x009918; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 102676                  mov     ax, [bp+arg_0] ;~ 17C5:9918
cs=0x17c5;eip=0x00991b; 	T(SUB(ax, word_4e620));	// 102677                  sub     ax, ds:word_4E620 ;~ 17C5:991B
cs=0x17c5;eip=0x00991f; 	T(cl = 0x0A;);	// 102678                  mov     cl, 0Ah ;~ 17C5:991F
cs=0x17c5;eip=0x009921; 	T(SUB(cl, *(db*)(&word_4e61a)));	// 102679                  sub     cl, byte ptr ds:word_4E61A ;~ 17C5:9921
cs=0x17c5;eip=0x009925; 	T(SAR(ax, cl));	// 102680                  sar     ax, cl ;~ 17C5:9925
cs=0x17c5;eip=0x009927; 	T(cx = ax;);	// 102681                  mov     cx, ax ;~ 17C5:9927
cs=0x17c5;eip=0x009929; 	T(SHL(ax, 1));	// 102682                  shl     ax, 1 ;~ 17C5:9929
cs=0x17c5;eip=0x00992b; 	T(ADD(ax, cx));	// 102683                  add     ax, cx ;~ 17C5:992B
cs=0x17c5;eip=0x00992d; 	T(SAR(ax, 1));	// 102684                  sar     ax, 1 ;~ 17C5:992D
cs=0x17c5;eip=0x00992f; 	T(SAR(ax, 1));	// 102685                  sar     ax, 1 ;~ 17C5:992F
cs=0x17c5;eip=0x009931; 	T(ADD(ax, 0x8C));	// 102686                  add     ax, 8Ch ;~ 17C5:9931
cs=0x17c5;eip=0x009934; 	J({;});	// 102687                  jmp     short $+2 ;~ 17C5:9934
loc_2fb66:
	// 6023 
cs=0x17c5;eip=0x009936; 	T(sp = bp;);	// 102691                  mov     sp, bp ;~ 17C5:9936
cs=0x17c5;eip=0x009938; 	X(POP(bp));	// 102692                  pop     bp ;~ 17C5:9938
cs=0x17c5;eip=0x009939; 	J(RETN(0));	// 102693                  retn ;~ 17C5:9939

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2fb66: 	goto loc_2fb66;
        case m2c::ksub_2fb45: 	goto sub_2fb45;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2fb6a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2fb6a:
    _begin:
#undef var_4
#define var_4 -4
	// 102704 var_4           = word ptr -4 ;~ 17C5:993A
#undef var_2
#define var_2 -2
	// 102705 var_2           = word ptr -2 ;~ 17C5:993A
#undef arg_0
#define arg_0 4
	// 102706 arg_0           = word ptr  4 ;~ 17C5:993A
#undef arg_2
#define arg_2 6
	// 102707 arg_2           = word ptr  6 ;~ 17C5:993A
#undef arg_4
#define arg_4 8
	// 102708 arg_4           = word ptr  8 ;~ 17C5:993A
#undef arg_6
#define arg_6 0x0A
	// 102709 arg_6           = word ptr  0Ah ;~ 17C5:993A
cs=0x17c5;eip=0x00993a; 	X(PUSH(bp));	// 102711                  push    bp ;~ 17C5:993A
cs=0x17c5;eip=0x00993b; 	T(bp = sp;);	// 102712                  mov     bp, sp ;~ 17C5:993B
cs=0x17c5;eip=0x00993d; 	T(SUB(sp, 4));	// 102713                  sub     sp, 4 ;~ 17C5:993D
cs=0x17c5;eip=0x009940; 	T(CMP(word_522ca, 0));	// 102714                  cmp     ds:word_522CA, 0 ;~ 17C5:9940
cs=0x17c5;eip=0x009945; 	J(JNZ(loc_2fb7e));	// 102715                  jnz     short loc_2FB7E ;~ 17C5:9945
cs=0x17c5;eip=0x009947; 	T(CMP(word_492f2, 0));	// 102716                  cmp     word_492F2, 0 ;~ 17C5:9947
cs=0x17c5;eip=0x00994c; 	J(JNZ(loc_2fb83));	// 102717                  jnz     short loc_2FB83 ;~ 17C5:994C
loc_2fb7e:
	// 6024 
cs=0x17c5;eip=0x00994e; 	T(SUB(ax, ax));	// 102720                  sub     ax, ax ;~ 17C5:994E
cs=0x17c5;eip=0x009950; 	J(JMP(loc_2fc18));	// 102721                  jmp     loc_2FC18 ;~ 17C5:9950
loc_2fb83:
	// 6025 
cs=0x17c5;eip=0x009953; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 102725                  push    [bp+arg_0] ;~ 17C5:9953
cs=0x17c5;eip=0x009956; 	J(CALL(sub_2fb2a,0));	// 102726                  call    sub_2FB2A ;~ 17C5:9956
cs=0x17c5;eip=0x009959; 	T(ADD(sp, 2));	// 102727                  add     sp, 2 ;~ 17C5:9959
cs=0x17c5;eip=0x00995c; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 102728                  mov     [bp+var_2], ax ;~ 17C5:995C
cs=0x17c5;eip=0x00995f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 102729                  push    [bp+arg_2] ;~ 17C5:995F
cs=0x17c5;eip=0x009962; 	J(CALL(sub_2fb45,0));	// 102730                  call    sub_2FB45 ;~ 17C5:9962
cs=0x17c5;eip=0x009965; 	T(ADD(sp, 2));	// 102731                  add     sp, 2 ;~ 17C5:9965
cs=0x17c5;eip=0x009968; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 102732                  mov     [bp+var_4], ax ;~ 17C5:9968
cs=0x17c5;eip=0x00996b; 	T(CMP(*(dw*)(raddr(ss,bp+arg_4)), 0x0FFFF));	// 102733                  cmp     [bp+arg_4], 0FFFFh ;~ 17C5:996B
cs=0x17c5;eip=0x00996f; 	J(JZ(loc_2fc13));	// 102734                  jz      short loc_2FC13 ;~ 17C5:996F
cs=0x17c5;eip=0x009971; 	T(ax = word_52248;);	// 102735                  mov     ax, ds:word_52248 ;~ 17C5:9971
cs=0x17c5;eip=0x009974; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 102736                  cmp     [bp+var_2], ax ;~ 17C5:9974
cs=0x17c5;eip=0x009977; 	J(JL(loc_2fc13));	// 102737                  jl      short loc_2FC13 ;~ 17C5:9977
cs=0x17c5;eip=0x009979; 	T(ax = word_5268e;);	// 102738                  mov     ax, ds:word_5268E ;~ 17C5:9979
cs=0x17c5;eip=0x00997c; 	T(DEC(ax));	// 102739                  dec     ax ;~ 17C5:997C
cs=0x17c5;eip=0x00997d; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 102740                  cmp     [bp+var_2], ax ;~ 17C5:997D
cs=0x17c5;eip=0x009980; 	J(JGE(loc_2fc13));	// 102741                  jge     short loc_2FC13 ;~ 17C5:9980
cs=0x17c5;eip=0x009982; 	T(ax = word_5224a;);	// 102742                  mov     ax, ds:word_5224A ;~ 17C5:9982
cs=0x17c5;eip=0x009985; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), ax));	// 102743                  cmp     [bp+var_4], ax ;~ 17C5:9985
cs=0x17c5;eip=0x009988; 	J(JL(loc_2fc13));	// 102744                  jl      short loc_2FC13 ;~ 17C5:9988
cs=0x17c5;eip=0x00998a; 	T(ax = word_527d2;);	// 102745                  mov     ax, ds:word_527D2 ;~ 17C5:998A
cs=0x17c5;eip=0x00998d; 	T(DEC(ax));	// 102746                  dec     ax ;~ 17C5:998D
cs=0x17c5;eip=0x00998e; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), ax));	// 102747                  cmp     [bp+var_4], ax ;~ 17C5:998E
cs=0x17c5;eip=0x009991; 	J(JGE(loc_2fc13));	// 102748                  jge     short loc_2FC13 ;~ 17C5:9991
cs=0x17c5;eip=0x009993; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 102749                  push    [bp+arg_4] ;~ 17C5:9993
cs=0x17c5;eip=0x009996; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 102750                  push    [bp+var_4] ;~ 17C5:9996
cs=0x17c5;eip=0x009999; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 102751                  push    [bp+var_2] ;~ 17C5:9999
cs=0x17c5;eip=0x00999c; 	J(CALL(sub_300c4,0));	// 102752                  call    sub_300C4 ;~ 17C5:999C
cs=0x17c5;eip=0x00999f; 	T(ADD(sp, 6));	// 102754                  add     sp, 6 ;~ 17C5:999F
cs=0x17c5;eip=0x0099a2; 	T(CMP(*(dw*)(raddr(ss,bp+arg_6)), 0));	// 102755                  cmp     [bp+arg_6], 0 ;~ 17C5:99A2
cs=0x17c5;eip=0x0099a6; 	J(JZ(loc_2fc0d));	// 102756                  jz      short loc_2FC0D ;~ 17C5:99A6
cs=0x17c5;eip=0x0099a8; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 102757                  push    [bp+arg_4] ;~ 17C5:99A8
cs=0x17c5;eip=0x0099ab; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 102758                  push    [bp+var_4] ;~ 17C5:99AB
cs=0x17c5;eip=0x0099ae; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 102759                  mov     ax, [bp+var_2] ;~ 17C5:99AE
cs=0x17c5;eip=0x0099b1; 	T(INC(ax));	// 102760                  inc     ax ;~ 17C5:99B1
cs=0x17c5;eip=0x0099b2; 	X(PUSH(ax));	// 102761                  push    ax ;~ 17C5:99B2
cs=0x17c5;eip=0x0099b3; 	J(CALL(sub_300c4,0));	// 102762                  call    sub_300C4 ;~ 17C5:99B3
cs=0x17c5;eip=0x0099b6; 	T(ADD(sp, 6));	// 102764                  add     sp, 6 ;~ 17C5:99B6
cs=0x17c5;eip=0x0099b9; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 102765                  push    [bp+arg_4] ;~ 17C5:99B9
cs=0x17c5;eip=0x0099bc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 102766                  mov     ax, [bp+var_4] ;~ 17C5:99BC
cs=0x17c5;eip=0x0099bf; 	T(INC(ax));	// 102767                  inc     ax ;~ 17C5:99BF
cs=0x17c5;eip=0x0099c0; 	X(PUSH(ax));	// 102768                  push    ax ;~ 17C5:99C0
cs=0x17c5;eip=0x0099c1; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 102769                  push    [bp+var_2] ;~ 17C5:99C1
cs=0x17c5;eip=0x0099c4; 	J(CALL(sub_300c4,0));	// 102770                  call    sub_300C4 ;~ 17C5:99C4
cs=0x17c5;eip=0x0099c7; 	T(ADD(sp, 6));	// 102772                  add     sp, 6 ;~ 17C5:99C7
cs=0x17c5;eip=0x0099ca; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 102773                  push    [bp+arg_4] ;~ 17C5:99CA
cs=0x17c5;eip=0x0099cd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 102774                  mov     ax, [bp+var_4] ;~ 17C5:99CD
cs=0x17c5;eip=0x0099d0; 	T(INC(ax));	// 102775                  inc     ax ;~ 17C5:99D0
cs=0x17c5;eip=0x0099d1; 	X(PUSH(ax));	// 102776                  push    ax ;~ 17C5:99D1
cs=0x17c5;eip=0x0099d2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 102777                  mov     ax, [bp+var_2] ;~ 17C5:99D2
cs=0x17c5;eip=0x0099d5; 	T(INC(ax));	// 102778                  inc     ax ;~ 17C5:99D5
cs=0x17c5;eip=0x0099d6; 	X(PUSH(ax));	// 102779                  push    ax ;~ 17C5:99D6
cs=0x17c5;eip=0x0099d7; 	J(CALL(sub_300c4,0));	// 102780                  call    sub_300C4 ;~ 17C5:99D7
cs=0x17c5;eip=0x0099da; 	T(ADD(sp, 6));	// 102782                  add     sp, 6 ;~ 17C5:99DA
loc_2fc0d:
	// 6026 
cs=0x17c5;eip=0x0099dd; 	T(SUB(ax, ax));	// 102785                  sub     ax, ax ;~ 17C5:99DD
cs=0x17c5;eip=0x0099df; 	J(JMP(loc_2fc18));	// 102786                  jmp     short loc_2FC18 ;~ 17C5:99DF
ret_17c5_99e1:
	// 6027 
cs=0x17c5;eip=0x0099e1; 	J(JMP(loc_2fc18));	// 102788                  jmp     short loc_2FC18 ;~ 17C5:99E1
loc_2fc13:
	// 6028 
cs=0x17c5;eip=0x0099e3; 	T(ax = 1;);	// 102793                  mov     ax, 1 ;~ 17C5:99E3
cs=0x17c5;eip=0x0099e6; 	J({;});	// 102794                  jmp     short $+2 ;~ 17C5:99E6
loc_2fc18:
	// 6029 
cs=0x17c5;eip=0x0099e8; 	T(sp = bp;);	// 102799                  mov     sp, bp ;~ 17C5:99E8
cs=0x17c5;eip=0x0099ea; 	X(POP(bp));	// 102800                  pop     bp ;~ 17C5:99EA
cs=0x17c5;eip=0x0099eb; 	J(RETN(0));	// 102801                  retn ;~ 17C5:99EB

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2fb7e: 	goto loc_2fb7e;
        case m2c::kloc_2fb83: 	goto loc_2fb83;
        case m2c::kloc_2fc0d: 	goto loc_2fc0d;
        case m2c::kloc_2fc13: 	goto loc_2fc13;
        case m2c::kloc_2fc18: 	goto loc_2fc18;
        case m2c::kret_17c5_99e1: 	goto ret_17c5_99e1;
        case m2c::ksub_2fb6a: 	goto sub_2fb6a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2fc1c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2fc1c:
    _begin:
#undef arg_0
#define arg_0 4
	// 102812 arg_0           = word ptr  4 ;~ 17C5:99EC
#undef arg_2
#define arg_2 6
	// 102813 arg_2           = word ptr  6 ;~ 17C5:99EC
#undef arg_4
#define arg_4 8
	// 102814 arg_4           = word ptr  8 ;~ 17C5:99EC
#undef arg_6
#define arg_6 0x0A
	// 102815 arg_6           = word ptr  0Ah ;~ 17C5:99EC
cs=0x17c5;eip=0x0099ec; 	X(PUSH(bp));	// 102817                  push    bp ;~ 17C5:99EC
cs=0x17c5;eip=0x0099ed; 	T(bp = sp;);	// 102818                  mov     bp, sp ;~ 17C5:99ED
cs=0x17c5;eip=0x0099ef; 	X(PUSH(si));	// 102819                  push    si ;~ 17C5:99EF
cs=0x17c5;eip=0x0099f0; 	T(CMP(word_492f2, 0));	// 102820                  cmp     word_492F2, 0 ;~ 17C5:99F0
cs=0x17c5;eip=0x0099f5; 	J(JNZ(loc_2fc2b));	// 102821                  jnz     short loc_2FC2B ;~ 17C5:99F5
cs=0x17c5;eip=0x0099f7; 	T(SUB(ax, ax));	// 102822                  sub     ax, ax ;~ 17C5:99F7
cs=0x17c5;eip=0x0099f9; 	J(JMP(loc_2fc78));	// 102823                  jmp     short loc_2FC78 ;~ 17C5:99F9
loc_2fc2b:
	// 6030 
cs=0x17c5;eip=0x0099fb; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 102827                  push    [bp+arg_0] ;~ 17C5:99FB
cs=0x17c5;eip=0x0099fe; 	J(CALL(sub_2fb2a,0));	// 102828                  call    sub_2FB2A ;~ 17C5:99FE
cs=0x17c5;eip=0x009a01; 	T(ADD(sp, 2));	// 102829                  add     sp, 2 ;~ 17C5:9A01
cs=0x17c5;eip=0x009a04; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_4))));	// 102830                  mov     bx, [bp+arg_4] ;~ 17C5:9A04
cs=0x17c5;eip=0x009a07; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 102831                  mov     [bx], ax ;~ 17C5:9A07
cs=0x17c5;eip=0x009a09; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 102832                  push    [bp+arg_2] ;~ 17C5:9A09
cs=0x17c5;eip=0x009a0c; 	J(CALL(sub_2fb45,0));	// 102833                  call    sub_2FB45 ;~ 17C5:9A0C
cs=0x17c5;eip=0x009a0f; 	T(ADD(sp, 2));	// 102834                  add     sp, 2 ;~ 17C5:9A0F
cs=0x17c5;eip=0x009a12; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_6))));	// 102835                  mov     bx, [bp+arg_6] ;~ 17C5:9A12
cs=0x17c5;eip=0x009a15; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 102836                  mov     [bx], ax ;~ 17C5:9A15
cs=0x17c5;eip=0x009a17; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_4))));	// 102837                  mov     bx, [bp+arg_4] ;~ 17C5:9A17
cs=0x17c5;eip=0x009a1a; 	T(MOV(si, *(dw*)(raddr(ds,bx))));	// 102838                  mov     si, [bx] ;~ 17C5:9A1A
cs=0x17c5;eip=0x009a1c; 	T(CMP(word_52248, si));	// 102839                  cmp     ds:word_52248, si ;~ 17C5:9A1C
cs=0x17c5;eip=0x009a20; 	J(JGE(loc_2fc74));	// 102840                  jge     short loc_2FC74 ;~ 17C5:9A20
cs=0x17c5;eip=0x009a22; 	T(ax = word_5268e;);	// 102841                  mov     ax, ds:word_5268E ;~ 17C5:9A22
cs=0x17c5;eip=0x009a25; 	T(DEC(ax));	// 102842                  dec     ax ;~ 17C5:9A25
cs=0x17c5;eip=0x009a26; 	T(CMP(ax, si));	// 102843                  cmp     ax, si ;~ 17C5:9A26
cs=0x17c5;eip=0x009a28; 	J(JLE(loc_2fc74));	// 102844                  jle     short loc_2FC74 ;~ 17C5:9A28
cs=0x17c5;eip=0x009a2a; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_6))));	// 102845                  mov     bx, [bp+arg_6] ;~ 17C5:9A2A
cs=0x17c5;eip=0x009a2d; 	T(MOV(si, *(dw*)(raddr(ds,bx))));	// 102846                  mov     si, [bx] ;~ 17C5:9A2D
cs=0x17c5;eip=0x009a2f; 	T(CMP(word_5224a, si));	// 102847                  cmp     ds:word_5224A, si ;~ 17C5:9A2F
cs=0x17c5;eip=0x009a33; 	J(JGE(loc_2fc74));	// 102848                  jge     short loc_2FC74 ;~ 17C5:9A33
cs=0x17c5;eip=0x009a35; 	T(ax = word_527d2;);	// 102849                  mov     ax, ds:word_527D2 ;~ 17C5:9A35
cs=0x17c5;eip=0x009a38; 	T(DEC(ax));	// 102850                  dec     ax ;~ 17C5:9A38
cs=0x17c5;eip=0x009a39; 	T(CMP(ax, si));	// 102851                  cmp     ax, si ;~ 17C5:9A39
cs=0x17c5;eip=0x009a3b; 	J(JLE(loc_2fc74));	// 102852                  jle     short loc_2FC74 ;~ 17C5:9A3B
cs=0x17c5;eip=0x009a3d; 	T(ax = 1;);	// 102853                  mov     ax, 1 ;~ 17C5:9A3D
cs=0x17c5;eip=0x009a40; 	J(JMP(loc_2fc78));	// 102854                  jmp     short loc_2FC78 ;~ 17C5:9A40
ret_17c5_9a42:
	// 6031 
cs=0x17c5;eip=0x009a42; 	J(JMP(loc_2fc78));	// 102856                  jmp     short loc_2FC78 ;~ 17C5:9A42
loc_2fc74:
	// 6032 
cs=0x17c5;eip=0x009a44; 	T(SUB(ax, ax));	// 102861                  sub     ax, ax ;~ 17C5:9A44
cs=0x17c5;eip=0x009a46; 	J({;});	// 102862                  jmp     short $+2 ;~ 17C5:9A46
loc_2fc78:
	// 6033 
cs=0x17c5;eip=0x009a48; 	X(POP(si));	// 102867                  pop     si ;~ 17C5:9A48
cs=0x17c5;eip=0x009a49; 	T(sp = bp;);	// 102868                  mov     sp, bp ;~ 17C5:9A49
cs=0x17c5;eip=0x009a4b; 	X(POP(bp));	// 102869                  pop     bp ;~ 17C5:9A4B
cs=0x17c5;eip=0x009a4c; 	J(RETN(0));	// 102870                  retn ;~ 17C5:9A4C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2fc2b: 	goto loc_2fc2b;
        case m2c::kloc_2fc74: 	goto loc_2fc74;
        case m2c::kloc_2fc78: 	goto loc_2fc78;
        case m2c::kret_17c5_9a42: 	goto ret_17c5_9a42;
        case m2c::ksub_2fc1c: 	goto sub_2fc1c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_2fc7d(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_2fc7d:
    _begin:
#undef var_6
#define var_6 -6
	// 102881 var_6           = word ptr -6 ;~ 17C5:9A4D
#undef var_4
#define var_4 -4
	// 102882 var_4           = word ptr -4 ;~ 17C5:9A4D
#undef var_2
#define var_2 -2
	// 102883 var_2           = word ptr -2 ;~ 17C5:9A4D
#undef arg_0
#define arg_0 4
	// 102884 arg_0           = word ptr  4 ;~ 17C5:9A4D
#undef arg_2
#define arg_2 6
	// 102885 arg_2           = word ptr  6 ;~ 17C5:9A4D
cs=0x17c5;eip=0x009a4d; 	X(PUSH(bp));	// 102887                  push    bp ;~ 17C5:9A4D
cs=0x17c5;eip=0x009a4e; 	T(bp = sp;);	// 102888                  mov     bp, sp ;~ 17C5:9A4E
cs=0x17c5;eip=0x009a50; 	T(SUB(sp, 6));	// 102889                  sub     sp, 6 ;~ 17C5:9A50
cs=0x17c5;eip=0x009a53; 	T(CMP(word_522ca, 0));	// 102890                  cmp     ds:word_522CA, 0 ;~ 17C5:9A53
cs=0x17c5;eip=0x009a58; 	J(JZ(loc_2fc8e));	// 102891                  jz      short loc_2FC8E ;~ 17C5:9A58
cs=0x17c5;eip=0x009a5a; 	T(SUB(ax, ax));	// 102892                  sub     ax, ax ;~ 17C5:9A5A
cs=0x17c5;eip=0x009a5c; 	J(JMP(loc_2fd07));	// 102893                  jmp     short loc_2FD07 ;~ 17C5:9A5C
loc_2fc8e:
	// 6034 
cs=0x17c5;eip=0x009a5e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 102897                  push    [bp+arg_0] ;~ 17C5:9A5E
cs=0x17c5;eip=0x009a61; 	J(CALL(sub_2fb2a,0));	// 102898                  call    sub_2FB2A ;~ 17C5:9A61
cs=0x17c5;eip=0x009a64; 	T(ADD(sp, 2));	// 102899                  add     sp, 2 ;~ 17C5:9A64
cs=0x17c5;eip=0x009a67; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 102900                  mov     [bp+var_2], ax ;~ 17C5:9A67
cs=0x17c5;eip=0x009a6a; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 102901                  push    [bp+arg_2] ;~ 17C5:9A6A
cs=0x17c5;eip=0x009a6d; 	J(CALL(sub_2fb45,0));	// 102902                  call    sub_2FB45 ;~ 17C5:9A6D
cs=0x17c5;eip=0x009a70; 	T(ADD(sp, 2));	// 102903                  add     sp, 2 ;~ 17C5:9A70
cs=0x17c5;eip=0x009a73; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 102904                  mov     [bp+var_4], ax ;~ 17C5:9A73
cs=0x17c5;eip=0x009a76; 	X(PUSH(word_5268e));	// 102905                  push    ds:word_5268E ;~ 17C5:9A76
cs=0x17c5;eip=0x009a7a; 	X(PUSH(word_52248));	// 102906                  push    ds:word_52248 ;~ 17C5:9A7A
cs=0x17c5;eip=0x009a7e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 102907                  push    [bp+var_2] ;~ 17C5:9A7E
cs=0x17c5;eip=0x009a81; 	J(CALL(sub_33194,0));	// 102908                  call    sub_33194 ;~ 17C5:9A81
cs=0x17c5;eip=0x009a84; 	T(ADD(sp, 6));	// 102909                  add     sp, 6 ;~ 17C5:9A84
cs=0x17c5;eip=0x009a87; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 102910                  mov     [bp+var_2], ax ;~ 17C5:9A87
cs=0x17c5;eip=0x009a8a; 	X(PUSH(word_527d2));	// 102911                  push    ds:word_527D2 ;~ 17C5:9A8A
cs=0x17c5;eip=0x009a8e; 	X(PUSH(word_5224a));	// 102912                  push    ds:word_5224A ;~ 17C5:9A8E
cs=0x17c5;eip=0x009a92; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 102913                  push    [bp+var_4] ;~ 17C5:9A92
cs=0x17c5;eip=0x009a95; 	J(CALL(sub_33194,0));	// 102914                  call    sub_33194 ;~ 17C5:9A95
cs=0x17c5;eip=0x009a98; 	T(ADD(sp, 6));	// 102915                  add     sp, 6 ;~ 17C5:9A98
cs=0x17c5;eip=0x009a9b; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 102916                  mov     [bp+var_4], ax ;~ 17C5:9A9B
cs=0x17c5;eip=0x009a9e; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0x0FFFF));	// 102917                  mov     [bp+var_6], 0FFFFh ;~ 17C5:9A9E
cs=0x17c5;eip=0x009aa3; 	T(ax = word_52248;);	// 102918                  mov     ax, ds:word_52248 ;~ 17C5:9AA3
cs=0x17c5;eip=0x009aa6; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 102919                  cmp     [bp+var_2], ax ;~ 17C5:9AA6
cs=0x17c5;eip=0x009aa9; 	J(JLE(loc_2fd02));	// 102920                  jle     short loc_2FD02 ;~ 17C5:9AA9
cs=0x17c5;eip=0x009aab; 	T(ax = word_5268e;);	// 102921                  mov     ax, ds:word_5268E ;~ 17C5:9AAB
cs=0x17c5;eip=0x009aae; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 102922                  cmp     [bp+var_2], ax ;~ 17C5:9AAE
cs=0x17c5;eip=0x009ab1; 	J(JGE(loc_2fd02));	// 102923                  jge     short loc_2FD02 ;~ 17C5:9AB1
cs=0x17c5;eip=0x009ab3; 	T(ax = word_5224a;);	// 102924                  mov     ax, ds:word_5224A ;~ 17C5:9AB3
cs=0x17c5;eip=0x009ab6; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), ax));	// 102925                  cmp     [bp+var_4], ax ;~ 17C5:9AB6
cs=0x17c5;eip=0x009ab9; 	J(JLE(loc_2fd02));	// 102926                  jle     short loc_2FD02 ;~ 17C5:9AB9
cs=0x17c5;eip=0x009abb; 	T(ax = word_527d2;);	// 102927                  mov     ax, ds:word_527D2 ;~ 17C5:9ABB
cs=0x17c5;eip=0x009abe; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), ax));	// 102928                  cmp     [bp+var_4], ax ;~ 17C5:9ABE
cs=0x17c5;eip=0x009ac1; 	J(JGE(loc_2fd02));	// 102929                  jge     short loc_2FD02 ;~ 17C5:9AC1
cs=0x17c5;eip=0x009ac3; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 102930                  push    [bp+var_4] ;~ 17C5:9AC3
cs=0x17c5;eip=0x009ac6; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 102931                  push    [bp+var_2] ;~ 17C5:9AC6
cs=0x17c5;eip=0x009ac9; 	J(CALL(sub_303e1,0));	// 102932                  call    sub_303E1 ;~ 17C5:9AC9
cs=0x17c5;eip=0x009acc; 	T(ADD(sp, 4));	// 102933                  add     sp, 4 ;~ 17C5:9ACC
cs=0x17c5;eip=0x009acf; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 102934                  mov     [bp+var_6], ax ;~ 17C5:9ACF
loc_2fd02:
	// 6035 
cs=0x17c5;eip=0x009ad2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 102938                  mov     ax, [bp+var_6] ;~ 17C5:9AD2
cs=0x17c5;eip=0x009ad5; 	J({;});	// 102939                  jmp     short $+2 ;~ 17C5:9AD5
loc_2fd07:
	// 6036 
cs=0x17c5;eip=0x009ad7; 	T(sp = bp;);	// 102944                  mov     sp, bp ;~ 17C5:9AD7
cs=0x17c5;eip=0x009ad9; 	X(POP(bp));	// 102945                  pop     bp ;~ 17C5:9AD9
cs=0x17c5;eip=0x009ada; 	J(RETN(0));	// 102946                  retn ;~ 17C5:9ADA

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2fc8e: 	goto loc_2fc8e;
        case m2c::kloc_2fd02: 	goto loc_2fd02;
        case m2c::kloc_2fd07: 	goto loc_2fd07;
        case m2c::ksub_2fc7d: 	goto sub_2fc7d;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_9adb_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_9adb_proc:
    _begin:
loc_2fd0b:
	// 6037 
cs=0x17c5;eip=0x009adb; 	X(PUSH(bp));	// 102952                  push    bp ;~ 17C5:9ADB
cs=0x17c5;eip=0x009adc; 	T(bp = sp;);	// 102953                  mov     bp, sp ;~ 17C5:9ADC
cs=0x17c5;eip=0x009ade; 	T(SUB(sp, 0x0E));	// 102954                  sub     sp, 0Eh ;~ 17C5:9ADE
cs=0x17c5;eip=0x009ae1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+0x0E))));	// 102955                  mov     ax, [bp+0Eh] ;~ 17C5:9AE1
cs=0x17c5;eip=0x009ae4; 	T(CMP(*(dw*)(raddr(ss,bp+0x10)), ax));	// 102956                  cmp     [bp+10h], ax ;~ 17C5:9AE4
cs=0x17c5;eip=0x009ae7; 	J(JGE(loc_2fd1d));	// 102957                  jge     short loc_2FD1D ;~ 17C5:9AE7
cs=0x17c5;eip=0x009ae9; 	X(ADD(*(raddr(ss,bp+0x0F)), 1));	// 102958                  add     byte ptr [bp+0Fh], 1 ;~ 17C5:9AE9
loc_2fd1d:
	// 6038 
cs=0x17c5;eip=0x009aed; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 102961                  push    word ptr [bp+0Ah] ;~ 17C5:9AED
cs=0x17c5;eip=0x009af0; 	J(CALL(sub_30074,0));	// 102962                  call    sub_30074 ;~ 17C5:9AF0
cs=0x17c5;eip=0x009af3; 	T(ADD(sp, 2));	// 102963                  add     sp, 2 ;~ 17C5:9AF3
cs=0x17c5;eip=0x009af6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+0x0E))));	// 102964                  mov     ax, [bp+0Eh] ;~ 17C5:9AF6
cs=0x17c5;eip=0x009af9; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 102965                  mov     [bp-6], ax ;~ 17C5:9AF9
cs=0x17c5;eip=0x009afc; 	J(JMP(loc_2fd32));	// 102966                  jmp     short loc_2FD32 ;~ 17C5:9AFC
loc_2fd2e:
	// 6039 
cs=0x17c5;eip=0x009afe; 	X(ADD(*(dw*)(raddr(ss,bp-6)), 0x10));	// 102970                  add     word ptr [bp-6], 10h ;~ 17C5:9AFE
loc_2fd32:
	// 6040 
cs=0x17c5;eip=0x009b02; 	T(MOV(ax, *(dw*)(raddr(ss,bp+0x10))));	// 102973                  mov     ax, [bp+10h] ;~ 17C5:9B02
cs=0x17c5;eip=0x009b05; 	T(CMP(*(dw*)(raddr(ss,bp-6)), ax));	// 102974                  cmp     [bp-6], ax ;~ 17C5:9B05
cs=0x17c5;eip=0x009b08; 	J(JLE(loc_2fd3d));	// 102975                  jle     short loc_2FD3D ;~ 17C5:9B08
cs=0x17c5;eip=0x009b0a; 	J(JMP(loc_2fdc4));	// 102976                  jmp     loc_2FDC4 ;~ 17C5:9B0A
loc_2fd3d:
	// 6041 
cs=0x17c5;eip=0x009b0d; 	T(MOV(ah, *(raddr(ss,bp-6))));	// 102980                  mov     ah, [bp-6] ;~ 17C5:9B0D
cs=0x17c5;eip=0x009b10; 	T(SUB(al, al));	// 102981                  sub     al, al ;~ 17C5:9B10
cs=0x17c5;eip=0x009b12; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 102982                  mov     [bp-2], ax ;~ 17C5:9B12
cs=0x17c5;eip=0x009b15; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 102983                  push    word ptr [bp+8] ;~ 17C5:9B15
cs=0x17c5;eip=0x009b18; 	X(PUSH(ax));	// 102984                  push    ax ;~ 17C5:9B18
cs=0x17c5;eip=0x009b19; 	J(CALL(sub_333a8,0));	// 102985                  call    sub_333A8 ;~ 17C5:9B19
cs=0x17c5;eip=0x009b1c; 	T(ADD(sp, 4));	// 102986                  add     sp, 4 ;~ 17C5:9B1C
cs=0x17c5;eip=0x009b1f; 	T(ADD(ax, *(dw*)(raddr(ss,bp+4))));	// 102987                  add     ax, [bp+4] ;~ 17C5:9B1F
cs=0x17c5;eip=0x009b22; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 102988                  mov     [bp-4], ax ;~ 17C5:9B22
cs=0x17c5;eip=0x009b25; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 102989                  push    word ptr [bp+8] ;~ 17C5:9B25
cs=0x17c5;eip=0x009b28; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 102990                  push    word ptr [bp-2] ;~ 17C5:9B28
cs=0x17c5;eip=0x009b2b; 	J(CALL(sub_333c0,0));	// 102991                  call    sub_333C0 ;~ 17C5:9B2B
cs=0x17c5;eip=0x009b2e; 	T(ADD(sp, 4));	// 102992                  add     sp, 4 ;~ 17C5:9B2E
cs=0x17c5;eip=0x009b31; 	T(MOV(cx, *(dw*)(raddr(ss,bp+6))));	// 102993                  mov     cx, [bp+6] ;~ 17C5:9B31
cs=0x17c5;eip=0x009b34; 	T(SUB(cx, ax));	// 102994                  sub     cx, ax ;~ 17C5:9B34
cs=0x17c5;eip=0x009b36; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), cx));	// 102995                  mov     [bp-0Ah], cx ;~ 17C5:9B36
cs=0x17c5;eip=0x009b39; 	T(CMP(*(dw*)(raddr(ss,bp-4)), 0x0C000));	// 102996                  cmp     word ptr [bp-4], 0C000h ;~ 17C5:9B39
cs=0x17c5;eip=0x009b3e; 	J(JBE(loc_2fd75));	// 102997                  jbe     short loc_2FD75 ;~ 17C5:9B3E
cs=0x17c5;eip=0x009b40; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 0));	// 102998                  mov     word ptr [bp-4], 0 ;~ 17C5:9B40
loc_2fd75:
	// 6042 
cs=0x17c5;eip=0x009b45; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), 0x0C000));	// 103001                  cmp     word ptr [bp-0Ah], 0C000h ;~ 17C5:9B45
cs=0x17c5;eip=0x009b4a; 	J(JBE(loc_2fd81));	// 103002                  jbe     short loc_2FD81 ;~ 17C5:9B4A
cs=0x17c5;eip=0x009b4c; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), 0));	// 103003                  mov     word ptr [bp-0Ah], 0 ;~ 17C5:9B4C
loc_2fd81:
	// 6043 
cs=0x17c5;eip=0x009b51; 	T(MOV(ax, *(dw*)(raddr(ss,bp+0x0E))));	// 103006                  mov     ax, [bp+0Eh] ;~ 17C5:9B51
cs=0x17c5;eip=0x009b54; 	T(CMP(*(dw*)(raddr(ss,bp-6)), ax));	// 103007                  cmp     [bp-6], ax ;~ 17C5:9B54
cs=0x17c5;eip=0x009b57; 	J(JZ(loc_2fda3));	// 103008                  jz      short loc_2FDA3 ;~ 17C5:9B57
cs=0x17c5;eip=0x009b59; 	T(CMP(*(dw*)(raddr(ss,bp+0x0C)), 0));	// 103009                  cmp     word ptr [bp+0Ch], 0 ;~ 17C5:9B59
cs=0x17c5;eip=0x009b5d; 	J(JZ(loc_2fda3));	// 103010                  jz      short loc_2FDA3 ;~ 17C5:9B5D
cs=0x17c5;eip=0x009b5f; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0E))));	// 103011                  push    word ptr [bp-0Eh] ;~ 17C5:9B5F
cs=0x17c5;eip=0x009b62; 	X(PUSH(*(dw*)(raddr(ss,bp-8))));	// 103012                  push    word ptr [bp-8] ;~ 17C5:9B62
cs=0x17c5;eip=0x009b65; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0A))));	// 103013                  push    word ptr [bp-0Ah] ;~ 17C5:9B65
cs=0x17c5;eip=0x009b68; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 103014                  push    word ptr [bp-4] ;~ 17C5:9B68
cs=0x17c5;eip=0x009b6b; 	J(CALL(sub_2fdc8,0));	// 103015                  call    sub_2FDC8 ;~ 17C5:9B6B
cs=0x17c5;eip=0x009b6e; 	T(ADD(sp, 8));	// 103017                  add     sp, 8 ;~ 17C5:9B6E
cs=0x17c5;eip=0x009b71; 	J(JMP(loc_2fdb5));	// 103018                  jmp     short loc_2FDB5 ;~ 17C5:9B71
loc_2fda3:
	// 6044 
cs=0x17c5;eip=0x009b73; 	T(SUB(ax, ax));	// 103023                  sub     ax, ax ;~ 17C5:9B73
cs=0x17c5;eip=0x009b75; 	X(PUSH(ax));	// 103024                  push    ax ;~ 17C5:9B75
cs=0x17c5;eip=0x009b76; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 103025                  push    word ptr [bp+0Ah] ;~ 17C5:9B76
cs=0x17c5;eip=0x009b79; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0A))));	// 103026                  push    word ptr [bp-0Ah] ;~ 17C5:9B79
cs=0x17c5;eip=0x009b7c; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 103027                  push    word ptr [bp-4] ;~ 17C5:9B7C
cs=0x17c5;eip=0x009b7f; 	J(CALL(sub_2fb6a,0));	// 103028                  call    sub_2FB6A ;~ 17C5:9B7F
cs=0x17c5;eip=0x009b82; 	T(ADD(sp, 8));	// 103029                  add     sp, 8 ;~ 17C5:9B82
loc_2fdb5:
	// 6045 
cs=0x17c5;eip=0x009b85; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 103032                  mov     ax, [bp-4] ;~ 17C5:9B85
cs=0x17c5;eip=0x009b88; 	X(MOV(*(dw*)(raddr(ss,bp-8)), ax));	// 103033                  mov     [bp-8], ax ;~ 17C5:9B88
cs=0x17c5;eip=0x009b8b; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 103034                  mov     ax, [bp-0Ah] ;~ 17C5:9B8B
cs=0x17c5;eip=0x009b8e; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 103035                  mov     [bp-0Eh], ax ;~ 17C5:9B8E
cs=0x17c5;eip=0x009b91; 	J(JMP(loc_2fd2e));	// 103036                  jmp     loc_2FD2E ;~ 17C5:9B91
loc_2fdc4:
	// 6046 
cs=0x17c5;eip=0x009b94; 	T(sp = bp;);	// 103040                  mov     sp, bp ;~ 17C5:9B94
cs=0x17c5;eip=0x009b96; 	X(POP(bp));	// 103041                  pop     bp ;~ 17C5:9B96
cs=0x17c5;eip=0x009b97; 	J(RETN(0));	// 103042                  retn ;~ 17C5:9B97

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2fd0b: 	goto loc_2fd0b;
        case m2c::kloc_2fd1d: 	goto loc_2fd1d;
        case m2c::kloc_2fd2e: 	goto loc_2fd2e;
        case m2c::kloc_2fd32: 	goto loc_2fd32;
        case m2c::kloc_2fd3d: 	goto loc_2fd3d;
        case m2c::kloc_2fd75: 	goto loc_2fd75;
        case m2c::kloc_2fd81: 	goto loc_2fd81;
        case m2c::kloc_2fda3: 	goto loc_2fda3;
        case m2c::kloc_2fdb5: 	goto loc_2fdb5;
        case m2c::kloc_2fdc4: 	goto loc_2fdc4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group42(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group42:
    _begin:
sub_2fdc8:
	// 103048 
#undef arg_0
#define arg_0 4
	// 103050 arg_0           = word ptr  4 ;~ 17C5:9B98
#undef arg_2
#define arg_2 6
	// 103051 arg_2           = word ptr  6 ;~ 17C5:9B98
#undef arg_4
#define arg_4 8
	// 103052 arg_4           = word ptr  8 ;~ 17C5:9B98
#undef arg_6
#define arg_6 0x0A
	// 103053 arg_6           = word ptr  0Ah ;~ 17C5:9B98
cs=0x17c5;eip=0x009b98; 	X(PUSH(bp));	// 103055                  push    bp ;~ 17C5:9B98
cs=0x17c5;eip=0x009b99; 	T(bp = sp;);	// 103056                  mov     bp, sp ;~ 17C5:9B99
cs=0x17c5;eip=0x009b9b; 	T(ax = 1;);	// 103057                  mov     ax, 1 ;~ 17C5:9B9B
cs=0x17c5;eip=0x009b9e; 	X(PUSH(ax));	// 103058                  push    ax ;~ 17C5:9B9E
cs=0x17c5;eip=0x009b9f; 	X(PUSH(word_527d2));	// 103059                  push    ds:word_527D2 ;~ 17C5:9B9F
cs=0x17c5;eip=0x009ba3; 	X(PUSH(word_5224a));	// 103060                  push    ds:word_5224A ;~ 17C5:9BA3
cs=0x17c5;eip=0x009ba7; 	X(PUSH(word_5268e));	// 103061                  push    ds:word_5268E ;~ 17C5:9BA7
cs=0x17c5;eip=0x009bab; 	X(PUSH(word_52248));	// 103062                  push    ds:word_52248 ;~ 17C5:9BAB
cs=0x17c5;eip=0x009baf; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103063                  push    [bp+arg_6] ;~ 17C5:9BAF
cs=0x17c5;eip=0x009bb2; 	J(CALL(sub_2fb45,0));	// 103064                  call    sub_2FB45 ;~ 17C5:9BB2
cs=0x17c5;eip=0x009bb5; 	T(ADD(sp, 2));	// 103065                  add     sp, 2 ;~ 17C5:9BB5
cs=0x17c5;eip=0x009bb8; 	X(PUSH(ax));	// 103066                  push    ax ;~ 17C5:9BB8
cs=0x17c5;eip=0x009bb9; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103067                  push    [bp+arg_4] ;~ 17C5:9BB9
cs=0x17c5;eip=0x009bbc; 	J(CALL(sub_2fb2a,0));	// 103068                  call    sub_2FB2A ;~ 17C5:9BBC
cs=0x17c5;eip=0x009bbf; 	T(ADD(sp, 2));	// 103069                  add     sp, 2 ;~ 17C5:9BBF
cs=0x17c5;eip=0x009bc2; 	X(PUSH(ax));	// 103070                  push    ax ;~ 17C5:9BC2
cs=0x17c5;eip=0x009bc3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103071                  push    [bp+arg_2] ;~ 17C5:9BC3
cs=0x17c5;eip=0x009bc6; 	J(CALL(sub_2fb45,0));	// 103072                  call    sub_2FB45 ;~ 17C5:9BC6
cs=0x17c5;eip=0x009bc9; 	T(ADD(sp, 2));	// 103073                  add     sp, 2 ;~ 17C5:9BC9
cs=0x17c5;eip=0x009bcc; 	X(PUSH(ax));	// 103074                  push    ax ;~ 17C5:9BCC
cs=0x17c5;eip=0x009bcd; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103075                  push    [bp+arg_0] ;~ 17C5:9BCD
cs=0x17c5;eip=0x009bd0; 	J(CALL(sub_2fb2a,0));	// 103076                  call    sub_2FB2A ;~ 17C5:9BD0
cs=0x17c5;eip=0x009bd3; 	T(ADD(sp, 2));	// 103077                  add     sp, 2 ;~ 17C5:9BD3
cs=0x17c5;eip=0x009bd6; 	X(PUSH(ax));	// 103078                  push    ax ;~ 17C5:9BD6
cs=0x17c5;eip=0x009bd7; 	J(CALL(sub_2feb4,0));	// 103079                  call    sub_2FEB4 ;~ 17C5:9BD7
seg2623_9bda_proc:
	// 103083 
cs=0x17c5;eip=0x009bda; 	T(ADD(sp, 0x12));	// 103083                  add     sp, 12h ;~ 17C5:9BDA
cs=0x17c5;eip=0x009bdd; 	T(sp = bp;);	// 103084                  mov     sp, bp ;~ 17C5:9BDD
cs=0x17c5;eip=0x009bdf; 	X(POP(bp));	// 103085                  pop     bp ;~ 17C5:9BDF
cs=0x17c5;eip=0x009be0; 	J(RETN(0));	// 103086                  retn ;~ 17C5:9BE0

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_9bda_proc: 	goto seg2623_9bda_proc;
        case m2c::ksub_2fdc8: 	goto sub_2fdc8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group43(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group43:
    _begin:
sub_2fe11:
	// 103092 
#undef arg_0
#define arg_0 4
	// 103095 arg_0           = word ptr  4 ;~ 17C5:9BE1
#undef arg_2
#define arg_2 6
	// 103096 arg_2           = word ptr  6 ;~ 17C5:9BE1
#undef arg_4
#define arg_4 8
	// 103097 arg_4           = word ptr  8 ;~ 17C5:9BE1
#undef arg_6
#define arg_6 0x0A
	// 103098 arg_6           = word ptr  0Ah ;~ 17C5:9BE1
cs=0x17c5;eip=0x009be1; 	X(PUSH(bp));	// 103100                  push    bp ;~ 17C5:9BE1
cs=0x17c5;eip=0x009be2; 	T(bp = sp;);	// 103101                  mov     bp, sp ;~ 17C5:9BE2
cs=0x17c5;eip=0x009be4; 	T(ax = 1;);	// 103102                  mov     ax, 1 ;~ 17C5:9BE4
cs=0x17c5;eip=0x009be7; 	X(PUSH(ax));	// 103103                  push    ax ;~ 17C5:9BE7
cs=0x17c5;eip=0x009be8; 	T(ax = 0x0C7;);	// 103104                  mov     ax, 0C7h ;~ 17C5:9BE8
cs=0x17c5;eip=0x009beb; 	X(PUSH(ax));	// 103105                  push    ax ;~ 17C5:9BEB
cs=0x17c5;eip=0x009bec; 	T(SUB(ax, ax));	// 103106                  sub     ax, ax ;~ 17C5:9BEC
cs=0x17c5;eip=0x009bee; 	X(PUSH(ax));	// 103107                  push    ax ;~ 17C5:9BEE
cs=0x17c5;eip=0x009bef; 	T(ax = 0x13F;);	// 103108                  mov     ax, 13Fh ;~ 17C5:9BEF
cs=0x17c5;eip=0x009bf2; 	X(PUSH(ax));	// 103109                  push    ax ;~ 17C5:9BF2
cs=0x17c5;eip=0x009bf3; 	T(SUB(ax, ax));	// 103110                  sub     ax, ax ;~ 17C5:9BF3
cs=0x17c5;eip=0x009bf5; 	X(PUSH(ax));	// 103111                  push    ax ;~ 17C5:9BF5
cs=0x17c5;eip=0x009bf6; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103112                  push    [bp+arg_6] ;~ 17C5:9BF6
cs=0x17c5;eip=0x009bf9; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103113                  push    [bp+arg_4] ;~ 17C5:9BF9
cs=0x17c5;eip=0x009bfc; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103114                  push    [bp+arg_2] ;~ 17C5:9BFC
cs=0x17c5;eip=0x009bff; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103115                  push    [bp+arg_0] ;~ 17C5:9BFF
cs=0x17c5;eip=0x009c02; 	J(CALL(sub_2feb4,0));	// 103116                  call    sub_2FEB4 ;~ 17C5:9C02
seg2623_9c05_proc:
	// 103120 
cs=0x17c5;eip=0x009c05; 	T(ADD(sp, 0x12));	// 103120                  add     sp, 12h ;~ 17C5:9C05
cs=0x17c5;eip=0x009c08; 	T(sp = bp;);	// 103121                  mov     sp, bp ;~ 17C5:9C08
cs=0x17c5;eip=0x009c0a; 	X(POP(bp));	// 103122                  pop     bp ;~ 17C5:9C0A
cs=0x17c5;eip=0x009c0b; 	J(RETN(0));	// 103123                  retn ;~ 17C5:9C0B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_9c05_proc: 	goto seg2623_9c05_proc;
        case m2c::ksub_2fe11: 	goto sub_2fe11;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group44(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group44:
    _begin:
sub_2fe3c:
	// 103129 
#undef var_4
#define var_4 -4
	// 103132 var_4           = word ptr -4 ;~ 17C5:9C0C
#undef var_2
#define var_2 -2
	// 103133 var_2           = word ptr -2 ;~ 17C5:9C0C
cs=0x17c5;eip=0x009c0c; 	X(PUSH(bp));	// 103135                  push    bp ;~ 17C5:9C0C
cs=0x17c5;eip=0x009c0d; 	T(bp = sp;);	// 103136                  mov     bp, sp ;~ 17C5:9C0D
cs=0x17c5;eip=0x009c0f; 	T(SUB(sp, 4));	// 103137                  sub     sp, 4 ;~ 17C5:9C0F
cs=0x17c5;eip=0x009c12; 	T(bx = word_4e564;);	// 103138                  mov     bx, ds:word_4E564 ;~ 17C5:9C12
cs=0x17c5;eip=0x009c16; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x14))));	// 103139                  mov     ax, [bx+14h] ;~ 17C5:9C16
cs=0x17c5;eip=0x009c19; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x12))));	// 103140                  sub     ax, [bx+12h] ;~ 17C5:9C19
cs=0x17c5;eip=0x009c1c; 	T(INC(ax));	// 103141                  inc     ax ;~ 17C5:9C1C
cs=0x17c5;eip=0x009c1d; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 103142                  mov     [bp+var_4], ax ;~ 17C5:9C1D
cs=0x17c5;eip=0x009c20; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x10))));	// 103143                  mov     ax, [bx+10h] ;~ 17C5:9C20
cs=0x17c5;eip=0x009c23; 	T(SUB(ax, *(dw*)(raddr(ds,bx+0x0E))));	// 103144                  sub     ax, [bx+0Eh] ;~ 17C5:9C23
cs=0x17c5;eip=0x009c26; 	T(INC(ax));	// 103145                  inc     ax ;~ 17C5:9C26
cs=0x17c5;eip=0x009c27; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 103146                  mov     [bp+var_2], ax ;~ 17C5:9C27
cs=0x17c5;eip=0x009c2a; 	X(PUSH(*(dw*)(raddr(ds,bx+0x0E))));	// 103147                  push    word ptr [bx+0Eh] ;~ 17C5:9C2A
cs=0x17c5;eip=0x009c2d; 	X(PUSH(*(dw*)(raddr(ds,bx+0x12))));	// 103148                  push    word ptr [bx+12h] ;~ 17C5:9C2D
cs=0x17c5;eip=0x009c30; 	J(CALLF(sub_49ad4,0));	// 103149                  call    far ptr sub_49AD4 ;~ 17C5:9C30
seg2623_9c35_proc:
	// 103153 
cs=0x17c5;eip=0x009c35; 	T(ADD(sp, 4));	// 103153                  add     sp, 4 ;~ 17C5:9C35
cs=0x17c5;eip=0x009c38; 	X(PUSH(ax));	// 103154                  push    ax ;~ 17C5:9C38
cs=0x17c5;eip=0x009c39; 	J(CALLF(sub_49a20,0));	// 103155                  call    far ptr sub_49A20 ;~ 17C5:9C39
cs=0x17c5;eip=0x009c3e; 	T(ADD(sp, 2));	// 103157                  add     sp, 2 ;~ 17C5:9C3E
cs=0x17c5;eip=0x009c41; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 103158                  mov     ax, [bp-4] ;~ 17C5:9C41
cs=0x17c5;eip=0x009c44; 	T(DEC(ax));	// 103159                  dec     ax ;~ 17C5:9C44
cs=0x17c5;eip=0x009c45; 	X(word_4d787 = ax;);	// 103160                  mov     ds:word_4D787, ax ;~ 17C5:9C45
cs=0x17c5;eip=0x009c48; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 103161                  mov     ax, [bp-2] ;~ 17C5:9C48
cs=0x17c5;eip=0x009c4b; 	T(DEC(ax));	// 103162                  dec     ax ;~ 17C5:9C4B
cs=0x17c5;eip=0x009c4c; 	X(word_4d789 = ax;);	// 103163                  mov     ds:word_4D789, ax ;~ 17C5:9C4C
cs=0x17c5;eip=0x009c4f; 	T(bx = word_4e564;);	// 103164                  mov     bx, ds:word_4E564 ;~ 17C5:9C4F
cs=0x17c5;eip=0x009c53; 	X(PUSH(*(dw*)(raddr(ds,bx+4))));	// 103165                  push    word ptr [bx+4] ;~ 17C5:9C53
cs=0x17c5;eip=0x009c56; 	J(CALLF(sub_49a43,0));	// 103166                  call    far ptr sub_49A43 ;~ 17C5:9C56
cs=0x17c5;eip=0x009c5b; 	T(ADD(sp, 2));	// 103168                  add     sp, 2 ;~ 17C5:9C5B
cs=0x17c5;eip=0x009c5e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 103169                  mov     ax, [bp+4] ;~ 17C5:9C5E
cs=0x17c5;eip=0x009c61; 	X(word_4d78d = ax;);	// 103170                  mov     ds:word_4D78D, ax ;~ 17C5:9C61
cs=0x17c5;eip=0x009c64; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 103171                  mov     ax, [bp+6] ;~ 17C5:9C64
cs=0x17c5;eip=0x009c67; 	X(word_4d791 = ax;);	// 103172                  mov     ds:word_4D791, ax ;~ 17C5:9C67
cs=0x17c5;eip=0x009c6a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 103173                  mov     ax, [bp+8] ;~ 17C5:9C6A
cs=0x17c5;eip=0x009c6d; 	X(word_4d78f = ax;);	// 103174                  mov     ds:word_4D78F, ax ;~ 17C5:9C6D
cs=0x17c5;eip=0x009c70; 	T(MOV(ax, *(dw*)(raddr(ss,bp+0x0A))));	// 103175                  mov     ax, [bp+0Ah] ;~ 17C5:9C70
cs=0x17c5;eip=0x009c73; 	X(word_4d793 = ax;);	// 103176                  mov     ds:word_4D793, ax ;~ 17C5:9C73
cs=0x17c5;eip=0x009c76; 	J(CALLF(sub_3775a,0));	// 103177                  call    sub_3775A ;~ 17C5:9C76
cs=0x17c5;eip=0x009c7b; 	J(CALLF(sub_49a4d,0));	// 103178                  call    far ptr sub_49A4D ;~ 17C5:9C7B
cs=0x17c5;eip=0x009c80; 	T(sp = bp;);	// 103180                  mov     sp, bp ;~ 17C5:9C80
cs=0x17c5;eip=0x009c82; 	X(POP(bp));	// 103181                  pop     bp ;~ 17C5:9C82
cs=0x17c5;eip=0x009c83; 	J(RETN(0));	// 103182                  retn ;~ 17C5:9C83

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_9c35_proc: 	goto seg2623_9c35_proc;
        case m2c::ksub_2fe3c: 	goto sub_2fe3c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group45(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group45:
    _begin:
sub_2feb4:
	// 103188 
#undef var_4
#define var_4 -4
	// 103191 var_4           = word ptr -4 ;~ 17C5:9C84
#undef var_2
#define var_2 -2
	// 103192 var_2           = word ptr -2 ;~ 17C5:9C84
#undef arg_8
#define arg_8 0x0C
	// 103193 arg_8           = word ptr  0Ch ;~ 17C5:9C84
#undef arg_a
#define arg_a 0x0E
	// 103194 arg_A           = word ptr  0Eh ;~ 17C5:9C84
#undef arg_c
#define arg_c 0x10
	// 103195 arg_C           = word ptr  10h ;~ 17C5:9C84
#undef arg_e
#define arg_e 0x12
	// 103196 arg_E           = word ptr  12h ;~ 17C5:9C84
cs=0x17c5;eip=0x009c84; 	X(PUSH(bp));	// 103198                  push    bp ;~ 17C5:9C84
cs=0x17c5;eip=0x009c85; 	T(bp = sp;);	// 103199                  mov     bp, sp ;~ 17C5:9C85
cs=0x17c5;eip=0x009c87; 	T(SUB(sp, 4));	// 103200                  sub     sp, 4 ;~ 17C5:9C87
cs=0x17c5;eip=0x009c8a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_a))));	// 103201                  mov     ax, [bp+arg_A] ;~ 17C5:9C8A
cs=0x17c5;eip=0x009c8d; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_8))));	// 103202                  sub     ax, [bp+arg_8] ;~ 17C5:9C8D
cs=0x17c5;eip=0x009c90; 	T(INC(ax));	// 103203                  inc     ax ;~ 17C5:9C90
cs=0x17c5;eip=0x009c91; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 103204                  mov     [bp+var_4], ax ;~ 17C5:9C91
cs=0x17c5;eip=0x009c94; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_e))));	// 103205                  mov     ax, [bp+arg_E] ;~ 17C5:9C94
cs=0x17c5;eip=0x009c97; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_c))));	// 103206                  sub     ax, [bp+arg_C] ;~ 17C5:9C97
cs=0x17c5;eip=0x009c9a; 	T(INC(ax));	// 103207                  inc     ax ;~ 17C5:9C9A
cs=0x17c5;eip=0x009c9b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 103208                  mov     [bp+var_2], ax ;~ 17C5:9C9B
cs=0x17c5;eip=0x009c9e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_c))));	// 103209                  push    [bp+arg_C] ;~ 17C5:9C9E
cs=0x17c5;eip=0x009ca1; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_8))));	// 103210                  push    [bp+arg_8] ;~ 17C5:9CA1
cs=0x17c5;eip=0x009ca4; 	J(CALLF(sub_49ad4,0));	// 103211                  call    far ptr sub_49AD4 ;~ 17C5:9CA4
seg2623_9ca9_proc:
	// 103215 
cs=0x17c5;eip=0x009ca9; 	T(ADD(sp, 4));	// 103215                  add     sp, 4 ;~ 17C5:9CA9
cs=0x17c5;eip=0x009cac; 	X(PUSH(ax));	// 103216                  push    ax ;~ 17C5:9CAC
cs=0x17c5;eip=0x009cad; 	J(CALLF(sub_49a20,0));	// 103217                  call    far ptr sub_49A20 ;~ 17C5:9CAD
cs=0x17c5;eip=0x009cb2; 	T(ADD(sp, 2));	// 103219                  add     sp, 2 ;~ 17C5:9CB2
cs=0x17c5;eip=0x009cb5; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 103220                  mov     ax, [bp-4] ;~ 17C5:9CB5
cs=0x17c5;eip=0x009cb8; 	T(DEC(ax));	// 103221                  dec     ax ;~ 17C5:9CB8
cs=0x17c5;eip=0x009cb9; 	X(word_4d787 = ax;);	// 103222                  mov     ds:word_4D787, ax ;~ 17C5:9CB9
cs=0x17c5;eip=0x009cbc; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 103223                  mov     ax, [bp-2] ;~ 17C5:9CBC
cs=0x17c5;eip=0x009cbf; 	T(DEC(ax));	// 103224                  dec     ax ;~ 17C5:9CBF
cs=0x17c5;eip=0x009cc0; 	X(word_4d789 = ax;);	// 103225                  mov     ds:word_4D789, ax ;~ 17C5:9CC0
cs=0x17c5;eip=0x009cc3; 	T(bx = word_4e564;);	// 103226                  mov     bx, ds:word_4E564 ;~ 17C5:9CC3
cs=0x17c5;eip=0x009cc7; 	X(PUSH(*(dw*)(raddr(ds,bx+4))));	// 103227                  push    word ptr [bx+4] ;~ 17C5:9CC7
cs=0x17c5;eip=0x009cca; 	J(CALLF(sub_49a43,0));	// 103228                  call    far ptr sub_49A43 ;~ 17C5:9CCA
cs=0x17c5;eip=0x009ccf; 	T(ADD(sp, 2));	// 103230                  add     sp, 2 ;~ 17C5:9CCF
cs=0x17c5;eip=0x009cd2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 103231                  mov     ax, [bp+4] ;~ 17C5:9CD2
cs=0x17c5;eip=0x009cd5; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x0C))));	// 103232                  sub     ax, [bp+0Ch] ;~ 17C5:9CD5
cs=0x17c5;eip=0x009cd8; 	X(word_4d78d = ax;);	// 103233                  mov     ds:word_4D78D, ax ;~ 17C5:9CD8
cs=0x17c5;eip=0x009cdb; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 103234                  mov     ax, [bp+6] ;~ 17C5:9CDB
cs=0x17c5;eip=0x009cde; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x10))));	// 103235                  sub     ax, [bp+10h] ;~ 17C5:9CDE
cs=0x17c5;eip=0x009ce1; 	X(word_4d791 = ax;);	// 103236                  mov     ds:word_4D791, ax ;~ 17C5:9CE1
cs=0x17c5;eip=0x009ce4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 103237                  mov     ax, [bp+8] ;~ 17C5:9CE4
cs=0x17c5;eip=0x009ce7; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x0C))));	// 103238                  sub     ax, [bp+0Ch] ;~ 17C5:9CE7
cs=0x17c5;eip=0x009cea; 	X(word_4d78f = ax;);	// 103239                  mov     ds:word_4D78F, ax ;~ 17C5:9CEA
cs=0x17c5;eip=0x009ced; 	T(MOV(ax, *(dw*)(raddr(ss,bp+0x0A))));	// 103240                  mov     ax, [bp+0Ah] ;~ 17C5:9CED
cs=0x17c5;eip=0x009cf0; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x10))));	// 103241                  sub     ax, [bp+10h] ;~ 17C5:9CF0
cs=0x17c5;eip=0x009cf3; 	X(word_4d793 = ax;);	// 103242                  mov     ds:word_4D793, ax ;~ 17C5:9CF3
cs=0x17c5;eip=0x009cf6; 	J(CALLF(sub_3775a,0));	// 103243                  call    sub_3775A ;~ 17C5:9CF6
cs=0x17c5;eip=0x009cfb; 	J(CALLF(sub_49a4d,0));	// 103244                  call    far ptr sub_49A4D ;~ 17C5:9CFB
cs=0x17c5;eip=0x009d00; 	T(CMP(*(dw*)(raddr(ss,bp+0x14)), 0));	// 103246                  cmp     word ptr [bp+14h], 0 ;~ 17C5:9D00
cs=0x17c5;eip=0x009d04; 	J(JZ(loc_2ff9b));	// 103247                  jz      short loc_2FF9B ;~ 17C5:9D04
cs=0x17c5;eip=0x009d06; 	J(CALLF(sub_49a7f,0));	// 103248                  call    far ptr sub_49A7F ;~ 17C5:9D06
cs=0x17c5;eip=0x009d0b; 	X(byte_527d0 = al;);	// 103250                  mov     ds:byte_527D0, al ;~ 17C5:9D0B
cs=0x17c5;eip=0x009d0e; 	T(CMP(al, 1));	// 103251                  cmp     al, 1 ;~ 17C5:9D0E
cs=0x17c5;eip=0x009d10; 	T(SBB(ax, ax));	// 103252                  sbb     ax, ax ;~ 17C5:9D10
cs=0x17c5;eip=0x009d12; 	T(NEG(ax));	// 103253                  neg     ax ;~ 17C5:9D12
cs=0x17c5;eip=0x009d14; 	X(PUSH(ax));	// 103254                  push    ax ;~ 17C5:9D14
cs=0x17c5;eip=0x009d15; 	J(CALLF(sub_499e4,0));	// 103255                  call    far ptr sub_499E4 ;~ 17C5:9D15
cs=0x17c5;eip=0x009d1a; 	T(ADD(sp, 2));	// 103257                  add     sp, 2 ;~ 17C5:9D1A
cs=0x17c5;eip=0x009d1d; 	T(bx = word_4e564;);	// 103258                  mov     bx, ds:word_4E564 ;~ 17C5:9D1D
cs=0x17c5;eip=0x009d21; 	X(PUSH(*(dw*)(raddr(ds,bx+4))));	// 103259                  push    word ptr [bx+4] ;~ 17C5:9D21
cs=0x17c5;eip=0x009d24; 	J(CALLF(sub_49a43,0));	// 103260                  call    far ptr sub_49A43 ;~ 17C5:9D24
cs=0x17c5;eip=0x009d29; 	T(ADD(sp, 2));	// 103262                  add     sp, 2 ;~ 17C5:9D29
cs=0x17c5;eip=0x009d2c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 103263                  mov     ax, [bp+4] ;~ 17C5:9D2C
cs=0x17c5;eip=0x009d2f; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x0C))));	// 103264                  sub     ax, [bp+0Ch] ;~ 17C5:9D2F
cs=0x17c5;eip=0x009d32; 	X(word_4d78d = ax;);	// 103265                  mov     ds:word_4D78D, ax ;~ 17C5:9D32
cs=0x17c5;eip=0x009d35; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 103266                  mov     ax, [bp+6] ;~ 17C5:9D35
cs=0x17c5;eip=0x009d38; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x10))));	// 103267                  sub     ax, [bp+10h] ;~ 17C5:9D38
cs=0x17c5;eip=0x009d3b; 	X(word_4d791 = ax;);	// 103268                  mov     ds:word_4D791, ax ;~ 17C5:9D3B
cs=0x17c5;eip=0x009d3e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 103269                  mov     ax, [bp+8] ;~ 17C5:9D3E
cs=0x17c5;eip=0x009d41; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x0C))));	// 103270                  sub     ax, [bp+0Ch] ;~ 17C5:9D41
cs=0x17c5;eip=0x009d44; 	X(word_4d78f = ax;);	// 103271                  mov     ds:word_4D78F, ax ;~ 17C5:9D44
cs=0x17c5;eip=0x009d47; 	T(MOV(ax, *(dw*)(raddr(ss,bp+0x0A))));	// 103272                  mov     ax, [bp+0Ah] ;~ 17C5:9D47
cs=0x17c5;eip=0x009d4a; 	T(SUB(ax, *(dw*)(raddr(ss,bp+0x10))));	// 103273                  sub     ax, [bp+10h] ;~ 17C5:9D4A
cs=0x17c5;eip=0x009d4d; 	X(word_4d793 = ax;);	// 103274                  mov     ds:word_4D793, ax ;~ 17C5:9D4D
cs=0x17c5;eip=0x009d50; 	J(CALLF(sub_3775a,0));	// 103275                  call    sub_3775A ;~ 17C5:9D50
cs=0x17c5;eip=0x009d55; 	T(CMP(byte_527d0, 1));	// 103276                  cmp     ds:byte_527D0, 1 ;~ 17C5:9D55
cs=0x17c5;eip=0x009d5a; 	T(SBB(ax, ax));	// 103277                  sbb     ax, ax ;~ 17C5:9D5A
cs=0x17c5;eip=0x009d5c; 	T(INC(ax));	// 103278                  inc     ax ;~ 17C5:9D5C
cs=0x17c5;eip=0x009d5d; 	X(PUSH(ax));	// 103279                  push    ax ;~ 17C5:9D5D
cs=0x17c5;eip=0x009d5e; 	J(CALLF(sub_499e4,0));	// 103280                  call    far ptr sub_499E4 ;~ 17C5:9D5E
cs=0x17c5;eip=0x009d63; 	T(ADD(sp, 2));	// 103282                  add     sp, 2 ;~ 17C5:9D63
cs=0x17c5;eip=0x009d66; 	J(CALLF(sub_49a4d,0));	// 103283                  call    far ptr sub_49A4D ;~ 17C5:9D66
loc_2ff9b:
	// 6047 
cs=0x17c5;eip=0x009d6b; 	X(word_4d787 = 0x13F;);	// 103287                  mov     ds:word_4D787, 13Fh ;~ 17C5:9D6B
cs=0x17c5;eip=0x009d71; 	X(word_4d789 = 0x0C7;);	// 103288                  mov     ds:word_4D789, 0C7h ;~ 17C5:9D71
cs=0x17c5;eip=0x009d77; 	T(SUB(ax, ax));	// 103289                  sub     ax, ax ;~ 17C5:9D77
cs=0x17c5;eip=0x009d79; 	X(PUSH(ax));	// 103290                  push    ax ;~ 17C5:9D79
cs=0x17c5;eip=0x009d7a; 	J(CALLF(sub_49a20,0));	// 103291                  call    far ptr sub_49A20 ;~ 17C5:9D7A
cs=0x17c5;eip=0x009d7f; 	T(ADD(sp, 2));	// 103293                  add     sp, 2 ;~ 17C5:9D7F
cs=0x17c5;eip=0x009d82; 	T(sp = bp;);	// 103294                  mov     sp, bp ;~ 17C5:9D82
cs=0x17c5;eip=0x009d84; 	X(POP(bp));	// 103295                  pop     bp ;~ 17C5:9D84
cs=0x17c5;eip=0x009d85; 	J(RETN(0));	// 103296                  retn ;~ 17C5:9D85

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_2ff9b: 	goto loc_2ff9b;
        case m2c::kseg2623_9ca9_proc: 	goto seg2623_9ca9_proc;
        case m2c::ksub_2feb4: 	goto sub_2feb4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group46(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group46:
    _begin:
sub_2ffb6:
	// 103302 
#undef arg_0
#define arg_0 4
	// 103305 arg_0           = word ptr  4 ;~ 17C5:9D86
#undef arg_2
#define arg_2 6
	// 103306 arg_2           = word ptr  6 ;~ 17C5:9D86
#undef arg_4
#define arg_4 8
	// 103307 arg_4           = word ptr  8 ;~ 17C5:9D86
#undef arg_6
#define arg_6 0x0A
	// 103308 arg_6           = word ptr  0Ah ;~ 17C5:9D86
cs=0x17c5;eip=0x009d86; 	X(PUSH(bp));	// 103310                  push    bp ;~ 17C5:9D86
cs=0x17c5;eip=0x009d87; 	T(bp = sp;);	// 103311                  mov     bp, sp ;~ 17C5:9D87
cs=0x17c5;eip=0x009d89; 	T(SUB(ax, ax));	// 103312                  sub     ax, ax ;~ 17C5:9D89
cs=0x17c5;eip=0x009d8b; 	X(PUSH(ax));	// 103313                  push    ax ;~ 17C5:9D8B
cs=0x17c5;eip=0x009d8c; 	T(ax = 0x0C7;);	// 103314                  mov     ax, 0C7h ;~ 17C5:9D8C
cs=0x17c5;eip=0x009d8f; 	X(PUSH(ax));	// 103315                  push    ax ;~ 17C5:9D8F
cs=0x17c5;eip=0x009d90; 	T(SUB(ax, ax));	// 103316                  sub     ax, ax ;~ 17C5:9D90
cs=0x17c5;eip=0x009d92; 	X(PUSH(ax));	// 103317                  push    ax ;~ 17C5:9D92
cs=0x17c5;eip=0x009d93; 	T(ax = 0x13F;);	// 103318                  mov     ax, 13Fh ;~ 17C5:9D93
cs=0x17c5;eip=0x009d96; 	X(PUSH(ax));	// 103319                  push    ax ;~ 17C5:9D96
cs=0x17c5;eip=0x009d97; 	T(SUB(ax, ax));	// 103320                  sub     ax, ax ;~ 17C5:9D97
cs=0x17c5;eip=0x009d99; 	X(PUSH(ax));	// 103321                  push    ax ;~ 17C5:9D99
cs=0x17c5;eip=0x009d9a; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103322                  push    [bp+arg_6] ;~ 17C5:9D9A
cs=0x17c5;eip=0x009d9d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103323                  push    [bp+arg_4] ;~ 17C5:9D9D
cs=0x17c5;eip=0x009da0; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103324                  push    [bp+arg_2] ;~ 17C5:9DA0
cs=0x17c5;eip=0x009da3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103325                  push    [bp+arg_0] ;~ 17C5:9DA3
cs=0x17c5;eip=0x009da6; 	J(CALL(sub_2feb4,0));	// 103326                  call    sub_2FEB4 ;~ 17C5:9DA6
seg2623_9da9_proc:
	// 103330 
cs=0x17c5;eip=0x009da9; 	T(ADD(sp, 0x12));	// 103330                  add     sp, 12h ;~ 17C5:9DA9
cs=0x17c5;eip=0x009dac; 	T(sp = bp;);	// 103331                  mov     sp, bp ;~ 17C5:9DAC
cs=0x17c5;eip=0x009dae; 	X(POP(bp));	// 103332                  pop     bp ;~ 17C5:9DAE
cs=0x17c5;eip=0x009daf; 	J(RETN(0));	// 103333                  retn ;~ 17C5:9DAF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_9da9_proc: 	goto seg2623_9da9_proc;
        case m2c::ksub_2ffb6: 	goto sub_2ffb6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group47(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group47:
    _begin:
sub_2ffe0:
	// 103339 
#undef arg_0
#define arg_0 4
	// 103342 arg_0           = word ptr  4 ;~ 17C5:9DB0
#undef arg_2
#define arg_2 6
	// 103343 arg_2           = word ptr  6 ;~ 17C5:9DB0
#undef arg_4
#define arg_4 8
	// 103344 arg_4           = word ptr  8 ;~ 17C5:9DB0
#undef arg_6
#define arg_6 0x0A
	// 103345 arg_6           = word ptr  0Ah ;~ 17C5:9DB0
cs=0x17c5;eip=0x009db0; 	X(PUSH(bp));	// 103349                  push    bp ;~ 17C5:9DB0
cs=0x17c5;eip=0x009db1; 	T(bp = sp;);	// 103350                  mov     bp, sp ;~ 17C5:9DB1
cs=0x17c5;eip=0x009db3; 	T(CMP(byte_4de54, 0));	// 103351                  cmp     ds:byte_4DE54, 0 ;~ 17C5:9DB3
cs=0x17c5;eip=0x009db8; 	J(JZ(loc_30030));	// 103352                  jz      short loc_30030 ;~ 17C5:9DB8
cs=0x17c5;eip=0x009dba; 	T(LES(bx, dword_4f220));	// 103353                  les     bx, ds:dword_4F220 ;~ 17C5:9DBA
cs=0x17c5;eip=0x009dbe; 	T(CMP(*(dw*)(raddr(es,bx+0x40)), 2));	// 103354                  cmp     word ptr es:[bx+40h], 2 ;~ 17C5:9DBE
cs=0x17c5;eip=0x009dc3; 	J(JNC(loc_30009));	// 103355                  jnb     short loc_30009 ;~ 17C5:9DC3
cs=0x17c5;eip=0x009dc5; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103356                  push    [bp+arg_6] ;~ 17C5:9DC5
cs=0x17c5;eip=0x009dc8; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103357                  push    [bp+arg_4] ;~ 17C5:9DC8
cs=0x17c5;eip=0x009dcb; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103358                  push    [bp+arg_2] ;~ 17C5:9DCB
cs=0x17c5;eip=0x009dce; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103359                  push    [bp+arg_0] ;~ 17C5:9DCE
cs=0x17c5;eip=0x009dd1; 	J(CALL(sub_2fe3c,0));	// 103360                  call    sub_2FE3C ;~ 17C5:9DD1
cs=0x17c5;eip=0x009dd4; 	T(ADD(sp, 8));	// 103362                  add     sp, 8 ;~ 17C5:9DD4
cs=0x17c5;eip=0x009dd7; 	J(JMP(loc_3002e));	// 103363                  jmp     short loc_3002E ;~ 17C5:9DD7
loc_30009:
	// 6048 
cs=0x17c5;eip=0x009dd9; 	T(SUB(ax, ax));	// 103367                  sub     ax, ax ;~ 17C5:9DD9
cs=0x17c5;eip=0x009ddb; 	X(PUSH(ax));	// 103368                  push    ax ;~ 17C5:9DDB
cs=0x17c5;eip=0x009ddc; 	T(ax = 0x60;);	// 103369                  mov     ax, 60h ; '`' ;~ 17C5:9DDC
cs=0x17c5;eip=0x009ddf; 	X(PUSH(ax));	// 103370                  push    ax ;~ 17C5:9DDF
cs=0x17c5;eip=0x009de0; 	T(ax = 0x3E;);	// 103371                  mov     ax, 3Eh ; '>' ;~ 17C5:9DE0
cs=0x17c5;eip=0x009de3; 	X(PUSH(ax));	// 103372                  push    ax ;~ 17C5:9DE3
cs=0x17c5;eip=0x009de4; 	T(ax = 0x0D8;);	// 103373                  mov     ax, 0D8h ;~ 17C5:9DE4
cs=0x17c5;eip=0x009de7; 	X(PUSH(ax));	// 103374                  push    ax ;~ 17C5:9DE7
cs=0x17c5;eip=0x009de8; 	T(ax = 0x68;);	// 103375                  mov     ax, 68h ; 'h' ;~ 17C5:9DE8
cs=0x17c5;eip=0x009deb; 	X(PUSH(ax));	// 103376                  push    ax ;~ 17C5:9DEB
cs=0x17c5;eip=0x009dec; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103377                  push    [bp+arg_6] ;~ 17C5:9DEC
cs=0x17c5;eip=0x009def; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103378                  push    [bp+arg_4] ;~ 17C5:9DEF
cs=0x17c5;eip=0x009df2; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103379                  push    [bp+arg_2] ;~ 17C5:9DF2
cs=0x17c5;eip=0x009df5; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103380                  push    [bp+arg_0] ;~ 17C5:9DF5
cs=0x17c5;eip=0x009df8; 	J(CALL(sub_2feb4,0));	// 103381                  call    sub_2FEB4 ;~ 17C5:9DF8
cs=0x17c5;eip=0x009dfb; 	T(ADD(sp, 0x12));	// 103383                  add     sp, 12h ;~ 17C5:9DFB
loc_3002e:
	// 6049 
cs=0x17c5;eip=0x009dfe; 	J(JMP(loc_30070));	// 103386                  jmp     short loc_30070 ;~ 17C5:9DFE
loc_30030:
	// 6050 
cs=0x17c5;eip=0x009e00; 	T(CMP(word_492e8, 0));	// 103390                  cmp     word_492E8, 0 ;~ 17C5:9E00
cs=0x17c5;eip=0x009e05; 	J(JZ(loc_3005e));	// 103391                  jz      short loc_3005E ;~ 17C5:9E05
cs=0x17c5;eip=0x009e07; 	T(SUB(ax, ax));	// 103392                  sub     ax, ax ;~ 17C5:9E07
cs=0x17c5;eip=0x009e09; 	X(PUSH(ax));	// 103393                  push    ax ;~ 17C5:9E09
cs=0x17c5;eip=0x009e0a; 	T(ax = 0x60;);	// 103394                  mov     ax, 60h ; '`' ;~ 17C5:9E0A
cs=0x17c5;eip=0x009e0d; 	X(PUSH(ax));	// 103395                  push    ax ;~ 17C5:9E0D
cs=0x17c5;eip=0x009e0e; 	T(ax = 0x0F;);	// 103396                  mov     ax, 0Fh ;~ 17C5:9E0E
cs=0x17c5;eip=0x009e11; 	X(PUSH(ax));	// 103397                  push    ax ;~ 17C5:9E11
cs=0x17c5;eip=0x009e12; 	T(ax = 0x10F;);	// 103398                  mov     ax, 10Fh ;~ 17C5:9E12
cs=0x17c5;eip=0x009e15; 	X(PUSH(ax));	// 103399                  push    ax ;~ 17C5:9E15
cs=0x17c5;eip=0x009e16; 	T(ax = 0x30;);	// 103400                  mov     ax, 30h ; '0' ;~ 17C5:9E16
cs=0x17c5;eip=0x009e19; 	X(PUSH(ax));	// 103401                  push    ax ;~ 17C5:9E19
cs=0x17c5;eip=0x009e1a; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103402                  push    [bp+arg_6] ;~ 17C5:9E1A
cs=0x17c5;eip=0x009e1d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103403                  push    [bp+arg_4] ;~ 17C5:9E1D
cs=0x17c5;eip=0x009e20; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103404                  push    [bp+arg_2] ;~ 17C5:9E20
cs=0x17c5;eip=0x009e23; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103405                  push    [bp+arg_0] ;~ 17C5:9E23
cs=0x17c5;eip=0x009e26; 	J(CALL(sub_2feb4,0));	// 103406                  call    sub_2FEB4 ;~ 17C5:9E26
cs=0x17c5;eip=0x009e29; 	T(ADD(sp, 0x12));	// 103408                  add     sp, 12h ;~ 17C5:9E29
cs=0x17c5;eip=0x009e2c; 	J(JMP(loc_30070));	// 103409                  jmp     short loc_30070 ;~ 17C5:9E2C
loc_3005e:
	// 6051 
cs=0x17c5;eip=0x009e2e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103413                  push    [bp+arg_6] ;~ 17C5:9E2E
cs=0x17c5;eip=0x009e31; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103414                  push    [bp+arg_4] ;~ 17C5:9E31
cs=0x17c5;eip=0x009e34; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103415                  push    [bp+arg_2] ;~ 17C5:9E34
cs=0x17c5;eip=0x009e37; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103416                  push    [bp+arg_0] ;~ 17C5:9E37
cs=0x17c5;eip=0x009e3a; 	J(CALL(sub_2fe3c,0));	// 103417                  call    sub_2FE3C ;~ 17C5:9E3A
seg2623_9e3d_proc:
	// 103421 
cs=0x17c5;eip=0x009e3d; 	T(ADD(sp, 8));	// 103421                  add     sp, 8 ;~ 17C5:9E3D
loc_30070:
	// 6052 
cs=0x17c5;eip=0x009e40; 	T(sp = bp;);	// 103426                  mov     sp, bp ;~ 17C5:9E40
cs=0x17c5;eip=0x009e42; 	X(POP(bp));	// 103427                  pop     bp ;~ 17C5:9E42
cs=0x17c5;eip=0x009e43; 	J(RETN(0));	// 103428                  retn ;~ 17C5:9E43

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30009: 	goto loc_30009;
        case m2c::kloc_3002e: 	goto loc_3002e;
        case m2c::kloc_30030: 	goto loc_30030;
        case m2c::kloc_3005e: 	goto loc_3005e;
        case m2c::kloc_30070: 	goto loc_30070;
        case m2c::kseg2623_9e3d_proc: 	goto seg2623_9e3d_proc;
        case m2c::ksub_2ffe0: 	goto sub_2ffe0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_30074(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_30074:
    _begin:
#undef arg_0
#define arg_0 4
	// 103438 arg_0           = word ptr  4 ;~ 17C5:9E44
cs=0x17c5;eip=0x009e44; 	X(PUSH(bp));	// 103440                  push    bp ;~ 17C5:9E44
cs=0x17c5;eip=0x009e45; 	T(bp = sp;);	// 103441                  mov     bp, sp ;~ 17C5:9E45
cs=0x17c5;eip=0x009e47; 	T(bx = word_4e564;);	// 103442                  mov     bx, ds:word_4E564 ;~ 17C5:9E47
cs=0x17c5;eip=0x009e4b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 103443                  mov     ax, [bp+arg_0] ;~ 17C5:9E4B
cs=0x17c5;eip=0x009e4e; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 103444                  mov     [bx+4], ax ;~ 17C5:9E4E
cs=0x17c5;eip=0x009e51; 	T(bx = word_4e57c;);	// 103445                  mov     bx, ds:word_4E57C ;~ 17C5:9E51
cs=0x17c5;eip=0x009e55; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 103446                  mov     ax, [bp+arg_0] ;~ 17C5:9E55
cs=0x17c5;eip=0x009e58; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 103447                  mov     [bx+4], ax ;~ 17C5:9E58
cs=0x17c5;eip=0x009e5b; 	X(POP(bp));	// 103448                  pop     bp ;~ 17C5:9E5B
cs=0x17c5;eip=0x009e5c; 	J(RETN(0));	// 103449                  retn ;~ 17C5:9E5C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_30074: 	goto sub_30074;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group48(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group48:
    _begin:
sub_3008d:
	// 103457 
#undef arg_0
#define arg_0 4
	// 103460 arg_0           = word ptr  4 ;~ 17C5:9E5D
#undef arg_2
#define arg_2 6
	// 103461 arg_2           = word ptr  6 ;~ 17C5:9E5D
#undef arg_4
#define arg_4 8
	// 103462 arg_4           = word ptr  8 ;~ 17C5:9E5D
#undef arg_6
#define arg_6 0x0A
	// 103463 arg_6           = word ptr  0Ah ;~ 17C5:9E5D
cs=0x17c5;eip=0x009e5d; 	X(PUSH(bp));	// 103465                  push    bp ;~ 17C5:9E5D
cs=0x17c5;eip=0x009e5e; 	T(bp = sp;);	// 103466                  mov     bp, sp ;~ 17C5:9E5E
cs=0x17c5;eip=0x009e60; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103467                  push    [bp+arg_6] ;~ 17C5:9E60
cs=0x17c5;eip=0x009e63; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103468                  push    [bp+arg_4] ;~ 17C5:9E63
cs=0x17c5;eip=0x009e66; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103469                  push    [bp+arg_2] ;~ 17C5:9E66
cs=0x17c5;eip=0x009e69; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103470                  push    [bp+arg_0] ;~ 17C5:9E69
cs=0x17c5;eip=0x009e6c; 	X(PUSH(word_4e564));	// 103471                  push    ds:word_4E564 ;~ 17C5:9E6C
cs=0x17c5;eip=0x009e70; 	J(CALLF(sub_37674,0));	// 103472                  call    sub_37674 ;~ 17C5:9E70
seg2623_9e75_proc:
	// 103476 
cs=0x17c5;eip=0x009e75; 	T(ADD(sp, 0x0A));	// 103476                  add     sp, 0Ah ;~ 17C5:9E75
cs=0x17c5;eip=0x009e78; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 103477                  push    word ptr [bp+0Ah] ;~ 17C5:9E78
cs=0x17c5;eip=0x009e7b; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 103478                  push    word ptr [bp+8] ;~ 17C5:9E7B
cs=0x17c5;eip=0x009e7e; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 103479                  push    word ptr [bp+6] ;~ 17C5:9E7E
cs=0x17c5;eip=0x009e81; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 103480                  push    word ptr [bp+4] ;~ 17C5:9E81
cs=0x17c5;eip=0x009e84; 	X(PUSH(word_4e57c));	// 103481                  push    ds:word_4E57C ;~ 17C5:9E84
cs=0x17c5;eip=0x009e88; 	J(CALLF(sub_37674,0));	// 103482                  call    sub_37674 ;~ 17C5:9E88
cs=0x17c5;eip=0x009e8d; 	T(ADD(sp, 0x0A));	// 103484                  add     sp, 0Ah ;~ 17C5:9E8D
cs=0x17c5;eip=0x009e90; 	T(sp = bp;);	// 103485                  mov     sp, bp ;~ 17C5:9E90
cs=0x17c5;eip=0x009e92; 	X(POP(bp));	// 103486                  pop     bp ;~ 17C5:9E92
cs=0x17c5;eip=0x009e93; 	J(RETN(0));	// 103487                  retn ;~ 17C5:9E93

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_9e75_proc: 	goto seg2623_9e75_proc;
        case m2c::ksub_3008d: 	goto sub_3008d;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group49(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group49:
    _begin:
sub_300c4:
	// 103493 
#undef arg_0
#define arg_0 4
	// 103496 arg_0           = word ptr  4 ;~ 17C5:9E94
#undef arg_2
#define arg_2 6
	// 103497 arg_2           = word ptr  6 ;~ 17C5:9E94
#undef arg_4
#define arg_4 8
	// 103498 arg_4           = word ptr  8 ;~ 17C5:9E94
cs=0x17c5;eip=0x009e94; 	X(PUSH(bp));	// 103500                  push    bp ;~ 17C5:9E94
cs=0x17c5;eip=0x009e95; 	T(bp = sp;);	// 103501                  mov     bp, sp ;~ 17C5:9E95
cs=0x17c5;eip=0x009e97; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103502                  push    [bp+arg_4] ;~ 17C5:9E97
cs=0x17c5;eip=0x009e9a; 	J(CALL(sub_30074,0));	// 103503                  call    sub_30074 ;~ 17C5:9E9A
cs=0x17c5;eip=0x009e9d; 	T(ADD(sp, 2));	// 103504                  add     sp, 2 ;~ 17C5:9E9D
cs=0x17c5;eip=0x009ea0; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103505                  push    [bp+arg_2] ;~ 17C5:9EA0
cs=0x17c5;eip=0x009ea3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103506                  push    [bp+arg_0] ;~ 17C5:9EA3
cs=0x17c5;eip=0x009ea6; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103507                  push    [bp+arg_2] ;~ 17C5:9EA6
cs=0x17c5;eip=0x009ea9; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103508                  push    [bp+arg_0] ;~ 17C5:9EA9
cs=0x17c5;eip=0x009eac; 	J(CALL(sub_2fe11,0));	// 103509                  call    sub_2FE11 ;~ 17C5:9EAC
seg2623_9eaf_proc:
	// 103513 
cs=0x17c5;eip=0x009eaf; 	T(ADD(sp, 8));	// 103513                  add     sp, 8 ;~ 17C5:9EAF
cs=0x17c5;eip=0x009eb2; 	T(sp = bp;);	// 103514                  mov     sp, bp ;~ 17C5:9EB2
cs=0x17c5;eip=0x009eb4; 	X(POP(bp));	// 103515                  pop     bp ;~ 17C5:9EB4
cs=0x17c5;eip=0x009eb5; 	J(RETN(0));	// 103516                  retn ;~ 17C5:9EB5

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_9eaf_proc: 	goto seg2623_9eaf_proc;
        case m2c::ksub_300c4: 	goto sub_300c4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_300e6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_300e6:
    _begin:
#undef arg_0
#define arg_0 4
	// 103525 arg_0           = word ptr  4 ;~ 17C5:9EB6
#undef arg_2
#define arg_2 6
	// 103526 arg_2           = word ptr  6 ;~ 17C5:9EB6
cs=0x17c5;eip=0x009eb6; 	X(PUSH(bp));	// 103528                  push    bp ;~ 17C5:9EB6
cs=0x17c5;eip=0x009eb7; 	T(bp = sp;);	// 103529                  mov     bp, sp ;~ 17C5:9EB7
cs=0x17c5;eip=0x009eb9; 	X(PUSH(si));	// 103530                  push    si ;~ 17C5:9EB9
cs=0x17c5;eip=0x009eba; 	T(CMP(word_492f2, 0));	// 103531                  cmp     word_492F2, 0 ;~ 17C5:9EBA
cs=0x17c5;eip=0x009ebf; 	J(JNZ(loc_300f3));	// 103532                  jnz     short loc_300F3 ;~ 17C5:9EBF
cs=0x17c5;eip=0x009ec1; 	J(JMP(loc_30172));	// 103533                  jmp     short loc_30172 ;~ 17C5:9EC1
loc_300f3:
	// 6053 
cs=0x17c5;eip=0x009ec3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 103537                  mov     ax, [bp+arg_0] ;~ 17C5:9EC3
cs=0x17c5;eip=0x009ec6; 	T(cx = ax;);	// 103538                  mov     cx, ax ;~ 17C5:9EC6
cs=0x17c5;eip=0x009ec8; 	T(SHL(ax, 1));	// 103539                  shl     ax, 1 ;~ 17C5:9EC8
cs=0x17c5;eip=0x009eca; 	T(SHL(ax, 1));	// 103540                  shl     ax, 1 ;~ 17C5:9ECA
cs=0x17c5;eip=0x009ecc; 	T(ADD(ax, cx));	// 103541                  add     ax, cx ;~ 17C5:9ECC
cs=0x17c5;eip=0x009ece; 	T(SHL(ax, 1));	// 103542                  shl     ax, 1 ;~ 17C5:9ECE
cs=0x17c5;eip=0x009ed0; 	T(si = ax;);	// 103543                  mov     si, ax ;~ 17C5:9ED0
cs=0x17c5;eip=0x009ed2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 103544                  mov     ax, [bp+arg_2] ;~ 17C5:9ED2
cs=0x17c5;eip=0x009ed5; 	T(CMP(*(dw*)(raddr(ds,si+0x5960)), ax));	// 103545                  cmp     [si+5960h], ax ;~ 17C5:9ED5
cs=0x17c5;eip=0x009ed9; 	J(JZ(loc_30172));	// 103546                  jz      short loc_30172 ;~ 17C5:9ED9
cs=0x17c5;eip=0x009edb; 	X(PUSH(ax));	// 103547                  push    ax ;~ 17C5:9EDB
cs=0x17c5;eip=0x009edc; 	X(PUSH(*(dw*)(raddr(ds,si+0x5960))));	// 103548                  push    word ptr [si+5960h] ;~ 17C5:9EDC
cs=0x17c5;eip=0x009ee0; 	X(PUSH(*(dw*)(raddr(ds,si+0x595E))));	// 103549                  push    word ptr [si+595Eh] ;~ 17C5:9EE0
cs=0x17c5;eip=0x009ee4; 	X(PUSH(*(dw*)(raddr(ds,si+0x595C))));	// 103550                  push    word ptr [si+595Ch] ;~ 17C5:9EE4
cs=0x17c5;eip=0x009ee8; 	X(PUSH(*(dw*)(raddr(ds,si+0x595A))));	// 103551                  push    word ptr [si+595Ah] ;~ 17C5:9EE8
cs=0x17c5;eip=0x009eec; 	X(PUSH(*(dw*)(raddr(ds,si+0x5958))));	// 103552                  push    word ptr [si+5958h] ;~ 17C5:9EEC
cs=0x17c5;eip=0x009ef0; 	X(PUSH(word_4e564));	// 103553                  push    ds:word_4E564 ;~ 17C5:9EF0
cs=0x17c5;eip=0x009ef4; 	J(CALLF(sub_49a6b,0));	// 103554                  call    far ptr sub_49A6B ;~ 17C5:9EF4
cs=0x17c5;eip=0x009ef9; 	T(ADD(sp, 0x0E));	// 103556                  add     sp, 0Eh ;~ 17C5:9EF9
cs=0x17c5;eip=0x009efc; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 103557                  mov     ax, [bp+arg_0] ;~ 17C5:9EFC
cs=0x17c5;eip=0x009eff; 	T(cx = ax;);	// 103558                  mov     cx, ax ;~ 17C5:9EFF
cs=0x17c5;eip=0x009f01; 	T(SHL(ax, 1));	// 103559                  shl     ax, 1 ;~ 17C5:9F01
cs=0x17c5;eip=0x009f03; 	T(SHL(ax, 1));	// 103560                  shl     ax, 1 ;~ 17C5:9F03
cs=0x17c5;eip=0x009f05; 	T(ADD(ax, cx));	// 103561                  add     ax, cx ;~ 17C5:9F05
cs=0x17c5;eip=0x009f07; 	T(SHL(ax, 1));	// 103562                  shl     ax, 1 ;~ 17C5:9F07
cs=0x17c5;eip=0x009f09; 	T(si = ax;);	// 103563                  mov     si, ax ;~ 17C5:9F09
cs=0x17c5;eip=0x009f0b; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103564                  push    [bp+arg_2] ;~ 17C5:9F0B
cs=0x17c5;eip=0x009f0e; 	X(PUSH(*(dw*)(raddr(ds,si+0x5960))));	// 103565                  push    word ptr [si+5960h] ;~ 17C5:9F0E
cs=0x17c5;eip=0x009f12; 	X(PUSH(*(dw*)(raddr(ds,si+0x595E))));	// 103566                  push    word ptr [si+595Eh] ;~ 17C5:9F12
cs=0x17c5;eip=0x009f16; 	X(PUSH(*(dw*)(raddr(ds,si+0x595C))));	// 103567                  push    word ptr [si+595Ch] ;~ 17C5:9F16
cs=0x17c5;eip=0x009f1a; 	X(PUSH(*(dw*)(raddr(ds,si+0x595A))));	// 103568                  push    word ptr [si+595Ah] ;~ 17C5:9F1A
cs=0x17c5;eip=0x009f1e; 	X(PUSH(*(dw*)(raddr(ds,si+0x5958))));	// 103569                  push    word ptr [si+5958h] ;~ 17C5:9F1E
cs=0x17c5;eip=0x009f22; 	X(PUSH(word_4e57c));	// 103570                  push    ds:word_4E57C ;~ 17C5:9F22
cs=0x17c5;eip=0x009f26; 	J(CALLF(sub_49a6b,0));	// 103571                  call    far ptr sub_49A6B ;~ 17C5:9F26
cs=0x17c5;eip=0x009f2b; 	T(ADD(sp, 0x0E));	// 103573                  add     sp, 0Eh ;~ 17C5:9F2B
cs=0x17c5;eip=0x009f2e; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 103574                  mov     bx, [bp+arg_0] ;~ 17C5:9F2E
cs=0x17c5;eip=0x009f31; 	T(ax = bx;);	// 103575                  mov     ax, bx ;~ 17C5:9F31
cs=0x17c5;eip=0x009f33; 	T(SHL(bx, 1));	// 103576                  shl     bx, 1 ;~ 17C5:9F33
cs=0x17c5;eip=0x009f35; 	T(SHL(bx, 1));	// 103577                  shl     bx, 1 ;~ 17C5:9F35
cs=0x17c5;eip=0x009f37; 	T(ADD(bx, ax));	// 103578                  add     bx, ax ;~ 17C5:9F37
cs=0x17c5;eip=0x009f39; 	T(SHL(bx, 1));	// 103579                  shl     bx, 1 ;~ 17C5:9F39
cs=0x17c5;eip=0x009f3b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 103580                  mov     ax, [bp+arg_2] ;~ 17C5:9F3B
cs=0x17c5;eip=0x009f3e; 	X(MOV(*(dw*)(raddr(ds,bx+0x5960)), ax));	// 103581                  mov     [bx+5960h], ax ;~ 17C5:9F3E
loc_30172:
	// 6054 
cs=0x17c5;eip=0x009f42; 	X(POP(si));	// 103585                  pop     si ;~ 17C5:9F42
cs=0x17c5;eip=0x009f43; 	T(sp = bp;);	// 103586                  mov     sp, bp ;~ 17C5:9F43
cs=0x17c5;eip=0x009f45; 	X(POP(bp));	// 103587                  pop     bp ;~ 17C5:9F45
cs=0x17c5;eip=0x009f46; 	J(RETN(0));	// 103588                  retn ;~ 17C5:9F46

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_300f3: 	goto loc_300f3;
        case m2c::kloc_30172: 	goto loc_30172;
        case m2c::ksub_300e6: 	goto sub_300e6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_9f47_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_9f47_proc:
    _begin:
cs=0x17c5;eip=0x009f47; 	X(PUSH(bp));	// 103592                  push    bp ;~ 17C5:9F47
cs=0x17c5;eip=0x009f48; 	T(bp = sp;);	// 103593                  mov     bp, sp ;~ 17C5:9F48
cs=0x17c5;eip=0x009f4a; 	T(CMP(word_492f2, 0));	// 103594                  cmp     word_492F2, 0 ;~ 17C5:9F4A
cs=0x17c5;eip=0x009f4f; 	J(JZ(loc_301d9));	// 103595                  jz      short loc_301D9 ;~ 17C5:9F4F
cs=0x17c5;eip=0x009f51; 	T(CMP(*(dw*)(raddr(ss,bp+4)), 1));	// 103596                  cmp     word ptr [bp+4], 1 ;~ 17C5:9F51
cs=0x17c5;eip=0x009f55; 	J(JNZ(loc_301ad));	// 103597                  jnz     short loc_301AD ;~ 17C5:9F55
cs=0x17c5;eip=0x009f57; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0C))));	// 103598                  push    word ptr [bp+0Ch] ;~ 17C5:9F57
cs=0x17c5;eip=0x009f5a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 103599                  mov     ax, [bp+8] ;~ 17C5:9F5A
cs=0x17c5;eip=0x009f5d; 	T(cx = ax;);	// 103600                  mov     cx, ax ;~ 17C5:9F5D
cs=0x17c5;eip=0x009f5f; 	T(SHL(ax, 1));	// 103601                  shl     ax, 1 ;~ 17C5:9F5F
cs=0x17c5;eip=0x009f61; 	T(ADD(ax, cx));	// 103602                  add     ax, cx ;~ 17C5:9F61
cs=0x17c5;eip=0x009f63; 	T(SHL(ax, 1));	// 103603                  shl     ax, 1 ;~ 17C5:9F63
cs=0x17c5;eip=0x009f65; 	T(ADD(ax, 0x7C));	// 103604                  add     ax, 7Ch ; '|' ;~ 17C5:9F65
cs=0x17c5;eip=0x009f68; 	X(PUSH(ax));	// 103605                  push    ax ;~ 17C5:9F68
cs=0x17c5;eip=0x009f69; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 103606                  mov     ax, [bp+6] ;~ 17C5:9F69
cs=0x17c5;eip=0x009f6c; 	T(SHL(ax, 1));	// 103607                  shl     ax, 1 ;~ 17C5:9F6C
cs=0x17c5;eip=0x009f6e; 	T(SHL(ax, 1));	// 103608                  shl     ax, 1 ;~ 17C5:9F6E
cs=0x17c5;eip=0x009f70; 	T(ADD(ax, 0x28));	// 103609                  add     ax, 28h ; '(' ;~ 17C5:9F70
cs=0x17c5;eip=0x009f73; 	X(PUSH(ax));	// 103610                  push    ax ;~ 17C5:9F73
cs=0x17c5;eip=0x009f74; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 103611                  push    word ptr [bp+0Ah] ;~ 17C5:9F74
cs=0x17c5;eip=0x009f77; 	J(CALL(sub_302fb,0));	// 103612                  call    sub_302FB ;~ 17C5:9F77
cs=0x17c5;eip=0x009f7a; 	T(ADD(sp, 8));	// 103614                  add     sp, 8 ;~ 17C5:9F7A
loc_301ad:
	// 6055 
cs=0x17c5;eip=0x009f7d; 	T(CMP(*(dw*)(raddr(ss,bp+4)), 2));	// 103617                  cmp     word ptr [bp+4], 2 ;~ 17C5:9F7D
cs=0x17c5;eip=0x009f81; 	J(JNZ(loc_301d9));	// 103618                  jnz     short loc_301D9 ;~ 17C5:9F81
cs=0x17c5;eip=0x009f83; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0C))));	// 103619                  push    word ptr [bp+0Ch] ;~ 17C5:9F83
cs=0x17c5;eip=0x009f86; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 103620                  mov     ax, [bp+8] ;~ 17C5:9F86
cs=0x17c5;eip=0x009f89; 	T(cx = ax;);	// 103621                  mov     cx, ax ;~ 17C5:9F89
cs=0x17c5;eip=0x009f8b; 	T(SHL(ax, 1));	// 103622                  shl     ax, 1 ;~ 17C5:9F8B
cs=0x17c5;eip=0x009f8d; 	T(ADD(ax, cx));	// 103623                  add     ax, cx ;~ 17C5:9F8D
cs=0x17c5;eip=0x009f8f; 	T(SHL(ax, 1));	// 103624                  shl     ax, 1 ;~ 17C5:9F8F
cs=0x17c5;eip=0x009f91; 	T(ADD(ax, 0x7C));	// 103625                  add     ax, 7Ch ; '|' ;~ 17C5:9F91
cs=0x17c5;eip=0x009f94; 	X(PUSH(ax));	// 103626                  push    ax ;~ 17C5:9F94
cs=0x17c5;eip=0x009f95; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 103627                  mov     ax, [bp+6] ;~ 17C5:9F95
cs=0x17c5;eip=0x009f98; 	T(SHL(ax, 1));	// 103628                  shl     ax, 1 ;~ 17C5:9F98
cs=0x17c5;eip=0x009f9a; 	T(SHL(ax, 1));	// 103629                  shl     ax, 1 ;~ 17C5:9F9A
cs=0x17c5;eip=0x009f9c; 	T(ADD(ax, 0x0B0));	// 103630                  add     ax, 0B0h ;~ 17C5:9F9C
cs=0x17c5;eip=0x009f9f; 	X(PUSH(ax));	// 103631                  push    ax ;~ 17C5:9F9F
cs=0x17c5;eip=0x009fa0; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 103632                  push    word ptr [bp+0Ah] ;~ 17C5:9FA0
cs=0x17c5;eip=0x009fa3; 	J(CALL(sub_302fb,0));	// 103633                  call    sub_302FB ;~ 17C5:9FA3
cs=0x17c5;eip=0x009fa6; 	T(ADD(sp, 8));	// 103635                  add     sp, 8 ;~ 17C5:9FA6
loc_301d9:
	// 6056 
cs=0x17c5;eip=0x009fa9; 	T(sp = bp;);	// 103639                  mov     sp, bp ;~ 17C5:9FA9
cs=0x17c5;eip=0x009fab; 	X(POP(bp));	// 103640                  pop     bp ;~ 17C5:9FAB
cs=0x17c5;eip=0x009fac; 	J(RETN(0));	// 103641                  retn ;~ 17C5:9FAC

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_301ad: 	goto loc_301ad;
        case m2c::kloc_301d9: 	goto loc_301d9;
        case m2c::kseg2623_9f47_proc: 	goto seg2623_9f47_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_301dd(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_301dd:
    _begin:
#undef arg_0
#define arg_0 4
	// 103650 arg_0           = word ptr  4 ;~ 17C5:9FAD
#undef arg_2
#define arg_2 6
	// 103651 arg_2           = word ptr  6 ;~ 17C5:9FAD
#undef arg_4
#define arg_4 8
	// 103652 arg_4           = word ptr  8 ;~ 17C5:9FAD
cs=0x17c5;eip=0x009fad; 	X(PUSH(bp));	// 103654                  push    bp ;~ 17C5:9FAD
cs=0x17c5;eip=0x009fae; 	T(bp = sp;);	// 103655                  mov     bp, sp ;~ 17C5:9FAE
cs=0x17c5;eip=0x009fb0; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103656                  push    [bp+arg_4] ;~ 17C5:9FB0
cs=0x17c5;eip=0x009fb3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103657                  push    [bp+arg_0] ;~ 17C5:9FB3
cs=0x17c5;eip=0x009fb6; 	J(CALL(sub_301fc,0));	// 103658                  call    sub_301FC ;~ 17C5:9FB6
cs=0x17c5;eip=0x009fb9; 	T(ADD(sp, 4));	// 103659                  add     sp, 4 ;~ 17C5:9FB9
cs=0x17c5;eip=0x009fbc; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103660                  push    [bp+arg_2] ;~ 17C5:9FBC
cs=0x17c5;eip=0x009fbf; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103661                  push    [bp+arg_0] ;~ 17C5:9FBF
cs=0x17c5;eip=0x009fc2; 	J(CALL(sub_30260,0));	// 103662                  call    sub_30260 ;~ 17C5:9FC2
cs=0x17c5;eip=0x009fc5; 	T(ADD(sp, 4));	// 103663                  add     sp, 4 ;~ 17C5:9FC5
cs=0x17c5;eip=0x009fc8; 	T(sp = bp;);	// 103664                  mov     sp, bp ;~ 17C5:9FC8
cs=0x17c5;eip=0x009fca; 	X(POP(bp));	// 103665                  pop     bp ;~ 17C5:9FCA
cs=0x17c5;eip=0x009fcb; 	J(RETN(0));	// 103666                  retn ;~ 17C5:9FCB

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_301dd: 	goto sub_301dd;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_301fc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_301fc:
    _begin:
#undef arg_0
#define arg_0 4
	// 103677 arg_0           = word ptr  4 ;~ 17C5:9FCC
#undef arg_2
#define arg_2 6
	// 103678 arg_2           = word ptr  6 ;~ 17C5:9FCC
cs=0x17c5;eip=0x009fcc; 	X(PUSH(bp));	// 103680                  push    bp ;~ 17C5:9FCC
cs=0x17c5;eip=0x009fcd; 	T(bp = sp;);	// 103681                  mov     bp, sp ;~ 17C5:9FCD
cs=0x17c5;eip=0x009fcf; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103682                  push    [bp+arg_2] ;~ 17C5:9FCF
cs=0x17c5;eip=0x009fd2; 	J(CALL(sub_30074,0));	// 103683                  call    sub_30074 ;~ 17C5:9FD2
cs=0x17c5;eip=0x009fd5; 	T(ADD(sp, 2));	// 103684                  add     sp, 2 ;~ 17C5:9FD5
cs=0x17c5;eip=0x009fd8; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 1));	// 103685                  cmp     [bp+arg_0], 1 ;~ 17C5:9FD8
cs=0x17c5;eip=0x009fdc; 	J(JNZ(loc_30224));	// 103686                  jnz     short loc_30224 ;~ 17C5:9FDC
cs=0x17c5;eip=0x009fde; 	T(ax = 0x0A8;);	// 103687                  mov     ax, 0A8h ;~ 17C5:9FDE
cs=0x17c5;eip=0x009fe1; 	X(PUSH(ax));	// 103688                  push    ax ;~ 17C5:9FE1
cs=0x17c5;eip=0x009fe2; 	T(ax = 0x60;);	// 103689                  mov     ax, 60h ; '`' ;~ 17C5:9FE2
cs=0x17c5;eip=0x009fe5; 	X(PUSH(ax));	// 103690                  push    ax ;~ 17C5:9FE5
cs=0x17c5;eip=0x009fe6; 	T(ax = 0x70;);	// 103691                  mov     ax, 70h ; 'p' ;~ 17C5:9FE6
cs=0x17c5;eip=0x009fe9; 	X(PUSH(ax));	// 103692                  push    ax ;~ 17C5:9FE9
cs=0x17c5;eip=0x009fea; 	T(ax = 0x18;);	// 103693                  mov     ax, 18h ;~ 17C5:9FEA
cs=0x17c5;eip=0x009fed; 	X(PUSH(ax));	// 103694                  push    ax ;~ 17C5:9FED
cs=0x17c5;eip=0x009fee; 	J(CALL(sub_3008d,0));	// 103695                  call    sub_3008D ;~ 17C5:9FEE
cs=0x17c5;eip=0x009ff1; 	T(ADD(sp, 8));	// 103697                  add     sp, 8 ;~ 17C5:9FF1
loc_30224:
	// 6057 
cs=0x17c5;eip=0x009ff4; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 2));	// 103700                  cmp     [bp+arg_0], 2 ;~ 17C5:9FF4
cs=0x17c5;eip=0x009ff8; 	J(JNZ(loc_30240));	// 103701                  jnz     short loc_30240 ;~ 17C5:9FF8
cs=0x17c5;eip=0x009ffa; 	T(ax = 0x0AF;);	// 103702                  mov     ax, 0AFh ;~ 17C5:9FFA
cs=0x17c5;eip=0x009ffd; 	X(PUSH(ax));	// 103703                  push    ax ;~ 17C5:9FFD
cs=0x17c5;eip=0x009ffe; 	T(ax = 0x0C7;);	// 103704                  mov     ax, 0C7h ;~ 17C5:9FFE
cs=0x17c5;eip=0x00a001; 	X(PUSH(ax));	// 103705                  push    ax ;~ 17C5:A001
cs=0x17c5;eip=0x00a002; 	T(ax = 0x68;);	// 103706                  mov     ax, 68h ; 'h' ;~ 17C5:A002
cs=0x17c5;eip=0x00a005; 	X(PUSH(ax));	// 103707                  push    ax ;~ 17C5:A005
cs=0x17c5;eip=0x00a006; 	T(ax = 0x78;);	// 103708                  mov     ax, 78h ; 'x' ;~ 17C5:A006
cs=0x17c5;eip=0x00a009; 	X(PUSH(ax));	// 103709                  push    ax ;~ 17C5:A009
cs=0x17c5;eip=0x00a00a; 	J(CALL(sub_3008d,0));	// 103710                  call    sub_3008D ;~ 17C5:A00A
cs=0x17c5;eip=0x00a00d; 	T(ADD(sp, 8));	// 103712                  add     sp, 8 ;~ 17C5:A00D
loc_30240:
	// 6058 
cs=0x17c5;eip=0x00a010; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 3));	// 103715                  cmp     [bp+arg_0], 3 ;~ 17C5:A010
cs=0x17c5;eip=0x00a014; 	J(JNZ(loc_3025c));	// 103716                  jnz     short loc_3025C ;~ 17C5:A014
cs=0x17c5;eip=0x00a016; 	T(ax = 0x0B8;);	// 103717                  mov     ax, 0B8h ;~ 17C5:A016
cs=0x17c5;eip=0x00a019; 	X(PUSH(ax));	// 103718                  push    ax ;~ 17C5:A019
cs=0x17c5;eip=0x00a01a; 	T(ax = 0x130;);	// 103719                  mov     ax, 130h ;~ 17C5:A01A
cs=0x17c5;eip=0x00a01d; 	X(PUSH(ax));	// 103720                  push    ax ;~ 17C5:A01D
cs=0x17c5;eip=0x00a01e; 	T(ax = 0x80;);	// 103721                  mov     ax, 80h ;~ 17C5:A01E
cs=0x17c5;eip=0x00a021; 	X(PUSH(ax));	// 103722                  push    ax ;~ 17C5:A021
cs=0x17c5;eip=0x00a022; 	T(ax = 0x0E8;);	// 103723                  mov     ax, 0E8h ;~ 17C5:A022
cs=0x17c5;eip=0x00a025; 	X(PUSH(ax));	// 103724                  push    ax ;~ 17C5:A025
cs=0x17c5;eip=0x00a026; 	J(CALL(sub_3008d,0));	// 103725                  call    sub_3008D ;~ 17C5:A026
cs=0x17c5;eip=0x00a029; 	T(ADD(sp, 8));	// 103727                  add     sp, 8 ;~ 17C5:A029
loc_3025c:
	// 6059 
cs=0x17c5;eip=0x00a02c; 	T(sp = bp;);	// 103730                  mov     sp, bp ;~ 17C5:A02C
cs=0x17c5;eip=0x00a02e; 	X(POP(bp));	// 103731                  pop     bp ;~ 17C5:A02E
cs=0x17c5;eip=0x00a02f; 	J(RETN(0));	// 103732                  retn ;~ 17C5:A02F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30224: 	goto loc_30224;
        case m2c::kloc_30240: 	goto loc_30240;
        case m2c::kloc_3025c: 	goto loc_3025c;
        case m2c::ksub_301fc: 	goto sub_301fc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_30260(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_30260:
    _begin:
#undef var_6
#define var_6 -6
	// 103742 var_6           = word ptr -6 ;~ 17C5:A030
#undef var_4
#define var_4 -4
	// 103743 var_4           = word ptr -4 ;~ 17C5:A030
#undef var_2
#define var_2 -2
	// 103744 var_2           = word ptr -2 ;~ 17C5:A030
#undef arg_0
#define arg_0 4
	// 103745 arg_0           = word ptr  4 ;~ 17C5:A030
#undef arg_2
#define arg_2 6
	// 103746 arg_2           = word ptr  6 ;~ 17C5:A030
cs=0x17c5;eip=0x00a030; 	X(PUSH(bp));	// 103748                  push    bp ;~ 17C5:A030
cs=0x17c5;eip=0x00a031; 	T(bp = sp;);	// 103749                  mov     bp, sp ;~ 17C5:A031
cs=0x17c5;eip=0x00a033; 	T(SUB(sp, 6));	// 103750                  sub     sp, 6 ;~ 17C5:A033
cs=0x17c5;eip=0x00a036; 	J(JMP(loc_302f7));	// 103751                  jmp     loc_302F7 ;~ 17C5:A036
ret_17c5_a039:
	// 6060 
cs=0x17c5;eip=0x00a039; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103753                  push    [bp+arg_2] ;~ 17C5:A039
cs=0x17c5;eip=0x00a03c; 	J(CALL(sub_34c4e,0));	// 103754                  call    sub_34C4E ;~ 17C5:A03C
cs=0x17c5;eip=0x00a03f; 	T(ADD(sp, 2));	// 103755                  add     sp, 2 ;~ 17C5:A03F
cs=0x17c5;eip=0x00a042; 	T(OR(ax, ax));	// 103756                  or      ax, ax ;~ 17C5:A042
cs=0x17c5;eip=0x00a044; 	J(JZ(loc_3027d));	// 103757                  jz      short loc_3027D ;~ 17C5:A044
cs=0x17c5;eip=0x00a046; 	T(CMP(word_492f2, 0));	// 103758                  cmp     word_492F2, 0 ;~ 17C5:A046
cs=0x17c5;eip=0x00a04b; 	J(JNZ(loc_3027f));	// 103759                  jnz     short loc_3027F ;~ 17C5:A04B
loc_3027d:
	// 6061 
cs=0x17c5;eip=0x00a04d; 	J(JMP(loc_302f7));	// 103762                  jmp     short loc_302F7 ;~ 17C5:A04D
loc_3027f:
	// 6062 
cs=0x17c5;eip=0x00a04f; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 1));	// 103766                  cmp     [bp+arg_0], 1 ;~ 17C5:A04F
cs=0x17c5;eip=0x00a053; 	J(JNZ(loc_30296));	// 103767                  jnz     short loc_30296 ;~ 17C5:A053
cs=0x17c5;eip=0x00a055; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0x18));	// 103768                  mov     [bp+var_2], 18h ;~ 17C5:A055
cs=0x17c5;eip=0x00a05a; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0x60));	// 103769                  mov     [bp+var_6], 60h ; '`' ;~ 17C5:A05A
cs=0x17c5;eip=0x00a05f; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0x70));	// 103770                  mov     [bp+var_4], 70h ; 'p' ;~ 17C5:A05F
cs=0x17c5;eip=0x00a064; 	J(JMP(loc_302a5));	// 103771                  jmp     short loc_302A5 ;~ 17C5:A064
loc_30296:
	// 6063 
cs=0x17c5;eip=0x00a066; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0x78));	// 103775                  mov     [bp+var_2], 78h ; 'x' ;~ 17C5:A066
cs=0x17c5;eip=0x00a06b; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), 0x0C7));	// 103776                  mov     [bp+var_6], 0C7h ;~ 17C5:A06B
cs=0x17c5;eip=0x00a070; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0x68));	// 103777                  mov     [bp+var_4], 68h ; 'h' ;~ 17C5:A070
loc_302a5:
	// 6064 
cs=0x17c5;eip=0x00a075; 	X(SUB(*(dw*)(raddr(ss,bp+var_4)), 8));	// 103780                  sub     [bp+var_4], 8 ;~ 17C5:A075
cs=0x17c5;eip=0x00a079; 	T(ax = 8;);	// 103781                  mov     ax, 8 ;~ 17C5:A079
cs=0x17c5;eip=0x00a07c; 	X(PUSH(ax));	// 103782                  push    ax ;~ 17C5:A07C
cs=0x17c5;eip=0x00a07d; 	J(CALL(sub_30074,0));	// 103783                  call    sub_30074 ;~ 17C5:A07D
cs=0x17c5;eip=0x00a080; 	T(ADD(sp, 2));	// 103784                  add     sp, 2 ;~ 17C5:A080
cs=0x17c5;eip=0x00a083; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 103785                  mov     ax, [bp+var_4] ;~ 17C5:A083
cs=0x17c5;eip=0x00a086; 	T(ADD(ax, 4));	// 103786                  add     ax, 4 ;~ 17C5:A086
cs=0x17c5;eip=0x00a089; 	X(PUSH(ax));	// 103787                  push    ax ;~ 17C5:A089
cs=0x17c5;eip=0x00a08a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 103788                  mov     ax, [bp+var_6] ;~ 17C5:A08A
cs=0x17c5;eip=0x00a08d; 	T(SUB(ax, 5));	// 103789                  sub     ax, 5 ;~ 17C5:A08D
cs=0x17c5;eip=0x00a090; 	X(PUSH(ax));	// 103790                  push    ax ;~ 17C5:A090
cs=0x17c5;eip=0x00a091; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 103791                  push    [bp+var_4] ;~ 17C5:A091
cs=0x17c5;eip=0x00a094; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 103792                  mov     ax, [bp+var_2] ;~ 17C5:A094
cs=0x17c5;eip=0x00a097; 	T(ADD(ax, 5));	// 103793                  add     ax, 5 ;~ 17C5:A097
cs=0x17c5;eip=0x00a09a; 	X(PUSH(ax));	// 103794                  push    ax ;~ 17C5:A09A
cs=0x17c5;eip=0x00a09b; 	J(CALL(sub_3008d,0));	// 103795                  call    sub_3008D ;~ 17C5:A09B
cs=0x17c5;eip=0x00a09e; 	T(ADD(sp, 8));	// 103797                  add     sp, 8 ;~ 17C5:A09E
cs=0x17c5;eip=0x00a0a1; 	T(ax = 0x0B;);	// 103798                  mov     ax, 0Bh ;~ 17C5:A0A1
cs=0x17c5;eip=0x00a0a4; 	X(PUSH(ax));	// 103799                  push    ax ;~ 17C5:A0A4
cs=0x17c5;eip=0x00a0a5; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 103800                  push    [bp+var_4] ;~ 17C5:A0A5
cs=0x17c5;eip=0x00a0a8; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103801                  push    [bp+arg_2] ;~ 17C5:A0A8
cs=0x17c5;eip=0x00a0ab; 	J(CALL(sub_34c4e,0));	// 103802                  call    sub_34C4E ;~ 17C5:A0AB
cs=0x17c5;eip=0x00a0ae; 	T(ADD(sp, 2));	// 103803                  add     sp, 2 ;~ 17C5:A0AE
cs=0x17c5;eip=0x00a0b1; 	T(SHL(ax, 1));	// 103804                  shl     ax, 1 ;~ 17C5:A0B1
cs=0x17c5;eip=0x00a0b3; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_2))));	// 103805                  mov     cx, [bp+var_2] ;~ 17C5:A0B3
cs=0x17c5;eip=0x00a0b6; 	T(ADD(cx, *(dw*)(raddr(ss,bp+var_6))));	// 103806                  add     cx, [bp+var_6] ;~ 17C5:A0B6
cs=0x17c5;eip=0x00a0b9; 	T(SAR(cx, 1));	// 103807                  sar     cx, 1 ;~ 17C5:A0B9
cs=0x17c5;eip=0x00a0bb; 	T(SUB(cx, ax));	// 103808                  sub     cx, ax ;~ 17C5:A0BB
cs=0x17c5;eip=0x00a0bd; 	X(PUSH(cx));	// 103809                  push    cx ;~ 17C5:A0BD
cs=0x17c5;eip=0x00a0be; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103810                  push    [bp+arg_2] ;~ 17C5:A0BE
cs=0x17c5;eip=0x00a0c1; 	J(CALL(sub_302fb,0));	// 103811                  call    sub_302FB ;~ 17C5:A0C1
cs=0x17c5;eip=0x00a0c4; 	T(ADD(sp, 8));	// 103813                  add     sp, 8 ;~ 17C5:A0C4
loc_302f7:
	// 6065 
cs=0x17c5;eip=0x00a0c7; 	T(sp = bp;);	// 103817                  mov     sp, bp ;~ 17C5:A0C7
cs=0x17c5;eip=0x00a0c9; 	X(POP(bp));	// 103818                  pop     bp ;~ 17C5:A0C9
cs=0x17c5;eip=0x00a0ca; 	J(RETN(0));	// 103819                  retn ;~ 17C5:A0CA

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3027d: 	goto loc_3027d;
        case m2c::kloc_3027f: 	goto loc_3027f;
        case m2c::kloc_30296: 	goto loc_30296;
        case m2c::kloc_302a5: 	goto loc_302a5;
        case m2c::kloc_302f7: 	goto loc_302f7;
        case m2c::kret_17c5_a039: 	goto ret_17c5_a039;
        case m2c::ksub_30260: 	goto sub_30260;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group50(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group50:
    _begin:
sub_302fb:
	// 103827 
#undef arg_0
#define arg_0 4
	// 103830 arg_0           = word ptr  4 ;~ 17C5:A0CB
#undef arg_2
#define arg_2 6
	// 103831 arg_2           = word ptr  6 ;~ 17C5:A0CB
#undef arg_4
#define arg_4 8
	// 103832 arg_4           = word ptr  8 ;~ 17C5:A0CB
#undef arg_6
#define arg_6 0x0A
	// 103833 arg_6           = word ptr  0Ah ;~ 17C5:A0CB
cs=0x17c5;eip=0x00a0cb; 	X(PUSH(bp));	// 103835                  push    bp ;~ 17C5:A0CB
cs=0x17c5;eip=0x00a0cc; 	T(bp = sp;);	// 103836                  mov     bp, sp ;~ 17C5:A0CC
cs=0x17c5;eip=0x00a0ce; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103837                  push    [bp+arg_6] ;~ 17C5:A0CE
cs=0x17c5;eip=0x00a0d1; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103838                  push    [bp+arg_4] ;~ 17C5:A0D1
cs=0x17c5;eip=0x00a0d4; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103839                  push    [bp+arg_2] ;~ 17C5:A0D4
cs=0x17c5;eip=0x00a0d7; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103840                  push    [bp+arg_0] ;~ 17C5:A0D7
cs=0x17c5;eip=0x00a0da; 	X(PUSH(word_4e564));	// 103841                  push    ds:word_4E564 ;~ 17C5:A0DA
cs=0x17c5;eip=0x00a0de; 	J(CALL(sub_3036a,0));	// 103842                  call    sub_3036A ;~ 17C5:A0DE
seg2623_a0e1_proc:
	// 103846 
cs=0x17c5;eip=0x00a0e1; 	T(ADD(sp, 0x0A));	// 103846                  add     sp, 0Ah ;~ 17C5:A0E1
cs=0x17c5;eip=0x00a0e4; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 103847                  push    word ptr [bp+0Ah] ;~ 17C5:A0E4
cs=0x17c5;eip=0x00a0e7; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 103848                  push    word ptr [bp+8] ;~ 17C5:A0E7
cs=0x17c5;eip=0x00a0ea; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 103849                  push    word ptr [bp+6] ;~ 17C5:A0EA
cs=0x17c5;eip=0x00a0ed; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 103850                  push    word ptr [bp+4] ;~ 17C5:A0ED
cs=0x17c5;eip=0x00a0f0; 	X(PUSH(word_4e57c));	// 103851                  push    ds:word_4E57C ;~ 17C5:A0F0
cs=0x17c5;eip=0x00a0f4; 	J(CALL(sub_3036a,0));	// 103852                  call    sub_3036A ;~ 17C5:A0F4
cs=0x17c5;eip=0x00a0f7; 	T(ADD(sp, 0x0A));	// 103854                  add     sp, 0Ah ;~ 17C5:A0F7
cs=0x17c5;eip=0x00a0fa; 	T(sp = bp;);	// 103855                  mov     sp, bp ;~ 17C5:A0FA
cs=0x17c5;eip=0x00a0fc; 	X(POP(bp));	// 103856                  pop     bp ;~ 17C5:A0FC
cs=0x17c5;eip=0x00a0fd; 	J(RETN(0));	// 103857                  retn ;~ 17C5:A0FD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_a0e1_proc: 	goto seg2623_a0e1_proc;
        case m2c::ksub_302fb: 	goto sub_302fb;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group51(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group51:
    _begin:
sub_3032e:
	// 103863 
#undef arg_0
#define arg_0 4
	// 103866 arg_0           = word ptr  4 ;~ 17C5:A0FE
#undef arg_2
#define arg_2 6
	// 103867 arg_2           = word ptr  6 ;~ 17C5:A0FE
#undef arg_4
#define arg_4 8
	// 103868 arg_4           = word ptr  8 ;~ 17C5:A0FE
#undef arg_6
#define arg_6 0x0A
	// 103869 arg_6           = word ptr  0Ah ;~ 17C5:A0FE
cs=0x17c5;eip=0x00a0fe; 	X(PUSH(bp));	// 103873                  push    bp ;~ 17C5:A0FE
cs=0x17c5;eip=0x00a0ff; 	T(bp = sp;);	// 103874                  mov     bp, sp ;~ 17C5:A0FF
cs=0x17c5;eip=0x00a101; 	T(CMP(byte_527d0, 0));	// 103875                  cmp     ds:byte_527D0, 0 ;~ 17C5:A101
cs=0x17c5;eip=0x00a106; 	J(JNZ(loc_30350));	// 103876                  jnz     short loc_30350 ;~ 17C5:A106
cs=0x17c5;eip=0x00a108; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103877                  push    [bp+arg_6] ;~ 17C5:A108
cs=0x17c5;eip=0x00a10b; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103878                  push    [bp+arg_4] ;~ 17C5:A10B
cs=0x17c5;eip=0x00a10e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103879                  push    [bp+arg_2] ;~ 17C5:A10E
cs=0x17c5;eip=0x00a111; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103880                  push    [bp+arg_0] ;~ 17C5:A111
cs=0x17c5;eip=0x00a114; 	X(PUSH(word_4e564));	// 103881                  push    ds:word_4E564 ;~ 17C5:A114
cs=0x17c5;eip=0x00a118; 	J(CALL(sub_3036a,0));	// 103882                  call    sub_3036A ;~ 17C5:A118
cs=0x17c5;eip=0x00a11b; 	T(ADD(sp, 0x0A));	// 103884                  add     sp, 0Ah ;~ 17C5:A11B
cs=0x17c5;eip=0x00a11e; 	J(JMP(loc_30366));	// 103885                  jmp     short loc_30366 ;~ 17C5:A11E
loc_30350:
	// 6066 
cs=0x17c5;eip=0x00a120; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103889                  push    [bp+arg_6] ;~ 17C5:A120
cs=0x17c5;eip=0x00a123; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103890                  push    [bp+arg_4] ;~ 17C5:A123
cs=0x17c5;eip=0x00a126; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103891                  push    [bp+arg_2] ;~ 17C5:A126
cs=0x17c5;eip=0x00a129; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103892                  push    [bp+arg_0] ;~ 17C5:A129
cs=0x17c5;eip=0x00a12c; 	X(PUSH(word_4e57c));	// 103893                  push    ds:word_4E57C ;~ 17C5:A12C
cs=0x17c5;eip=0x00a130; 	J(CALL(sub_3036a,0));	// 103894                  call    sub_3036A ;~ 17C5:A130
seg2623_a133_proc:
	// 103898 
cs=0x17c5;eip=0x00a133; 	T(ADD(sp, 0x0A));	// 103898                  add     sp, 0Ah ;~ 17C5:A133
loc_30366:
	// 6067 
cs=0x17c5;eip=0x00a136; 	T(sp = bp;);	// 103902                  mov     sp, bp ;~ 17C5:A136
cs=0x17c5;eip=0x00a138; 	X(POP(bp));	// 103903                  pop     bp ;~ 17C5:A138
cs=0x17c5;eip=0x00a139; 	J(RETN(0));	// 103904                  retn ;~ 17C5:A139

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30350: 	goto loc_30350;
        case m2c::kloc_30366: 	goto loc_30366;
        case m2c::kseg2623_a133_proc: 	goto seg2623_a133_proc;
        case m2c::ksub_3032e: 	goto sub_3032e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group52(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group52:
    _begin:
sub_3036a:
	// 103911 
#undef arg_0
#define arg_0 4
	// 103914 arg_0           = word ptr  4 ;~ 17C5:A13A
#undef arg_2
#define arg_2 6
	// 103915 arg_2           = word ptr  6 ;~ 17C5:A13A
#undef arg_4
#define arg_4 8
	// 103916 arg_4           = word ptr  8 ;~ 17C5:A13A
#undef arg_6
#define arg_6 0x0A
	// 103917 arg_6           = word ptr  0Ah ;~ 17C5:A13A
#undef arg_8
#define arg_8 0x0C
	// 103918 arg_8           = word ptr  0Ch ;~ 17C5:A13A
cs=0x17c5;eip=0x00a13a; 	X(PUSH(bp));	// 103920                  push    bp ;~ 17C5:A13A
cs=0x17c5;eip=0x00a13b; 	T(bp = sp;);	// 103921                  mov     bp, sp ;~ 17C5:A13B
cs=0x17c5;eip=0x00a13d; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 103922                  mov     bx, [bp+arg_0] ;~ 17C5:A13D
cs=0x17c5;eip=0x00a140; 	X(MOV(*(dw*)(raddr(ds,bx+0x0C)), 0));	// 103923                  mov     word ptr [bx+0Ch], 0 ;~ 17C5:A140
cs=0x17c5;eip=0x00a145; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 103924                  mov     bx, [bp+arg_0] ;~ 17C5:A145
cs=0x17c5;eip=0x00a148; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 103925                  mov     ax, [bp+arg_4] ;~ 17C5:A148
cs=0x17c5;eip=0x00a14b; 	X(MOV(*(dw*)(raddr(ds,bx+8)), ax));	// 103926                  mov     [bx+8], ax ;~ 17C5:A14B
cs=0x17c5;eip=0x00a14e; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 103927                  mov     bx, [bp+arg_0] ;~ 17C5:A14E
cs=0x17c5;eip=0x00a151; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 103928                  mov     ax, [bp+arg_6] ;~ 17C5:A151
cs=0x17c5;eip=0x00a154; 	X(MOV(*(dw*)(raddr(ds,bx+0x0A)), ax));	// 103929                  mov     [bx+0Ah], ax ;~ 17C5:A154
cs=0x17c5;eip=0x00a157; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 103930                  mov     bx, [bp+arg_0] ;~ 17C5:A157
cs=0x17c5;eip=0x00a15a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_8))));	// 103931                  mov     ax, [bp+arg_8] ;~ 17C5:A15A
cs=0x17c5;eip=0x00a15d; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 103932                  mov     [bx+4], ax ;~ 17C5:A15D
cs=0x17c5;eip=0x00a160; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103933                  push    [bp+arg_2] ;~ 17C5:A160
cs=0x17c5;eip=0x00a163; 	J(CALL(sub_34c4e,0));	// 103934                  call    sub_34C4E ;~ 17C5:A163
cs=0x17c5;eip=0x00a166; 	T(ADD(sp, 2));	// 103935                  add     sp, 2 ;~ 17C5:A166
cs=0x17c5;eip=0x00a169; 	X(PUSH(ax));	// 103936                  push    ax ;~ 17C5:A169
cs=0x17c5;eip=0x00a16a; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103937                  push    [bp+arg_2] ;~ 17C5:A16A
cs=0x17c5;eip=0x00a16d; 	J(CALL(sub_34d72,0));	// 103938                  call    sub_34D72 ;~ 17C5:A16D
cs=0x17c5;eip=0x00a170; 	T(ADD(sp, 2));	// 103939                  add     sp, 2 ;~ 17C5:A170
cs=0x17c5;eip=0x00a173; 	X(PUSH(ax));	// 103940                  push    ax ;~ 17C5:A173
cs=0x17c5;eip=0x00a174; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103941                  push    [bp+arg_0] ;~ 17C5:A174
cs=0x17c5;eip=0x00a177; 	J(CALLF(sub_499b7,0));	// 103942                  call    far ptr sub_499B7 ;~ 17C5:A177
seg2623_a17c_proc:
	// 103946 
cs=0x17c5;eip=0x00a17c; 	T(ADD(sp, 6));	// 103946                  add     sp, 6 ;~ 17C5:A17C
cs=0x17c5;eip=0x00a17f; 	T(sp = bp;);	// 103947                  mov     sp, bp ;~ 17C5:A17F
cs=0x17c5;eip=0x00a181; 	X(POP(bp));	// 103948                  pop     bp ;~ 17C5:A181
cs=0x17c5;eip=0x00a182; 	J(RETN(0));	// 103949                  retn ;~ 17C5:A182

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_a17c_proc: 	goto seg2623_a17c_proc;
        case m2c::ksub_3036a: 	goto sub_3036a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group53(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group53:
    _begin:
sub_303b3:
	// 103955 
#undef var_14
#define var_14 -0x14
	// 103958 var_14          = byte ptr -14h ;~ 17C5:A183
#undef arg_0
#define arg_0 4
	// 103959 arg_0           = word ptr  4 ;~ 17C5:A183
#undef arg_2
#define arg_2 6
	// 103960 arg_2           = word ptr  6 ;~ 17C5:A183
#undef arg_4
#define arg_4 8
	// 103961 arg_4           = word ptr  8 ;~ 17C5:A183
#undef arg_6
#define arg_6 0x0A
	// 103962 arg_6           = word ptr  0Ah ;~ 17C5:A183
cs=0x17c5;eip=0x00a183; 	X(PUSH(bp));	// 103964                  push    bp ;~ 17C5:A183
cs=0x17c5;eip=0x00a184; 	T(bp = sp;);	// 103965                  mov     bp, sp ;~ 17C5:A184
cs=0x17c5;eip=0x00a186; 	T(SUB(sp, 0x14));	// 103966                  sub     sp, 14h ;~ 17C5:A186
cs=0x17c5;eip=0x00a189; 	T(ax = 0x0A;);	// 103967                  mov     ax, 0Ah ;~ 17C5:A189
cs=0x17c5;eip=0x00a18c; 	X(PUSH(ax));	// 103968                  push    ax ;~ 17C5:A18C
cs=0x17c5;eip=0x00a18d; 	T(ax = bp+var_14);	// 103969                  lea     ax, [bp+var_14] ;~ 17C5:A18D
cs=0x17c5;eip=0x00a190; 	X(PUSH(ax));	// 103970                  push    ax ;~ 17C5:A190
cs=0x17c5;eip=0x00a191; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 103971                  push    [bp+arg_0] ;~ 17C5:A191
cs=0x17c5;eip=0x00a194; 	J(CALL(sub_34c6a,0));	// 103972                  call    sub_34C6A ;~ 17C5:A194
cs=0x17c5;eip=0x00a197; 	T(ADD(sp, 6));	// 103973                  add     sp, 6 ;~ 17C5:A197
cs=0x17c5;eip=0x00a19a; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 103974                  push    [bp+arg_6] ;~ 17C5:A19A
cs=0x17c5;eip=0x00a19d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 103975                  push    [bp+arg_4] ;~ 17C5:A19D
cs=0x17c5;eip=0x00a1a0; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 103976                  push    [bp+arg_2] ;~ 17C5:A1A0
cs=0x17c5;eip=0x00a1a3; 	T(ax = bp+var_14);	// 103977                  lea     ax, [bp+var_14] ;~ 17C5:A1A3
cs=0x17c5;eip=0x00a1a6; 	X(PUSH(ax));	// 103978                  push    ax ;~ 17C5:A1A6
cs=0x17c5;eip=0x00a1a7; 	J(CALL(sub_302fb,0));	// 103979                  call    sub_302FB ;~ 17C5:A1A7
seg2623_a1aa_proc:
	// 103983 
cs=0x17c5;eip=0x00a1aa; 	T(ADD(sp, 8));	// 103983                  add     sp, 8 ;~ 17C5:A1AA
cs=0x17c5;eip=0x00a1ad; 	T(sp = bp;);	// 103984                  mov     sp, bp ;~ 17C5:A1AD
cs=0x17c5;eip=0x00a1af; 	X(POP(bp));	// 103985                  pop     bp ;~ 17C5:A1AF
cs=0x17c5;eip=0x00a1b0; 	J(RETN(0));	// 103986                  retn ;~ 17C5:A1B0

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_a1aa_proc: 	goto seg2623_a1aa_proc;
        case m2c::ksub_303b3: 	goto sub_303b3;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_303e1(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_303e1:
    _begin:
#undef arg_0
#define arg_0 4
	// 103994 arg_0           = word ptr  4 ;~ 17C5:A1B1
#undef arg_2
#define arg_2 6
	// 103995 arg_2           = word ptr  6 ;~ 17C5:A1B1
cs=0x17c5;eip=0x00a1b1; 	X(PUSH(bp));	// 103997                  push    bp ;~ 17C5:A1B1
cs=0x17c5;eip=0x00a1b2; 	T(bp = sp;);	// 103998                  mov     bp, sp ;~ 17C5:A1B2
cs=0x17c5;eip=0x00a1b4; 	X(byte_521c3 = 0x0D;);	// 103999                  mov     ds:byte_521C3, 0Dh ;~ 17C5:A1B4
cs=0x17c5;eip=0x00a1b9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 104000                  mov     ax, [bp+arg_0] ;~ 17C5:A1B9
cs=0x17c5;eip=0x00a1bc; 	X(word_521c6 = ax;);	// 104001                  mov     ds:word_521C6, ax ;~ 17C5:A1BC
cs=0x17c5;eip=0x00a1bf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 104002                  mov     ax, [bp+arg_2] ;~ 17C5:A1BF
cs=0x17c5;eip=0x00a1c2; 	X(word_521c8 = ax;);	// 104003                  mov     ds:word_521C8, ax ;~ 17C5:A1C2
cs=0x17c5;eip=0x00a1c5; 	X(byte_521c5 = 0;);	// 104004                  mov     ds:byte_521C5, 0 ;~ 17C5:A1C5
cs=0x17c5;eip=0x00a1ca; 	T(ax = 0x96E2;);	// 104005                  mov     ax, 96E2h ;~ 17C5:A1CA
cs=0x17c5;eip=0x00a1cd; 	X(PUSH(ax));	// 104006                  push    ax ;~ 17C5:A1CD
cs=0x17c5;eip=0x00a1ce; 	X(PUSH(ax));	// 104007                  push    ax ;~ 17C5:A1CE
cs=0x17c5;eip=0x00a1cf; 	T(ax = 0x10;);	// 104008                  mov     ax, 10h ;~ 17C5:A1CF
cs=0x17c5;eip=0x00a1d2; 	X(PUSH(ax));	// 104009                  push    ax ;~ 17C5:A1D2
cs=0x17c5;eip=0x00a1d3; 	J(CALL(sub_34cb2,0));	// 104010                  call    sub_34CB2 ;~ 17C5:A1D3
cs=0x17c5;eip=0x00a1d6; 	T(ADD(sp, 6));	// 104011                  add     sp, 6 ;~ 17C5:A1D6
cs=0x17c5;eip=0x00a1d9; 	T(al = byte_521c2;);	// 104012                  mov     al, ds:byte_521C2 ;~ 17C5:A1D9
cs=0x17c5;eip=0x00a1dc; 	T(SUB(ah, ah));	// 104013                  sub     ah, ah ;~ 17C5:A1DC
cs=0x17c5;eip=0x00a1de; 	J({;});	// 104014                  jmp     short $+2 ;~ 17C5:A1DE
loc_30410:
	// 6068 
cs=0x17c5;eip=0x00a1e0; 	T(sp = bp;);	// 104018                  mov     sp, bp ;~ 17C5:A1E0
cs=0x17c5;eip=0x00a1e2; 	X(POP(bp));	// 104019                  pop     bp ;~ 17C5:A1E2
cs=0x17c5;eip=0x00a1e3; 	J(RETN(0));	// 104020                  retn ;~ 17C5:A1E3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30410: 	goto loc_30410;
        case m2c::ksub_303e1: 	goto sub_303e1;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_30414(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_30414:
    _begin:
#undef arg_0
#define arg_0 4
	// 104031 arg_0           = word ptr  4 ;~ 17C5:A1E4
cs=0x17c5;eip=0x00a1e4; 	X(PUSH(bp));	// 104033                  push    bp ;~ 17C5:A1E4
cs=0x17c5;eip=0x00a1e5; 	T(bp = sp;);	// 104034                  mov     bp, sp ;~ 17C5:A1E5
cs=0x17c5;eip=0x00a1e7; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 104035                  push    [bp+arg_0] ;~ 17C5:A1E7
cs=0x17c5;eip=0x00a1ea; 	T(ax = 0x9690;);	// 104036                  mov     ax, 9690h ;~ 17C5:A1EA
cs=0x17c5;eip=0x00a1ed; 	X(PUSH(ax));	// 104037                  push    ax ;~ 17C5:A1ED
cs=0x17c5;eip=0x00a1ee; 	J(CALL(sub_34c1c,0));	// 104038                  call    sub_34C1C ;~ 17C5:A1EE
cs=0x17c5;eip=0x00a1f1; 	T(ADD(sp, 4));	// 104039                  add     sp, 4 ;~ 17C5:A1F1
cs=0x17c5;eip=0x00a1f4; 	T(ax = word_492f4;);	// 104040                  mov     ax, word_492F4 ;~ 17C5:A1F4
cs=0x17c5;eip=0x00a1f7; 	T(cx = ax;);	// 104041                  mov     cx, ax ;~ 17C5:A1F7
cs=0x17c5;eip=0x00a1f9; 	T(SHL(ax, 1));	// 104042                  shl     ax, 1 ;~ 17C5:A1F9
cs=0x17c5;eip=0x00a1fb; 	T(ADD(ax, cx));	// 104043                  add     ax, cx ;~ 17C5:A1FB
cs=0x17c5;eip=0x00a1fd; 	X(word_4e622 = ax;);	// 104044                  mov     ds:word_4E622, ax ;~ 17C5:A1FD
cs=0x17c5;eip=0x00a200; 	T(sp = bp;);	// 104045                  mov     sp, bp ;~ 17C5:A200
cs=0x17c5;eip=0x00a202; 	X(POP(bp));	// 104046                  pop     bp ;~ 17C5:A202
cs=0x17c5;eip=0x00a203; 	J(RETN(0));	// 104047                  retn ;~ 17C5:A203

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_30414: 	goto sub_30414;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_30434(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_30434:
    _begin:
#undef arg_0
#define arg_0 4
	// 104058 arg_0           = word ptr  4 ;~ 17C5:A204
cs=0x17c5;eip=0x00a204; 	X(PUSH(bp));	// 104060                  push    bp ;~ 17C5:A204
cs=0x17c5;eip=0x00a205; 	T(bp = sp;);	// 104061                  mov     bp, sp ;~ 17C5:A205
cs=0x17c5;eip=0x00a207; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 104062                  push    [bp+arg_0] ;~ 17C5:A207
cs=0x17c5;eip=0x00a20a; 	T(ax = 0x979A;);	// 104063                  mov     ax, 979Ah ;~ 17C5:A20A
cs=0x17c5;eip=0x00a20d; 	X(PUSH(ax));	// 104064                  push    ax ;~ 17C5:A20D
cs=0x17c5;eip=0x00a20e; 	J(CALL(sub_34c1c,0));	// 104065                  call    sub_34C1C ;~ 17C5:A20E
cs=0x17c5;eip=0x00a211; 	T(ADD(sp, 4));	// 104066                  add     sp, 4 ;~ 17C5:A211
cs=0x17c5;eip=0x00a214; 	T(ax = word_492f4;);	// 104067                  mov     ax, word_492F4 ;~ 17C5:A214
cs=0x17c5;eip=0x00a217; 	T(cx = ax;);	// 104068                  mov     cx, ax ;~ 17C5:A217
cs=0x17c5;eip=0x00a219; 	T(SHL(ax, 1));	// 104069                  shl     ax, 1 ;~ 17C5:A219
cs=0x17c5;eip=0x00a21b; 	T(ADD(ax, cx));	// 104070                  add     ax, cx ;~ 17C5:A21B
cs=0x17c5;eip=0x00a21d; 	X(word_4e624 = ax;);	// 104071                  mov     ds:word_4E624, ax ;~ 17C5:A21D
cs=0x17c5;eip=0x00a220; 	T(sp = bp;);	// 104072                  mov     sp, bp ;~ 17C5:A220
cs=0x17c5;eip=0x00a222; 	X(POP(bp));	// 104073                  pop     bp ;~ 17C5:A222
cs=0x17c5;eip=0x00a223; 	J(RETN(0));	// 104074                  retn ;~ 17C5:A223

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_30434: 	goto sub_30434;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_30454(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_30454:
    _begin:
#undef arg_0
#define arg_0 4
	// 104085 arg_0           = word ptr  4 ;~ 17C5:A224
#undef arg_2
#define arg_2 6
	// 104086 arg_2           = word ptr  6 ;~ 17C5:A224
cs=0x17c5;eip=0x00a224; 	X(PUSH(bp));	// 104088                  push    bp ;~ 17C5:A224
cs=0x17c5;eip=0x00a225; 	T(bp = sp;);	// 104089                  mov     bp, sp ;~ 17C5:A225
cs=0x17c5;eip=0x00a227; 	X(PUSH(si));	// 104090                  push    si ;~ 17C5:A227
cs=0x17c5;eip=0x00a228; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_2))));	// 104091                  mov     bx, [bp+arg_2] ;~ 17C5:A228
cs=0x17c5;eip=0x00a22b; 	T(cl = 4;);	// 104092                  mov     cl, 4 ;~ 17C5:A22B
cs=0x17c5;eip=0x00a22d; 	T(SHL(bx, cl));	// 104093                  shl     bx, cl ;~ 17C5:A22D
cs=0x17c5;eip=0x00a22f; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E46))));	// 104094                  mov     bx, [bx-7E46h] ;~ 17C5:A22F
cs=0x17c5;eip=0x00a233; 	T(AND(bx, 0x7F));	// 104095                  and     bx, 7Fh ;~ 17C5:A233
cs=0x17c5;eip=0x00a236; 	T(MOV(al, *(raddr(ds,bx-0x690C))));	// 104096                  mov     al, [bx-690Ch] ;~ 17C5:A236
cs=0x17c5;eip=0x00a23a; 	T(CBW);	// 104097                  cbw ;~ 17C5:A23A
cs=0x17c5;eip=0x00a23b; 	T(si = ax;);	// 104098                  mov     si, ax ;~ 17C5:A23B
cs=0x17c5;eip=0x00a23d; 	T(AND(si, 0x0F));	// 104099                  and     si, 0Fh ;~ 17C5:A23D
cs=0x17c5;eip=0x00a240; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 104100                  mov     bx, [bp+arg_0] ;~ 17C5:A240
cs=0x17c5;eip=0x00a243; 	T(ax = bx;);	// 104101                  mov     ax, bx ;~ 17C5:A243
cs=0x17c5;eip=0x00a245; 	T(SHL(bx, 1));	// 104102                  shl     bx, 1 ;~ 17C5:A245
cs=0x17c5;eip=0x00a247; 	T(ADD(bx, ax));	// 104103                  add     bx, ax ;~ 17C5:A247
cs=0x17c5;eip=0x00a249; 	T(SHL(bx, 1));	// 104104                  shl     bx, 1 ;~ 17C5:A249
cs=0x17c5;eip=0x00a24b; 	T(SHL(bx, 1));	// 104105                  shl     bx, 1 ;~ 17C5:A24B
cs=0x17c5;eip=0x00a24d; 	T(ADD(bx, ax));	// 104106                  add     bx, ax ;~ 17C5:A24D
cs=0x17c5;eip=0x00a24f; 	T(MOV(al, *(raddr(ds,bx+si+0x0A1E))));	// 104107                  mov     al, [bx+si+0A1Eh] ;~ 17C5:A24F
cs=0x17c5;eip=0x00a253; 	T(CBW);	// 104108                  cbw ;~ 17C5:A253
cs=0x17c5;eip=0x00a254; 	J({;});	// 104109                  jmp     short $+2 ;~ 17C5:A254
loc_30486:
	// 6069 
cs=0x17c5;eip=0x00a256; 	X(POP(si));	// 104113                  pop     si ;~ 17C5:A256
cs=0x17c5;eip=0x00a257; 	T(sp = bp;);	// 104114                  mov     sp, bp ;~ 17C5:A257
cs=0x17c5;eip=0x00a259; 	X(POP(bp));	// 104115                  pop     bp ;~ 17C5:A259
cs=0x17c5;eip=0x00a25a; 	J(RETN(0));	// 104116                  retn ;~ 17C5:A25A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30486: 	goto loc_30486;
        case m2c::ksub_30454: 	goto sub_30454;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group54(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group54:
    _begin:
sub_3048c:
	// 104126 
#undef var_12
#define var_12 -0x12
	// 104128 var_12          = word ptr -12h ;~ 17C5:A25C
#undef arg_0
#define arg_0 4
	// 104129 arg_0           = byte ptr  4 ;~ 17C5:A25C
cs=0x17c5;eip=0x00a25c; 	X(PUSH(bp));	// 104131                  push    bp ;~ 17C5:A25C
cs=0x17c5;eip=0x00a25d; 	T(bp = sp;);	// 104132                  mov     bp, sp ;~ 17C5:A25D
cs=0x17c5;eip=0x00a25f; 	T(SUB(sp, 0x16));	// 104133                  sub     sp, 16h ;~ 17C5:A25F
cs=0x17c5;eip=0x00a262; 	X(PUSH(si));	// 104134                  push    si ;~ 17C5:A262
cs=0x17c5;eip=0x00a263; 	T(ax = word_4e61c;);	// 104135                  mov     ax, ds:word_4E61C ;~ 17C5:A263
cs=0x17c5;eip=0x00a266; 	T(INC(ax));	// 104136                  inc     ax ;~ 17C5:A266
cs=0x17c5;eip=0x00a267; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), ax));	// 104137                  mov     [bp+var_12], ax ;~ 17C5:A267
cs=0x17c5;eip=0x00a26a; 	T(SUB(ax, ax));	// 104138                  sub     ax, ax ;~ 17C5:A26A
cs=0x17c5;eip=0x00a26c; 	X(PUSH(ax));	// 104139                  push    ax ;~ 17C5:A26C
cs=0x17c5;eip=0x00a26d; 	J(CALL(sub_30074,0));	// 104140                  call    sub_30074 ;~ 17C5:A26D
cs=0x17c5;eip=0x00a270; 	T(ADD(sp, 2));	// 104141                  add     sp, 2 ;~ 17C5:A270
cs=0x17c5;eip=0x00a273; 	T(ax = 0x0AF;);	// 104142                  mov     ax, 0AFh ;~ 17C5:A273
cs=0x17c5;eip=0x00a276; 	X(PUSH(ax));	// 104143                  push    ax ;~ 17C5:A276
cs=0x17c5;eip=0x00a277; 	T(ax = 0x0C7;);	// 104144                  mov     ax, 0C7h ;~ 17C5:A277
cs=0x17c5;eip=0x00a27a; 	X(PUSH(ax));	// 104145                  push    ax ;~ 17C5:A27A
cs=0x17c5;eip=0x00a27b; 	T(ax = 0x68;);	// 104146                  mov     ax, 68h ; 'h' ;~ 17C5:A27B
cs=0x17c5;eip=0x00a27e; 	X(PUSH(ax));	// 104147                  push    ax ;~ 17C5:A27E
cs=0x17c5;eip=0x00a27f; 	T(ax = 0x78;);	// 104148                  mov     ax, 78h ; 'x' ;~ 17C5:A27F
cs=0x17c5;eip=0x00a282; 	X(PUSH(ax));	// 104149                  push    ax ;~ 17C5:A282
cs=0x17c5;eip=0x00a283; 	T(CMP(*(raddr(ss,bp+arg_0)), 0));	// 104150                  cmp     [bp+arg_0], 0 ;~ 17C5:A283
cs=0x17c5;eip=0x00a287; 	J(JNZ(loc_304be));	// 104151                  jnz     short loc_304BE ;~ 17C5:A287
cs=0x17c5;eip=0x00a289; 	T(ax = word_4e564;);	// 104152                  mov     ax, ds:word_4E564 ;~ 17C5:A289
cs=0x17c5;eip=0x00a28c; 	J(JMP(loc_304c1));	// 104153                  jmp     short loc_304C1 ;~ 17C5:A28C
loc_304be:
	// 6070 
cs=0x17c5;eip=0x00a28e; 	T(ax = word_4e57c;);	// 104157                  mov     ax, ds:word_4E57C ;~ 17C5:A28E
loc_304c1:
	// 6071 
cs=0x17c5;eip=0x00a291; 	X(PUSH(ax));	// 104160                  push    ax ;~ 17C5:A291
cs=0x17c5;eip=0x00a292; 	J(CALLF(sub_37674,0));	// 104161                  call    sub_37674 ;~ 17C5:A292
seg2623_a297_proc:
	// 104165 
cs=0x17c5;eip=0x00a297; 	T(ADD(sp, 0x0A));	// 104165                  add     sp, 0Ah ;~ 17C5:A297
cs=0x17c5;eip=0x00a29a; 	T(ax = 8;);	// 104166                  mov     ax, 8 ;~ 17C5:A29A
cs=0x17c5;eip=0x00a29d; 	X(PUSH(ax));	// 104167                  push    ax ;~ 17C5:A29D
cs=0x17c5;eip=0x00a29e; 	J(CALL(sub_30074,0));	// 104168                  call    sub_30074 ;~ 17C5:A29E
cs=0x17c5;eip=0x00a2a1; 	T(ADD(sp, 2));	// 104169                  add     sp, 2 ;~ 17C5:A2A1
cs=0x17c5;eip=0x00a2a4; 	X(MOV(*(dw*)(raddr(ss,bp-0x16)), 1));	// 104170                  mov     word ptr [bp-16h], 1 ;~ 17C5:A2A4
cs=0x17c5;eip=0x00a2a9; 	T(CMP(word_4e61c, 2));	// 104171                  cmp     ds:word_4E61C, 2 ;~ 17C5:A2A9
cs=0x17c5;eip=0x00a2ae; 	J(JGE(loc_304f6));	// 104172                  jge     short loc_304F6 ;~ 17C5:A2AE
cs=0x17c5;eip=0x00a2b0; 	T(CMP(word_4f20c, 0));	// 104173                  cmp     ds:word_4F20C, 0 ;~ 17C5:A2B0
cs=0x17c5;eip=0x00a2b5; 	J(JZ(loc_304f6));	// 104174                  jz      short loc_304F6 ;~ 17C5:A2B5
cs=0x17c5;eip=0x00a2b7; 	T(ax = 1;);	// 104175                  mov     ax, 1 ;~ 17C5:A2B7
cs=0x17c5;eip=0x00a2ba; 	T(cl = 2;);	// 104176                  mov     cl, 2 ;~ 17C5:A2BA
cs=0x17c5;eip=0x00a2bc; 	T(SUB(cl, *(db*)(&word_4e61c)));	// 104177                  sub     cl, byte ptr ds:word_4E61C ;~ 17C5:A2BC
cs=0x17c5;eip=0x00a2c0; 	T(SHL(ax, cl));	// 104178                  shl     ax, cl ;~ 17C5:A2C0
cs=0x17c5;eip=0x00a2c2; 	T(INC(ax));	// 104179                  inc     ax ;~ 17C5:A2C2
cs=0x17c5;eip=0x00a2c3; 	X(MOV(*(dw*)(raddr(ss,bp-0x16)), ax));	// 104180                  mov     [bp-16h], ax ;~ 17C5:A2C3
loc_304f6:
	// 6072 
cs=0x17c5;eip=0x00a2c6; 	T(ax = 1;);	// 104184                  mov     ax, 1 ;~ 17C5:A2C6
cs=0x17c5;eip=0x00a2c9; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x16))));	// 104185                  sub     ax, [bp-16h] ;~ 17C5:A2C9
cs=0x17c5;eip=0x00a2cc; 	X(MOV(*(dw*)(raddr(ss,bp-0x14)), ax));	// 104186                  mov     [bp-14h], ax ;~ 17C5:A2CC
cs=0x17c5;eip=0x00a2cf; 	T(ax = word_520f0;);	// 104187                  mov     ax, ds:word_520F0 ;~ 17C5:A2CF
cs=0x17c5;eip=0x00a2d2; 	T(AND(ax, 0x0F800));	// 104188                  and     ax, 0F800h ;~ 17C5:A2D2
cs=0x17c5;eip=0x00a2d5; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 104189                  mov     [bp-0Ch], ax ;~ 17C5:A2D5
cs=0x17c5;eip=0x00a2d8; 	T(ax = word_52100;);	// 104190                  mov     ax, ds:word_52100 ;~ 17C5:A2D8
cs=0x17c5;eip=0x00a2db; 	T(AND(ax, 0x0F800));	// 104191                  and     ax, 0F800h ;~ 17C5:A2DB
cs=0x17c5;eip=0x00a2de; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), ax));	// 104192                  mov     [bp-10h], ax ;~ 17C5:A2DE
cs=0x17c5;eip=0x00a2e1; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x14))));	// 104193                  mov     ax, [bp-14h] ;~ 17C5:A2E1
cs=0x17c5;eip=0x00a2e4; 	T(SHL(ax, 1));	// 104194                  shl     ax, 1 ;~ 17C5:A2E4
cs=0x17c5;eip=0x00a2e6; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104195                  mov     [bp-0Eh], ax ;~ 17C5:A2E6
cs=0x17c5;eip=0x00a2e9; 	J(JMP(loc_30583));	// 104196                  jmp     short loc_30583 ;~ 17C5:A2E9
loc_3051c:
	// 6073 
cs=0x17c5;eip=0x00a2ec; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x10))));	// 104201                  mov     ax, [bp-10h] ;~ 17C5:A2EC
cs=0x17c5;eip=0x00a2ef; 	T(ADD(ah, 0x1C));	// 104202                  add     ah, 1Ch ;~ 17C5:A2EF
cs=0x17c5;eip=0x00a2f2; 	X(PUSH(ax));	// 104203                  push    ax ;~ 17C5:A2F2
cs=0x17c5;eip=0x00a2f3; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0E))));	// 104204                  mov     ax, [bp-0Eh] ;~ 17C5:A2F3
cs=0x17c5;eip=0x00a2f6; 	T(cl = 0x0A;);	// 104205                  mov     cl, 0Ah ;~ 17C5:A2F6
cs=0x17c5;eip=0x00a2f8; 	T(SHL(ax, cl));	// 104206                  shl     ax, cl ;~ 17C5:A2F8
cs=0x17c5;eip=0x00a2fa; 	T(ADD(ax, *(dw*)(raddr(ss,bp-0x0C))));	// 104207                  add     ax, [bp-0Ch] ;~ 17C5:A2FA
cs=0x17c5;eip=0x00a2fd; 	X(PUSH(ax));	// 104208                  push    ax ;~ 17C5:A2FD
cs=0x17c5;eip=0x00a2fe; 	J(CALL(sub_309f4,0));	// 104209                  call    sub_309F4 ;~ 17C5:A2FE
cs=0x17c5;eip=0x00a301; 	T(ADD(sp, 4));	// 104210                  add     sp, 4 ;~ 17C5:A301
cs=0x17c5;eip=0x00a304; 	T(ax = *(word_4aa98););	// 104211                  mov     ax, word_4AA98 ;~ 17C5:A304
cs=0x17c5;eip=0x00a307; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 104212                  mov     [bp-2], ax ;~ 17C5:A307
cs=0x17c5;eip=0x00a30a; 	T(ax = *(word_4ac7c););	// 104213                  mov     ax, word_4AC7C ;~ 17C5:A30A
cs=0x17c5;eip=0x00a30d; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 104214                  mov     [bp-6], ax ;~ 17C5:A30D
cs=0x17c5;eip=0x00a310; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x10))));	// 104215                  mov     ax, [bp-10h] ;~ 17C5:A310
cs=0x17c5;eip=0x00a313; 	T(SUB(ax, 0x1800));	// 104216                  sub     ax, 1800h ;~ 17C5:A313
cs=0x17c5;eip=0x00a316; 	X(PUSH(ax));	// 104217                  push    ax ;~ 17C5:A316
cs=0x17c5;eip=0x00a317; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0E))));	// 104218                  mov     ax, [bp-0Eh] ;~ 17C5:A317
cs=0x17c5;eip=0x00a31a; 	T(cl = 0x0A;);	// 104219                  mov     cl, 0Ah ;~ 17C5:A31A
cs=0x17c5;eip=0x00a31c; 	T(SHL(ax, cl));	// 104220                  shl     ax, cl ;~ 17C5:A31C
cs=0x17c5;eip=0x00a31e; 	T(ADD(ax, *(dw*)(raddr(ss,bp-0x0C))));	// 104221                  add     ax, [bp-0Ch] ;~ 17C5:A31E
cs=0x17c5;eip=0x00a321; 	X(PUSH(ax));	// 104222                  push    ax ;~ 17C5:A321
cs=0x17c5;eip=0x00a322; 	J(CALL(sub_309f4,0));	// 104223                  call    sub_309F4 ;~ 17C5:A322
cs=0x17c5;eip=0x00a325; 	T(ADD(sp, 4));	// 104224                  add     sp, 4 ;~ 17C5:A325
cs=0x17c5;eip=0x00a328; 	T(SUB(ax, ax));	// 104225                  sub     ax, ax ;~ 17C5:A328
cs=0x17c5;eip=0x00a32a; 	X(PUSH(ax));	// 104226                  push    ax ;~ 17C5:A32A
cs=0x17c5;eip=0x00a32b; 	T(ax = 0x0AF;);	// 104227                  mov     ax, 0AFh ;~ 17C5:A32B
cs=0x17c5;eip=0x00a32e; 	X(PUSH(ax));	// 104228                  push    ax ;~ 17C5:A32E
cs=0x17c5;eip=0x00a32f; 	T(ax = 0x68;);	// 104229                  mov     ax, 68h ; 'h' ;~ 17C5:A32F
cs=0x17c5;eip=0x00a332; 	X(PUSH(ax));	// 104230                  push    ax ;~ 17C5:A332
cs=0x17c5;eip=0x00a333; 	T(ax = 0x0C7;);	// 104231                  mov     ax, 0C7h ;~ 17C5:A333
cs=0x17c5;eip=0x00a336; 	X(PUSH(ax));	// 104232                  push    ax ;~ 17C5:A336
cs=0x17c5;eip=0x00a337; 	T(ax = 0x78;);	// 104233                  mov     ax, 78h ; 'x' ;~ 17C5:A337
cs=0x17c5;eip=0x00a33a; 	X(PUSH(ax));	// 104234                  push    ax ;~ 17C5:A33A
cs=0x17c5;eip=0x00a33b; 	X(PUSH(*(word_4ac7c)));	// 104235                  push    word_4AC7C ;~ 17C5:A33B
cs=0x17c5;eip=0x00a33f; 	X(PUSH(*(word_4aa98)));	// 104236                  push    word_4AA98 ;~ 17C5:A33F
cs=0x17c5;eip=0x00a343; 	X(PUSH(*(dw*)(raddr(ss,bp-6))));	// 104237                  push    word ptr [bp-6] ;~ 17C5:A343
cs=0x17c5;eip=0x00a346; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 104238                  push    word ptr [bp-2] ;~ 17C5:A346
cs=0x17c5;eip=0x00a349; 	J(CALL(sub_2feb4,0));	// 104239                  call    sub_2FEB4 ;~ 17C5:A349
cs=0x17c5;eip=0x00a34c; 	T(ADD(sp, 0x12));	// 104241                  add     sp, 12h ;~ 17C5:A34C
cs=0x17c5;eip=0x00a34f; 	X(ADD(*(dw*)(raddr(ss,bp-0x0E)), 2));	// 104242                  add     word ptr [bp-0Eh], 2 ;~ 17C5:A34F
loc_30583:
	// 6074 
cs=0x17c5;eip=0x00a353; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x16))));	// 104245                  mov     ax, [bp-16h] ;~ 17C5:A353
cs=0x17c5;eip=0x00a356; 	T(SHL(ax, 1));	// 104246                  shl     ax, 1 ;~ 17C5:A356
cs=0x17c5;eip=0x00a358; 	T(CMP(ax, *(dw*)(raddr(ss,bp-0x0E))));	// 104247                  cmp     ax, [bp-0Eh] ;~ 17C5:A358
cs=0x17c5;eip=0x00a35b; 	J(JGE(loc_3051c));	// 104248                  jge     short loc_3051C ;~ 17C5:A35B
cs=0x17c5;eip=0x00a35d; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x14))));	// 104249                  mov     ax, [bp-14h] ;~ 17C5:A35D
cs=0x17c5;eip=0x00a360; 	T(SHL(ax, 1));	// 104250                  shl     ax, 1 ;~ 17C5:A360
cs=0x17c5;eip=0x00a362; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104251                  mov     [bp-0Eh], ax ;~ 17C5:A362
cs=0x17c5;eip=0x00a365; 	J(JMP(loc_305ff));	// 104252                  jmp     short loc_305FF ;~ 17C5:A365
loc_30598:
	// 6075 
cs=0x17c5;eip=0x00a368; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0E))));	// 104257                  mov     ax, [bp-0Eh] ;~ 17C5:A368
cs=0x17c5;eip=0x00a36b; 	T(cl = 0x0A;);	// 104258                  mov     cl, 0Ah ;~ 17C5:A36B
cs=0x17c5;eip=0x00a36d; 	T(SHL(ax, cl));	// 104259                  shl     ax, cl ;~ 17C5:A36D
cs=0x17c5;eip=0x00a36f; 	T(ADD(ax, *(dw*)(raddr(ss,bp-0x10))));	// 104260                  add     ax, [bp-10h] ;~ 17C5:A36F
cs=0x17c5;eip=0x00a372; 	X(PUSH(ax));	// 104261                  push    ax ;~ 17C5:A372
cs=0x17c5;eip=0x00a373; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0C))));	// 104262                  mov     ax, [bp-0Ch] ;~ 17C5:A373
cs=0x17c5;eip=0x00a376; 	T(ADD(ah, 0x1C));	// 104263                  add     ah, 1Ch ;~ 17C5:A376
cs=0x17c5;eip=0x00a379; 	X(PUSH(ax));	// 104264                  push    ax ;~ 17C5:A379
cs=0x17c5;eip=0x00a37a; 	J(CALL(sub_309f4,0));	// 104265                  call    sub_309F4 ;~ 17C5:A37A
cs=0x17c5;eip=0x00a37d; 	T(ADD(sp, 4));	// 104266                  add     sp, 4 ;~ 17C5:A37D
cs=0x17c5;eip=0x00a380; 	T(ax = *(word_4aa98););	// 104267                  mov     ax, word_4AA98 ;~ 17C5:A380
cs=0x17c5;eip=0x00a383; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 104268                  mov     [bp-2], ax ;~ 17C5:A383
cs=0x17c5;eip=0x00a386; 	T(ax = *(word_4ac7c););	// 104269                  mov     ax, word_4AC7C ;~ 17C5:A386
cs=0x17c5;eip=0x00a389; 	X(MOV(*(dw*)(raddr(ss,bp-6)), ax));	// 104270                  mov     [bp-6], ax ;~ 17C5:A389
cs=0x17c5;eip=0x00a38c; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0E))));	// 104271                  mov     ax, [bp-0Eh] ;~ 17C5:A38C
cs=0x17c5;eip=0x00a38f; 	T(cl = 0x0A;);	// 104272                  mov     cl, 0Ah ;~ 17C5:A38F
cs=0x17c5;eip=0x00a391; 	T(SHL(ax, cl));	// 104273                  shl     ax, cl ;~ 17C5:A391
cs=0x17c5;eip=0x00a393; 	T(ADD(ax, *(dw*)(raddr(ss,bp-0x10))));	// 104274                  add     ax, [bp-10h] ;~ 17C5:A393
cs=0x17c5;eip=0x00a396; 	X(PUSH(ax));	// 104275                  push    ax ;~ 17C5:A396
cs=0x17c5;eip=0x00a397; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0C))));	// 104276                  mov     ax, [bp-0Ch] ;~ 17C5:A397
cs=0x17c5;eip=0x00a39a; 	T(SUB(ax, 0x1800));	// 104277                  sub     ax, 1800h ;~ 17C5:A39A
cs=0x17c5;eip=0x00a39d; 	X(PUSH(ax));	// 104278                  push    ax ;~ 17C5:A39D
cs=0x17c5;eip=0x00a39e; 	J(CALL(sub_309f4,0));	// 104279                  call    sub_309F4 ;~ 17C5:A39E
cs=0x17c5;eip=0x00a3a1; 	T(ADD(sp, 4));	// 104280                  add     sp, 4 ;~ 17C5:A3A1
cs=0x17c5;eip=0x00a3a4; 	T(SUB(ax, ax));	// 104281                  sub     ax, ax ;~ 17C5:A3A4
cs=0x17c5;eip=0x00a3a6; 	X(PUSH(ax));	// 104282                  push    ax ;~ 17C5:A3A6
cs=0x17c5;eip=0x00a3a7; 	T(ax = 0x0AF;);	// 104283                  mov     ax, 0AFh ;~ 17C5:A3A7
cs=0x17c5;eip=0x00a3aa; 	X(PUSH(ax));	// 104284                  push    ax ;~ 17C5:A3AA
cs=0x17c5;eip=0x00a3ab; 	T(ax = 0x68;);	// 104285                  mov     ax, 68h ; 'h' ;~ 17C5:A3AB
cs=0x17c5;eip=0x00a3ae; 	X(PUSH(ax));	// 104286                  push    ax ;~ 17C5:A3AE
cs=0x17c5;eip=0x00a3af; 	T(ax = 0x0C7;);	// 104287                  mov     ax, 0C7h ;~ 17C5:A3AF
cs=0x17c5;eip=0x00a3b2; 	X(PUSH(ax));	// 104288                  push    ax ;~ 17C5:A3B2
cs=0x17c5;eip=0x00a3b3; 	T(ax = 0x78;);	// 104289                  mov     ax, 78h ; 'x' ;~ 17C5:A3B3
cs=0x17c5;eip=0x00a3b6; 	X(PUSH(ax));	// 104290                  push    ax ;~ 17C5:A3B6
cs=0x17c5;eip=0x00a3b7; 	X(PUSH(*(word_4ac7c)));	// 104291                  push    word_4AC7C ;~ 17C5:A3B7
cs=0x17c5;eip=0x00a3bb; 	X(PUSH(*(word_4aa98)));	// 104292                  push    word_4AA98 ;~ 17C5:A3BB
cs=0x17c5;eip=0x00a3bf; 	X(PUSH(*(dw*)(raddr(ss,bp-6))));	// 104293                  push    word ptr [bp-6] ;~ 17C5:A3BF
cs=0x17c5;eip=0x00a3c2; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 104294                  push    word ptr [bp-2] ;~ 17C5:A3C2
cs=0x17c5;eip=0x00a3c5; 	J(CALL(sub_2feb4,0));	// 104295                  call    sub_2FEB4 ;~ 17C5:A3C5
cs=0x17c5;eip=0x00a3c8; 	T(ADD(sp, 0x12));	// 104297                  add     sp, 12h ;~ 17C5:A3C8
cs=0x17c5;eip=0x00a3cb; 	X(ADD(*(dw*)(raddr(ss,bp-0x0E)), 2));	// 104298                  add     word ptr [bp-0Eh], 2 ;~ 17C5:A3CB
loc_305ff:
	// 6076 
cs=0x17c5;eip=0x00a3cf; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x16))));	// 104301                  mov     ax, [bp-16h] ;~ 17C5:A3CF
cs=0x17c5;eip=0x00a3d2; 	T(SHL(ax, 1));	// 104302                  shl     ax, 1 ;~ 17C5:A3D2
cs=0x17c5;eip=0x00a3d4; 	T(CMP(ax, *(dw*)(raddr(ss,bp-0x0E))));	// 104303                  cmp     ax, [bp-0Eh] ;~ 17C5:A3D4
cs=0x17c5;eip=0x00a3d7; 	J(JGE(loc_30598));	// 104304                  jge     short loc_30598 ;~ 17C5:A3D7
cs=0x17c5;eip=0x00a3d9; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), 0));	// 104305                  mov     word ptr [bp-0Eh], 0 ;~ 17C5:A3D9
cs=0x17c5;eip=0x00a3de; 	J(JMP(loc_306e7));	// 104306                  jmp     loc_306E7 ;~ 17C5:A3DE
loc_30612:
	// 6077 
cs=0x17c5;eip=0x00a3e2; 	T(ax = 0x24;);	// 104311                  mov     ax, 24h ; '$' ;~ 17C5:A3E2
cs=0x17c5;eip=0x00a3e5; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0E))));	// 104312                  imul    word ptr [bp-0Eh] ;~ 17C5:A3E5
cs=0x17c5;eip=0x00a3e8; 	T(si = ax;);	// 104313                  mov     si, ax ;~ 17C5:A3E8
cs=0x17c5;eip=0x00a3ea; 	T(TEST(*(raddr(ds,si-0x7696)), 2));	// 104314                  test    byte ptr [si-7696h], 2 ;~ 17C5:A3EA
cs=0x17c5;eip=0x00a3ef; 	J(JNZ(loc_30624));	// 104315                  jnz     short loc_30624 ;~ 17C5:A3EF
cs=0x17c5;eip=0x00a3f1; 	J(JMP(loc_306e4));	// 104316                  jmp     loc_306E4 ;~ 17C5:A3F1
loc_30624:
	// 6078 
cs=0x17c5;eip=0x00a3f4; 	T(CMP(*(dw*)(raddr(ds,si-0x7694)), 0));	// 104320                  cmp     word ptr [si-7694h], 0 ;~ 17C5:A3F4
cs=0x17c5;eip=0x00a3f9; 	J(JNZ(loc_3062e));	// 104321                  jnz     short loc_3062E ;~ 17C5:A3F9
cs=0x17c5;eip=0x00a3fb; 	J(JMP(loc_306e4));	// 104322                  jmp     loc_306E4 ;~ 17C5:A3FB
loc_3062e:
	// 6079 
cs=0x17c5;eip=0x00a3fe; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 104326                  push    word ptr [si-76AAh] ;~ 17C5:A3FE
cs=0x17c5;eip=0x00a402; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 104327                  push    word ptr [si-76ACh] ;~ 17C5:A402
cs=0x17c5;eip=0x00a406; 	J(CALL(sub_309f4,0));	// 104328                  call    sub_309F4 ;~ 17C5:A406
cs=0x17c5;eip=0x00a409; 	T(ADD(sp, 4));	// 104329                  add     sp, 4 ;~ 17C5:A409
cs=0x17c5;eip=0x00a40c; 	T(CMP(word_52246, 0x0FFFF));	// 104330                  cmp     ds:word_52246, 0FFFFh ;~ 17C5:A40C
cs=0x17c5;eip=0x00a411; 	J(JNZ(loc_30646));	// 104331                  jnz     short loc_30646 ;~ 17C5:A411
cs=0x17c5;eip=0x00a413; 	J(JMP(loc_306e4));	// 104332                  jmp     loc_306E4 ;~ 17C5:A413
loc_30646:
	// 6080 
cs=0x17c5;eip=0x00a416; 	T(CMP(word_5268c, 1));	// 104336                  cmp     ds:word_5268C, 1 ;~ 17C5:A416
cs=0x17c5;eip=0x00a41b; 	J(JNZ(loc_30667));	// 104337                  jnz     short loc_30667 ;~ 17C5:A41B
cs=0x17c5;eip=0x00a41d; 	T(ax = word_49922;);	// 104338                  mov     ax, word_49922 ;~ 17C5:A41D
cs=0x17c5;eip=0x00a420; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104339                  cmp     [bp-0Eh], ax ;~ 17C5:A420
cs=0x17c5;eip=0x00a423; 	J(JNZ(loc_30667));	// 104340                  jnz     short loc_30667 ;~ 17C5:A423
cs=0x17c5;eip=0x00a425; 	T(ax = 7;);	// 104341                  mov     ax, 7 ;~ 17C5:A425
cs=0x17c5;eip=0x00a428; 	X(PUSH(ax));	// 104342                  push    ax ;~ 17C5:A428
cs=0x17c5;eip=0x00a429; 	X(PUSH(*(word_4ac7c)));	// 104343                  push    word_4AC7C ;~ 17C5:A429
cs=0x17c5;eip=0x00a42d; 	X(PUSH(*(word_4aa98)));	// 104344                  push    word_4AA98 ;~ 17C5:A42D
cs=0x17c5;eip=0x00a431; 	J(CALL(sub_30970,0));	// 104345                  call    sub_30970 ;~ 17C5:A431
cs=0x17c5;eip=0x00a434; 	T(ADD(sp, 6));	// 104347                  add     sp, 6 ;~ 17C5:A434
loc_30667:
	// 6081 
cs=0x17c5;eip=0x00a437; 	T(CMP(word_49928, 0));	// 104351                  cmp     word_49928, 0 ;~ 17C5:A437
cs=0x17c5;eip=0x00a43c; 	J(JLE(loc_3068c));	// 104352                  jle     short loc_3068C ;~ 17C5:A43C
cs=0x17c5;eip=0x00a43e; 	T(ax = 0x0FFFF;);	// 104353                  mov     ax, 0FFFFh ;~ 17C5:A43E
cs=0x17c5;eip=0x00a441; 	T(SUB(ax, word_520c6));	// 104354                  sub     ax, ds:word_520C6 ;~ 17C5:A441
cs=0x17c5;eip=0x00a445; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104355                  cmp     [bp-0Eh], ax ;~ 17C5:A445
cs=0x17c5;eip=0x00a448; 	J(JNZ(loc_3068c));	// 104356                  jnz     short loc_3068C ;~ 17C5:A448
cs=0x17c5;eip=0x00a44a; 	X(PUSH(word_4f1a2));	// 104357                  push    ds:word_4F1A2 ;~ 17C5:A44A
cs=0x17c5;eip=0x00a44e; 	X(PUSH(*(word_4ac7c)));	// 104358                  push    word_4AC7C ;~ 17C5:A44E
cs=0x17c5;eip=0x00a452; 	X(PUSH(*(word_4aa98)));	// 104359                  push    word_4AA98 ;~ 17C5:A452
cs=0x17c5;eip=0x00a456; 	J(CALL(sub_30970,0));	// 104360                  call    sub_30970 ;~ 17C5:A456
cs=0x17c5;eip=0x00a459; 	T(ADD(sp, 6));	// 104362                  add     sp, 6 ;~ 17C5:A459
loc_3068c:
	// 6082 
cs=0x17c5;eip=0x00a45c; 	T(ax = 0x24;);	// 104366                  mov     ax, 24h ; '$' ;~ 17C5:A45C
cs=0x17c5;eip=0x00a45f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0E))));	// 104367                  imul    word ptr [bp-0Eh] ;~ 17C5:A45F
cs=0x17c5;eip=0x00a462; 	T(si = ax;);	// 104368                  mov     si, ax ;~ 17C5:A462
cs=0x17c5;eip=0x00a464; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x769E))));	// 104369                  mov     ax, [si-769Eh] ;~ 17C5:A464
cs=0x17c5;eip=0x00a468; 	T(SUB(ax, word_4e2f8));	// 104370                  sub     ax, ds:word_4E2F8 ;~ 17C5:A468
cs=0x17c5;eip=0x00a46c; 	T(ADD(ah, 8));	// 104371                  add     ah, 8 ;~ 17C5:A46C
cs=0x17c5;eip=0x00a46f; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 104372                  mov     [bp-4], ax ;~ 17C5:A46F
cs=0x17c5;eip=0x00a472; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76A8))));	// 104373                  mov     ax, [si-76A8h] ;~ 17C5:A472
cs=0x17c5;eip=0x00a476; 	T(SUB(ax, word_4e2fe));	// 104374                  sub     ax, ds:word_4E2FE ;~ 17C5:A476
cs=0x17c5;eip=0x00a47a; 	X(MOV(*(dw*)(raddr(ss,bp-0x0A)), ax));	// 104375                  mov     [bp-0Ah], ax ;~ 17C5:A47A
cs=0x17c5;eip=0x00a47d; 	X(MOV(*(dw*)(raddr(ss,bp-8)), 0));	// 104376                  mov     word ptr [bp-8], 0 ;~ 17C5:A47D
cs=0x17c5;eip=0x00a482; 	T(CMP(ax, 0x0FC18));	// 104377                  cmp     ax, 0FC18h ;~ 17C5:A482
cs=0x17c5;eip=0x00a485; 	J(JGE(loc_306bc));	// 104378                  jge     short loc_306BC ;~ 17C5:A485
cs=0x17c5;eip=0x00a487; 	X(MOV(*(dw*)(raddr(ss,bp-8)), 1));	// 104379                  mov     word ptr [bp-8], 1 ;~ 17C5:A487
loc_306bc:
	// 6083 
cs=0x17c5;eip=0x00a48c; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), 0x3E8));	// 104382                  cmp     word ptr [bp-0Ah], 3E8h ;~ 17C5:A48C
cs=0x17c5;eip=0x00a491; 	J(JLE(loc_306c8));	// 104383                  jle     short loc_306C8 ;~ 17C5:A491
cs=0x17c5;eip=0x00a493; 	X(MOV(*(dw*)(raddr(ss,bp-8)), 2));	// 104384                  mov     word ptr [bp-8], 2 ;~ 17C5:A493
loc_306c8:
	// 6084 
cs=0x17c5;eip=0x00a498; 	X(PUSH(*(word_4ac7c)));	// 104387                  push    word_4AC7C ;~ 17C5:A498
cs=0x17c5;eip=0x00a49c; 	X(PUSH(*(word_4aa98)));	// 104388                  push    word_4AA98 ;~ 17C5:A49C
cs=0x17c5;eip=0x00a4a0; 	X(PUSH(*(dw*)(raddr(ss,bp-8))));	// 104389                  push    word ptr [bp-8] ;~ 17C5:A4A0
cs=0x17c5;eip=0x00a4a3; 	T(MOV(ax, *(dw*)(raddr(ss,bp-4))));	// 104390                  mov     ax, [bp-4] ;~ 17C5:A4A3
cs=0x17c5;eip=0x00a4a6; 	T(cl = 0x0C;);	// 104391                  mov     cl, 0Ch ;~ 17C5:A4A6
cs=0x17c5;eip=0x00a4a8; 	T(SAR(ax, cl));	// 104392                  sar     ax, cl ;~ 17C5:A4A8
cs=0x17c5;eip=0x00a4aa; 	T(AND(ax, 0x0F));	// 104393                  and     ax, 0Fh ;~ 17C5:A4AA
cs=0x17c5;eip=0x00a4ad; 	X(PUSH(ax));	// 104394                  push    ax ;~ 17C5:A4AD
cs=0x17c5;eip=0x00a4ae; 	J(CALL(sub_30aa2,0));	// 104395                  call    sub_30AA2 ;~ 17C5:A4AE
cs=0x17c5;eip=0x00a4b1; 	T(ADD(sp, 8));	// 104397                  add     sp, 8 ;~ 17C5:A4B1
loc_306e4:
	// 6085 
cs=0x17c5;eip=0x00a4b4; 	X(INC(*(dw*)(raddr(ss,bp-0x0E))));	// 104401                  inc     word ptr [bp-0Eh] ;~ 17C5:A4B4
loc_306e7:
	// 6086 
cs=0x17c5;eip=0x00a4b7; 	T(ax = word_52276;);	// 104404                  mov     ax, ds:word_52276 ;~ 17C5:A4B7
cs=0x17c5;eip=0x00a4ba; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104405                  cmp     [bp-0Eh], ax ;~ 17C5:A4BA
cs=0x17c5;eip=0x00a4bd; 	J(JGE(loc_306f2));	// 104406                  jge     short loc_306F2 ;~ 17C5:A4BD
cs=0x17c5;eip=0x00a4bf; 	J(JMP(loc_30612));	// 104407                  jmp     loc_30612 ;~ 17C5:A4BF
loc_306f2:
	// 6087 
cs=0x17c5;eip=0x00a4c2; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), 0));	// 104411                  mov     word ptr [bp-0Eh], 0 ;~ 17C5:A4C2
cs=0x17c5;eip=0x00a4c7; 	J(JMP(loc_307a1));	// 104412                  jmp     loc_307A1 ;~ 17C5:A4C7
loc_306fa:
	// 6088 
cs=0x17c5;eip=0x00a4ca; 	T(ax = 0x0E;);	// 104416                  mov     ax, 0Eh ;~ 17C5:A4CA
loc_306fd:
	// 6089 
cs=0x17c5;eip=0x00a4cd; 	X(PUSH(ax));	// 104419                  push    ax ;~ 17C5:A4CD
cs=0x17c5;eip=0x00a4ce; 	J(CALL(sub_30074,0));	// 104420                  call    sub_30074 ;~ 17C5:A4CE
cs=0x17c5;eip=0x00a4d1; 	T(ADD(sp, 2));	// 104421                  add     sp, 2 ;~ 17C5:A4D1
cs=0x17c5;eip=0x00a4d4; 	T(ax = 0x18;);	// 104422                  mov     ax, 18h ;~ 17C5:A4D4
cs=0x17c5;eip=0x00a4d7; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0E))));	// 104423                  imul    word ptr [bp-0Eh] ;~ 17C5:A4D7
cs=0x17c5;eip=0x00a4da; 	T(bx = ax;);	// 104424                  mov     bx, ax ;~ 17C5:A4DA
cs=0x17c5;eip=0x00a4dc; 	T(ax = 0x12;);	// 104425                  mov     ax, 12h ;~ 17C5:A4DC
cs=0x17c5;eip=0x00a4df; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x0D24))));	// 104426                  imul    word ptr [bx+0D24h] ;~ 17C5:A4DF
cs=0x17c5;eip=0x00a4e3; 	T(bx = ax;);	// 104427                  mov     bx, ax ;~ 17C5:A4E3
cs=0x17c5;eip=0x00a4e5; 	T(CMP(*(dw*)(raddr(ds,bx+0x534)), 3));	// 104428                  cmp     word ptr [bx+534h], 3 ;~ 17C5:A4E5
cs=0x17c5;eip=0x00a4ea; 	J(JNZ(loc_30732));	// 104429                  jnz     short loc_30732 ;~ 17C5:A4EA
cs=0x17c5;eip=0x00a4ec; 	T(CMP(*(db*)(&word_48b66), 0));	// 104430                  cmp     byte ptr word_48B66, 0 ;~ 17C5:A4EC
cs=0x17c5;eip=0x00a4f1; 	J(JZ(loc_30728));	// 104431                  jz      short loc_30728 ;~ 17C5:A4F1
cs=0x17c5;eip=0x00a4f3; 	T(ax = 8;);	// 104432                  mov     ax, 8 ;~ 17C5:A4F3
cs=0x17c5;eip=0x00a4f6; 	J(JMP(loc_3072b));	// 104433                  jmp     short loc_3072B ;~ 17C5:A4F6
loc_30728:
	// 6090 
cs=0x17c5;eip=0x00a4f8; 	T(ax = 0x0D;);	// 104437                  mov     ax, 0Dh ;~ 17C5:A4F8
loc_3072b:
	// 6091 
cs=0x17c5;eip=0x00a4fb; 	X(PUSH(ax));	// 104440                  push    ax ;~ 17C5:A4FB
cs=0x17c5;eip=0x00a4fc; 	J(CALL(sub_30074,0));	// 104441                  call    sub_30074 ;~ 17C5:A4FC
cs=0x17c5;eip=0x00a4ff; 	T(ADD(sp, 2));	// 104442                  add     sp, 2 ;~ 17C5:A4FF
loc_30732:
	// 6092 
cs=0x17c5;eip=0x00a502; 	T(ax = 0x18;);	// 104445                  mov     ax, 18h ;~ 17C5:A502
cs=0x17c5;eip=0x00a505; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0E))));	// 104446                  imul    word ptr [bp-0Eh] ;~ 17C5:A505
cs=0x17c5;eip=0x00a508; 	T(bx = ax;);	// 104447                  mov     bx, ax ;~ 17C5:A508
cs=0x17c5;eip=0x00a50a; 	T(TEST(*(raddr(ds,bx+0x0D18)), 1));	// 104448                  test    byte ptr [bx+0D18h], 1 ;~ 17C5:A50A
cs=0x17c5;eip=0x00a50f; 	J(JNZ(loc_3074b));	// 104449                  jnz     short loc_3074B ;~ 17C5:A50F
cs=0x17c5;eip=0x00a511; 	T(ax = 7;);	// 104450                  mov     ax, 7 ;~ 17C5:A511
cs=0x17c5;eip=0x00a514; 	X(PUSH(ax));	// 104451                  push    ax ;~ 17C5:A514
cs=0x17c5;eip=0x00a515; 	J(CALL(sub_30074,0));	// 104452                  call    sub_30074 ;~ 17C5:A515
cs=0x17c5;eip=0x00a518; 	T(ADD(sp, 2));	// 104453                  add     sp, 2 ;~ 17C5:A518
loc_3074b:
	// 6093 
cs=0x17c5;eip=0x00a51b; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), 8));	// 104456                  cmp     word ptr [bp-0Eh], 8 ;~ 17C5:A51B
cs=0x17c5;eip=0x00a51f; 	J(JL(loc_3075b));	// 104457                  jl      short loc_3075B ;~ 17C5:A51F
cs=0x17c5;eip=0x00a521; 	T(ax = 0x0F;);	// 104458                  mov     ax, 0Fh ;~ 17C5:A521
cs=0x17c5;eip=0x00a524; 	X(PUSH(ax));	// 104459                  push    ax ;~ 17C5:A524
cs=0x17c5;eip=0x00a525; 	J(CALL(sub_30074,0));	// 104460                  call    sub_30074 ;~ 17C5:A525
cs=0x17c5;eip=0x00a528; 	T(ADD(sp, 2));	// 104461                  add     sp, 2 ;~ 17C5:A528
loc_3075b:
	// 6094 
cs=0x17c5;eip=0x00a52b; 	T(ax = 0x18;);	// 104464                  mov     ax, 18h ;~ 17C5:A52B
cs=0x17c5;eip=0x00a52e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0E))));	// 104465                  imul    word ptr [bp-0Eh] ;~ 17C5:A52E
cs=0x17c5;eip=0x00a531; 	T(bx = ax;);	// 104466                  mov     bx, ax ;~ 17C5:A531
cs=0x17c5;eip=0x00a533; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0D1C))));	// 104467                  mov     ax, [bx+0D1Ch] ;~ 17C5:A533
cs=0x17c5;eip=0x00a537; 	T(SUB(ax, word_4e2f8));	// 104468                  sub     ax, ds:word_4E2F8 ;~ 17C5:A537
cs=0x17c5;eip=0x00a53b; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 104469                  mov     [bp-4], ax ;~ 17C5:A53B
cs=0x17c5;eip=0x00a53e; 	X(PUSH(*(dw*)(raddr(ss,bp-0x12))));	// 104470                  push    word ptr [bp-12h] ;~ 17C5:A53E
cs=0x17c5;eip=0x00a541; 	X(PUSH(ax));	// 104471                  push    ax ;~ 17C5:A541
cs=0x17c5;eip=0x00a542; 	J(CALL(sub_333c0,0));	// 104472                  call    sub_333C0 ;~ 17C5:A542
cs=0x17c5;eip=0x00a545; 	T(ADD(sp, 4));	// 104473                  add     sp, 4 ;~ 17C5:A545
cs=0x17c5;eip=0x00a548; 	T(ADD(ax, *(word_4ac7c)));	// 104474                  add     ax, word_4AC7C ;~ 17C5:A548
cs=0x17c5;eip=0x00a54c; 	X(PUSH(ax));	// 104475                  push    ax ;~ 17C5:A54C
cs=0x17c5;eip=0x00a54d; 	X(PUSH(*(dw*)(raddr(ss,bp-0x12))));	// 104476                  push    word ptr [bp-12h] ;~ 17C5:A54D
cs=0x17c5;eip=0x00a550; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 104477                  push    word ptr [bp-4] ;~ 17C5:A550
cs=0x17c5;eip=0x00a553; 	J(CALL(sub_333a8,0));	// 104478                  call    sub_333A8 ;~ 17C5:A553
cs=0x17c5;eip=0x00a556; 	T(ADD(sp, 4));	// 104479                  add     sp, 4 ;~ 17C5:A556
cs=0x17c5;eip=0x00a559; 	T(cx = *(word_4aa98););	// 104480                  mov     cx, word_4AA98 ;~ 17C5:A559
cs=0x17c5;eip=0x00a55d; 	T(SUB(cx, ax));	// 104481                  sub     cx, ax ;~ 17C5:A55D
cs=0x17c5;eip=0x00a55f; 	X(PUSH(cx));	// 104482                  push    cx ;~ 17C5:A55F
cs=0x17c5;eip=0x00a560; 	X(PUSH(*(word_4ac7c)));	// 104483                  push    word_4AC7C ;~ 17C5:A560
cs=0x17c5;eip=0x00a564; 	X(PUSH(*(word_4aa98)));	// 104484                  push    word_4AA98 ;~ 17C5:A564
cs=0x17c5;eip=0x00a568; 	J(CALL(sub_2ffb6,0));	// 104485                  call    sub_2FFB6 ;~ 17C5:A568
cs=0x17c5;eip=0x00a56b; 	T(ADD(sp, 8));	// 104487                  add     sp, 8 ;~ 17C5:A56B
loc_3079e:
	// 6095 
cs=0x17c5;eip=0x00a56e; 	X(INC(*(dw*)(raddr(ss,bp-0x0E))));	// 104491                  inc     word ptr [bp-0Eh] ;~ 17C5:A56E
loc_307a1:
	// 6096 
cs=0x17c5;eip=0x00a571; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), 0x0C));	// 104494                  cmp     word ptr [bp-0Eh], 0Ch ;~ 17C5:A571
cs=0x17c5;eip=0x00a575; 	J(JGE(loc_307ec));	// 104495                  jge     short loc_307EC ;~ 17C5:A575
cs=0x17c5;eip=0x00a577; 	T(ax = 0x18;);	// 104496                  mov     ax, 18h ;~ 17C5:A577
cs=0x17c5;eip=0x00a57a; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0E))));	// 104497                  imul    word ptr [bp-0Eh] ;~ 17C5:A57A
cs=0x17c5;eip=0x00a57d; 	T(si = ax;);	// 104498                  mov     si, ax ;~ 17C5:A57D
cs=0x17c5;eip=0x00a57f; 	T(CMP(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 104499                  cmp     word ptr [si+0D22h], 0 ;~ 17C5:A57F
cs=0x17c5;eip=0x00a584; 	J(JZ(loc_3079e));	// 104500                  jz      short loc_3079E ;~ 17C5:A584
cs=0x17c5;eip=0x00a586; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D16))));	// 104501                  push    word ptr [si+0D16h] ;~ 17C5:A586
cs=0x17c5;eip=0x00a58a; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D14))));	// 104502                  push    word ptr [si+0D14h] ;~ 17C5:A58A
cs=0x17c5;eip=0x00a58e; 	J(CALL(sub_309f4,0));	// 104503                  call    sub_309F4 ;~ 17C5:A58E
cs=0x17c5;eip=0x00a591; 	T(ADD(sp, 4));	// 104504                  add     sp, 4 ;~ 17C5:A591
cs=0x17c5;eip=0x00a594; 	T(CMP(word_52246, 0x0FFFF));	// 104505                  cmp     ds:word_52246, 0FFFFh ;~ 17C5:A594
cs=0x17c5;eip=0x00a599; 	J(JZ(loc_3079e));	// 104506                  jz      short loc_3079E ;~ 17C5:A599
cs=0x17c5;eip=0x00a59b; 	T(ax = 0x18;);	// 104507                  mov     ax, 18h ;~ 17C5:A59B
cs=0x17c5;eip=0x00a59e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x0E))));	// 104508                  imul    word ptr [bp-0Eh] ;~ 17C5:A59E
cs=0x17c5;eip=0x00a5a1; 	T(bx = ax;);	// 104509                  mov     bx, ax ;~ 17C5:A5A1
cs=0x17c5;eip=0x00a5a3; 	T(ax = 0x12;);	// 104510                  mov     ax, 12h ;~ 17C5:A5A3
cs=0x17c5;eip=0x00a5a6; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x0D24))));	// 104511                  imul    word ptr [bx+0D24h] ;~ 17C5:A5A6
cs=0x17c5;eip=0x00a5aa; 	T(bx = ax;);	// 104512                  mov     bx, ax ;~ 17C5:A5AA
cs=0x17c5;eip=0x00a5ac; 	T(CMP(*(dw*)(raddr(ds,bx+0x534)), 0));	// 104513                  cmp     word ptr [bx+534h], 0 ;~ 17C5:A5AC
cs=0x17c5;eip=0x00a5b1; 	J(JLE(loc_307e6));	// 104514                  jle     short loc_307E6 ;~ 17C5:A5B1
cs=0x17c5;eip=0x00a5b3; 	J(JMP(loc_306fa));	// 104515                  jmp     loc_306FA ;~ 17C5:A5B3
loc_307e6:
	// 6097 
cs=0x17c5;eip=0x00a5b6; 	T(ax = 0x0C;);	// 104519                  mov     ax, 0Ch ;~ 17C5:A5B6
cs=0x17c5;eip=0x00a5b9; 	J(JMP(loc_306fd));	// 104520                  jmp     loc_306FD ;~ 17C5:A5B9
loc_307ec:
	// 6098 
cs=0x17c5;eip=0x00a5bc; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), 0));	// 104524                  mov     word ptr [bp-0Eh], 0 ;~ 17C5:A5BC
cs=0x17c5;eip=0x00a5c1; 	J(JMP(loc_308ba));	// 104525                  jmp     loc_308BA ;~ 17C5:A5C1
loc_307f4:
	// 6099 
cs=0x17c5;eip=0x00a5c4; 	T(MOV(si, *(dw*)(raddr(ss,bp-0x0E))));	// 104529                  mov     si, [bp-0Eh] ;~ 17C5:A5C4
cs=0x17c5;eip=0x00a5c7; 	T(cl = 4;);	// 104530                  mov     cl, 4 ;~ 17C5:A5C7
cs=0x17c5;eip=0x00a5c9; 	T(SHL(si, cl));	// 104531                  shl     si, cl ;~ 17C5:A5C9
cs=0x17c5;eip=0x00a5cb; 	T(TEST(*(raddr(ds,si-0x7E4C)), 0x80));	// 104532                  test    byte ptr [si-7E4Ch], 80h ;~ 17C5:A5CB
cs=0x17c5;eip=0x00a5d0; 	J(JZ(loc_30805));	// 104533                  jz      short loc_30805 ;~ 17C5:A5D0
cs=0x17c5;eip=0x00a5d2; 	J(JMP(loc_308b7));	// 104534                  jmp     loc_308B7 ;~ 17C5:A5D2
loc_30805:
	// 6100 
cs=0x17c5;eip=0x00a5d5; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 104538                  push    word ptr [si-7E50h] ;~ 17C5:A5D5
cs=0x17c5;eip=0x00a5d9; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 104539                  push    word ptr [si-7E52h] ;~ 17C5:A5D9
cs=0x17c5;eip=0x00a5dd; 	J(CALL(sub_309f4,0));	// 104540                  call    sub_309F4 ;~ 17C5:A5DD
cs=0x17c5;eip=0x00a5e0; 	T(ADD(sp, 4));	// 104541                  add     sp, 4 ;~ 17C5:A5E0
cs=0x17c5;eip=0x00a5e3; 	T(CMP(word_52246, 0x0FFFF));	// 104542                  cmp     ds:word_52246, 0FFFFh ;~ 17C5:A5E3
cs=0x17c5;eip=0x00a5e8; 	J(JNZ(loc_3081d));	// 104543                  jnz     short loc_3081D ;~ 17C5:A5E8
cs=0x17c5;eip=0x00a5ea; 	J(JMP(loc_308b7));	// 104544                  jmp     loc_308B7 ;~ 17C5:A5EA
loc_3081d:
	// 6101 
cs=0x17c5;eip=0x00a5ed; 	T(CMP(word_5268c, 2));	// 104548                  cmp     ds:word_5268C, 2 ;~ 17C5:A5ED
cs=0x17c5;eip=0x00a5f2; 	J(JNZ(loc_3083e));	// 104549                  jnz     short loc_3083E ;~ 17C5:A5F2
cs=0x17c5;eip=0x00a5f4; 	T(ax = word_49924;);	// 104550                  mov     ax, word_49924 ;~ 17C5:A5F4
cs=0x17c5;eip=0x00a5f7; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104551                  cmp     [bp-0Eh], ax ;~ 17C5:A5F7
cs=0x17c5;eip=0x00a5fa; 	J(JNZ(loc_3083e));	// 104552                  jnz     short loc_3083E ;~ 17C5:A5FA
cs=0x17c5;eip=0x00a5fc; 	T(ax = 7;);	// 104553                  mov     ax, 7 ;~ 17C5:A5FC
cs=0x17c5;eip=0x00a5ff; 	X(PUSH(ax));	// 104554                  push    ax ;~ 17C5:A5FF
cs=0x17c5;eip=0x00a600; 	X(PUSH(*(word_4ac7c)));	// 104555                  push    word_4AC7C ;~ 17C5:A600
cs=0x17c5;eip=0x00a604; 	X(PUSH(*(word_4aa98)));	// 104556                  push    word_4AA98 ;~ 17C5:A604
cs=0x17c5;eip=0x00a608; 	J(CALL(sub_30970,0));	// 104557                  call    sub_30970 ;~ 17C5:A608
cs=0x17c5;eip=0x00a60b; 	T(ADD(sp, 6));	// 104559                  add     sp, 6 ;~ 17C5:A60B
loc_3083e:
	// 6102 
cs=0x17c5;eip=0x00a60e; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 5));	// 104563                  mov     word ptr [bp-4], 5 ;~ 17C5:A60E
cs=0x17c5;eip=0x00a613; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0E))));	// 104564                  mov     bx, [bp-0Eh] ;~ 17C5:A613
cs=0x17c5;eip=0x00a616; 	T(cl = 4;);	// 104565                  mov     cl, 4 ;~ 17C5:A616
cs=0x17c5;eip=0x00a618; 	T(SHL(bx, cl));	// 104566                  shl     bx, cl ;~ 17C5:A618
cs=0x17c5;eip=0x00a61a; 	T(TEST(*(dw*)(raddr(ds,bx-0x7E4C)), 0x201));	// 104567                  test    word ptr [bx-7E4Ch], 201h ;~ 17C5:A61A
cs=0x17c5;eip=0x00a620; 	J(JZ(loc_30867));	// 104568                  jz      short loc_30867 ;~ 17C5:A620
cs=0x17c5;eip=0x00a622; 	T(ax = word_4e2f8;);	// 104569                  mov     ax, ds:word_4E2F8 ;~ 17C5:A622
cs=0x17c5;eip=0x00a625; 	T(NEG(ax));	// 104570                  neg     ax ;~ 17C5:A625
cs=0x17c5;eip=0x00a627; 	T(ADD(ah, 0x10));	// 104571                  add     ah, 10h ;~ 17C5:A627
cs=0x17c5;eip=0x00a62a; 	T(cl = 0x0D;);	// 104572                  mov     cl, 0Dh ;~ 17C5:A62A
cs=0x17c5;eip=0x00a62c; 	T(SAR(ax, cl));	// 104573                  sar     ax, cl ;~ 17C5:A62C
cs=0x17c5;eip=0x00a62e; 	T(AND(ax, 3));	// 104574                  and     ax, 3 ;~ 17C5:A62E
cs=0x17c5;eip=0x00a631; 	T(ADD(ax, 8));	// 104575                  add     ax, 8 ;~ 17C5:A631
cs=0x17c5;eip=0x00a634; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 104576                  mov     [bp-4], ax ;~ 17C5:A634
loc_30867:
	// 6103 
cs=0x17c5;eip=0x00a637; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0E))));	// 104579                  mov     bx, [bp-0Eh] ;~ 17C5:A637
cs=0x17c5;eip=0x00a63a; 	T(cl = 4;);	// 104580                  mov     cl, 4 ;~ 17C5:A63A
cs=0x17c5;eip=0x00a63c; 	T(SHL(bx, cl));	// 104581                  shl     bx, cl ;~ 17C5:A63C
cs=0x17c5;eip=0x00a63e; 	T(CMP(*(dw*)(raddr(ds,bx-0x7E4E)), 0));	// 104582                  cmp     word ptr [bx-7E4Eh], 0 ;~ 17C5:A63E
cs=0x17c5;eip=0x00a643; 	J(JZ(loc_3087a));	// 104583                  jz      short loc_3087A ;~ 17C5:A643
cs=0x17c5;eip=0x00a645; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 1));	// 104584                  mov     word ptr [bp-4], 1 ;~ 17C5:A645
loc_3087a:
	// 6104 
cs=0x17c5;eip=0x00a64a; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0E))));	// 104587                  mov     bx, [bp-0Eh] ;~ 17C5:A64A
cs=0x17c5;eip=0x00a64d; 	T(cl = 4;);	// 104588                  mov     cl, 4 ;~ 17C5:A64D
cs=0x17c5;eip=0x00a64f; 	T(SHL(bx, cl));	// 104589                  shl     bx, cl ;~ 17C5:A64F
cs=0x17c5;eip=0x00a651; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 8));	// 104590                  test    byte ptr [bx-7E4Ch], 8 ;~ 17C5:A651
cs=0x17c5;eip=0x00a656; 	J(JZ(loc_3088d));	// 104591                  jz      short loc_3088D ;~ 17C5:A656
cs=0x17c5;eip=0x00a658; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 7));	// 104592                  mov     word ptr [bp-4], 7 ;~ 17C5:A658
loc_3088d:
	// 6105 
cs=0x17c5;eip=0x00a65d; 	T(ax = word_51376;);	// 104595                  mov     ax, ds:word_51376 ;~ 17C5:A65D
cs=0x17c5;eip=0x00a660; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104596                  cmp     [bp-0Eh], ax ;~ 17C5:A660
cs=0x17c5;eip=0x00a663; 	J(JZ(loc_3089d));	// 104597                  jz      short loc_3089D ;~ 17C5:A663
cs=0x17c5;eip=0x00a665; 	T(ax = word_51388;);	// 104598                  mov     ax, ds:word_51388 ;~ 17C5:A665
cs=0x17c5;eip=0x00a668; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104599                  cmp     [bp-0Eh], ax ;~ 17C5:A668
cs=0x17c5;eip=0x00a66b; 	J(JNZ(loc_308a2));	// 104600                  jnz     short loc_308A2 ;~ 17C5:A66B
loc_3089d:
	// 6106 
cs=0x17c5;eip=0x00a66d; 	X(MOV(*(dw*)(raddr(ss,bp-4)), 6));	// 104603                  mov     word ptr [bp-4], 6 ;~ 17C5:A66D
loc_308a2:
	// 6107 
cs=0x17c5;eip=0x00a672; 	X(PUSH(*(word_4ac7c)));	// 104606                  push    word_4AC7C ;~ 17C5:A672
cs=0x17c5;eip=0x00a676; 	X(PUSH(*(word_4aa98)));	// 104607                  push    word_4AA98 ;~ 17C5:A676
cs=0x17c5;eip=0x00a67a; 	T(ax = 3;);	// 104608                  mov     ax, 3 ;~ 17C5:A67A
cs=0x17c5;eip=0x00a67d; 	X(PUSH(ax));	// 104609                  push    ax ;~ 17C5:A67D
cs=0x17c5;eip=0x00a67e; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 104610                  push    word ptr [bp-4] ;~ 17C5:A67E
cs=0x17c5;eip=0x00a681; 	J(CALL(sub_30aa2,0));	// 104611                  call    sub_30AA2 ;~ 17C5:A681
cs=0x17c5;eip=0x00a684; 	T(ADD(sp, 8));	// 104613                  add     sp, 8 ;~ 17C5:A684
loc_308b7:
	// 6108 
cs=0x17c5;eip=0x00a687; 	X(INC(*(dw*)(raddr(ss,bp-0x0E))));	// 104617                  inc     word ptr [bp-0Eh] ;~ 17C5:A687
loc_308ba:
	// 6109 
cs=0x17c5;eip=0x00a68a; 	T(ax = word_52102;);	// 104620                  mov     ax, ds:word_52102 ;~ 17C5:A68A
cs=0x17c5;eip=0x00a68d; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), ax));	// 104621                  cmp     [bp-0Eh], ax ;~ 17C5:A68D
cs=0x17c5;eip=0x00a690; 	J(JGE(loc_308c5));	// 104622                  jge     short loc_308C5 ;~ 17C5:A690
cs=0x17c5;eip=0x00a692; 	J(JMP(loc_307f4));	// 104623                  jmp     loc_307F4 ;~ 17C5:A692
loc_308c5:
	// 6110 
cs=0x17c5;eip=0x00a695; 	X(PUSH(word_52100));	// 104627                  push    ds:word_52100 ;~ 17C5:A695
cs=0x17c5;eip=0x00a699; 	X(PUSH(word_520f0));	// 104628                  push    ds:word_520F0 ;~ 17C5:A699
cs=0x17c5;eip=0x00a69d; 	J(CALL(sub_309f4,0));	// 104629                  call    sub_309F4 ;~ 17C5:A69D
cs=0x17c5;eip=0x00a6a0; 	T(ADD(sp, 4));	// 104630                  add     sp, 4 ;~ 17C5:A6A0
cs=0x17c5;eip=0x00a6a3; 	T(CMP(word_52246, 0x0FFFF));	// 104631                  cmp     ds:word_52246, 0FFFFh ;~ 17C5:A6A3
cs=0x17c5;eip=0x00a6a8; 	J(JZ(loc_308ef));	// 104632                  jz      short loc_308EF ;~ 17C5:A6A8
cs=0x17c5;eip=0x00a6aa; 	X(PUSH(*(word_4ac7c)));	// 104633                  push    word_4AC7C ;~ 17C5:A6AA
cs=0x17c5;eip=0x00a6ae; 	X(PUSH(*(word_4aa98)));	// 104634                  push    word_4AA98 ;~ 17C5:A6AE
cs=0x17c5;eip=0x00a6b2; 	T(ax = 3;);	// 104635                  mov     ax, 3 ;~ 17C5:A6B2
cs=0x17c5;eip=0x00a6b5; 	X(PUSH(ax));	// 104636                  push    ax ;~ 17C5:A6B5
cs=0x17c5;eip=0x00a6b6; 	T(SUB(ax, ax));	// 104637                  sub     ax, ax ;~ 17C5:A6B6
cs=0x17c5;eip=0x00a6b8; 	X(PUSH(ax));	// 104638                  push    ax ;~ 17C5:A6B8
cs=0x17c5;eip=0x00a6b9; 	J(CALL(sub_30aa2,0));	// 104639                  call    sub_30AA2 ;~ 17C5:A6B9
cs=0x17c5;eip=0x00a6bc; 	T(ADD(sp, 8));	// 104641                  add     sp, 8 ;~ 17C5:A6BC
loc_308ef:
	// 6111 
cs=0x17c5;eip=0x00a6bf; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), 0));	// 104644                  mov     word ptr [bp-0Eh], 0 ;~ 17C5:A6BF
cs=0x17c5;eip=0x00a6c4; 	J(JMP(loc_3090f));	// 104645                  jmp     short loc_3090F ;~ 17C5:A6C4
loc_308f6:
	// 6112 
cs=0x17c5;eip=0x00a6c6; 	X(PUSH(*(word_4ac7c)));	// 104649                  push    word_4AC7C ;~ 17C5:A6C6
cs=0x17c5;eip=0x00a6ca; 	X(PUSH(*(word_4aa98)));	// 104650                  push    word_4AA98 ;~ 17C5:A6CA
cs=0x17c5;eip=0x00a6ce; 	T(ax = 3;);	// 104651                  mov     ax, 3 ;~ 17C5:A6CE
cs=0x17c5;eip=0x00a6d1; 	X(PUSH(ax));	// 104652                  push    ax ;~ 17C5:A6D1
cs=0x17c5;eip=0x00a6d2; 	T(ax = 2;);	// 104653                  mov     ax, 2 ;~ 17C5:A6D2
loc_30905:
	// 6113 
cs=0x17c5;eip=0x00a6d5; 	X(PUSH(ax));	// 104656                  push    ax ;~ 17C5:A6D5
cs=0x17c5;eip=0x00a6d6; 	J(CALL(sub_30aa2,0));	// 104657                  call    sub_30AA2 ;~ 17C5:A6D6
cs=0x17c5;eip=0x00a6d9; 	T(ADD(sp, 8));	// 104659                  add     sp, 8 ;~ 17C5:A6D9
loc_3090c:
	// 6114 
cs=0x17c5;eip=0x00a6dc; 	X(INC(*(dw*)(raddr(ss,bp-0x0E))));	// 104663                  inc     word ptr [bp-0Eh] ;~ 17C5:A6DC
loc_3090f:
	// 6115 
cs=0x17c5;eip=0x00a6df; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), 4));	// 104666                  cmp     word ptr [bp-0Eh], 4 ;~ 17C5:A6DF
cs=0x17c5;eip=0x00a6e3; 	J(JGE(loc_3096a));	// 104667                  jge     short loc_3096A ;~ 17C5:A6E3
cs=0x17c5;eip=0x00a6e5; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0E))));	// 104668                  mov     ax, [bp-0Eh] ;~ 17C5:A6E5
cs=0x17c5;eip=0x00a6e8; 	T(cx = ax;);	// 104669                  mov     cx, ax ;~ 17C5:A6E8
cs=0x17c5;eip=0x00a6ea; 	T(SHL(ax, 1));	// 104670                  shl     ax, 1 ;~ 17C5:A6EA
cs=0x17c5;eip=0x00a6ec; 	T(ADD(ax, cx));	// 104671                  add     ax, cx ;~ 17C5:A6EC
cs=0x17c5;eip=0x00a6ee; 	T(SHL(ax, 1));	// 104672                  shl     ax, 1 ;~ 17C5:A6EE
cs=0x17c5;eip=0x00a6f0; 	T(SHL(ax, 1));	// 104673                  shl     ax, 1 ;~ 17C5:A6F0
cs=0x17c5;eip=0x00a6f2; 	T(si = ax;);	// 104674                  mov     si, ax ;~ 17C5:A6F2
cs=0x17c5;eip=0x00a6f4; 	T(CMP(*(dw*)(raddr(ds,si+0x0B2A)), 0));	// 104675                  cmp     word ptr [si+0B2Ah], 0 ;~ 17C5:A6F4
cs=0x17c5;eip=0x00a6f9; 	J(JZ(loc_3090c));	// 104676                  jz      short loc_3090C ;~ 17C5:A6F9
cs=0x17c5;eip=0x00a6fb; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B24))));	// 104677                  push    word ptr [si+0B24h] ;~ 17C5:A6FB
cs=0x17c5;eip=0x00a6ff; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B22))));	// 104678                  push    word ptr [si+0B22h] ;~ 17C5:A6FF
cs=0x17c5;eip=0x00a703; 	J(CALL(sub_309f4,0));	// 104679                  call    sub_309F4 ;~ 17C5:A703
cs=0x17c5;eip=0x00a706; 	T(ADD(sp, 4));	// 104680                  add     sp, 4 ;~ 17C5:A706
cs=0x17c5;eip=0x00a709; 	T(CMP(word_52246, 0x0FFFF));	// 104681                  cmp     ds:word_52246, 0FFFFh ;~ 17C5:A709
cs=0x17c5;eip=0x00a70e; 	J(JZ(loc_3090c));	// 104682                  jz      short loc_3090C ;~ 17C5:A70E
cs=0x17c5;eip=0x00a710; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x0E))));	// 104683                  mov     bx, [bp-0Eh] ;~ 17C5:A710
cs=0x17c5;eip=0x00a713; 	T(ax = bx;);	// 104684                  mov     ax, bx ;~ 17C5:A713
cs=0x17c5;eip=0x00a715; 	T(SHL(bx, 1));	// 104685                  shl     bx, 1 ;~ 17C5:A715
cs=0x17c5;eip=0x00a717; 	T(ADD(bx, ax));	// 104686                  add     bx, ax ;~ 17C5:A717
cs=0x17c5;eip=0x00a719; 	T(SHL(bx, 1));	// 104687                  shl     bx, 1 ;~ 17C5:A719
cs=0x17c5;eip=0x00a71b; 	T(SHL(bx, 1));	// 104688                  shl     bx, 1 ;~ 17C5:A71B
cs=0x17c5;eip=0x00a71d; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0B28))));	// 104689                  mov     ax, [bx+0B28h] ;~ 17C5:A71D
cs=0x17c5;eip=0x00a721; 	T(CMP(ax, 1));	// 104690                  cmp     ax, 1 ;~ 17C5:A721
cs=0x17c5;eip=0x00a724; 	J(JZ(loc_308f6));	// 104691                  jz      short loc_308F6 ;~ 17C5:A724
cs=0x17c5;eip=0x00a726; 	T(CMP(ax, 2));	// 104692                  cmp     ax, 2 ;~ 17C5:A726
cs=0x17c5;eip=0x00a729; 	J(JNZ(loc_3090c));	// 104693                  jnz     short loc_3090C ;~ 17C5:A729
cs=0x17c5;eip=0x00a72b; 	X(PUSH(*(word_4ac7c)));	// 104694                  push    word_4AC7C ;~ 17C5:A72B
cs=0x17c5;eip=0x00a72f; 	X(PUSH(*(word_4aa98)));	// 104695                  push    word_4AA98 ;~ 17C5:A72F
cs=0x17c5;eip=0x00a733; 	T(ax = 3;);	// 104696                  mov     ax, 3 ;~ 17C5:A733
cs=0x17c5;eip=0x00a736; 	X(PUSH(ax));	// 104697                  push    ax ;~ 17C5:A736
cs=0x17c5;eip=0x00a737; 	J(JMP(loc_30905));	// 104698                  jmp     short loc_30905 ;~ 17C5:A737
loc_3096a:
	// 6116 
cs=0x17c5;eip=0x00a73a; 	X(POP(si));	// 104703                  pop     si ;~ 17C5:A73A
cs=0x17c5;eip=0x00a73b; 	T(sp = bp;);	// 104704                  mov     sp, bp ;~ 17C5:A73B
cs=0x17c5;eip=0x00a73d; 	X(POP(bp));	// 104705                  pop     bp ;~ 17C5:A73D
cs=0x17c5;eip=0x00a73e; 	J(RETN(0));	// 104706                  retn ;~ 17C5:A73E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_304be: 	goto loc_304be;
        case m2c::kloc_304c1: 	goto loc_304c1;
        case m2c::kloc_304f6: 	goto loc_304f6;
        case m2c::kloc_3051c: 	goto loc_3051c;
        case m2c::kloc_30583: 	goto loc_30583;
        case m2c::kloc_30598: 	goto loc_30598;
        case m2c::kloc_305ff: 	goto loc_305ff;
        case m2c::kloc_30612: 	goto loc_30612;
        case m2c::kloc_30624: 	goto loc_30624;
        case m2c::kloc_3062e: 	goto loc_3062e;
        case m2c::kloc_30646: 	goto loc_30646;
        case m2c::kloc_30667: 	goto loc_30667;
        case m2c::kloc_3068c: 	goto loc_3068c;
        case m2c::kloc_306bc: 	goto loc_306bc;
        case m2c::kloc_306c8: 	goto loc_306c8;
        case m2c::kloc_306e4: 	goto loc_306e4;
        case m2c::kloc_306e7: 	goto loc_306e7;
        case m2c::kloc_306f2: 	goto loc_306f2;
        case m2c::kloc_306fa: 	goto loc_306fa;
        case m2c::kloc_306fd: 	goto loc_306fd;
        case m2c::kloc_30728: 	goto loc_30728;
        case m2c::kloc_3072b: 	goto loc_3072b;
        case m2c::kloc_30732: 	goto loc_30732;
        case m2c::kloc_3074b: 	goto loc_3074b;
        case m2c::kloc_3075b: 	goto loc_3075b;
        case m2c::kloc_3079e: 	goto loc_3079e;
        case m2c::kloc_307a1: 	goto loc_307a1;
        case m2c::kloc_307e6: 	goto loc_307e6;
        case m2c::kloc_307ec: 	goto loc_307ec;
        case m2c::kloc_307f4: 	goto loc_307f4;
        case m2c::kloc_30805: 	goto loc_30805;
        case m2c::kloc_3081d: 	goto loc_3081d;
        case m2c::kloc_3083e: 	goto loc_3083e;
        case m2c::kloc_30867: 	goto loc_30867;
        case m2c::kloc_3087a: 	goto loc_3087a;
        case m2c::kloc_3088d: 	goto loc_3088d;
        case m2c::kloc_3089d: 	goto loc_3089d;
        case m2c::kloc_308a2: 	goto loc_308a2;
        case m2c::kloc_308b7: 	goto loc_308b7;
        case m2c::kloc_308ba: 	goto loc_308ba;
        case m2c::kloc_308c5: 	goto loc_308c5;
        case m2c::kloc_308ef: 	goto loc_308ef;
        case m2c::kloc_308f6: 	goto loc_308f6;
        case m2c::kloc_30905: 	goto loc_30905;
        case m2c::kloc_3090c: 	goto loc_3090c;
        case m2c::kloc_3090f: 	goto loc_3090f;
        case m2c::kloc_3096a: 	goto loc_3096a;
        case m2c::kseg2623_a297_proc: 	goto seg2623_a297_proc;
        case m2c::ksub_3048c: 	goto sub_3048c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group55(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group55:
    _begin:
sub_30970:
	// 104714 
#undef arg_4
#define arg_4 8
	// 104717 arg_4           = word ptr  8 ;~ 17C5:A740
cs=0x17c5;eip=0x00a740; 	X(PUSH(bp));	// 104719                  push    bp ;~ 17C5:A740
cs=0x17c5;eip=0x00a741; 	T(bp = sp;);	// 104720                  mov     bp, sp ;~ 17C5:A741
cs=0x17c5;eip=0x00a743; 	X(PUSH(si));	// 104721                  push    si ;~ 17C5:A743
cs=0x17c5;eip=0x00a744; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 104722                  push    [bp+arg_4] ;~ 17C5:A744
cs=0x17c5;eip=0x00a747; 	J(CALL(sub_30074,0));	// 104723                  call    sub_30074 ;~ 17C5:A747
cs=0x17c5;eip=0x00a74a; 	T(ADD(sp, 2));	// 104724                  add     sp, 2 ;~ 17C5:A74A
cs=0x17c5;eip=0x00a74d; 	T(si = *(word_4ac7c););	// 104725                  mov     si, word_4AC7C ;~ 17C5:A74D
cs=0x17c5;eip=0x00a751; 	T(SUB(si, 3));	// 104726                  sub     si, 3 ;~ 17C5:A751
cs=0x17c5;eip=0x00a754; 	X(PUSH(si));	// 104727                  push    si ;~ 17C5:A754
cs=0x17c5;eip=0x00a755; 	T(ax = *(word_4aa98););	// 104728                  mov     ax, word_4AA98 ;~ 17C5:A755
cs=0x17c5;eip=0x00a758; 	T(ADD(ax, 4));	// 104729                  add     ax, 4 ;~ 17C5:A758
cs=0x17c5;eip=0x00a75b; 	X(PUSH(ax));	// 104730                  push    ax ;~ 17C5:A75B
cs=0x17c5;eip=0x00a75c; 	X(PUSH(si));	// 104731                  push    si ;~ 17C5:A75C
cs=0x17c5;eip=0x00a75d; 	T(ax = *(word_4aa98););	// 104732                  mov     ax, word_4AA98 ;~ 17C5:A75D
cs=0x17c5;eip=0x00a760; 	T(SUB(ax, 4));	// 104733                  sub     ax, 4 ;~ 17C5:A760
cs=0x17c5;eip=0x00a763; 	X(PUSH(ax));	// 104734                  push    ax ;~ 17C5:A763
cs=0x17c5;eip=0x00a764; 	J(CALL(sub_2ffb6,0));	// 104735                  call    sub_2FFB6 ;~ 17C5:A764
seg2623_a767_proc:
	// 104739 
cs=0x17c5;eip=0x00a767; 	T(ADD(sp, 8));	// 104739                  add     sp, 8 ;~ 17C5:A767
cs=0x17c5;eip=0x00a76a; 	T(si = *(word_4aa98););	// 104740                  mov     si, word_4AA98 ;~ 17C5:A76A
cs=0x17c5;eip=0x00a76e; 	T(ADD(si, 4));	// 104741                  add     si, 4 ;~ 17C5:A76E
cs=0x17c5;eip=0x00a771; 	T(ax = *(word_4ac7c););	// 104742                  mov     ax, word_4AC7C ;~ 17C5:A771
cs=0x17c5;eip=0x00a774; 	T(ADD(ax, 3));	// 104743                  add     ax, 3 ;~ 17C5:A774
cs=0x17c5;eip=0x00a777; 	X(PUSH(ax));	// 104744                  push    ax ;~ 17C5:A777
cs=0x17c5;eip=0x00a778; 	X(PUSH(si));	// 104745                  push    si ;~ 17C5:A778
cs=0x17c5;eip=0x00a779; 	T(ax = *(word_4ac7c););	// 104746                  mov     ax, word_4AC7C ;~ 17C5:A779
cs=0x17c5;eip=0x00a77c; 	T(SUB(ax, 3));	// 104747                  sub     ax, 3 ;~ 17C5:A77C
cs=0x17c5;eip=0x00a77f; 	X(PUSH(ax));	// 104748                  push    ax ;~ 17C5:A77F
cs=0x17c5;eip=0x00a780; 	X(PUSH(si));	// 104749                  push    si ;~ 17C5:A780
cs=0x17c5;eip=0x00a781; 	J(CALL(sub_2ffb6,0));	// 104750                  call    sub_2FFB6 ;~ 17C5:A781
cs=0x17c5;eip=0x00a784; 	T(ADD(sp, 8));	// 104752                  add     sp, 8 ;~ 17C5:A784
cs=0x17c5;eip=0x00a787; 	T(si = *(word_4ac7c););	// 104753                  mov     si, word_4AC7C ;~ 17C5:A787
cs=0x17c5;eip=0x00a78b; 	T(ADD(si, 3));	// 104754                  add     si, 3 ;~ 17C5:A78B
cs=0x17c5;eip=0x00a78e; 	X(PUSH(si));	// 104755                  push    si ;~ 17C5:A78E
cs=0x17c5;eip=0x00a78f; 	T(ax = *(word_4aa98););	// 104756                  mov     ax, word_4AA98 ;~ 17C5:A78F
cs=0x17c5;eip=0x00a792; 	T(SUB(ax, 4));	// 104757                  sub     ax, 4 ;~ 17C5:A792
cs=0x17c5;eip=0x00a795; 	X(PUSH(ax));	// 104758                  push    ax ;~ 17C5:A795
cs=0x17c5;eip=0x00a796; 	X(PUSH(si));	// 104759                  push    si ;~ 17C5:A796
cs=0x17c5;eip=0x00a797; 	T(ax = *(word_4aa98););	// 104760                  mov     ax, word_4AA98 ;~ 17C5:A797
cs=0x17c5;eip=0x00a79a; 	T(ADD(ax, 4));	// 104761                  add     ax, 4 ;~ 17C5:A79A
cs=0x17c5;eip=0x00a79d; 	X(PUSH(ax));	// 104762                  push    ax ;~ 17C5:A79D
cs=0x17c5;eip=0x00a79e; 	J(CALL(sub_2ffb6,0));	// 104763                  call    sub_2FFB6 ;~ 17C5:A79E
cs=0x17c5;eip=0x00a7a1; 	T(ADD(sp, 8));	// 104765                  add     sp, 8 ;~ 17C5:A7A1
cs=0x17c5;eip=0x00a7a4; 	T(si = *(word_4aa98););	// 104766                  mov     si, word_4AA98 ;~ 17C5:A7A4
cs=0x17c5;eip=0x00a7a8; 	T(SUB(si, 4));	// 104767                  sub     si, 4 ;~ 17C5:A7A8
cs=0x17c5;eip=0x00a7ab; 	T(ax = *(word_4ac7c););	// 104768                  mov     ax, word_4AC7C ;~ 17C5:A7AB
cs=0x17c5;eip=0x00a7ae; 	T(SUB(ax, 3));	// 104769                  sub     ax, 3 ;~ 17C5:A7AE
cs=0x17c5;eip=0x00a7b1; 	X(PUSH(ax));	// 104770                  push    ax ;~ 17C5:A7B1
cs=0x17c5;eip=0x00a7b2; 	X(PUSH(si));	// 104771                  push    si ;~ 17C5:A7B2
cs=0x17c5;eip=0x00a7b3; 	T(ax = *(word_4ac7c););	// 104772                  mov     ax, word_4AC7C ;~ 17C5:A7B3
cs=0x17c5;eip=0x00a7b6; 	T(ADD(ax, 3));	// 104773                  add     ax, 3 ;~ 17C5:A7B6
cs=0x17c5;eip=0x00a7b9; 	X(PUSH(ax));	// 104774                  push    ax ;~ 17C5:A7B9
cs=0x17c5;eip=0x00a7ba; 	X(PUSH(si));	// 104775                  push    si ;~ 17C5:A7BA
cs=0x17c5;eip=0x00a7bb; 	J(CALL(sub_2ffb6,0));	// 104776                  call    sub_2FFB6 ;~ 17C5:A7BB
cs=0x17c5;eip=0x00a7be; 	T(ADD(sp, 8));	// 104778                  add     sp, 8 ;~ 17C5:A7BE
cs=0x17c5;eip=0x00a7c1; 	X(POP(si));	// 104779                  pop     si ;~ 17C5:A7C1
cs=0x17c5;eip=0x00a7c2; 	X(POP(bp));	// 104780                  pop     bp ;~ 17C5:A7C2
cs=0x17c5;eip=0x00a7c3; 	J(RETN(0));	// 104781                  retn ;~ 17C5:A7C3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_a767_proc: 	goto seg2623_a767_proc;
        case m2c::ksub_30970: 	goto sub_30970;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_309f4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_309f4:
    _begin:
#undef var_6
#define var_6 -6
	// 104790 var_6           = byte ptr -6 ;~ 17C5:A7C4
#undef var_4
#define var_4 -4
	// 104791 var_4           = word ptr -4 ;~ 17C5:A7C4
#undef var_2
#define var_2 -2
	// 104792 var_2           = word ptr -2 ;~ 17C5:A7C4
#undef arg_0
#define arg_0 4
	// 104793 arg_0           = word ptr  4 ;~ 17C5:A7C4
#undef arg_2
#define arg_2 6
	// 104794 arg_2           = word ptr  6 ;~ 17C5:A7C4
cs=0x17c5;eip=0x00a7c4; 	X(PUSH(bp));	// 104796                  push    bp ;~ 17C5:A7C4
cs=0x17c5;eip=0x00a7c5; 	T(bp = sp;);	// 104797                  mov     bp, sp ;~ 17C5:A7C5
cs=0x17c5;eip=0x00a7c7; 	T(SUB(sp, 6));	// 104798                  sub     sp, 6 ;~ 17C5:A7C7
cs=0x17c5;eip=0x00a7ca; 	X(PUSH(si));	// 104799                  push    si ;~ 17C5:A7CA
cs=0x17c5;eip=0x00a7cb; 	X(word_52246 = 0;);	// 104800                  mov     ds:word_52246, 0 ;~ 17C5:A7CB
cs=0x17c5;eip=0x00a7d1; 	T(al = 7;);	// 104801                  mov     al, 7 ;~ 17C5:A7D1
cs=0x17c5;eip=0x00a7d3; 	T(SUB(al, *(db*)(&word_4e61c)));	// 104802                  sub     al, byte ptr ds:word_4E61C ;~ 17C5:A7D3
cs=0x17c5;eip=0x00a7d7; 	X(MOV(*(raddr(ss,bp+var_6)), al));	// 104803                  mov     [bp+var_6], al ;~ 17C5:A7D7
cs=0x17c5;eip=0x00a7da; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 104804                  mov     ax, [bp+arg_0] ;~ 17C5:A7DA
cs=0x17c5;eip=0x00a7dd; 	T(SUB(ax, word_520f0));	// 104805                  sub     ax, ds:word_520F0 ;~ 17C5:A7DD
cs=0x17c5;eip=0x00a7e1; 	T(MOV(cl, *(raddr(ss,bp+var_6))));	// 104806                  mov     cl, [bp+var_6] ;~ 17C5:A7E1
cs=0x17c5;eip=0x00a7e4; 	T(SAR(ax, cl));	// 104807                  sar     ax, cl ;~ 17C5:A7E4
cs=0x17c5;eip=0x00a7e6; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 104808                  mov     [bp+var_2], ax ;~ 17C5:A7E6
cs=0x17c5;eip=0x00a7e9; 	T(ax = word_52100;);	// 104809                  mov     ax, ds:word_52100 ;~ 17C5:A7E9
cs=0x17c5;eip=0x00a7ec; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 104810                  sub     ax, [bp+arg_2] ;~ 17C5:A7EC
cs=0x17c5;eip=0x00a7ef; 	T(SAR(ax, cl));	// 104811                  sar     ax, cl ;~ 17C5:A7EF
cs=0x17c5;eip=0x00a7f1; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 104812                  mov     [bp+var_4], ax ;~ 17C5:A7F1
cs=0x17c5;eip=0x00a7f4; 	X(PUSH(ax));	// 104813                  push    ax ;~ 17C5:A7F4
cs=0x17c5;eip=0x00a7f5; 	X(PUSH(word_4e2f8));	// 104814                  push    ds:word_4E2F8 ;~ 17C5:A7F5
cs=0x17c5;eip=0x00a7f9; 	J(CALL(sub_333a8,0));	// 104815                  call    sub_333A8 ;~ 17C5:A7F9
cs=0x17c5;eip=0x00a7fc; 	T(ADD(sp, 4));	// 104816                  add     sp, 4 ;~ 17C5:A7FC
cs=0x17c5;eip=0x00a7ff; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 104817                  push    [bp+var_2] ;~ 17C5:A7FF
cs=0x17c5;eip=0x00a802; 	X(PUSH(word_4e2f8));	// 104818                  push    ds:word_4E2F8 ;~ 17C5:A802
cs=0x17c5;eip=0x00a806; 	T(si = ax;);	// 104819                  mov     si, ax ;~ 17C5:A806
cs=0x17c5;eip=0x00a808; 	J(CALL(sub_333c0,0));	// 104820                  call    sub_333C0 ;~ 17C5:A808
cs=0x17c5;eip=0x00a80b; 	T(ADD(sp, 4));	// 104821                  add     sp, 4 ;~ 17C5:A80B
cs=0x17c5;eip=0x00a80e; 	T(SUB(ax, si));	// 104822                  sub     ax, si ;~ 17C5:A80E
cs=0x17c5;eip=0x00a810; 	X(*(word_4aa98) = ax;);	// 104823                  mov     word_4AA98, ax ;~ 17C5:A810
cs=0x17c5;eip=0x00a813; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 104824                  push    [bp+var_2] ;~ 17C5:A813
cs=0x17c5;eip=0x00a816; 	X(PUSH(word_4e2f8));	// 104825                  push    ds:word_4E2F8 ;~ 17C5:A816
cs=0x17c5;eip=0x00a81a; 	J(CALL(sub_333a8,0));	// 104826                  call    sub_333A8 ;~ 17C5:A81A
cs=0x17c5;eip=0x00a81d; 	T(ADD(sp, 4));	// 104827                  add     sp, 4 ;~ 17C5:A81D
cs=0x17c5;eip=0x00a820; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 104828                  push    [bp+var_4] ;~ 17C5:A820
cs=0x17c5;eip=0x00a823; 	X(PUSH(word_4e2f8));	// 104829                  push    ds:word_4E2F8 ;~ 17C5:A823
cs=0x17c5;eip=0x00a827; 	T(si = ax;);	// 104830                  mov     si, ax ;~ 17C5:A827
cs=0x17c5;eip=0x00a829; 	J(CALL(sub_333c0,0));	// 104831                  call    sub_333C0 ;~ 17C5:A829
cs=0x17c5;eip=0x00a82c; 	T(ADD(sp, 4));	// 104832                  add     sp, 4 ;~ 17C5:A82C
cs=0x17c5;eip=0x00a82f; 	T(ADD(ax, si));	// 104833                  add     ax, si ;~ 17C5:A82F
cs=0x17c5;eip=0x00a831; 	X(*(word_4ac7c) = ax;);	// 104834                  mov     word_4AC7C, ax ;~ 17C5:A831
cs=0x17c5;eip=0x00a834; 	X(ADD(*(word_4aa98), 0x0A0));	// 104835                  add     word_4AA98, 0A0h ;~ 17C5:A834
cs=0x17c5;eip=0x00a83a; 	T(NEG(ax));	// 104836                  neg     ax ;~ 17C5:A83A
cs=0x17c5;eip=0x00a83c; 	T(ADD(ax, 0x98));	// 104837                  add     ax, 98h ;~ 17C5:A83C
cs=0x17c5;eip=0x00a83f; 	X(*(word_4ac7c) = ax;);	// 104838                  mov     word_4AC7C, ax ;~ 17C5:A83F
cs=0x17c5;eip=0x00a842; 	T(CMP(*(word_4aa98), 0x7C));	// 104839                  cmp     word_4AA98, 7Ch ; '|' ;~ 17C5:A842
cs=0x17c5;eip=0x00a847; 	J(JL(loc_30a81));	// 104840                  jl      short loc_30A81 ;~ 17C5:A847
cs=0x17c5;eip=0x00a849; 	T(CMP(*(word_4aa98), 0x0C3));	// 104841                  cmp     word_4AA98, 0C3h ;~ 17C5:A849
cs=0x17c5;eip=0x00a84f; 	J(JLE(loc_30a87));	// 104842                  jle     short loc_30A87 ;~ 17C5:A84F
loc_30a81:
	// 6117 
cs=0x17c5;eip=0x00a851; 	X(word_52246 = 0x0FFFF;);	// 104845                  mov     ds:word_52246, 0FFFFh ;~ 17C5:A851
loc_30a87:
	// 6118 
cs=0x17c5;eip=0x00a857; 	T(CMP(*(word_4ac7c), 0x6B));	// 104848                  cmp     word_4AC7C, 6Bh ; 'k' ;~ 17C5:A857
cs=0x17c5;eip=0x00a85c; 	J(JL(loc_30a96));	// 104849                  jl      short loc_30A96 ;~ 17C5:A85C
cs=0x17c5;eip=0x00a85e; 	T(CMP(*(word_4ac7c), 0x0AC));	// 104850                  cmp     word_4AC7C, 0ACh ;~ 17C5:A85E
cs=0x17c5;eip=0x00a864; 	J(JLE(loc_30a9c));	// 104851                  jle     short loc_30A9C ;~ 17C5:A864
loc_30a96:
	// 6119 
cs=0x17c5;eip=0x00a866; 	X(word_52246 = 0x0FFFF;);	// 104854                  mov     ds:word_52246, 0FFFFh ;~ 17C5:A866
loc_30a9c:
	// 6120 
cs=0x17c5;eip=0x00a86c; 	X(POP(si));	// 104857                  pop     si ;~ 17C5:A86C
cs=0x17c5;eip=0x00a86d; 	T(sp = bp;);	// 104858                  mov     sp, bp ;~ 17C5:A86D
cs=0x17c5;eip=0x00a86f; 	X(POP(bp));	// 104859                  pop     bp ;~ 17C5:A86F
cs=0x17c5;eip=0x00a870; 	J(RETN(0));	// 104860                  retn ;~ 17C5:A870

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30a81: 	goto loc_30a81;
        case m2c::kloc_30a87: 	goto loc_30a87;
        case m2c::kloc_30a96: 	goto loc_30a96;
        case m2c::kloc_30a9c: 	goto loc_30a9c;
        case m2c::ksub_309f4: 	goto sub_309f4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group56(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group56:
    _begin:
sub_30aa2:
	// 104870 
#undef arg_0
#define arg_0 4
	// 104873 arg_0           = word ptr  4 ;~ 17C5:A872
#undef arg_2
#define arg_2 6
	// 104874 arg_2           = word ptr  6 ;~ 17C5:A872
#undef arg_4
#define arg_4 8
	// 104875 arg_4           = word ptr  8 ;~ 17C5:A872
#undef arg_6
#define arg_6 0x0A
	// 104876 arg_6           = word ptr  0Ah ;~ 17C5:A872
cs=0x17c5;eip=0x00a872; 	X(PUSH(bp));	// 104878                  push    bp ;~ 17C5:A872
cs=0x17c5;eip=0x00a873; 	T(bp = sp;);	// 104879                  mov     bp, sp ;~ 17C5:A873
cs=0x17c5;eip=0x00a875; 	T(ax = word_52ae4;);	// 104880                  mov     ax, ds:word_52AE4 ;~ 17C5:A875
cs=0x17c5;eip=0x00a878; 	X(word_4e5de = ax;);	// 104881                  mov     ds:word_4E5DE, ax ;~ 17C5:A878
cs=0x17c5;eip=0x00a87b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 104882                  mov     ax, [bp+arg_0] ;~ 17C5:A87B
cs=0x17c5;eip=0x00a87e; 	T(cl = 3;);	// 104883                  mov     cl, 3 ;~ 17C5:A87E
cs=0x17c5;eip=0x00a880; 	T(SHL(ax, cl));	// 104884                  shl     ax, cl ;~ 17C5:A880
cs=0x17c5;eip=0x00a882; 	T(INC(ax));	// 104885                  inc     ax ;~ 17C5:A882
cs=0x17c5;eip=0x00a883; 	X(word_4e5e0 = ax;);	// 104886                  mov     ds:word_4E5E0, ax ;~ 17C5:A883
cs=0x17c5;eip=0x00a886; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 104887                  mov     ax, [bp+arg_2] ;~ 17C5:A886
cs=0x17c5;eip=0x00a889; 	T(SHL(ax, cl));	// 104888                  shl     ax, cl ;~ 17C5:A889
cs=0x17c5;eip=0x00a88b; 	T(ADD(ax, 0x1F));	// 104889                  add     ax, 1Fh ;~ 17C5:A88B
cs=0x17c5;eip=0x00a88e; 	X(word_4e5e2 = ax;);	// 104890                  mov     ds:word_4E5E2, ax ;~ 17C5:A88E
cs=0x17c5;eip=0x00a891; 	T(CMP(byte_527d0, 1));	// 104891                  cmp     ds:byte_527D0, 1 ;~ 17C5:A891
cs=0x17c5;eip=0x00a896; 	T(SBB(ax, ax));	// 104892                  sbb     ax, ax ;~ 17C5:A896
cs=0x17c5;eip=0x00a898; 	T(INC(ax));	// 104893                  inc     ax ;~ 17C5:A898
cs=0x17c5;eip=0x00a899; 	X(word_4e5e4 = ax;);	// 104894                  mov     ds:word_4E5E4, ax ;~ 17C5:A899
cs=0x17c5;eip=0x00a89c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 104895                  mov     ax, [bp+arg_4] ;~ 17C5:A89C
cs=0x17c5;eip=0x00a89f; 	T(SUB(ax, 3));	// 104896                  sub     ax, 3 ;~ 17C5:A89F
cs=0x17c5;eip=0x00a8a2; 	X(word_4e5e6 = ax;);	// 104897                  mov     ds:word_4E5E6, ax ;~ 17C5:A8A2
cs=0x17c5;eip=0x00a8a5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 104898                  mov     ax, [bp+arg_6] ;~ 17C5:A8A5
cs=0x17c5;eip=0x00a8a8; 	T(SUB(ax, 3));	// 104899                  sub     ax, 3 ;~ 17C5:A8A8
cs=0x17c5;eip=0x00a8ab; 	X(word_4e5e8 = ax;);	// 104900                  mov     ds:word_4E5E8, ax ;~ 17C5:A8AB
cs=0x17c5;eip=0x00a8ae; 	X(word_4e5ea = 7;);	// 104901                  mov     ds:word_4E5EA, 7 ;~ 17C5:A8AE
cs=0x17c5;eip=0x00a8b4; 	X(word_4e5ec = 7;);	// 104902                  mov     ds:word_4E5EC, 7 ;~ 17C5:A8B4
cs=0x17c5;eip=0x00a8ba; 	T(ax = 0x5AFE;);	// 104903                  mov     ax, 5AFEh ;~ 17C5:A8BA
cs=0x17c5;eip=0x00a8bd; 	X(PUSH(ax));	// 104904                  push    ax ;~ 17C5:A8BD
cs=0x17c5;eip=0x00a8be; 	J(CALLF(sub_49b01,0));	// 104905                  call    far ptr sub_49B01 ;~ 17C5:A8BE
seg2623_a8c3_proc:
	// 104909 
cs=0x17c5;eip=0x00a8c3; 	T(ADD(sp, 2));	// 104909                  add     sp, 2 ;~ 17C5:A8C3
cs=0x17c5;eip=0x00a8c6; 	X(POP(bp));	// 104910                  pop     bp ;~ 17C5:A8C6
cs=0x17c5;eip=0x00a8c7; 	J(RETN(0));	// 104911                  retn ;~ 17C5:A8C7

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_a8c3_proc: 	goto seg2623_a8c3_proc;
        case m2c::ksub_30aa2: 	goto sub_30aa2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group57(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group57:
    _begin:
sub_30af8:
	// 104917 
#undef arg_0
#define arg_0 4
	// 104920 arg_0           = word ptr  4 ;~ 17C5:A8C8
#undef arg_2
#define arg_2 6
	// 104921 arg_2           = word ptr  6 ;~ 17C5:A8C8
#undef arg_4
#define arg_4 8
	// 104922 arg_4           = word ptr  8 ;~ 17C5:A8C8
#undef arg_6
#define arg_6 0x0A
	// 104923 arg_6           = word ptr  0Ah ;~ 17C5:A8C8
#undef arg_8
#define arg_8 0x0C
	// 104924 arg_8           = word ptr  0Ch ;~ 17C5:A8C8
#undef arg_a
#define arg_a 0x0E
	// 104925 arg_A           = word ptr  0Eh ;~ 17C5:A8C8
#undef arg_c
#define arg_c 0x10
	// 104926 arg_C           = word ptr  10h ;~ 17C5:A8C8
cs=0x17c5;eip=0x00a8c8; 	X(PUSH(bp));	// 104928                  push    bp ;~ 17C5:A8C8
cs=0x17c5;eip=0x00a8c9; 	T(bp = sp;);	// 104929                  mov     bp, sp ;~ 17C5:A8C9
cs=0x17c5;eip=0x00a8cb; 	T(ax = word_52ae4;);	// 104930                  mov     ax, ds:word_52AE4 ;~ 17C5:A8CB
cs=0x17c5;eip=0x00a8ce; 	X(word_4e5fc = ax;);	// 104931                  mov     ds:word_4E5FC, ax ;~ 17C5:A8CE
cs=0x17c5;eip=0x00a8d1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 104932                  mov     ax, [bp+arg_4] ;~ 17C5:A8D1
cs=0x17c5;eip=0x00a8d4; 	X(word_4e5fe = ax;);	// 104933                  mov     ds:word_4E5FE, ax ;~ 17C5:A8D4
cs=0x17c5;eip=0x00a8d7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 104934                  mov     ax, [bp+arg_6] ;~ 17C5:A8D7
cs=0x17c5;eip=0x00a8da; 	X(word_4e600 = ax;);	// 104935                  mov     ds:word_4E600, ax ;~ 17C5:A8DA
cs=0x17c5;eip=0x00a8dd; 	T(CMP(byte_527d0, 1));	// 104936                  cmp     ds:byte_527D0, 1 ;~ 17C5:A8DD
cs=0x17c5;eip=0x00a8e2; 	T(SBB(ax, ax));	// 104937                  sbb     ax, ax ;~ 17C5:A8E2
cs=0x17c5;eip=0x00a8e4; 	T(INC(ax));	// 104938                  inc     ax ;~ 17C5:A8E4
cs=0x17c5;eip=0x00a8e5; 	X(word_4e602 = ax;);	// 104939                  mov     ds:word_4E602, ax ;~ 17C5:A8E5
cs=0x17c5;eip=0x00a8e8; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 104940                  mov     ax, [bp+arg_0] ;~ 17C5:A8E8
cs=0x17c5;eip=0x00a8eb; 	X(word_4e604 = ax;);	// 104941                  mov     ds:word_4E604, ax ;~ 17C5:A8EB
cs=0x17c5;eip=0x00a8ee; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 104942                  mov     ax, [bp+arg_2] ;~ 17C5:A8EE
cs=0x17c5;eip=0x00a8f1; 	X(word_4e606 = ax;);	// 104943                  mov     ds:word_4E606, ax ;~ 17C5:A8F1
cs=0x17c5;eip=0x00a8f4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_8))));	// 104944                  mov     ax, [bp+arg_8] ;~ 17C5:A8F4
cs=0x17c5;eip=0x00a8f7; 	X(word_4e608 = ax;);	// 104945                  mov     ds:word_4E608, ax ;~ 17C5:A8F7
cs=0x17c5;eip=0x00a8fa; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_a))));	// 104946                  mov     ax, [bp+arg_A] ;~ 17C5:A8FA
cs=0x17c5;eip=0x00a8fd; 	X(word_4e60a = ax;);	// 104947                  mov     ds:word_4E60A, ax ;~ 17C5:A8FD
cs=0x17c5;eip=0x00a900; 	T(MOV(al, *(raddr(ss,bp+arg_c))));	// 104948                  mov     al, byte ptr [bp+arg_C] ;~ 17C5:A900
cs=0x17c5;eip=0x00a903; 	X(byte_4e615 = al;);	// 104949                  mov     ds:byte_4E615, al ;~ 17C5:A903
cs=0x17c5;eip=0x00a906; 	T(CMP(*(dw*)(raddr(ss,bp+arg_c)), 0));	// 104950                  cmp     [bp+arg_C], 0 ;~ 17C5:A906
cs=0x17c5;eip=0x00a90a; 	J(JZ(loc_30b50));	// 104951                  jz      short loc_30B50 ;~ 17C5:A90A
cs=0x17c5;eip=0x00a90c; 	X(byte_4e614 = 1;);	// 104952                  mov     ds:byte_4E614, 1 ;~ 17C5:A90C
cs=0x17c5;eip=0x00a911; 	T(ax = 0x5B1C;);	// 104953                  mov     ax, 5B1Ch ;~ 17C5:A911
cs=0x17c5;eip=0x00a914; 	X(PUSH(ax));	// 104954                  push    ax ;~ 17C5:A914
cs=0x17c5;eip=0x00a915; 	J(CALLF(sub_49b01,0));	// 104955                  call    far ptr sub_49B01 ;~ 17C5:A915
cs=0x17c5;eip=0x00a91a; 	T(ADD(sp, 2));	// 104957                  add     sp, 2 ;~ 17C5:A91A
cs=0x17c5;eip=0x00a91d; 	X(POP(bp));	// 104958                  pop     bp ;~ 17C5:A91D
cs=0x17c5;eip=0x00a91e; 	J(RETN(0));	// 104959                  retn ;~ 17C5:A91E
loc_30b50:
	// 6121 
cs=0x17c5;eip=0x00a920; 	X(byte_4e614 = 0x10;);	// 104964                  mov     ds:byte_4E614, 10h ;~ 17C5:A920
cs=0x17c5;eip=0x00a925; 	T(ax = 0x5B1C;);	// 104965                  mov     ax, 5B1Ch ;~ 17C5:A925
cs=0x17c5;eip=0x00a928; 	X(PUSH(ax));	// 104966                  push    ax ;~ 17C5:A928
cs=0x17c5;eip=0x00a929; 	J(CALLF(sub_49b0b,0));	// 104967                  call    far ptr sub_49B0B ;~ 17C5:A929
seg2623_a92e_proc:
	// 104971 
cs=0x17c5;eip=0x00a92e; 	T(ADD(sp, 2));	// 104971                  add     sp, 2 ;~ 17C5:A92E
cs=0x17c5;eip=0x00a931; 	X(POP(bp));	// 104972                  pop     bp ;~ 17C5:A931
cs=0x17c5;eip=0x00a932; 	J(RETN(0));	// 104973                  retn ;~ 17C5:A932

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30b50: 	goto loc_30b50;
        case m2c::kseg2623_a92e_proc: 	goto seg2623_a92e_proc;
        case m2c::ksub_30af8: 	goto sub_30af8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group58(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group58:
    _begin:
sub_30b64:
	// 104981 
cs=0x17c5;eip=0x00a934; 	T(ax = 0x39;);	// 104982                  mov     ax, 39h ; '9' ;~ 17C5:A934
cs=0x17c5;eip=0x00a937; 	X(PUSH(ax));	// 104983                  push    ax ;~ 17C5:A937
cs=0x17c5;eip=0x00a938; 	T(ax = 0x49;);	// 104984                  mov     ax, 49h ; 'I' ;~ 17C5:A938
cs=0x17c5;eip=0x00a93b; 	X(PUSH(ax));	// 104985                  push    ax ;~ 17C5:A93B
cs=0x17c5;eip=0x00a93c; 	T(ax = 0x70;);	// 104986                  mov     ax, 70h ; 'p' ;~ 17C5:A93C
cs=0x17c5;eip=0x00a93f; 	X(PUSH(ax));	// 104987                  push    ax ;~ 17C5:A93F
cs=0x17c5;eip=0x00a940; 	T(ax = 0x18;);	// 104988                  mov     ax, 18h ;~ 17C5:A940
cs=0x17c5;eip=0x00a943; 	X(PUSH(ax));	// 104989                  push    ax ;~ 17C5:A943
cs=0x17c5;eip=0x00a944; 	T(bx = word_4e594;);	// 104990                  mov     bx, ds:word_4E594 ;~ 17C5:A944
cs=0x17c5;eip=0x00a948; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 104991                  push    word ptr [bx] ;~ 17C5:A948
cs=0x17c5;eip=0x00a94a; 	T(ax = 0x70;);	// 104992                  mov     ax, 70h ; 'p' ;~ 17C5:A94A
cs=0x17c5;eip=0x00a94d; 	X(PUSH(ax));	// 104993                  push    ax ;~ 17C5:A94D
cs=0x17c5;eip=0x00a94e; 	T(ax = 0x18;);	// 104994                  mov     ax, 18h ;~ 17C5:A94E
cs=0x17c5;eip=0x00a951; 	X(PUSH(ax));	// 104995                  push    ax ;~ 17C5:A951
cs=0x17c5;eip=0x00a952; 	T(bx = word_4e564;);	// 104996                  mov     bx, ds:word_4E564 ;~ 17C5:A952
cs=0x17c5;eip=0x00a956; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 104997                  push    word ptr [bx] ;~ 17C5:A956
cs=0x17c5;eip=0x00a958; 	J(CALLF(sub_49a70,0));	// 104998                  call    far ptr sub_49A70 ;~ 17C5:A958
seg2623_a95d_proc:
	// 105002 
cs=0x17c5;eip=0x00a95d; 	T(ADD(sp, 0x10));	// 105002                  add     sp, 10h ;~ 17C5:A95D
cs=0x17c5;eip=0x00a960; 	J(RETN(0));	// 105003                  retn ;~ 17C5:A960

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_a95d_proc: 	goto seg2623_a95d_proc;
        case m2c::ksub_30b64: 	goto sub_30b64;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group59(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group59:
    _begin:
sub_30b92:
	// 105011 
cs=0x17c5;eip=0x00a962; 	T(ax = 0x39;);	// 105013                  mov     ax, 39h ; '9' ;~ 17C5:A962
cs=0x17c5;eip=0x00a965; 	X(PUSH(ax));	// 105014                  push    ax ;~ 17C5:A965
cs=0x17c5;eip=0x00a966; 	T(ax = 0x49;);	// 105015                  mov     ax, 49h ; 'I' ;~ 17C5:A966
cs=0x17c5;eip=0x00a969; 	X(PUSH(ax));	// 105016                  push    ax ;~ 17C5:A969
cs=0x17c5;eip=0x00a96a; 	T(ax = 0x70;);	// 105017                  mov     ax, 70h ; 'p' ;~ 17C5:A96A
cs=0x17c5;eip=0x00a96d; 	X(PUSH(ax));	// 105018                  push    ax ;~ 17C5:A96D
cs=0x17c5;eip=0x00a96e; 	T(ax = 0x18;);	// 105019                  mov     ax, 18h ;~ 17C5:A96E
cs=0x17c5;eip=0x00a971; 	X(PUSH(ax));	// 105020                  push    ax ;~ 17C5:A971
cs=0x17c5;eip=0x00a972; 	T(bx = word_4e564;);	// 105021                  mov     bx, ds:word_4E564 ;~ 17C5:A972
cs=0x17c5;eip=0x00a976; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 105022                  push    word ptr [bx] ;~ 17C5:A976
cs=0x17c5;eip=0x00a978; 	T(ax = 0x70;);	// 105023                  mov     ax, 70h ; 'p' ;~ 17C5:A978
cs=0x17c5;eip=0x00a97b; 	X(PUSH(ax));	// 105024                  push    ax ;~ 17C5:A97B
cs=0x17c5;eip=0x00a97c; 	T(ax = 0x18;);	// 105025                  mov     ax, 18h ;~ 17C5:A97C
cs=0x17c5;eip=0x00a97f; 	X(PUSH(ax));	// 105026                  push    ax ;~ 17C5:A97F
cs=0x17c5;eip=0x00a980; 	T(bx = word_4e594;);	// 105027                  mov     bx, ds:word_4E594 ;~ 17C5:A980
cs=0x17c5;eip=0x00a984; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 105028                  push    word ptr [bx] ;~ 17C5:A984
cs=0x17c5;eip=0x00a986; 	J(CALLF(sub_49a70,0));	// 105029                  call    far ptr sub_49A70 ;~ 17C5:A986
seg2623_a98b_proc:
	// 105033 
cs=0x17c5;eip=0x00a98b; 	T(ADD(sp, 0x10));	// 105033                  add     sp, 10h ;~ 17C5:A98B
cs=0x17c5;eip=0x00a98e; 	T(ax = 0x39;);	// 105034                  mov     ax, 39h ; '9' ;~ 17C5:A98E
cs=0x17c5;eip=0x00a991; 	X(PUSH(ax));	// 105035                  push    ax ;~ 17C5:A991
cs=0x17c5;eip=0x00a992; 	T(ax = 0x49;);	// 105036                  mov     ax, 49h ; 'I' ;~ 17C5:A992
cs=0x17c5;eip=0x00a995; 	X(PUSH(ax));	// 105037                  push    ax ;~ 17C5:A995
cs=0x17c5;eip=0x00a996; 	T(ax = 0x70;);	// 105038                  mov     ax, 70h ; 'p' ;~ 17C5:A996
cs=0x17c5;eip=0x00a999; 	X(PUSH(ax));	// 105039                  push    ax ;~ 17C5:A999
cs=0x17c5;eip=0x00a99a; 	T(ax = 0x18;);	// 105040                  mov     ax, 18h ;~ 17C5:A99A
cs=0x17c5;eip=0x00a99d; 	X(PUSH(ax));	// 105041                  push    ax ;~ 17C5:A99D
cs=0x17c5;eip=0x00a99e; 	T(bx = word_4e57c;);	// 105042                  mov     bx, ds:word_4E57C ;~ 17C5:A99E
cs=0x17c5;eip=0x00a9a2; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 105043                  push    word ptr [bx] ;~ 17C5:A9A2
cs=0x17c5;eip=0x00a9a4; 	T(ax = 0x70;);	// 105044                  mov     ax, 70h ; 'p' ;~ 17C5:A9A4
cs=0x17c5;eip=0x00a9a7; 	X(PUSH(ax));	// 105045                  push    ax ;~ 17C5:A9A7
cs=0x17c5;eip=0x00a9a8; 	T(ax = 0x18;);	// 105046                  mov     ax, 18h ;~ 17C5:A9A8
cs=0x17c5;eip=0x00a9ab; 	X(PUSH(ax));	// 105047                  push    ax ;~ 17C5:A9AB
cs=0x17c5;eip=0x00a9ac; 	T(bx = word_4e564;);	// 105048                  mov     bx, ds:word_4E564 ;~ 17C5:A9AC
cs=0x17c5;eip=0x00a9b0; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 105049                  push    word ptr [bx] ;~ 17C5:A9B0
cs=0x17c5;eip=0x00a9b2; 	J(CALLF(sub_49a70,0));	// 105050                  call    far ptr sub_49A70 ;~ 17C5:A9B2
cs=0x17c5;eip=0x00a9b7; 	T(ADD(sp, 0x10));	// 105052                  add     sp, 10h ;~ 17C5:A9B7
cs=0x17c5;eip=0x00a9ba; 	J(RETN(0));	// 105053                  retn ;~ 17C5:A9BA
loc_30bec:
	// 6122 
cs=0x17c5;eip=0x00a9bc; 	T(ax = 0x39;);	// 105058                  mov     ax, 39h ; '9' ;~ 17C5:A9BC
cs=0x17c5;eip=0x00a9bf; 	X(PUSH(ax));	// 105059                  push    ax ;~ 17C5:A9BF
cs=0x17c5;eip=0x00a9c0; 	T(ax = 0x49;);	// 105060                  mov     ax, 49h ; 'I' ;~ 17C5:A9C0
cs=0x17c5;eip=0x00a9c3; 	X(PUSH(ax));	// 105061                  push    ax ;~ 17C5:A9C3
cs=0x17c5;eip=0x00a9c4; 	T(ax = 0x70;);	// 105062                  mov     ax, 70h ; 'p' ;~ 17C5:A9C4
cs=0x17c5;eip=0x00a9c7; 	X(PUSH(ax));	// 105063                  push    ax ;~ 17C5:A9C7
cs=0x17c5;eip=0x00a9c8; 	T(ax = 0x18;);	// 105064                  mov     ax, 18h ;~ 17C5:A9C8
cs=0x17c5;eip=0x00a9cb; 	X(PUSH(ax));	// 105065                  push    ax ;~ 17C5:A9CB
cs=0x17c5;eip=0x00a9cc; 	T(CMP(byte_527d0, 0));	// 105066                  cmp     ds:byte_527D0, 0 ;~ 17C5:A9CC
cs=0x17c5;eip=0x00a9d1; 	J(JZ(loc_30c0a));	// 105067                  jz      short loc_30C0A ;~ 17C5:A9D1
cs=0x17c5;eip=0x00a9d3; 	T(bx = word_4e57c;);	// 105068                  mov     bx, ds:word_4E57C ;~ 17C5:A9D3
cs=0x17c5;eip=0x00a9d7; 	J(JMP(loc_30c0e));	// 105069                  jmp     short loc_30C0E ;~ 17C5:A9D7
loc_30c0a:
	// 6123 
cs=0x17c5;eip=0x00a9da; 	T(bx = word_4e564;);	// 105074                  mov     bx, ds:word_4E564 ;~ 17C5:A9DA
loc_30c0e:
	// 6124 
cs=0x17c5;eip=0x00a9de; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 105077                  mov     ax, [bx] ;~ 17C5:A9DE
cs=0x17c5;eip=0x00a9e0; 	X(PUSH(ax));	// 105078                  push    ax ;~ 17C5:A9E0
cs=0x17c5;eip=0x00a9e1; 	T(ax = 0x70;);	// 105079                  mov     ax, 70h ; 'p' ;~ 17C5:A9E1
cs=0x17c5;eip=0x00a9e4; 	X(PUSH(ax));	// 105080                  push    ax ;~ 17C5:A9E4
cs=0x17c5;eip=0x00a9e5; 	T(ax = 0x18;);	// 105081                  mov     ax, 18h ;~ 17C5:A9E5
cs=0x17c5;eip=0x00a9e8; 	X(PUSH(ax));	// 105082                  push    ax ;~ 17C5:A9E8
cs=0x17c5;eip=0x00a9e9; 	T(bx = word_4e594;);	// 105083                  mov     bx, ds:word_4E594 ;~ 17C5:A9E9
cs=0x17c5;eip=0x00a9ed; 	X(PUSH(*(dw*)(raddr(ds,bx))));	// 105084                  push    word ptr [bx] ;~ 17C5:A9ED
cs=0x17c5;eip=0x00a9ef; 	J(CALLF(sub_49a70,0));	// 105085                  call    far ptr sub_49A70 ;~ 17C5:A9EF
cs=0x17c5;eip=0x00a9f4; 	T(ADD(sp, 0x10));	// 105087                  add     sp, 10h ;~ 17C5:A9F4
cs=0x17c5;eip=0x00a9f7; 	J(RETN(0));	// 105088                  retn ;~ 17C5:A9F7
loc_30c28:
	// 6125 
cs=0x17c5;eip=0x00a9f8; 	X(PUSH(bp));	// 105092                  push    bp ;~ 17C5:A9F8
cs=0x17c5;eip=0x00a9f9; 	T(bp = sp;);	// 105093                  mov     bp, sp ;~ 17C5:A9F9
cs=0x17c5;eip=0x00a9fb; 	T(SUB(sp, 0x32));	// 105094                  sub     sp, 32h ;~ 17C5:A9FB
cs=0x17c5;eip=0x00a9fe; 	X(PUSH(di));	// 105095                  push    di ;~ 17C5:A9FE
cs=0x17c5;eip=0x00a9ff; 	X(PUSH(si));	// 105096                  push    si ;~ 17C5:A9FF
cs=0x17c5;eip=0x00aa00; 	X(MOV(*(dw*)(raddr(ss,bp-0x1A)), 0));	// 105097                  mov     word ptr [bp-1Ah], 0 ;~ 17C5:AA00
cs=0x17c5;eip=0x00aa05; 	T(CMP(word_520c0, 0x8B));	// 105098                  cmp     ds:word_520C0, 8Bh ;~ 17C5:AA05
cs=0x17c5;eip=0x00aa0b; 	J(JNZ(loc_30c75));	// 105099                  jnz     short loc_30C75 ;~ 17C5:AA0B
cs=0x17c5;eip=0x00aa0d; 	T(ax = 2;);	// 105100                  mov     ax, 2 ;~ 17C5:AA0D
cs=0x17c5;eip=0x00aa10; 	X(PUSH(ax));	// 105101                  push    ax ;~ 17C5:AA10
cs=0x17c5;eip=0x00aa11; 	X(PUSH(word_4e2fc));	// 105102                  push    ds:word_4E2FC ;~ 17C5:AA11
cs=0x17c5;eip=0x00aa15; 	X(PUSH(word_4e2fa));	// 105103                  push    ds:word_4E2FA ;~ 17C5:AA15
cs=0x17c5;eip=0x00aa19; 	X(PUSH(word_4e2f8));	// 105104                  push    ds:word_4E2F8 ;~ 17C5:AA19
cs=0x17c5;eip=0x00aa1d; 	T(ax = word_4e2fe;);	// 105105                  mov     ax, ds:word_4E2FE ;~ 17C5:AA1D
cs=0x17c5;eip=0x00aa20; 	T(ADD(ax, 0x10));	// 105106                  add     ax, 10h ;~ 17C5:AA20
cs=0x17c5;eip=0x00aa23; 	X(PUSH(ax));	// 105107                  push    ax ;~ 17C5:AA23
cs=0x17c5;eip=0x00aa24; 	T(SUB(ax, ax));	// 105108                  sub     ax, ax ;~ 17C5:AA24
cs=0x17c5;eip=0x00aa26; 	T(dx = 0x100;);	// 105109                  mov     dx, 100h ;~ 17C5:AA26
cs=0x17c5;eip=0x00aa29; 	T(SUB(ax, word_51a28));	// 105110                  sub     ax, ds:word_51A28 ;~ 17C5:AA29
cs=0x17c5;eip=0x00aa2d; 	T(SBB(dx, word_51a2a));	// 105111                  sbb     dx, ds:word_51A2A ;~ 17C5:AA2D
cs=0x17c5;eip=0x00aa31; 	X(PUSH(dx));	// 105112                  push    dx ;~ 17C5:AA31
cs=0x17c5;eip=0x00aa32; 	X(PUSH(ax));	// 105113                  push    ax ;~ 17C5:AA32
cs=0x17c5;eip=0x00aa33; 	X(PUSH(word_51a0c));	// 105114                  push    ds:word_51A0C ;~ 17C5:AA33
cs=0x17c5;eip=0x00aa37; 	X(PUSH(word_51a0a));	// 105115                  push    ds:word_51A0A ;~ 17C5:AA37
cs=0x17c5;eip=0x00aa3b; 	T(ax = 6;);	// 105116                  mov     ax, 6 ;~ 17C5:AA3B
cs=0x17c5;eip=0x00aa3e; 	X(PUSH(ax));	// 105117                  push    ax ;~ 17C5:AA3E
cs=0x17c5;eip=0x00aa3f; 	J(CALL(sub_32c02,0));	// 105118                  call    sub_32C02 ;~ 17C5:AA3F
cs=0x17c5;eip=0x00aa42; 	T(ADD(sp, 0x14));	// 105119                  add     sp, 14h ;~ 17C5:AA42
loc_30c75:
	// 6126 
cs=0x17c5;eip=0x00aa45; 	T(CMP(word_51702, 0));	// 105122                  cmp     ds:word_51702, 0 ;~ 17C5:AA45
cs=0x17c5;eip=0x00aa4a; 	J(JZ(loc_30c80));	// 105123                  jz      short loc_30C80 ;~ 17C5:AA4A
cs=0x17c5;eip=0x00aa4c; 	X(DEC(word_51702));	// 105124                  dec     ds:word_51702 ;~ 17C5:AA4C
loc_30c80:
	// 6127 
cs=0x17c5;eip=0x00aa50; 	T(TEST(*(db*)(&word_49924), 0x80));	// 105127                  test    byte ptr word_49924, 80h ;~ 17C5:AA50
cs=0x17c5;eip=0x00aa55; 	J(JNZ(loc_30c9b));	// 105128                  jnz     short loc_30C9B ;~ 17C5:AA55
cs=0x17c5;eip=0x00aa57; 	T(TEST(*(db*)(&word_49918), 0x0F));	// 105129                  test    byte ptr word_49918, 0Fh ;~ 17C5:AA57
cs=0x17c5;eip=0x00aa5c; 	J(JZ(loc_30c91));	// 105130                  jz      short loc_30C91 ;~ 17C5:AA5C
cs=0x17c5;eip=0x00aa5e; 	J(JMP(loc_30e04));	// 105131                  jmp     loc_30E04 ;~ 17C5:AA5E
loc_30c91:
	// 6128 
cs=0x17c5;eip=0x00aa61; 	T(CMP(word_5223a, 0));	// 105135                  cmp     ds:word_5223A, 0 ;~ 17C5:AA61
cs=0x17c5;eip=0x00aa66; 	J(JZ(loc_30c9b));	// 105136                  jz      short loc_30C9B ;~ 17C5:AA66
cs=0x17c5;eip=0x00aa68; 	J(JMP(loc_30e04));	// 105137                  jmp     loc_30E04 ;~ 17C5:AA68
loc_30c9b:
	// 6129 
cs=0x17c5;eip=0x00aa6b; 	T(CMP(word_522ce, 0x13));	// 105142                  cmp     ds:word_522CE, 13h ;~ 17C5:AA6B
cs=0x17c5;eip=0x00aa70; 	J(JZ(loc_30ca5));	// 105143                  jz      short loc_30CA5 ;~ 17C5:AA70
cs=0x17c5;eip=0x00aa72; 	J(JMP(loc_30e04));	// 105144                  jmp     loc_30E04 ;~ 17C5:AA72
loc_30ca5:
	// 6130 
cs=0x17c5;eip=0x00aa75; 	T(CMP(word_51702, 0));	// 105148                  cmp     ds:word_51702, 0 ;~ 17C5:AA75
cs=0x17c5;eip=0x00aa7a; 	J(JZ(loc_30caf));	// 105149                  jz      short loc_30CAF ;~ 17C5:AA7A
cs=0x17c5;eip=0x00aa7c; 	J(JMP(loc_30e04));	// 105150                  jmp     loc_30E04 ;~ 17C5:AA7C
loc_30caf:
	// 6131 
cs=0x17c5;eip=0x00aa7f; 	T(CMP(word_5268c, 1));	// 105154                  cmp     ds:word_5268C, 1 ;~ 17C5:AA7F
cs=0x17c5;eip=0x00aa84; 	J(JNZ(loc_30cb9));	// 105155                  jnz     short loc_30CB9 ;~ 17C5:AA84
cs=0x17c5;eip=0x00aa86; 	J(JMP(loc_30e04));	// 105156                  jmp     loc_30E04 ;~ 17C5:AA86
loc_30cb9:
	// 6132 
cs=0x17c5;eip=0x00aa89; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 105160                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:AA89
cs=0x17c5;eip=0x00aa8e; 	J(JZ(loc_30cc3));	// 105161                  jz      short loc_30CC3 ;~ 17C5:AA8E
cs=0x17c5;eip=0x00aa90; 	J(JMP(loc_30e04));	// 105162                  jmp     loc_30E04 ;~ 17C5:AA90
loc_30cc3:
	// 6133 
cs=0x17c5;eip=0x00aa93; 	T(TEST(*(db*)(&word_49924), 0x80));	// 105166                  test    byte ptr word_49924, 80h ;~ 17C5:AA93
cs=0x17c5;eip=0x00aa98; 	J(JNZ(loc_30cd3));	// 105167                  jnz     short loc_30CD3 ;~ 17C5:AA98
cs=0x17c5;eip=0x00aa9a; 	T(ax = 0x0FFFF;);	// 105168                  mov     ax, 0FFFFh ;~ 17C5:AA9A
cs=0x17c5;eip=0x00aa9d; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), ax));	// 105169                  mov     [bp-2Ch], ax ;~ 17C5:AA9D
cs=0x17c5;eip=0x00aaa0; 	X(word_49924 = ax;);	// 105170                  mov     word_49924, ax ;~ 17C5:AAA0
loc_30cd3:
	// 6134 
cs=0x17c5;eip=0x00aaa3; 	T(ax = 0x64;);	// 105173                  mov     ax, 64h ; 'd' ;~ 17C5:AAA3
cs=0x17c5;eip=0x00aaa6; 	T(cl = 6;);	// 105174                  mov     cl, 6 ;~ 17C5:AAA6
cs=0x17c5;eip=0x00aaa8; 	T(SUB(cl, *(db*)(&word_492ec)));	// 105175                  sub     cl, byte ptr word_492EC ;~ 17C5:AAA8
cs=0x17c5;eip=0x00aaac; 	T(SHL(ax, cl));	// 105176                  shl     ax, cl ;~ 17C5:AAAC
cs=0x17c5;eip=0x00aaae; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), ax));	// 105177                  mov     [bp-10h], ax ;~ 17C5:AAAE
cs=0x17c5;eip=0x00aab1; 	T(CMP(word_49924, 0x0FFFF));	// 105178                  cmp     word_49924, 0FFFFh ;~ 17C5:AAB1
cs=0x17c5;eip=0x00aab6; 	J(JZ(loc_30d40));	// 105179                  jz      short loc_30D40 ;~ 17C5:AAB6
cs=0x17c5;eip=0x00aab8; 	T(ax = word_49924;);	// 105180                  mov     ax, word_49924 ;~ 17C5:AAB8
cs=0x17c5;eip=0x00aabb; 	T(SUB(ax, 0x80));	// 105181                  sub     ax, 80h ;~ 17C5:AABB
cs=0x17c5;eip=0x00aabe; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), ax));	// 105182                  mov     [bp-20h], ax ;~ 17C5:AABE
cs=0x17c5;eip=0x00aac1; 	X(PUSH(ax));	// 105183                  push    ax ;~ 17C5:AAC1
cs=0x17c5;eip=0x00aac2; 	J(CALL(sub_329d2,0));	// 105184                  call    sub_329D2 ;~ 17C5:AAC2
cs=0x17c5;eip=0x00aac5; 	T(ADD(sp, 2));	// 105185                  add     sp, 2 ;~ 17C5:AAC5
cs=0x17c5;eip=0x00aac8; 	T(DEC(ax));	// 105186                  dec     ax ;~ 17C5:AAC8
cs=0x17c5;eip=0x00aac9; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 105187                  mov     [bp-1Eh], ax ;~ 17C5:AAC9
cs=0x17c5;eip=0x00aacc; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x20))));	// 105188                  mov     bx, [bp-20h] ;~ 17C5:AACC
cs=0x17c5;eip=0x00aacf; 	T(cl = 4;);	// 105189                  mov     cl, 4 ;~ 17C5:AACF
cs=0x17c5;eip=0x00aad1; 	T(SHL(bx, cl));	// 105190                  shl     bx, cl ;~ 17C5:AAD1
cs=0x17c5;eip=0x00aad3; 	T(CMP(*(dw*)(raddr(ds,bx-0x7E4E)), 0));	// 105191                  cmp     word ptr [bx-7E4Eh], 0 ;~ 17C5:AAD3
cs=0x17c5;eip=0x00aad8; 	J(JZ(loc_30d0f));	// 105192                  jz      short loc_30D0F ;~ 17C5:AAD8
cs=0x17c5;eip=0x00aada; 	X(SUB(*(dw*)(raddr(ss,bp-0x1E)), 0x280));	// 105193                  sub     word ptr [bp-1Eh], 280h ;~ 17C5:AADA
loc_30d0f:
	// 6135 
cs=0x17c5;eip=0x00aadf; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), 3));	// 105196                  cmp     word ptr [bp-20h], 3 ;~ 17C5:AADF
cs=0x17c5;eip=0x00aae3; 	J(JGE(loc_30d1a));	// 105197                  jge     short loc_30D1A ;~ 17C5:AAE3
cs=0x17c5;eip=0x00aae5; 	X(SUB(*(dw*)(raddr(ss,bp-0x1E)), 0x0A00));	// 105198                  sub     word ptr [bp-1Eh], 0A00h ;~ 17C5:AAE5
loc_30d1a:
	// 6136 
cs=0x17c5;eip=0x00aaea; 	T(ax = word_4e2f8;);	// 105201                  mov     ax, ds:word_4E2F8 ;~ 17C5:AAEA
cs=0x17c5;eip=0x00aaed; 	T(ADD(ax, word_52ae2));	// 105202                  add     ax, ds:word_52AE2 ;~ 17C5:AAED
cs=0x17c5;eip=0x00aaf1; 	T(SUB(ax, word_4ef30));	// 105203                  sub     ax, ds:word_4EF30 ;~ 17C5:AAF1
cs=0x17c5;eip=0x00aaf5; 	X(PUSH(ax));	// 105204                  push    ax ;~ 17C5:AAF5
cs=0x17c5;eip=0x00aaf6; 	J(CALL(sub_34dc0,0));	// 105205                  call    sub_34DC0 ;~ 17C5:AAF6
cs=0x17c5;eip=0x00aaf9; 	T(ADD(sp, 2));	// 105206                  add     sp, 2 ;~ 17C5:AAF9
cs=0x17c5;eip=0x00aafc; 	T(CMP(ax, 0x2000));	// 105207                  cmp     ax, 2000h ;~ 17C5:AAFC
cs=0x17c5;eip=0x00aaff; 	J(JLE(loc_30d38));	// 105208                  jle     short loc_30D38 ;~ 17C5:AAFF
cs=0x17c5;eip=0x00ab01; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), 0x8300));	// 105209                  mov     word ptr [bp-1Eh], 8300h ;~ 17C5:AB01
cs=0x17c5;eip=0x00ab06; 	J(JMP(loc_30d3e));	// 105210                  jmp     short loc_30D3E ;~ 17C5:AB06
loc_30d38:
	// 6137 
cs=0x17c5;eip=0x00ab08; 	X(word_5223a = 1;);	// 105214                  mov     ds:word_5223A, 1 ;~ 17C5:AB08
loc_30d3e:
	// 6138 
cs=0x17c5;eip=0x00ab0e; 	J(JMP(loc_30d4b));	// 105217                  jmp     short loc_30D4B ;~ 17C5:AB0E
loc_30d40:
	// 6139 
cs=0x17c5;eip=0x00ab10; 	X(word_5223a = 0;);	// 105221                  mov     ds:word_5223A, 0 ;~ 17C5:AB10
cs=0x17c5;eip=0x00ab16; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), 0x8300));	// 105222                  mov     word ptr [bp-1Eh], 8300h ;~ 17C5:AB16
loc_30d4b:
	// 6140 
cs=0x17c5;eip=0x00ab1b; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), 0x0FFFF));	// 105225                  mov     word ptr [bp-2Ch], 0FFFFh ;~ 17C5:AB1B
cs=0x17c5;eip=0x00ab20; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), 1));	// 105226                  mov     word ptr [bp-20h], 1 ;~ 17C5:AB20
cs=0x17c5;eip=0x00ab25; 	J(JMP(loc_30d5a));	// 105227                  jmp     short loc_30D5A ;~ 17C5:AB25
loc_30d57:
	// 6141 
cs=0x17c5;eip=0x00ab27; 	X(INC(*(dw*)(raddr(ss,bp-0x20))));	// 105231                  inc     word ptr [bp-20h] ;~ 17C5:AB27
loc_30d5a:
	// 6142 
cs=0x17c5;eip=0x00ab2a; 	T(ax = word_52102;);	// 105234                  mov     ax, ds:word_52102 ;~ 17C5:AB2A
cs=0x17c5;eip=0x00ab2d; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), ax));	// 105235                  cmp     [bp-20h], ax ;~ 17C5:AB2D
cs=0x17c5;eip=0x00ab30; 	J(JGE(loc_30ddb));	// 105236                  jge     short loc_30DDB ;~ 17C5:AB30
cs=0x17c5;eip=0x00ab32; 	X(PUSH(*(dw*)(raddr(ss,bp-0x20))));	// 105237                  push    word ptr [bp-20h] ;~ 17C5:AB32
cs=0x17c5;eip=0x00ab35; 	J(CALL(sub_329d2,0));	// 105238                  call    sub_329D2 ;~ 17C5:AB35
cs=0x17c5;eip=0x00ab38; 	T(ADD(sp, 2));	// 105239                  add     sp, 2 ;~ 17C5:AB38
cs=0x17c5;eip=0x00ab3b; 	T(ax = word_4e2f8;);	// 105240                  mov     ax, ds:word_4E2F8 ;~ 17C5:AB3B
cs=0x17c5;eip=0x00ab3e; 	T(ADD(ax, word_52ae2));	// 105241                  add     ax, ds:word_52AE2 ;~ 17C5:AB3E
cs=0x17c5;eip=0x00ab42; 	T(SUB(ax, word_4ef30));	// 105242                  sub     ax, ds:word_4EF30 ;~ 17C5:AB42
cs=0x17c5;eip=0x00ab46; 	X(PUSH(ax));	// 105243                  push    ax ;~ 17C5:AB46
cs=0x17c5;eip=0x00ab47; 	J(CALL(sub_34dc0,0));	// 105244                  call    sub_34DC0 ;~ 17C5:AB47
cs=0x17c5;eip=0x00ab4a; 	T(ADD(sp, 2));	// 105245                  add     sp, 2 ;~ 17C5:AB4A
cs=0x17c5;eip=0x00ab4d; 	T(CMP(ax, 0x1800));	// 105246                  cmp     ax, 1800h ;~ 17C5:AB4D
cs=0x17c5;eip=0x00ab50; 	J(JGE(loc_30dd8));	// 105247                  jge     short loc_30DD8 ;~ 17C5:AB50
cs=0x17c5;eip=0x00ab52; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x20))));	// 105248                  mov     ax, [bp-20h] ;~ 17C5:AB52
cs=0x17c5;eip=0x00ab55; 	T(ADD(ax, 0x80));	// 105249                  add     ax, 80h ;~ 17C5:AB55
cs=0x17c5;eip=0x00ab58; 	T(CMP(ax, word_49924));	// 105250                  cmp     ax, word_49924 ;~ 17C5:AB58
cs=0x17c5;eip=0x00ab5c; 	J(JZ(loc_30dd8));	// 105251                  jz      short loc_30DD8 ;~ 17C5:AB5C
cs=0x17c5;eip=0x00ab5e; 	T(MOV(si, *(dw*)(raddr(ss,bp-0x20))));	// 105252                  mov     si, [bp-20h] ;~ 17C5:AB5E
cs=0x17c5;eip=0x00ab61; 	T(cl = 4;);	// 105253                  mov     cl, 4 ;~ 17C5:AB61
cs=0x17c5;eip=0x00ab63; 	T(SHL(si, cl));	// 105254                  shl     si, cl ;~ 17C5:AB63
cs=0x17c5;eip=0x00ab65; 	T(TEST(*(raddr(ds,si-0x7E4C)), 0x80));	// 105255                  test    byte ptr [si-7E4Ch], 80h ;~ 17C5:AB65
cs=0x17c5;eip=0x00ab6a; 	J(JNZ(loc_30dd8));	// 105256                  jnz     short loc_30DD8 ;~ 17C5:AB6A
cs=0x17c5;eip=0x00ab6c; 	T(CMP(*(dw*)(raddr(ds,si-0x7E4E)), 0));	// 105257                  cmp     word ptr [si-7E4Eh], 0 ;~ 17C5:AB6C
cs=0x17c5;eip=0x00ab71; 	J(JZ(loc_30da9));	// 105258                  jz      short loc_30DA9 ;~ 17C5:AB71
cs=0x17c5;eip=0x00ab73; 	X(SUB(word_4ef2c, 0x280));	// 105259                  sub     ds:word_4EF2C, 280h ;~ 17C5:AB73
loc_30da9:
	// 6143 
cs=0x17c5;eip=0x00ab79; 	T(ax = word_51376;);	// 105262                  mov     ax, ds:word_51376 ;~ 17C5:AB79
cs=0x17c5;eip=0x00ab7c; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), ax));	// 105263                  cmp     [bp-20h], ax ;~ 17C5:AB7C
cs=0x17c5;eip=0x00ab7f; 	J(JZ(loc_30db9));	// 105264                  jz      short loc_30DB9 ;~ 17C5:AB7F
cs=0x17c5;eip=0x00ab81; 	T(ax = word_51388;);	// 105265                  mov     ax, ds:word_51388 ;~ 17C5:AB81
cs=0x17c5;eip=0x00ab84; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), ax));	// 105266                  cmp     [bp-20h], ax ;~ 17C5:AB84
cs=0x17c5;eip=0x00ab87; 	J(JNZ(loc_30dbf));	// 105267                  jnz     short loc_30DBF ;~ 17C5:AB87
loc_30db9:
	// 6144 
cs=0x17c5;eip=0x00ab89; 	X(SUB(word_4ef2c, 0x0A00));	// 105270                  sub     ds:word_4EF2C, 0A00h ;~ 17C5:AB89
loc_30dbf:
	// 6145 
cs=0x17c5;eip=0x00ab8f; 	T(ax = word_4ef2c;);	// 105273                  mov     ax, ds:word_4EF2C ;~ 17C5:AB8F
cs=0x17c5;eip=0x00ab92; 	T(CMP(*(dw*)(raddr(ss,bp-0x10)), ax));	// 105274                  cmp     [bp-10h], ax ;~ 17C5:AB92
cs=0x17c5;eip=0x00ab95; 	J(JLE(loc_30dd8));	// 105275                  jle     short loc_30DD8 ;~ 17C5:AB95
cs=0x17c5;eip=0x00ab97; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 105276                  cmp     [bp-1Eh], ax ;~ 17C5:AB97
cs=0x17c5;eip=0x00ab9a; 	J(JGE(loc_30dd8));	// 105277                  jge     short loc_30DD8 ;~ 17C5:AB9A
cs=0x17c5;eip=0x00ab9c; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x20))));	// 105278                  mov     ax, [bp-20h] ;~ 17C5:AB9C
cs=0x17c5;eip=0x00ab9f; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), ax));	// 105279                  mov     [bp-2Ch], ax ;~ 17C5:AB9F
cs=0x17c5;eip=0x00aba2; 	T(ax = word_4ef2c;);	// 105280                  mov     ax, ds:word_4EF2C ;~ 17C5:ABA2
cs=0x17c5;eip=0x00aba5; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), ax));	// 105281                  mov     [bp-10h], ax ;~ 17C5:ABA5
loc_30dd8:
	// 6146 
cs=0x17c5;eip=0x00aba8; 	J(JMP(loc_30d57));	// 105285                  jmp     loc_30D57 ;~ 17C5:ABA8
loc_30ddb:
	// 6147 
cs=0x17c5;eip=0x00abab; 	T(TEST(*(raddr(ss,bp-0x2C)), 0x80));	// 105289                  test    byte ptr [bp-2Ch], 80h ;~ 17C5:ABAB
cs=0x17c5;eip=0x00abaf; 	J(JZ(loc_30df8));	// 105290                  jz      short loc_30DF8 ;~ 17C5:ABAF
cs=0x17c5;eip=0x00abb1; 	T(CMP(word_49924, 0x0FFFF));	// 105291                  cmp     word_49924, 0FFFFh ;~ 17C5:ABB1
cs=0x17c5;eip=0x00abb6; 	J(JNZ(loc_30df0));	// 105292                  jnz     short loc_30DF0 ;~ 17C5:ABB6
cs=0x17c5;eip=0x00abb8; 	X(word_51702 = 4;);	// 105293                  mov     ds:word_51702, 4 ;~ 17C5:ABB8
cs=0x17c5;eip=0x00abbe; 	J(JMP(loc_30df6));	// 105294                  jmp     short loc_30DF6 ;~ 17C5:ABBE
loc_30df0:
	// 6148 
cs=0x17c5;eip=0x00abc0; 	X(word_49924 = 0x0FFFF;);	// 105298                  mov     word_49924, 0FFFFh ;~ 17C5:ABC0
loc_30df6:
	// 6149 
cs=0x17c5;eip=0x00abc6; 	J(JMP(loc_30e04));	// 105301                  jmp     short loc_30E04 ;~ 17C5:ABC6
loc_30df8:
	// 6150 
cs=0x17c5;eip=0x00abc8; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x2C))));	// 105305                  mov     ax, [bp-2Ch] ;~ 17C5:ABC8
cs=0x17c5;eip=0x00abcb; 	X(word_49924 = ax;);	// 105306                  mov     word_49924, ax ;~ 17C5:ABCB
cs=0x17c5;eip=0x00abce; 	X(word_4f834 = 0;);	// 105307                  mov     ds:word_4F834, 0 ;~ 17C5:ABCE
loc_30e04:
	// 6151 
cs=0x17c5;eip=0x00abd4; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), 0));	// 105311                  mov     word ptr [bp-20h], 0 ;~ 17C5:ABD4
cs=0x17c5;eip=0x00abd9; 	J(JMP(loc_30e0e));	// 105312                  jmp     short loc_30E0E ;~ 17C5:ABD9
loc_30e0b:
	// 6152 
cs=0x17c5;eip=0x00abdb; 	X(INC(*(dw*)(raddr(ss,bp-0x20))));	// 105316                  inc     word ptr [bp-20h] ;~ 17C5:ABDB
loc_30e0e:
	// 6153 
cs=0x17c5;eip=0x00abde; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), 8));	// 105319                  cmp     word ptr [bp-20h], 8 ;~ 17C5:ABDE
cs=0x17c5;eip=0x00abe2; 	J(JL(loc_30e17));	// 105320                  jl      short loc_30E17 ;~ 17C5:ABE2
cs=0x17c5;eip=0x00abe4; 	J(JMP(loc_30ea0));	// 105321                  jmp     loc_30EA0 ;~ 17C5:ABE4
loc_30e17:
	// 6154 
cs=0x17c5;eip=0x00abe7; 	T(MOV(si, *(dw*)(raddr(ss,bp-0x20))));	// 105325                  mov     si, [bp-20h] ;~ 17C5:ABE7
cs=0x17c5;eip=0x00abea; 	T(cl = 3;);	// 105326                  mov     cl, 3 ;~ 17C5:ABEA
cs=0x17c5;eip=0x00abec; 	T(SHL(si, cl));	// 105327                  shl     si, cl ;~ 17C5:ABEC
cs=0x17c5;eip=0x00abee; 	T(CMP(*(dw*)(raddr(ds,si+0x0B52)), 0));	// 105328                  cmp     word ptr [si+0B52h], 0 ;~ 17C5:ABEE
cs=0x17c5;eip=0x00abf3; 	J(JZ(loc_30e9d));	// 105329                  jz      short loc_30E9D ;~ 17C5:ABF3
cs=0x17c5;eip=0x00abf5; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B56))));	// 105330                  push    word ptr [si+0B56h] ;~ 17C5:ABF5
cs=0x17c5;eip=0x00abf9; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B54))));	// 105331                  push    word ptr [si+0B54h] ;~ 17C5:ABF9
cs=0x17c5;eip=0x00abfd; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B52))));	// 105332                  push    word ptr [si+0B52h] ;~ 17C5:ABFD
cs=0x17c5;eip=0x00ac01; 	J(CALL(sub_326b8,0));	// 105333                  call    sub_326B8 ;~ 17C5:AC01
cs=0x17c5;eip=0x00ac04; 	T(ADD(sp, 6));	// 105334                  add     sp, 6 ;~ 17C5:AC04
cs=0x17c5;eip=0x00ac07; 	T(CMP(word_52246, 0));	// 105335                  cmp     ds:word_52246, 0 ;~ 17C5:AC07
cs=0x17c5;eip=0x00ac0c; 	J(JGE(loc_30e9d));	// 105336                  jge     short loc_30E9D ;~ 17C5:AC0C
cs=0x17c5;eip=0x00ac0e; 	T(CMP(word_52246, 0x0FF00));	// 105337                  cmp     ds:word_52246, 0FF00h ;~ 17C5:AC0E
cs=0x17c5;eip=0x00ac14; 	J(JLE(loc_30e9d));	// 105338                  jle     short loc_30E9D ;~ 17C5:AC14
cs=0x17c5;eip=0x00ac16; 	T(MOV(si, *(dw*)(raddr(ss,bp-0x20))));	// 105339                  mov     si, [bp-20h] ;~ 17C5:AC16
cs=0x17c5;eip=0x00ac19; 	T(cl = 3;);	// 105340                  mov     cl, 3 ;~ 17C5:AC19
cs=0x17c5;eip=0x00ac1b; 	T(SHL(si, cl));	// 105341                  shl     si, cl ;~ 17C5:AC1B
cs=0x17c5;eip=0x00ac1d; 	T(SUB(ax, ax));	// 105342                  sub     ax, ax ;~ 17C5:AC1D
cs=0x17c5;eip=0x00ac1f; 	X(PUSH(ax));	// 105343                  push    ax ;~ 17C5:AC1F
cs=0x17c5;eip=0x00ac20; 	X(PUSH(ax));	// 105344                  push    ax ;~ 17C5:AC20
cs=0x17c5;eip=0x00ac21; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B58))));	// 105345                  push    word ptr [si+0B58h] ;~ 17C5:AC21
cs=0x17c5;eip=0x00ac25; 	X(PUSH(ax));	// 105346                  push    ax ;~ 17C5:AC25
cs=0x17c5;eip=0x00ac26; 	X(PUSH(*(dw*)(raddr(ds,si+0x0B56))));	// 105347                  push    word ptr [si+0B56h] ;~ 17C5:AC26
cs=0x17c5;eip=0x00ac2a; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0B54))));	// 105348                  mov     ax, [si+0B54h] ;~ 17C5:AC2A
cs=0x17c5;eip=0x00ac2e; 	T(SUB(dx, dx));	// 105349                  sub     dx, dx ;~ 17C5:AC2E
cs=0x17c5;eip=0x00ac30; 	T(cl = 5;);	// 105350                  mov     cl, 5 ;~ 17C5:AC30
loc_30e62:
	// 6155 
cs=0x17c5;eip=0x00ac32; 	T(SHL(ax, 1));	// 105353                  shl     ax, 1 ;~ 17C5:AC32
cs=0x17c5;eip=0x00ac34; 	T(RCL(dx, 1));	// 105354                  rcl     dx, 1 ;~ 17C5:AC34
cs=0x17c5;eip=0x00ac36; 	T(DEC(cl));	// 105355                  dec     cl ;~ 17C5:AC36
cs=0x17c5;eip=0x00ac38; 	J(JZ(loc_30e6c));	// 105356                  jz      short loc_30E6C ;~ 17C5:AC38
cs=0x17c5;eip=0x00ac3a; 	J(JMP(loc_30e62));	// 105357                  jmp     short loc_30E62 ;~ 17C5:AC3A
loc_30e6c:
	// 6156 
cs=0x17c5;eip=0x00ac3c; 	X(PUSH(dx));	// 105361                  push    dx ;~ 17C5:AC3C
cs=0x17c5;eip=0x00ac3d; 	X(PUSH(ax));	// 105362                  push    ax ;~ 17C5:AC3D
cs=0x17c5;eip=0x00ac3e; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0B52))));	// 105363                  mov     ax, [si+0B52h] ;~ 17C5:AC3E
cs=0x17c5;eip=0x00ac42; 	T(SUB(dx, dx));	// 105364                  sub     dx, dx ;~ 17C5:AC42
cs=0x17c5;eip=0x00ac44; 	T(cl = 5;);	// 105365                  mov     cl, 5 ;~ 17C5:AC44
loc_30e76:
	// 6157 
cs=0x17c5;eip=0x00ac46; 	T(SHL(ax, 1));	// 105368                  shl     ax, 1 ;~ 17C5:AC46
cs=0x17c5;eip=0x00ac48; 	T(RCL(dx, 1));	// 105369                  rcl     dx, 1 ;~ 17C5:AC48
cs=0x17c5;eip=0x00ac4a; 	T(DEC(cl));	// 105370                  dec     cl ;~ 17C5:AC4A
cs=0x17c5;eip=0x00ac4c; 	J(JZ(loc_30e80));	// 105371                  jz      short loc_30E80 ;~ 17C5:AC4C
cs=0x17c5;eip=0x00ac4e; 	J(JMP(loc_30e76));	// 105372                  jmp     short loc_30E76 ;~ 17C5:AC4E
loc_30e80:
	// 6158 
cs=0x17c5;eip=0x00ac50; 	X(PUSH(dx));	// 105376                  push    dx ;~ 17C5:AC50
cs=0x17c5;eip=0x00ac51; 	X(PUSH(ax));	// 105377                  push    ax ;~ 17C5:AC51
cs=0x17c5;eip=0x00ac52; 	T(al = *(db*)(&word_49672););	// 105378                  mov     al, byte ptr word_49672 ;~ 17C5:AC52
cs=0x17c5;eip=0x00ac55; 	T(SUB(al, *(raddr(ss,bp-0x20))));	// 105379                  sub     al, [bp-20h] ;~ 17C5:AC55
cs=0x17c5;eip=0x00ac58; 	T(AND(al, 7));	// 105380                  and     al, 7 ;~ 17C5:AC58
cs=0x17c5;eip=0x00ac5a; 	T(CMP(al, 4));	// 105381                  cmp     al, 4 ;~ 17C5:AC5A
cs=0x17c5;eip=0x00ac5c; 	J(JNC(loc_30e93));	// 105382                  jnb     short loc_30E93 ;~ 17C5:AC5C
cs=0x17c5;eip=0x00ac5e; 	T(ax = 3;);	// 105383                  mov     ax, 3 ;~ 17C5:AC5E
cs=0x17c5;eip=0x00ac61; 	J(JMP(loc_30e96));	// 105384                  jmp     short loc_30E96 ;~ 17C5:AC61
loc_30e93:
	// 6159 
cs=0x17c5;eip=0x00ac63; 	T(ax = 0x11;);	// 105388                  mov     ax, 11h ;~ 17C5:AC63
loc_30e96:
	// 6160 
cs=0x17c5;eip=0x00ac66; 	X(PUSH(ax));	// 105391                  push    ax ;~ 17C5:AC66
cs=0x17c5;eip=0x00ac67; 	J(CALL(sub_32c02,0));	// 105392                  call    sub_32C02 ;~ 17C5:AC67
cs=0x17c5;eip=0x00ac6a; 	T(ADD(sp, 0x14));	// 105393                  add     sp, 14h ;~ 17C5:AC6A
loc_30e9d:
	// 6161 
cs=0x17c5;eip=0x00ac6d; 	J(JMP(loc_30e0b));	// 105397                  jmp     loc_30E0B ;~ 17C5:AC6D
loc_30ea0:
	// 6162 
cs=0x17c5;eip=0x00ac70; 	T(ax = 0x4B;);	// 105401                  mov     ax, 4Bh ; 'K' ;~ 17C5:AC70
cs=0x17c5;eip=0x00ac73; 	T(cl = 6;);	// 105402                  mov     cl, 6 ;~ 17C5:AC73
cs=0x17c5;eip=0x00ac75; 	T(SUB(cl, *(db*)(&word_492ec)));	// 105403                  sub     cl, byte ptr word_492EC ;~ 17C5:AC75
cs=0x17c5;eip=0x00ac79; 	T(SHL(ax, cl));	// 105404                  shl     ax, cl ;~ 17C5:AC79
cs=0x17c5;eip=0x00ac7b; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), ax));	// 105405                  mov     [bp-10h], ax ;~ 17C5:AC7B
cs=0x17c5;eip=0x00ac7e; 	T(CMP(word_492f2, 0));	// 105406                  cmp     word_492F2, 0 ;~ 17C5:AC7E
cs=0x17c5;eip=0x00ac83; 	J(JZ(loc_30ec6));	// 105407                  jz      short loc_30EC6 ;~ 17C5:AC83
cs=0x17c5;eip=0x00ac85; 	T(ax = word_4f21e;);	// 105408                  mov     ax, ds:word_4F21E ;~ 17C5:AC85
cs=0x17c5;eip=0x00ac88; 	T(ADD(ax, word_4e2fe));	// 105409                  add     ax, ds:word_4E2FE ;~ 17C5:AC88
cs=0x17c5;eip=0x00ac8c; 	T(CMP(ax, 0x5DC));	// 105410                  cmp     ax, 5DCh ;~ 17C5:AC8C
cs=0x17c5;eip=0x00ac8f; 	J(JBE(loc_30ec6));	// 105411                  jbe     short loc_30EC6 ;~ 17C5:AC8F
cs=0x17c5;eip=0x00ac91; 	T(ax = 1;);	// 105412                  mov     ax, 1 ;~ 17C5:AC91
cs=0x17c5;eip=0x00ac94; 	J(JMP(loc_30ec8));	// 105413                  jmp     short loc_30EC8 ;~ 17C5:AC94
loc_30ec6:
	// 6163 
cs=0x17c5;eip=0x00ac96; 	T(SUB(ax, ax));	// 105418                  sub     ax, ax ;~ 17C5:AC96
loc_30ec8:
	// 6164 
cs=0x17c5;eip=0x00ac98; 	X(MOV(*(dw*)(raddr(ss,bp-0x24)), ax));	// 105421                  mov     [bp-24h], ax ;~ 17C5:AC98
cs=0x17c5;eip=0x00ac9b; 	T(CMP(word_492f2, 0));	// 105422                  cmp     word_492F2, 0 ;~ 17C5:AC9B
cs=0x17c5;eip=0x00aca0; 	J(JZ(loc_30ee3));	// 105423                  jz      short loc_30EE3 ;~ 17C5:ACA0
cs=0x17c5;eip=0x00aca2; 	T(ax = word_4f21e;);	// 105424                  mov     ax, ds:word_4F21E ;~ 17C5:ACA2
cs=0x17c5;eip=0x00aca5; 	T(ADD(ax, word_4e2fe));	// 105425                  add     ax, ds:word_4E2FE ;~ 17C5:ACA5
cs=0x17c5;eip=0x00aca9; 	T(CMP(ax, 0x0FA0));	// 105426                  cmp     ax, 0FA0h ;~ 17C5:ACA9
cs=0x17c5;eip=0x00acac; 	J(JBE(loc_30ee3));	// 105427                  jbe     short loc_30EE3 ;~ 17C5:ACAC
cs=0x17c5;eip=0x00acae; 	X(MOV(*(dw*)(raddr(ss,bp-0x24)), 2));	// 105428                  mov     word ptr [bp-24h], 2 ;~ 17C5:ACAE
loc_30ee3:
	// 6165 
cs=0x17c5;eip=0x00acb3; 	T(TEST(*(db*)(&word_49922), 0x80));	// 105432                  test    byte ptr word_49922, 80h ;~ 17C5:ACB3
cs=0x17c5;eip=0x00acb8; 	J(JZ(loc_30f35));	// 105433                  jz      short loc_30F35 ;~ 17C5:ACB8
cs=0x17c5;eip=0x00acba; 	T(CMP(word_49922, 0x0FFFF));	// 105434                  cmp     word_49922, 0FFFFh ;~ 17C5:ACBA
cs=0x17c5;eip=0x00acbf; 	J(JZ(loc_30f35));	// 105435                  jz      short loc_30F35 ;~ 17C5:ACBF
cs=0x17c5;eip=0x00acc1; 	T(ax = word_49922;);	// 105436                  mov     ax, word_49922 ;~ 17C5:ACC1
cs=0x17c5;eip=0x00acc4; 	T(SUB(ax, 0x80));	// 105437                  sub     ax, 80h ;~ 17C5:ACC4
cs=0x17c5;eip=0x00acc7; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), ax));	// 105438                  mov     [bp-20h], ax ;~ 17C5:ACC7
cs=0x17c5;eip=0x00acca; 	T(ax = 0x24;);	// 105439                  mov     ax, 24h ; '$' ;~ 17C5:ACCA
cs=0x17c5;eip=0x00accd; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105440                  imul    word ptr [bp-20h] ;~ 17C5:ACCD
cs=0x17c5;eip=0x00acd0; 	T(si = ax;);	// 105441                  mov     si, ax ;~ 17C5:ACD0
cs=0x17c5;eip=0x00acd2; 	T(ax = 1;);	// 105442                  mov     ax, 1 ;~ 17C5:ACD2
cs=0x17c5;eip=0x00acd5; 	X(PUSH(ax));	// 105443                  push    ax ;~ 17C5:ACD5
cs=0x17c5;eip=0x00acd6; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 105444                  push    word ptr [si-76AAh] ;~ 17C5:ACD6
cs=0x17c5;eip=0x00acda; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 105445                  push    word ptr [si-76ACh] ;~ 17C5:ACDA
cs=0x17c5;eip=0x00acde; 	J(CALL(sub_32a1a,0));	// 105446                  call    sub_32A1A ;~ 17C5:ACDE
cs=0x17c5;eip=0x00ace1; 	T(ADD(sp, 6));	// 105447                  add     sp, 6 ;~ 17C5:ACE1
cs=0x17c5;eip=0x00ace4; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 105448                  mov     [bp-1Eh], ax ;~ 17C5:ACE4
cs=0x17c5;eip=0x00ace7; 	T(ax = word_4e2f8;);	// 105449                  mov     ax, ds:word_4E2F8 ;~ 17C5:ACE7
cs=0x17c5;eip=0x00acea; 	T(ADD(ax, word_52ae2));	// 105450                  add     ax, ds:word_52AE2 ;~ 17C5:ACEA
cs=0x17c5;eip=0x00acee; 	T(SUB(ax, word_4ef30));	// 105451                  sub     ax, ds:word_4EF30 ;~ 17C5:ACEE
cs=0x17c5;eip=0x00acf2; 	X(PUSH(ax));	// 105452                  push    ax ;~ 17C5:ACF2
cs=0x17c5;eip=0x00acf3; 	J(CALL(sub_34dc0,0));	// 105453                  call    sub_34DC0 ;~ 17C5:ACF3
cs=0x17c5;eip=0x00acf6; 	T(ADD(sp, 2));	// 105454                  add     sp, 2 ;~ 17C5:ACF6
cs=0x17c5;eip=0x00acf9; 	T(CMP(ax, 0x2000));	// 105455                  cmp     ax, 2000h ;~ 17C5:ACF9
cs=0x17c5;eip=0x00acfc; 	J(JLE(loc_30f33));	// 105456                  jle     short loc_30F33 ;~ 17C5:ACFC
cs=0x17c5;eip=0x00acfe; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), 0));	// 105457                  mov     word ptr [bp-1Eh], 0 ;~ 17C5:ACFE
loc_30f33:
	// 6166 
cs=0x17c5;eip=0x00ad03; 	J(JMP(loc_30f3a));	// 105460                  jmp     short loc_30F3A ;~ 17C5:AD03
loc_30f35:
	// 6167 
cs=0x17c5;eip=0x00ad05; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), 0));	// 105465                  mov     word ptr [bp-1Eh], 0 ;~ 17C5:AD05
loc_30f3a:
	// 6168 
cs=0x17c5;eip=0x00ad0a; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), 0x0FFFF));	// 105468                  mov     word ptr [bp-2Ch], 0FFFFh ;~ 17C5:AD0A
cs=0x17c5;eip=0x00ad0f; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), 0));	// 105469                  mov     word ptr [bp-20h], 0 ;~ 17C5:AD0F
cs=0x17c5;eip=0x00ad14; 	J(JMP(loc_30f49));	// 105470                  jmp     short loc_30F49 ;~ 17C5:AD14
loc_30f46:
	// 6169 
cs=0x17c5;eip=0x00ad16; 	X(INC(*(dw*)(raddr(ss,bp-0x20))));	// 105474                  inc     word ptr [bp-20h] ;~ 17C5:AD16
loc_30f49:
	// 6170 
cs=0x17c5;eip=0x00ad19; 	T(ax = word_52276;);	// 105477                  mov     ax, ds:word_52276 ;~ 17C5:AD19
cs=0x17c5;eip=0x00ad1c; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), ax));	// 105478                  cmp     [bp-20h], ax ;~ 17C5:AD1C
cs=0x17c5;eip=0x00ad1f; 	J(JL(loc_30f54));	// 105479                  jl      short loc_30F54 ;~ 17C5:AD1F
cs=0x17c5;eip=0x00ad21; 	J(JMP(loc_31150));	// 105480                  jmp     loc_31150 ;~ 17C5:AD21
loc_30f54:
	// 6171 
cs=0x17c5;eip=0x00ad24; 	T(ax = 0x24;);	// 105484                  mov     ax, 24h ; '$' ;~ 17C5:AD24
cs=0x17c5;eip=0x00ad27; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105485                  imul    word ptr [bp-20h] ;~ 17C5:AD27
cs=0x17c5;eip=0x00ad2a; 	T(bx = ax;);	// 105486                  mov     bx, ax ;~ 17C5:AD2A
cs=0x17c5;eip=0x00ad2c; 	T(TEST(*(raddr(ds,bx-0x7696)), 2));	// 105487                  test    byte ptr [bx-7696h], 2 ;~ 17C5:AD2C
cs=0x17c5;eip=0x00ad31; 	J(JNZ(loc_30f66));	// 105488                  jnz     short loc_30F66 ;~ 17C5:AD31
cs=0x17c5;eip=0x00ad33; 	J(JMP(loc_3114d));	// 105489                  jmp     loc_3114D ;~ 17C5:AD33
loc_30f66:
	// 6172 
cs=0x17c5;eip=0x00ad36; 	X(PUSH(*(dw*)(raddr(ss,bp-0x20))));	// 105493                  push    word ptr [bp-20h] ;~ 17C5:AD36
cs=0x17c5;eip=0x00ad39; 	J(CALL(sub_329f6,0));	// 105494                  call    sub_329F6 ;~ 17C5:AD39
cs=0x17c5;eip=0x00ad3c; 	T(ADD(sp, 2));	// 105495                  add     sp, 2 ;~ 17C5:AD3C
cs=0x17c5;eip=0x00ad3f; 	T(CMP(ax, 0x12C0));	// 105496                  cmp     ax, 12C0h ;~ 17C5:AD3F
cs=0x17c5;eip=0x00ad42; 	J(JL(loc_30f7e));	// 105497                  jl      short loc_30F7E ;~ 17C5:AD42
cs=0x17c5;eip=0x00ad44; 	T(CMP(word_4993e, 0));	// 105498                  cmp     word_4993E, 0 ;~ 17C5:AD44
cs=0x17c5;eip=0x00ad49; 	J(JNZ(loc_30f7e));	// 105499                  jnz     short loc_30F7E ;~ 17C5:AD49
cs=0x17c5;eip=0x00ad4b; 	J(JMP(loc_3114d));	// 105500                  jmp     loc_3114D ;~ 17C5:AD4B
loc_30f7e:
	// 6173 
cs=0x17c5;eip=0x00ad4e; 	T(ax = word_4ef2c;);	// 105505                  mov     ax, ds:word_4EF2C ;~ 17C5:AD4E
cs=0x17c5;eip=0x00ad51; 	T(CMP(*(dw*)(raddr(ss,bp-0x10)), ax));	// 105506                  cmp     [bp-10h], ax ;~ 17C5:AD51
cs=0x17c5;eip=0x00ad54; 	J(JLE(loc_30fdd));	// 105507                  jle     short loc_30FDD ;~ 17C5:AD54
cs=0x17c5;eip=0x00ad56; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 105508                  cmp     [bp-1Eh], ax ;~ 17C5:AD56
cs=0x17c5;eip=0x00ad59; 	J(JGE(loc_30fdd));	// 105509                  jge     short loc_30FDD ;~ 17C5:AD59
cs=0x17c5;eip=0x00ad5b; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 105510                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:AD5B
cs=0x17c5;eip=0x00ad60; 	J(JNZ(loc_30fdd));	// 105511                  jnz     short loc_30FDD ;~ 17C5:AD60
cs=0x17c5;eip=0x00ad62; 	T(ax = 0x24;);	// 105512                  mov     ax, 24h ; '$' ;~ 17C5:AD62
cs=0x17c5;eip=0x00ad65; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105513                  imul    word ptr [bp-20h] ;~ 17C5:AD65
cs=0x17c5;eip=0x00ad68; 	T(si = ax;);	// 105514                  mov     si, ax ;~ 17C5:AD68
cs=0x17c5;eip=0x00ad6a; 	T(TEST(*(raddr(ds,si-0x7696)), 0x20));	// 105515                  test    byte ptr [si-7696h], 20h ;~ 17C5:AD6A
cs=0x17c5;eip=0x00ad6f; 	J(JNZ(loc_30fdd));	// 105516                  jnz     short loc_30FDD ;~ 17C5:AD6F
cs=0x17c5;eip=0x00ad71; 	T(CMP(*(dw*)(raddr(ds,si-0x7694)), 0));	// 105517                  cmp     word ptr [si-7694h], 0 ;~ 17C5:AD71
cs=0x17c5;eip=0x00ad76; 	J(JZ(loc_30fdd));	// 105518                  jz      short loc_30FDD ;~ 17C5:AD76
cs=0x17c5;eip=0x00ad78; 	T(ax = 1;);	// 105519                  mov     ax, 1 ;~ 17C5:AD78
cs=0x17c5;eip=0x00ad7b; 	X(PUSH(ax));	// 105520                  push    ax ;~ 17C5:AD7B
cs=0x17c5;eip=0x00ad7c; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 105521                  push    word ptr [si-76AAh] ;~ 17C5:AD7C
cs=0x17c5;eip=0x00ad80; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 105522                  push    word ptr [si-76ACh] ;~ 17C5:AD80
cs=0x17c5;eip=0x00ad84; 	J(CALL(sub_32a1a,0));	// 105523                  call    sub_32A1A ;~ 17C5:AD84
cs=0x17c5;eip=0x00ad87; 	T(ADD(sp, 6));	// 105524                  add     sp, 6 ;~ 17C5:AD87
cs=0x17c5;eip=0x00ad8a; 	T(ax = word_4e2f8;);	// 105525                  mov     ax, ds:word_4E2F8 ;~ 17C5:AD8A
cs=0x17c5;eip=0x00ad8d; 	T(ADD(ax, word_52ae2));	// 105526                  add     ax, ds:word_52AE2 ;~ 17C5:AD8D
cs=0x17c5;eip=0x00ad91; 	T(SUB(ax, word_4ef30));	// 105527                  sub     ax, ds:word_4EF30 ;~ 17C5:AD91
cs=0x17c5;eip=0x00ad95; 	X(PUSH(ax));	// 105528                  push    ax ;~ 17C5:AD95
cs=0x17c5;eip=0x00ad96; 	J(CALL(sub_34dc0,0));	// 105529                  call    sub_34DC0 ;~ 17C5:AD96
cs=0x17c5;eip=0x00ad99; 	T(ADD(sp, 2));	// 105530                  add     sp, 2 ;~ 17C5:AD99
cs=0x17c5;eip=0x00ad9c; 	T(CMP(ax, 0x2000));	// 105531                  cmp     ax, 2000h ;~ 17C5:AD9C
cs=0x17c5;eip=0x00ad9f; 	J(JGE(loc_30fdd));	// 105532                  jge     short loc_30FDD ;~ 17C5:AD9F
cs=0x17c5;eip=0x00ada1; 	T(ax = word_4ef2c;);	// 105533                  mov     ax, ds:word_4EF2C ;~ 17C5:ADA1
cs=0x17c5;eip=0x00ada4; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), ax));	// 105534                  mov     [bp-10h], ax ;~ 17C5:ADA4
cs=0x17c5;eip=0x00ada7; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x20))));	// 105535                  mov     ax, [bp-20h] ;~ 17C5:ADA7
cs=0x17c5;eip=0x00adaa; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), ax));	// 105536                  mov     [bp-2Ch], ax ;~ 17C5:ADAA
loc_30fdd:
	// 6174 
cs=0x17c5;eip=0x00adad; 	T(ax = 0x24;);	// 105540                  mov     ax, 24h ; '$' ;~ 17C5:ADAD
cs=0x17c5;eip=0x00adb0; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105541                  imul    word ptr [bp-20h] ;~ 17C5:ADB0
cs=0x17c5;eip=0x00adb3; 	T(si = ax;);	// 105542                  mov     si, ax ;~ 17C5:ADB3
cs=0x17c5;eip=0x00adb5; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 105543                  push    word ptr [si-76A8h] ;~ 17C5:ADB5
cs=0x17c5;eip=0x00adb9; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 105544                  push    word ptr [si-76AAh] ;~ 17C5:ADB9
cs=0x17c5;eip=0x00adbd; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 105545                  push    word ptr [si-76ACh] ;~ 17C5:ADBD
cs=0x17c5;eip=0x00adc1; 	J(CALL(sub_326b8,0));	// 105546                  call    sub_326B8 ;~ 17C5:ADC1
cs=0x17c5;eip=0x00adc4; 	T(ADD(sp, 6));	// 105547                  add     sp, 6 ;~ 17C5:ADC4
cs=0x17c5;eip=0x00adc7; 	T(CMP(word_52246, 0));	// 105548                  cmp     ds:word_52246, 0 ;~ 17C5:ADC7
cs=0x17c5;eip=0x00adcc; 	J(JL(loc_31001));	// 105549                  jl      short loc_31001 ;~ 17C5:ADCC
cs=0x17c5;eip=0x00adce; 	J(JMP(loc_3114d));	// 105550                  jmp     loc_3114D ;~ 17C5:ADCE
loc_31001:
	// 6175 
cs=0x17c5;eip=0x00add1; 	T(MOV(cl, *(raddr(ss,bp-0x24))));	// 105554                  mov     cl, [bp-24h] ;~ 17C5:ADD1
cs=0x17c5;eip=0x00add4; 	X(SAR(word_52246, cl));	// 105555                  sar     ds:word_52246, cl ;~ 17C5:ADD4
cs=0x17c5;eip=0x00add8; 	T(CMP(word_52246, 0x0FFE0));	// 105556                  cmp     ds:word_52246, 0FFE0h ;~ 17C5:ADD8
cs=0x17c5;eip=0x00addd; 	J(JG(loc_31012));	// 105557                  jg      short loc_31012 ;~ 17C5:ADDD
cs=0x17c5;eip=0x00addf; 	J(JMP(loc_3112d));	// 105558                  jmp     loc_3112D ;~ 17C5:ADDF
loc_31012:
	// 6176 
cs=0x17c5;eip=0x00ade2; 	T(ax = 0x24;);	// 105562                  mov     ax, 24h ; '$' ;~ 17C5:ADE2
cs=0x17c5;eip=0x00ade5; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105563                  imul    word ptr [bp-20h] ;~ 17C5:ADE5
cs=0x17c5;eip=0x00ade8; 	T(si = ax;);	// 105564                  mov     si, ax ;~ 17C5:ADE8
cs=0x17c5;eip=0x00adea; 	T(CMP(*(dw*)(raddr(ds,si-0x76A8)), 0x3E7));	// 105565                  cmp     word ptr [si-76A8h], 3E7h ;~ 17C5:ADEA
cs=0x17c5;eip=0x00adf0; 	J(JL(loc_31025));	// 105566                  jl      short loc_31025 ;~ 17C5:ADF0
cs=0x17c5;eip=0x00adf2; 	J(JMP(loc_310da));	// 105567                  jmp     loc_310DA ;~ 17C5:ADF2
loc_31025:
	// 6177 
cs=0x17c5;eip=0x00adf5; 	T(CMP(word_492ec, 0));	// 105571                  cmp     word_492EC, 0 ;~ 17C5:ADF5
cs=0x17c5;eip=0x00adfa; 	J(JZ(loc_3102f));	// 105572                  jz      short loc_3102F ;~ 17C5:ADFA
cs=0x17c5;eip=0x00adfc; 	J(JMP(loc_310da));	// 105573                  jmp     loc_310DA ;~ 17C5:ADFC
loc_3102f:
	// 6178 
cs=0x17c5;eip=0x00adff; 	X(MOV(*(dw*)(raddr(ss,bp-0x1C)), 0));	// 105577                  mov     word ptr [bp-1Ch], 0 ;~ 17C5:ADFF
cs=0x17c5;eip=0x00ae04; 	T(di = word_5239a;);	// 105578                  mov     di, ds:word_5239A ;~ 17C5:AE04
cs=0x17c5;eip=0x00ae08; 	T(cl = 4;);	// 105579                  mov     cl, 4 ;~ 17C5:AE08
cs=0x17c5;eip=0x00ae0a; 	T(SHL(di, cl));	// 105580                  shl     di, cl ;~ 17C5:AE0A
cs=0x17c5;eip=0x00ae0c; 	T(TEST(*(dw*)(raddr(ds,di-0x7E4C)), 0x200));	// 105581                  test    word ptr [di-7E4Ch], 200h ;~ 17C5:AE0C
cs=0x17c5;eip=0x00ae12; 	J(JZ(loc_3108f));	// 105582                  jz      short loc_3108F ;~ 17C5:AE12
cs=0x17c5;eip=0x00ae14; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 105583                  mov     ax, [si-76ACh] ;~ 17C5:AE14
cs=0x17c5;eip=0x00ae18; 	T(SUB(ax, *(dw*)(raddr(ds,di-0x7E52))));	// 105584                  sub     ax, [di-7E52h] ;~ 17C5:AE18
cs=0x17c5;eip=0x00ae1c; 	X(PUSH(ax));	// 105585                  push    ax ;~ 17C5:AE1C
cs=0x17c5;eip=0x00ae1d; 	J(CALL(sub_34dc0,0));	// 105586                  call    sub_34DC0 ;~ 17C5:AE1D
cs=0x17c5;eip=0x00ae20; 	T(ADD(sp, 2));	// 105587                  add     sp, 2 ;~ 17C5:AE20
cs=0x17c5;eip=0x00ae23; 	T(dx = word_4f22c;);	// 105588                  mov     dx, ds:word_4F22C ;~ 17C5:AE23
cs=0x17c5;eip=0x00ae27; 	T(cl = 5;);	// 105589                  mov     cl, 5 ;~ 17C5:AE27
cs=0x17c5;eip=0x00ae29; 	T(SAR(dx, cl));	// 105590                  sar     dx, cl ;~ 17C5:AE29
cs=0x17c5;eip=0x00ae2b; 	T(CMP(ax, dx));	// 105591                  cmp     ax, dx ;~ 17C5:AE2B
cs=0x17c5;eip=0x00ae2d; 	J(JGE(loc_3108f));	// 105592                  jge     short loc_3108F ;~ 17C5:AE2D
cs=0x17c5;eip=0x00ae2f; 	T(ax = 0x24;);	// 105593                  mov     ax, 24h ; '$' ;~ 17C5:AE2F
cs=0x17c5;eip=0x00ae32; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105594                  imul    word ptr [bp-20h] ;~ 17C5:AE32
cs=0x17c5;eip=0x00ae35; 	T(bx = ax;);	// 105595                  mov     bx, ax ;~ 17C5:AE35
cs=0x17c5;eip=0x00ae37; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x76AA))));	// 105596                  mov     ax, [bx-76AAh] ;~ 17C5:AE37
cs=0x17c5;eip=0x00ae3b; 	T(bx = word_5239a;);	// 105597                  mov     bx, ds:word_5239A ;~ 17C5:AE3B
cs=0x17c5;eip=0x00ae3f; 	T(cl = 4;);	// 105598                  mov     cl, 4 ;~ 17C5:AE3F
cs=0x17c5;eip=0x00ae41; 	T(SHL(bx, cl));	// 105599                  shl     bx, cl ;~ 17C5:AE41
cs=0x17c5;eip=0x00ae43; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x7E50))));	// 105600                  sub     ax, [bx-7E50h] ;~ 17C5:AE43
cs=0x17c5;eip=0x00ae47; 	X(PUSH(ax));	// 105601                  push    ax ;~ 17C5:AE47
cs=0x17c5;eip=0x00ae48; 	J(CALL(sub_34dc0,0));	// 105602                  call    sub_34DC0 ;~ 17C5:AE48
cs=0x17c5;eip=0x00ae4b; 	T(ADD(sp, 2));	// 105603                  add     sp, 2 ;~ 17C5:AE4B
cs=0x17c5;eip=0x00ae4e; 	T(dx = word_4f430;);	// 105604                  mov     dx, ds:word_4F430 ;~ 17C5:AE4E
cs=0x17c5;eip=0x00ae52; 	T(cl = 5;);	// 105605                  mov     cl, 5 ;~ 17C5:AE52
cs=0x17c5;eip=0x00ae54; 	T(SAR(dx, cl));	// 105606                  sar     dx, cl ;~ 17C5:AE54
cs=0x17c5;eip=0x00ae56; 	T(CMP(ax, dx));	// 105607                  cmp     ax, dx ;~ 17C5:AE56
cs=0x17c5;eip=0x00ae58; 	J(JGE(loc_3108f));	// 105608                  jge     short loc_3108F ;~ 17C5:AE58
cs=0x17c5;eip=0x00ae5a; 	X(MOV(*(dw*)(raddr(ss,bp-0x1C)), 0x80));	// 105609                  mov     word ptr [bp-1Ch], 80h ;~ 17C5:AE5A
loc_3108f:
	// 6179 
cs=0x17c5;eip=0x00ae5f; 	T(CMP(word_4e2fe, 0x80));	// 105613                  cmp     ds:word_4E2FE, 80h ;~ 17C5:AE5F
cs=0x17c5;eip=0x00ae65; 	J(JNZ(loc_3109e));	// 105614                  jnz     short loc_3109E ;~ 17C5:AE65
cs=0x17c5;eip=0x00ae67; 	T(CMP(*(dw*)(raddr(ss,bp-0x1C)), 0x80));	// 105615                  cmp     word ptr [bp-1Ch], 80h ;~ 17C5:AE67
cs=0x17c5;eip=0x00ae6c; 	J(JNZ(loc_310da));	// 105616                  jnz     short loc_310DA ;~ 17C5:AE6C
loc_3109e:
	// 6180 
cs=0x17c5;eip=0x00ae6e; 	T(ax = 0x24;);	// 105619                  mov     ax, 24h ; '$' ;~ 17C5:AE6E
cs=0x17c5;eip=0x00ae71; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105620                  imul    word ptr [bp-20h] ;~ 17C5:AE71
cs=0x17c5;eip=0x00ae74; 	T(si = ax;);	// 105621                  mov     si, ax ;~ 17C5:AE74
cs=0x17c5;eip=0x00ae76; 	X(PUSH(*(dw*)(raddr(ss,bp-0x24))));	// 105622                  push    word ptr [bp-24h] ;~ 17C5:AE76
cs=0x17c5;eip=0x00ae79; 	J(CALL(sub_333f8,0));	// 105623                  call    sub_333F8 ;~ 17C5:AE79
cs=0x17c5;eip=0x00ae7c; 	T(ADD(sp, 2));	// 105624                  add     sp, 2 ;~ 17C5:AE7C
cs=0x17c5;eip=0x00ae7f; 	T(SUB(ax, 2));	// 105625                  sub     ax, 2 ;~ 17C5:AE7F
cs=0x17c5;eip=0x00ae82; 	T(NEG(ax));	// 105626                  neg     ax ;~ 17C5:AE82
cs=0x17c5;eip=0x00ae84; 	X(PUSH(ax));	// 105627                  push    ax ;~ 17C5:AE84
cs=0x17c5;eip=0x00ae85; 	T(SUB(ax, ax));	// 105628                  sub     ax, ax ;~ 17C5:AE85
cs=0x17c5;eip=0x00ae87; 	X(PUSH(ax));	// 105629                  push    ax ;~ 17C5:AE87
cs=0x17c5;eip=0x00ae88; 	X(PUSH(ax));	// 105630                  push    ax ;~ 17C5:AE88
cs=0x17c5;eip=0x00ae89; 	X(PUSH(*(dw*)(raddr(ds,si-0x769E))));	// 105631                  push    word ptr [si-769Eh] ;~ 17C5:AE89
cs=0x17c5;eip=0x00ae8d; 	X(PUSH(*(dw*)(raddr(ss,bp-0x1C))));	// 105632                  push    word ptr [bp-1Ch] ;~ 17C5:AE8D
cs=0x17c5;eip=0x00ae90; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A0))));	// 105633                  push    word ptr [si-76A0h] ;~ 17C5:AE90
cs=0x17c5;eip=0x00ae94; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A2))));	// 105634                  push    word ptr [si-76A2h] ;~ 17C5:AE94
cs=0x17c5;eip=0x00ae98; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A4))));	// 105635                  push    word ptr [si-76A4h] ;~ 17C5:AE98
cs=0x17c5;eip=0x00ae9c; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A6))));	// 105636                  push    word ptr [si-76A6h] ;~ 17C5:AE9C
cs=0x17c5;eip=0x00aea0; 	T(ax = 5;);	// 105637                  mov     ax, 5 ;~ 17C5:AEA0
cs=0x17c5;eip=0x00aea3; 	X(PUSH(ax));	// 105638                  push    ax ;~ 17C5:AEA3
cs=0x17c5;eip=0x00aea4; 	J(CALL(sub_32c02,0));	// 105639                  call    sub_32C02 ;~ 17C5:AEA4
cs=0x17c5;eip=0x00aea7; 	T(ADD(sp, 0x14));	// 105640                  add     sp, 14h ;~ 17C5:AEA7
loc_310da:
	// 6181 
cs=0x17c5;eip=0x00aeaa; 	T(ax = 0x24;);	// 105644                  mov     ax, 24h ; '$' ;~ 17C5:AEAA
cs=0x17c5;eip=0x00aead; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105645                  imul    word ptr [bp-20h] ;~ 17C5:AEAD
cs=0x17c5;eip=0x00aeb0; 	T(si = ax;);	// 105646                  mov     si, ax ;~ 17C5:AEB0
cs=0x17c5;eip=0x00aeb2; 	T(ax = 2;);	// 105647                  mov     ax, 2 ;~ 17C5:AEB2
cs=0x17c5;eip=0x00aeb5; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x24))));	// 105648                  sub     ax, [bp-24h] ;~ 17C5:AEB5
cs=0x17c5;eip=0x00aeb8; 	X(PUSH(ax));	// 105649                  push    ax ;~ 17C5:AEB8
cs=0x17c5;eip=0x00aeb9; 	X(PUSH(*(dw*)(raddr(ds,si-0x769A))));	// 105650                  push    word ptr [si-769Ah] ;~ 17C5:AEB9
cs=0x17c5;eip=0x00aebd; 	X(PUSH(*(dw*)(raddr(ds,si-0x769C))));	// 105651                  push    word ptr [si-769Ch] ;~ 17C5:AEBD
cs=0x17c5;eip=0x00aec1; 	X(PUSH(*(dw*)(raddr(ds,si-0x769E))));	// 105652                  push    word ptr [si-769Eh] ;~ 17C5:AEC1
cs=0x17c5;eip=0x00aec5; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 105653                  push    word ptr [si-76A8h] ;~ 17C5:AEC5
cs=0x17c5;eip=0x00aec9; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A0))));	// 105654                  push    word ptr [si-76A0h] ;~ 17C5:AEC9
cs=0x17c5;eip=0x00aecd; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A2))));	// 105655                  push    word ptr [si-76A2h] ;~ 17C5:AECD
cs=0x17c5;eip=0x00aed1; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A4))));	// 105656                  push    word ptr [si-76A4h] ;~ 17C5:AED1
cs=0x17c5;eip=0x00aed5; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A6))));	// 105657                  push    word ptr [si-76A6h] ;~ 17C5:AED5
cs=0x17c5;eip=0x00aed9; 	T(CMP(word_52246, 0x0FFF0));	// 105658                  cmp     ds:word_52246, 0FFF0h ;~ 17C5:AED9
cs=0x17c5;eip=0x00aede; 	J(JLE(loc_31114));	// 105659                  jle     short loc_31114 ;~ 17C5:AEDE
cs=0x17c5;eip=0x00aee0; 	T(SUB(di, di));	// 105660                  sub     di, di ;~ 17C5:AEE0
cs=0x17c5;eip=0x00aee2; 	J(JMP(loc_31117));	// 105661                  jmp     short loc_31117 ;~ 17C5:AEE2
loc_31114:
	// 6182 
cs=0x17c5;eip=0x00aee4; 	T(di = 1;);	// 105665                  mov     di, 1 ;~ 17C5:AEE4
loc_31117:
	// 6183 
cs=0x17c5;eip=0x00aee7; 	T(SHL(di, 1));	// 105668                  shl     di, 1 ;~ 17C5:AEE7
cs=0x17c5;eip=0x00aee9; 	T(MOV(bx, *(dw*)(raddr(ds,si-0x7698))));	// 105669                  mov     bx, [si-7698h] ;~ 17C5:AEE9
cs=0x17c5;eip=0x00aeed; 	T(cl = 5;);	// 105670                  mov     cl, 5 ;~ 17C5:AEED
cs=0x17c5;eip=0x00aeef; 	T(SHL(bx, cl));	// 105671                  shl     bx, cl ;~ 17C5:AEEF
cs=0x17c5;eip=0x00aef1; 	X(PUSH(*(dw*)(raddr(ds,bx+di+0x2E2))));	// 105672                  push    word ptr [bx+di+2E2h] ;~ 17C5:AEF1
cs=0x17c5;eip=0x00aef5; 	J(CALL(sub_32c02,0));	// 105673                  call    sub_32C02 ;~ 17C5:AEF5
cs=0x17c5;eip=0x00aef8; 	T(ADD(sp, 0x14));	// 105674                  add     sp, 14h ;~ 17C5:AEF8
cs=0x17c5;eip=0x00aefb; 	J(JMP(loc_3114d));	// 105675                  jmp     short loc_3114D ;~ 17C5:AEFB
loc_3112d:
	// 6184 
cs=0x17c5;eip=0x00aefd; 	T(ax = 0x0F;);	// 105679                  mov     ax, 0Fh ;~ 17C5:AEFD
cs=0x17c5;eip=0x00af00; 	X(PUSH(ax));	// 105680                  push    ax ;~ 17C5:AF00
cs=0x17c5;eip=0x00af01; 	J(CALL(sub_30074,0));	// 105681                  call    sub_30074 ;~ 17C5:AF01
cs=0x17c5;eip=0x00af04; 	T(ADD(sp, 2));	// 105682                  add     sp, 2 ;~ 17C5:AF04
cs=0x17c5;eip=0x00af07; 	X(PUSH(*(word_4ac7c)));	// 105683                  push    word_4AC7C ;~ 17C5:AF07
cs=0x17c5;eip=0x00af0b; 	X(PUSH(*(word_4aa98)));	// 105684                  push    word_4AA98 ;~ 17C5:AF0B
cs=0x17c5;eip=0x00af0f; 	X(PUSH(*(word_4ac7c)));	// 105685                  push    word_4AC7C ;~ 17C5:AF0F
cs=0x17c5;eip=0x00af13; 	X(PUSH(*(word_4aa98)));	// 105686                  push    word_4AA98 ;~ 17C5:AF13
cs=0x17c5;eip=0x00af17; 	J(CALL(sub_2fe3c,0));	// 105687                  call    sub_2FE3C ;~ 17C5:AF17
cs=0x17c5;eip=0x00af1a; 	T(ADD(sp, 8));	// 105689                  add     sp, 8 ;~ 17C5:AF1A
loc_3114d:
	// 6185 
cs=0x17c5;eip=0x00af1d; 	J(JMP(loc_30f46));	// 105693                  jmp     loc_30F46 ;~ 17C5:AF1D
loc_31150:
	// 6186 
cs=0x17c5;eip=0x00af20; 	T(CMP(*(dw*)(raddr(ss,bp-0x2C)), 0x0FFFF));	// 105697                  cmp     word ptr [bp-2Ch], 0FFFFh ;~ 17C5:AF20
cs=0x17c5;eip=0x00af24; 	J(JZ(loc_31162));	// 105698                  jz      short loc_31162 ;~ 17C5:AF24
cs=0x17c5;eip=0x00af26; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x2C))));	// 105699                  mov     ax, [bp-2Ch] ;~ 17C5:AF26
cs=0x17c5;eip=0x00af29; 	X(word_49922 = ax;);	// 105700                  mov     word_49922, ax ;~ 17C5:AF29
cs=0x17c5;eip=0x00af2c; 	X(word_4f834 = 0;);	// 105701                  mov     ds:word_4F834, 0 ;~ 17C5:AF2C
loc_31162:
	// 6187 
cs=0x17c5;eip=0x00af32; 	T(TEST(*(db*)(&word_49922), 0x80));	// 105704                  test    byte ptr word_49922, 80h ;~ 17C5:AF32
cs=0x17c5;eip=0x00af37; 	J(JZ(loc_3116f));	// 105705                  jz      short loc_3116F ;~ 17C5:AF37
cs=0x17c5;eip=0x00af39; 	X(word_49922 = 0x0FFFF;);	// 105706                  mov     word_49922, 0FFFFh ;~ 17C5:AF39
loc_3116f:
	// 6188 
cs=0x17c5;eip=0x00af3f; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), 0));	// 105709                  mov     word ptr [bp-20h], 0 ;~ 17C5:AF3F
cs=0x17c5;eip=0x00af44; 	J(JMP(loc_31179));	// 105710                  jmp     short loc_31179 ;~ 17C5:AF44
loc_31176:
	// 6189 
cs=0x17c5;eip=0x00af46; 	X(INC(*(dw*)(raddr(ss,bp-0x20))));	// 105714                  inc     word ptr [bp-20h] ;~ 17C5:AF46
loc_31179:
	// 6190 
cs=0x17c5;eip=0x00af49; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), 0x0C));	// 105717                  cmp     word ptr [bp-20h], 0Ch ;~ 17C5:AF49
cs=0x17c5;eip=0x00af4d; 	J(JL(loc_31182));	// 105718                  jl      short loc_31182 ;~ 17C5:AF4D
cs=0x17c5;eip=0x00af4f; 	J(JMP(loc_31256));	// 105719                  jmp     loc_31256 ;~ 17C5:AF4F
loc_31182:
	// 6191 
cs=0x17c5;eip=0x00af52; 	T(ax = 0x18;);	// 105723                  mov     ax, 18h ;~ 17C5:AF52
cs=0x17c5;eip=0x00af55; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105724                  imul    word ptr [bp-20h] ;~ 17C5:AF55
cs=0x17c5;eip=0x00af58; 	T(si = ax;);	// 105725                  mov     si, ax ;~ 17C5:AF58
cs=0x17c5;eip=0x00af5a; 	T(CMP(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 105726                  cmp     word ptr [si+0D22h], 0 ;~ 17C5:AF5A
cs=0x17c5;eip=0x00af5f; 	J(JNZ(loc_31194));	// 105727                  jnz     short loc_31194 ;~ 17C5:AF5F
cs=0x17c5;eip=0x00af61; 	J(JMP(loc_31253));	// 105728                  jmp     loc_31253 ;~ 17C5:AF61
loc_31194:
	// 6192 
cs=0x17c5;eip=0x00af64; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D18))));	// 105732                  push    word ptr [si+0D18h] ;~ 17C5:AF64
cs=0x17c5;eip=0x00af68; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D16))));	// 105733                  push    word ptr [si+0D16h] ;~ 17C5:AF68
cs=0x17c5;eip=0x00af6c; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D14))));	// 105734                  push    word ptr [si+0D14h] ;~ 17C5:AF6C
cs=0x17c5;eip=0x00af70; 	J(CALL(sub_326b8,0));	// 105735                  call    sub_326B8 ;~ 17C5:AF70
cs=0x17c5;eip=0x00af73; 	T(ADD(sp, 6));	// 105736                  add     sp, 6 ;~ 17C5:AF73
cs=0x17c5;eip=0x00af76; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 105737                  cmp     word_4AA98, 0FFFFh ;~ 17C5:AF76
cs=0x17c5;eip=0x00af7b; 	J(JNZ(loc_311b0));	// 105738                  jnz     short loc_311B0 ;~ 17C5:AF7B
cs=0x17c5;eip=0x00af7d; 	J(JMP(loc_31253));	// 105739                  jmp     loc_31253 ;~ 17C5:AF7D
loc_311b0:
	// 6193 
cs=0x17c5;eip=0x00af80; 	T(CMP(word_52246, 0x0FFE0));	// 105743                  cmp     ds:word_52246, 0FFE0h ;~ 17C5:AF80
cs=0x17c5;eip=0x00af85; 	J(JLE(loc_31228));	// 105744                  jle     short loc_31228 ;~ 17C5:AF85
cs=0x17c5;eip=0x00af87; 	T(ax = 0x18;);	// 105745                  mov     ax, 18h ;~ 17C5:AF87
cs=0x17c5;eip=0x00af8a; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 105746                  imul    word ptr [bp-20h] ;~ 17C5:AF8A
cs=0x17c5;eip=0x00af8d; 	T(si = ax;);	// 105747                  mov     si, ax ;~ 17C5:AF8D
cs=0x17c5;eip=0x00af8f; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 105748                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:AF8F
cs=0x17c5;eip=0x00af94; 	J(JZ(loc_311d3));	// 105749                  jz      short loc_311D3 ;~ 17C5:AF94
cs=0x17c5;eip=0x00af96; 	T(CMP(word_520c0, 0x8B));	// 105750                  cmp     ds:word_520C0, 8Bh ;~ 17C5:AF96
cs=0x17c5;eip=0x00af9c; 	J(JZ(loc_311d3));	// 105751                  jz      short loc_311D3 ;~ 17C5:AF9C
cs=0x17c5;eip=0x00af9e; 	T(ax = 3;);	// 105752                  mov     ax, 3 ;~ 17C5:AF9E
cs=0x17c5;eip=0x00afa1; 	J(JMP(loc_311d6));	// 105753                  jmp     short loc_311D6 ;~ 17C5:AFA1
loc_311d3:
	// 6194 
cs=0x17c5;eip=0x00afa3; 	T(ax = 1;);	// 105758                  mov     ax, 1 ;~ 17C5:AFA3
loc_311d6:
	// 6195 
cs=0x17c5;eip=0x00afa6; 	X(PUSH(ax));	// 105761                  push    ax ;~ 17C5:AFA6
cs=0x17c5;eip=0x00afa7; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D20))));	// 105762                  mov     ax, [si+0D20h] ;~ 17C5:AFA7
cs=0x17c5;eip=0x00afab; 	T(ADD(ah, 0x20));	// 105763                  add     ah, 20h ; ' ' ;~ 17C5:AFAB
cs=0x17c5;eip=0x00afae; 	X(PUSH(ax));	// 105764                  push    ax ;~ 17C5:AFAE
cs=0x17c5;eip=0x00afaf; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D1E))));	// 105765                  push    word ptr [si+0D1Eh] ;~ 17C5:AFAF
cs=0x17c5;eip=0x00afb3; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D1C))));	// 105766                  push    word ptr [si+0D1Ch] ;~ 17C5:AFB3
cs=0x17c5;eip=0x00afb7; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D18))));	// 105767                  push    word ptr [si+0D18h] ;~ 17C5:AFB7
cs=0x17c5;eip=0x00afbb; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D16))));	// 105768                  mov     ax, [si+0D16h] ;~ 17C5:AFBB
cs=0x17c5;eip=0x00afbf; 	T(SUB(dx, dx));	// 105769                  sub     dx, dx ;~ 17C5:AFBF
cs=0x17c5;eip=0x00afc1; 	T(cl = 5;);	// 105770                  mov     cl, 5 ;~ 17C5:AFC1
loc_311f3:
	// 6196 
cs=0x17c5;eip=0x00afc3; 	T(SHL(ax, 1));	// 105773                  shl     ax, 1 ;~ 17C5:AFC3
cs=0x17c5;eip=0x00afc5; 	T(RCL(dx, 1));	// 105774                  rcl     dx, 1 ;~ 17C5:AFC5
cs=0x17c5;eip=0x00afc7; 	T(DEC(cl));	// 105775                  dec     cl ;~ 17C5:AFC7
cs=0x17c5;eip=0x00afc9; 	J(JZ(loc_311fd));	// 105776                  jz      short loc_311FD ;~ 17C5:AFC9
cs=0x17c5;eip=0x00afcb; 	J(JMP(loc_311f3));	// 105777                  jmp     short loc_311F3 ;~ 17C5:AFCB
loc_311fd:
	// 6197 
cs=0x17c5;eip=0x00afcd; 	X(PUSH(dx));	// 105781                  push    dx ;~ 17C5:AFCD
cs=0x17c5;eip=0x00afce; 	X(PUSH(ax));	// 105782                  push    ax ;~ 17C5:AFCE
cs=0x17c5;eip=0x00afcf; 	T(MOV(ax, *(dw*)(raddr(ds,si+0x0D14))));	// 105783                  mov     ax, [si+0D14h] ;~ 17C5:AFCF
cs=0x17c5;eip=0x00afd3; 	T(SUB(dx, dx));	// 105784                  sub     dx, dx ;~ 17C5:AFD3
cs=0x17c5;eip=0x00afd5; 	T(cl = 5;);	// 105785                  mov     cl, 5 ;~ 17C5:AFD5
loc_31207:
	// 6198 
cs=0x17c5;eip=0x00afd7; 	T(SHL(ax, 1));	// 105788                  shl     ax, 1 ;~ 17C5:AFD7
cs=0x17c5;eip=0x00afd9; 	T(RCL(dx, 1));	// 105789                  rcl     dx, 1 ;~ 17C5:AFD9
cs=0x17c5;eip=0x00afdb; 	T(DEC(cl));	// 105790                  dec     cl ;~ 17C5:AFDB
cs=0x17c5;eip=0x00afdd; 	J(JZ(loc_31211));	// 105791                  jz      short loc_31211 ;~ 17C5:AFDD
cs=0x17c5;eip=0x00afdf; 	J(JMP(loc_31207));	// 105792                  jmp     short loc_31207 ;~ 17C5:AFDF
loc_31211:
	// 6199 
cs=0x17c5;eip=0x00afe1; 	X(PUSH(dx));	// 105796                  push    dx ;~ 17C5:AFE1
cs=0x17c5;eip=0x00afe2; 	X(PUSH(ax));	// 105797                  push    ax ;~ 17C5:AFE2
cs=0x17c5;eip=0x00afe3; 	T(ax = 0x12;);	// 105798                  mov     ax, 12h ;~ 17C5:AFE3
cs=0x17c5;eip=0x00afe6; 	X(IMUL1_2(*(dw*)(raddr(ds,si+0x0D24))));	// 105799                  imul    word ptr [si+0D24h] ;~ 17C5:AFE6
cs=0x17c5;eip=0x00afea; 	T(bx = ax;);	// 105800                  mov     bx, ax ;~ 17C5:AFEA
cs=0x17c5;eip=0x00afec; 	X(PUSH(*(dw*)(raddr(ds,bx+0x538))));	// 105801                  push    word ptr [bx+538h] ;~ 17C5:AFEC
cs=0x17c5;eip=0x00aff0; 	J(CALL(sub_32c02,0));	// 105802                  call    sub_32C02 ;~ 17C5:AFF0
cs=0x17c5;eip=0x00aff3; 	T(ADD(sp, 0x14));	// 105803                  add     sp, 14h ;~ 17C5:AFF3
cs=0x17c5;eip=0x00aff6; 	J(JMP(loc_31253));	// 105804                  jmp     short loc_31253 ;~ 17C5:AFF6
loc_31228:
	// 6200 
cs=0x17c5;eip=0x00aff8; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), 8));	// 105808                  cmp     word ptr [bp-20h], 8 ;~ 17C5:AFF8
cs=0x17c5;eip=0x00affc; 	J(JGE(loc_31233));	// 105809                  jge     short loc_31233 ;~ 17C5:AFFC
cs=0x17c5;eip=0x00affe; 	T(ax = 0x0C;);	// 105810                  mov     ax, 0Ch ;~ 17C5:AFFE
cs=0x17c5;eip=0x00b001; 	J(JMP(loc_31236));	// 105811                  jmp     short loc_31236 ;~ 17C5:B001
loc_31233:
	// 6201 
cs=0x17c5;eip=0x00b003; 	T(ax = 0x0D;);	// 105815                  mov     ax, 0Dh ;~ 17C5:B003
loc_31236:
	// 6202 
cs=0x17c5;eip=0x00b006; 	X(PUSH(ax));	// 105818                  push    ax ;~ 17C5:B006
cs=0x17c5;eip=0x00b007; 	J(CALL(sub_30074,0));	// 105819                  call    sub_30074 ;~ 17C5:B007
cs=0x17c5;eip=0x00b00a; 	T(ADD(sp, 2));	// 105820                  add     sp, 2 ;~ 17C5:B00A
cs=0x17c5;eip=0x00b00d; 	X(PUSH(*(word_4ac7c)));	// 105821                  push    word_4AC7C ;~ 17C5:B00D
cs=0x17c5;eip=0x00b011; 	X(PUSH(*(word_4aa98)));	// 105822                  push    word_4AA98 ;~ 17C5:B011
cs=0x17c5;eip=0x00b015; 	X(PUSH(*(word_4ac7c)));	// 105823                  push    word_4AC7C ;~ 17C5:B015
cs=0x17c5;eip=0x00b019; 	X(PUSH(*(word_4aa98)));	// 105824                  push    word_4AA98 ;~ 17C5:B019
cs=0x17c5;eip=0x00b01d; 	J(CALL(sub_2fe3c,0));	// 105825                  call    sub_2FE3C ;~ 17C5:B01D
cs=0x17c5;eip=0x00b020; 	T(ADD(sp, 8));	// 105827                  add     sp, 8 ;~ 17C5:B020
loc_31253:
	// 6203 
cs=0x17c5;eip=0x00b023; 	J(JMP(loc_31176));	// 105831                  jmp     loc_31176 ;~ 17C5:B023
loc_31256:
	// 6204 
cs=0x17c5;eip=0x00b026; 	T(CMP(word_521d2, 0));	// 105835                  cmp     ds:word_521D2, 0 ;~ 17C5:B026
cs=0x17c5;eip=0x00b02b; 	J(JLE(loc_312c7));	// 105836                  jle     short loc_312C7 ;~ 17C5:B02B
cs=0x17c5;eip=0x00b02d; 	X(PUSH(word_521d2));	// 105837                  push    ds:word_521D2 ;~ 17C5:B02D
cs=0x17c5;eip=0x00b031; 	X(PUSH(word_52106));	// 105838                  push    ds:word_52106 ;~ 17C5:B031
cs=0x17c5;eip=0x00b035; 	X(PUSH(word_520f2));	// 105839                  push    ds:word_520F2 ;~ 17C5:B035
cs=0x17c5;eip=0x00b039; 	J(CALL(sub_326b8,0));	// 105840                  call    sub_326B8 ;~ 17C5:B039
cs=0x17c5;eip=0x00b03c; 	T(ADD(sp, 6));	// 105841                  add     sp, 6 ;~ 17C5:B03C
cs=0x17c5;eip=0x00b03f; 	T(CMP(word_52246, 0));	// 105842                  cmp     ds:word_52246, 0 ;~ 17C5:B03F
cs=0x17c5;eip=0x00b044; 	J(JGE(loc_312c7));	// 105843                  jge     short loc_312C7 ;~ 17C5:B044
cs=0x17c5;eip=0x00b046; 	T(CMP(word_52246, 0x0FF00));	// 105844                  cmp     ds:word_52246, 0FF00h ;~ 17C5:B046
cs=0x17c5;eip=0x00b04c; 	J(JLE(loc_312c7));	// 105845                  jle     short loc_312C7 ;~ 17C5:B04C
cs=0x17c5;eip=0x00b04e; 	T(CMP(word_5170c, 0));	// 105846                  cmp     ds:word_5170C, 0 ;~ 17C5:B04E
cs=0x17c5;eip=0x00b053; 	J(JLE(loc_3128a));	// 105847                  jle     short loc_3128A ;~ 17C5:B053
cs=0x17c5;eip=0x00b055; 	T(ax = 4;);	// 105848                  mov     ax, 4 ;~ 17C5:B055
cs=0x17c5;eip=0x00b058; 	J(JMP(loc_3128d));	// 105849                  jmp     short loc_3128D ;~ 17C5:B058
loc_3128a:
	// 6205 
cs=0x17c5;eip=0x00b05a; 	T(ax = 3;);	// 105853                  mov     ax, 3 ;~ 17C5:B05A
loc_3128d:
	// 6206 
cs=0x17c5;eip=0x00b05d; 	X(PUSH(ax));	// 105856                  push    ax ;~ 17C5:B05D
cs=0x17c5;eip=0x00b05e; 	T(SUB(ax, ax));	// 105857                  sub     ax, ax ;~ 17C5:B05E
cs=0x17c5;eip=0x00b060; 	X(PUSH(ax));	// 105858                  push    ax ;~ 17C5:B060
cs=0x17c5;eip=0x00b061; 	X(PUSH(ax));	// 105859                  push    ax ;~ 17C5:B061
cs=0x17c5;eip=0x00b062; 	X(PUSH(ax));	// 105860                  push    ax ;~ 17C5:B062
cs=0x17c5;eip=0x00b063; 	X(PUSH(word_521d2));	// 105861                  push    ds:word_521D2 ;~ 17C5:B063
cs=0x17c5;eip=0x00b067; 	T(ax = word_52106;);	// 105862                  mov     ax, ds:word_52106 ;~ 17C5:B067
cs=0x17c5;eip=0x00b06a; 	T(SUB(dx, dx));	// 105863                  sub     dx, dx ;~ 17C5:B06A
cs=0x17c5;eip=0x00b06c; 	T(cl = 5;);	// 105864                  mov     cl, 5 ;~ 17C5:B06C
loc_3129e:
	// 6207 
cs=0x17c5;eip=0x00b06e; 	T(SHL(ax, 1));	// 105867                  shl     ax, 1 ;~ 17C5:B06E
cs=0x17c5;eip=0x00b070; 	T(RCL(dx, 1));	// 105868                  rcl     dx, 1 ;~ 17C5:B070
cs=0x17c5;eip=0x00b072; 	T(DEC(cl));	// 105869                  dec     cl ;~ 17C5:B072
cs=0x17c5;eip=0x00b074; 	J(JZ(loc_312a8));	// 105870                  jz      short loc_312A8 ;~ 17C5:B074
cs=0x17c5;eip=0x00b076; 	J(JMP(loc_3129e));	// 105871                  jmp     short loc_3129E ;~ 17C5:B076
loc_312a8:
	// 6208 
cs=0x17c5;eip=0x00b078; 	X(PUSH(dx));	// 105875                  push    dx ;~ 17C5:B078
cs=0x17c5;eip=0x00b079; 	X(PUSH(ax));	// 105876                  push    ax ;~ 17C5:B079
cs=0x17c5;eip=0x00b07a; 	T(ax = word_520f2;);	// 105877                  mov     ax, ds:word_520F2 ;~ 17C5:B07A
cs=0x17c5;eip=0x00b07d; 	T(SUB(dx, dx));	// 105878                  sub     dx, dx ;~ 17C5:B07D
cs=0x17c5;eip=0x00b07f; 	T(cl = 5;);	// 105879                  mov     cl, 5 ;~ 17C5:B07F
loc_312b1:
	// 6209 
cs=0x17c5;eip=0x00b081; 	T(SHL(ax, 1));	// 105882                  shl     ax, 1 ;~ 17C5:B081
cs=0x17c5;eip=0x00b083; 	T(RCL(dx, 1));	// 105883                  rcl     dx, 1 ;~ 17C5:B083
cs=0x17c5;eip=0x00b085; 	T(DEC(cl));	// 105884                  dec     cl ;~ 17C5:B085
cs=0x17c5;eip=0x00b087; 	J(JZ(loc_312bb));	// 105885                  jz      short loc_312BB ;~ 17C5:B087
cs=0x17c5;eip=0x00b089; 	J(JMP(loc_312b1));	// 105886                  jmp     short loc_312B1 ;~ 17C5:B089
loc_312bb:
	// 6210 
cs=0x17c5;eip=0x00b08b; 	X(PUSH(dx));	// 105890                  push    dx ;~ 17C5:B08B
cs=0x17c5;eip=0x00b08c; 	X(PUSH(ax));	// 105891                  push    ax ;~ 17C5:B08C
cs=0x17c5;eip=0x00b08d; 	T(ax = 0x0E;);	// 105892                  mov     ax, 0Eh ;~ 17C5:B08D
cs=0x17c5;eip=0x00b090; 	X(PUSH(ax));	// 105893                  push    ax ;~ 17C5:B090
cs=0x17c5;eip=0x00b091; 	J(CALL(sub_32c02,0));	// 105894                  call    sub_32C02 ;~ 17C5:B091
cs=0x17c5;eip=0x00b094; 	T(ADD(sp, 0x14));	// 105895                  add     sp, 14h ;~ 17C5:B094
loc_312c7:
	// 6211 
cs=0x17c5;eip=0x00b097; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 105899                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:B097
cs=0x17c5;eip=0x00b09c; 	J(JNZ(loc_312d1));	// 105900                  jnz     short loc_312D1 ;~ 17C5:B09C
cs=0x17c5;eip=0x00b09e; 	J(JMP(loc_31371));	// 105901                  jmp     loc_31371 ;~ 17C5:B09E
loc_312d1:
	// 6212 
cs=0x17c5;eip=0x00b0a1; 	T(CMP(word_520c0, 0x8B));	// 105905                  cmp     ds:word_520C0, 8Bh ;~ 17C5:B0A1
cs=0x17c5;eip=0x00b0a7; 	J(JNZ(loc_312dc));	// 105906                  jnz     short loc_312DC ;~ 17C5:B0A7
cs=0x17c5;eip=0x00b0a9; 	J(JMP(loc_31371));	// 105907                  jmp     loc_31371 ;~ 17C5:B0A9
loc_312dc:
	// 6213 
cs=0x17c5;eip=0x00b0ac; 	T(CMP(word_4e2fe, 0));	// 105911                  cmp     ds:word_4E2FE, 0 ;~ 17C5:B0AC
cs=0x17c5;eip=0x00b0b1; 	J(JNZ(loc_312ed));	// 105912                  jnz     short loc_312ED ;~ 17C5:B0B1
cs=0x17c5;eip=0x00b0b3; 	T(CMP(word_5206c, 0));	// 105913                  cmp     ds:word_5206C, 0 ;~ 17C5:B0B3
cs=0x17c5;eip=0x00b0b8; 	J(JZ(loc_312ed));	// 105914                  jz      short loc_312ED ;~ 17C5:B0B8
cs=0x17c5;eip=0x00b0ba; 	J(JMP(loc_31371));	// 105915                  jmp     loc_31371 ;~ 17C5:B0BA
loc_312ed:
	// 6214 
cs=0x17c5;eip=0x00b0bd; 	T(ax = 2;);	// 105920                  mov     ax, 2 ;~ 17C5:B0BD
cs=0x17c5;eip=0x00b0c0; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x24))));	// 105921                  sub     ax, [bp-24h] ;~ 17C5:B0C0
cs=0x17c5;eip=0x00b0c3; 	X(PUSH(ax));	// 105922                  push    ax ;~ 17C5:B0C3
cs=0x17c5;eip=0x00b0c4; 	X(PUSH(word_4e2fc));	// 105923                  push    ds:word_4E2FC ;~ 17C5:B0C4
cs=0x17c5;eip=0x00b0c8; 	X(PUSH(word_4e2fa));	// 105924                  push    ds:word_4E2FA ;~ 17C5:B0C8
cs=0x17c5;eip=0x00b0cc; 	X(PUSH(word_4e2f8));	// 105925                  push    ds:word_4E2F8 ;~ 17C5:B0CC
cs=0x17c5;eip=0x00b0d0; 	T(ax = word_4e2fe;);	// 105926                  mov     ax, ds:word_4E2FE ;~ 17C5:B0D0
cs=0x17c5;eip=0x00b0d3; 	T(ADD(ax, 0x10));	// 105927                  add     ax, 10h ;~ 17C5:B0D3
cs=0x17c5;eip=0x00b0d6; 	X(PUSH(ax));	// 105928                  push    ax ;~ 17C5:B0D6
cs=0x17c5;eip=0x00b0d7; 	T(SUB(ax, ax));	// 105929                  sub     ax, ax ;~ 17C5:B0D7
cs=0x17c5;eip=0x00b0d9; 	T(dx = 0x100;);	// 105930                  mov     dx, 100h ;~ 17C5:B0D9
cs=0x17c5;eip=0x00b0dc; 	T(SUB(ax, word_51a28));	// 105931                  sub     ax, ds:word_51A28 ;~ 17C5:B0DC
cs=0x17c5;eip=0x00b0e0; 	T(SBB(dx, word_51a2a));	// 105932                  sbb     dx, ds:word_51A2A ;~ 17C5:B0E0
cs=0x17c5;eip=0x00b0e4; 	X(PUSH(dx));	// 105933                  push    dx ;~ 17C5:B0E4
cs=0x17c5;eip=0x00b0e5; 	X(PUSH(ax));	// 105934                  push    ax ;~ 17C5:B0E5
cs=0x17c5;eip=0x00b0e6; 	X(PUSH(word_51a0c));	// 105935                  push    ds:word_51A0C ;~ 17C5:B0E6
cs=0x17c5;eip=0x00b0ea; 	X(PUSH(word_51a0a));	// 105936                  push    ds:word_51A0A ;~ 17C5:B0EA
cs=0x17c5;eip=0x00b0ee; 	T(al = *(db*)(&word_4f42e););	// 105937                  mov     al, byte ptr ds:word_4F42E ;~ 17C5:B0EE
cs=0x17c5;eip=0x00b0f1; 	T(AND(al, 1));	// 105938                  and     al, 1 ;~ 17C5:B0F1
cs=0x17c5;eip=0x00b0f3; 	T(CMP(al, 1));	// 105939                  cmp     al, 1 ;~ 17C5:B0F3
cs=0x17c5;eip=0x00b0f5; 	T(SBB(cx, cx));	// 105940                  sbb     cx, cx ;~ 17C5:B0F5
cs=0x17c5;eip=0x00b0f7; 	T(NEG(cx));	// 105941                  neg     cx ;~ 17C5:B0F7
cs=0x17c5;eip=0x00b0f9; 	T(ADD(cx, 6));	// 105942                  add     cx, 6 ;~ 17C5:B0F9
cs=0x17c5;eip=0x00b0fc; 	X(PUSH(cx));	// 105943                  push    cx ;~ 17C5:B0FC
cs=0x17c5;eip=0x00b0fd; 	J(CALL(sub_32c02,0));	// 105944                  call    sub_32C02 ;~ 17C5:B0FD
cs=0x17c5;eip=0x00b100; 	T(ADD(sp, 0x14));	// 105945                  add     sp, 14h ;~ 17C5:B100
cs=0x17c5;eip=0x00b103; 	T(CMP(word_4e2fe, 0x3E8));	// 105946                  cmp     ds:word_4E2FE, 3E8h ;~ 17C5:B103
cs=0x17c5;eip=0x00b109; 	J(JNC(loc_31371));	// 105947                  jnb     short loc_31371 ;~ 17C5:B109
cs=0x17c5;eip=0x00b10b; 	T(CMP(word_492ec, 0));	// 105948                  cmp     word_492EC, 0 ;~ 17C5:B10B
cs=0x17c5;eip=0x00b110; 	J(JNZ(loc_31371));	// 105949                  jnz     short loc_31371 ;~ 17C5:B110
cs=0x17c5;eip=0x00b112; 	T(ax = 2;);	// 105950                  mov     ax, 2 ;~ 17C5:B112
cs=0x17c5;eip=0x00b115; 	X(PUSH(ax));	// 105951                  push    ax ;~ 17C5:B115
cs=0x17c5;eip=0x00b116; 	T(SUB(ax, ax));	// 105952                  sub     ax, ax ;~ 17C5:B116
cs=0x17c5;eip=0x00b118; 	X(PUSH(ax));	// 105953                  push    ax ;~ 17C5:B118
cs=0x17c5;eip=0x00b119; 	X(PUSH(ax));	// 105954                  push    ax ;~ 17C5:B119
cs=0x17c5;eip=0x00b11a; 	X(PUSH(word_4e2f8));	// 105955                  push    ds:word_4E2F8 ;~ 17C5:B11A
cs=0x17c5;eip=0x00b11e; 	X(PUSH(word_520ee));	// 105956                  push    ds:word_520EE ;~ 17C5:B11E
cs=0x17c5;eip=0x00b122; 	T(dx = 0x100;);	// 105957                  mov     dx, 100h ;~ 17C5:B122
cs=0x17c5;eip=0x00b125; 	T(SUB(ax, word_51a28));	// 105958                  sub     ax, ds:word_51A28 ;~ 17C5:B125
cs=0x17c5;eip=0x00b129; 	T(SBB(dx, word_51a2a));	// 105959                  sbb     dx, ds:word_51A2A ;~ 17C5:B129
cs=0x17c5;eip=0x00b12d; 	X(PUSH(dx));	// 105960                  push    dx ;~ 17C5:B12D
cs=0x17c5;eip=0x00b12e; 	X(PUSH(ax));	// 105961                  push    ax ;~ 17C5:B12E
cs=0x17c5;eip=0x00b12f; 	X(PUSH(word_51a0c));	// 105962                  push    ds:word_51A0C ;~ 17C5:B12F
cs=0x17c5;eip=0x00b133; 	X(PUSH(word_51a0a));	// 105963                  push    ds:word_51A0A ;~ 17C5:B133
cs=0x17c5;eip=0x00b137; 	T(ax = 0x15;);	// 105964                  mov     ax, 15h ;~ 17C5:B137
cs=0x17c5;eip=0x00b13a; 	X(PUSH(ax));	// 105965                  push    ax ;~ 17C5:B13A
cs=0x17c5;eip=0x00b13b; 	J(CALL(sub_32c02,0));	// 105966                  call    sub_32C02 ;~ 17C5:B13B
cs=0x17c5;eip=0x00b13e; 	T(ADD(sp, 0x14));	// 105967                  add     sp, 14h ;~ 17C5:B13E
loc_31371:
	// 6215 
cs=0x17c5;eip=0x00b141; 	X(POP(si));	// 105971                  pop     si ;~ 17C5:B141
cs=0x17c5;eip=0x00b142; 	X(POP(di));	// 105972                  pop     di ;~ 17C5:B142
cs=0x17c5;eip=0x00b143; 	T(sp = bp;);	// 105973                  mov     sp, bp ;~ 17C5:B143
cs=0x17c5;eip=0x00b145; 	X(POP(bp));	// 105974                  pop     bp ;~ 17C5:B145
cs=0x17c5;eip=0x00b146; 	J(RETN(0));	// 105975                  retn ;~ 17C5:B146
loc_31377:
	// 6216 
cs=0x17c5;eip=0x00b147; 	X(PUSH(bp));	// 105979                  push    bp ;~ 17C5:B147
cs=0x17c5;eip=0x00b148; 	T(bp = sp;);	// 105980                  mov     bp, sp ;~ 17C5:B148
cs=0x17c5;eip=0x00b14a; 	T(SUB(sp, 0x34));	// 105981                  sub     sp, 34h ;~ 17C5:B14A
cs=0x17c5;eip=0x00b14d; 	X(PUSH(di));	// 105982                  push    di ;~ 17C5:B14D
cs=0x17c5;eip=0x00b14e; 	X(PUSH(si));	// 105983                  push    si ;~ 17C5:B14E
cs=0x17c5;eip=0x00b14f; 	T(ax = word_4f632;);	// 105984                  mov     ax, ds:word_4F632 ;~ 17C5:B14F
cs=0x17c5;eip=0x00b152; 	X(word_4ef32 = ax;);	// 105985                  mov     ds:word_4EF32, ax ;~ 17C5:B152
cs=0x17c5;eip=0x00b155; 	X(word_4f632 = 0;);	// 105986                  mov     ds:word_4F632, 0 ;~ 17C5:B155
cs=0x17c5;eip=0x00b15b; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), 0));	// 105987                  mov     word ptr [bp-1Eh], 0 ;~ 17C5:B15B
cs=0x17c5;eip=0x00b160; 	J(JMP(loc_31395));	// 105988                  jmp     short loc_31395 ;~ 17C5:B160
loc_31392:
	// 6217 
cs=0x17c5;eip=0x00b162; 	X(INC(*(dw*)(raddr(ss,bp-0x1E))));	// 105992                  inc     word ptr [bp-1Eh] ;~ 17C5:B162
loc_31395:
	// 6218 
cs=0x17c5;eip=0x00b165; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), 0x0C));	// 105995                  cmp     word ptr [bp-1Eh], 0Ch ;~ 17C5:B165
cs=0x17c5;eip=0x00b169; 	J(JGE(loc_313ef));	// 105996                  jge     short loc_313EF ;~ 17C5:B169
cs=0x17c5;eip=0x00b16b; 	T(ax = 0x18;);	// 105997                  mov     ax, 18h ;~ 17C5:B16B
cs=0x17c5;eip=0x00b16e; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x1E))));	// 105998                  imul    word ptr [bp-1Eh] ;~ 17C5:B16E
cs=0x17c5;eip=0x00b171; 	T(si = ax;);	// 105999                  mov     si, ax ;~ 17C5:B171
cs=0x17c5;eip=0x00b173; 	T(CMP(*(dw*)(raddr(ds,si+0x0D22)), 0));	// 106000                  cmp     word ptr [si+0D22h], 0 ;~ 17C5:B173
cs=0x17c5;eip=0x00b178; 	J(JZ(loc_313ed));	// 106001                  jz      short loc_313ED ;~ 17C5:B178
cs=0x17c5;eip=0x00b17a; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D18))));	// 106002                  push    word ptr [si+0D18h] ;~ 17C5:B17A
cs=0x17c5;eip=0x00b17e; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D16))));	// 106003                  push    word ptr [si+0D16h] ;~ 17C5:B17E
cs=0x17c5;eip=0x00b182; 	X(PUSH(*(dw*)(raddr(ds,si+0x0D14))));	// 106004                  push    word ptr [si+0D14h] ;~ 17C5:B182
cs=0x17c5;eip=0x00b186; 	J(CALL(sub_326b8,0));	// 106005                  call    sub_326B8 ;~ 17C5:B186
cs=0x17c5;eip=0x00b189; 	T(ADD(sp, 6));	// 106006                  add     sp, 6 ;~ 17C5:B189
cs=0x17c5;eip=0x00b18c; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 106007                  cmp     word_4AA98, 0FFFFh ;~ 17C5:B18C
cs=0x17c5;eip=0x00b191; 	J(JZ(loc_313ed));	// 106008                  jz      short loc_313ED ;~ 17C5:B191
cs=0x17c5;eip=0x00b193; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), 8));	// 106009                  cmp     word ptr [bp-1Eh], 8 ;~ 17C5:B193
cs=0x17c5;eip=0x00b197; 	J(JGE(loc_313ce));	// 106010                  jge     short loc_313CE ;~ 17C5:B197
cs=0x17c5;eip=0x00b199; 	T(ax = 0x0E;);	// 106011                  mov     ax, 0Eh ;~ 17C5:B199
cs=0x17c5;eip=0x00b19c; 	J(JMP(loc_313d1));	// 106012                  jmp     short loc_313D1 ;~ 17C5:B19C
loc_313ce:
	// 6219 
cs=0x17c5;eip=0x00b19e; 	T(ax = 0x0A;);	// 106016                  mov     ax, 0Ah ;~ 17C5:B19E
loc_313d1:
	// 6220 
cs=0x17c5;eip=0x00b1a1; 	X(PUSH(ax));	// 106019                  push    ax ;~ 17C5:B1A1
cs=0x17c5;eip=0x00b1a2; 	J(CALL(sub_30074,0));	// 106020                  call    sub_30074 ;~ 17C5:B1A2
cs=0x17c5;eip=0x00b1a5; 	T(ADD(sp, 2));	// 106021                  add     sp, 2 ;~ 17C5:B1A5
cs=0x17c5;eip=0x00b1a8; 	T(SUB(ax, ax));	// 106022                  sub     ax, ax ;~ 17C5:B1A8
cs=0x17c5;eip=0x00b1aa; 	X(PUSH(ax));	// 106023                  push    ax ;~ 17C5:B1AA
cs=0x17c5;eip=0x00b1ab; 	T(ax = 6;);	// 106024                  mov     ax, 6 ;~ 17C5:B1AB
cs=0x17c5;eip=0x00b1ae; 	X(PUSH(ax));	// 106025                  push    ax ;~ 17C5:B1AE
cs=0x17c5;eip=0x00b1af; 	X(PUSH(*(word_4ac7c)));	// 106026                  push    word_4AC7C ;~ 17C5:B1AF
cs=0x17c5;eip=0x00b1b3; 	X(PUSH(*(word_4aa98)));	// 106027                  push    word_4AA98 ;~ 17C5:B1B3
cs=0x17c5;eip=0x00b1b7; 	J(CALL(sub_323e9,0));	// 106028                  call    sub_323E9 ;~ 17C5:B1B7
cs=0x17c5;eip=0x00b1ba; 	T(ADD(sp, 8));	// 106029                  add     sp, 8 ;~ 17C5:B1BA
loc_313ed:
	// 6221 
cs=0x17c5;eip=0x00b1bd; 	J(JMP(loc_31392));	// 106033                  jmp     short loc_31392 ;~ 17C5:B1BD
loc_313ef:
	// 6222 
cs=0x17c5;eip=0x00b1bf; 	T(ax = word_492f4;);	// 106037                  mov     ax, word_492F4 ;~ 17C5:B1BF
cs=0x17c5;eip=0x00b1c2; 	T(SHL(ax, 1));	// 106038                  shl     ax, 1 ;~ 17C5:B1C2
cs=0x17c5;eip=0x00b1c4; 	T(SHL(ax, 1));	// 106039                  shl     ax, 1 ;~ 17C5:B1C4
cs=0x17c5;eip=0x00b1c6; 	T(ADD(ax, 8));	// 106040                  add     ax, 8 ;~ 17C5:B1C6
cs=0x17c5;eip=0x00b1c9; 	X(PUSH(ax));	// 106041                  push    ax ;~ 17C5:B1C9
cs=0x17c5;eip=0x00b1ca; 	J(CALL(sub_2b787,0));	// 106042                  call    sub_2B787 ;~ 17C5:B1CA
cs=0x17c5;eip=0x00b1cd; 	T(ADD(sp, 2));	// 106043                  add     sp, 2 ;~ 17C5:B1CD
cs=0x17c5;eip=0x00b1d0; 	T(cx = ax;);	// 106044                  mov     cx, ax ;~ 17C5:B1D0
cs=0x17c5;eip=0x00b1d2; 	T(ax = 0x200;);	// 106045                  mov     ax, 200h ;~ 17C5:B1D2
cs=0x17c5;eip=0x00b1d5; 	T(CWD);	// 106046                  cwd ;~ 17C5:B1D5
cs=0x17c5;eip=0x00b1d6; 	T(IDIV2(cx));	// 106047                  idiv    cx ;~ 17C5:B1D6
cs=0x17c5;eip=0x00b1d8; 	X(MOV(*(dw*)(raddr(ss,bp-0x2E)), ax));	// 106048                  mov     [bp-2Eh], ax ;~ 17C5:B1D8
cs=0x17c5;eip=0x00b1db; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), 0));	// 106049                  mov     word ptr [bp-1Eh], 0 ;~ 17C5:B1DB
cs=0x17c5;eip=0x00b1e0; 	J(JMP(loc_31415));	// 106050                  jmp     short loc_31415 ;~ 17C5:B1E0
loc_31412:
	// 6223 
cs=0x17c5;eip=0x00b1e2; 	X(INC(*(dw*)(raddr(ss,bp-0x1E))));	// 106054                  inc     word ptr [bp-1Eh] ;~ 17C5:B1E2
loc_31415:
	// 6224 
cs=0x17c5;eip=0x00b1e5; 	T(ax = word_511d4;);	// 106057                  mov     ax, ds:word_511D4 ;~ 17C5:B1E5
cs=0x17c5;eip=0x00b1e8; 	T(ADD(ax, 4));	// 106058                  add     ax, 4 ;~ 17C5:B1E8
cs=0x17c5;eip=0x00b1eb; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 106059                  cmp     [bp-1Eh], ax ;~ 17C5:B1EB
cs=0x17c5;eip=0x00b1ee; 	J(JL(loc_31423));	// 106060                  jl      short loc_31423 ;~ 17C5:B1EE
cs=0x17c5;eip=0x00b1f0; 	J(JMP(loc_317ee));	// 106061                  jmp     loc_317EE ;~ 17C5:B1F0
loc_31423:
	// 6225 
cs=0x17c5;eip=0x00b1f3; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x1E))));	// 106065                  mov     ax, [bp-1Eh] ;~ 17C5:B1F3
cs=0x17c5;eip=0x00b1f6; 	T(cx = ax;);	// 106066                  mov     cx, ax ;~ 17C5:B1F6
cs=0x17c5;eip=0x00b1f8; 	T(SHL(ax, 1));	// 106067                  shl     ax, 1 ;~ 17C5:B1F8
cs=0x17c5;eip=0x00b1fa; 	T(ADD(ax, cx));	// 106068                  add     ax, cx ;~ 17C5:B1FA
cs=0x17c5;eip=0x00b1fc; 	T(SHL(ax, 1));	// 106069                  shl     ax, 1 ;~ 17C5:B1FC
cs=0x17c5;eip=0x00b1fe; 	T(SHL(ax, 1));	// 106070                  shl     ax, 1 ;~ 17C5:B1FE
cs=0x17c5;eip=0x00b200; 	T(si = ax;);	// 106071                  mov     si, ax ;~ 17C5:B200
cs=0x17c5;eip=0x00b202; 	T(CMP(*(dw*)(raddr(ds,si-0x6304)), 0));	// 106072                  cmp     word ptr [si-6304h], 0 ;~ 17C5:B202
cs=0x17c5;eip=0x00b207; 	J(JNZ(loc_3143c));	// 106073                  jnz     short loc_3143C ;~ 17C5:B207
cs=0x17c5;eip=0x00b209; 	J(JMP(loc_317eb));	// 106074                  jmp     loc_317EB ;~ 17C5:B209
loc_3143c:
	// 6226 
cs=0x17c5;eip=0x00b20c; 	X(PUSH(*(dw*)(raddr(ds,si-0x6300))));	// 106078                  push    word ptr [si-6300h] ;~ 17C5:B20C
cs=0x17c5;eip=0x00b210; 	X(PUSH(*(dw*)(raddr(ds,si-0x6302))));	// 106079                  push    word ptr [si-6302h] ;~ 17C5:B210
cs=0x17c5;eip=0x00b214; 	X(PUSH(*(dw*)(raddr(ds,si-0x6304))));	// 106080                  push    word ptr [si-6304h] ;~ 17C5:B214
cs=0x17c5;eip=0x00b218; 	J(CALL(sub_326b8,0));	// 106081                  call    sub_326B8 ;~ 17C5:B218
cs=0x17c5;eip=0x00b21b; 	T(ADD(sp, 6));	// 106082                  add     sp, 6 ;~ 17C5:B21B
cs=0x17c5;eip=0x00b21e; 	T(ax = *(word_4aa98););	// 106083                  mov     ax, word_4AA98 ;~ 17C5:B21E
cs=0x17c5;eip=0x00b221; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), ax));	// 106084                  mov     [bp-2Ch], ax ;~ 17C5:B221
cs=0x17c5;eip=0x00b224; 	T(ax = *(word_4ac7c););	// 106085                  mov     ax, word_4AC7C ;~ 17C5:B224
cs=0x17c5;eip=0x00b227; 	X(MOV(*(dw*)(raddr(ss,bp-0x32)), ax));	// 106086                  mov     [bp-32h], ax ;~ 17C5:B227
cs=0x17c5;eip=0x00b22a; 	T(ax = word_52246;);	// 106087                  mov     ax, ds:word_52246 ;~ 17C5:B22A
cs=0x17c5;eip=0x00b22d; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 106088                  mov     [bp-4], ax ;~ 17C5:B22D
cs=0x17c5;eip=0x00b230; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x1E))));	// 106089                  mov     ax, [bp-1Eh] ;~ 17C5:B230
cs=0x17c5;eip=0x00b233; 	T(cx = ax;);	// 106090                  mov     cx, ax ;~ 17C5:B233
cs=0x17c5;eip=0x00b235; 	T(SHL(ax, 1));	// 106091                  shl     ax, 1 ;~ 17C5:B235
cs=0x17c5;eip=0x00b237; 	T(ADD(ax, cx));	// 106092                  add     ax, cx ;~ 17C5:B237
cs=0x17c5;eip=0x00b239; 	T(SHL(ax, 1));	// 106093                  shl     ax, 1 ;~ 17C5:B239
cs=0x17c5;eip=0x00b23b; 	T(SHL(ax, 1));	// 106094                  shl     ax, 1 ;~ 17C5:B23B
cs=0x17c5;eip=0x00b23d; 	T(si = ax;);	// 106095                  mov     si, ax ;~ 17C5:B23D
cs=0x17c5;eip=0x00b23f; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FA))));	// 106096                  mov     ax, [si-62FAh] ;~ 17C5:B23F
cs=0x17c5;eip=0x00b243; 	T(SAR(ax, 1));	// 106097                  sar     ax, 1 ;~ 17C5:B243
cs=0x17c5;eip=0x00b245; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x6300))));	// 106098                  add     ax, [si-6300h] ;~ 17C5:B245
cs=0x17c5;eip=0x00b249; 	X(PUSH(ax));	// 106099                  push    ax ;~ 17C5:B249
cs=0x17c5;eip=0x00b24a; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FC))));	// 106100                  mov     ax, [si-62FCh] ;~ 17C5:B24A
cs=0x17c5;eip=0x00b24e; 	T(SAR(ax, 1));	// 106101                  sar     ax, 1 ;~ 17C5:B24E
cs=0x17c5;eip=0x00b250; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x6302))));	// 106102                  add     ax, [si-6302h] ;~ 17C5:B250
cs=0x17c5;eip=0x00b254; 	X(PUSH(ax));	// 106103                  push    ax ;~ 17C5:B254
cs=0x17c5;eip=0x00b255; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x62FE))));	// 106104                  mov     ax, [si-62FEh] ;~ 17C5:B255
cs=0x17c5;eip=0x00b259; 	T(SAR(ax, 1));	// 106105                  sar     ax, 1 ;~ 17C5:B259
cs=0x17c5;eip=0x00b25b; 	T(ADD(ax, *(dw*)(raddr(ds,si-0x6304))));	// 106106                  add     ax, [si-6304h] ;~ 17C5:B25B
cs=0x17c5;eip=0x00b25f; 	X(PUSH(ax));	// 106107                  push    ax ;~ 17C5:B25F
cs=0x17c5;eip=0x00b260; 	J(CALL(sub_326b8,0));	// 106108                  call    sub_326B8 ;~ 17C5:B260
cs=0x17c5;eip=0x00b263; 	T(ADD(sp, 6));	// 106109                  add     sp, 6 ;~ 17C5:B263
cs=0x17c5;eip=0x00b266; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 106110                  cmp     word_4AA98, 0FFFFh ;~ 17C5:B266
cs=0x17c5;eip=0x00b26b; 	J(JNZ(loc_314a0));	// 106111                  jnz     short loc_314A0 ;~ 17C5:B26B
cs=0x17c5;eip=0x00b26d; 	J(JMP(loc_317eb));	// 106112                  jmp     loc_317EB ;~ 17C5:B26D
loc_314a0:
	// 6227 
cs=0x17c5;eip=0x00b270; 	T(CMP(*(dw*)(raddr(ss,bp-0x2C)), 0x0FFFF));	// 106116                  cmp     word ptr [bp-2Ch], 0FFFFh ;~ 17C5:B270
cs=0x17c5;eip=0x00b274; 	J(JNZ(loc_314a9));	// 106117                  jnz     short loc_314A9 ;~ 17C5:B274
cs=0x17c5;eip=0x00b276; 	J(JMP(loc_317eb));	// 106118                  jmp     loc_317EB ;~ 17C5:B276
loc_314a9:
	// 6228 
cs=0x17c5;eip=0x00b279; 	T(ax = word_49918;);	// 106122                  mov     ax, word_49918 ;~ 17C5:B279
cs=0x17c5;eip=0x00b27c; 	T(SAR(ax, 1));	// 106123                  sar     ax, 1 ;~ 17C5:B27C
cs=0x17c5;eip=0x00b27e; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x1E))));	// 106124                  sub     ax, [bp-1Eh] ;~ 17C5:B27E
cs=0x17c5;eip=0x00b281; 	T(AND(ax, 7));	// 106125                  and     ax, 7 ;~ 17C5:B281
cs=0x17c5;eip=0x00b284; 	X(MOV(*(dw*)(raddr(ss,bp-0x2A)), ax));	// 106126                  mov     [bp-2Ah], ax ;~ 17C5:B284
cs=0x17c5;eip=0x00b287; 	T(ax = word_511d4;);	// 106127                  mov     ax, ds:word_511D4 ;~ 17C5:B287
cs=0x17c5;eip=0x00b28a; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 106128                  cmp     [bp-1Eh], ax ;~ 17C5:B28A
cs=0x17c5;eip=0x00b28d; 	J(JGE(loc_314c4));	// 106129                  jge     short loc_314C4 ;~ 17C5:B28D
cs=0x17c5;eip=0x00b28f; 	T(ax = 0x0D;);	// 106130                  mov     ax, 0Dh ;~ 17C5:B28F
cs=0x17c5;eip=0x00b292; 	J(JMP(loc_314c7));	// 106131                  jmp     short loc_314C7 ;~ 17C5:B292
loc_314c4:
	// 6229 
cs=0x17c5;eip=0x00b294; 	T(ax = 0x0C;);	// 106135                  mov     ax, 0Ch ;~ 17C5:B294
loc_314c7:
	// 6230 
cs=0x17c5;eip=0x00b297; 	X(PUSH(ax));	// 106138                  push    ax ;~ 17C5:B297
cs=0x17c5;eip=0x00b298; 	J(CALL(sub_30074,0));	// 106139                  call    sub_30074 ;~ 17C5:B298
cs=0x17c5;eip=0x00b29b; 	T(ADD(sp, 2));	// 106140                  add     sp, 2 ;~ 17C5:B29B
cs=0x17c5;eip=0x00b29e; 	X(PUSH(*(dw*)(raddr(ss,bp-0x32))));	// 106141                  push    word ptr [bp-32h] ;~ 17C5:B29E
cs=0x17c5;eip=0x00b2a1; 	X(PUSH(*(dw*)(raddr(ss,bp-0x2C))));	// 106142                  push    word ptr [bp-2Ch] ;~ 17C5:B2A1
cs=0x17c5;eip=0x00b2a4; 	X(PUSH(*(word_4ac7c)));	// 106143                  push    word_4AC7C ;~ 17C5:B2A4
cs=0x17c5;eip=0x00b2a8; 	X(PUSH(*(word_4aa98)));	// 106144                  push    word_4AA98 ;~ 17C5:B2A8
cs=0x17c5;eip=0x00b2ac; 	J(CALL(sub_2fe3c,0));	// 106145                  call    sub_2FE3C ;~ 17C5:B2AC
cs=0x17c5;eip=0x00b2af; 	T(ADD(sp, 8));	// 106147                  add     sp, 8 ;~ 17C5:B2AF
cs=0x17c5;eip=0x00b2b2; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), 0));	// 106148                  mov     word ptr [bp-0Eh], 0 ;~ 17C5:B2B2
cs=0x17c5;eip=0x00b2b7; 	T(ax = word_511d4;);	// 106149                  mov     ax, ds:word_511D4 ;~ 17C5:B2B7
cs=0x17c5;eip=0x00b2ba; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 106150                  cmp     [bp-1Eh], ax ;~ 17C5:B2BA
cs=0x17c5;eip=0x00b2bd; 	J(JL(loc_314f2));	// 106151                  jl      short loc_314F2 ;~ 17C5:B2BD
cs=0x17c5;eip=0x00b2bf; 	J(JMP(loc_31610));	// 106152                  jmp     loc_31610 ;~ 17C5:B2BF
loc_314f2:
	// 6231 
cs=0x17c5;eip=0x00b2c2; 	X(MOV(*(dw*)(raddr(ss,bp-0x20)), 0));	// 106156                  mov     word ptr [bp-20h], 0 ;~ 17C5:B2C2
cs=0x17c5;eip=0x00b2c7; 	J(JMP(loc_314fc));	// 106157                  jmp     short loc_314FC ;~ 17C5:B2C7
loc_314f9:
	// 6232 
cs=0x17c5;eip=0x00b2c9; 	X(INC(*(dw*)(raddr(ss,bp-0x20))));	// 106161                  inc     word ptr [bp-20h] ;~ 17C5:B2C9
loc_314fc:
	// 6233 
cs=0x17c5;eip=0x00b2cc; 	T(ax = word_52276;);	// 106164                  mov     ax, ds:word_52276 ;~ 17C5:B2CC
cs=0x17c5;eip=0x00b2cf; 	T(CMP(*(dw*)(raddr(ss,bp-0x20)), ax));	// 106165                  cmp     [bp-20h], ax ;~ 17C5:B2CF
cs=0x17c5;eip=0x00b2d2; 	J(JL(loc_31507));	// 106166                  jl      short loc_31507 ;~ 17C5:B2D2
cs=0x17c5;eip=0x00b2d4; 	J(JMP(loc_3160d));	// 106167                  jmp     loc_3160D ;~ 17C5:B2D4
loc_31507:
	// 6234 
cs=0x17c5;eip=0x00b2d7; 	T(ax = 0x24;);	// 106171                  mov     ax, 24h ; '$' ;~ 17C5:B2D7
cs=0x17c5;eip=0x00b2da; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 106172                  imul    word ptr [bp-20h] ;~ 17C5:B2DA
cs=0x17c5;eip=0x00b2dd; 	T(si = ax;);	// 106173                  mov     si, ax ;~ 17C5:B2DD
cs=0x17c5;eip=0x00b2df; 	T(MOV(al, *(raddr(ds,si-0x7696))));	// 106174                  mov     al, [si-7696h] ;~ 17C5:B2DF
cs=0x17c5;eip=0x00b2e3; 	T(AND(al, 0x22));	// 106175                  and     al, 22h ;~ 17C5:B2E3
cs=0x17c5;eip=0x00b2e5; 	T(CMP(al, 2));	// 106176                  cmp     al, 2 ;~ 17C5:B2E5
cs=0x17c5;eip=0x00b2e7; 	J(JZ(loc_3151c));	// 106177                  jz      short loc_3151C ;~ 17C5:B2E7
cs=0x17c5;eip=0x00b2e9; 	J(JMP(loc_3160a));	// 106178                  jmp     loc_3160A ;~ 17C5:B2E9
loc_3151c:
	// 6235 
cs=0x17c5;eip=0x00b2ec; 	T(ax = 0x24;);	// 106182                  mov     ax, 24h ; '$' ;~ 17C5:B2EC
cs=0x17c5;eip=0x00b2ef; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 106183                  imul    word ptr [bp-20h] ;~ 17C5:B2EF
cs=0x17c5;eip=0x00b2f2; 	T(bx = ax;);	// 106184                  mov     bx, ax ;~ 17C5:B2F2
cs=0x17c5;eip=0x00b2f4; 	T(MOV(di, *(dw*)(raddr(ss,bp-0x1E))));	// 106185                  mov     di, [bp-1Eh] ;~ 17C5:B2F4
cs=0x17c5;eip=0x00b2f7; 	T(ax = di;);	// 106186                  mov     ax, di ;~ 17C5:B2F7
cs=0x17c5;eip=0x00b2f9; 	T(SHL(di, 1));	// 106187                  shl     di, 1 ;~ 17C5:B2F9
cs=0x17c5;eip=0x00b2fb; 	T(ADD(di, ax));	// 106188                  add     di, ax ;~ 17C5:B2FB
cs=0x17c5;eip=0x00b2fd; 	T(SHL(di, 1));	// 106189                  shl     di, 1 ;~ 17C5:B2FD
cs=0x17c5;eip=0x00b2ff; 	T(SHL(di, 1));	// 106190                  shl     di, 1 ;~ 17C5:B2FF
cs=0x17c5;eip=0x00b301; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x6302))));	// 106191                  mov     ax, [di-6302h] ;~ 17C5:B301
cs=0x17c5;eip=0x00b305; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x76AA))));	// 106192                  sub     ax, [bx-76AAh] ;~ 17C5:B305
cs=0x17c5;eip=0x00b309; 	X(PUSH(ax));	// 106193                  push    ax ;~ 17C5:B309
cs=0x17c5;eip=0x00b30a; 	J(CALL(sub_34dc0,0));	// 106194                  call    sub_34DC0 ;~ 17C5:B30A
cs=0x17c5;eip=0x00b30d; 	T(ADD(sp, 2));	// 106195                  add     sp, 2 ;~ 17C5:B30D
cs=0x17c5;eip=0x00b310; 	T(cx = ax;);	// 106196                  mov     cx, ax ;~ 17C5:B310
cs=0x17c5;eip=0x00b312; 	T(ax = 0x24;);	// 106197                  mov     ax, 24h ; '$' ;~ 17C5:B312
cs=0x17c5;eip=0x00b315; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 106198                  imul    word ptr [bp-20h] ;~ 17C5:B315
cs=0x17c5;eip=0x00b318; 	T(bx = ax;);	// 106199                  mov     bx, ax ;~ 17C5:B318
cs=0x17c5;eip=0x00b31a; 	T(MOV(di, *(dw*)(raddr(ss,bp-0x1E))));	// 106200                  mov     di, [bp-1Eh] ;~ 17C5:B31A
cs=0x17c5;eip=0x00b31d; 	T(ax = di;);	// 106201                  mov     ax, di ;~ 17C5:B31D
cs=0x17c5;eip=0x00b31f; 	T(SHL(di, 1));	// 106202                  shl     di, 1 ;~ 17C5:B31F
cs=0x17c5;eip=0x00b321; 	T(ADD(di, ax));	// 106203                  add     di, ax ;~ 17C5:B321
cs=0x17c5;eip=0x00b323; 	T(SHL(di, 1));	// 106204                  shl     di, 1 ;~ 17C5:B323
cs=0x17c5;eip=0x00b325; 	T(SHL(di, 1));	// 106205                  shl     di, 1 ;~ 17C5:B325
cs=0x17c5;eip=0x00b327; 	T(MOV(ax, *(dw*)(raddr(ds,di-0x6304))));	// 106206                  mov     ax, [di-6304h] ;~ 17C5:B327
cs=0x17c5;eip=0x00b32b; 	T(SUB(ax, *(dw*)(raddr(ds,bx-0x76AC))));	// 106207                  sub     ax, [bx-76ACh] ;~ 17C5:B32B
cs=0x17c5;eip=0x00b32f; 	X(PUSH(ax));	// 106208                  push    ax ;~ 17C5:B32F
cs=0x17c5;eip=0x00b330; 	T(di = cx;);	// 106209                  mov     di, cx ;~ 17C5:B330
cs=0x17c5;eip=0x00b332; 	J(CALL(sub_34dc0,0));	// 106210                  call    sub_34DC0 ;~ 17C5:B332
cs=0x17c5;eip=0x00b335; 	T(ADD(sp, 2));	// 106211                  add     sp, 2 ;~ 17C5:B335
cs=0x17c5;eip=0x00b338; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x1E))));	// 106212                  mov     bx, [bp-1Eh] ;~ 17C5:B338
cs=0x17c5;eip=0x00b33b; 	T(cx = bx;);	// 106213                  mov     cx, bx ;~ 17C5:B33B
cs=0x17c5;eip=0x00b33d; 	T(SHL(bx, 1));	// 106214                  shl     bx, 1 ;~ 17C5:B33D
cs=0x17c5;eip=0x00b33f; 	T(ADD(bx, cx));	// 106215                  add     bx, cx ;~ 17C5:B33F
cs=0x17c5;eip=0x00b341; 	T(SHL(bx, 1));	// 106216                  shl     bx, 1 ;~ 17C5:B341
cs=0x17c5;eip=0x00b343; 	T(SHL(bx, 1));	// 106217                  shl     bx, 1 ;~ 17C5:B343
cs=0x17c5;eip=0x00b345; 	T(MOV(cx, *(dw*)(raddr(ds,bx-0x6300))));	// 106218                  mov     cx, [bx-6300h] ;~ 17C5:B345
cs=0x17c5;eip=0x00b349; 	T(SUB(cx, *(dw*)(raddr(ds,si-0x76A8))));	// 106219                  sub     cx, [si-76A8h] ;~ 17C5:B349
cs=0x17c5;eip=0x00b34d; 	X(PUSH(cx));	// 106220                  push    cx ;~ 17C5:B34D
cs=0x17c5;eip=0x00b34e; 	X(MOV(*(dw*)(raddr(ss,bp-0x34)), ax));	// 106221                  mov     [bp-34h], ax ;~ 17C5:B34E
cs=0x17c5;eip=0x00b351; 	J(CALL(sub_34dc0,0));	// 106222                  call    sub_34DC0 ;~ 17C5:B351
cs=0x17c5;eip=0x00b354; 	T(ADD(sp, 2));	// 106223                  add     sp, 2 ;~ 17C5:B354
cs=0x17c5;eip=0x00b357; 	T(cl = 5;);	// 106224                  mov     cl, 5 ;~ 17C5:B357
cs=0x17c5;eip=0x00b359; 	T(SAR(ax, cl));	// 106225                  sar     ax, cl ;~ 17C5:B359
cs=0x17c5;eip=0x00b35b; 	T(ADD(ax, *(dw*)(raddr(ss,bp-0x34))));	// 106226                  add     ax, [bp-34h] ;~ 17C5:B35B
cs=0x17c5;eip=0x00b35e; 	T(ADD(ax, di));	// 106227                  add     ax, di ;~ 17C5:B35E
cs=0x17c5;eip=0x00b360; 	X(MOV(*(dw*)(raddr(ss,bp-0x2A)), ax));	// 106228                  mov     [bp-2Ah], ax ;~ 17C5:B360
cs=0x17c5;eip=0x00b363; 	X(PUSH(ax));	// 106229                  push    ax ;~ 17C5:B363
cs=0x17c5;eip=0x00b364; 	J(CALL(sub_34dc0,0));	// 106230                  call    sub_34DC0 ;~ 17C5:B364
cs=0x17c5;eip=0x00b367; 	T(ADD(sp, 2));	// 106231                  add     sp, 2 ;~ 17C5:B367
cs=0x17c5;eip=0x00b36a; 	X(MOV(*(dw*)(raddr(ss,bp-0x2A)), ax));	// 106232                  mov     [bp-2Ah], ax ;~ 17C5:B36A
cs=0x17c5;eip=0x00b36d; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x2E))));	// 106233                  mov     ax, [bp-2Eh] ;~ 17C5:B36D
cs=0x17c5;eip=0x00b370; 	T(CWD);	// 106234                  cwd ;~ 17C5:B370
cs=0x17c5;eip=0x00b371; 	T(cx = word_492e8;);	// 106235                  mov     cx, word_492E8 ;~ 17C5:B371
cs=0x17c5;eip=0x00b375; 	T(INC(cx));	// 106236                  inc     cx ;~ 17C5:B375
cs=0x17c5;eip=0x00b376; 	T(IDIV2(cx));	// 106237                  idiv    cx ;~ 17C5:B376
cs=0x17c5;eip=0x00b378; 	T(si = ax;);	// 106238                  mov     si, ax ;~ 17C5:B378
cs=0x17c5;eip=0x00b37a; 	T(CMP(*(dw*)(raddr(ss,bp-0x2A)), si));	// 106239                  cmp     [bp-2Ah], si ;~ 17C5:B37A
cs=0x17c5;eip=0x00b37d; 	J(JGE(loc_3160a));	// 106240                  jge     short loc_3160A ;~ 17C5:B37D
cs=0x17c5;eip=0x00b37f; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), 1));	// 106241                  mov     word ptr [bp-0Eh], 1 ;~ 17C5:B37F
cs=0x17c5;eip=0x00b384; 	T(ax = 0x24;);	// 106242                  mov     ax, 24h ; '$' ;~ 17C5:B384
cs=0x17c5;eip=0x00b387; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x20))));	// 106243                  imul    word ptr [bp-20h] ;~ 17C5:B387
cs=0x17c5;eip=0x00b38a; 	T(bx = ax;);	// 106244                  mov     bx, ax ;~ 17C5:B38A
cs=0x17c5;eip=0x00b38c; 	X(OR(*(raddr(ds,bx-0x7696)), 0x10));	// 106245                  or      byte ptr [bx-7696h], 10h ;~ 17C5:B38C
cs=0x17c5;eip=0x00b391; 	X(word_4f836 = 1;);	// 106246                  mov     ds:word_4F836, 1 ;~ 17C5:B391
cs=0x17c5;eip=0x00b397; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x2A))));	// 106247                  mov     ax, [bp-2Ah] ;~ 17C5:B397
cs=0x17c5;eip=0x00b39a; 	T(SHL(ax, 1));	// 106248                  shl     ax, 1 ;~ 17C5:B39A
cs=0x17c5;eip=0x00b39c; 	T(CMP(ax, si));	// 106249                  cmp     ax, si ;~ 17C5:B39C
cs=0x17c5;eip=0x00b39e; 	J(JGE(loc_3160a));	// 106250                  jge     short loc_3160A ;~ 17C5:B39E
cs=0x17c5;eip=0x00b3a0; 	X(PUSH(*(dw*)(raddr(ss,bp-0x20))));	// 106251                  push    word ptr [bp-20h] ;~ 17C5:B3A0
cs=0x17c5;eip=0x00b3a3; 	J(CALL(sub_2e928,0));	// 106252                  call    sub_2E928 ;~ 17C5:B3A3
cs=0x17c5;eip=0x00b3a6; 	T(ADD(sp, 2));	// 106254                  add     sp, 2 ;~ 17C5:B3A6
cs=0x17c5;eip=0x00b3a9; 	T(ax = 0x5BB2;);	// 106255                  mov     ax, 5BB2h ;~ 17C5:B3A9
cs=0x17c5;eip=0x00b3ac; 	X(PUSH(ax));	// 106256                  push    ax ;~ 17C5:B3AC
cs=0x17c5;eip=0x00b3ad; 	T(ax = 0x66C4;);	// 106257                  mov     ax, 66C4h ;~ 17C5:B3AD
cs=0x17c5;eip=0x00b3b0; 	X(PUSH(ax));	// 106258                  push    ax ;~ 17C5:B3B0
cs=0x17c5;eip=0x00b3b1; 	J(CALL(sub_34bdc,0));	// 106259                  call    sub_34BDC ;~ 17C5:B3B1
cs=0x17c5;eip=0x00b3b4; 	T(ADD(sp, 4));	// 106260                  add     sp, 4 ;~ 17C5:B3B4
cs=0x17c5;eip=0x00b3b7; 	T(ax = 0x66C4;);	// 106261                  mov     ax, 66C4h ;~ 17C5:B3B7
cs=0x17c5;eip=0x00b3ba; 	X(PUSH(ax));	// 106262                  push    ax ;~ 17C5:B3BA
cs=0x17c5;eip=0x00b3bb; 	J(CALL(sub_30414,0));	// 106263                  call    sub_30414 ;~ 17C5:B3BB
cs=0x17c5;eip=0x00b3be; 	T(ADD(sp, 2));	// 106264                  add     sp, 2 ;~ 17C5:B3BE
cs=0x17c5;eip=0x00b3c1; 	X(word_4f836 = 8;);	// 106265                  mov     ds:word_4F836, 8 ;~ 17C5:B3C1
cs=0x17c5;eip=0x00b3c7; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x1E))));	// 106266                  mov     bx, [bp-1Eh] ;~ 17C5:B3C7
cs=0x17c5;eip=0x00b3ca; 	T(ax = bx;);	// 106267                  mov     ax, bx ;~ 17C5:B3CA
cs=0x17c5;eip=0x00b3cc; 	T(SHL(bx, 1));	// 106268                  shl     bx, 1 ;~ 17C5:B3CC
cs=0x17c5;eip=0x00b3ce; 	T(ADD(bx, ax));	// 106269                  add     bx, ax ;~ 17C5:B3CE
cs=0x17c5;eip=0x00b3d0; 	T(SHL(bx, 1));	// 106270                  shl     bx, 1 ;~ 17C5:B3D0
cs=0x17c5;eip=0x00b3d2; 	T(SHL(bx, 1));	// 106271                  shl     bx, 1 ;~ 17C5:B3D2
cs=0x17c5;eip=0x00b3d4; 	X(MOV(*(dw*)(raddr(ds,bx-0x6304)), 0));	// 106272                  mov     word ptr [bx-6304h], 0 ;~ 17C5:B3D4
loc_3160a:
	// 6236 
cs=0x17c5;eip=0x00b3da; 	J(JMP(loc_314f9));	// 106276                  jmp     loc_314F9 ;~ 17C5:B3DA
loc_3160d:
	// 6237 
cs=0x17c5;eip=0x00b3dd; 	J(JMP(loc_316a6));	// 106280                  jmp     loc_316A6 ;~ 17C5:B3DD
loc_31610:
	// 6238 
cs=0x17c5;eip=0x00b3e0; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x1E))));	// 106284                  mov     bx, [bp-1Eh] ;~ 17C5:B3E0
cs=0x17c5;eip=0x00b3e3; 	T(ax = bx;);	// 106285                  mov     ax, bx ;~ 17C5:B3E3
cs=0x17c5;eip=0x00b3e5; 	T(SHL(bx, 1));	// 106286                  shl     bx, 1 ;~ 17C5:B3E5
cs=0x17c5;eip=0x00b3e7; 	T(ADD(bx, ax));	// 106287                  add     bx, ax ;~ 17C5:B3E7
cs=0x17c5;eip=0x00b3e9; 	T(SHL(bx, 1));	// 106288                  shl     bx, 1 ;~ 17C5:B3E9
cs=0x17c5;eip=0x00b3eb; 	T(SHL(bx, 1));	// 106289                  shl     bx, 1 ;~ 17C5:B3EB
cs=0x17c5;eip=0x00b3ed; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x6302))));	// 106290                  mov     ax, [bx-6302h] ;~ 17C5:B3ED
cs=0x17c5;eip=0x00b3f1; 	T(SUB(ax, word_52100));	// 106291                  sub     ax, ds:word_52100 ;~ 17C5:B3F1
cs=0x17c5;eip=0x00b3f5; 	X(PUSH(ax));	// 106292                  push    ax ;~ 17C5:B3F5
cs=0x17c5;eip=0x00b3f6; 	J(CALL(sub_34dc0,0));	// 106293                  call    sub_34DC0 ;~ 17C5:B3F6
cs=0x17c5;eip=0x00b3f9; 	T(ADD(sp, 2));	// 106294                  add     sp, 2 ;~ 17C5:B3F9
cs=0x17c5;eip=0x00b3fc; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x1E))));	// 106295                  mov     bx, [bp-1Eh] ;~ 17C5:B3FC
cs=0x17c5;eip=0x00b3ff; 	T(cx = bx;);	// 106296                  mov     cx, bx ;~ 17C5:B3FF
cs=0x17c5;eip=0x00b401; 	T(SHL(bx, 1));	// 106297                  shl     bx, 1 ;~ 17C5:B401
cs=0x17c5;eip=0x00b403; 	T(ADD(bx, cx));	// 106298                  add     bx, cx ;~ 17C5:B403
cs=0x17c5;eip=0x00b405; 	T(SHL(bx, 1));	// 106299                  shl     bx, 1 ;~ 17C5:B405
cs=0x17c5;eip=0x00b407; 	T(SHL(bx, 1));	// 106300                  shl     bx, 1 ;~ 17C5:B407
cs=0x17c5;eip=0x00b409; 	T(MOV(cx, *(dw*)(raddr(ds,bx-0x6304))));	// 106301                  mov     cx, [bx-6304h] ;~ 17C5:B409
cs=0x17c5;eip=0x00b40d; 	T(SUB(cx, word_520f0));	// 106302                  sub     cx, ds:word_520F0 ;~ 17C5:B40D
cs=0x17c5;eip=0x00b411; 	X(PUSH(cx));	// 106303                  push    cx ;~ 17C5:B411
cs=0x17c5;eip=0x00b412; 	T(si = ax;);	// 106304                  mov     si, ax ;~ 17C5:B412
cs=0x17c5;eip=0x00b414; 	J(CALL(sub_34dc0,0));	// 106305                  call    sub_34DC0 ;~ 17C5:B414
cs=0x17c5;eip=0x00b417; 	T(ADD(sp, 2));	// 106306                  add     sp, 2 ;~ 17C5:B417
cs=0x17c5;eip=0x00b41a; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x1E))));	// 106307                  mov     bx, [bp-1Eh] ;~ 17C5:B41A
cs=0x17c5;eip=0x00b41d; 	T(cx = bx;);	// 106308                  mov     cx, bx ;~ 17C5:B41D
cs=0x17c5;eip=0x00b41f; 	T(SHL(bx, 1));	// 106309                  shl     bx, 1 ;~ 17C5:B41F
cs=0x17c5;eip=0x00b421; 	T(ADD(bx, cx));	// 106310                  add     bx, cx ;~ 17C5:B421
cs=0x17c5;eip=0x00b423; 	T(SHL(bx, 1));	// 106311                  shl     bx, 1 ;~ 17C5:B423
cs=0x17c5;eip=0x00b425; 	T(SHL(bx, 1));	// 106312                  shl     bx, 1 ;~ 17C5:B425
cs=0x17c5;eip=0x00b427; 	T(MOV(cx, *(dw*)(raddr(ds,bx-0x6300))));	// 106313                  mov     cx, [bx-6300h] ;~ 17C5:B427
cs=0x17c5;eip=0x00b42b; 	T(SUB(cx, word_4e2fe));	// 106314                  sub     cx, ds:word_4E2FE ;~ 17C5:B42B
cs=0x17c5;eip=0x00b42f; 	X(PUSH(cx));	// 106315                  push    cx ;~ 17C5:B42F
cs=0x17c5;eip=0x00b430; 	T(di = ax;);	// 106316                  mov     di, ax ;~ 17C5:B430
cs=0x17c5;eip=0x00b432; 	J(CALL(sub_34dc0,0));	// 106317                  call    sub_34DC0 ;~ 17C5:B432
cs=0x17c5;eip=0x00b435; 	T(ADD(sp, 2));	// 106318                  add     sp, 2 ;~ 17C5:B435
cs=0x17c5;eip=0x00b438; 	T(cl = 5;);	// 106319                  mov     cl, 5 ;~ 17C5:B438
cs=0x17c5;eip=0x00b43a; 	T(SAR(ax, cl));	// 106320                  sar     ax, cl ;~ 17C5:B43A
cs=0x17c5;eip=0x00b43c; 	T(ADD(ax, di));	// 106321                  add     ax, di ;~ 17C5:B43C
cs=0x17c5;eip=0x00b43e; 	T(ADD(ax, si));	// 106322                  add     ax, si ;~ 17C5:B43E
cs=0x17c5;eip=0x00b440; 	X(MOV(*(dw*)(raddr(ss,bp-0x2A)), ax));	// 106323                  mov     [bp-2Ah], ax ;~ 17C5:B440
cs=0x17c5;eip=0x00b443; 	X(PUSH(ax));	// 106324                  push    ax ;~ 17C5:B443
cs=0x17c5;eip=0x00b444; 	J(CALL(sub_34dc0,0));	// 106325                  call    sub_34DC0 ;~ 17C5:B444
cs=0x17c5;eip=0x00b447; 	T(ADD(sp, 2));	// 106326                  add     sp, 2 ;~ 17C5:B447
cs=0x17c5;eip=0x00b44a; 	X(MOV(*(dw*)(raddr(ss,bp-0x2A)), ax));	// 106327                  mov     [bp-2Ah], ax ;~ 17C5:B44A
cs=0x17c5;eip=0x00b44d; 	T(CMP(ax, 0x20));	// 106328                  cmp     ax, 20h ; ' ' ;~ 17C5:B44D
cs=0x17c5;eip=0x00b450; 	J(JGE(loc_316a6));	// 106329                  jge     short loc_316A6 ;~ 17C5:B450
cs=0x17c5;eip=0x00b452; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), 1));	// 106330                  mov     word ptr [bp-0Eh], 1 ;~ 17C5:B452
cs=0x17c5;eip=0x00b457; 	T(ax = 0x5BC8;);	// 106331                  mov     ax, 5BC8h ;~ 17C5:B457
cs=0x17c5;eip=0x00b45a; 	X(PUSH(ax));	// 106332                  push    ax ;~ 17C5:B45A
cs=0x17c5;eip=0x00b45b; 	J(CALL(sub_30414,0));	// 106333                  call    sub_30414 ;~ 17C5:B45B
cs=0x17c5;eip=0x00b45e; 	T(ADD(sp, 2));	// 106334                  add     sp, 2 ;~ 17C5:B45E
cs=0x17c5;eip=0x00b461; 	T(ax = 0x20;);	// 106335                  mov     ax, 20h ; ' ' ;~ 17C5:B461
cs=0x17c5;eip=0x00b464; 	T(CWD);	// 106336                  cwd ;~ 17C5:B464
cs=0x17c5;eip=0x00b465; 	T(cx = 4;);	// 106337                  mov     cx, 4 ;~ 17C5:B465
cs=0x17c5;eip=0x00b468; 	T(SUB(cx, word_492e8));	// 106338                  sub     cx, word_492E8 ;~ 17C5:B468
cs=0x17c5;eip=0x00b46c; 	T(IDIV2(cx));	// 106339                  idiv    cx ;~ 17C5:B46C
cs=0x17c5;eip=0x00b46e; 	T(CMP(ax, *(dw*)(raddr(ss,bp-0x2A))));	// 106340                  cmp     ax, [bp-2Ah] ;~ 17C5:B46E
cs=0x17c5;eip=0x00b471; 	J(JLE(loc_316a6));	// 106341                  jle     short loc_316A6 ;~ 17C5:B471
cs=0x17c5;eip=0x00b473; 	J(CALL(sub_2ec74,0));	// 106342                  call    sub_2EC74 ;~ 17C5:B473
loc_316a6:
	// 6239 
cs=0x17c5;eip=0x00b476; 	T(CMP(*(dw*)(raddr(ss,bp-0x0E)), 0));	// 106346                  cmp     word ptr [bp-0Eh], 0 ;~ 17C5:B476
cs=0x17c5;eip=0x00b47a; 	J(JZ(loc_316d6));	// 106347                  jz      short loc_316D6 ;~ 17C5:B47A
cs=0x17c5;eip=0x00b47c; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x1E))));	// 106348                  mov     ax, [bp-1Eh] ;~ 17C5:B47C
cs=0x17c5;eip=0x00b47f; 	T(cx = ax;);	// 106349                  mov     cx, ax ;~ 17C5:B47F
cs=0x17c5;eip=0x00b481; 	T(SHL(ax, 1));	// 106350                  shl     ax, 1 ;~ 17C5:B481
cs=0x17c5;eip=0x00b483; 	T(ADD(ax, cx));	// 106351                  add     ax, cx ;~ 17C5:B483
cs=0x17c5;eip=0x00b485; 	T(SHL(ax, 1));	// 106352                  shl     ax, 1 ;~ 17C5:B485
cs=0x17c5;eip=0x00b487; 	T(SHL(ax, 1));	// 106353                  shl     ax, 1 ;~ 17C5:B487
cs=0x17c5;eip=0x00b489; 	T(si = ax;);	// 106354                  mov     si, ax ;~ 17C5:B489
cs=0x17c5;eip=0x00b48b; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6304))));	// 106355                  mov     ax, [si-6304h] ;~ 17C5:B48B
cs=0x17c5;eip=0x00b48f; 	X(word_520ec = ax;);	// 106356                  mov     ds:word_520EC, ax ;~ 17C5:B48F
cs=0x17c5;eip=0x00b492; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6302))));	// 106357                  mov     ax, [si-6302h] ;~ 17C5:B492
cs=0x17c5;eip=0x00b496; 	X(word_520f8 = ax;);	// 106358                  mov     ds:word_520F8, ax ;~ 17C5:B496
cs=0x17c5;eip=0x00b499; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6300))));	// 106359                  mov     ax, [si-6300h] ;~ 17C5:B499
cs=0x17c5;eip=0x00b49d; 	X(word_520fe = ax;);	// 106360                  mov     ds:word_520FE, ax ;~ 17C5:B49D
cs=0x17c5;eip=0x00b4a0; 	X(word_4f836 = 0x0FFFF;);	// 106361                  mov     ds:word_4F836, 0FFFFh ;~ 17C5:B4A0
loc_316d6:
	// 6240 
cs=0x17c5;eip=0x00b4a6; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x1E))));	// 106364                  mov     ax, [bp-1Eh] ;~ 17C5:B4A6
cs=0x17c5;eip=0x00b4a9; 	T(cx = ax;);	// 106365                  mov     cx, ax ;~ 17C5:B4A9
cs=0x17c5;eip=0x00b4ab; 	T(SHL(ax, 1));	// 106366                  shl     ax, 1 ;~ 17C5:B4AB
cs=0x17c5;eip=0x00b4ad; 	T(ADD(ax, cx));	// 106367                  add     ax, cx ;~ 17C5:B4AD
cs=0x17c5;eip=0x00b4af; 	T(SHL(ax, 1));	// 106368                  shl     ax, 1 ;~ 17C5:B4AF
cs=0x17c5;eip=0x00b4b1; 	T(SHL(ax, 1));	// 106369                  shl     ax, 1 ;~ 17C5:B4B1
cs=0x17c5;eip=0x00b4b3; 	T(si = ax;);	// 106370                  mov     si, ax ;~ 17C5:B4B3
cs=0x17c5;eip=0x00b4b5; 	T(CMP(*(dw*)(raddr(ds,si-0x6300)), 0));	// 106371                  cmp     word ptr [si-6300h], 0 ;~ 17C5:B4B5
cs=0x17c5;eip=0x00b4ba; 	J(JL(loc_316ef));	// 106372                  jl      short loc_316EF ;~ 17C5:B4BA
cs=0x17c5;eip=0x00b4bc; 	J(JMP(loc_317eb));	// 106373                  jmp     loc_317EB ;~ 17C5:B4BC
loc_316ef:
	// 6241 
cs=0x17c5;eip=0x00b4bf; 	T(CMP(word_4f836, 0));	// 106377                  cmp     ds:word_4F836, 0 ;~ 17C5:B4BF
cs=0x17c5;eip=0x00b4c4; 	J(JG(loc_31711));	// 106378                  jg      short loc_31711 ;~ 17C5:B4C4
cs=0x17c5;eip=0x00b4c6; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6304))));	// 106379                  mov     ax, [si-6304h] ;~ 17C5:B4C6
cs=0x17c5;eip=0x00b4ca; 	X(word_520ec = ax;);	// 106380                  mov     ds:word_520EC, ax ;~ 17C5:B4CA
cs=0x17c5;eip=0x00b4cd; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6302))));	// 106381                  mov     ax, [si-6302h] ;~ 17C5:B4CD
cs=0x17c5;eip=0x00b4d1; 	X(word_520f8 = ax;);	// 106382                  mov     ds:word_520F8, ax ;~ 17C5:B4D1
cs=0x17c5;eip=0x00b4d4; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x6300))));	// 106383                  mov     ax, [si-6300h] ;~ 17C5:B4D4
cs=0x17c5;eip=0x00b4d8; 	X(word_520fe = ax;);	// 106384                  mov     ds:word_520FE, ax ;~ 17C5:B4D8
cs=0x17c5;eip=0x00b4db; 	X(word_4f836 = 0x0FFFF;);	// 106385                  mov     ds:word_4F836, 0FFFFh ;~ 17C5:B4DB
loc_31711:
	// 6242 
cs=0x17c5;eip=0x00b4e1; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x1E))));	// 106388                  mov     bx, [bp-1Eh] ;~ 17C5:B4E1
cs=0x17c5;eip=0x00b4e4; 	T(ax = bx;);	// 106389                  mov     ax, bx ;~ 17C5:B4E4
cs=0x17c5;eip=0x00b4e6; 	T(SHL(bx, 1));	// 106390                  shl     bx, 1 ;~ 17C5:B4E6
cs=0x17c5;eip=0x00b4e8; 	T(ADD(bx, ax));	// 106391                  add     bx, ax ;~ 17C5:B4E8
cs=0x17c5;eip=0x00b4ea; 	T(SHL(bx, 1));	// 106392                  shl     bx, 1 ;~ 17C5:B4EA
cs=0x17c5;eip=0x00b4ec; 	T(SHL(bx, 1));	// 106393                  shl     bx, 1 ;~ 17C5:B4EC
cs=0x17c5;eip=0x00b4ee; 	X(MOV(*(dw*)(raddr(ds,bx-0x6304)), 0));	// 106394                  mov     word ptr [bx-6304h], 0 ;~ 17C5:B4EE
cs=0x17c5;eip=0x00b4f4; 	X(PUSH(word_520f8));	// 106395                  push    ds:word_520F8 ;~ 17C5:B4F4
cs=0x17c5;eip=0x00b4f8; 	X(PUSH(word_520ec));	// 106396                  push    ds:word_520EC ;~ 17C5:B4F8
cs=0x17c5;eip=0x00b4fc; 	J(CALL(sub_328ee,0));	// 106397                  call    sub_328EE ;~ 17C5:B4FC
cs=0x17c5;eip=0x00b4ff; 	T(ADD(sp, 4));	// 106398                  add     sp, 4 ;~ 17C5:B4FF
cs=0x17c5;eip=0x00b502; 	X(MOV(*(dw*)(raddr(ss,bp-8)), ax));	// 106399                  mov     [bp-8], ax ;~ 17C5:B502
cs=0x17c5;eip=0x00b505; 	T(CMP(ax, 0x0FFFF));	// 106400                  cmp     ax, 0FFFFh ;~ 17C5:B505
cs=0x17c5;eip=0x00b508; 	J(JNZ(loc_3173d));	// 106401                  jnz     short loc_3173D ;~ 17C5:B508
cs=0x17c5;eip=0x00b50a; 	J(JMP(loc_317eb));	// 106402                  jmp     loc_317EB ;~ 17C5:B50A
loc_3173d:
	// 6243 
cs=0x17c5;eip=0x00b50d; 	T(bx = ax;);	// 106406                  mov     bx, ax ;~ 17C5:B50D
cs=0x17c5;eip=0x00b50f; 	T(cl = 4;);	// 106407                  mov     cl, 4 ;~ 17C5:B50F
cs=0x17c5;eip=0x00b511; 	T(SHL(bx, cl));	// 106408                  shl     bx, cl ;~ 17C5:B511
cs=0x17c5;eip=0x00b513; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 0x80));	// 106409                  test    byte ptr [bx-7E4Ch], 80h ;~ 17C5:B513
cs=0x17c5;eip=0x00b518; 	J(JZ(loc_3174d));	// 106410                  jz      short loc_3174D ;~ 17C5:B518
cs=0x17c5;eip=0x00b51a; 	J(JMP(loc_317eb));	// 106411                  jmp     loc_317EB ;~ 17C5:B51A
loc_3174d:
	// 6244 
cs=0x17c5;eip=0x00b51d; 	T(bx = word_4fa38;);	// 106415                  mov     bx, ds:word_4FA38 ;~ 17C5:B51D
cs=0x17c5;eip=0x00b521; 	T(MOV(ax, *(dw*)(raddr(ds,bx+4))));	// 106416                  mov     ax, [bx+4] ;~ 17C5:B521
cs=0x17c5;eip=0x00b524; 	T(MOV(dx, *(dw*)(raddr(ds,bx+6))));	// 106417                  mov     dx, [bx+6] ;~ 17C5:B524
cs=0x17c5;eip=0x00b527; 	T(cl = 5;);	// 106418                  mov     cl, 5 ;~ 17C5:B527
loc_31759:
	// 6245 
cs=0x17c5;eip=0x00b529; 	T(SAR(dx, 1));	// 106421                  sar     dx, 1 ;~ 17C5:B529
cs=0x17c5;eip=0x00b52b; 	T(RCR(ax, 1));	// 106422                  rcr     ax, 1 ;~ 17C5:B52B
cs=0x17c5;eip=0x00b52d; 	T(DEC(cl));	// 106423                  dec     cl ;~ 17C5:B52D
cs=0x17c5;eip=0x00b52f; 	J(JZ(loc_31763));	// 106424                  jz      short loc_31763 ;~ 17C5:B52F
cs=0x17c5;eip=0x00b531; 	J(JMP(loc_31759));	// 106425                  jmp     short loc_31759 ;~ 17C5:B531
loc_31763:
	// 6246 
cs=0x17c5;eip=0x00b533; 	X(MOV(*(dw*)(raddr(ss,bp-0x24)), ax));	// 106429                  mov     [bp-24h], ax ;~ 17C5:B533
cs=0x17c5;eip=0x00b536; 	T(bx = word_4fa38;);	// 106430                  mov     bx, ds:word_4FA38 ;~ 17C5:B536
cs=0x17c5;eip=0x00b53a; 	T(MOV(ax, *(dw*)(raddr(ds,bx+8))));	// 106431                  mov     ax, [bx+8] ;~ 17C5:B53A
cs=0x17c5;eip=0x00b53d; 	T(MOV(dx, *(dw*)(raddr(ds,bx+0x0A))));	// 106432                  mov     dx, [bx+0Ah] ;~ 17C5:B53D
cs=0x17c5;eip=0x00b540; 	T(cl = 5;);	// 106433                  mov     cl, 5 ;~ 17C5:B540
loc_31772:
	// 6247 
cs=0x17c5;eip=0x00b542; 	T(SAR(dx, 1));	// 106436                  sar     dx, 1 ;~ 17C5:B542
cs=0x17c5;eip=0x00b544; 	T(RCR(ax, 1));	// 106437                  rcr     ax, 1 ;~ 17C5:B544
cs=0x17c5;eip=0x00b546; 	T(DEC(cl));	// 106438                  dec     cl ;~ 17C5:B546
cs=0x17c5;eip=0x00b548; 	J(JZ(loc_3177c));	// 106439                  jz      short loc_3177C ;~ 17C5:B548
cs=0x17c5;eip=0x00b54a; 	J(JMP(loc_31772));	// 106440                  jmp     short loc_31772 ;~ 17C5:B54A
loc_3177c:
	// 6248 
cs=0x17c5;eip=0x00b54c; 	T(SUB(ax, 0x8000));	// 106444                  sub     ax, 8000h ;~ 17C5:B54C
cs=0x17c5;eip=0x00b54f; 	T(NEG(ax));	// 106445                  neg     ax ;~ 17C5:B54F
cs=0x17c5;eip=0x00b551; 	X(MOV(*(dw*)(raddr(ss,bp-0x26)), ax));	// 106446                  mov     [bp-26h], ax ;~ 17C5:B551
cs=0x17c5;eip=0x00b554; 	T(ax = word_520f8;);	// 106447                  mov     ax, ds:word_520F8 ;~ 17C5:B554
cs=0x17c5;eip=0x00b557; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x26))));	// 106448                  sub     ax, [bp-26h] ;~ 17C5:B557
cs=0x17c5;eip=0x00b55a; 	X(PUSH(ax));	// 106449                  push    ax ;~ 17C5:B55A
cs=0x17c5;eip=0x00b55b; 	T(ax = word_520ec;);	// 106450                  mov     ax, ds:word_520EC ;~ 17C5:B55B
cs=0x17c5;eip=0x00b55e; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x24))));	// 106451                  sub     ax, [bp-24h] ;~ 17C5:B55E
cs=0x17c5;eip=0x00b561; 	X(PUSH(ax));	// 106452                  push    ax ;~ 17C5:B561
cs=0x17c5;eip=0x00b562; 	J(CALL(sub_331d6,0));	// 106453                  call    sub_331D6 ;~ 17C5:B562
cs=0x17c5;eip=0x00b565; 	T(ADD(sp, 4));	// 106454                  add     sp, 4 ;~ 17C5:B565
cs=0x17c5;eip=0x00b568; 	T(cx = ax;);	// 106455                  mov     cx, ax ;~ 17C5:B568
cs=0x17c5;eip=0x00b56a; 	T(ax = 0x18;);	// 106456                  mov     ax, 18h ;~ 17C5:B56A
cs=0x17c5;eip=0x00b56d; 	T(CWD);	// 106457                  cwd ;~ 17C5:B56D
cs=0x17c5;eip=0x00b56e; 	T(bx = word_492e8;);	// 106458                  mov     bx, word_492E8 ;~ 17C5:B56E
cs=0x17c5;eip=0x00b572; 	T(ADD(bx, 2));	// 106459                  add     bx, 2 ;~ 17C5:B572
cs=0x17c5;eip=0x00b575; 	T(IDIV2(bx));	// 106460                  idiv    bx ;~ 17C5:B575
cs=0x17c5;eip=0x00b577; 	T(CMP(cx, ax));	// 106461                  cmp     cx, ax ;~ 17C5:B577
cs=0x17c5;eip=0x00b579; 	J(JGE(loc_317eb));	// 106462                  jge     short loc_317EB ;~ 17C5:B579
cs=0x17c5;eip=0x00b57b; 	T(MOV(bx, *(dw*)(raddr(ss,bp-8))));	// 106463                  mov     bx, [bp-8] ;~ 17C5:B57B
cs=0x17c5;eip=0x00b57e; 	T(cl = 4;);	// 106464                  mov     cl, 4 ;~ 17C5:B57E
cs=0x17c5;eip=0x00b580; 	T(SHL(bx, cl));	// 106465                  shl     bx, cl ;~ 17C5:B580
cs=0x17c5;eip=0x00b582; 	T(MOV(al, *(raddr(ds,bx-0x7E46))));	// 106466                  mov     al, [bx-7E46h] ;~ 17C5:B582
cs=0x17c5;eip=0x00b586; 	T(AND(al, 0x7F));	// 106467                  and     al, 7Fh ;~ 17C5:B586
cs=0x17c5;eip=0x00b588; 	T(CMP(al, byte_5225a));	// 106468                  cmp     al, ds:byte_5225A ;~ 17C5:B588
cs=0x17c5;eip=0x00b58c; 	J(JZ(loc_317eb));	// 106469                  jz      short loc_317EB ;~ 17C5:B58C
cs=0x17c5;eip=0x00b58e; 	X(PUSH(*(dw*)(raddr(ss,bp-8))));	// 106470                  push    word ptr [bp-8] ;~ 17C5:B58E
cs=0x17c5;eip=0x00b591; 	J(CALL(sub_2ea1a,0));	// 106471                  call    sub_2EA1A ;~ 17C5:B591
cs=0x17c5;eip=0x00b594; 	T(ADD(sp, 2));	// 106473                  add     sp, 2 ;~ 17C5:B594
cs=0x17c5;eip=0x00b597; 	T(ax = 0x5BD7;);	// 106474                  mov     ax, 5BD7h ;~ 17C5:B597
cs=0x17c5;eip=0x00b59a; 	X(PUSH(ax));	// 106475                  push    ax ;~ 17C5:B59A
cs=0x17c5;eip=0x00b59b; 	T(ax = 0x66C4;);	// 106476                  mov     ax, 66C4h ;~ 17C5:B59B
cs=0x17c5;eip=0x00b59e; 	X(PUSH(ax));	// 106477                  push    ax ;~ 17C5:B59E
cs=0x17c5;eip=0x00b59f; 	J(CALL(sub_34bdc,0));	// 106478                  call    sub_34BDC ;~ 17C5:B59F
cs=0x17c5;eip=0x00b5a2; 	T(ADD(sp, 4));	// 106479                  add     sp, 4 ;~ 17C5:B5A2
cs=0x17c5;eip=0x00b5a5; 	T(ax = 0x66C4;);	// 106480                  mov     ax, 66C4h ;~ 17C5:B5A5
cs=0x17c5;eip=0x00b5a8; 	X(PUSH(ax));	// 106481                  push    ax ;~ 17C5:B5A8
cs=0x17c5;eip=0x00b5a9; 	J(CALL(sub_30414,0));	// 106482                  call    sub_30414 ;~ 17C5:B5A9
cs=0x17c5;eip=0x00b5ac; 	T(ADD(sp, 2));	// 106483                  add     sp, 2 ;~ 17C5:B5AC
cs=0x17c5;eip=0x00b5af; 	X(word_4f836 = 8;);	// 106484                  mov     ds:word_4F836, 8 ;~ 17C5:B5AF
cs=0x17c5;eip=0x00b5b5; 	X(word_520fe = 0;);	// 106485                  mov     ds:word_520FE, 0 ;~ 17C5:B5B5
loc_317eb:
	// 6249 
cs=0x17c5;eip=0x00b5bb; 	J(JMP(loc_31412));	// 106489                  jmp     loc_31412 ;~ 17C5:B5BB
loc_317ee:
	// 6250 
cs=0x17c5;eip=0x00b5be; 	T(CMP(word_4f836, 0));	// 106493                  cmp     ds:word_4F836, 0 ;~ 17C5:B5BE
cs=0x17c5;eip=0x00b5c3; 	J(JNZ(loc_317f8));	// 106494                  jnz     short loc_317F8 ;~ 17C5:B5C3
cs=0x17c5;eip=0x00b5c5; 	J(JMP(loc_31902));	// 106495                  jmp     loc_31902 ;~ 17C5:B5C5
loc_317f8:
	// 6251 
cs=0x17c5;eip=0x00b5c8; 	X(PUSH(word_520fe));	// 106499                  push    ds:word_520FE ;~ 17C5:B5C8
cs=0x17c5;eip=0x00b5cc; 	X(PUSH(word_520f8));	// 106500                  push    ds:word_520F8 ;~ 17C5:B5CC
cs=0x17c5;eip=0x00b5d0; 	X(PUSH(word_520ec));	// 106501                  push    ds:word_520EC ;~ 17C5:B5D0
cs=0x17c5;eip=0x00b5d4; 	J(CALL(sub_326b8,0));	// 106502                  call    sub_326B8 ;~ 17C5:B5D4
cs=0x17c5;eip=0x00b5d7; 	T(ADD(sp, 6));	// 106503                  add     sp, 6 ;~ 17C5:B5D7
cs=0x17c5;eip=0x00b5da; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 106504                  cmp     word_4AA98, 0FFFFh ;~ 17C5:B5DA
cs=0x17c5;eip=0x00b5df; 	J(JNZ(loc_31814));	// 106505                  jnz     short loc_31814 ;~ 17C5:B5DF
cs=0x17c5;eip=0x00b5e1; 	J(JMP(loc_318f2));	// 106506                  jmp     loc_318F2 ;~ 17C5:B5E1
loc_31814:
	// 6252 
cs=0x17c5;eip=0x00b5e4; 	T(ax = 0x100;);	// 106510                  mov     ax, 100h ;~ 17C5:B5E4
cs=0x17c5;eip=0x00b5e7; 	T(CWD);	// 106511                  cwd ;~ 17C5:B5E7
cs=0x17c5;eip=0x00b5e8; 	T(cx = word_52246;);	// 106512                  mov     cx, ds:word_52246 ;~ 17C5:B5E8
cs=0x17c5;eip=0x00b5ec; 	T(IDIV2(cx));	// 106513                  idiv    cx ;~ 17C5:B5EC
cs=0x17c5;eip=0x00b5ee; 	X(PUSH(ax));	// 106514                  push    ax ;~ 17C5:B5EE
cs=0x17c5;eip=0x00b5ef; 	J(CALL(sub_34dc0,0));	// 106515                  call    sub_34DC0 ;~ 17C5:B5EF
cs=0x17c5;eip=0x00b5f2; 	T(ADD(sp, 2));	// 106516                  add     sp, 2 ;~ 17C5:B5F2
cs=0x17c5;eip=0x00b5f5; 	X(MOV(*(dw*)(raddr(ss,bp-0x22)), ax));	// 106517                  mov     [bp-22h], ax ;~ 17C5:B5F5
cs=0x17c5;eip=0x00b5f8; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), 0));	// 106518                  mov     word ptr [bp-1Eh], 0 ;~ 17C5:B5F8
cs=0x17c5;eip=0x00b5fd; 	J(JMP(loc_31832));	// 106519                  jmp     short loc_31832 ;~ 17C5:B5FD
loc_3182f:
	// 6253 
cs=0x17c5;eip=0x00b5ff; 	X(INC(*(dw*)(raddr(ss,bp-0x1E))));	// 106523                  inc     word ptr [bp-1Eh] ;~ 17C5:B5FF
loc_31832:
	// 6254 
cs=0x17c5;eip=0x00b602; 	T(CMP(*(dw*)(raddr(ss,bp-0x1E)), 8));	// 106526                  cmp     word ptr [bp-1Eh], 8 ;~ 17C5:B602
cs=0x17c5;eip=0x00b606; 	J(JL(loc_3183b));	// 106527                  jl      short loc_3183B ;~ 17C5:B606
cs=0x17c5;eip=0x00b608; 	J(JMP(loc_318f2));	// 106528                  jmp     loc_318F2 ;~ 17C5:B608
loc_3183b:
	// 6255 
cs=0x17c5;eip=0x00b60b; 	T(ax = 4;);	// 106532                  mov     ax, 4 ;~ 17C5:B60B
cs=0x17c5;eip=0x00b60e; 	X(PUSH(ax));	// 106533                  push    ax ;~ 17C5:B60E
cs=0x17c5;eip=0x00b60f; 	J(CALL(sub_33430,0));	// 106534                  call    sub_33430 ;~ 17C5:B60F
cs=0x17c5;eip=0x00b612; 	T(ADD(sp, 2));	// 106535                  add     sp, 2 ;~ 17C5:B612
cs=0x17c5;eip=0x00b615; 	T(ADD(ax, 0x0C));	// 106536                  add     ax, 0Ch ;~ 17C5:B615
cs=0x17c5;eip=0x00b618; 	X(PUSH(ax));	// 106537                  push    ax ;~ 17C5:B618
cs=0x17c5;eip=0x00b619; 	J(CALL(sub_30074,0));	// 106538                  call    sub_30074 ;~ 17C5:B619
cs=0x17c5;eip=0x00b61c; 	T(ADD(sp, 2));	// 106539                  add     sp, 2 ;~ 17C5:B61C
cs=0x17c5;eip=0x00b61f; 	T(CMP(word_520fe, 0));	// 106540                  cmp     ds:word_520FE, 0 ;~ 17C5:B61F
cs=0x17c5;eip=0x00b624; 	J(JLE(loc_3188e));	// 106541                  jle     short loc_3188E ;~ 17C5:B624
cs=0x17c5;eip=0x00b626; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x22))));	// 106542                  mov     ax, [bp-22h] ;~ 17C5:B626
cs=0x17c5;eip=0x00b629; 	T(SHL(ax, 1));	// 106543                  shl     ax, 1 ;~ 17C5:B629
cs=0x17c5;eip=0x00b62b; 	X(PUSH(ax));	// 106544                  push    ax ;~ 17C5:B62B
cs=0x17c5;eip=0x00b62c; 	J(CALL(sub_33430,0));	// 106545                  call    sub_33430 ;~ 17C5:B62C
cs=0x17c5;eip=0x00b62f; 	T(ADD(sp, 2));	// 106546                  add     sp, 2 ;~ 17C5:B62F
cs=0x17c5;eip=0x00b632; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x22))));	// 106547                  sub     ax, [bp-22h] ;~ 17C5:B632
cs=0x17c5;eip=0x00b635; 	T(ADD(ax, *(word_4ac7c)));	// 106548                  add     ax, word_4AC7C ;~ 17C5:B635
cs=0x17c5;eip=0x00b639; 	X(PUSH(ax));	// 106549                  push    ax ;~ 17C5:B639
cs=0x17c5;eip=0x00b63a; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x22))));	// 106550                  mov     ax, [bp-22h] ;~ 17C5:B63A
cs=0x17c5;eip=0x00b63d; 	T(SHL(ax, 1));	// 106551                  shl     ax, 1 ;~ 17C5:B63D
cs=0x17c5;eip=0x00b63f; 	X(PUSH(ax));	// 106552                  push    ax ;~ 17C5:B63F
cs=0x17c5;eip=0x00b640; 	J(CALL(sub_33430,0));	// 106553                  call    sub_33430 ;~ 17C5:B640
cs=0x17c5;eip=0x00b643; 	T(ADD(sp, 2));	// 106554                  add     sp, 2 ;~ 17C5:B643
cs=0x17c5;eip=0x00b646; 	T(SUB(ax, *(dw*)(raddr(ss,bp-0x22))));	// 106555                  sub     ax, [bp-22h] ;~ 17C5:B646
cs=0x17c5;eip=0x00b649; 	T(ADD(ax, *(word_4aa98)));	// 106556                  add     ax, word_4AA98 ;~ 17C5:B649
cs=0x17c5;eip=0x00b64d; 	X(PUSH(ax));	// 106557                  push    ax ;~ 17C5:B64D
cs=0x17c5;eip=0x00b64e; 	X(PUSH(*(word_4ac7c)));	// 106558                  push    word_4AC7C ;~ 17C5:B64E
cs=0x17c5;eip=0x00b652; 	X(PUSH(*(word_4aa98)));	// 106559                  push    word_4AA98 ;~ 17C5:B652
cs=0x17c5;eip=0x00b656; 	J(CALL(sub_2fe3c,0));	// 106560                  call    sub_2FE3C ;~ 17C5:B656
cs=0x17c5;eip=0x00b659; 	T(ADD(sp, 8));	// 106562                  add     sp, 8 ;~ 17C5:B659
cs=0x17c5;eip=0x00b65c; 	J(JMP(loc_318ef));	// 106563                  jmp     short loc_318EF ;~ 17C5:B65C
loc_3188e:
	// 6256 
cs=0x17c5;eip=0x00b65e; 	T(ax = 0x6000;);	// 106567                  mov     ax, 6000h ;~ 17C5:B65E
cs=0x17c5;eip=0x00b661; 	X(PUSH(ax));	// 106568                  push    ax ;~ 17C5:B661
cs=0x17c5;eip=0x00b662; 	J(CALL(sub_33430,0));	// 106569                  call    sub_33430 ;~ 17C5:B662
cs=0x17c5;eip=0x00b665; 	T(ADD(sp, 2));	// 106570                  add     sp, 2 ;~ 17C5:B665
cs=0x17c5;eip=0x00b668; 	T(SUB(ax, 0x3000));	// 106571                  sub     ax, 3000h ;~ 17C5:B668
cs=0x17c5;eip=0x00b66b; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 106572                  mov     [bp-0Ch], ax ;~ 17C5:B66B
cs=0x17c5;eip=0x00b66e; 	T(CMP(word_492f2, 0));	// 106573                  cmp     word_492F2, 0 ;~ 17C5:B66E
cs=0x17c5;eip=0x00b673; 	J(JZ(loc_318ab));	// 106574                  jz      short loc_318AB ;~ 17C5:B673
cs=0x17c5;eip=0x00b675; 	T(ax = word_4e2fc;);	// 106575                  mov     ax, ds:word_4E2FC ;~ 17C5:B675
cs=0x17c5;eip=0x00b678; 	X(SUB(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 106576                  sub     [bp-0Ch], ax ;~ 17C5:B678
loc_318ab:
	// 6257 
cs=0x17c5;eip=0x00b67b; 	X(PUSH(*(dw*)(raddr(ss,bp-0x22))));	// 106579                  push    word ptr [bp-22h] ;~ 17C5:B67B
cs=0x17c5;eip=0x00b67e; 	J(CALL(sub_33430,0));	// 106580                  call    sub_33430 ;~ 17C5:B67E
cs=0x17c5;eip=0x00b681; 	T(ADD(sp, 2));	// 106581                  add     sp, 2 ;~ 17C5:B681
cs=0x17c5;eip=0x00b684; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 106582                  mov     [bp-4], ax ;~ 17C5:B684
cs=0x17c5;eip=0x00b687; 	X(PUSH(ax));	// 106583                  push    ax ;~ 17C5:B687
cs=0x17c5;eip=0x00b688; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0C))));	// 106584                  push    word ptr [bp-0Ch] ;~ 17C5:B688
cs=0x17c5;eip=0x00b68b; 	J(CALL(sub_333a8,0));	// 106585                  call    sub_333A8 ;~ 17C5:B68B
cs=0x17c5;eip=0x00b68e; 	T(ADD(sp, 4));	// 106586                  add     sp, 4 ;~ 17C5:B68E
cs=0x17c5;eip=0x00b691; 	T(ADD(ax, *(word_4aa98)));	// 106587                  add     ax, word_4AA98 ;~ 17C5:B691
cs=0x17c5;eip=0x00b695; 	X(MOV(*(dw*)(raddr(ss,bp-0x2C)), ax));	// 106588                  mov     [bp-2Ch], ax ;~ 17C5:B695
cs=0x17c5;eip=0x00b698; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 106589                  push    word ptr [bp-4] ;~ 17C5:B698
cs=0x17c5;eip=0x00b69b; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0C))));	// 106590                  push    word ptr [bp-0Ch] ;~ 17C5:B69B
cs=0x17c5;eip=0x00b69e; 	J(CALL(sub_333c0,0));	// 106591                  call    sub_333C0 ;~ 17C5:B69E
cs=0x17c5;eip=0x00b6a1; 	T(ADD(sp, 4));	// 106592                  add     sp, 4 ;~ 17C5:B6A1
cs=0x17c5;eip=0x00b6a4; 	T(cx = *(word_4ac7c););	// 106593                  mov     cx, word_4AC7C ;~ 17C5:B6A4
cs=0x17c5;eip=0x00b6a8; 	T(SUB(cx, ax));	// 106594                  sub     cx, ax ;~ 17C5:B6A8
cs=0x17c5;eip=0x00b6aa; 	X(MOV(*(dw*)(raddr(ss,bp-0x32)), cx));	// 106595                  mov     [bp-32h], cx ;~ 17C5:B6AA
cs=0x17c5;eip=0x00b6ad; 	X(PUSH(cx));	// 106596                  push    cx ;~ 17C5:B6AD
cs=0x17c5;eip=0x00b6ae; 	X(PUSH(*(dw*)(raddr(ss,bp-0x2C))));	// 106597                  push    word ptr [bp-2Ch] ;~ 17C5:B6AE
cs=0x17c5;eip=0x00b6b1; 	X(PUSH(*(word_4ac7c)));	// 106598                  push    word_4AC7C ;~ 17C5:B6B1
cs=0x17c5;eip=0x00b6b5; 	X(PUSH(*(word_4aa98)));	// 106599                  push    word_4AA98 ;~ 17C5:B6B5
cs=0x17c5;eip=0x00b6b9; 	J(CALL(sub_2fe3c,0));	// 106600                  call    sub_2FE3C ;~ 17C5:B6B9
cs=0x17c5;eip=0x00b6bc; 	T(ADD(sp, 8));	// 106602                  add     sp, 8 ;~ 17C5:B6BC
loc_318ef:
	// 6258 
cs=0x17c5;eip=0x00b6bf; 	J(JMP(loc_3182f));	// 106605                  jmp     loc_3182F ;~ 17C5:B6BF
loc_318f2:
	// 6259 
cs=0x17c5;eip=0x00b6c2; 	X(PUSH(word_4f836));	// 106610                  push    ds:word_4F836 ;~ 17C5:B6C2
cs=0x17c5;eip=0x00b6c6; 	J(CALL(sub_333f8,0));	// 106611                  call    sub_333F8 ;~ 17C5:B6C6
cs=0x17c5;eip=0x00b6c9; 	T(ADD(sp, 2));	// 106612                  add     sp, 2 ;~ 17C5:B6C9
cs=0x17c5;eip=0x00b6cc; 	X(SUB(word_4f836, ax));	// 106613                  sub     ds:word_4F836, ax ;~ 17C5:B6CC
cs=0x17c5;eip=0x00b6d0; 	J(JMP(loc_31908));	// 106614                  jmp     short loc_31908 ;~ 17C5:B6D0
loc_31902:
	// 6260 
cs=0x17c5;eip=0x00b6d2; 	X(word_4f834 = 0;);	// 106618                  mov     ds:word_4F834, 0 ;~ 17C5:B6D2
loc_31908:
	// 6261 
cs=0x17c5;eip=0x00b6d8; 	T(CMP(word_492f2, 0));	// 106621                  cmp     word_492F2, 0 ;~ 17C5:B6D8
cs=0x17c5;eip=0x00b6dd; 	J(JNZ(loc_31912));	// 106622                  jnz     short loc_31912 ;~ 17C5:B6DD
cs=0x17c5;eip=0x00b6df; 	J(JMP(loc_323e3));	// 106623                  jmp     loc_323E3 ;~ 17C5:B6DF
loc_31912:
	// 6262 
cs=0x17c5;eip=0x00b6e2; 	T(CMP(word_4e690, 0));	// 106627                  cmp     ds:word_4E690, 0 ;~ 17C5:B6E2
cs=0x17c5;eip=0x00b6e7; 	J(JZ(loc_3191f));	// 106628                  jz      short loc_3191F ;~ 17C5:B6E7
cs=0x17c5;eip=0x00b6e9; 	X(word_4e690 = 0;);	// 106629                  mov     ds:word_4E690, 0 ;~ 17C5:B6E9
loc_3191f:
	// 6263 
cs=0x17c5;eip=0x00b6ef; 	T(CMP(word_492ec, 0));	// 106632                  cmp     word_492EC, 0 ;~ 17C5:B6EF
cs=0x17c5;eip=0x00b6f4; 	J(JZ(loc_3192b));	// 106633                  jz      short loc_3192B ;~ 17C5:B6F4
cs=0x17c5;eip=0x00b6f6; 	T(ax = 2;);	// 106634                  mov     ax, 2 ;~ 17C5:B6F6
cs=0x17c5;eip=0x00b6f9; 	J(JMP(loc_3192e));	// 106635                  jmp     short loc_3192E ;~ 17C5:B6F9
loc_3192b:
	// 6264 
cs=0x17c5;eip=0x00b6fb; 	T(ax = word_492ec;);	// 106639                  mov     ax, word_492EC ;~ 17C5:B6FB
loc_3192e:
	// 6265 
cs=0x17c5;eip=0x00b6fe; 	X(PUSH(ax));	// 106642                  push    ax ;~ 17C5:B6FE
cs=0x17c5;eip=0x00b6ff; 	J(CALL(sub_284ca,0));	// 106643                  call    sub_284CA ;~ 17C5:B6FF
cs=0x17c5;eip=0x00b702; 	T(ADD(sp, 2));	// 106644                  add     sp, 2 ;~ 17C5:B702
cs=0x17c5;eip=0x00b705; 	T(ax = 0x0F;);	// 106645                  mov     ax, 0Fh ;~ 17C5:B705
cs=0x17c5;eip=0x00b708; 	X(PUSH(ax));	// 106646                  push    ax ;~ 17C5:B708
cs=0x17c5;eip=0x00b709; 	J(CALL(sub_30074,0));	// 106647                  call    sub_30074 ;~ 17C5:B709
cs=0x17c5;eip=0x00b70c; 	T(ADD(sp, 2));	// 106648                  add     sp, 2 ;~ 17C5:B70C
cs=0x17c5;eip=0x00b70f; 	T(ax = 0x0C7;);	// 106649                  mov     ax, 0C7h ;~ 17C5:B70F
cs=0x17c5;eip=0x00b712; 	X(PUSH(ax));	// 106650                  push    ax ;~ 17C5:B712
cs=0x17c5;eip=0x00b713; 	T(ax = 0x13F;);	// 106651                  mov     ax, 13Fh ;~ 17C5:B713
cs=0x17c5;eip=0x00b716; 	X(PUSH(ax));	// 106652                  push    ax ;~ 17C5:B716
cs=0x17c5;eip=0x00b717; 	T(ax = 0x0C7;);	// 106653                  mov     ax, 0C7h ;~ 17C5:B717
cs=0x17c5;eip=0x00b71a; 	X(PUSH(ax));	// 106654                  push    ax ;~ 17C5:B71A
cs=0x17c5;eip=0x00b71b; 	T(ax = 0x13F;);	// 106655                  mov     ax, 13Fh ;~ 17C5:B71B
cs=0x17c5;eip=0x00b71e; 	X(PUSH(ax));	// 106656                  push    ax ;~ 17C5:B71E
cs=0x17c5;eip=0x00b71f; 	J(CALL(sub_2fe11,0));	// 106657                  call    sub_2FE11 ;~ 17C5:B71F
cs=0x17c5;eip=0x00b722; 	T(ADD(sp, 8));	// 106659                  add     sp, 8 ;~ 17C5:B722
cs=0x17c5;eip=0x00b725; 	X(word_4ef2a = 0;);	// 106660                  mov     ds:word_4EF2A, 0 ;~ 17C5:B725
cs=0x17c5;eip=0x00b72b; 	T(CMP(word_5268c, 2));	// 106661                  cmp     ds:word_5268C, 2 ;~ 17C5:B72B
cs=0x17c5;eip=0x00b730; 	J(JZ(loc_31965));	// 106662                  jz      short loc_31965 ;~ 17C5:B730
cs=0x17c5;eip=0x00b732; 	J(JMP(loc_31b2f));	// 106663                  jmp     loc_31B2F ;~ 17C5:B732
loc_31965:
	// 6266 
cs=0x17c5;eip=0x00b735; 	T(CMP(word_520c0, 0));	// 106667                  cmp     ds:word_520C0, 0 ;~ 17C5:B735
cs=0x17c5;eip=0x00b73a; 	J(JZ(loc_3196f));	// 106668                  jz      short loc_3196F ;~ 17C5:B73A
cs=0x17c5;eip=0x00b73c; 	J(JMP(loc_31b2f));	// 106669                  jmp     loc_31B2F ;~ 17C5:B73C
loc_3196f:
	// 6267 
cs=0x17c5;eip=0x00b73f; 	T(CMP(word_49924, 0));	// 106673                  cmp     word_49924, 0 ;~ 17C5:B73F
cs=0x17c5;eip=0x00b744; 	J(JGE(loc_31979));	// 106674                  jge     short loc_31979 ;~ 17C5:B744
cs=0x17c5;eip=0x00b746; 	J(JMP(loc_31b2f));	// 106675                  jmp     loc_31B2F ;~ 17C5:B746
loc_31979:
	// 6268 
cs=0x17c5;eip=0x00b749; 	T(si = word_49924;);	// 106679                  mov     si, word_49924 ;~ 17C5:B749
cs=0x17c5;eip=0x00b74d; 	T(cl = 4;);	// 106680                  mov     cl, 4 ;~ 17C5:B74D
cs=0x17c5;eip=0x00b74f; 	T(SHL(si, cl));	// 106681                  shl     si, cl ;~ 17C5:B74F
cs=0x17c5;eip=0x00b751; 	T(SUB(ax, ax));	// 106682                  sub     ax, ax ;~ 17C5:B751
cs=0x17c5;eip=0x00b753; 	X(PUSH(ax));	// 106683                  push    ax ;~ 17C5:B753
cs=0x17c5;eip=0x00b754; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 106684                  push    word ptr [si-7E50h] ;~ 17C5:B754
cs=0x17c5;eip=0x00b758; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 106685                  push    word ptr [si-7E52h] ;~ 17C5:B758
cs=0x17c5;eip=0x00b75c; 	J(CALL(sub_326b8,0));	// 106686                  call    sub_326B8 ;~ 17C5:B75C
cs=0x17c5;eip=0x00b75f; 	T(ADD(sp, 6));	// 106687                  add     sp, 6 ;~ 17C5:B75F
cs=0x17c5;eip=0x00b762; 	T(bx = word_492e2;);	// 106688                  mov     bx, word_492E2 ;~ 17C5:B762
cs=0x17c5;eip=0x00b766; 	T(SHL(bx, 1));	// 106689                  shl     bx, 1 ;~ 17C5:B766
cs=0x17c5;eip=0x00b768; 	T(SHL(bx, 1));	// 106690                  shl     bx, 1 ;~ 17C5:B768
cs=0x17c5;eip=0x00b76a; 	T(ax = 0x1A;);	// 106691                  mov     ax, 1Ah ;~ 17C5:B76A
cs=0x17c5;eip=0x00b76d; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x7F2))));	// 106692                  imul    word ptr [bx+7F2h] ;~ 17C5:B76D
cs=0x17c5;eip=0x00b771; 	T(bx = ax;);	// 106693                  mov     bx, ax ;~ 17C5:B771
cs=0x17c5;eip=0x00b773; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x82C))));	// 106694                  mov     ax, [bx+82Ch] ;~ 17C5:B773
cs=0x17c5;eip=0x00b777; 	X(MOV(*(dw*)(raddr(ss,bp-0x1A)), ax));	// 106695                  mov     [bp-1Ah], ax ;~ 17C5:B777
cs=0x17c5;eip=0x00b77a; 	T(CMP(ax, 0x1C));	// 106696                  cmp     ax, 1Ch ;~ 17C5:B77A
cs=0x17c5;eip=0x00b77d; 	J(JNZ(loc_319da));	// 106697                  jnz     short loc_319DA ;~ 17C5:B77D
cs=0x17c5;eip=0x00b77f; 	X(PUSH(word_49924));	// 106698                  push    word_49924 ;~ 17C5:B77F
cs=0x17c5;eip=0x00b783; 	J(CALL(sub_329d2,0));	// 106699                  call    sub_329D2 ;~ 17C5:B783
cs=0x17c5;eip=0x00b786; 	T(ADD(sp, 2));	// 106700                  add     sp, 2 ;~ 17C5:B786
cs=0x17c5;eip=0x00b789; 	T(dx = word_4e2fe;);	// 106701                  mov     dx, ds:word_4E2FE ;~ 17C5:B789
cs=0x17c5;eip=0x00b78d; 	T(cl = 5;);	// 106702                  mov     cl, 5 ;~ 17C5:B78D
cs=0x17c5;eip=0x00b78f; 	T(SHR(dx, cl));	// 106703                  shr     dx, cl ;~ 17C5:B78F
cs=0x17c5;eip=0x00b791; 	T(cx = dx;);	// 106704                  mov     cx, dx ;~ 17C5:B791
cs=0x17c5;eip=0x00b793; 	T(SHL(dx, 1));	// 106705                  shl     dx, 1 ;~ 17C5:B793
cs=0x17c5;eip=0x00b795; 	T(SHL(dx, 1));	// 106706                  shl     dx, 1 ;~ 17C5:B795
cs=0x17c5;eip=0x00b797; 	T(ADD(dx, cx));	// 106707                  add     dx, cx ;~ 17C5:B797
cs=0x17c5;eip=0x00b799; 	T(CMP(ax, dx));	// 106708                  cmp     ax, dx ;~ 17C5:B799
cs=0x17c5;eip=0x00b79b; 	J(JNC(loc_319da));	// 106709                  jnb     short loc_319DA ;~ 17C5:B79B
cs=0x17c5;eip=0x00b79d; 	T(CMP(word_52246, 0));	// 106710                  cmp     ds:word_52246, 0 ;~ 17C5:B79D
cs=0x17c5;eip=0x00b7a2; 	J(JGE(loc_319da));	// 106711                  jge     short loc_319DA ;~ 17C5:B7A2
cs=0x17c5;eip=0x00b7a4; 	X(word_4ef2a = 1;);	// 106712                  mov     ds:word_4EF2A, 1 ;~ 17C5:B7A4
loc_319da:
	// 6269 
cs=0x17c5;eip=0x00b7aa; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 106716                  cmp     word_4AA98, 0FFFFh ;~ 17C5:B7AA
cs=0x17c5;eip=0x00b7af; 	J(JNZ(loc_319e4));	// 106717                  jnz     short loc_319E4 ;~ 17C5:B7AF
cs=0x17c5;eip=0x00b7b1; 	J(JMP(loc_31b2f));	// 106718                  jmp     loc_31B2F ;~ 17C5:B7B1
loc_319e4:
	// 6270 
cs=0x17c5;eip=0x00b7b4; 	T(CMP(word_492ec, 0));	// 106722                  cmp     word_492EC, 0 ;~ 17C5:B7B4
cs=0x17c5;eip=0x00b7b9; 	J(JZ(loc_319f0));	// 106723                  jz      short loc_319F0 ;~ 17C5:B7B9
cs=0x17c5;eip=0x00b7bb; 	T(ax = 8;);	// 106724                  mov     ax, 8 ;~ 17C5:B7BB
cs=0x17c5;eip=0x00b7be; 	J(JMP(loc_319f2));	// 106725                  jmp     short loc_319F2 ;~ 17C5:B7BE
loc_319f0:
	// 6271 
cs=0x17c5;eip=0x00b7c0; 	T(SUB(ax, ax));	// 106729                  sub     ax, ax ;~ 17C5:B7C0
loc_319f2:
	// 6272 
cs=0x17c5;eip=0x00b7c2; 	X(PUSH(ax));	// 106732                  push    ax ;~ 17C5:B7C2
cs=0x17c5;eip=0x00b7c3; 	J(CALL(sub_30074,0));	// 106733                  call    sub_30074 ;~ 17C5:B7C3
cs=0x17c5;eip=0x00b7c6; 	T(ADD(sp, 2));	// 106734                  add     sp, 2 ;~ 17C5:B7C6
cs=0x17c5;eip=0x00b7c9; 	X(MOV(*(dw*)(raddr(ss,bp-6)), 0));	// 106735                  mov     word ptr [bp-6], 0 ;~ 17C5:B7C9
cs=0x17c5;eip=0x00b7ce; 	X(PUSH(word_49924));	// 106736                  push    word_49924 ;~ 17C5:B7CE
cs=0x17c5;eip=0x00b7d2; 	T(bx = word_492e2;);	// 106737                  mov     bx, word_492E2 ;~ 17C5:B7D2
cs=0x17c5;eip=0x00b7d6; 	T(SHL(bx, 1));	// 106738                  shl     bx, 1 ;~ 17C5:B7D6
cs=0x17c5;eip=0x00b7d8; 	T(SHL(bx, 1));	// 106739                  shl     bx, 1 ;~ 17C5:B7D8
cs=0x17c5;eip=0x00b7da; 	X(PUSH(*(dw*)(raddr(ds,bx+0x7F2))));	// 106740                  push    word ptr [bx+7F2h] ;~ 17C5:B7DA
cs=0x17c5;eip=0x00b7de; 	J(CALL(sub_30454,0));	// 106741                  call    sub_30454 ;~ 17C5:B7DE
cs=0x17c5;eip=0x00b7e1; 	T(ADD(sp, 4));	// 106742                  add     sp, 4 ;~ 17C5:B7E1
cs=0x17c5;eip=0x00b7e4; 	T(OR(ax, ax));	// 106743                  or      ax, ax ;~ 17C5:B7E4
cs=0x17c5;eip=0x00b7e6; 	J(JZ(loc_31a1d));	// 106744                  jz      short loc_31A1D ;~ 17C5:B7E6
cs=0x17c5;eip=0x00b7e8; 	T(ax = 4;);	// 106745                  mov     ax, 4 ;~ 17C5:B7E8
cs=0x17c5;eip=0x00b7eb; 	J(JMP(loc_31a1f));	// 106746                  jmp     short loc_31A1F ;~ 17C5:B7EB
loc_31a1d:
	// 6273 
cs=0x17c5;eip=0x00b7ed; 	T(SUB(ax, ax));	// 106750                  sub     ax, ax ;~ 17C5:B7ED
loc_31a1f:
	// 6274 
cs=0x17c5;eip=0x00b7ef; 	X(MOV(*(dw*)(raddr(ss,bp-0x30)), ax));	// 106753                  mov     [bp-30h], ax ;~ 17C5:B7EF
cs=0x17c5;eip=0x00b7f2; 	T(OR(ax, ax));	// 106754                  or      ax, ax ;~ 17C5:B7F2
cs=0x17c5;eip=0x00b7f4; 	J(JNZ(loc_31a29));	// 106755                  jnz     short loc_31A29 ;~ 17C5:B7F4
cs=0x17c5;eip=0x00b7f6; 	J(JMP(loc_31aeb));	// 106756                  jmp     loc_31AEB ;~ 17C5:B7F6
loc_31a29:
	// 6275 
cs=0x17c5;eip=0x00b7f9; 	T(CMP(*(dw*)(raddr(ss,bp-0x1A)), 4));	// 106760                  cmp     word ptr [bp-1Ah], 4 ;~ 17C5:B7F9
cs=0x17c5;eip=0x00b7fd; 	J(JNZ(loc_31a41));	// 106761                  jnz     short loc_31A41 ;~ 17C5:B7FD
cs=0x17c5;eip=0x00b7ff; 	T(bx = word_49924;);	// 106762                  mov     bx, word_49924 ;~ 17C5:B7FF
cs=0x17c5;eip=0x00b803; 	T(cl = 4;);	// 106763                  mov     cl, 4 ;~ 17C5:B803
cs=0x17c5;eip=0x00b805; 	T(SHL(bx, cl));	// 106764                  shl     bx, cl ;~ 17C5:B805
cs=0x17c5;eip=0x00b807; 	T(CMP(*(dw*)(raddr(ds,bx-0x7E4E)), 0));	// 106765                  cmp     word ptr [bx-7E4Eh], 0 ;~ 17C5:B807
cs=0x17c5;eip=0x00b80c; 	J(JNZ(loc_31a41));	// 106766                  jnz     short loc_31A41 ;~ 17C5:B80C
cs=0x17c5;eip=0x00b80e; 	J(JMP(loc_31aeb));	// 106767                  jmp     loc_31AEB ;~ 17C5:B80E
loc_31a41:
	// 6276 
cs=0x17c5;eip=0x00b811; 	T(bx = word_492e2;);	// 106772                  mov     bx, word_492E2 ;~ 17C5:B811
cs=0x17c5;eip=0x00b815; 	T(SHL(bx, 1));	// 106773                  shl     bx, 1 ;~ 17C5:B815
cs=0x17c5;eip=0x00b817; 	T(SHL(bx, 1));	// 106774                  shl     bx, 1 ;~ 17C5:B817
cs=0x17c5;eip=0x00b819; 	T(CMP(*(dw*)(raddr(ds,bx+0x7F4)), 0));	// 106775                  cmp     word ptr [bx+7F4h], 0 ;~ 17C5:B819
cs=0x17c5;eip=0x00b81e; 	J(JNZ(loc_31a53));	// 106776                  jnz     short loc_31A53 ;~ 17C5:B81E
cs=0x17c5;eip=0x00b820; 	J(JMP(loc_31ae9));	// 106777                  jmp     loc_31AE9 ;~ 17C5:B820
loc_31a53:
	// 6277 
cs=0x17c5;eip=0x00b823; 	T(ax = 0x0F;);	// 106781                  mov     ax, 0Fh ;~ 17C5:B823
cs=0x17c5;eip=0x00b826; 	X(PUSH(ax));	// 106782                  push    ax ;~ 17C5:B826
cs=0x17c5;eip=0x00b827; 	J(CALL(sub_30074,0));	// 106783                  call    sub_30074 ;~ 17C5:B827
cs=0x17c5;eip=0x00b82a; 	T(ADD(sp, 2));	// 106784                  add     sp, 2 ;~ 17C5:B82A
cs=0x17c5;eip=0x00b82d; 	T(ax = *(word_4ac7c););	// 106785                  mov     ax, word_4AC7C ;~ 17C5:B82D
cs=0x17c5;eip=0x00b830; 	T(SUB(ax, 0x38));	// 106786                  sub     ax, 38h ; '8' ;~ 17C5:B830
cs=0x17c5;eip=0x00b833; 	X(PUSH(ax));	// 106787                  push    ax ;~ 17C5:B833
cs=0x17c5;eip=0x00b834; 	T(ax = *(word_4aa98););	// 106788                  mov     ax, word_4AA98 ;~ 17C5:B834
cs=0x17c5;eip=0x00b837; 	T(SUB(ax, 0x0A0));	// 106789                  sub     ax, 0A0h ;~ 17C5:B837
cs=0x17c5;eip=0x00b83a; 	X(PUSH(ax));	// 106790                  push    ax ;~ 17C5:B83A
cs=0x17c5;eip=0x00b83b; 	J(CALL(sub_331d6,0));	// 106791                  call    sub_331D6 ;~ 17C5:B83B
cs=0x17c5;eip=0x00b83e; 	T(ADD(sp, 4));	// 106792                  add     sp, 4 ;~ 17C5:B83E
cs=0x17c5;eip=0x00b841; 	T(CMP(ax, 0x30));	// 106793                  cmp     ax, 30h ; '0' ;~ 17C5:B841
cs=0x17c5;eip=0x00b844; 	J(JL(loc_31a7d));	// 106794                  jl      short loc_31A7D ;~ 17C5:B844
cs=0x17c5;eip=0x00b846; 	T(CMP(word_4ef2a, 0));	// 106795                  cmp     ds:word_4EF2A, 0 ;~ 17C5:B846
cs=0x17c5;eip=0x00b84b; 	J(JZ(loc_31ae3));	// 106796                  jz      short loc_31AE3 ;~ 17C5:B84B
loc_31a7d:
	// 6278 
cs=0x17c5;eip=0x00b84d; 	T(ax = 0x12;);	// 106799                  mov     ax, 12h ;~ 17C5:B84D
cs=0x17c5;eip=0x00b850; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x1A))));	// 106800                  imul    word ptr [bp-1Ah] ;~ 17C5:B850
cs=0x17c5;eip=0x00b853; 	T(si = ax;);	// 106801                  mov     si, ax ;~ 17C5:B853
cs=0x17c5;eip=0x00b855; 	T(ax = word_52246;);	// 106802                  mov     ax, ds:word_52246 ;~ 17C5:B855
cs=0x17c5;eip=0x00b858; 	T(NEG(ax));	// 106803                  neg     ax ;~ 17C5:B858
cs=0x17c5;eip=0x00b85a; 	T(CWD);	// 106804                  cwd ;~ 17C5:B85A
cs=0x17c5;eip=0x00b85b; 	T(cx = 7;);	// 106805                  mov     cx, 7 ;~ 17C5:B85B
cs=0x17c5;eip=0x00b85e; 	T(IDIV2(cx));	// 106806                  idiv    cx ;~ 17C5:B85E
cs=0x17c5;eip=0x00b860; 	T(CMP(ax, *(dw*)(raddr(ds,si+0x530))));	// 106807                  cmp     ax, [si+530h] ;~ 17C5:B860
cs=0x17c5;eip=0x00b864; 	J(JGE(loc_31ae3));	// 106808                  jge     short loc_31AE3 ;~ 17C5:B864
cs=0x17c5;eip=0x00b866; 	T(CMP(*(dw*)(raddr(ds,si+0x534)), cx));	// 106809                  cmp     [si+534h], cx ;~ 17C5:B866
cs=0x17c5;eip=0x00b86a; 	J(JZ(loc_31ae3));	// 106810                  jz      short loc_31AE3 ;~ 17C5:B86A
cs=0x17c5;eip=0x00b86c; 	T(CMP(*(dw*)(raddr(ds,si+0x534)), 0x1C));	// 106811                  cmp     word ptr [si+534h], 1Ch ;~ 17C5:B86C
cs=0x17c5;eip=0x00b871; 	J(JNZ(loc_31aaa));	// 106812                  jnz     short loc_31AAA ;~ 17C5:B871
cs=0x17c5;eip=0x00b873; 	T(CMP(word_4ef2a, 0));	// 106813                  cmp     ds:word_4EF2A, 0 ;~ 17C5:B873
cs=0x17c5;eip=0x00b878; 	J(JZ(loc_31ae1));	// 106814                  jz      short loc_31AE1 ;~ 17C5:B878
loc_31aaa:
	// 6279 
cs=0x17c5;eip=0x00b87a; 	X(word_4ef2a = 1;);	// 106817                  mov     ds:word_4EF2A, 1 ;~ 17C5:B87A
cs=0x17c5;eip=0x00b880; 	X(MOV(*(dw*)(raddr(ss,bp-6)), 1));	// 106818                  mov     word ptr [bp-6], 1 ;~ 17C5:B880
cs=0x17c5;eip=0x00b885; 	T(ax = 0x12;);	// 106819                  mov     ax, 12h ;~ 17C5:B885
cs=0x17c5;eip=0x00b888; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x1A))));	// 106820                  imul    word ptr [bp-1Ah] ;~ 17C5:B888
cs=0x17c5;eip=0x00b88b; 	T(bx = ax;);	// 106821                  mov     bx, ax ;~ 17C5:B88B
cs=0x17c5;eip=0x00b88d; 	T(ax = word_52246;);	// 106822                  mov     ax, ds:word_52246 ;~ 17C5:B88D
cs=0x17c5;eip=0x00b890; 	T(NEG(ax));	// 106823                  neg     ax ;~ 17C5:B890
cs=0x17c5;eip=0x00b892; 	T(SAR(ax, 1));	// 106824                  sar     ax, 1 ;~ 17C5:B892
cs=0x17c5;eip=0x00b894; 	T(SAR(ax, 1));	// 106825                  sar     ax, 1 ;~ 17C5:B894
cs=0x17c5;eip=0x00b896; 	T(CMP(*(dw*)(raddr(ds,bx+0x530)), ax));	// 106826                  cmp     [bx+530h], ax ;~ 17C5:B896
cs=0x17c5;eip=0x00b89a; 	J(JLE(loc_31ae1));	// 106827                  jle     short loc_31AE1 ;~ 17C5:B89A
cs=0x17c5;eip=0x00b89c; 	T(CMP(*(db*)(&word_48b66), 0));	// 106828                  cmp     byte ptr word_48B66, 0 ;~ 17C5:B89C
cs=0x17c5;eip=0x00b8a1; 	J(JZ(loc_31ad7));	// 106829                  jz      short loc_31AD7 ;~ 17C5:B8A1
cs=0x17c5;eip=0x00b8a3; 	T(SUB(ax, ax));	// 106830                  sub     ax, ax ;~ 17C5:B8A3
cs=0x17c5;eip=0x00b8a5; 	J(JMP(loc_31ada));	// 106831                  jmp     short loc_31ADA ;~ 17C5:B8A5
loc_31ad7:
	// 6280 
cs=0x17c5;eip=0x00b8a7; 	T(ax = 0x0C;);	// 106835                  mov     ax, 0Ch ;~ 17C5:B8A7
loc_31ada:
	// 6281 
cs=0x17c5;eip=0x00b8aa; 	X(PUSH(ax));	// 106838                  push    ax ;~ 17C5:B8AA
cs=0x17c5;eip=0x00b8ab; 	J(CALL(sub_30074,0));	// 106839                  call    sub_30074 ;~ 17C5:B8AB
cs=0x17c5;eip=0x00b8ae; 	T(ADD(sp, 2));	// 106840                  add     sp, 2 ;~ 17C5:B8AE
loc_31ae1:
	// 6282 
cs=0x17c5;eip=0x00b8b1; 	J(JMP(loc_31ae9));	// 106844                  jmp     short loc_31AE9 ;~ 17C5:B8B1
loc_31ae3:
	// 6283 
cs=0x17c5;eip=0x00b8b3; 	X(word_4ef2a = 0;);	// 106849                  mov     ds:word_4EF2A, 0 ;~ 17C5:B8B3
loc_31ae9:
	// 6284 
cs=0x17c5;eip=0x00b8b9; 	J(JMP(loc_31b0c));	// 106853                  jmp     short loc_31B0C ;~ 17C5:B8B9
loc_31aeb:
	// 6285 
cs=0x17c5;eip=0x00b8bb; 	T(CMP(*(dw*)(raddr(ss,bp-0x1A)), 0x0FFFF));	// 106858                  cmp     word ptr [bp-1Ah], 0FFFFh ;~ 17C5:B8BB
cs=0x17c5;eip=0x00b8bf; 	J(JZ(loc_31b06));	// 106859                  jz      short loc_31B06 ;~ 17C5:B8BF
cs=0x17c5;eip=0x00b8c1; 	T(CMP(word_492ec, 0));	// 106860                  cmp     word_492EC, 0 ;~ 17C5:B8C1
cs=0x17c5;eip=0x00b8c6; 	J(JZ(loc_31afd));	// 106861                  jz      short loc_31AFD ;~ 17C5:B8C6
cs=0x17c5;eip=0x00b8c8; 	T(ax = 8;);	// 106862                  mov     ax, 8 ;~ 17C5:B8C8
cs=0x17c5;eip=0x00b8cb; 	J(JMP(loc_31aff));	// 106863                  jmp     short loc_31AFF ;~ 17C5:B8CB
loc_31afd:
	// 6286 
cs=0x17c5;eip=0x00b8cd; 	T(SUB(ax, ax));	// 106867                  sub     ax, ax ;~ 17C5:B8CD
loc_31aff:
	// 6287 
cs=0x17c5;eip=0x00b8cf; 	X(PUSH(ax));	// 106870                  push    ax ;~ 17C5:B8CF
cs=0x17c5;eip=0x00b8d0; 	J(CALL(sub_30074,0));	// 106871                  call    sub_30074 ;~ 17C5:B8D0
cs=0x17c5;eip=0x00b8d3; 	T(ADD(sp, 2));	// 106872                  add     sp, 2 ;~ 17C5:B8D3
loc_31b06:
	// 6288 
cs=0x17c5;eip=0x00b8d6; 	X(word_4ef2a = 0;);	// 106875                  mov     ds:word_4EF2A, 0 ;~ 17C5:B8D6
loc_31b0c:
	// 6289 
cs=0x17c5;eip=0x00b8dc; 	X(PUSH(*(dw*)(raddr(ss,bp-6))));	// 106878                  push    word ptr [bp-6] ;~ 17C5:B8DC
cs=0x17c5;eip=0x00b8df; 	T(CMP(*(dw*)(raddr(ss,bp-0x30)), 0));	// 106879                  cmp     word ptr [bp-30h], 0 ;~ 17C5:B8DF
cs=0x17c5;eip=0x00b8e3; 	J(JZ(loc_31b1d));	// 106880                  jz      short loc_31B1D ;~ 17C5:B8E3
cs=0x17c5;eip=0x00b8e5; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x30))));	// 106881                  mov     ax, [bp-30h] ;~ 17C5:B8E5
cs=0x17c5;eip=0x00b8e8; 	T(ADD(ax, 5));	// 106882                  add     ax, 5 ;~ 17C5:B8E8
cs=0x17c5;eip=0x00b8eb; 	J(JMP(loc_31b20));	// 106883                  jmp     short loc_31B20 ;~ 17C5:B8EB
loc_31b1d:
	// 6290 
cs=0x17c5;eip=0x00b8ed; 	T(ax = 9;);	// 106887                  mov     ax, 9 ;~ 17C5:B8ED
loc_31b20:
	// 6291 
cs=0x17c5;eip=0x00b8f0; 	X(PUSH(ax));	// 106890                  push    ax ;~ 17C5:B8F0
cs=0x17c5;eip=0x00b8f1; 	X(PUSH(*(word_4ac7c)));	// 106891                  push    word_4AC7C ;~ 17C5:B8F1
cs=0x17c5;eip=0x00b8f5; 	X(PUSH(*(word_4aa98)));	// 106892                  push    word_4AA98 ;~ 17C5:B8F5
cs=0x17c5;eip=0x00b8f9; 	J(CALL(sub_323e9,0));	// 106893                  call    sub_323E9 ;~ 17C5:B8F9
cs=0x17c5;eip=0x00b8fc; 	T(ADD(sp, 8));	// 106894                  add     sp, 8 ;~ 17C5:B8FC
loc_31b2f:
	// 6292 
cs=0x17c5;eip=0x00b8ff; 	T(CMP(word_49928, 0));	// 106898                  cmp     word_49928, 0 ;~ 17C5:B8FF
cs=0x17c5;eip=0x00b904; 	J(JLE(loc_31b7a));	// 106899                  jle     short loc_31B7A ;~ 17C5:B904
cs=0x17c5;eip=0x00b906; 	T(CMP(word_520c6, 0));	// 106900                  cmp     ds:word_520C6, 0 ;~ 17C5:B906
cs=0x17c5;eip=0x00b90b; 	J(JL(loc_31b7a));	// 106901                  jl      short loc_31B7A ;~ 17C5:B90B
cs=0x17c5;eip=0x00b90d; 	T(si = word_520c6;);	// 106902                  mov     si, ds:word_520C6 ;~ 17C5:B90D
cs=0x17c5;eip=0x00b911; 	T(cl = 4;);	// 106903                  mov     cl, 4 ;~ 17C5:B911
cs=0x17c5;eip=0x00b913; 	T(SHL(si, cl));	// 106904                  shl     si, cl ;~ 17C5:B913
cs=0x17c5;eip=0x00b915; 	T(SUB(ax, ax));	// 106905                  sub     ax, ax ;~ 17C5:B915
cs=0x17c5;eip=0x00b917; 	X(PUSH(ax));	// 106906                  push    ax ;~ 17C5:B917
cs=0x17c5;eip=0x00b918; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 106907                  push    word ptr [si-7E50h] ;~ 17C5:B918
cs=0x17c5;eip=0x00b91c; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 106908                  push    word ptr [si-7E52h] ;~ 17C5:B91C
cs=0x17c5;eip=0x00b920; 	J(CALL(sub_326b8,0));	// 106909                  call    sub_326B8 ;~ 17C5:B920
cs=0x17c5;eip=0x00b923; 	T(ADD(sp, 6));	// 106910                  add     sp, 6 ;~ 17C5:B923
cs=0x17c5;eip=0x00b926; 	T(ax = word_492f4;);	// 106911                  mov     ax, word_492F4 ;~ 17C5:B926
cs=0x17c5;eip=0x00b929; 	T(SUB(ax, word_49928));	// 106912                  sub     ax, word_49928 ;~ 17C5:B929
cs=0x17c5;eip=0x00b92d; 	X(PUSH(ax));	// 106913                  push    ax ;~ 17C5:B92D
cs=0x17c5;eip=0x00b92e; 	X(PUSH(word_4f1a2));	// 106914                  push    ds:word_4F1A2 ;~ 17C5:B92E
cs=0x17c5;eip=0x00b932; 	T(bx = word_520c6;);	// 106915                  mov     bx, ds:word_520C6 ;~ 17C5:B932
cs=0x17c5;eip=0x00b936; 	T(cl = 4;);	// 106916                  mov     cl, 4 ;~ 17C5:B936
cs=0x17c5;eip=0x00b938; 	T(SHL(bx, cl));	// 106917                  shl     bx, cl ;~ 17C5:B938
cs=0x17c5;eip=0x00b93a; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E54))));	// 106918                  mov     bx, [bx-7E54h] ;~ 17C5:B93A
cs=0x17c5;eip=0x00b93e; 	T(SHL(bx, 1));	// 106919                  shl     bx, 1 ;~ 17C5:B93E
cs=0x17c5;eip=0x00b940; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 106920                  push    word ptr [bx-680Eh] ;~ 17C5:B940
cs=0x17c5;eip=0x00b944; 	J(CALL(sub_325a1,0));	// 106921                  call    sub_325A1 ;~ 17C5:B944
cs=0x17c5;eip=0x00b947; 	T(ADD(sp, 6));	// 106922                  add     sp, 6 ;~ 17C5:B947
loc_31b7a:
	// 6293 
cs=0x17c5;eip=0x00b94a; 	X(AND(*(db*)(((db*)&word_4f42e)+1), 0x0FD));	// 106926                  and     byte ptr ds:word_4F42E+1, 0FDh ;~ 17C5:B94A
cs=0x17c5;eip=0x00b94f; 	T(bx = word_4e564;);	// 106927                  mov     bx, ds:word_4E564 ;~ 17C5:B94F
cs=0x17c5;eip=0x00b953; 	X(MOV(*(dw*)(raddr(ds,bx+2)), 4));	// 106928                  mov     word ptr [bx+2], 4 ;~ 17C5:B953
cs=0x17c5;eip=0x00b958; 	T(bx = word_4e57c;);	// 106929                  mov     bx, ds:word_4E57C ;~ 17C5:B958
cs=0x17c5;eip=0x00b95c; 	X(MOV(*(dw*)(raddr(ds,bx+2)), 4));	// 106930                  mov     word ptr [bx+2], 4 ;~ 17C5:B95C
cs=0x17c5;eip=0x00b961; 	T(CMP(word_522ce, 0x13));	// 106931                  cmp     ds:word_522CE, 13h ;~ 17C5:B961
cs=0x17c5;eip=0x00b966; 	J(JZ(loc_31b9b));	// 106932                  jz      short loc_31B9B ;~ 17C5:B966
cs=0x17c5;eip=0x00b968; 	J(JMP(loc_31de6));	// 106933                  jmp     loc_31DE6 ;~ 17C5:B968
loc_31b9b:
	// 6294 
cs=0x17c5;eip=0x00b96b; 	T(CMP(word_5268c, 2));	// 106937                  cmp     ds:word_5268C, 2 ;~ 17C5:B96B
cs=0x17c5;eip=0x00b970; 	J(JZ(loc_31bac));	// 106938                  jz      short loc_31BAC ;~ 17C5:B970
cs=0x17c5;eip=0x00b972; 	T(CMP(word_5268c, 0));	// 106939                  cmp     ds:word_5268C, 0 ;~ 17C5:B972
cs=0x17c5;eip=0x00b977; 	J(JZ(loc_31bac));	// 106940                  jz      short loc_31BAC ;~ 17C5:B977
cs=0x17c5;eip=0x00b979; 	J(JMP(loc_31de6));	// 106941                  jmp     loc_31DE6 ;~ 17C5:B979
loc_31bac:
	// 6295 
cs=0x17c5;eip=0x00b97c; 	T(CMP(word_49924, 0x0FFFF));	// 106946                  cmp     word_49924, 0FFFFh ;~ 17C5:B97C
cs=0x17c5;eip=0x00b981; 	J(JNZ(loc_31bb6));	// 106947                  jnz     short loc_31BB6 ;~ 17C5:B981
cs=0x17c5;eip=0x00b983; 	J(JMP(loc_31de6));	// 106948                  jmp     loc_31DE6 ;~ 17C5:B983
loc_31bb6:
	// 6296 
cs=0x17c5;eip=0x00b986; 	T(ax = word_49924;);	// 106952                  mov     ax, word_49924 ;~ 17C5:B986
cs=0x17c5;eip=0x00b989; 	T(AND(ax, 0x7F));	// 106953                  and     ax, 7Fh ;~ 17C5:B989
cs=0x17c5;eip=0x00b98c; 	X(MOV(*(dw*)(raddr(ss,bp-0x28)), ax));	// 106954                  mov     [bp-28h], ax ;~ 17C5:B98C
cs=0x17c5;eip=0x00b98f; 	T(si = ax;);	// 106955                  mov     si, ax ;~ 17C5:B98F
cs=0x17c5;eip=0x00b991; 	T(cl = 4;);	// 106956                  mov     cl, 4 ;~ 17C5:B991
cs=0x17c5;eip=0x00b993; 	T(SHL(si, cl));	// 106957                  shl     si, cl ;~ 17C5:B993
cs=0x17c5;eip=0x00b995; 	T(ax = 0x0FFFF;);	// 106958                  mov     ax, 0FFFFh ;~ 17C5:B995
cs=0x17c5;eip=0x00b998; 	X(PUSH(ax));	// 106959                  push    ax ;~ 17C5:B998
cs=0x17c5;eip=0x00b999; 	T(ax = 1;);	// 106960                  mov     ax, 1 ;~ 17C5:B999
cs=0x17c5;eip=0x00b99c; 	X(PUSH(ax));	// 106961                  push    ax ;~ 17C5:B99C
cs=0x17c5;eip=0x00b99d; 	T(SUB(ax, ax));	// 106962                  sub     ax, ax ;~ 17C5:B99D
cs=0x17c5;eip=0x00b99f; 	X(PUSH(ax));	// 106963                  push    ax ;~ 17C5:B99F
cs=0x17c5;eip=0x00b9a0; 	X(PUSH(ax));	// 106964                  push    ax ;~ 17C5:B9A0
cs=0x17c5;eip=0x00b9a1; 	X(PUSH(ax));	// 106965                  push    ax ;~ 17C5:B9A1
cs=0x17c5;eip=0x00b9a2; 	X(PUSH(ax));	// 106966                  push    ax ;~ 17C5:B9A2
cs=0x17c5;eip=0x00b9a3; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 106967                  push    word ptr [si-7E50h] ;~ 17C5:B9A3
cs=0x17c5;eip=0x00b9a7; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 106968                  push    word ptr [si-7E52h] ;~ 17C5:B9A7
cs=0x17c5;eip=0x00b9ab; 	X(PUSH(*(dw*)(raddr(ss,bp-0x28))));	// 106969                  push    word ptr [bp-28h] ;~ 17C5:B9AB
cs=0x17c5;eip=0x00b9ae; 	J(CALL(sub_32a94,0));	// 106970                  call    sub_32A94 ;~ 17C5:B9AE
cs=0x17c5;eip=0x00b9b1; 	T(ADD(sp, 2));	// 106971                  add     sp, 2 ;~ 17C5:B9B1
cs=0x17c5;eip=0x00b9b4; 	X(PUSH(ax));	// 106972                  push    ax ;~ 17C5:B9B4
cs=0x17c5;eip=0x00b9b5; 	J(CALL(sub_32d72,0));	// 106973                  call    sub_32D72 ;~ 17C5:B9B5
cs=0x17c5;eip=0x00b9b8; 	T(ADD(sp, 0x12));	// 106974                  add     sp, 12h ;~ 17C5:B9B8
cs=0x17c5;eip=0x00b9bb; 	J(CALL(sub_32528,0));	// 106975                  call    sub_32528 ;~ 17C5:B9BB
cs=0x17c5;eip=0x00b9be; 	X(PUSH(*(dw*)(raddr(ss,bp-0x28))));	// 106976                  push    word ptr [bp-28h] ;~ 17C5:B9BE
cs=0x17c5;eip=0x00b9c1; 	J(CALL(sub_329d2,0));	// 106977                  call    sub_329D2 ;~ 17C5:B9C1
cs=0x17c5;eip=0x00b9c4; 	T(ADD(sp, 2));	// 106978                  add     sp, 2 ;~ 17C5:B9C4
cs=0x17c5;eip=0x00b9c7; 	X(PUSH(ax));	// 106979                  push    ax ;~ 17C5:B9C7
cs=0x17c5;eip=0x00b9c8; 	J(CALL(sub_3263b,0));	// 106980                  call    sub_3263B ;~ 17C5:B9C8
cs=0x17c5;eip=0x00b9cb; 	T(ADD(sp, 2));	// 106981                  add     sp, 2 ;~ 17C5:B9CB
cs=0x17c5;eip=0x00b9ce; 	T(ax = 0x0F;);	// 106982                  mov     ax, 0Fh ;~ 17C5:B9CE
cs=0x17c5;eip=0x00b9d1; 	X(PUSH(ax));	// 106983                  push    ax ;~ 17C5:B9D1
cs=0x17c5;eip=0x00b9d2; 	T(ax = 0x0AA;);	// 106984                  mov     ax, 0AAh ;~ 17C5:B9D2
cs=0x17c5;eip=0x00b9d5; 	X(PUSH(ax));	// 106985                  push    ax ;~ 17C5:B9D5
cs=0x17c5;eip=0x00b9d6; 	T(ax = 0x0F4;);	// 106986                  mov     ax, 0F4h ;~ 17C5:B9D6
cs=0x17c5;eip=0x00b9d9; 	X(PUSH(ax));	// 106987                  push    ax ;~ 17C5:B9D9
cs=0x17c5;eip=0x00b9da; 	T(ax = 0x66C4;);	// 106988                  mov     ax, 66C4h ;~ 17C5:B9DA
cs=0x17c5;eip=0x00b9dd; 	X(PUSH(ax));	// 106989                  push    ax ;~ 17C5:B9DD
cs=0x17c5;eip=0x00b9de; 	J(CALL(sub_3032e,0));	// 106990                  call    sub_3032E ;~ 17C5:B9DE
cs=0x17c5;eip=0x00b9e1; 	T(ADD(sp, 8));	// 106992                  add     sp, 8 ;~ 17C5:B9E1
cs=0x17c5;eip=0x00b9e4; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x28))));	// 106993                  mov     bx, [bp-28h] ;~ 17C5:B9E4
cs=0x17c5;eip=0x00b9e7; 	T(cl = 4;);	// 106994                  mov     cl, 4 ;~ 17C5:B9E7
cs=0x17c5;eip=0x00b9e9; 	T(SHL(bx, cl));	// 106995                  shl     bx, cl ;~ 17C5:B9E9
cs=0x17c5;eip=0x00b9eb; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E46))));	// 106996                  mov     bx, [bx-7E46h] ;~ 17C5:B9EB
cs=0x17c5;eip=0x00b9ef; 	T(AND(bx, 0x7F));	// 106997                  and     bx, 7Fh ;~ 17C5:B9EF
cs=0x17c5;eip=0x00b9f2; 	T(SHL(bx, 1));	// 106998                  shl     bx, 1 ;~ 17C5:B9F2
cs=0x17c5;eip=0x00b9f4; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 106999                  push    word ptr [bx-680Eh] ;~ 17C5:B9F4
cs=0x17c5;eip=0x00b9f8; 	T(ax = 0x66C4;);	// 107000                  mov     ax, 66C4h ;~ 17C5:B9F8
cs=0x17c5;eip=0x00b9fb; 	X(PUSH(ax));	// 107001                  push    ax ;~ 17C5:B9FB
cs=0x17c5;eip=0x00b9fc; 	J(CALL(sub_34c1c,0));	// 107002                  call    sub_34C1C ;~ 17C5:B9FC
cs=0x17c5;eip=0x00b9ff; 	T(ADD(sp, 4));	// 107003                  add     sp, 4 ;~ 17C5:B9FF
cs=0x17c5;eip=0x00ba02; 	T(ax = 0x0F;);	// 107004                  mov     ax, 0Fh ;~ 17C5:BA02
cs=0x17c5;eip=0x00ba05; 	X(PUSH(ax));	// 107005                  push    ax ;~ 17C5:BA05
cs=0x17c5;eip=0x00ba06; 	T(ax = 0x82;);	// 107006                  mov     ax, 82h ;~ 17C5:BA06
cs=0x17c5;eip=0x00ba09; 	X(PUSH(ax));	// 107007                  push    ax ;~ 17C5:BA09
cs=0x17c5;eip=0x00ba0a; 	T(ax = 0x66C4;);	// 107008                  mov     ax, 66C4h ;~ 17C5:BA0A
cs=0x17c5;eip=0x00ba0d; 	X(PUSH(ax));	// 107009                  push    ax ;~ 17C5:BA0D
cs=0x17c5;eip=0x00ba0e; 	J(CALL(sub_34c4e,0));	// 107010                  call    sub_34C4E ;~ 17C5:BA0E
cs=0x17c5;eip=0x00ba11; 	T(ADD(sp, 2));	// 107011                  add     sp, 2 ;~ 17C5:BA11
cs=0x17c5;eip=0x00ba14; 	T(SHL(ax, 1));	// 107012                  shl     ax, 1 ;~ 17C5:BA14
cs=0x17c5;eip=0x00ba16; 	T(SUB(ax, 0x10C));	// 107013                  sub     ax, 10Ch ;~ 17C5:BA16
cs=0x17c5;eip=0x00ba19; 	T(NEG(ax));	// 107014                  neg     ax ;~ 17C5:BA19
cs=0x17c5;eip=0x00ba1b; 	X(PUSH(ax));	// 107015                  push    ax ;~ 17C5:BA1B
cs=0x17c5;eip=0x00ba1c; 	T(ax = 0x66C4;);	// 107016                  mov     ax, 66C4h ;~ 17C5:BA1C
cs=0x17c5;eip=0x00ba1f; 	X(PUSH(ax));	// 107017                  push    ax ;~ 17C5:BA1F
cs=0x17c5;eip=0x00ba20; 	J(CALL(sub_3032e,0));	// 107018                  call    sub_3032E ;~ 17C5:BA20
cs=0x17c5;eip=0x00ba23; 	T(ADD(sp, 8));	// 107020                  add     sp, 8 ;~ 17C5:BA23
cs=0x17c5;eip=0x00ba26; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x28))));	// 107021                  mov     bx, [bp-28h] ;~ 17C5:BA26
cs=0x17c5;eip=0x00ba29; 	T(cl = 4;);	// 107022                  mov     cl, 4 ;~ 17C5:BA29
cs=0x17c5;eip=0x00ba2b; 	T(SHL(bx, cl));	// 107023                  shl     bx, cl ;~ 17C5:BA2B
cs=0x17c5;eip=0x00ba2d; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E54))));	// 107024                  mov     bx, [bx-7E54h] ;~ 17C5:BA2D
cs=0x17c5;eip=0x00ba31; 	T(SHL(bx, 1));	// 107025                  shl     bx, 1 ;~ 17C5:BA31
cs=0x17c5;eip=0x00ba33; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 107026                  push    word ptr [bx-680Eh] ;~ 17C5:BA33
cs=0x17c5;eip=0x00ba37; 	J(CALL(sub_34c4e,0));	// 107027                  call    sub_34C4E ;~ 17C5:BA37
cs=0x17c5;eip=0x00ba3a; 	T(ADD(sp, 2));	// 107028                  add     sp, 2 ;~ 17C5:BA3A
cs=0x17c5;eip=0x00ba3d; 	T(OR(ax, ax));	// 107029                  or      ax, ax ;~ 17C5:BA3D
cs=0x17c5;eip=0x00ba3f; 	J(JZ(loc_31ce1));	// 107030                  jz      short loc_31CE1 ;~ 17C5:BA3F
cs=0x17c5;eip=0x00ba41; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x28))));	// 107031                  mov     bx, [bp-28h] ;~ 17C5:BA41
cs=0x17c5;eip=0x00ba44; 	T(cl = 4;);	// 107032                  mov     cl, 4 ;~ 17C5:BA44
cs=0x17c5;eip=0x00ba46; 	T(SHL(bx, cl));	// 107033                  shl     bx, cl ;~ 17C5:BA46
cs=0x17c5;eip=0x00ba48; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E46))));	// 107034                  mov     bx, [bx-7E46h] ;~ 17C5:BA48
cs=0x17c5;eip=0x00ba4c; 	T(AND(bx, 0x7F));	// 107035                  and     bx, 7Fh ;~ 17C5:BA4C
cs=0x17c5;eip=0x00ba4f; 	T(SHL(bx, 1));	// 107036                  shl     bx, 1 ;~ 17C5:BA4F
cs=0x17c5;eip=0x00ba51; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 107037                  push    word ptr [bx-680Eh] ;~ 17C5:BA51
cs=0x17c5;eip=0x00ba55; 	J(CALL(sub_34c4e,0));	// 107038                  call    sub_34C4E ;~ 17C5:BA55
cs=0x17c5;eip=0x00ba58; 	T(ADD(sp, 2));	// 107039                  add     sp, 2 ;~ 17C5:BA58
cs=0x17c5;eip=0x00ba5b; 	T(OR(ax, ax));	// 107040                  or      ax, ax ;~ 17C5:BA5B
cs=0x17c5;eip=0x00ba5d; 	J(JZ(loc_31c94));	// 107041                  jz      short loc_31C94 ;~ 17C5:BA5D
cs=0x17c5;eip=0x00ba5f; 	T(ax = 0x5BED;);	// 107042                  mov     ax, 5BEDh ;~ 17C5:BA5F
cs=0x17c5;eip=0x00ba62; 	J(JMP(loc_31c97));	// 107043                  jmp     short loc_31C97 ;~ 17C5:BA62
loc_31c94:
	// 6297 
cs=0x17c5;eip=0x00ba64; 	T(ax = 0x5BF2;);	// 107047                  mov     ax, 5BF2h ;~ 17C5:BA64
loc_31c97:
	// 6298 
cs=0x17c5;eip=0x00ba67; 	X(PUSH(ax));	// 107050                  push    ax ;~ 17C5:BA67
cs=0x17c5;eip=0x00ba68; 	T(ax = 0x66C4;);	// 107051                  mov     ax, 66C4h ;~ 17C5:BA68
cs=0x17c5;eip=0x00ba6b; 	X(PUSH(ax));	// 107052                  push    ax ;~ 17C5:BA6B
cs=0x17c5;eip=0x00ba6c; 	J(CALL(sub_34c1c,0));	// 107053                  call    sub_34C1C ;~ 17C5:BA6C
cs=0x17c5;eip=0x00ba6f; 	T(ADD(sp, 4));	// 107054                  add     sp, 4 ;~ 17C5:BA6F
cs=0x17c5;eip=0x00ba72; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x28))));	// 107055                  mov     bx, [bp-28h] ;~ 17C5:BA72
cs=0x17c5;eip=0x00ba75; 	T(cl = 4;);	// 107056                  mov     cl, 4 ;~ 17C5:BA75
cs=0x17c5;eip=0x00ba77; 	T(SHL(bx, cl));	// 107057                  shl     bx, cl ;~ 17C5:BA77
cs=0x17c5;eip=0x00ba79; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E54))));	// 107058                  mov     bx, [bx-7E54h] ;~ 17C5:BA79
cs=0x17c5;eip=0x00ba7d; 	T(SHL(bx, 1));	// 107059                  shl     bx, 1 ;~ 17C5:BA7D
cs=0x17c5;eip=0x00ba7f; 	X(PUSH(*(dw*)(raddr(ds,bx-0x680E))));	// 107060                  push    word ptr [bx-680Eh] ;~ 17C5:BA7F
cs=0x17c5;eip=0x00ba83; 	T(ax = 0x66C4;);	// 107061                  mov     ax, 66C4h ;~ 17C5:BA83
cs=0x17c5;eip=0x00ba86; 	X(PUSH(ax));	// 107062                  push    ax ;~ 17C5:BA86
cs=0x17c5;eip=0x00ba87; 	J(CALL(sub_34bdc,0));	// 107063                  call    sub_34BDC ;~ 17C5:BA87
cs=0x17c5;eip=0x00ba8a; 	T(ADD(sp, 4));	// 107064                  add     sp, 4 ;~ 17C5:BA8A
cs=0x17c5;eip=0x00ba8d; 	T(ax = 0x0F;);	// 107065                  mov     ax, 0Fh ;~ 17C5:BA8D
cs=0x17c5;eip=0x00ba90; 	X(PUSH(ax));	// 107066                  push    ax ;~ 17C5:BA90
cs=0x17c5;eip=0x00ba91; 	T(ax = 0x88;);	// 107067                  mov     ax, 88h ;~ 17C5:BA91
cs=0x17c5;eip=0x00ba94; 	X(PUSH(ax));	// 107068                  push    ax ;~ 17C5:BA94
cs=0x17c5;eip=0x00ba95; 	T(ax = 0x66C4;);	// 107069                  mov     ax, 66C4h ;~ 17C5:BA95
cs=0x17c5;eip=0x00ba98; 	X(PUSH(ax));	// 107070                  push    ax ;~ 17C5:BA98
cs=0x17c5;eip=0x00ba99; 	J(CALL(sub_34c4e,0));	// 107071                  call    sub_34C4E ;~ 17C5:BA99
cs=0x17c5;eip=0x00ba9c; 	T(ADD(sp, 2));	// 107072                  add     sp, 2 ;~ 17C5:BA9C
cs=0x17c5;eip=0x00ba9f; 	T(SHL(ax, 1));	// 107073                  shl     ax, 1 ;~ 17C5:BA9F
cs=0x17c5;eip=0x00baa1; 	T(SUB(ax, 0x10C));	// 107074                  sub     ax, 10Ch ;~ 17C5:BAA1
cs=0x17c5;eip=0x00baa4; 	T(NEG(ax));	// 107075                  neg     ax ;~ 17C5:BAA4
cs=0x17c5;eip=0x00baa6; 	X(PUSH(ax));	// 107076                  push    ax ;~ 17C5:BAA6
cs=0x17c5;eip=0x00baa7; 	T(ax = 0x66C4;);	// 107077                  mov     ax, 66C4h ;~ 17C5:BAA7
cs=0x17c5;eip=0x00baaa; 	X(PUSH(ax));	// 107078                  push    ax ;~ 17C5:BAAA
cs=0x17c5;eip=0x00baab; 	J(CALL(sub_3032e,0));	// 107079                  call    sub_3032E ;~ 17C5:BAAB
cs=0x17c5;eip=0x00baae; 	T(ADD(sp, 8));	// 107081                  add     sp, 8 ;~ 17C5:BAAE
loc_31ce1:
	// 6299 
cs=0x17c5;eip=0x00bab1; 	T(CMP(word_5268c, 0));	// 107084                  cmp     ds:word_5268C, 0 ;~ 17C5:BAB1
cs=0x17c5;eip=0x00bab6; 	J(JNZ(loc_31d23));	// 107085                  jnz     short loc_31D23 ;~ 17C5:BAB6
cs=0x17c5;eip=0x00bab8; 	T(si = word_49924;);	// 107086                  mov     si, word_49924 ;~ 17C5:BAB8
cs=0x17c5;eip=0x00babc; 	T(cl = 4;);	// 107087                  mov     cl, 4 ;~ 17C5:BABC
cs=0x17c5;eip=0x00babe; 	T(SHL(si, cl));	// 107088                  shl     si, cl ;~ 17C5:BABE
cs=0x17c5;eip=0x00bac0; 	T(SUB(ax, ax));	// 107089                  sub     ax, ax ;~ 17C5:BAC0
cs=0x17c5;eip=0x00bac2; 	X(PUSH(ax));	// 107090                  push    ax ;~ 17C5:BAC2
cs=0x17c5;eip=0x00bac3; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 107091                  push    word ptr [si-7E50h] ;~ 17C5:BAC3
cs=0x17c5;eip=0x00bac7; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 107092                  push    word ptr [si-7E52h] ;~ 17C5:BAC7
cs=0x17c5;eip=0x00bacb; 	J(CALL(sub_326b8,0));	// 107093                  call    sub_326B8 ;~ 17C5:BACB
cs=0x17c5;eip=0x00bace; 	T(ADD(sp, 6));	// 107094                  add     sp, 6 ;~ 17C5:BACE
cs=0x17c5;eip=0x00bad1; 	T(ax = 0x0F;);	// 107095                  mov     ax, 0Fh ;~ 17C5:BAD1
cs=0x17c5;eip=0x00bad4; 	X(PUSH(ax));	// 107096                  push    ax ;~ 17C5:BAD4
cs=0x17c5;eip=0x00bad5; 	J(CALL(sub_30074,0));	// 107097                  call    sub_30074 ;~ 17C5:BAD5
cs=0x17c5;eip=0x00bad8; 	T(ADD(sp, 2));	// 107098                  add     sp, 2 ;~ 17C5:BAD8
cs=0x17c5;eip=0x00badb; 	T(SUB(ax, ax));	// 107099                  sub     ax, ax ;~ 17C5:BADB
cs=0x17c5;eip=0x00badd; 	X(PUSH(ax));	// 107100                  push    ax ;~ 17C5:BADD
cs=0x17c5;eip=0x00bade; 	T(ax = 8;);	// 107101                  mov     ax, 8 ;~ 17C5:BADE
cs=0x17c5;eip=0x00bae1; 	X(PUSH(ax));	// 107102                  push    ax ;~ 17C5:BAE1
cs=0x17c5;eip=0x00bae2; 	X(PUSH(*(word_4ac7c)));	// 107103                  push    word_4AC7C ;~ 17C5:BAE2
cs=0x17c5;eip=0x00bae6; 	X(PUSH(*(word_4aa98)));	// 107104                  push    word_4AA98 ;~ 17C5:BAE6
cs=0x17c5;eip=0x00baea; 	J(CALL(sub_323e9,0));	// 107105                  call    sub_323E9 ;~ 17C5:BAEA
cs=0x17c5;eip=0x00baed; 	T(ADD(sp, 8));	// 107106                  add     sp, 8 ;~ 17C5:BAED
cs=0x17c5;eip=0x00baf0; 	J(JMP(loc_31dc9));	// 107107                  jmp     loc_31DC9 ;~ 17C5:BAF0
loc_31d23:
	// 6300 
cs=0x17c5;eip=0x00baf3; 	T(ax = word_49924;);	// 107111                  mov     ax, word_49924 ;~ 17C5:BAF3
cs=0x17c5;eip=0x00baf6; 	T(CMP(word_51376, ax));	// 107112                  cmp     ds:word_51376, ax ;~ 17C5:BAF6
cs=0x17c5;eip=0x00bafa; 	J(JNZ(loc_31d45));	// 107113                  jnz     short loc_31D45 ;~ 17C5:BAFA
cs=0x17c5;eip=0x00bafc; 	T(ax = 0x0F;);	// 107114                  mov     ax, 0Fh ;~ 17C5:BAFC
cs=0x17c5;eip=0x00baff; 	X(PUSH(ax));	// 107115                  push    ax ;~ 17C5:BAFF
cs=0x17c5;eip=0x00bb00; 	T(ax = 0x8E;);	// 107116                  mov     ax, 8Eh ;~ 17C5:BB00
cs=0x17c5;eip=0x00bb03; 	X(PUSH(ax));	// 107117                  push    ax ;~ 17C5:BB03
cs=0x17c5;eip=0x00bb04; 	T(ax = 0x0EC;);	// 107118                  mov     ax, 0ECh ;~ 17C5:BB04
cs=0x17c5;eip=0x00bb07; 	X(PUSH(ax));	// 107119                  push    ax ;~ 17C5:BB07
cs=0x17c5;eip=0x00bb08; 	T(ax = 0x5BF3;);	// 107120                  mov     ax, 5BF3h ;~ 17C5:BB08
cs=0x17c5;eip=0x00bb0b; 	X(PUSH(ax));	// 107121                  push    ax ;~ 17C5:BB0B
cs=0x17c5;eip=0x00bb0c; 	J(CALL(sub_3032e,0));	// 107122                  call    sub_3032E ;~ 17C5:BB0C
cs=0x17c5;eip=0x00bb0f; 	T(ADD(sp, 8));	// 107124                  add     sp, 8 ;~ 17C5:BB0F
cs=0x17c5;eip=0x00bb12; 	J(JMP(loc_31dc9));	// 107125                  jmp     loc_31DC9 ;~ 17C5:BB12
loc_31d45:
	// 6301 
cs=0x17c5;eip=0x00bb15; 	T(ax = word_49924;);	// 107129                  mov     ax, word_49924 ;~ 17C5:BB15
cs=0x17c5;eip=0x00bb18; 	T(CMP(word_51388, ax));	// 107130                  cmp     ds:word_51388, ax ;~ 17C5:BB18
cs=0x17c5;eip=0x00bb1c; 	J(JNZ(loc_31d66));	// 107131                  jnz     short loc_31D66 ;~ 17C5:BB1C
cs=0x17c5;eip=0x00bb1e; 	T(ax = 0x0F;);	// 107132                  mov     ax, 0Fh ;~ 17C5:BB1E
cs=0x17c5;eip=0x00bb21; 	X(PUSH(ax));	// 107133                  push    ax ;~ 17C5:BB21
cs=0x17c5;eip=0x00bb22; 	T(ax = 0x8E;);	// 107134                  mov     ax, 8Eh ;~ 17C5:BB22
cs=0x17c5;eip=0x00bb25; 	X(PUSH(ax));	// 107135                  push    ax ;~ 17C5:BB25
cs=0x17c5;eip=0x00bb26; 	T(ax = 0x0EC;);	// 107136                  mov     ax, 0ECh ;~ 17C5:BB26
cs=0x17c5;eip=0x00bb29; 	X(PUSH(ax));	// 107137                  push    ax ;~ 17C5:BB29
cs=0x17c5;eip=0x00bb2a; 	T(ax = 0x5C02;);	// 107138                  mov     ax, 5C02h ;~ 17C5:BB2A
cs=0x17c5;eip=0x00bb2d; 	X(PUSH(ax));	// 107139                  push    ax ;~ 17C5:BB2D
cs=0x17c5;eip=0x00bb2e; 	J(CALL(sub_3032e,0));	// 107140                  call    sub_3032E ;~ 17C5:BB2E
cs=0x17c5;eip=0x00bb31; 	T(ADD(sp, 8));	// 107142                  add     sp, 8 ;~ 17C5:BB31
cs=0x17c5;eip=0x00bb34; 	J(JMP(loc_31dc9));	// 107143                  jmp     short loc_31DC9 ;~ 17C5:BB34
loc_31d66:
	// 6302 
cs=0x17c5;eip=0x00bb36; 	T(TEST(*(db*)(&word_49918), 1));	// 107147                  test    byte ptr word_49918, 1 ;~ 17C5:BB36
cs=0x17c5;eip=0x00bb3b; 	J(JNZ(loc_31dc9));	// 107148                  jnz     short loc_31DC9 ;~ 17C5:BB3B
cs=0x17c5;eip=0x00bb3d; 	T(CMP(word_492ea, 2));	// 107149                  cmp     word_492EA, 2 ;~ 17C5:BB3D
cs=0x17c5;eip=0x00bb42; 	J(JGE(loc_31d89));	// 107150                  jge     short loc_31D89 ;~ 17C5:BB42
cs=0x17c5;eip=0x00bb44; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x28))));	// 107151                  mov     bx, [bp-28h] ;~ 17C5:BB44
cs=0x17c5;eip=0x00bb47; 	T(cl = 4;);	// 107152                  mov     cl, 4 ;~ 17C5:BB47
cs=0x17c5;eip=0x00bb49; 	T(SHL(bx, cl));	// 107153                  shl     bx, cl ;~ 17C5:BB49
cs=0x17c5;eip=0x00bb4b; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E46))));	// 107154                  mov     bx, [bx-7E46h] ;~ 17C5:BB4B
cs=0x17c5;eip=0x00bb4f; 	T(AND(bx, 0x7F));	// 107155                  and     bx, 7Fh ;~ 17C5:BB4F
cs=0x17c5;eip=0x00bb52; 	T(TEST(*(raddr(ds,bx-0x690C)), 0x0C0));	// 107156                  test    byte ptr [bx-690Ch], 0C0h ;~ 17C5:BB52
cs=0x17c5;eip=0x00bb57; 	J(JNZ(loc_31db3));	// 107157                  jnz     short loc_31DB3 ;~ 17C5:BB57
loc_31d89:
	// 6303 
cs=0x17c5;eip=0x00bb59; 	T(MOV(si, *(dw*)(raddr(ss,bp-0x28))));	// 107160                  mov     si, [bp-28h] ;~ 17C5:BB59
cs=0x17c5;eip=0x00bb5c; 	T(cl = 4;);	// 107161                  mov     cl, 4 ;~ 17C5:BB5C
cs=0x17c5;eip=0x00bb5e; 	T(SHL(si, cl));	// 107162                  shl     si, cl ;~ 17C5:BB5E
cs=0x17c5;eip=0x00bb60; 	T(TEST(*(dw*)(raddr(ds,si-0x7E4C)), 0x500));	// 107163                  test    word ptr [si-7E4Ch], 500h ;~ 17C5:BB60
cs=0x17c5;eip=0x00bb66; 	J(JNZ(loc_31db3));	// 107164                  jnz     short loc_31DB3 ;~ 17C5:BB66
cs=0x17c5;eip=0x00bb68; 	T(MOV(di, *(dw*)(raddr(ds,si-0x7E50))));	// 107165                  mov     di, [si-7E50h] ;~ 17C5:BB68
cs=0x17c5;eip=0x00bb6c; 	T(cl = 0x0B;);	// 107166                  mov     cl, 0Bh ;~ 17C5:BB6C
cs=0x17c5;eip=0x00bb6e; 	T(SHR(di, cl));	// 107167                  shr     di, cl ;~ 17C5:BB6E
cs=0x17c5;eip=0x00bb70; 	T(cl = 4;);	// 107168                  mov     cl, 4 ;~ 17C5:BB70
cs=0x17c5;eip=0x00bb72; 	T(SHL(di, cl));	// 107169                  shl     di, cl ;~ 17C5:BB72
cs=0x17c5;eip=0x00bb74; 	T(MOV(bx, *(dw*)(raddr(ds,si-0x7E52))));	// 107170                  mov     bx, [si-7E52h] ;~ 17C5:BB74
cs=0x17c5;eip=0x00bb78; 	T(cl = 0x0B;);	// 107171                  mov     cl, 0Bh ;~ 17C5:BB78
cs=0x17c5;eip=0x00bb7a; 	T(SHR(bx, cl));	// 107172                  shr     bx, cl ;~ 17C5:BB7A
cs=0x17c5;eip=0x00bb7c; 	T(TEST(*(raddr(ds,bx+di-0x7904)), 1));	// 107173                  test    byte ptr [bx+di-7904h], 1 ;~ 17C5:BB7C
cs=0x17c5;eip=0x00bb81; 	J(JZ(loc_31dc9));	// 107174                  jz      short loc_31DC9 ;~ 17C5:BB81
loc_31db3:
	// 6304 
cs=0x17c5;eip=0x00bb83; 	T(ax = 0x0F;);	// 107178                  mov     ax, 0Fh ;~ 17C5:BB83
cs=0x17c5;eip=0x00bb86; 	X(PUSH(ax));	// 107179                  push    ax ;~ 17C5:BB86
cs=0x17c5;eip=0x00bb87; 	T(ax = 0x8E;);	// 107180                  mov     ax, 8Eh ;~ 17C5:BB87
cs=0x17c5;eip=0x00bb8a; 	X(PUSH(ax));	// 107181                  push    ax ;~ 17C5:BB8A
cs=0x17c5;eip=0x00bb8b; 	T(ax = 0x0FC;);	// 107182                  mov     ax, 0FCh ;~ 17C5:BB8B
cs=0x17c5;eip=0x00bb8e; 	X(PUSH(ax));	// 107183                  push    ax ;~ 17C5:BB8E
cs=0x17c5;eip=0x00bb8f; 	T(ax = 0x5C13;);	// 107184                  mov     ax, 5C13h ;~ 17C5:BB8F
cs=0x17c5;eip=0x00bb92; 	X(PUSH(ax));	// 107185                  push    ax ;~ 17C5:BB92
cs=0x17c5;eip=0x00bb93; 	J(CALL(sub_3032e,0));	// 107186                  call    sub_3032E ;~ 17C5:BB93
cs=0x17c5;eip=0x00bb96; 	T(ADD(sp, 8));	// 107188                  add     sp, 8 ;~ 17C5:BB96
loc_31dc9:
	// 6305 
cs=0x17c5;eip=0x00bb99; 	T(ax = word_4e2f8;);	// 107192                  mov     ax, ds:word_4E2F8 ;~ 17C5:BB99
cs=0x17c5;eip=0x00bb9c; 	T(ADD(ax, word_52ae2));	// 107193                  add     ax, ds:word_52AE2 ;~ 17C5:BB9C
cs=0x17c5;eip=0x00bba0; 	T(SUB(ax, word_4ef30));	// 107194                  sub     ax, ds:word_4EF30 ;~ 17C5:BBA0
cs=0x17c5;eip=0x00bba4; 	X(PUSH(ax));	// 107195                  push    ax ;~ 17C5:BBA4
cs=0x17c5;eip=0x00bba5; 	J(CALL(sub_34dc0,0));	// 107196                  call    sub_34DC0 ;~ 17C5:BBA5
cs=0x17c5;eip=0x00bba8; 	T(ADD(sp, 2));	// 107197                  add     sp, 2 ;~ 17C5:BBA8
cs=0x17c5;eip=0x00bbab; 	T(CMP(ax, 0x2000));	// 107198                  cmp     ax, 2000h ;~ 17C5:BBAB
cs=0x17c5;eip=0x00bbae; 	J(JLE(loc_31de6));	// 107199                  jle     short loc_31DE6 ;~ 17C5:BBAE
cs=0x17c5;eip=0x00bbb0; 	X(word_49924 = 0x0FFFF;);	// 107200                  mov     word_49924, 0FFFFh ;~ 17C5:BBB0
loc_31de6:
	// 6306 
cs=0x17c5;eip=0x00bbb6; 	T(ax = 1;);	// 107204                  mov     ax, 1 ;~ 17C5:BBB6
cs=0x17c5;eip=0x00bbb9; 	X(PUSH(ax));	// 107205                  push    ax ;~ 17C5:BBB9
cs=0x17c5;eip=0x00bbba; 	J(CALL(sub_3344e,0));	// 107206                  call    sub_3344E ;~ 17C5:BBBA
cs=0x17c5;eip=0x00bbbd; 	T(ADD(sp, 2));	// 107207                  add     sp, 2 ;~ 17C5:BBBD
cs=0x17c5;eip=0x00bbc0; 	X(word_4ef36 = ax;);	// 107208                  mov     ds:word_4EF36, ax ;~ 17C5:BBC0
cs=0x17c5;eip=0x00bbc3; 	T(CMP(word_5268c, 1));	// 107209                  cmp     ds:word_5268C, 1 ;~ 17C5:BBC3
cs=0x17c5;eip=0x00bbc8; 	J(JZ(loc_31dfd));	// 107210                  jz      short loc_31DFD ;~ 17C5:BBC8
cs=0x17c5;eip=0x00bbca; 	J(JMP(loc_31efd));	// 107211                  jmp     loc_31EFD ;~ 17C5:BBCA
loc_31dfd:
	// 6307 
cs=0x17c5;eip=0x00bbcd; 	T(CMP(word_520c0, 0));	// 107215                  cmp     ds:word_520C0, 0 ;~ 17C5:BBCD
cs=0x17c5;eip=0x00bbd2; 	J(JZ(loc_31e07));	// 107216                  jz      short loc_31E07 ;~ 17C5:BBD2
cs=0x17c5;eip=0x00bbd4; 	J(JMP(loc_31efd));	// 107217                  jmp     loc_31EFD ;~ 17C5:BBD4
loc_31e07:
	// 6308 
cs=0x17c5;eip=0x00bbd7; 	T(TEST(*(db*)(&word_49922), 0x80));	// 107221                  test    byte ptr word_49922, 80h ;~ 17C5:BBD7
cs=0x17c5;eip=0x00bbdc; 	J(JZ(loc_31e11));	// 107222                  jz      short loc_31E11 ;~ 17C5:BBDC
cs=0x17c5;eip=0x00bbde; 	J(JMP(loc_31efd));	// 107223                  jmp     loc_31EFD ;~ 17C5:BBDE
loc_31e11:
	// 6309 
cs=0x17c5;eip=0x00bbe1; 	T(ax = 0x24;);	// 107227                  mov     ax, 24h ; '$' ;~ 17C5:BBE1
cs=0x17c5;eip=0x00bbe4; 	X(IMUL1_2(word_49922));	// 107228                  imul    word_49922 ;~ 17C5:BBE4
cs=0x17c5;eip=0x00bbe8; 	T(si = ax;);	// 107229                  mov     si, ax ;~ 17C5:BBE8
cs=0x17c5;eip=0x00bbea; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 107230                  push    word ptr [si-76A8h] ;~ 17C5:BBEA
cs=0x17c5;eip=0x00bbee; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 107231                  push    word ptr [si-76AAh] ;~ 17C5:BBEE
cs=0x17c5;eip=0x00bbf2; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 107232                  push    word ptr [si-76ACh] ;~ 17C5:BBF2
cs=0x17c5;eip=0x00bbf6; 	J(CALL(sub_326b8,0));	// 107233                  call    sub_326B8 ;~ 17C5:BBF6
cs=0x17c5;eip=0x00bbf9; 	T(ADD(sp, 6));	// 107234                  add     sp, 6 ;~ 17C5:BBF9
cs=0x17c5;eip=0x00bbfc; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 107235                  cmp     word_4AA98, 0FFFFh ;~ 17C5:BBFC
cs=0x17c5;eip=0x00bc01; 	J(JNZ(loc_31e36));	// 107236                  jnz     short loc_31E36 ;~ 17C5:BC01
cs=0x17c5;eip=0x00bc03; 	J(JMP(loc_31efd));	// 107237                  jmp     loc_31EFD ;~ 17C5:BC03
loc_31e36:
	// 6310 
cs=0x17c5;eip=0x00bc06; 	T(CMP(word_492ec, 0));	// 107241                  cmp     word_492EC, 0 ;~ 17C5:BC06
cs=0x17c5;eip=0x00bc0b; 	J(JZ(loc_31e42));	// 107242                  jz      short loc_31E42 ;~ 17C5:BC0B
cs=0x17c5;eip=0x00bc0d; 	T(ax = 8;);	// 107243                  mov     ax, 8 ;~ 17C5:BC0D
cs=0x17c5;eip=0x00bc10; 	J(JMP(loc_31e44));	// 107244                  jmp     short loc_31E44 ;~ 17C5:BC10
loc_31e42:
	// 6311 
cs=0x17c5;eip=0x00bc12; 	T(SUB(ax, ax));	// 107248                  sub     ax, ax ;~ 17C5:BC12
loc_31e44:
	// 6312 
cs=0x17c5;eip=0x00bc14; 	X(PUSH(ax));	// 107251                  push    ax ;~ 17C5:BC14
cs=0x17c5;eip=0x00bc15; 	J(CALL(sub_30074,0));	// 107252                  call    sub_30074 ;~ 17C5:BC15
cs=0x17c5;eip=0x00bc18; 	T(ADD(sp, 2));	// 107253                  add     sp, 2 ;~ 17C5:BC18
cs=0x17c5;eip=0x00bc1b; 	X(MOV(*(dw*)(raddr(ss,bp-6)), 0));	// 107254                  mov     word ptr [bp-6], 0 ;~ 17C5:BC1B
cs=0x17c5;eip=0x00bc20; 	T(si = word_492e2;);	// 107255                  mov     si, word_492E2 ;~ 17C5:BC20
cs=0x17c5;eip=0x00bc24; 	T(cl = 2;);	// 107256                  mov     cl, 2 ;~ 17C5:BC24
cs=0x17c5;eip=0x00bc26; 	T(SHL(si, cl));	// 107257                  shl     si, cl ;~ 17C5:BC26
cs=0x17c5;eip=0x00bc28; 	T(ax = 0x1A;);	// 107258                  mov     ax, 1Ah ;~ 17C5:BC28
cs=0x17c5;eip=0x00bc2b; 	X(IMUL1_2(*(dw*)(raddr(ds,si+0x7F2))));	// 107259                  imul    word ptr [si+7F2h] ;~ 17C5:BC2B
cs=0x17c5;eip=0x00bc2f; 	T(bx = ax;);	// 107260                  mov     bx, ax ;~ 17C5:BC2F
cs=0x17c5;eip=0x00bc31; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x82C))));	// 107261                  mov     ax, [bx+82Ch] ;~ 17C5:BC31
cs=0x17c5;eip=0x00bc35; 	X(MOV(*(dw*)(raddr(ss,bp-0x1A)), ax));	// 107262                  mov     [bp-1Ah], ax ;~ 17C5:BC35
cs=0x17c5;eip=0x00bc38; 	T(CMP(*(dw*)(raddr(ds,si+0x7F4)), 0));	// 107263                  cmp     word ptr [si+7F4h], 0 ;~ 17C5:BC38
cs=0x17c5;eip=0x00bc3d; 	J(JZ(loc_31ee8));	// 107264                  jz      short loc_31EE8 ;~ 17C5:BC3D
cs=0x17c5;eip=0x00bc3f; 	T(ax = 0x12;);	// 107265                  mov     ax, 12h ;~ 17C5:BC3F
cs=0x17c5;eip=0x00bc42; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x1A))));	// 107266                  imul    word ptr [bp-1Ah] ;~ 17C5:BC42
cs=0x17c5;eip=0x00bc45; 	T(bx = ax;);	// 107267                  mov     bx, ax ;~ 17C5:BC45
cs=0x17c5;eip=0x00bc47; 	T(CMP(*(dw*)(raddr(ds,bx+0x534)), 7));	// 107268                  cmp     word ptr [bx+534h], 7 ;~ 17C5:BC47
cs=0x17c5;eip=0x00bc4c; 	J(JNZ(loc_31ee8));	// 107269                  jnz     short loc_31EE8 ;~ 17C5:BC4C
cs=0x17c5;eip=0x00bc4e; 	T(ax = 0x0F;);	// 107270                  mov     ax, 0Fh ;~ 17C5:BC4E
cs=0x17c5;eip=0x00bc51; 	X(PUSH(ax));	// 107271                  push    ax ;~ 17C5:BC51
cs=0x17c5;eip=0x00bc52; 	J(CALL(sub_30074,0));	// 107272                  call    sub_30074 ;~ 17C5:BC52
cs=0x17c5;eip=0x00bc55; 	T(ADD(sp, 2));	// 107273                  add     sp, 2 ;~ 17C5:BC55
cs=0x17c5;eip=0x00bc58; 	T(ax = *(word_4ac7c););	// 107274                  mov     ax, word_4AC7C ;~ 17C5:BC58
cs=0x17c5;eip=0x00bc5b; 	T(SUB(ax, 0x38));	// 107275                  sub     ax, 38h ; '8' ;~ 17C5:BC5B
cs=0x17c5;eip=0x00bc5e; 	X(PUSH(ax));	// 107276                  push    ax ;~ 17C5:BC5E
cs=0x17c5;eip=0x00bc5f; 	T(ax = *(word_4aa98););	// 107277                  mov     ax, word_4AA98 ;~ 17C5:BC5F
cs=0x17c5;eip=0x00bc62; 	T(SUB(ax, 0x0A0));	// 107278                  sub     ax, 0A0h ;~ 17C5:BC62
cs=0x17c5;eip=0x00bc65; 	X(PUSH(ax));	// 107279                  push    ax ;~ 17C5:BC65
cs=0x17c5;eip=0x00bc66; 	J(CALL(sub_331d6,0));	// 107280                  call    sub_331D6 ;~ 17C5:BC66
cs=0x17c5;eip=0x00bc69; 	T(ADD(sp, 4));	// 107281                  add     sp, 4 ;~ 17C5:BC69
cs=0x17c5;eip=0x00bc6c; 	T(CMP(ax, 0x30));	// 107282                  cmp     ax, 30h ; '0' ;~ 17C5:BC6C
cs=0x17c5;eip=0x00bc6f; 	J(JGE(loc_31ee8));	// 107283                  jge     short loc_31EE8 ;~ 17C5:BC6F
cs=0x17c5;eip=0x00bc71; 	T(ax = word_52246;);	// 107284                  mov     ax, ds:word_52246 ;~ 17C5:BC71
cs=0x17c5;eip=0x00bc74; 	T(NEG(ax));	// 107285                  neg     ax ;~ 17C5:BC74
cs=0x17c5;eip=0x00bc76; 	T(si = ax;);	// 107286                  mov     si, ax ;~ 17C5:BC76
cs=0x17c5;eip=0x00bc78; 	T(ax = 0x12;);	// 107287                  mov     ax, 12h ;~ 17C5:BC78
cs=0x17c5;eip=0x00bc7b; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x1A))));	// 107288                  imul    word ptr [bp-1Ah] ;~ 17C5:BC7B
cs=0x17c5;eip=0x00bc7e; 	T(bx = ax;);	// 107289                  mov     bx, ax ;~ 17C5:BC7E
cs=0x17c5;eip=0x00bc80; 	T(MOV(di, *(dw*)(raddr(ds,bx+0x530))));	// 107290                  mov     di, [bx+530h] ;~ 17C5:BC80
cs=0x17c5;eip=0x00bc84; 	T(ax = si;);	// 107291                  mov     ax, si ;~ 17C5:BC84
cs=0x17c5;eip=0x00bc86; 	T(cl = 3;);	// 107292                  mov     cl, 3 ;~ 17C5:BC86
cs=0x17c5;eip=0x00bc88; 	T(SAR(ax, cl));	// 107293                  sar     ax, cl ;~ 17C5:BC88
cs=0x17c5;eip=0x00bc8a; 	T(CMP(ax, di));	// 107294                  cmp     ax, di ;~ 17C5:BC8A
cs=0x17c5;eip=0x00bc8c; 	J(JGE(loc_31ee8));	// 107295                  jge     short loc_31EE8 ;~ 17C5:BC8C
cs=0x17c5;eip=0x00bc8e; 	X(word_4ef2a = 1;);	// 107296                  mov     ds:word_4EF2A, 1 ;~ 17C5:BC8E
cs=0x17c5;eip=0x00bc94; 	X(MOV(*(dw*)(raddr(ss,bp-6)), 1));	// 107297                  mov     word ptr [bp-6], 1 ;~ 17C5:BC94
cs=0x17c5;eip=0x00bc99; 	T(ax = si;);	// 107298                  mov     ax, si ;~ 17C5:BC99
cs=0x17c5;eip=0x00bc9b; 	T(SAR(ax, 1));	// 107299                  sar     ax, 1 ;~ 17C5:BC9B
cs=0x17c5;eip=0x00bc9d; 	T(SAR(ax, 1));	// 107300                  sar     ax, 1 ;~ 17C5:BC9D
cs=0x17c5;eip=0x00bc9f; 	T(CMP(ax, di));	// 107301                  cmp     ax, di ;~ 17C5:BC9F
cs=0x17c5;eip=0x00bca1; 	J(JGE(loc_31ee8));	// 107302                  jge     short loc_31EE8 ;~ 17C5:BCA1
cs=0x17c5;eip=0x00bca3; 	T(CMP(*(db*)(&word_48b66), 0));	// 107303                  cmp     byte ptr word_48B66, 0 ;~ 17C5:BCA3
cs=0x17c5;eip=0x00bca8; 	J(JZ(loc_31ede));	// 107304                  jz      short loc_31EDE ;~ 17C5:BCA8
cs=0x17c5;eip=0x00bcaa; 	T(SUB(ax, ax));	// 107305                  sub     ax, ax ;~ 17C5:BCAA
cs=0x17c5;eip=0x00bcac; 	J(JMP(loc_31ee1));	// 107306                  jmp     short loc_31EE1 ;~ 17C5:BCAC
loc_31ede:
	// 6313 
cs=0x17c5;eip=0x00bcae; 	T(ax = 0x0C;);	// 107310                  mov     ax, 0Ch ;~ 17C5:BCAE
loc_31ee1:
	// 6314 
cs=0x17c5;eip=0x00bcb1; 	X(PUSH(ax));	// 107313                  push    ax ;~ 17C5:BCB1
cs=0x17c5;eip=0x00bcb2; 	J(CALL(sub_30074,0));	// 107314                  call    sub_30074 ;~ 17C5:BCB2
cs=0x17c5;eip=0x00bcb5; 	T(ADD(sp, 2));	// 107315                  add     sp, 2 ;~ 17C5:BCB5
loc_31ee8:
	// 6315 
cs=0x17c5;eip=0x00bcb8; 	X(PUSH(*(dw*)(raddr(ss,bp-6))));	// 107319                  push    word ptr [bp-6] ;~ 17C5:BCB8
cs=0x17c5;eip=0x00bcbb; 	T(ax = 9;);	// 107320                  mov     ax, 9 ;~ 17C5:BCBB
cs=0x17c5;eip=0x00bcbe; 	X(PUSH(ax));	// 107321                  push    ax ;~ 17C5:BCBE
cs=0x17c5;eip=0x00bcbf; 	X(PUSH(*(word_4ac7c)));	// 107322                  push    word_4AC7C ;~ 17C5:BCBF
cs=0x17c5;eip=0x00bcc3; 	X(PUSH(*(word_4aa98)));	// 107323                  push    word_4AA98 ;~ 17C5:BCC3
cs=0x17c5;eip=0x00bcc7; 	J(CALL(sub_323e9,0));	// 107324                  call    sub_323E9 ;~ 17C5:BCC7
cs=0x17c5;eip=0x00bcca; 	T(ADD(sp, 8));	// 107325                  add     sp, 8 ;~ 17C5:BCCA
loc_31efd:
	// 6316 
cs=0x17c5;eip=0x00bccd; 	T(CMP(word_522ce, 0x13));	// 107329                  cmp     ds:word_522CE, 13h ;~ 17C5:BCCD
cs=0x17c5;eip=0x00bcd2; 	J(JZ(loc_31f07));	// 107330                  jz      short loc_31F07 ;~ 17C5:BCD2
cs=0x17c5;eip=0x00bcd4; 	J(JMP(loc_32062));	// 107331                  jmp     loc_32062 ;~ 17C5:BCD4
loc_31f07:
	// 6317 
cs=0x17c5;eip=0x00bcd7; 	T(CMP(word_5268c, 1));	// 107335                  cmp     ds:word_5268C, 1 ;~ 17C5:BCD7
cs=0x17c5;eip=0x00bcdc; 	J(JZ(loc_31f11));	// 107336                  jz      short loc_31F11 ;~ 17C5:BCDC
cs=0x17c5;eip=0x00bcde; 	J(JMP(loc_32062));	// 107337                  jmp     loc_32062 ;~ 17C5:BCDE
loc_31f11:
	// 6318 
cs=0x17c5;eip=0x00bce1; 	T(CMP(word_49922, 0x0FFFF));	// 107341                  cmp     word_49922, 0FFFFh ;~ 17C5:BCE1
cs=0x17c5;eip=0x00bce6; 	J(JNZ(loc_31f1b));	// 107342                  jnz     short loc_31F1B ;~ 17C5:BCE6
cs=0x17c5;eip=0x00bce8; 	J(JMP(loc_32062));	// 107343                  jmp     loc_32062 ;~ 17C5:BCE8
loc_31f1b:
	// 6319 
cs=0x17c5;eip=0x00bceb; 	T(ax = word_49922;);	// 107347                  mov     ax, word_49922 ;~ 17C5:BCEB
cs=0x17c5;eip=0x00bcee; 	T(AND(ax, 0x7F));	// 107348                  and     ax, 7Fh ;~ 17C5:BCEE
cs=0x17c5;eip=0x00bcf1; 	X(MOV(*(dw*)(raddr(ss,bp-0x28)), ax));	// 107349                  mov     [bp-28h], ax ;~ 17C5:BCF1
cs=0x17c5;eip=0x00bcf4; 	T(ax = 0x24;);	// 107350                  mov     ax, 24h ; '$' ;~ 17C5:BCF4
cs=0x17c5;eip=0x00bcf7; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x28))));	// 107351                  imul    word ptr [bp-28h] ;~ 17C5:BCF7
cs=0x17c5;eip=0x00bcfa; 	T(si = ax;);	// 107352                  mov     si, ax ;~ 17C5:BCFA
cs=0x17c5;eip=0x00bcfc; 	T(ax = 1;);	// 107353                  mov     ax, 1 ;~ 17C5:BCFC
cs=0x17c5;eip=0x00bcff; 	X(PUSH(ax));	// 107354                  push    ax ;~ 17C5:BCFF
cs=0x17c5;eip=0x00bd00; 	X(PUSH(ax));	// 107355                  push    ax ;~ 17C5:BD00
cs=0x17c5;eip=0x00bd01; 	X(PUSH(*(dw*)(raddr(ds,si-0x769A))));	// 107356                  push    word ptr [si-769Ah] ;~ 17C5:BD01
cs=0x17c5;eip=0x00bd05; 	X(PUSH(*(dw*)(raddr(ds,si-0x769C))));	// 107357                  push    word ptr [si-769Ch] ;~ 17C5:BD05
cs=0x17c5;eip=0x00bd09; 	X(PUSH(*(dw*)(raddr(ds,si-0x769E))));	// 107358                  push    word ptr [si-769Eh] ;~ 17C5:BD09
cs=0x17c5;eip=0x00bd0d; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 107359                  push    word ptr [si-76A8h] ;~ 17C5:BD0D
cs=0x17c5;eip=0x00bd11; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 107360                  push    word ptr [si-76AAh] ;~ 17C5:BD11
cs=0x17c5;eip=0x00bd15; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 107361                  push    word ptr [si-76ACh] ;~ 17C5:BD15
cs=0x17c5;eip=0x00bd19; 	T(MOV(bx, *(dw*)(raddr(ds,si-0x7698))));	// 107362                  mov     bx, [si-7698h] ;~ 17C5:BD19
cs=0x17c5;eip=0x00bd1d; 	T(cl = 5;);	// 107363                  mov     cl, 5 ;~ 17C5:BD1D
cs=0x17c5;eip=0x00bd1f; 	T(SHL(bx, cl));	// 107364                  shl     bx, cl ;~ 17C5:BD1F
cs=0x17c5;eip=0x00bd21; 	X(PUSH(*(dw*)(raddr(ds,bx+0x2E2))));	// 107365                  push    word ptr [bx+2E2h] ;~ 17C5:BD21
cs=0x17c5;eip=0x00bd25; 	J(CALL(sub_32d72,0));	// 107366                  call    sub_32D72 ;~ 17C5:BD25
cs=0x17c5;eip=0x00bd28; 	T(ADD(sp, 0x12));	// 107367                  add     sp, 12h ;~ 17C5:BD28
cs=0x17c5;eip=0x00bd2b; 	J(CALL(sub_32528,0));	// 107368                  call    sub_32528 ;~ 17C5:BD2B
cs=0x17c5;eip=0x00bd2e; 	T(ax = 0x24;);	// 107369                  mov     ax, 24h ; '$' ;~ 17C5:BD2E
cs=0x17c5;eip=0x00bd31; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x28))));	// 107370                  imul    word ptr [bp-28h] ;~ 17C5:BD31
cs=0x17c5;eip=0x00bd34; 	T(si = ax;);	// 107371                  mov     si, ax ;~ 17C5:BD34
cs=0x17c5;eip=0x00bd36; 	T(ax = word_52100;);	// 107372                  mov     ax, ds:word_52100 ;~ 17C5:BD36
cs=0x17c5;eip=0x00bd39; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AA))));	// 107373                  sub     ax, [si-76AAh] ;~ 17C5:BD39
cs=0x17c5;eip=0x00bd3d; 	X(PUSH(ax));	// 107374                  push    ax ;~ 17C5:BD3D
cs=0x17c5;eip=0x00bd3e; 	T(ax = word_520f0;);	// 107375                  mov     ax, ds:word_520F0 ;~ 17C5:BD3E
cs=0x17c5;eip=0x00bd41; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x76AC))));	// 107376                  sub     ax, [si-76ACh] ;~ 17C5:BD41
cs=0x17c5;eip=0x00bd45; 	X(PUSH(ax));	// 107377                  push    ax ;~ 17C5:BD45
cs=0x17c5;eip=0x00bd46; 	J(CALL(sub_331d6,0));	// 107378                  call    sub_331D6 ;~ 17C5:BD46
cs=0x17c5;eip=0x00bd49; 	T(ADD(sp, 4));	// 107379                  add     sp, 4 ;~ 17C5:BD49
cs=0x17c5;eip=0x00bd4c; 	X(PUSH(ax));	// 107380                  push    ax ;~ 17C5:BD4C
cs=0x17c5;eip=0x00bd4d; 	J(CALL(sub_3263b,0));	// 107381                  call    sub_3263B ;~ 17C5:BD4D
cs=0x17c5;eip=0x00bd50; 	T(ADD(sp, 2));	// 107382                  add     sp, 2 ;~ 17C5:BD50
cs=0x17c5;eip=0x00bd53; 	T(ax = 0x0F;);	// 107383                  mov     ax, 0Fh ;~ 17C5:BD53
cs=0x17c5;eip=0x00bd56; 	X(PUSH(ax));	// 107384                  push    ax ;~ 17C5:BD56
cs=0x17c5;eip=0x00bd57; 	T(ax = 0x0AA;);	// 107385                  mov     ax, 0AAh ;~ 17C5:BD57
cs=0x17c5;eip=0x00bd5a; 	X(PUSH(ax));	// 107386                  push    ax ;~ 17C5:BD5A
cs=0x17c5;eip=0x00bd5b; 	T(ax = 0x0F4;);	// 107387                  mov     ax, 0F4h ;~ 17C5:BD5B
cs=0x17c5;eip=0x00bd5e; 	X(PUSH(ax));	// 107388                  push    ax ;~ 17C5:BD5E
cs=0x17c5;eip=0x00bd5f; 	T(ax = 0x66C4;);	// 107389                  mov     ax, 66C4h ;~ 17C5:BD5F
cs=0x17c5;eip=0x00bd62; 	X(PUSH(ax));	// 107390                  push    ax ;~ 17C5:BD62
cs=0x17c5;eip=0x00bd63; 	J(CALL(sub_3032e,0));	// 107391                  call    sub_3032E ;~ 17C5:BD63
cs=0x17c5;eip=0x00bd66; 	T(ADD(sp, 8));	// 107393                  add     sp, 8 ;~ 17C5:BD66
cs=0x17c5;eip=0x00bd69; 	T(ax = 0x24;);	// 107394                  mov     ax, 24h ; '$' ;~ 17C5:BD69
cs=0x17c5;eip=0x00bd6c; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x28))));	// 107395                  imul    word ptr [bp-28h] ;~ 17C5:BD6C
cs=0x17c5;eip=0x00bd6f; 	T(bx = ax;);	// 107396                  mov     bx, ax ;~ 17C5:BD6F
cs=0x17c5;eip=0x00bd71; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7698))));	// 107397                  mov     ax, [bx-7698h] ;~ 17C5:BD71
cs=0x17c5;eip=0x00bd75; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 107398                  mov     [bp-1Eh], ax ;~ 17C5:BD75
cs=0x17c5;eip=0x00bd78; 	T(cl = 5;);	// 107399                  mov     cl, 5 ;~ 17C5:BD78
cs=0x17c5;eip=0x00bd7a; 	T(SHL(ax, cl));	// 107400                  shl     ax, cl ;~ 17C5:BD7A
cs=0x17c5;eip=0x00bd7c; 	T(ADD(ax, 0x2C8));	// 107401                  add     ax, 2C8h ;~ 17C5:BD7C
cs=0x17c5;eip=0x00bd7f; 	X(PUSH(ax));	// 107402                  push    ax ;~ 17C5:BD7F
cs=0x17c5;eip=0x00bd80; 	T(ax = 0x66C4;);	// 107403                  mov     ax, 66C4h ;~ 17C5:BD80
cs=0x17c5;eip=0x00bd83; 	X(PUSH(ax));	// 107404                  push    ax ;~ 17C5:BD83
cs=0x17c5;eip=0x00bd84; 	J(CALL(sub_34c1c,0));	// 107405                  call    sub_34C1C ;~ 17C5:BD84
cs=0x17c5;eip=0x00bd87; 	T(ADD(sp, 4));	// 107406                  add     sp, 4 ;~ 17C5:BD87
cs=0x17c5;eip=0x00bd8a; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x1E))));	// 107407                  mov     ax, [bp-1Eh] ;~ 17C5:BD8A
cs=0x17c5;eip=0x00bd8d; 	T(cl = 5;);	// 107408                  mov     cl, 5 ;~ 17C5:BD8D
cs=0x17c5;eip=0x00bd8f; 	T(SHL(ax, cl));	// 107409                  shl     ax, cl ;~ 17C5:BD8F
cs=0x17c5;eip=0x00bd91; 	T(ADD(ax, 0x2CF));	// 107410                  add     ax, 2CFh ;~ 17C5:BD91
cs=0x17c5;eip=0x00bd94; 	X(PUSH(ax));	// 107411                  push    ax ;~ 17C5:BD94
cs=0x17c5;eip=0x00bd95; 	T(ax = 0x66C4;);	// 107412                  mov     ax, 66C4h ;~ 17C5:BD95
cs=0x17c5;eip=0x00bd98; 	X(PUSH(ax));	// 107413                  push    ax ;~ 17C5:BD98
cs=0x17c5;eip=0x00bd99; 	J(CALL(sub_34bdc,0));	// 107414                  call    sub_34BDC ;~ 17C5:BD99
cs=0x17c5;eip=0x00bd9c; 	T(ADD(sp, 4));	// 107415                  add     sp, 4 ;~ 17C5:BD9C
cs=0x17c5;eip=0x00bd9f; 	T(ax = 0x0F;);	// 107416                  mov     ax, 0Fh ;~ 17C5:BD9F
cs=0x17c5;eip=0x00bda2; 	X(PUSH(ax));	// 107417                  push    ax ;~ 17C5:BDA2
cs=0x17c5;eip=0x00bda3; 	T(ax = 0x86;);	// 107418                  mov     ax, 86h ;~ 17C5:BDA3
cs=0x17c5;eip=0x00bda6; 	X(PUSH(ax));	// 107419                  push    ax ;~ 17C5:BDA6
cs=0x17c5;eip=0x00bda7; 	T(ax = 0x0F8;);	// 107420                  mov     ax, 0F8h ;~ 17C5:BDA7
cs=0x17c5;eip=0x00bdaa; 	X(PUSH(ax));	// 107421                  push    ax ;~ 17C5:BDAA
cs=0x17c5;eip=0x00bdab; 	T(ax = 0x66C4;);	// 107422                  mov     ax, 66C4h ;~ 17C5:BDAB
cs=0x17c5;eip=0x00bdae; 	X(PUSH(ax));	// 107423                  push    ax ;~ 17C5:BDAE
cs=0x17c5;eip=0x00bdaf; 	J(CALL(sub_3032e,0));	// 107424                  call    sub_3032E ;~ 17C5:BDAF
cs=0x17c5;eip=0x00bdb2; 	T(ADD(sp, 8));	// 107426                  add     sp, 8 ;~ 17C5:BDB2
cs=0x17c5;eip=0x00bdb5; 	T(MOV(bx, *(dw*)(raddr(ss,bp-0x1E))));	// 107427                  mov     bx, [bp-1Eh] ;~ 17C5:BDB5
cs=0x17c5;eip=0x00bdb8; 	T(cl = 5;);	// 107428                  mov     cl, 5 ;~ 17C5:BDB8
cs=0x17c5;eip=0x00bdba; 	T(SHL(bx, cl));	// 107429                  shl     bx, cl ;~ 17C5:BDBA
cs=0x17c5;eip=0x00bdbc; 	T(CMP(*(dw*)(raddr(ds,bx+0x2E0)), 0x0FFFF));	// 107430                  cmp     word ptr [bx+2E0h], 0FFFFh ;~ 17C5:BDBC
cs=0x17c5;eip=0x00bdc1; 	J(JNZ(loc_32010));	// 107431                  jnz     short loc_32010 ;~ 17C5:BDC1
cs=0x17c5;eip=0x00bdc3; 	T(TEST(*(db*)(&word_49918), 1));	// 107432                  test    byte ptr word_49918, 1 ;~ 17C5:BDC3
cs=0x17c5;eip=0x00bdc8; 	J(JNZ(loc_32010));	// 107433                  jnz     short loc_32010 ;~ 17C5:BDC8
cs=0x17c5;eip=0x00bdca; 	T(ax = 0x0F;);	// 107434                  mov     ax, 0Fh ;~ 17C5:BDCA
cs=0x17c5;eip=0x00bdcd; 	X(PUSH(ax));	// 107435                  push    ax ;~ 17C5:BDCD
cs=0x17c5;eip=0x00bdce; 	T(ax = 0x8C;);	// 107436                  mov     ax, 8Ch ;~ 17C5:BDCE
cs=0x17c5;eip=0x00bdd1; 	X(PUSH(ax));	// 107437                  push    ax ;~ 17C5:BDD1
cs=0x17c5;eip=0x00bdd2; 	T(ax = 0x0FC;);	// 107438                  mov     ax, 0FCh ;~ 17C5:BDD2
cs=0x17c5;eip=0x00bdd5; 	X(PUSH(ax));	// 107439                  push    ax ;~ 17C5:BDD5
cs=0x17c5;eip=0x00bdd6; 	T(ax = 0x5C1D;);	// 107440                  mov     ax, 5C1Dh ;~ 17C5:BDD6
cs=0x17c5;eip=0x00bdd9; 	X(PUSH(ax));	// 107441                  push    ax ;~ 17C5:BDD9
cs=0x17c5;eip=0x00bdda; 	J(CALL(sub_3032e,0));	// 107442                  call    sub_3032E ;~ 17C5:BDDA
cs=0x17c5;eip=0x00bddd; 	T(ADD(sp, 8));	// 107444                  add     sp, 8 ;~ 17C5:BDDD
loc_32010:
	// 6320 
cs=0x17c5;eip=0x00bde0; 	T(CMP(word_4f20c, 0));	// 107448                  cmp     ds:word_4F20C, 0 ;~ 17C5:BDE0
cs=0x17c5;eip=0x00bde5; 	J(JZ(loc_32062));	// 107449                  jz      short loc_32062 ;~ 17C5:BDE5
cs=0x17c5;eip=0x00bde7; 	T(TEST(*(db*)(&word_49918), 1));	// 107450                  test    byte ptr word_49918, 1 ;~ 17C5:BDE7
cs=0x17c5;eip=0x00bdec; 	J(JZ(loc_32062));	// 107451                  jz      short loc_32062 ;~ 17C5:BDEC
cs=0x17c5;eip=0x00bdee; 	T(ax = 0x24;);	// 107452                  mov     ax, 24h ; '$' ;~ 17C5:BDEE
cs=0x17c5;eip=0x00bdf1; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x28))));	// 107453                  imul    word ptr [bp-28h] ;~ 17C5:BDF1
cs=0x17c5;eip=0x00bdf4; 	T(si = ax;);	// 107454                  mov     si, ax ;~ 17C5:BDF4
cs=0x17c5;eip=0x00bdf6; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7694))));	// 107455                  mov     ax, [si-7694h] ;~ 17C5:BDF6
cs=0x17c5;eip=0x00bdfa; 	T(CWD);	// 107456                  cwd ;~ 17C5:BDFA
cs=0x17c5;eip=0x00bdfb; 	X(PUSH(dx));	// 107457                  push    dx ;~ 17C5:BDFB
cs=0x17c5;eip=0x00bdfc; 	X(PUSH(ax));	// 107458                  push    ax ;~ 17C5:BDFC
cs=0x17c5;eip=0x00bdfd; 	T(ax = 0x8000;);	// 107459                  mov     ax, 8000h ;~ 17C5:BDFD
cs=0x17c5;eip=0x00be00; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x769C))));	// 107460                  sub     ax, [si-769Ch] ;~ 17C5:BE00
cs=0x17c5;eip=0x00be04; 	T(SUB(cx, cx));	// 107461                  sub     cx, cx ;~ 17C5:BE04
cs=0x17c5;eip=0x00be06; 	X(PUSH(cx));	// 107462                  push    cx ;~ 17C5:BE06
cs=0x17c5;eip=0x00be07; 	X(PUSH(ax));	// 107463                  push    ax ;~ 17C5:BE07
cs=0x17c5;eip=0x00be08; 	J(CALL(sub_34ee0,0));	// 107464                  call    sub_34EE0 ;~ 17C5:BE08
cs=0x17c5;eip=0x00be0b; 	T(cl = 0x0F;);	// 107465                  mov     cl, 0Fh ;~ 17C5:BE0B
loc_3203d:
	// 6321 
cs=0x17c5;eip=0x00be0d; 	T(SHR(dx, 1));	// 107468                  shr     dx, 1 ;~ 17C5:BE0D
cs=0x17c5;eip=0x00be0f; 	T(RCR(ax, 1));	// 107469                  rcr     ax, 1 ;~ 17C5:BE0F
cs=0x17c5;eip=0x00be11; 	T(DEC(cl));	// 107470                  dec     cl ;~ 17C5:BE11
cs=0x17c5;eip=0x00be13; 	J(JZ(loc_32047));	// 107471                  jz      short loc_32047 ;~ 17C5:BE13
cs=0x17c5;eip=0x00be15; 	J(JMP(loc_3203d));	// 107472                  jmp     short loc_3203D ;~ 17C5:BE15
loc_32047:
	// 6322 
cs=0x17c5;eip=0x00be17; 	X(word_4ef34 = ax;);	// 107476                  mov     ds:word_4EF34, ax ;~ 17C5:BE17
cs=0x17c5;eip=0x00be1a; 	X(PUSH(ax));	// 107477                  push    ax ;~ 17C5:BE1A
cs=0x17c5;eip=0x00be1b; 	X(PUSH(*(dw*)(raddr(ds,si-0x769A))));	// 107478                  push    word ptr [si-769Ah] ;~ 17C5:BE1B
cs=0x17c5;eip=0x00be1f; 	J(CALL(sub_333a8,0));	// 107479                  call    sub_333A8 ;~ 17C5:BE1F
cs=0x17c5;eip=0x00be22; 	T(ADD(sp, 4));	// 107480                  add     sp, 4 ;~ 17C5:BE22
cs=0x17c5;eip=0x00be25; 	X(PUSH(ax));	// 107481                  push    ax ;~ 17C5:BE25
cs=0x17c5;eip=0x00be26; 	J(CALL(sub_34dc0,0));	// 107482                  call    sub_34DC0 ;~ 17C5:BE26
cs=0x17c5;eip=0x00be29; 	T(ADD(sp, 2));	// 107483                  add     sp, 2 ;~ 17C5:BE29
cs=0x17c5;eip=0x00be2c; 	T(SAR(ax, 1));	// 107484                  sar     ax, 1 ;~ 17C5:BE2C
cs=0x17c5;eip=0x00be2e; 	X(SUB(word_4ef34, ax));	// 107485                  sub     ds:word_4EF34, ax ;~ 17C5:BE2E
loc_32062:
	// 6323 
cs=0x17c5;eip=0x00be32; 	T(bx = word_4e564;);	// 107489                  mov     bx, ds:word_4E564 ;~ 17C5:BE32
cs=0x17c5;eip=0x00be36; 	X(MOV(*(dw*)(raddr(ds,bx+2)), 2));	// 107490                  mov     word ptr [bx+2], 2 ;~ 17C5:BE36
cs=0x17c5;eip=0x00be3b; 	T(bx = word_4e57c;);	// 107491                  mov     bx, ds:word_4E57C ;~ 17C5:BE3B
cs=0x17c5;eip=0x00be3f; 	X(MOV(*(dw*)(raddr(ds,bx+2)), 2));	// 107492                  mov     word ptr [bx+2], 2 ;~ 17C5:BE3F
cs=0x17c5;eip=0x00be44; 	T(CMP(word_49928, 0));	// 107493                  cmp     word_49928, 0 ;~ 17C5:BE44
cs=0x17c5;eip=0x00be49; 	J(JLE(loc_320cc));	// 107494                  jle     short loc_320CC ;~ 17C5:BE49
cs=0x17c5;eip=0x00be4b; 	T(CMP(word_520c6, 0));	// 107495                  cmp     ds:word_520C6, 0 ;~ 17C5:BE4B
cs=0x17c5;eip=0x00be50; 	J(JGE(loc_320cc));	// 107496                  jge     short loc_320CC ;~ 17C5:BE50
cs=0x17c5;eip=0x00be52; 	T(ax = 0x0FFFF;);	// 107497                  mov     ax, 0FFFFh ;~ 17C5:BE52
cs=0x17c5;eip=0x00be55; 	T(SUB(ax, word_520c6));	// 107498                  sub     ax, ds:word_520C6 ;~ 17C5:BE55
cs=0x17c5;eip=0x00be59; 	X(MOV(*(dw*)(raddr(ss,bp-0x1E)), ax));	// 107499                  mov     [bp-1Eh], ax ;~ 17C5:BE59
cs=0x17c5;eip=0x00be5c; 	T(ax = 0x24;);	// 107500                  mov     ax, 24h ; '$' ;~ 17C5:BE5C
cs=0x17c5;eip=0x00be5f; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x1E))));	// 107501                  imul    word ptr [bp-1Eh] ;~ 17C5:BE5F
cs=0x17c5;eip=0x00be62; 	T(si = ax;);	// 107502                  mov     si, ax ;~ 17C5:BE62
cs=0x17c5;eip=0x00be64; 	X(PUSH(*(dw*)(raddr(ds,si-0x76A8))));	// 107503                  push    word ptr [si-76A8h] ;~ 17C5:BE64
cs=0x17c5;eip=0x00be68; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 107504                  push    word ptr [si-76AAh] ;~ 17C5:BE68
cs=0x17c5;eip=0x00be6c; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 107505                  push    word ptr [si-76ACh] ;~ 17C5:BE6C
cs=0x17c5;eip=0x00be70; 	J(CALL(sub_326b8,0));	// 107506                  call    sub_326B8 ;~ 17C5:BE70
cs=0x17c5;eip=0x00be73; 	T(ADD(sp, 6));	// 107507                  add     sp, 6 ;~ 17C5:BE73
cs=0x17c5;eip=0x00be76; 	T(ax = word_492f4;);	// 107508                  mov     ax, word_492F4 ;~ 17C5:BE76
cs=0x17c5;eip=0x00be79; 	T(SUB(ax, word_49928));	// 107509                  sub     ax, word_49928 ;~ 17C5:BE79
cs=0x17c5;eip=0x00be7d; 	X(PUSH(ax));	// 107510                  push    ax ;~ 17C5:BE7D
cs=0x17c5;eip=0x00be7e; 	X(PUSH(word_4f1a2));	// 107511                  push    ds:word_4F1A2 ;~ 17C5:BE7E
cs=0x17c5;eip=0x00be82; 	T(ax = 0x24;);	// 107512                  mov     ax, 24h ; '$' ;~ 17C5:BE82
cs=0x17c5;eip=0x00be85; 	X(IMUL1_2(*(dw*)(raddr(ss,bp-0x1E))));	// 107513                  imul    word ptr [bp-1Eh] ;~ 17C5:BE85
cs=0x17c5;eip=0x00be88; 	T(bx = ax;);	// 107514                  mov     bx, ax ;~ 17C5:BE88
cs=0x17c5;eip=0x00be8a; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7698))));	// 107515                  mov     ax, [bx-7698h] ;~ 17C5:BE8A
cs=0x17c5;eip=0x00be8e; 	T(cl = 5;);	// 107516                  mov     cl, 5 ;~ 17C5:BE8E
cs=0x17c5;eip=0x00be90; 	T(SHL(ax, cl));	// 107517                  shl     ax, cl ;~ 17C5:BE90
cs=0x17c5;eip=0x00be92; 	T(ADD(ax, 0x2C8));	// 107518                  add     ax, 2C8h ;~ 17C5:BE92
cs=0x17c5;eip=0x00be95; 	X(PUSH(ax));	// 107519                  push    ax ;~ 17C5:BE95
cs=0x17c5;eip=0x00be96; 	J(CALL(sub_325a1,0));	// 107520                  call    sub_325A1 ;~ 17C5:BE96
cs=0x17c5;eip=0x00be99; 	T(ADD(sp, 6));	// 107521                  add     sp, 6 ;~ 17C5:BE99
loc_320cc:
	// 6324 
cs=0x17c5;eip=0x00be9c; 	T(CMP(word_5268c, 2));	// 107525                  cmp     ds:word_5268C, 2 ;~ 17C5:BE9C
cs=0x17c5;eip=0x00bea1; 	J(JZ(loc_320d6));	// 107526                  jz      short loc_320D6 ;~ 17C5:BEA1
cs=0x17c5;eip=0x00bea3; 	J(JMP(loc_32379));	// 107527                  jmp     loc_32379 ;~ 17C5:BEA3
loc_320d6:
	// 6325 
cs=0x17c5;eip=0x00bea6; 	T(CMP(word_520c0, 0));	// 107531                  cmp     ds:word_520C0, 0 ;~ 17C5:BEA6
cs=0x17c5;eip=0x00beab; 	J(JZ(loc_320e0));	// 107532                  jz      short loc_320E0 ;~ 17C5:BEAB
cs=0x17c5;eip=0x00bead; 	J(JMP(loc_32379));	// 107533                  jmp     loc_32379 ;~ 17C5:BEAD
loc_320e0:
	// 6326 
cs=0x17c5;eip=0x00beb0; 	T(bx = word_492e2;);	// 107537                  mov     bx, word_492E2 ;~ 17C5:BEB0
cs=0x17c5;eip=0x00beb4; 	T(SHL(bx, 1));	// 107538                  shl     bx, 1 ;~ 17C5:BEB4
cs=0x17c5;eip=0x00beb6; 	T(SHL(bx, 1));	// 107539                  shl     bx, 1 ;~ 17C5:BEB6
cs=0x17c5;eip=0x00beb8; 	T(ax = 0x1A;);	// 107540                  mov     ax, 1Ah ;~ 17C5:BEB8
cs=0x17c5;eip=0x00bebb; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x7F2))));	// 107541                  imul    word ptr [bx+7F2h] ;~ 17C5:BEBB
cs=0x17c5;eip=0x00bebf; 	T(bx = ax;);	// 107542                  mov     bx, ax ;~ 17C5:BEBF
cs=0x17c5;eip=0x00bec1; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x82C))));	// 107543                  mov     ax, [bx+82Ch] ;~ 17C5:BEC1
cs=0x17c5;eip=0x00bec5; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), ax));	// 107544                  mov     [bp-10h], ax ;~ 17C5:BEC5
cs=0x17c5;eip=0x00bec8; 	T(CMP(ax, 0x1E));	// 107545                  cmp     ax, 1Eh ;~ 17C5:BEC8
cs=0x17c5;eip=0x00becb; 	J(JZ(loc_32100));	// 107546                  jz      short loc_32100 ;~ 17C5:BECB
cs=0x17c5;eip=0x00becd; 	J(JMP(loc_321e6));	// 107547                  jmp     loc_321E6 ;~ 17C5:BECD
loc_32100:
	// 6327 
cs=0x17c5;eip=0x00bed0; 	X(PUSH(word_4e2fc));	// 107551                  push    ds:word_4E2FC ;~ 17C5:BED0
cs=0x17c5;eip=0x00bed4; 	J(CALL(sub_34dc0,0));	// 107552                  call    sub_34DC0 ;~ 17C5:BED4
cs=0x17c5;eip=0x00bed7; 	T(ADD(sp, 2));	// 107553                  add     sp, 2 ;~ 17C5:BED7
cs=0x17c5;eip=0x00beda; 	T(CMP(ax, 0x2000));	// 107554                  cmp     ax, 2000h ;~ 17C5:BEDA
cs=0x17c5;eip=0x00bedd; 	J(JL(loc_32112));	// 107555                  jl      short loc_32112 ;~ 17C5:BEDD
cs=0x17c5;eip=0x00bedf; 	J(JMP(loc_321e6));	// 107556                  jmp     loc_321E6 ;~ 17C5:BEDF
loc_32112:
	// 6328 
cs=0x17c5;eip=0x00bee2; 	J(CALL(sub_32a5d,0));	// 107560                  call    sub_32A5D ;~ 17C5:BEE2
cs=0x17c5;eip=0x00bee5; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 107561                  mov     [bp-0Ch], ax ;~ 17C5:BEE5
cs=0x17c5;eip=0x00bee8; 	T(ax = 0x20;);	// 107562                  mov     ax, 20h ; ' ' ;~ 17C5:BEE8
cs=0x17c5;eip=0x00beeb; 	X(PUSH(ax));	// 107563                  push    ax ;~ 17C5:BEEB
cs=0x17c5;eip=0x00beec; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0C))));	// 107564                  mov     ax, [bp-0Ch] ;~ 17C5:BEEC
cs=0x17c5;eip=0x00beef; 	T(NEG(ax));	// 107565                  neg     ax ;~ 17C5:BEEF
cs=0x17c5;eip=0x00bef1; 	X(PUSH(ax));	// 107566                  push    ax ;~ 17C5:BEF1
cs=0x17c5;eip=0x00bef2; 	J(CALL(sub_333a8,0));	// 107567                  call    sub_333A8 ;~ 17C5:BEF2
cs=0x17c5;eip=0x00bef5; 	T(ADD(sp, 4));	// 107568                  add     sp, 4 ;~ 17C5:BEF5
cs=0x17c5;eip=0x00bef8; 	T(cx = ax;);	// 107569                  mov     cx, ax ;~ 17C5:BEF8
cs=0x17c5;eip=0x00befa; 	T(INC(cx));	// 107570                  inc     cx ;~ 17C5:BEFA
cs=0x17c5;eip=0x00befb; 	X(PUSH(word_4e300));	// 107571                  push    ds:word_4E300 ;~ 17C5:BEFB
cs=0x17c5;eip=0x00beff; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0C))));	// 107572                  push    word ptr [bp-0Ch] ;~ 17C5:BEFF
cs=0x17c5;eip=0x00bf02; 	T(si = cx;);	// 107573                  mov     si, cx ;~ 17C5:BF02
cs=0x17c5;eip=0x00bf04; 	J(CALL(sub_333c0,0));	// 107574                  call    sub_333C0 ;~ 17C5:BF04
cs=0x17c5;eip=0x00bf07; 	T(ADD(sp, 4));	// 107575                  add     sp, 4 ;~ 17C5:BF07
cs=0x17c5;eip=0x00bf0a; 	T(CWD);	// 107576                  cwd ;~ 17C5:BF0A
cs=0x17c5;eip=0x00bf0b; 	T(IDIV2(si));	// 107577                  idiv    si ;~ 17C5:BF0B
cs=0x17c5;eip=0x00bf0d; 	X(MOV(*(dw*)(raddr(ss,bp-0x16)), ax));	// 107578                  mov     [bp-16h], ax ;~ 17C5:BF0D
cs=0x17c5;eip=0x00bf10; 	X(PUSH(ax));	// 107579                  push    ax ;~ 17C5:BF10
cs=0x17c5;eip=0x00bf11; 	X(PUSH(word_4e2f8));	// 107580                  push    ds:word_4E2F8 ;~ 17C5:BF11
cs=0x17c5;eip=0x00bf15; 	J(CALL(sub_333a8,0));	// 107581                  call    sub_333A8 ;~ 17C5:BF15
cs=0x17c5;eip=0x00bf18; 	T(ADD(sp, 4));	// 107582                  add     sp, 4 ;~ 17C5:BF18
cs=0x17c5;eip=0x00bf1b; 	T(ADD(ax, word_520f0));	// 107583                  add     ax, ds:word_520F0 ;~ 17C5:BF1B
cs=0x17c5;eip=0x00bf1f; 	X(MOV(*(dw*)(raddr(ss,bp-0x24)), ax));	// 107584                  mov     [bp-24h], ax ;~ 17C5:BF1F
cs=0x17c5;eip=0x00bf22; 	X(PUSH(*(dw*)(raddr(ss,bp-0x16))));	// 107585                  push    word ptr [bp-16h] ;~ 17C5:BF22
cs=0x17c5;eip=0x00bf25; 	X(PUSH(word_4e2f8));	// 107586                  push    ds:word_4E2F8 ;~ 17C5:BF25
cs=0x17c5;eip=0x00bf29; 	J(CALL(sub_333c0,0));	// 107587                  call    sub_333C0 ;~ 17C5:BF29
cs=0x17c5;eip=0x00bf2c; 	T(ADD(sp, 4));	// 107588                  add     sp, 4 ;~ 17C5:BF2C
cs=0x17c5;eip=0x00bf2f; 	T(cx = word_52100;);	// 107589                  mov     cx, ds:word_52100 ;~ 17C5:BF2F
cs=0x17c5;eip=0x00bf33; 	T(SUB(cx, ax));	// 107590                  sub     cx, ax ;~ 17C5:BF33
cs=0x17c5;eip=0x00bf35; 	X(MOV(*(dw*)(raddr(ss,bp-0x26)), cx));	// 107591                  mov     [bp-26h], cx ;~ 17C5:BF35
cs=0x17c5;eip=0x00bf38; 	T(SUB(ax, ax));	// 107592                  sub     ax, ax ;~ 17C5:BF38
cs=0x17c5;eip=0x00bf3a; 	X(PUSH(ax));	// 107593                  push    ax ;~ 17C5:BF3A
cs=0x17c5;eip=0x00bf3b; 	X(PUSH(cx));	// 107594                  push    cx ;~ 17C5:BF3B
cs=0x17c5;eip=0x00bf3c; 	X(PUSH(*(dw*)(raddr(ss,bp-0x24))));	// 107595                  push    word ptr [bp-24h] ;~ 17C5:BF3C
cs=0x17c5;eip=0x00bf3f; 	J(CALL(sub_326b8,0));	// 107596                  call    sub_326B8 ;~ 17C5:BF3F
cs=0x17c5;eip=0x00bf42; 	T(ADD(sp, 6));	// 107597                  add     sp, 6 ;~ 17C5:BF42
cs=0x17c5;eip=0x00bf45; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 107598                  cmp     word_4AA98, 0FFFFh ;~ 17C5:BF45
cs=0x17c5;eip=0x00bf4a; 	J(JNZ(loc_321a6));	// 107599                  jnz     short loc_321A6 ;~ 17C5:BF4A
cs=0x17c5;eip=0x00bf4c; 	T(ax = 0x60;);	// 107600                  mov     ax, 60h ; '`' ;~ 17C5:BF4C
cs=0x17c5;eip=0x00bf4f; 	T(SUB(ax, word_52238));	// 107601                  sub     ax, ds:word_52238 ;~ 17C5:BF4F
cs=0x17c5;eip=0x00bf53; 	X(PUSH(ax));	// 107602                  push    ax ;~ 17C5:BF53
cs=0x17c5;eip=0x00bf54; 	X(PUSH(word_4e2fc));	// 107603                  push    ds:word_4E2FC ;~ 17C5:BF54
cs=0x17c5;eip=0x00bf58; 	J(CALL(sub_333a8,0));	// 107604                  call    sub_333A8 ;~ 17C5:BF58
cs=0x17c5;eip=0x00bf5b; 	T(ADD(sp, 4));	// 107605                  add     sp, 4 ;~ 17C5:BF5B
cs=0x17c5;eip=0x00bf5e; 	T(SHL(ax, 1));	// 107606                  shl     ax, 1 ;~ 17C5:BF5E
cs=0x17c5;eip=0x00bf60; 	T(SHL(ax, 1));	// 107607                  shl     ax, 1 ;~ 17C5:BF60
cs=0x17c5;eip=0x00bf62; 	T(CWD);	// 107608                  cwd ;~ 17C5:BF62
cs=0x17c5;eip=0x00bf63; 	T(cx = 3;);	// 107609                  mov     cx, 3 ;~ 17C5:BF63
cs=0x17c5;eip=0x00bf66; 	T(IDIV2(cx));	// 107610                  idiv    cx ;~ 17C5:BF66
cs=0x17c5;eip=0x00bf68; 	T(ADD(ax, 0x0A0));	// 107611                  add     ax, 0A0h ;~ 17C5:BF68
cs=0x17c5;eip=0x00bf6b; 	X(*(word_4aa98) = ax;);	// 107612                  mov     word_4AA98, ax ;~ 17C5:BF6B
cs=0x17c5;eip=0x00bf6e; 	X(*(word_4ac7c) = 0x60;);	// 107613                  mov     word_4AC7C, 60h ; '`' ;~ 17C5:BF6E
cs=0x17c5;eip=0x00bf74; 	J(JMP(loc_321c6));	// 107614                  jmp     short loc_321C6 ;~ 17C5:BF74
loc_321a6:
	// 6329 
cs=0x17c5;eip=0x00bf76; 	T(ax = 0x0C;);	// 107618                  mov     ax, 0Ch ;~ 17C5:BF76
cs=0x17c5;eip=0x00bf79; 	X(PUSH(ax));	// 107619                  push    ax ;~ 17C5:BF79
cs=0x17c5;eip=0x00bf7a; 	J(CALL(sub_30074,0));	// 107620                  call    sub_30074 ;~ 17C5:BF7A
cs=0x17c5;eip=0x00bf7d; 	T(ADD(sp, 2));	// 107621                  add     sp, 2 ;~ 17C5:BF7D
cs=0x17c5;eip=0x00bf80; 	T(ax = 1;);	// 107622                  mov     ax, 1 ;~ 17C5:BF80
cs=0x17c5;eip=0x00bf83; 	X(PUSH(ax));	// 107623                  push    ax ;~ 17C5:BF83
cs=0x17c5;eip=0x00bf84; 	T(ax = 5;);	// 107624                  mov     ax, 5 ;~ 17C5:BF84
cs=0x17c5;eip=0x00bf87; 	X(PUSH(ax));	// 107625                  push    ax ;~ 17C5:BF87
cs=0x17c5;eip=0x00bf88; 	X(PUSH(*(word_4ac7c)));	// 107626                  push    word_4AC7C ;~ 17C5:BF88
cs=0x17c5;eip=0x00bf8c; 	X(PUSH(*(word_4aa98)));	// 107627                  push    word_4AA98 ;~ 17C5:BF8C
cs=0x17c5;eip=0x00bf90; 	J(CALL(sub_323e9,0));	// 107628                  call    sub_323E9 ;~ 17C5:BF90
cs=0x17c5;eip=0x00bf93; 	T(ADD(sp, 8));	// 107629                  add     sp, 8 ;~ 17C5:BF93
loc_321c6:
	// 6330 
cs=0x17c5;eip=0x00bf96; 	T(ax = 0x0F;);	// 107632                  mov     ax, 0Fh ;~ 17C5:BF96
cs=0x17c5;eip=0x00bf99; 	X(PUSH(ax));	// 107633                  push    ax ;~ 17C5:BF99
cs=0x17c5;eip=0x00bf9a; 	J(CALL(sub_30074,0));	// 107634                  call    sub_30074 ;~ 17C5:BF9A
cs=0x17c5;eip=0x00bf9d; 	T(ADD(sp, 2));	// 107635                  add     sp, 2 ;~ 17C5:BF9D
cs=0x17c5;eip=0x00bfa0; 	X(PUSH(*(word_4ac7c)));	// 107636                  push    word_4AC7C ;~ 17C5:BFA0
cs=0x17c5;eip=0x00bfa4; 	X(PUSH(*(word_4aa98)));	// 107637                  push    word_4AA98 ;~ 17C5:BFA4
cs=0x17c5;eip=0x00bfa8; 	X(PUSH(word_52238));	// 107638                  push    ds:word_52238 ;~ 17C5:BFA8
cs=0x17c5;eip=0x00bfac; 	T(ax = 0x0A0;);	// 107639                  mov     ax, 0A0h ;~ 17C5:BFAC
cs=0x17c5;eip=0x00bfaf; 	X(PUSH(ax));	// 107640                  push    ax ;~ 17C5:BFAF
cs=0x17c5;eip=0x00bfb0; 	J(CALL(sub_2ffe0,0));	// 107641                  call    sub_2FFE0 ;~ 17C5:BFB0
cs=0x17c5;eip=0x00bfb3; 	T(ADD(sp, 8));	// 107643                  add     sp, 8 ;~ 17C5:BFB3
loc_321e6:
	// 6331 
cs=0x17c5;eip=0x00bfb6; 	T(CMP(*(dw*)(raddr(ss,bp-0x10)), 0x1E));	// 107647                  cmp     word ptr [bp-10h], 1Eh ;~ 17C5:BFB6
cs=0x17c5;eip=0x00bfba; 	J(JZ(loc_321f5));	// 107648                  jz      short loc_321F5 ;~ 17C5:BFBA
cs=0x17c5;eip=0x00bfbc; 	T(CMP(*(dw*)(raddr(ss,bp-0x10)), 0x1D));	// 107649                  cmp     word ptr [bp-10h], 1Dh ;~ 17C5:BFBC
cs=0x17c5;eip=0x00bfc0; 	J(JZ(loc_321f5));	// 107650                  jz      short loc_321F5 ;~ 17C5:BFC0
cs=0x17c5;eip=0x00bfc2; 	J(JMP(loc_32379));	// 107651                  jmp     loc_32379 ;~ 17C5:BFC2
loc_321f5:
	// 6332 
cs=0x17c5;eip=0x00bfc5; 	T(CMP(word_49924, 0));	// 107656                  cmp     word_49924, 0 ;~ 17C5:BFC5
cs=0x17c5;eip=0x00bfca; 	J(JGE(loc_321ff));	// 107657                  jge     short loc_321FF ;~ 17C5:BFCA
cs=0x17c5;eip=0x00bfcc; 	J(JMP(loc_32379));	// 107658                  jmp     loc_32379 ;~ 17C5:BFCC
loc_321ff:
	// 6333 
cs=0x17c5;eip=0x00bfcf; 	X(PUSH(word_4e2fe));	// 107662                  push    ds:word_4E2FE ;~ 17C5:BFCF
cs=0x17c5;eip=0x00bfd3; 	T(ax = 0x80;);	// 107663                  mov     ax, 80h ;~ 17C5:BFD3
cs=0x17c5;eip=0x00bfd6; 	X(PUSH(ax));	// 107664                  push    ax ;~ 17C5:BFD6
cs=0x17c5;eip=0x00bfd7; 	X(PUSH(word_4e2f8));	// 107665                  push    ds:word_4E2F8 ;~ 17C5:BFD7
cs=0x17c5;eip=0x00bfdb; 	J(CALL(sub_333c0,0));	// 107666                  call    sub_333C0 ;~ 17C5:BFDB
cs=0x17c5;eip=0x00bfde; 	T(ADD(sp, 4));	// 107667                  add     sp, 4 ;~ 17C5:BFDE
cs=0x17c5;eip=0x00bfe1; 	T(bx = word_49924;);	// 107668                  mov     bx, word_49924 ;~ 17C5:BFE1
cs=0x17c5;eip=0x00bfe5; 	T(cl = 4;);	// 107669                  mov     cl, 4 ;~ 17C5:BFE5
cs=0x17c5;eip=0x00bfe7; 	T(SHL(bx, cl));	// 107670                  shl     bx, cl ;~ 17C5:BFE7
cs=0x17c5;eip=0x00bfe9; 	T(MOV(cx, *(dw*)(raddr(ds,bx-0x7E50))));	// 107671                  mov     cx, [bx-7E50h] ;~ 17C5:BFE9
cs=0x17c5;eip=0x00bfed; 	T(SUB(cx, ax));	// 107672                  sub     cx, ax ;~ 17C5:BFED
cs=0x17c5;eip=0x00bfef; 	X(PUSH(cx));	// 107673                  push    cx ;~ 17C5:BFEF
cs=0x17c5;eip=0x00bff0; 	T(ax = 0x80;);	// 107674                  mov     ax, 80h ;~ 17C5:BFF0
cs=0x17c5;eip=0x00bff3; 	X(PUSH(ax));	// 107675                  push    ax ;~ 17C5:BFF3
cs=0x17c5;eip=0x00bff4; 	X(PUSH(word_4e2f8));	// 107676                  push    ds:word_4E2F8 ;~ 17C5:BFF4
cs=0x17c5;eip=0x00bff8; 	J(CALL(sub_333a8,0));	// 107677                  call    sub_333A8 ;~ 17C5:BFF8
cs=0x17c5;eip=0x00bffb; 	T(ADD(sp, 4));	// 107678                  add     sp, 4 ;~ 17C5:BFFB
cs=0x17c5;eip=0x00bffe; 	T(bx = word_49924;);	// 107679                  mov     bx, word_49924 ;~ 17C5:BFFE
cs=0x17c5;eip=0x00c002; 	T(cl = 4;);	// 107680                  mov     cl, 4 ;~ 17C5:C002
cs=0x17c5;eip=0x00c004; 	T(SHL(bx, cl));	// 107681                  shl     bx, cl ;~ 17C5:C004
cs=0x17c5;eip=0x00c006; 	T(MOV(cx, *(dw*)(raddr(ds,bx-0x7E52))));	// 107682                  mov     cx, [bx-7E52h] ;~ 17C5:C006
cs=0x17c5;eip=0x00c00a; 	T(ADD(cx, ax));	// 107683                  add     cx, ax ;~ 17C5:C00A
cs=0x17c5;eip=0x00c00c; 	X(PUSH(cx));	// 107684                  push    cx ;~ 17C5:C00C
cs=0x17c5;eip=0x00c00d; 	J(CALL(sub_326b8,0));	// 107685                  call    sub_326B8 ;~ 17C5:C00D
cs=0x17c5;eip=0x00c010; 	T(ADD(sp, 6));	// 107686                  add     sp, 6 ;~ 17C5:C010
cs=0x17c5;eip=0x00c013; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 107687                  cmp     word_4AA98, 0FFFFh ;~ 17C5:C013
cs=0x17c5;eip=0x00c018; 	J(JNZ(loc_3224d));	// 107688                  jnz     short loc_3224D ;~ 17C5:C018
cs=0x17c5;eip=0x00c01a; 	J(JMP(loc_32379));	// 107689                  jmp     loc_32379 ;~ 17C5:C01A
loc_3224d:
	// 6334 
cs=0x17c5;eip=0x00c01d; 	T(CMP(*(dw*)(raddr(ss,bp-0x10)), 0x1E));	// 107693                  cmp     word ptr [bp-10h], 1Eh ;~ 17C5:C01D
cs=0x17c5;eip=0x00c021; 	J(JNZ(loc_32288));	// 107694                  jnz     short loc_32288 ;~ 17C5:C021
cs=0x17c5;eip=0x00c023; 	T(si = word_49924;);	// 107695                  mov     si, word_49924 ;~ 17C5:C023
cs=0x17c5;eip=0x00c027; 	T(cl = 4;);	// 107696                  mov     cl, 4 ;~ 17C5:C027
cs=0x17c5;eip=0x00c029; 	T(SHL(si, cl));	// 107697                  shl     si, cl ;~ 17C5:C029
cs=0x17c5;eip=0x00c02b; 	T(ax = 0x40;);	// 107698                  mov     ax, 40h ; '@' ;~ 17C5:C02B
cs=0x17c5;eip=0x00c02e; 	X(PUSH(ax));	// 107699                  push    ax ;~ 17C5:C02E
cs=0x17c5;eip=0x00c02f; 	T(SUB(ax, ax));	// 107700                  sub     ax, ax ;~ 17C5:C02F
cs=0x17c5;eip=0x00c031; 	X(PUSH(ax));	// 107701                  push    ax ;~ 17C5:C031
cs=0x17c5;eip=0x00c032; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x26))));	// 107702                  mov     ax, [bp-26h] ;~ 17C5:C032
cs=0x17c5;eip=0x00c035; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 107703                  sub     ax, [si-7E50h] ;~ 17C5:C035
cs=0x17c5;eip=0x00c039; 	X(PUSH(ax));	// 107704                  push    ax ;~ 17C5:C039
cs=0x17c5;eip=0x00c03a; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x24))));	// 107705                  mov     ax, [bp-24h] ;~ 17C5:C03A
cs=0x17c5;eip=0x00c03d; 	T(SUB(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 107706                  sub     ax, [si-7E52h] ;~ 17C5:C03D
cs=0x17c5;eip=0x00c041; 	X(PUSH(ax));	// 107707                  push    ax ;~ 17C5:C041
cs=0x17c5;eip=0x00c042; 	J(CALL(sub_331d6,0));	// 107708                  call    sub_331D6 ;~ 17C5:C042
cs=0x17c5;eip=0x00c045; 	T(ADD(sp, 4));	// 107709                  add     sp, 4 ;~ 17C5:C045
cs=0x17c5;eip=0x00c048; 	T(cl = 3;);	// 107710                  mov     cl, 3 ;~ 17C5:C048
cs=0x17c5;eip=0x00c04a; 	T(SAR(ax, cl));	// 107711                  sar     ax, cl ;~ 17C5:C04A
cs=0x17c5;eip=0x00c04c; 	X(PUSH(ax));	// 107712                  push    ax ;~ 17C5:C04C
cs=0x17c5;eip=0x00c04d; 	J(CALL(sub_33194,0));	// 107713                  call    sub_33194 ;~ 17C5:C04D
cs=0x17c5;eip=0x00c050; 	T(ADD(sp, 6));	// 107714                  add     sp, 6 ;~ 17C5:C050
cs=0x17c5;eip=0x00c053; 	X(word_52246 = ax;);	// 107715                  mov     ds:word_52246, ax ;~ 17C5:C053
cs=0x17c5;eip=0x00c056; 	J(JMP(loc_322a7));	// 107716                  jmp     short loc_322A7 ;~ 17C5:C056
loc_32288:
	// 6335 
cs=0x17c5;eip=0x00c058; 	T(ax = 0x40;);	// 107720                  mov     ax, 40h ; '@' ;~ 17C5:C058
cs=0x17c5;eip=0x00c05b; 	X(PUSH(ax));	// 107721                  push    ax ;~ 17C5:C05B
cs=0x17c5;eip=0x00c05c; 	T(SUB(ax, ax));	// 107722                  sub     ax, ax ;~ 17C5:C05C
cs=0x17c5;eip=0x00c05e; 	X(PUSH(ax));	// 107723                  push    ax ;~ 17C5:C05E
cs=0x17c5;eip=0x00c05f; 	X(PUSH(word_49924));	// 107724                  push    word_49924 ;~ 17C5:C05F
cs=0x17c5;eip=0x00c063; 	J(CALL(sub_329d2,0));	// 107725                  call    sub_329D2 ;~ 17C5:C063
cs=0x17c5;eip=0x00c066; 	T(ADD(sp, 2));	// 107726                  add     sp, 2 ;~ 17C5:C066
cs=0x17c5;eip=0x00c069; 	T(cl = 3;);	// 107727                  mov     cl, 3 ;~ 17C5:C069
cs=0x17c5;eip=0x00c06b; 	T(SAR(ax, cl));	// 107728                  sar     ax, cl ;~ 17C5:C06B
cs=0x17c5;eip=0x00c06d; 	X(PUSH(ax));	// 107729                  push    ax ;~ 17C5:C06D
cs=0x17c5;eip=0x00c06e; 	J(CALL(sub_33194,0));	// 107730                  call    sub_33194 ;~ 17C5:C06E
cs=0x17c5;eip=0x00c071; 	T(ADD(sp, 6));	// 107731                  add     sp, 6 ;~ 17C5:C071
cs=0x17c5;eip=0x00c074; 	X(word_52246 = ax;);	// 107732                  mov     ds:word_52246, ax ;~ 17C5:C074
loc_322a7:
	// 6336 
cs=0x17c5;eip=0x00c077; 	T(ax = 0x0C;);	// 107735                  mov     ax, 0Ch ;~ 17C5:C077
cs=0x17c5;eip=0x00c07a; 	X(PUSH(ax));	// 107736                  push    ax ;~ 17C5:C07A
cs=0x17c5;eip=0x00c07b; 	J(CALL(sub_30074,0));	// 107737                  call    sub_30074 ;~ 17C5:C07B
cs=0x17c5;eip=0x00c07e; 	T(ADD(sp, 2));	// 107738                  add     sp, 2 ;~ 17C5:C07E
cs=0x17c5;eip=0x00c081; 	T(ax = 0x9F;);	// 107739                  mov     ax, 9Fh ;~ 17C5:C081
cs=0x17c5;eip=0x00c084; 	T(SUB(ax, word_52246));	// 107740                  sub     ax, ds:word_52246 ;~ 17C5:C084
cs=0x17c5;eip=0x00c088; 	T(si = ax;);	// 107741                  mov     si, ax ;~ 17C5:C088
cs=0x17c5;eip=0x00c08a; 	T(ax = 0x1E;);	// 107742                  mov     ax, 1Eh ;~ 17C5:C08A
cs=0x17c5;eip=0x00c08d; 	X(PUSH(ax));	// 107743                  push    ax ;~ 17C5:C08D
cs=0x17c5;eip=0x00c08e; 	X(PUSH(si));	// 107744                  push    si ;~ 17C5:C08E
cs=0x17c5;eip=0x00c08f; 	T(ax = 0x21;);	// 107745                  mov     ax, 21h ; '!' ;~ 17C5:C08F
cs=0x17c5;eip=0x00c092; 	X(PUSH(ax));	// 107746                  push    ax ;~ 17C5:C092
cs=0x17c5;eip=0x00c093; 	X(PUSH(si));	// 107747                  push    si ;~ 17C5:C093
cs=0x17c5;eip=0x00c094; 	J(CALL(sub_2fe3c,0));	// 107748                  call    sub_2FE3C ;~ 17C5:C094
cs=0x17c5;eip=0x00c097; 	T(ADD(sp, 8));	// 107750                  add     sp, 8 ;~ 17C5:C097
cs=0x17c5;eip=0x00c09a; 	T(si = word_52246;);	// 107751                  mov     si, ds:word_52246 ;~ 17C5:C09A
cs=0x17c5;eip=0x00c09e; 	T(ADD(si, 0x0A0));	// 107752                  add     si, 0A0h ;~ 17C5:C09E
cs=0x17c5;eip=0x00c0a2; 	T(ax = 0x1E;);	// 107753                  mov     ax, 1Eh ;~ 17C5:C0A2
cs=0x17c5;eip=0x00c0a5; 	X(PUSH(ax));	// 107754                  push    ax ;~ 17C5:C0A5
cs=0x17c5;eip=0x00c0a6; 	X(PUSH(si));	// 107755                  push    si ;~ 17C5:C0A6
cs=0x17c5;eip=0x00c0a7; 	T(ax = 0x21;);	// 107756                  mov     ax, 21h ; '!' ;~ 17C5:C0A7
cs=0x17c5;eip=0x00c0aa; 	X(PUSH(ax));	// 107757                  push    ax ;~ 17C5:C0AA
cs=0x17c5;eip=0x00c0ab; 	X(PUSH(si));	// 107758                  push    si ;~ 17C5:C0AB
cs=0x17c5;eip=0x00c0ac; 	J(CALL(sub_2fe3c,0));	// 107759                  call    sub_2FE3C ;~ 17C5:C0AC
cs=0x17c5;eip=0x00c0af; 	T(ADD(sp, 8));	// 107761                  add     sp, 8 ;~ 17C5:C0AF
cs=0x17c5;eip=0x00c0b2; 	T(ax = 0x1E;);	// 107762                  mov     ax, 1Eh ;~ 17C5:C0B2
cs=0x17c5;eip=0x00c0b5; 	X(PUSH(ax));	// 107763                  push    ax ;~ 17C5:C0B5
cs=0x17c5;eip=0x00c0b6; 	T(ax = word_52246;);	// 107764                  mov     ax, ds:word_52246 ;~ 17C5:C0B6
cs=0x17c5;eip=0x00c0b9; 	T(ADD(ax, 0x0A0));	// 107765                  add     ax, 0A0h ;~ 17C5:C0B9
cs=0x17c5;eip=0x00c0bc; 	X(PUSH(ax));	// 107766                  push    ax ;~ 17C5:C0BC
cs=0x17c5;eip=0x00c0bd; 	T(ax = 0x1E;);	// 107767                  mov     ax, 1Eh ;~ 17C5:C0BD
cs=0x17c5;eip=0x00c0c0; 	X(PUSH(ax));	// 107768                  push    ax ;~ 17C5:C0C0
cs=0x17c5;eip=0x00c0c1; 	T(ax = 0x9F;);	// 107769                  mov     ax, 9Fh ;~ 17C5:C0C1
cs=0x17c5;eip=0x00c0c4; 	T(SUB(ax, word_52246));	// 107770                  sub     ax, ds:word_52246 ;~ 17C5:C0C4
cs=0x17c5;eip=0x00c0c8; 	X(PUSH(ax));	// 107771                  push    ax ;~ 17C5:C0C8
cs=0x17c5;eip=0x00c0c9; 	J(CALL(sub_2fe3c,0));	// 107772                  call    sub_2FE3C ;~ 17C5:C0C9
cs=0x17c5;eip=0x00c0cc; 	T(ADD(sp, 8));	// 107774                  add     sp, 8 ;~ 17C5:C0CC
cs=0x17c5;eip=0x00c0cf; 	T(ax = 0x0F;);	// 107775                  mov     ax, 0Fh ;~ 17C5:C0CF
cs=0x17c5;eip=0x00c0d2; 	X(PUSH(ax));	// 107776                  push    ax ;~ 17C5:C0D2
cs=0x17c5;eip=0x00c0d3; 	J(CALL(sub_30074,0));	// 107777                  call    sub_30074 ;~ 17C5:C0D3
cs=0x17c5;eip=0x00c0d6; 	T(ADD(sp, 2));	// 107778                  add     sp, 2 ;~ 17C5:C0D6
cs=0x17c5;eip=0x00c0d9; 	T(ax = *(word_4ac7c););	// 107779                  mov     ax, word_4AC7C ;~ 17C5:C0D9
cs=0x17c5;eip=0x00c0dc; 	T(SUB(ax, 4));	// 107780                  sub     ax, 4 ;~ 17C5:C0DC
cs=0x17c5;eip=0x00c0df; 	X(PUSH(ax));	// 107781                  push    ax ;~ 17C5:C0DF
cs=0x17c5;eip=0x00c0e0; 	X(PUSH(*(word_4aa98)));	// 107782                  push    word_4AA98 ;~ 17C5:C0E0
cs=0x17c5;eip=0x00c0e4; 	X(PUSH(*(word_4ac7c)));	// 107783                  push    word_4AC7C ;~ 17C5:C0E4
cs=0x17c5;eip=0x00c0e8; 	T(ax = *(word_4aa98););	// 107784                  mov     ax, word_4AA98 ;~ 17C5:C0E8
cs=0x17c5;eip=0x00c0eb; 	T(SUB(ax, 4));	// 107785                  sub     ax, 4 ;~ 17C5:C0EB
cs=0x17c5;eip=0x00c0ee; 	X(PUSH(ax));	// 107786                  push    ax ;~ 17C5:C0EE
cs=0x17c5;eip=0x00c0ef; 	J(CALL(sub_2ffe0,0));	// 107787                  call    sub_2FFE0 ;~ 17C5:C0EF
cs=0x17c5;eip=0x00c0f2; 	T(ADD(sp, 8));	// 107789                  add     sp, 8 ;~ 17C5:C0F2
cs=0x17c5;eip=0x00c0f5; 	X(PUSH(*(word_4ac7c)));	// 107790                  push    word_4AC7C ;~ 17C5:C0F5
cs=0x17c5;eip=0x00c0f9; 	T(ax = *(word_4aa98););	// 107791                  mov     ax, word_4AA98 ;~ 17C5:C0F9
cs=0x17c5;eip=0x00c0fc; 	T(ADD(ax, 4));	// 107792                  add     ax, 4 ;~ 17C5:C0FC
cs=0x17c5;eip=0x00c0ff; 	X(PUSH(ax));	// 107793                  push    ax ;~ 17C5:C0FF
cs=0x17c5;eip=0x00c100; 	T(ax = *(word_4ac7c););	// 107794                  mov     ax, word_4AC7C ;~ 17C5:C100
cs=0x17c5;eip=0x00c103; 	T(SUB(ax, 4));	// 107795                  sub     ax, 4 ;~ 17C5:C103
cs=0x17c5;eip=0x00c106; 	X(PUSH(ax));	// 107796                  push    ax ;~ 17C5:C106
cs=0x17c5;eip=0x00c107; 	X(PUSH(*(word_4aa98)));	// 107797                  push    word_4AA98 ;~ 17C5:C107
cs=0x17c5;eip=0x00c10b; 	J(CALL(sub_2ffe0,0));	// 107798                  call    sub_2FFE0 ;~ 17C5:C10B
cs=0x17c5;eip=0x00c10e; 	T(ADD(sp, 8));	// 107800                  add     sp, 8 ;~ 17C5:C10E
cs=0x17c5;eip=0x00c111; 	T(ax = *(word_4ac7c););	// 107801                  mov     ax, word_4AC7C ;~ 17C5:C111
cs=0x17c5;eip=0x00c114; 	T(ADD(ax, 4));	// 107802                  add     ax, 4 ;~ 17C5:C114
cs=0x17c5;eip=0x00c117; 	X(PUSH(ax));	// 107803                  push    ax ;~ 17C5:C117
cs=0x17c5;eip=0x00c118; 	X(PUSH(*(word_4aa98)));	// 107804                  push    word_4AA98 ;~ 17C5:C118
cs=0x17c5;eip=0x00c11c; 	X(PUSH(*(word_4ac7c)));	// 107805                  push    word_4AC7C ;~ 17C5:C11C
cs=0x17c5;eip=0x00c120; 	T(ax = *(word_4aa98););	// 107806                  mov     ax, word_4AA98 ;~ 17C5:C120
cs=0x17c5;eip=0x00c123; 	T(ADD(ax, 4));	// 107807                  add     ax, 4 ;~ 17C5:C123
cs=0x17c5;eip=0x00c126; 	X(PUSH(ax));	// 107808                  push    ax ;~ 17C5:C126
cs=0x17c5;eip=0x00c127; 	J(CALL(sub_2ffe0,0));	// 107809                  call    sub_2FFE0 ;~ 17C5:C127
cs=0x17c5;eip=0x00c12a; 	T(ADD(sp, 8));	// 107811                  add     sp, 8 ;~ 17C5:C12A
cs=0x17c5;eip=0x00c12d; 	X(PUSH(*(word_4ac7c)));	// 107812                  push    word_4AC7C ;~ 17C5:C12D
cs=0x17c5;eip=0x00c131; 	T(ax = *(word_4aa98););	// 107813                  mov     ax, word_4AA98 ;~ 17C5:C131
cs=0x17c5;eip=0x00c134; 	T(SUB(ax, 4));	// 107814                  sub     ax, 4 ;~ 17C5:C134
cs=0x17c5;eip=0x00c137; 	X(PUSH(ax));	// 107815                  push    ax ;~ 17C5:C137
cs=0x17c5;eip=0x00c138; 	T(ax = *(word_4ac7c););	// 107816                  mov     ax, word_4AC7C ;~ 17C5:C138
cs=0x17c5;eip=0x00c13b; 	T(ADD(ax, 4));	// 107817                  add     ax, 4 ;~ 17C5:C13B
cs=0x17c5;eip=0x00c13e; 	X(PUSH(ax));	// 107818                  push    ax ;~ 17C5:C13E
cs=0x17c5;eip=0x00c13f; 	X(PUSH(*(word_4aa98)));	// 107819                  push    word_4AA98 ;~ 17C5:C13F
cs=0x17c5;eip=0x00c143; 	J(CALL(sub_2ffe0,0));	// 107820                  call    sub_2FFE0 ;~ 17C5:C143
cs=0x17c5;eip=0x00c146; 	T(ADD(sp, 8));	// 107822                  add     sp, 8 ;~ 17C5:C146
loc_32379:
	// 6337 
cs=0x17c5;eip=0x00c149; 	T(CMP(word_4f836, 0));	// 107826                  cmp     ds:word_4F836, 0 ;~ 17C5:C149
cs=0x17c5;eip=0x00c14e; 	J(JZ(loc_323c3));	// 107827                  jz      short loc_323C3 ;~ 17C5:C14E
cs=0x17c5;eip=0x00c150; 	T(CMP(word_522ce, 0x13));	// 107828                  cmp     ds:word_522CE, 13h ;~ 17C5:C150
cs=0x17c5;eip=0x00c155; 	J(JNZ(loc_323c3));	// 107829                  jnz     short loc_323C3 ;~ 17C5:C155
cs=0x17c5;eip=0x00c157; 	T(CMP(word_4f834, 0));	// 107830                  cmp     ds:word_4F834, 0 ;~ 17C5:C157
cs=0x17c5;eip=0x00c15c; 	J(JZ(loc_323c3));	// 107831                  jz      short loc_323C3 ;~ 17C5:C15C
cs=0x17c5;eip=0x00c15e; 	T(CMP(word_4f632, 0));	// 107832                  cmp     ds:word_4F632, 0 ;~ 17C5:C15E
cs=0x17c5;eip=0x00c163; 	J(JZ(loc_323c3));	// 107833                  jz      short loc_323C3 ;~ 17C5:C163
cs=0x17c5;eip=0x00c165; 	T(SUB(ax, ax));	// 107834                  sub     ax, ax ;~ 17C5:C165
cs=0x17c5;eip=0x00c167; 	X(PUSH(ax));	// 107835                  push    ax ;~ 17C5:C167
cs=0x17c5;eip=0x00c168; 	T(ax = 0x20;);	// 107836                  mov     ax, 20h ; ' ' ;~ 17C5:C168
cs=0x17c5;eip=0x00c16b; 	X(PUSH(ax));	// 107837                  push    ax ;~ 17C5:C16B
cs=0x17c5;eip=0x00c16c; 	X(PUSH(ax));	// 107838                  push    ax ;~ 17C5:C16C
cs=0x17c5;eip=0x00c16d; 	T(ax = 0x3F;);	// 107839                  mov     ax, 3Fh ; '?' ;~ 17C5:C16D
cs=0x17c5;eip=0x00c170; 	X(PUSH(ax));	// 107840                  push    ax ;~ 17C5:C170
cs=0x17c5;eip=0x00c171; 	X(PUSH(word_4f836));	// 107841                  push    ds:word_4F836 ;~ 17C5:C171
cs=0x17c5;eip=0x00c175; 	J(CALL(sub_34dc0,0));	// 107842                  call    sub_34DC0 ;~ 17C5:C175
cs=0x17c5;eip=0x00c178; 	T(ADD(sp, 2));	// 107843                  add     sp, 2 ;~ 17C5:C178
cs=0x17c5;eip=0x00c17b; 	T(SUB(ax, 8));	// 107844                  sub     ax, 8 ;~ 17C5:C17B
cs=0x17c5;eip=0x00c17e; 	T(NEG(ax));	// 107845                  neg     ax ;~ 17C5:C17E
cs=0x17c5;eip=0x00c180; 	T(cl = 5;);	// 107846                  mov     cl, 5 ;~ 17C5:C180
cs=0x17c5;eip=0x00c182; 	T(SHL(ax, cl));	// 107847                  shl     ax, cl ;~ 17C5:C182
cs=0x17c5;eip=0x00c184; 	X(PUSH(ax));	// 107848                  push    ax ;~ 17C5:C184
cs=0x17c5;eip=0x00c185; 	T(ax = 0x8C;);	// 107849                  mov     ax, 8Ch ;~ 17C5:C185
cs=0x17c5;eip=0x00c188; 	X(PUSH(ax));	// 107850                  push    ax ;~ 17C5:C188
cs=0x17c5;eip=0x00c189; 	T(ax = 0x0FC;);	// 107851                  mov     ax, 0FCh ;~ 17C5:C189
cs=0x17c5;eip=0x00c18c; 	X(PUSH(ax));	// 107852                  push    ax ;~ 17C5:C18C
cs=0x17c5;eip=0x00c18d; 	J(CALL(sub_30af8,0));	// 107853                  call    sub_30AF8 ;~ 17C5:C18D
cs=0x17c5;eip=0x00c190; 	T(ADD(sp, 0x0E));	// 107855                  add     sp, 0Eh ;~ 17C5:C190
loc_323c3:
	// 6338 
cs=0x17c5;eip=0x00c193; 	T(CMP(word_522ce, 0x13));	// 107859                  cmp     ds:word_522CE, 13h ;~ 17C5:C193
cs=0x17c5;eip=0x00c198; 	J(JNZ(loc_323e3));	// 107860                  jnz     short loc_323E3 ;~ 17C5:C198
cs=0x17c5;eip=0x00c19a; 	T(CMP(word_4ef32, 0));	// 107861                  cmp     ds:word_4EF32, 0 ;~ 17C5:C19A
cs=0x17c5;eip=0x00c19f; 	J(JZ(loc_323e3));	// 107862                  jz      short loc_323E3 ;~ 17C5:C19F
cs=0x17c5;eip=0x00c1a1; 	T(CMP(word_4f632, 0));	// 107863                  cmp     ds:word_4F632, 0 ;~ 17C5:C1A1
cs=0x17c5;eip=0x00c1a6; 	J(JNZ(loc_323e3));	// 107864                  jnz     short loc_323E3 ;~ 17C5:C1A6
cs=0x17c5;eip=0x00c1a8; 	T(ax = 3;);	// 107865                  mov     ax, 3 ;~ 17C5:C1A8
cs=0x17c5;eip=0x00c1ab; 	X(PUSH(ax));	// 107866                  push    ax ;~ 17C5:C1AB
cs=0x17c5;eip=0x00c1ac; 	X(PUSH(ax));	// 107867                  push    ax ;~ 17C5:C1AC
cs=0x17c5;eip=0x00c1ad; 	J(CALL(sub_301fc,0));	// 107868                  call    sub_301FC ;~ 17C5:C1AD
cs=0x17c5;eip=0x00c1b0; 	T(ADD(sp, 4));	// 107869                  add     sp, 4 ;~ 17C5:C1B0
loc_323e3:
	// 6339 
cs=0x17c5;eip=0x00c1b3; 	X(POP(si));	// 107873                  pop     si ;~ 17C5:C1B3
cs=0x17c5;eip=0x00c1b4; 	X(POP(di));	// 107874                  pop     di ;~ 17C5:C1B4
cs=0x17c5;eip=0x00c1b5; 	T(sp = bp;);	// 107875                  mov     sp, bp ;~ 17C5:C1B5
cs=0x17c5;eip=0x00c1b7; 	X(POP(bp));	// 107876                  pop     bp ;~ 17C5:C1B7
cs=0x17c5;eip=0x00c1b8; 	J(RETN(0));	// 107877                  retn ;~ 17C5:C1B8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_30bec: 	goto loc_30bec;
        case m2c::kloc_30c0a: 	goto loc_30c0a;
        case m2c::kloc_30c0e: 	goto loc_30c0e;
        case m2c::kloc_30c28: 	goto loc_30c28;
        case m2c::kloc_30c75: 	goto loc_30c75;
        case m2c::kloc_30c80: 	goto loc_30c80;
        case m2c::kloc_30c91: 	goto loc_30c91;
        case m2c::kloc_30c9b: 	goto loc_30c9b;
        case m2c::kloc_30ca5: 	goto loc_30ca5;
        case m2c::kloc_30caf: 	goto loc_30caf;
        case m2c::kloc_30cb9: 	goto loc_30cb9;
        case m2c::kloc_30cc3: 	goto loc_30cc3;
        case m2c::kloc_30cd3: 	goto loc_30cd3;
        case m2c::kloc_30d0f: 	goto loc_30d0f;
        case m2c::kloc_30d1a: 	goto loc_30d1a;
        case m2c::kloc_30d38: 	goto loc_30d38;
        case m2c::kloc_30d3e: 	goto loc_30d3e;
        case m2c::kloc_30d40: 	goto loc_30d40;
        case m2c::kloc_30d4b: 	goto loc_30d4b;
        case m2c::kloc_30d57: 	goto loc_30d57;
        case m2c::kloc_30d5a: 	goto loc_30d5a;
        case m2c::kloc_30da9: 	goto loc_30da9;
        case m2c::kloc_30db9: 	goto loc_30db9;
        case m2c::kloc_30dbf: 	goto loc_30dbf;
        case m2c::kloc_30dd8: 	goto loc_30dd8;
        case m2c::kloc_30ddb: 	goto loc_30ddb;
        case m2c::kloc_30df0: 	goto loc_30df0;
        case m2c::kloc_30df6: 	goto loc_30df6;
        case m2c::kloc_30df8: 	goto loc_30df8;
        case m2c::kloc_30e04: 	goto loc_30e04;
        case m2c::kloc_30e0b: 	goto loc_30e0b;
        case m2c::kloc_30e0e: 	goto loc_30e0e;
        case m2c::kloc_30e17: 	goto loc_30e17;
        case m2c::kloc_30e62: 	goto loc_30e62;
        case m2c::kloc_30e6c: 	goto loc_30e6c;
        case m2c::kloc_30e76: 	goto loc_30e76;
        case m2c::kloc_30e80: 	goto loc_30e80;
        case m2c::kloc_30e93: 	goto loc_30e93;
        case m2c::kloc_30e96: 	goto loc_30e96;
        case m2c::kloc_30e9d: 	goto loc_30e9d;
        case m2c::kloc_30ea0: 	goto loc_30ea0;
        case m2c::kloc_30ec6: 	goto loc_30ec6;
        case m2c::kloc_30ec8: 	goto loc_30ec8;
        case m2c::kloc_30ee3: 	goto loc_30ee3;
        case m2c::kloc_30f33: 	goto loc_30f33;
        case m2c::kloc_30f35: 	goto loc_30f35;
        case m2c::kloc_30f3a: 	goto loc_30f3a;
        case m2c::kloc_30f46: 	goto loc_30f46;
        case m2c::kloc_30f49: 	goto loc_30f49;
        case m2c::kloc_30f54: 	goto loc_30f54;
        case m2c::kloc_30f66: 	goto loc_30f66;
        case m2c::kloc_30f7e: 	goto loc_30f7e;
        case m2c::kloc_30fdd: 	goto loc_30fdd;
        case m2c::kloc_31001: 	goto loc_31001;
        case m2c::kloc_31012: 	goto loc_31012;
        case m2c::kloc_31025: 	goto loc_31025;
        case m2c::kloc_3102f: 	goto loc_3102f;
        case m2c::kloc_3108f: 	goto loc_3108f;
        case m2c::kloc_3109e: 	goto loc_3109e;
        case m2c::kloc_310da: 	goto loc_310da;
        case m2c::kloc_31114: 	goto loc_31114;
        case m2c::kloc_31117: 	goto loc_31117;
        case m2c::kloc_3112d: 	goto loc_3112d;
        case m2c::kloc_3114d: 	goto loc_3114d;
        case m2c::kloc_31150: 	goto loc_31150;
        case m2c::kloc_31162: 	goto loc_31162;
        case m2c::kloc_3116f: 	goto loc_3116f;
        case m2c::kloc_31176: 	goto loc_31176;
        case m2c::kloc_31179: 	goto loc_31179;
        case m2c::kloc_31182: 	goto loc_31182;
        case m2c::kloc_31194: 	goto loc_31194;
        case m2c::kloc_311b0: 	goto loc_311b0;
        case m2c::kloc_311d3: 	goto loc_311d3;
        case m2c::kloc_311d6: 	goto loc_311d6;
        case m2c::kloc_311f3: 	goto loc_311f3;
        case m2c::kloc_311fd: 	goto loc_311fd;
        case m2c::kloc_31207: 	goto loc_31207;
        case m2c::kloc_31211: 	goto loc_31211;
        case m2c::kloc_31228: 	goto loc_31228;
        case m2c::kloc_31233: 	goto loc_31233;
        case m2c::kloc_31236: 	goto loc_31236;
        case m2c::kloc_31253: 	goto loc_31253;
        case m2c::kloc_31256: 	goto loc_31256;
        case m2c::kloc_3128a: 	goto loc_3128a;
        case m2c::kloc_3128d: 	goto loc_3128d;
        case m2c::kloc_3129e: 	goto loc_3129e;
        case m2c::kloc_312a8: 	goto loc_312a8;
        case m2c::kloc_312b1: 	goto loc_312b1;
        case m2c::kloc_312bb: 	goto loc_312bb;
        case m2c::kloc_312c7: 	goto loc_312c7;
        case m2c::kloc_312d1: 	goto loc_312d1;
        case m2c::kloc_312dc: 	goto loc_312dc;
        case m2c::kloc_312ed: 	goto loc_312ed;
        case m2c::kloc_31371: 	goto loc_31371;
        case m2c::kloc_31377: 	goto loc_31377;
        case m2c::kloc_31392: 	goto loc_31392;
        case m2c::kloc_31395: 	goto loc_31395;
        case m2c::kloc_313ce: 	goto loc_313ce;
        case m2c::kloc_313d1: 	goto loc_313d1;
        case m2c::kloc_313ed: 	goto loc_313ed;
        case m2c::kloc_313ef: 	goto loc_313ef;
        case m2c::kloc_31412: 	goto loc_31412;
        case m2c::kloc_31415: 	goto loc_31415;
        case m2c::kloc_31423: 	goto loc_31423;
        case m2c::kloc_3143c: 	goto loc_3143c;
        case m2c::kloc_314a0: 	goto loc_314a0;
        case m2c::kloc_314a9: 	goto loc_314a9;
        case m2c::kloc_314c4: 	goto loc_314c4;
        case m2c::kloc_314c7: 	goto loc_314c7;
        case m2c::kloc_314f2: 	goto loc_314f2;
        case m2c::kloc_314f9: 	goto loc_314f9;
        case m2c::kloc_314fc: 	goto loc_314fc;
        case m2c::kloc_31507: 	goto loc_31507;
        case m2c::kloc_3151c: 	goto loc_3151c;
        case m2c::kloc_3160a: 	goto loc_3160a;
        case m2c::kloc_3160d: 	goto loc_3160d;
        case m2c::kloc_31610: 	goto loc_31610;
        case m2c::kloc_316a6: 	goto loc_316a6;
        case m2c::kloc_316d6: 	goto loc_316d6;
        case m2c::kloc_316ef: 	goto loc_316ef;
        case m2c::kloc_31711: 	goto loc_31711;
        case m2c::kloc_3173d: 	goto loc_3173d;
        case m2c::kloc_3174d: 	goto loc_3174d;
        case m2c::kloc_31759: 	goto loc_31759;
        case m2c::kloc_31763: 	goto loc_31763;
        case m2c::kloc_31772: 	goto loc_31772;
        case m2c::kloc_3177c: 	goto loc_3177c;
        case m2c::kloc_317eb: 	goto loc_317eb;
        case m2c::kloc_317ee: 	goto loc_317ee;
        case m2c::kloc_317f8: 	goto loc_317f8;
        case m2c::kloc_31814: 	goto loc_31814;
        case m2c::kloc_3182f: 	goto loc_3182f;
        case m2c::kloc_31832: 	goto loc_31832;
        case m2c::kloc_3183b: 	goto loc_3183b;
        case m2c::kloc_3188e: 	goto loc_3188e;
        case m2c::kloc_318ab: 	goto loc_318ab;
        case m2c::kloc_318ef: 	goto loc_318ef;
        case m2c::kloc_318f2: 	goto loc_318f2;
        case m2c::kloc_31902: 	goto loc_31902;
        case m2c::kloc_31908: 	goto loc_31908;
        case m2c::kloc_31912: 	goto loc_31912;
        case m2c::kloc_3191f: 	goto loc_3191f;
        case m2c::kloc_3192b: 	goto loc_3192b;
        case m2c::kloc_3192e: 	goto loc_3192e;
        case m2c::kloc_31965: 	goto loc_31965;
        case m2c::kloc_3196f: 	goto loc_3196f;
        case m2c::kloc_31979: 	goto loc_31979;
        case m2c::kloc_319da: 	goto loc_319da;
        case m2c::kloc_319e4: 	goto loc_319e4;
        case m2c::kloc_319f0: 	goto loc_319f0;
        case m2c::kloc_319f2: 	goto loc_319f2;
        case m2c::kloc_31a1d: 	goto loc_31a1d;
        case m2c::kloc_31a1f: 	goto loc_31a1f;
        case m2c::kloc_31a29: 	goto loc_31a29;
        case m2c::kloc_31a41: 	goto loc_31a41;
        case m2c::kloc_31a53: 	goto loc_31a53;
        case m2c::kloc_31a7d: 	goto loc_31a7d;
        case m2c::kloc_31aaa: 	goto loc_31aaa;
        case m2c::kloc_31ad7: 	goto loc_31ad7;
        case m2c::kloc_31ada: 	goto loc_31ada;
        case m2c::kloc_31ae1: 	goto loc_31ae1;
        case m2c::kloc_31ae3: 	goto loc_31ae3;
        case m2c::kloc_31ae9: 	goto loc_31ae9;
        case m2c::kloc_31aeb: 	goto loc_31aeb;
        case m2c::kloc_31afd: 	goto loc_31afd;
        case m2c::kloc_31aff: 	goto loc_31aff;
        case m2c::kloc_31b06: 	goto loc_31b06;
        case m2c::kloc_31b0c: 	goto loc_31b0c;
        case m2c::kloc_31b1d: 	goto loc_31b1d;
        case m2c::kloc_31b20: 	goto loc_31b20;
        case m2c::kloc_31b2f: 	goto loc_31b2f;
        case m2c::kloc_31b7a: 	goto loc_31b7a;
        case m2c::kloc_31b9b: 	goto loc_31b9b;
        case m2c::kloc_31bac: 	goto loc_31bac;
        case m2c::kloc_31bb6: 	goto loc_31bb6;
        case m2c::kloc_31c94: 	goto loc_31c94;
        case m2c::kloc_31c97: 	goto loc_31c97;
        case m2c::kloc_31ce1: 	goto loc_31ce1;
        case m2c::kloc_31d23: 	goto loc_31d23;
        case m2c::kloc_31d45: 	goto loc_31d45;
        case m2c::kloc_31d66: 	goto loc_31d66;
        case m2c::kloc_31d89: 	goto loc_31d89;
        case m2c::kloc_31db3: 	goto loc_31db3;
        case m2c::kloc_31dc9: 	goto loc_31dc9;
        case m2c::kloc_31de6: 	goto loc_31de6;
        case m2c::kloc_31dfd: 	goto loc_31dfd;
        case m2c::kloc_31e07: 	goto loc_31e07;
        case m2c::kloc_31e11: 	goto loc_31e11;
        case m2c::kloc_31e36: 	goto loc_31e36;
        case m2c::kloc_31e42: 	goto loc_31e42;
        case m2c::kloc_31e44: 	goto loc_31e44;
        case m2c::kloc_31ede: 	goto loc_31ede;
        case m2c::kloc_31ee1: 	goto loc_31ee1;
        case m2c::kloc_31ee8: 	goto loc_31ee8;
        case m2c::kloc_31efd: 	goto loc_31efd;
        case m2c::kloc_31f07: 	goto loc_31f07;
        case m2c::kloc_31f11: 	goto loc_31f11;
        case m2c::kloc_31f1b: 	goto loc_31f1b;
        case m2c::kloc_32010: 	goto loc_32010;
        case m2c::kloc_3203d: 	goto loc_3203d;
        case m2c::kloc_32047: 	goto loc_32047;
        case m2c::kloc_32062: 	goto loc_32062;
        case m2c::kloc_320cc: 	goto loc_320cc;
        case m2c::kloc_320d6: 	goto loc_320d6;
        case m2c::kloc_320e0: 	goto loc_320e0;
        case m2c::kloc_32100: 	goto loc_32100;
        case m2c::kloc_32112: 	goto loc_32112;
        case m2c::kloc_321a6: 	goto loc_321a6;
        case m2c::kloc_321c6: 	goto loc_321c6;
        case m2c::kloc_321e6: 	goto loc_321e6;
        case m2c::kloc_321f5: 	goto loc_321f5;
        case m2c::kloc_321ff: 	goto loc_321ff;
        case m2c::kloc_3224d: 	goto loc_3224d;
        case m2c::kloc_32288: 	goto loc_32288;
        case m2c::kloc_322a7: 	goto loc_322a7;
        case m2c::kloc_32379: 	goto loc_32379;
        case m2c::kloc_323c3: 	goto loc_323c3;
        case m2c::kloc_323e3: 	goto loc_323e3;
        case m2c::kseg2623_a98b_proc: 	goto seg2623_a98b_proc;
        case m2c::ksub_30b92: 	goto sub_30b92;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_323e9(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_323e9:
    _begin:
#undef var_a
#define var_a -0x0A
	// 107886 var_A           = word ptr -0Ah ;~ 17C5:C1B9
#undef var_8
#define var_8 -8
	// 107887 var_8           = word ptr -8 ;~ 17C5:C1B9
#undef var_6
#define var_6 -6
	// 107888 var_6           = word ptr -6 ;~ 17C5:C1B9
#undef var_4
#define var_4 -4
	// 107889 var_4           = word ptr -4 ;~ 17C5:C1B9
#undef var_2
#define var_2 -2
	// 107890 var_2           = word ptr -2 ;~ 17C5:C1B9
#undef arg_0
#define arg_0 4
	// 107891 arg_0           = word ptr  4 ;~ 17C5:C1B9
#undef arg_2
#define arg_2 6
	// 107892 arg_2           = word ptr  6 ;~ 17C5:C1B9
#undef arg_4
#define arg_4 8
	// 107893 arg_4           = word ptr  8 ;~ 17C5:C1B9
#undef arg_6
#define arg_6 0x0A
	// 107894 arg_6           = word ptr  0Ah ;~ 17C5:C1B9
cs=0x17c5;eip=0x00c1b9; 	X(PUSH(bp));	// 107896                  push    bp ;~ 17C5:C1B9
cs=0x17c5;eip=0x00c1ba; 	T(bp = sp;);	// 107897                  mov     bp, sp ;~ 17C5:C1BA
cs=0x17c5;eip=0x00c1bc; 	T(SUB(sp, 0x0A));	// 107898                  sub     sp, 0Ah ;~ 17C5:C1BC
cs=0x17c5;eip=0x00c1bf; 	X(PUSH(si));	// 107899                  push    si ;~ 17C5:C1BF
cs=0x17c5;eip=0x00c1c0; 	T(CMP(word_492f2, 0));	// 107900                  cmp     word_492F2, 0 ;~ 17C5:C1C0
cs=0x17c5;eip=0x00c1c5; 	J(JNZ(loc_323fa));	// 107901                  jnz     short loc_323FA ;~ 17C5:C1C5
cs=0x17c5;eip=0x00c1c7; 	J(JMP(loc_32523));	// 107902                  jmp     loc_32523 ;~ 17C5:C1C7
loc_323fa:
	// 6340 
cs=0x17c5;eip=0x00c1ca; 	T(CMP(byte_4de54, 0));	// 107906                  cmp     ds:byte_4DE54, 0 ;~ 17C5:C1CA
cs=0x17c5;eip=0x00c1cf; 	J(JZ(loc_32404));	// 107907                  jz      short loc_32404 ;~ 17C5:C1CF
cs=0x17c5;eip=0x00c1d1; 	X(SAR(*(dw*)(raddr(ss,bp+arg_4)), 1));	// 107908                  sar     [bp+arg_4], 1 ;~ 17C5:C1D1
loc_32404:
	// 6341 
cs=0x17c5;eip=0x00c1d4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 107911                  mov     ax, [bp+arg_4] ;~ 17C5:C1D4
cs=0x17c5;eip=0x00c1d7; 	T(cx = ax;);	// 107912                  mov     cx, ax ;~ 17C5:C1D7
cs=0x17c5;eip=0x00c1d9; 	T(SAR(cx, 1));	// 107913                  sar     cx, 1 ;~ 17C5:C1D9
cs=0x17c5;eip=0x00c1db; 	T(SAR(cx, 1));	// 107914                  sar     cx, 1 ;~ 17C5:C1DB
cs=0x17c5;eip=0x00c1dd; 	T(SUB(ax, cx));	// 107915                  sub     ax, cx ;~ 17C5:C1DD
cs=0x17c5;eip=0x00c1df; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 107916                  mov     [bp+var_2], ax ;~ 17C5:C1DF
cs=0x17c5;eip=0x00c1e2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 107917                  mov     ax, [bp+arg_0] ;~ 17C5:C1E2
cs=0x17c5;eip=0x00c1e5; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 107918                  add     ax, [bp+arg_4] ;~ 17C5:C1E5
cs=0x17c5;eip=0x00c1e8; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 107919                  mov     [bp+var_8], ax ;~ 17C5:C1E8
cs=0x17c5;eip=0x00c1eb; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 107920                  mov     ax, [bp+arg_0] ;~ 17C5:C1EB
cs=0x17c5;eip=0x00c1ee; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 107921                  sub     ax, [bp+arg_4] ;~ 17C5:C1EE
cs=0x17c5;eip=0x00c1f1; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 107922                  mov     [bp+var_4], ax ;~ 17C5:C1F1
cs=0x17c5;eip=0x00c1f4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 107923                  mov     ax, [bp+arg_2] ;~ 17C5:C1F4
cs=0x17c5;eip=0x00c1f7; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_2))));	// 107924                  add     ax, [bp+var_2] ;~ 17C5:C1F7
cs=0x17c5;eip=0x00c1fa; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 107925                  mov     [bp+var_A], ax ;~ 17C5:C1FA
cs=0x17c5;eip=0x00c1fd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 107926                  mov     ax, [bp+arg_2] ;~ 17C5:C1FD
cs=0x17c5;eip=0x00c200; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_2))));	// 107927                  sub     ax, [bp+var_2] ;~ 17C5:C200
cs=0x17c5;eip=0x00c203; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 107928                  mov     [bp+var_6], ax ;~ 17C5:C203
cs=0x17c5;eip=0x00c206; 	T(CMP(*(dw*)(raddr(ss,bp+arg_6)), 0));	// 107929                  cmp     [bp+arg_6], 0 ;~ 17C5:C206
cs=0x17c5;eip=0x00c20a; 	J(JNZ(loc_32485));	// 107930                  jnz     short loc_32485 ;~ 17C5:C20A
cs=0x17c5;eip=0x00c20c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 107931                  push    [bp+var_A] ;~ 17C5:C20C
cs=0x17c5;eip=0x00c20f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 107932                  push    [bp+var_4] ;~ 17C5:C20F
cs=0x17c5;eip=0x00c212; 	X(PUSH(ax));	// 107933                  push    ax ;~ 17C5:C212
cs=0x17c5;eip=0x00c213; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 107934                  push    [bp+var_4] ;~ 17C5:C213
cs=0x17c5;eip=0x00c216; 	J(CALL(sub_2ffe0,0));	// 107935                  call    sub_2FFE0 ;~ 17C5:C216
cs=0x17c5;eip=0x00c219; 	T(ADD(sp, 8));	// 107937                  add     sp, 8 ;~ 17C5:C219
cs=0x17c5;eip=0x00c21c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 107938                  push    [bp+var_A] ;~ 17C5:C21C
cs=0x17c5;eip=0x00c21f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107939                  push    [bp+var_8] ;~ 17C5:C21F
cs=0x17c5;eip=0x00c222; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 107940                  push    [bp+var_A] ;~ 17C5:C222
cs=0x17c5;eip=0x00c225; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 107941                  push    [bp+var_4] ;~ 17C5:C225
cs=0x17c5;eip=0x00c228; 	J(CALL(sub_2ffe0,0));	// 107942                  call    sub_2FFE0 ;~ 17C5:C228
cs=0x17c5;eip=0x00c22b; 	T(ADD(sp, 8));	// 107944                  add     sp, 8 ;~ 17C5:C22B
cs=0x17c5;eip=0x00c22e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 107945                  push    [bp+var_6] ;~ 17C5:C22E
cs=0x17c5;eip=0x00c231; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107946                  push    [bp+var_8] ;~ 17C5:C231
cs=0x17c5;eip=0x00c234; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 107947                  push    [bp+var_A] ;~ 17C5:C234
cs=0x17c5;eip=0x00c237; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107948                  push    [bp+var_8] ;~ 17C5:C237
cs=0x17c5;eip=0x00c23a; 	J(CALL(sub_2ffe0,0));	// 107949                  call    sub_2FFE0 ;~ 17C5:C23A
cs=0x17c5;eip=0x00c23d; 	T(ADD(sp, 8));	// 107951                  add     sp, 8 ;~ 17C5:C23D
cs=0x17c5;eip=0x00c240; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 107952                  push    [bp+var_6] ;~ 17C5:C240
cs=0x17c5;eip=0x00c243; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 107953                  push    [bp+var_4] ;~ 17C5:C243
cs=0x17c5;eip=0x00c246; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 107954                  push    [bp+var_6] ;~ 17C5:C246
cs=0x17c5;eip=0x00c249; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107955                  push    [bp+var_8] ;~ 17C5:C249
cs=0x17c5;eip=0x00c24c; 	J(CALL(sub_2ffe0,0));	// 107956                  call    sub_2FFE0 ;~ 17C5:C24C
cs=0x17c5;eip=0x00c24f; 	T(ADD(sp, 8));	// 107958                  add     sp, 8 ;~ 17C5:C24F
cs=0x17c5;eip=0x00c252; 	J(JMP(loc_32523));	// 107959                  jmp     loc_32523 ;~ 17C5:C252
loc_32485:
	// 6342 
cs=0x17c5;eip=0x00c255; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 107963                  mov     ax, [bp+arg_2] ;~ 17C5:C255
cs=0x17c5;eip=0x00c258; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_2))));	// 107964                  mov     cx, [bp+var_2] ;~ 17C5:C258
cs=0x17c5;eip=0x00c25b; 	T(SAR(cx, 1));	// 107965                  sar     cx, 1 ;~ 17C5:C25B
cs=0x17c5;eip=0x00c25d; 	T(SUB(ax, cx));	// 107966                  sub     ax, cx ;~ 17C5:C25D
cs=0x17c5;eip=0x00c25f; 	X(PUSH(ax));	// 107967                  push    ax ;~ 17C5:C25F
cs=0x17c5;eip=0x00c260; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107968                  push    [bp+var_8] ;~ 17C5:C260
cs=0x17c5;eip=0x00c263; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 107969                  push    [bp+var_6] ;~ 17C5:C263
cs=0x17c5;eip=0x00c266; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 107970                  push    [bp+arg_0] ;~ 17C5:C266
cs=0x17c5;eip=0x00c269; 	J(CALL(sub_2ffe0,0));	// 107971                  call    sub_2FFE0 ;~ 17C5:C269
cs=0x17c5;eip=0x00c26c; 	T(ADD(sp, 8));	// 107973                  add     sp, 8 ;~ 17C5:C26C
cs=0x17c5;eip=0x00c26f; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_2))));	// 107974                  mov     si, [bp+var_2] ;~ 17C5:C26F
cs=0x17c5;eip=0x00c272; 	T(SAR(si, 1));	// 107975                  sar     si, 1 ;~ 17C5:C272
cs=0x17c5;eip=0x00c274; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 107976                  mov     ax, [bp+arg_2] ;~ 17C5:C274
cs=0x17c5;eip=0x00c277; 	T(ADD(ax, si));	// 107977                  add     ax, si ;~ 17C5:C277
cs=0x17c5;eip=0x00c279; 	X(PUSH(ax));	// 107978                  push    ax ;~ 17C5:C279
cs=0x17c5;eip=0x00c27a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107979                  push    [bp+var_8] ;~ 17C5:C27A
cs=0x17c5;eip=0x00c27d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 107980                  mov     ax, [bp+arg_2] ;~ 17C5:C27D
cs=0x17c5;eip=0x00c280; 	T(SUB(ax, si));	// 107981                  sub     ax, si ;~ 17C5:C280
cs=0x17c5;eip=0x00c282; 	X(PUSH(ax));	// 107982                  push    ax ;~ 17C5:C282
cs=0x17c5;eip=0x00c283; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107983                  push    [bp+var_8] ;~ 17C5:C283
cs=0x17c5;eip=0x00c286; 	J(CALL(sub_2ffe0,0));	// 107984                  call    sub_2FFE0 ;~ 17C5:C286
cs=0x17c5;eip=0x00c289; 	T(ADD(sp, 8));	// 107986                  add     sp, 8 ;~ 17C5:C289
cs=0x17c5;eip=0x00c28c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 107987                  push    [bp+var_A] ;~ 17C5:C28C
cs=0x17c5;eip=0x00c28f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 107988                  push    [bp+arg_0] ;~ 17C5:C28F
cs=0x17c5;eip=0x00c292; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 107989                  mov     ax, [bp+var_2] ;~ 17C5:C292
cs=0x17c5;eip=0x00c295; 	T(SAR(ax, 1));	// 107990                  sar     ax, 1 ;~ 17C5:C295
cs=0x17c5;eip=0x00c297; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 107991                  add     ax, [bp+arg_2] ;~ 17C5:C297
cs=0x17c5;eip=0x00c29a; 	X(PUSH(ax));	// 107992                  push    ax ;~ 17C5:C29A
cs=0x17c5;eip=0x00c29b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 107993                  push    [bp+var_8] ;~ 17C5:C29B
cs=0x17c5;eip=0x00c29e; 	J(CALL(sub_2ffe0,0));	// 107994                  call    sub_2FFE0 ;~ 17C5:C29E
cs=0x17c5;eip=0x00c2a1; 	T(ADD(sp, 8));	// 107996                  add     sp, 8 ;~ 17C5:C2A1
cs=0x17c5;eip=0x00c2a4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 107997                  mov     ax, [bp+var_2] ;~ 17C5:C2A4
cs=0x17c5;eip=0x00c2a7; 	T(SAR(ax, 1));	// 107998                  sar     ax, 1 ;~ 17C5:C2A7
cs=0x17c5;eip=0x00c2a9; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 107999                  add     ax, [bp+arg_2] ;~ 17C5:C2A9
cs=0x17c5;eip=0x00c2ac; 	X(PUSH(ax));	// 108000                  push    ax ;~ 17C5:C2AC
cs=0x17c5;eip=0x00c2ad; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 108001                  push    [bp+var_4] ;~ 17C5:C2AD
cs=0x17c5;eip=0x00c2b0; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 108002                  push    [bp+var_A] ;~ 17C5:C2B0
cs=0x17c5;eip=0x00c2b3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 108003                  push    [bp+arg_0] ;~ 17C5:C2B3
cs=0x17c5;eip=0x00c2b6; 	J(CALL(sub_2ffe0,0));	// 108004                  call    sub_2FFE0 ;~ 17C5:C2B6
cs=0x17c5;eip=0x00c2b9; 	T(ADD(sp, 8));	// 108006                  add     sp, 8 ;~ 17C5:C2B9
cs=0x17c5;eip=0x00c2bc; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_2))));	// 108007                  mov     si, [bp+var_2] ;~ 17C5:C2BC
cs=0x17c5;eip=0x00c2bf; 	T(SAR(si, 1));	// 108008                  sar     si, 1 ;~ 17C5:C2BF
cs=0x17c5;eip=0x00c2c1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 108009                  mov     ax, [bp+arg_2] ;~ 17C5:C2C1
cs=0x17c5;eip=0x00c2c4; 	T(SUB(ax, si));	// 108010                  sub     ax, si ;~ 17C5:C2C4
cs=0x17c5;eip=0x00c2c6; 	X(PUSH(ax));	// 108011                  push    ax ;~ 17C5:C2C6
cs=0x17c5;eip=0x00c2c7; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 108012                  push    [bp+var_4] ;~ 17C5:C2C7
cs=0x17c5;eip=0x00c2ca; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 108013                  mov     ax, [bp+arg_2] ;~ 17C5:C2CA
cs=0x17c5;eip=0x00c2cd; 	T(ADD(ax, si));	// 108014                  add     ax, si ;~ 17C5:C2CD
cs=0x17c5;eip=0x00c2cf; 	X(PUSH(ax));	// 108015                  push    ax ;~ 17C5:C2CF
cs=0x17c5;eip=0x00c2d0; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 108016                  push    [bp+var_4] ;~ 17C5:C2D0
cs=0x17c5;eip=0x00c2d3; 	J(CALL(sub_2ffe0,0));	// 108017                  call    sub_2FFE0 ;~ 17C5:C2D3
cs=0x17c5;eip=0x00c2d6; 	T(ADD(sp, 8));	// 108019                  add     sp, 8 ;~ 17C5:C2D6
cs=0x17c5;eip=0x00c2d9; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 108020                  push    [bp+var_6] ;~ 17C5:C2D9
cs=0x17c5;eip=0x00c2dc; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 108021                  push    [bp+arg_0] ;~ 17C5:C2DC
cs=0x17c5;eip=0x00c2df; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 108022                  mov     ax, [bp+arg_2] ;~ 17C5:C2DF
cs=0x17c5;eip=0x00c2e2; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_2))));	// 108023                  mov     cx, [bp+var_2] ;~ 17C5:C2E2
cs=0x17c5;eip=0x00c2e5; 	T(SAR(cx, 1));	// 108024                  sar     cx, 1 ;~ 17C5:C2E5
cs=0x17c5;eip=0x00c2e7; 	T(SUB(ax, cx));	// 108025                  sub     ax, cx ;~ 17C5:C2E7
cs=0x17c5;eip=0x00c2e9; 	X(PUSH(ax));	// 108026                  push    ax ;~ 17C5:C2E9
cs=0x17c5;eip=0x00c2ea; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 108027                  push    [bp+var_4] ;~ 17C5:C2EA
cs=0x17c5;eip=0x00c2ed; 	J(CALL(sub_2ffe0,0));	// 108028                  call    sub_2FFE0 ;~ 17C5:C2ED
cs=0x17c5;eip=0x00c2f0; 	T(ADD(sp, 8));	// 108030                  add     sp, 8 ;~ 17C5:C2F0
loc_32523:
	// 6343 
cs=0x17c5;eip=0x00c2f3; 	X(POP(si));	// 108034                  pop     si ;~ 17C5:C2F3
cs=0x17c5;eip=0x00c2f4; 	T(sp = bp;);	// 108035                  mov     sp, bp ;~ 17C5:C2F4
cs=0x17c5;eip=0x00c2f6; 	X(POP(bp));	// 108036                  pop     bp ;~ 17C5:C2F6
cs=0x17c5;eip=0x00c2f7; 	J(RETN(0));	// 108037                  retn ;~ 17C5:C2F7

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_323fa: 	goto loc_323fa;
        case m2c::kloc_32404: 	goto loc_32404;
        case m2c::kloc_32485: 	goto loc_32485;
        case m2c::kloc_32523: 	goto loc_32523;
        case m2c::ksub_323e9: 	goto sub_323e9;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32528(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32528:
    _begin:
#undef var_4
#define var_4 -4
	// 108048 var_4           = word ptr -4 ;~ 17C5:C2F8
#undef var_2
#define var_2 -2
	// 108049 var_2           = word ptr -2 ;~ 17C5:C2F8
cs=0x17c5;eip=0x00c2f8; 	X(PUSH(bp));	// 108051                  push    bp ;~ 17C5:C2F8
cs=0x17c5;eip=0x00c2f9; 	T(bp = sp;);	// 108052                  mov     bp, sp ;~ 17C5:C2F9
cs=0x17c5;eip=0x00c2fb; 	T(SUB(sp, 4));	// 108053                  sub     sp, 4 ;~ 17C5:C2FB
cs=0x17c5;eip=0x00c2fe; 	T(CMP(word_4ef2a, 0));	// 108054                  cmp     ds:word_4EF2A, 0 ;~ 17C5:C2FE
cs=0x17c5;eip=0x00c303; 	J(JZ(loc_3259d));	// 108055                  jz      short loc_3259D ;~ 17C5:C303
cs=0x17c5;eip=0x00c305; 	T(CMP(word_492f2, 0));	// 108056                  cmp     word_492F2, 0 ;~ 17C5:C305
cs=0x17c5;eip=0x00c30a; 	J(JZ(loc_3259d));	// 108057                  jz      short loc_3259D ;~ 17C5:C30A
cs=0x17c5;eip=0x00c30c; 	T(CMP(byte_527d0, 0));	// 108058                  cmp     ds:byte_527D0, 0 ;~ 17C5:C30C
cs=0x17c5;eip=0x00c311; 	J(JZ(loc_32559));	// 108059                  jz      short loc_32559 ;~ 17C5:C311
cs=0x17c5;eip=0x00c313; 	T(ax = 0x0E;);	// 108060                  mov     ax, 0Eh ;~ 17C5:C313
cs=0x17c5;eip=0x00c316; 	X(PUSH(ax));	// 108061                  push    ax ;~ 17C5:C316
cs=0x17c5;eip=0x00c317; 	T(ax = 0x96;);	// 108062                  mov     ax, 96h ;~ 17C5:C317
cs=0x17c5;eip=0x00c31a; 	X(PUSH(ax));	// 108063                  push    ax ;~ 17C5:C31A
cs=0x17c5;eip=0x00c31b; 	T(ax = 0x0F4;);	// 108064                  mov     ax, 0F4h ;~ 17C5:C31B
cs=0x17c5;eip=0x00c31e; 	X(PUSH(ax));	// 108065                  push    ax ;~ 17C5:C31E
cs=0x17c5;eip=0x00c31f; 	T(ax = 0x5C27;);	// 108066                  mov     ax, 5C27h ;~ 17C5:C31F
cs=0x17c5;eip=0x00c322; 	X(PUSH(ax));	// 108067                  push    ax ;~ 17C5:C322
cs=0x17c5;eip=0x00c323; 	J(CALL(sub_3032e,0));	// 108068                  call    sub_3032E ;~ 17C5:C323
cs=0x17c5;eip=0x00c326; 	T(ADD(sp, 8));	// 108070                  add     sp, 8 ;~ 17C5:C326
loc_32559:
	// 6344 
cs=0x17c5;eip=0x00c329; 	T(ax = 0x0E;);	// 108073                  mov     ax, 0Eh ;~ 17C5:C329
cs=0x17c5;eip=0x00c32c; 	X(PUSH(ax));	// 108074                  push    ax ;~ 17C5:C32C
cs=0x17c5;eip=0x00c32d; 	J(CALL(sub_30074,0));	// 108075                  call    sub_30074 ;~ 17C5:C32D
cs=0x17c5;eip=0x00c330; 	T(ADD(sp, 2));	// 108076                  add     sp, 2 ;~ 17C5:C330
cs=0x17c5;eip=0x00c333; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0x10C));	// 108077                  mov     [bp+var_2], 10Ch ;~ 17C5:C333
cs=0x17c5;eip=0x00c338; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0x9C));	// 108078                  mov     [bp+var_4], 9Ch ;~ 17C5:C338
cs=0x17c5;eip=0x00c33d; 	T(ax = 0x9C;);	// 108079                  mov     ax, 9Ch ;~ 17C5:C33D
cs=0x17c5;eip=0x00c340; 	X(PUSH(ax));	// 108080                  push    ax ;~ 17C5:C340
cs=0x17c5;eip=0x00c341; 	T(ax = 0x116;);	// 108081                  mov     ax, 116h ;~ 17C5:C341
cs=0x17c5;eip=0x00c344; 	X(PUSH(ax));	// 108082                  push    ax ;~ 17C5:C344
cs=0x17c5;eip=0x00c345; 	T(ax = 0x9C;);	// 108083                  mov     ax, 9Ch ;~ 17C5:C345
cs=0x17c5;eip=0x00c348; 	X(PUSH(ax));	// 108084                  push    ax ;~ 17C5:C348
cs=0x17c5;eip=0x00c349; 	T(ax = 0x102;);	// 108085                  mov     ax, 102h ;~ 17C5:C349
cs=0x17c5;eip=0x00c34c; 	X(PUSH(ax));	// 108086                  push    ax ;~ 17C5:C34C
cs=0x17c5;eip=0x00c34d; 	J(CALL(sub_2fe11,0));	// 108087                  call    sub_2FE11 ;~ 17C5:C34D
cs=0x17c5;eip=0x00c350; 	T(ADD(sp, 8));	// 108089                  add     sp, 8 ;~ 17C5:C350
cs=0x17c5;eip=0x00c353; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 108090                  mov     ax, [bp+var_4] ;~ 17C5:C353
cs=0x17c5;eip=0x00c356; 	T(ADD(ax, 8));	// 108091                  add     ax, 8 ;~ 17C5:C356
cs=0x17c5;eip=0x00c359; 	X(PUSH(ax));	// 108092                  push    ax ;~ 17C5:C359
cs=0x17c5;eip=0x00c35a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 108093                  push    [bp+var_2] ;~ 17C5:C35A
cs=0x17c5;eip=0x00c35d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 108094                  mov     ax, [bp+var_4] ;~ 17C5:C35D
cs=0x17c5;eip=0x00c360; 	T(SUB(ax, 8));	// 108095                  sub     ax, 8 ;~ 17C5:C360
cs=0x17c5;eip=0x00c363; 	X(PUSH(ax));	// 108096                  push    ax ;~ 17C5:C363
cs=0x17c5;eip=0x00c364; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 108097                  push    [bp+var_2] ;~ 17C5:C364
cs=0x17c5;eip=0x00c367; 	J(CALL(sub_2fe11,0));	// 108098                  call    sub_2FE11 ;~ 17C5:C367
cs=0x17c5;eip=0x00c36a; 	T(ADD(sp, 8));	// 108100                  add     sp, 8 ;~ 17C5:C36A
loc_3259d:
	// 6345 
cs=0x17c5;eip=0x00c36d; 	T(sp = bp;);	// 108104                  mov     sp, bp ;~ 17C5:C36D
cs=0x17c5;eip=0x00c36f; 	X(POP(bp));	// 108105                  pop     bp ;~ 17C5:C36F
cs=0x17c5;eip=0x00c370; 	J(RETN(0));	// 108106                  retn ;~ 17C5:C370

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32559: 	goto loc_32559;
        case m2c::kloc_3259d: 	goto loc_3259d;
        case m2c::ksub_32528: 	goto sub_32528;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_325a1(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_325a1:
    _begin:
#undef arg_0
#define arg_0 4
	// 108117 arg_0           = word ptr  4 ;~ 17C5:C371
#undef arg_2
#define arg_2 6
	// 108118 arg_2           = word ptr  6 ;~ 17C5:C371
#undef arg_4
#define arg_4 8
	// 108119 arg_4           = word ptr  8 ;~ 17C5:C371
cs=0x17c5;eip=0x00c371; 	X(PUSH(bp));	// 108121                  push    bp ;~ 17C5:C371
cs=0x17c5;eip=0x00c372; 	T(bp = sp;);	// 108122                  mov     bp, sp ;~ 17C5:C372
cs=0x17c5;eip=0x00c374; 	T(CMP(*(word_4aa98), 0x0FFFF));	// 108123                  cmp     word_4AA98, 0FFFFh ;~ 17C5:C374
cs=0x17c5;eip=0x00c379; 	J(JNZ(loc_325ae));	// 108124                  jnz     short loc_325AE ;~ 17C5:C379
cs=0x17c5;eip=0x00c37b; 	J(JMP(loc_32637));	// 108125                  jmp     loc_32637 ;~ 17C5:C37B
loc_325ae:
	// 6346 
cs=0x17c5;eip=0x00c37e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 108129                  push    [bp+arg_2] ;~ 17C5:C37E
cs=0x17c5;eip=0x00c381; 	J(CALL(sub_30074,0));	// 108130                  call    sub_30074 ;~ 17C5:C381
cs=0x17c5;eip=0x00c384; 	T(ADD(sp, 2));	// 108131                  add     sp, 2 ;~ 17C5:C384
cs=0x17c5;eip=0x00c387; 	T(ax = *(word_4aa98););	// 108132                  mov     ax, word_4AA98 ;~ 17C5:C387
cs=0x17c5;eip=0x00c38a; 	T(CMP(*(dw*)(raddr(ss,bp+arg_4)), ax));	// 108133                  cmp     [bp+arg_4], ax ;~ 17C5:C38A
cs=0x17c5;eip=0x00c38d; 	J(JGE(loc_325f4));	// 108134                  jge     short loc_325F4 ;~ 17C5:C38D
cs=0x17c5;eip=0x00c38f; 	T(ax = 0x13F;);	// 108135                  mov     ax, 13Fh ;~ 17C5:C38F
cs=0x17c5;eip=0x00c392; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 108136                  sub     ax, [bp+arg_4] ;~ 17C5:C392
cs=0x17c5;eip=0x00c395; 	T(CMP(ax, *(word_4aa98)));	// 108137                  cmp     ax, word_4AA98 ;~ 17C5:C395
cs=0x17c5;eip=0x00c399; 	J(JLE(loc_325f4));	// 108138                  jle     short loc_325F4 ;~ 17C5:C399
cs=0x17c5;eip=0x00c39b; 	T(ax = *(word_4ac7c););	// 108139                  mov     ax, word_4AC7C ;~ 17C5:C39B
cs=0x17c5;eip=0x00c39e; 	T(CMP(*(dw*)(raddr(ss,bp+arg_4)), ax));	// 108140                  cmp     [bp+arg_4], ax ;~ 17C5:C39E
cs=0x17c5;eip=0x00c3a1; 	J(JGE(loc_325f4));	// 108141                  jge     short loc_325F4 ;~ 17C5:C3A1
cs=0x17c5;eip=0x00c3a3; 	T(ax = 0x58;);	// 108142                  mov     ax, 58h ; 'X' ;~ 17C5:C3A3
cs=0x17c5;eip=0x00c3a6; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 108143                  sub     ax, [bp+arg_4] ;~ 17C5:C3A6
cs=0x17c5;eip=0x00c3a9; 	T(CMP(ax, *(word_4ac7c)));	// 108144                  cmp     ax, word_4AC7C ;~ 17C5:C3A9
cs=0x17c5;eip=0x00c3ad; 	J(JLE(loc_325f4));	// 108145                  jle     short loc_325F4 ;~ 17C5:C3AD
cs=0x17c5;eip=0x00c3af; 	T(ax = 1;);	// 108146                  mov     ax, 1 ;~ 17C5:C3AF
cs=0x17c5;eip=0x00c3b2; 	X(PUSH(ax));	// 108147                  push    ax ;~ 17C5:C3B2
cs=0x17c5;eip=0x00c3b3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 108148                  push    [bp+arg_4] ;~ 17C5:C3B3
cs=0x17c5;eip=0x00c3b6; 	X(PUSH(*(word_4ac7c)));	// 108149                  push    word_4AC7C ;~ 17C5:C3B6
cs=0x17c5;eip=0x00c3ba; 	X(PUSH(*(word_4aa98)));	// 108150                  push    word_4AA98 ;~ 17C5:C3BA
cs=0x17c5;eip=0x00c3be; 	J(CALL(sub_323e9,0));	// 108151                  call    sub_323E9 ;~ 17C5:C3BE
cs=0x17c5;eip=0x00c3c1; 	T(ADD(sp, 8));	// 108152                  add     sp, 8 ;~ 17C5:C3C1
loc_325f4:
	// 6347 
cs=0x17c5;eip=0x00c3c4; 	T(CMP(*(word_4aa98), 0x14));	// 108156                  cmp     word_4AA98, 14h ;~ 17C5:C3C4
cs=0x17c5;eip=0x00c3c9; 	J(JLE(loc_32637));	// 108157                  jle     short loc_32637 ;~ 17C5:C3C9
cs=0x17c5;eip=0x00c3cb; 	T(CMP(*(word_4aa98), 0x118));	// 108158                  cmp     word_4AA98, 118h ;~ 17C5:C3CB
cs=0x17c5;eip=0x00c3d1; 	J(JGE(loc_32637));	// 108159                  jge     short loc_32637 ;~ 17C5:C3D1
cs=0x17c5;eip=0x00c3d3; 	T(CMP(*(word_4ac7c), 0));	// 108160                  cmp     word_4AC7C, 0 ;~ 17C5:C3D3
cs=0x17c5;eip=0x00c3d8; 	J(JLE(loc_32637));	// 108161                  jle     short loc_32637 ;~ 17C5:C3D8
cs=0x17c5;eip=0x00c3da; 	T(CMP(*(word_4ac7c), 0x52));	// 108162                  cmp     word_4AC7C, 52h ; 'R' ;~ 17C5:C3DA
cs=0x17c5;eip=0x00c3df; 	J(JGE(loc_32637));	// 108163                  jge     short loc_32637 ;~ 17C5:C3DF
cs=0x17c5;eip=0x00c3e1; 	X(PUSH(word_4f1a2));	// 108164                  push    ds:word_4F1A2 ;~ 17C5:C3E1
cs=0x17c5;eip=0x00c3e5; 	T(ax = *(word_4ac7c););	// 108165                  mov     ax, word_4AC7C ;~ 17C5:C3E5
cs=0x17c5;eip=0x00c3e8; 	T(ADD(ax, 5));	// 108166                  add     ax, 5 ;~ 17C5:C3E8
cs=0x17c5;eip=0x00c3eb; 	X(PUSH(ax));	// 108167                  push    ax ;~ 17C5:C3EB
cs=0x17c5;eip=0x00c3ec; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 108168                  push    [bp+arg_0] ;~ 17C5:C3EC
cs=0x17c5;eip=0x00c3ef; 	J(CALL(sub_34c4e,0));	// 108169                  call    sub_34C4E ;~ 17C5:C3EF
cs=0x17c5;eip=0x00c3f2; 	T(ADD(sp, 2));	// 108170                  add     sp, 2 ;~ 17C5:C3F2
cs=0x17c5;eip=0x00c3f5; 	T(SHL(ax, 1));	// 108171                  shl     ax, 1 ;~ 17C5:C3F5
cs=0x17c5;eip=0x00c3f7; 	T(cx = *(word_4aa98););	// 108172                  mov     cx, word_4AA98 ;~ 17C5:C3F7
cs=0x17c5;eip=0x00c3fb; 	T(SUB(cx, ax));	// 108173                  sub     cx, ax ;~ 17C5:C3FB
cs=0x17c5;eip=0x00c3fd; 	X(PUSH(cx));	// 108174                  push    cx ;~ 17C5:C3FD
cs=0x17c5;eip=0x00c3fe; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 108175                  push    [bp+arg_0] ;~ 17C5:C3FE
cs=0x17c5;eip=0x00c401; 	J(CALL(sub_3032e,0));	// 108176                  call    sub_3032E ;~ 17C5:C401
cs=0x17c5;eip=0x00c404; 	T(ADD(sp, 8));	// 108178                  add     sp, 8 ;~ 17C5:C404
loc_32637:
	// 6348 
cs=0x17c5;eip=0x00c407; 	T(sp = bp;);	// 108182                  mov     sp, bp ;~ 17C5:C407
cs=0x17c5;eip=0x00c409; 	X(POP(bp));	// 108183                  pop     bp ;~ 17C5:C409
cs=0x17c5;eip=0x00c40a; 	J(RETN(0));	// 108184                  retn ;~ 17C5:C40A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_325ae: 	goto loc_325ae;
        case m2c::kloc_325f4: 	goto loc_325f4;
        case m2c::kloc_32637: 	goto loc_32637;
        case m2c::ksub_325a1: 	goto sub_325a1;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_3263b(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_3263b:
    _begin:
#undef arg_0
#define arg_0 4
	// 108195 arg_0           = word ptr  4 ;~ 17C5:C40B
cs=0x17c5;eip=0x00c40b; 	X(PUSH(bp));	// 108197                  push    bp ;~ 17C5:C40B
cs=0x17c5;eip=0x00c40c; 	T(bp = sp;);	// 108198                  mov     bp, sp ;~ 17C5:C40C
cs=0x17c5;eip=0x00c40e; 	T(SUB(sp, 0x0A));	// 108199                  sub     sp, 0Ah ;~ 17C5:C40E
cs=0x17c5;eip=0x00c411; 	T(ax = 0x5C34;);	// 108200                  mov     ax, 5C34h ;~ 17C5:C411
cs=0x17c5;eip=0x00c414; 	X(PUSH(ax));	// 108201                  push    ax ;~ 17C5:C414
cs=0x17c5;eip=0x00c415; 	T(ax = 0x66C4;);	// 108202                  mov     ax, 66C4h ;~ 17C5:C415
cs=0x17c5;eip=0x00c418; 	X(PUSH(ax));	// 108203                  push    ax ;~ 17C5:C418
cs=0x17c5;eip=0x00c419; 	J(CALL(sub_34c1c,0));	// 108204                  call    sub_34C1C ;~ 17C5:C419
cs=0x17c5;eip=0x00c41c; 	T(ADD(sp, 4));	// 108205                  add     sp, 4 ;~ 17C5:C41C
cs=0x17c5;eip=0x00c41f; 	T(ax = 0x0A;);	// 108206                  mov     ax, 0Ah ;~ 17C5:C41F
cs=0x17c5;eip=0x00c422; 	X(PUSH(ax));	// 108207                  push    ax ;~ 17C5:C422
cs=0x17c5;eip=0x00c423; 	T(ax = 0x9780;);	// 108208                  mov     ax, 9780h ;~ 17C5:C423
cs=0x17c5;eip=0x00c426; 	X(PUSH(ax));	// 108209                  push    ax ;~ 17C5:C426
cs=0x17c5;eip=0x00c427; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 108210                  mov     ax, [bp+arg_0] ;~ 17C5:C427
cs=0x17c5;eip=0x00c42a; 	T(cl = 6;);	// 108211                  mov     cl, 6 ;~ 17C5:C42A
cs=0x17c5;eip=0x00c42c; 	T(SAR(ax, cl));	// 108212                  sar     ax, cl ;~ 17C5:C42C
cs=0x17c5;eip=0x00c42e; 	X(PUSH(ax));	// 108213                  push    ax ;~ 17C5:C42E
cs=0x17c5;eip=0x00c42f; 	J(CALL(sub_34c6a,0));	// 108214                  call    sub_34C6A ;~ 17C5:C42F
cs=0x17c5;eip=0x00c432; 	T(ADD(sp, 6));	// 108215                  add     sp, 6 ;~ 17C5:C432
cs=0x17c5;eip=0x00c435; 	X(PUSH(ax));	// 108216                  push    ax ;~ 17C5:C435
cs=0x17c5;eip=0x00c436; 	T(ax = 0x66C4;);	// 108217                  mov     ax, 66C4h ;~ 17C5:C436
cs=0x17c5;eip=0x00c439; 	X(PUSH(ax));	// 108218                  push    ax ;~ 17C5:C439
cs=0x17c5;eip=0x00c43a; 	J(CALL(sub_34bdc,0));	// 108219                  call    sub_34BDC ;~ 17C5:C43A
cs=0x17c5;eip=0x00c43d; 	T(ADD(sp, 4));	// 108220                  add     sp, 4 ;~ 17C5:C43D
cs=0x17c5;eip=0x00c440; 	T(ax = 0x5C3B;);	// 108221                  mov     ax, 5C3Bh ;~ 17C5:C440
cs=0x17c5;eip=0x00c443; 	X(PUSH(ax));	// 108222                  push    ax ;~ 17C5:C443
cs=0x17c5;eip=0x00c444; 	T(ax = 0x66C4;);	// 108223                  mov     ax, 66C4h ;~ 17C5:C444
cs=0x17c5;eip=0x00c447; 	X(PUSH(ax));	// 108224                  push    ax ;~ 17C5:C447
cs=0x17c5;eip=0x00c448; 	J(CALL(sub_34bdc,0));	// 108225                  call    sub_34BDC ;~ 17C5:C448
cs=0x17c5;eip=0x00c44b; 	T(ADD(sp, 4));	// 108226                  add     sp, 4 ;~ 17C5:C44B
cs=0x17c5;eip=0x00c44e; 	T(ax = 0x0A;);	// 108227                  mov     ax, 0Ah ;~ 17C5:C44E
cs=0x17c5;eip=0x00c451; 	X(PUSH(ax));	// 108228                  push    ax ;~ 17C5:C451
cs=0x17c5;eip=0x00c452; 	T(ax = 0x9780;);	// 108229                  mov     ax, 9780h ;~ 17C5:C452
cs=0x17c5;eip=0x00c455; 	X(PUSH(ax));	// 108230                  push    ax ;~ 17C5:C455
cs=0x17c5;eip=0x00c456; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 108231                  mov     ax, [bp+arg_0] ;~ 17C5:C456
cs=0x17c5;eip=0x00c459; 	T(AND(ax, 0x3F));	// 108232                  and     ax, 3Fh ;~ 17C5:C459
cs=0x17c5;eip=0x00c45c; 	T(SHL(ax, 1));	// 108233                  shl     ax, 1 ;~ 17C5:C45C
cs=0x17c5;eip=0x00c45e; 	T(CWD);	// 108234                  cwd ;~ 17C5:C45E
cs=0x17c5;eip=0x00c45f; 	T(cx = 0x0D;);	// 108235                  mov     cx, 0Dh ;~ 17C5:C45F
cs=0x17c5;eip=0x00c462; 	T(IDIV2(cx));	// 108236                  idiv    cx ;~ 17C5:C462
cs=0x17c5;eip=0x00c464; 	X(PUSH(ax));	// 108237                  push    ax ;~ 17C5:C464
cs=0x17c5;eip=0x00c465; 	J(CALL(sub_34c6a,0));	// 108238                  call    sub_34C6A ;~ 17C5:C465
cs=0x17c5;eip=0x00c468; 	T(ADD(sp, 6));	// 108239                  add     sp, 6 ;~ 17C5:C468
cs=0x17c5;eip=0x00c46b; 	X(PUSH(ax));	// 108240                  push    ax ;~ 17C5:C46B
cs=0x17c5;eip=0x00c46c; 	T(ax = 0x66C4;);	// 108241                  mov     ax, 66C4h ;~ 17C5:C46C
cs=0x17c5;eip=0x00c46f; 	X(PUSH(ax));	// 108242                  push    ax ;~ 17C5:C46F
cs=0x17c5;eip=0x00c470; 	J(CALL(sub_34bdc,0));	// 108243                  call    sub_34BDC ;~ 17C5:C470
cs=0x17c5;eip=0x00c473; 	T(ADD(sp, 4));	// 108244                  add     sp, 4 ;~ 17C5:C473
cs=0x17c5;eip=0x00c476; 	T(ax = 0x5C3D;);	// 108245                  mov     ax, 5C3Dh ;~ 17C5:C476
cs=0x17c5;eip=0x00c479; 	X(PUSH(ax));	// 108246                  push    ax ;~ 17C5:C479
cs=0x17c5;eip=0x00c47a; 	T(ax = 0x66C4;);	// 108247                  mov     ax, 66C4h ;~ 17C5:C47A
cs=0x17c5;eip=0x00c47d; 	X(PUSH(ax));	// 108248                  push    ax ;~ 17C5:C47D
cs=0x17c5;eip=0x00c47e; 	J(CALL(sub_34bdc,0));	// 108249                  call    sub_34BDC ;~ 17C5:C47E
cs=0x17c5;eip=0x00c481; 	T(ADD(sp, 4));	// 108250                  add     sp, 4 ;~ 17C5:C481
cs=0x17c5;eip=0x00c484; 	T(sp = bp;);	// 108251                  mov     sp, bp ;~ 17C5:C484
cs=0x17c5;eip=0x00c486; 	X(POP(bp));	// 108252                  pop     bp ;~ 17C5:C486
cs=0x17c5;eip=0x00c487; 	J(RETN(0));	// 108253                  retn ;~ 17C5:C487

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_3263b: 	goto sub_3263b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_326b8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_326b8:
    _begin:
#undef var_12
#define var_12 -0x12
	// 108264 var_12          = word ptr -12h ;~ 17C5:C488
#undef var_10
#define var_10 -0x10
	// 108265 var_10          = word ptr -10h ;~ 17C5:C488
#undef var_e
#define var_e -0x0E
	// 108266 var_E           = word ptr -0Eh ;~ 17C5:C488
#undef var_c
#define var_c -0x0C
	// 108267 var_C           = word ptr -0Ch ;~ 17C5:C488
#undef var_a
#define var_a -0x0A
	// 108268 var_A           = word ptr -0Ah ;~ 17C5:C488
#undef var_8
#define var_8 -8
	// 108269 var_8           = word ptr -8 ;~ 17C5:C488
#undef var_6
#define var_6 -6
	// 108270 var_6           = word ptr -6 ;~ 17C5:C488
#undef var_4
#define var_4 -4
	// 108271 var_4           = word ptr -4 ;~ 17C5:C488
#undef var_2
#define var_2 -2
	// 108272 var_2           = word ptr -2 ;~ 17C5:C488
#undef arg_0
#define arg_0 4
	// 108273 arg_0           = word ptr  4 ;~ 17C5:C488
#undef arg_2
#define arg_2 6
	// 108274 arg_2           = word ptr  6 ;~ 17C5:C488
#undef arg_4
#define arg_4 8
	// 108275 arg_4           = word ptr  8 ;~ 17C5:C488
cs=0x17c5;eip=0x00c488; 	X(PUSH(bp));	// 108277                  push    bp ;~ 17C5:C488
cs=0x17c5;eip=0x00c489; 	T(bp = sp;);	// 108278                  mov     bp, sp ;~ 17C5:C489
cs=0x17c5;eip=0x00c48b; 	T(SUB(sp, 0x12));	// 108279                  sub     sp, 12h ;~ 17C5:C48B
cs=0x17c5;eip=0x00c48e; 	T(ax = word_520f0;);	// 108280                  mov     ax, ds:word_520F0 ;~ 17C5:C48E
cs=0x17c5;eip=0x00c491; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 108281                  sub     ax, [bp+arg_0] ;~ 17C5:C491
cs=0x17c5;eip=0x00c494; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 108282                  mov     [bp+var_2], ax ;~ 17C5:C494
cs=0x17c5;eip=0x00c497; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 108283                  mov     ax, [bp+arg_2] ;~ 17C5:C497
cs=0x17c5;eip=0x00c49a; 	T(SUB(ax, word_52100));	// 108284                  sub     ax, ds:word_52100 ;~ 17C5:C49A
cs=0x17c5;eip=0x00c49e; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 108285                  mov     [bp+var_8], ax ;~ 17C5:C49E
cs=0x17c5;eip=0x00c4a1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 108286                  mov     ax, [bp+arg_4] ;~ 17C5:C4A1
cs=0x17c5;eip=0x00c4a4; 	T(SUB(ax, word_4e2fe));	// 108287                  sub     ax, ds:word_4E2FE ;~ 17C5:C4A4
cs=0x17c5;eip=0x00c4a8; 	T(cl = 5;);	// 108288                  mov     cl, 5 ;~ 17C5:C4A8
cs=0x17c5;eip=0x00c4aa; 	T(SAR(ax, cl));	// 108289                  sar     ax, cl ;~ 17C5:C4AA
cs=0x17c5;eip=0x00c4ac; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 108290                  mov     [bp+var_E], ax ;~ 17C5:C4AC
cs=0x17c5;eip=0x00c4af; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 108291                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:C4AF
cs=0x17c5;eip=0x00c4b4; 	J(JZ(loc_32746));	// 108292                  jz      short loc_32746 ;~ 17C5:C4B4
cs=0x17c5;eip=0x00c4b6; 	T(ax = word_51a0a;);	// 108293                  mov     ax, ds:word_51A0A ;~ 17C5:C4B6
cs=0x17c5;eip=0x00c4b9; 	T(dx = word_51a0c;);	// 108294                  mov     dx, ds:word_51A0C ;~ 17C5:C4B9
cs=0x17c5;eip=0x00c4bd; 	T(SUB(ax, word_5142e));	// 108295                  sub     ax, ds:word_5142E ;~ 17C5:C4BD
cs=0x17c5;eip=0x00c4c1; 	T(SBB(dx, word_51430));	// 108296                  sbb     dx, ds:word_51430 ;~ 17C5:C4C1
loc_326f5:
	// 6349 
cs=0x17c5;eip=0x00c4c5; 	T(SAR(dx, 1));	// 108299                  sar     dx, 1 ;~ 17C5:C4C5
cs=0x17c5;eip=0x00c4c7; 	T(RCR(ax, 1));	// 108300                  rcr     ax, 1 ;~ 17C5:C4C7
cs=0x17c5;eip=0x00c4c9; 	T(DEC(cl));	// 108301                  dec     cl ;~ 17C5:C4C9
cs=0x17c5;eip=0x00c4cb; 	J(JZ(loc_326ff));	// 108302                  jz      short loc_326FF ;~ 17C5:C4CB
cs=0x17c5;eip=0x00c4cd; 	J(JMP(loc_326f5));	// 108303                  jmp     short loc_326F5 ;~ 17C5:C4CD
loc_326ff:
	// 6350 
cs=0x17c5;eip=0x00c4cf; 	X(SUB(*(dw*)(raddr(ss,bp+var_2)), ax));	// 108307                  sub     [bp+var_2], ax ;~ 17C5:C4CF
cs=0x17c5;eip=0x00c4d2; 	T(ax = word_51a28;);	// 108308                  mov     ax, ds:word_51A28 ;~ 17C5:C4D2
cs=0x17c5;eip=0x00c4d5; 	T(dx = word_51a2a;);	// 108309                  mov     dx, ds:word_51A2A ;~ 17C5:C4D5
cs=0x17c5;eip=0x00c4d9; 	T(SUB(ax, word_51704));	// 108310                  sub     ax, ds:word_51704 ;~ 17C5:C4D9
cs=0x17c5;eip=0x00c4dd; 	T(SBB(dx, word_51706));	// 108311                  sbb     dx, ds:word_51706 ;~ 17C5:C4DD
cs=0x17c5;eip=0x00c4e1; 	T(cl = 5;);	// 108312                  mov     cl, 5 ;~ 17C5:C4E1
loc_32713:
	// 6351 
cs=0x17c5;eip=0x00c4e3; 	T(SAR(dx, 1));	// 108315                  sar     dx, 1 ;~ 17C5:C4E3
cs=0x17c5;eip=0x00c4e5; 	T(RCR(ax, 1));	// 108316                  rcr     ax, 1 ;~ 17C5:C4E5
cs=0x17c5;eip=0x00c4e7; 	T(DEC(cl));	// 108317                  dec     cl ;~ 17C5:C4E7
cs=0x17c5;eip=0x00c4e9; 	J(JZ(loc_3271d));	// 108318                  jz      short loc_3271D ;~ 17C5:C4E9
cs=0x17c5;eip=0x00c4eb; 	J(JMP(loc_32713));	// 108319                  jmp     short loc_32713 ;~ 17C5:C4EB
loc_3271d:
	// 6352 
cs=0x17c5;eip=0x00c4ed; 	X(SUB(*(dw*)(raddr(ss,bp+var_8)), ax));	// 108323                  sub     [bp+var_8], ax ;~ 17C5:C4ED
cs=0x17c5;eip=0x00c4f0; 	T(ax = word_5170e;);	// 108324                  mov     ax, ds:word_5170E ;~ 17C5:C4F0
cs=0x17c5;eip=0x00c4f3; 	T(CWD);	// 108325                  cwd ;~ 17C5:C4F3
cs=0x17c5;eip=0x00c4f4; 	T(cx = word_4e2fe;);	// 108326                  mov     cx, ds:word_4E2FE ;~ 17C5:C4F4
cs=0x17c5;eip=0x00c4f8; 	T(SUB(bx, bx));	// 108327                  sub     bx, bx ;~ 17C5:C4F8
cs=0x17c5;eip=0x00c4fa; 	T(SUB(cx, ax));	// 108328                  sub     cx, ax ;~ 17C5:C4FA
cs=0x17c5;eip=0x00c4fc; 	T(SBB(bx, dx));	// 108329                  sbb     bx, dx ;~ 17C5:C4FC
cs=0x17c5;eip=0x00c4fe; 	T(NEG(cx));	// 108330                  neg     cx ;~ 17C5:C4FE
cs=0x17c5;eip=0x00c500; 	T(ADC(bx, 0));	// 108331                  adc     bx, 0 ;~ 17C5:C500
cs=0x17c5;eip=0x00c503; 	T(NEG(bx));	// 108332                  neg     bx ;~ 17C5:C503
cs=0x17c5;eip=0x00c505; 	T(ax = cx;);	// 108333                  mov     ax, cx ;~ 17C5:C505
cs=0x17c5;eip=0x00c507; 	T(cl = 5;);	// 108334                  mov     cl, 5 ;~ 17C5:C507
loc_32739:
	// 6353 
cs=0x17c5;eip=0x00c509; 	T(SAR(bx, 1));	// 108337                  sar     bx, 1 ;~ 17C5:C509
cs=0x17c5;eip=0x00c50b; 	T(RCR(ax, 1));	// 108338                  rcr     ax, 1 ;~ 17C5:C50B
cs=0x17c5;eip=0x00c50d; 	T(DEC(cl));	// 108339                  dec     cl ;~ 17C5:C50D
cs=0x17c5;eip=0x00c50f; 	J(JZ(loc_32743));	// 108340                  jz      short loc_32743 ;~ 17C5:C50F
cs=0x17c5;eip=0x00c511; 	J(JMP(loc_32739));	// 108341                  jmp     short loc_32739 ;~ 17C5:C511
loc_32743:
	// 6354 
cs=0x17c5;eip=0x00c513; 	X(SUB(*(dw*)(raddr(ss,bp+var_e)), ax));	// 108345                  sub     [bp+var_E], ax ;~ 17C5:C513
loc_32746:
	// 6355 
cs=0x17c5;eip=0x00c516; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 108348                  push    [bp+var_E] ;~ 17C5:C516
cs=0x17c5;eip=0x00c519; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 108349                  push    [bp+var_8] ;~ 17C5:C519
cs=0x17c5;eip=0x00c51c; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 108350                  push    [bp+var_2] ;~ 17C5:C51C
cs=0x17c5;eip=0x00c51f; 	T(SUB(ax, ax));	// 108351                  sub     ax, ax ;~ 17C5:C51F
cs=0x17c5;eip=0x00c521; 	X(PUSH(ax));	// 108352                  push    ax ;~ 17C5:C521
cs=0x17c5;eip=0x00c522; 	J(CALL(sub_32891,0));	// 108353                  call    sub_32891 ;~ 17C5:C522
cs=0x17c5;eip=0x00c525; 	T(ADD(sp, 8));	// 108354                  add     sp, 8 ;~ 17C5:C525
cs=0x17c5;eip=0x00c528; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 108355                  mov     [bp+var_6], ax ;~ 17C5:C528
cs=0x17c5;eip=0x00c52b; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), dx));	// 108356                  mov     [bp+var_4], dx ;~ 17C5:C52B
cs=0x17c5;eip=0x00c52e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 108357                  push    [bp+var_E] ;~ 17C5:C52E
cs=0x17c5;eip=0x00c531; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 108358                  push    [bp+var_8] ;~ 17C5:C531
cs=0x17c5;eip=0x00c534; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 108359                  push    [bp+var_2] ;~ 17C5:C534
cs=0x17c5;eip=0x00c537; 	T(ax = 1;);	// 108360                  mov     ax, 1 ;~ 17C5:C537
cs=0x17c5;eip=0x00c53a; 	X(PUSH(ax));	// 108361                  push    ax ;~ 17C5:C53A
cs=0x17c5;eip=0x00c53b; 	J(CALL(sub_32891,0));	// 108362                  call    sub_32891 ;~ 17C5:C53B
cs=0x17c5;eip=0x00c53e; 	T(ADD(sp, 8));	// 108363                  add     sp, 8 ;~ 17C5:C53E
cs=0x17c5;eip=0x00c541; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 108364                  mov     [bp+var_C], ax ;~ 17C5:C541
cs=0x17c5;eip=0x00c544; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), dx));	// 108365                  mov     [bp+var_A], dx ;~ 17C5:C544
cs=0x17c5;eip=0x00c547; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 108366                  push    [bp+var_E] ;~ 17C5:C547
cs=0x17c5;eip=0x00c54a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 108367                  push    [bp+var_8] ;~ 17C5:C54A
cs=0x17c5;eip=0x00c54d; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 108368                  push    [bp+var_2] ;~ 17C5:C54D
cs=0x17c5;eip=0x00c550; 	T(ax = 2;);	// 108369                  mov     ax, 2 ;~ 17C5:C550
cs=0x17c5;eip=0x00c553; 	X(PUSH(ax));	// 108370                  push    ax ;~ 17C5:C553
cs=0x17c5;eip=0x00c554; 	J(CALL(sub_32891,0));	// 108371                  call    sub_32891 ;~ 17C5:C554
cs=0x17c5;eip=0x00c557; 	T(ADD(sp, 8));	// 108372                  add     sp, 8 ;~ 17C5:C557
cs=0x17c5;eip=0x00c55a; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), ax));	// 108373                  mov     [bp+var_12], ax ;~ 17C5:C55A
cs=0x17c5;eip=0x00c55d; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), dx));	// 108374                  mov     [bp+var_10], dx ;~ 17C5:C55D
cs=0x17c5;eip=0x00c560; 	T(OR(dx, dx));	// 108375                  or      dx, dx ;~ 17C5:C560
cs=0x17c5;eip=0x00c562; 	J(JL(loc_3279d));	// 108376                  jl      short loc_3279D ;~ 17C5:C562
cs=0x17c5;eip=0x00c564; 	X(*(word_4aa98) = 0x0FFFF;);	// 108377                  mov     word_4AA98, 0FFFFh ;~ 17C5:C564
cs=0x17c5;eip=0x00c56a; 	J(JMP(loc_3288d));	// 108378                  jmp     loc_3288D ;~ 17C5:C56A
loc_3279d:
	// 6356 
cs=0x17c5;eip=0x00c56d; 	T(CMP(byte_4de54, 0));	// 108382                  cmp     ds:byte_4DE54, 0 ;~ 17C5:C56D
cs=0x17c5;eip=0x00c572; 	J(JZ(loc_327b0));	// 108383                  jz      short loc_327B0 ;~ 17C5:C572
cs=0x17c5;eip=0x00c574; 	X(SAR(*(dw*)(raddr(ss,bp+var_4)), 1));	// 108384                  sar     [bp+var_4], 1 ;~ 17C5:C574
cs=0x17c5;eip=0x00c577; 	X(RCR(*(dw*)(raddr(ss,bp+var_6)), 1));	// 108385                  rcr     [bp+var_6], 1 ;~ 17C5:C577
cs=0x17c5;eip=0x00c57a; 	X(SAR(*(dw*)(raddr(ss,bp+var_a)), 1));	// 108386                  sar     [bp+var_A], 1 ;~ 17C5:C57A
cs=0x17c5;eip=0x00c57d; 	X(RCR(*(dw*)(raddr(ss,bp+var_c)), 1));	// 108387                  rcr     [bp+var_C], 1 ;~ 17C5:C57D
loc_327b0:
	// 6357 
cs=0x17c5;eip=0x00c580; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_12))));	// 108390                  mov     ax, [bp+var_12] ;~ 17C5:C580
cs=0x17c5;eip=0x00c583; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_10))));	// 108391                  mov     dx, [bp+var_10] ;~ 17C5:C583
cs=0x17c5;eip=0x00c586; 	T(NEG(ax));	// 108392                  neg     ax ;~ 17C5:C586
cs=0x17c5;eip=0x00c588; 	T(ADC(dx, 0));	// 108393                  adc     dx, 0 ;~ 17C5:C588
cs=0x17c5;eip=0x00c58b; 	T(NEG(dx));	// 108394                  neg     dx ;~ 17C5:C58B
cs=0x17c5;eip=0x00c58d; 	T(CMP(dx, *(dw*)(raddr(ss,bp+var_4))));	// 108395                  cmp     dx, [bp+var_4] ;~ 17C5:C58D
cs=0x17c5;eip=0x00c590; 	J(JL(loc_327db));	// 108396                  jl      short loc_327DB ;~ 17C5:C590
cs=0x17c5;eip=0x00c592; 	J(JG(loc_327c9));	// 108397                  jg      short loc_327C9 ;~ 17C5:C592
cs=0x17c5;eip=0x00c594; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_6))));	// 108398                  cmp     ax, [bp+var_6] ;~ 17C5:C594
cs=0x17c5;eip=0x00c597; 	J(JC(loc_327db));	// 108399                  jb      short loc_327DB ;~ 17C5:C597
loc_327c9:
	// 6358 
cs=0x17c5;eip=0x00c599; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_12))));	// 108402                  mov     ax, [bp+var_12] ;~ 17C5:C599
cs=0x17c5;eip=0x00c59c; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_10))));	// 108403                  mov     dx, [bp+var_10] ;~ 17C5:C59C
cs=0x17c5;eip=0x00c59f; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), dx));	// 108404                  cmp     [bp+var_4], dx ;~ 17C5:C59F
cs=0x17c5;eip=0x00c5a2; 	J(JG(loc_327e4));	// 108405                  jg      short loc_327E4 ;~ 17C5:C5A2
cs=0x17c5;eip=0x00c5a4; 	J(JL(loc_327db));	// 108406                  jl      short loc_327DB ;~ 17C5:C5A4
cs=0x17c5;eip=0x00c5a6; 	T(CMP(*(dw*)(raddr(ss,bp+var_6)), ax));	// 108407                  cmp     [bp+var_6], ax ;~ 17C5:C5A6
cs=0x17c5;eip=0x00c5a9; 	J(JNC(loc_327e4));	// 108408                  jnb     short loc_327E4 ;~ 17C5:C5A9
loc_327db:
	// 6359 
cs=0x17c5;eip=0x00c5ab; 	X(*(word_4aa98) = 0x0FFFF;);	// 108412                  mov     word_4AA98, 0FFFFh ;~ 17C5:C5AB
cs=0x17c5;eip=0x00c5b1; 	J(JMP(loc_3288d));	// 108413                  jmp     loc_3288D ;~ 17C5:C5B1
loc_327e4:
	// 6360 
cs=0x17c5;eip=0x00c5b4; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 108418                  push    [bp+var_10] ;~ 17C5:C5B4
cs=0x17c5;eip=0x00c5b7; 	X(PUSH(*(dw*)(raddr(ss,bp+var_12))));	// 108419                  push    [bp+var_12] ;~ 17C5:C5B7
cs=0x17c5;eip=0x00c5ba; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 108420                  mov     ax, [bp+var_6] ;~ 17C5:C5BA
cs=0x17c5;eip=0x00c5bd; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_4))));	// 108421                  mov     dx, [bp+var_4] ;~ 17C5:C5BD
cs=0x17c5;eip=0x00c5c0; 	T(dh = dl;);	// 108422                  mov     dh, dl ;~ 17C5:C5C0
cs=0x17c5;eip=0x00c5c2; 	T(dl = ah;);	// 108423                  mov     dl, ah ;~ 17C5:C5C2
cs=0x17c5;eip=0x00c5c4; 	T(ah = al;);	// 108424                  mov     ah, al ;~ 17C5:C5C4
cs=0x17c5;eip=0x00c5c6; 	T(SUB(al, al));	// 108425                  sub     al, al ;~ 17C5:C5C6
cs=0x17c5;eip=0x00c5c8; 	X(PUSH(dx));	// 108426                  push    dx ;~ 17C5:C5C8
cs=0x17c5;eip=0x00c5c9; 	X(PUSH(ax));	// 108427                  push    ax ;~ 17C5:C5C9
cs=0x17c5;eip=0x00c5ca; 	J(CALL(sub_34e44,0));	// 108428                  call    sub_34E44 ;~ 17C5:C5CA
cs=0x17c5;eip=0x00c5cd; 	T(ADD(ax, 0x0A0));	// 108429                  add     ax, 0A0h ;~ 17C5:C5CD
cs=0x17c5;eip=0x00c5d0; 	X(*(word_4aa98) = ax;);	// 108430                  mov     word_4AA98, ax ;~ 17C5:C5D0
cs=0x17c5;eip=0x00c5d3; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 108431                  push    [bp+var_10] ;~ 17C5:C5D3
cs=0x17c5;eip=0x00c5d6; 	X(PUSH(*(dw*)(raddr(ss,bp+var_12))));	// 108432                  push    [bp+var_12] ;~ 17C5:C5D6
cs=0x17c5;eip=0x00c5d9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 108433                  mov     ax, [bp+var_C] ;~ 17C5:C5D9
cs=0x17c5;eip=0x00c5dc; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_a))));	// 108434                  mov     dx, [bp+var_A] ;~ 17C5:C5DC
cs=0x17c5;eip=0x00c5df; 	T(dh = dl;);	// 108435                  mov     dh, dl ;~ 17C5:C5DF
cs=0x17c5;eip=0x00c5e1; 	T(dl = ah;);	// 108436                  mov     dl, ah ;~ 17C5:C5E1
cs=0x17c5;eip=0x00c5e3; 	T(ah = al;);	// 108437                  mov     ah, al ;~ 17C5:C5E3
cs=0x17c5;eip=0x00c5e5; 	T(SUB(al, al));	// 108438                  sub     al, al ;~ 17C5:C5E5
cs=0x17c5;eip=0x00c5e7; 	X(PUSH(dx));	// 108439                  push    dx ;~ 17C5:C5E7
cs=0x17c5;eip=0x00c5e8; 	X(PUSH(ax));	// 108440                  push    ax ;~ 17C5:C5E8
cs=0x17c5;eip=0x00c5e9; 	J(CALL(sub_34e44,0));	// 108441                  call    sub_34E44 ;~ 17C5:C5E9
cs=0x17c5;eip=0x00c5ec; 	X(*(word_4ac7c) = ax;);	// 108442                  mov     word_4AC7C, ax ;~ 17C5:C5EC
cs=0x17c5;eip=0x00c5ef; 	T(SAR(ax, 1));	// 108443                  sar     ax, 1 ;~ 17C5:C5EF
cs=0x17c5;eip=0x00c5f1; 	T(SAR(ax, 1));	// 108444                  sar     ax, 1 ;~ 17C5:C5F1
cs=0x17c5;eip=0x00c5f3; 	X(SUB(*(word_4ac7c), ax));	// 108445                  sub     word_4AC7C, ax ;~ 17C5:C5F3
cs=0x17c5;eip=0x00c5f7; 	T(bx = word_4e564;);	// 108446                  mov     bx, ds:word_4E564 ;~ 17C5:C5F7
cs=0x17c5;eip=0x00c5fb; 	T(CMP(*(dw*)(raddr(ds,bx+0x10)), 0x0C7));	// 108447                  cmp     word ptr [bx+10h], 0C7h ;~ 17C5:C5FB
cs=0x17c5;eip=0x00c600; 	J(JNZ(loc_32837));	// 108448                  jnz     short loc_32837 ;~ 17C5:C600
cs=0x17c5;eip=0x00c602; 	T(ax = 0x64;);	// 108449                  mov     ax, 64h ; 'd' ;~ 17C5:C602
cs=0x17c5;eip=0x00c605; 	J(JMP(loc_3283a));	// 108450                  jmp     short loc_3283A ;~ 17C5:C605
loc_32837:
	// 6361 
cs=0x17c5;eip=0x00c607; 	T(ax = 0x38;);	// 108454                  mov     ax, 38h ; '8' ;~ 17C5:C607
loc_3283a:
	// 6362 
cs=0x17c5;eip=0x00c60a; 	X(ADD(*(word_4ac7c), ax));	// 108457                  add     word_4AC7C, ax ;~ 17C5:C60A
cs=0x17c5;eip=0x00c60e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_12))));	// 108458                  mov     ax, [bp+var_12] ;~ 17C5:C60E
cs=0x17c5;eip=0x00c611; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_10))));	// 108459                  mov     dx, [bp+var_10] ;~ 17C5:C611
cs=0x17c5;eip=0x00c614; 	T(cl = 3;);	// 108460                  mov     cl, 3 ;~ 17C5:C614
loc_32846:
	// 6363 
cs=0x17c5;eip=0x00c616; 	T(SAR(dx, 1));	// 108463                  sar     dx, 1 ;~ 17C5:C616
cs=0x17c5;eip=0x00c618; 	T(RCR(ax, 1));	// 108464                  rcr     ax, 1 ;~ 17C5:C618
cs=0x17c5;eip=0x00c61a; 	T(DEC(cl));	// 108465                  dec     cl ;~ 17C5:C61A
cs=0x17c5;eip=0x00c61c; 	J(JZ(loc_32850));	// 108466                  jz      short loc_32850 ;~ 17C5:C61C
cs=0x17c5;eip=0x00c61e; 	J(JMP(loc_32846));	// 108467                  jmp     short loc_32846 ;~ 17C5:C61E
loc_32850:
	// 6364 
cs=0x17c5;eip=0x00c620; 	X(word_52246 = ax;);	// 108471                  mov     ds:word_52246, ax ;~ 17C5:C620
cs=0x17c5;eip=0x00c623; 	T(CMP(*(word_4aa98), 0));	// 108472                  cmp     word_4AA98, 0 ;~ 17C5:C623
cs=0x17c5;eip=0x00c628; 	J(JL(loc_32862));	// 108473                  jl      short loc_32862 ;~ 17C5:C628
cs=0x17c5;eip=0x00c62a; 	T(CMP(*(word_4aa98), 0x13F));	// 108474                  cmp     word_4AA98, 13Fh ;~ 17C5:C62A
cs=0x17c5;eip=0x00c630; 	J(JLE(loc_3286e));	// 108475                  jle     short loc_3286E ;~ 17C5:C630
loc_32862:
	// 6365 
cs=0x17c5;eip=0x00c632; 	T(ax = *(word_4aa98););	// 108478                  mov     ax, word_4AA98 ;~ 17C5:C632
cs=0x17c5;eip=0x00c635; 	X(word_4ef2e = ax;);	// 108479                  mov     ds:word_4EF2E, ax ;~ 17C5:C635
cs=0x17c5;eip=0x00c638; 	X(*(word_4aa98) = 0x0FFFF;);	// 108480                  mov     word_4AA98, 0FFFFh ;~ 17C5:C638
loc_3286e:
	// 6366 
cs=0x17c5;eip=0x00c63e; 	T(CMP(*(word_4ac7c), 0));	// 108483                  cmp     word_4AC7C, 0 ;~ 17C5:C63E
cs=0x17c5;eip=0x00c643; 	J(JL(loc_32881));	// 108484                  jl      short loc_32881 ;~ 17C5:C643
cs=0x17c5;eip=0x00c645; 	T(bx = word_4e564;);	// 108485                  mov     bx, ds:word_4E564 ;~ 17C5:C645
cs=0x17c5;eip=0x00c649; 	T(ax = *(word_4ac7c););	// 108486                  mov     ax, word_4AC7C ;~ 17C5:C649
cs=0x17c5;eip=0x00c64c; 	T(CMP(*(dw*)(raddr(ds,bx+0x10)), ax));	// 108487                  cmp     [bx+10h], ax ;~ 17C5:C64C
cs=0x17c5;eip=0x00c64f; 	J(JGE(loc_3288d));	// 108488                  jge     short loc_3288D ;~ 17C5:C64F
loc_32881:
	// 6367 
cs=0x17c5;eip=0x00c651; 	T(ax = *(word_4aa98););	// 108491                  mov     ax, word_4AA98 ;~ 17C5:C651
cs=0x17c5;eip=0x00c654; 	X(word_4ef2e = ax;);	// 108492                  mov     ds:word_4EF2E, ax ;~ 17C5:C654
cs=0x17c5;eip=0x00c657; 	X(*(word_4aa98) = 0x0FFFF;);	// 108493                  mov     word_4AA98, 0FFFFh ;~ 17C5:C657
loc_3288d:
	// 6368 
cs=0x17c5;eip=0x00c65d; 	T(sp = bp;);	// 108497                  mov     sp, bp ;~ 17C5:C65D
cs=0x17c5;eip=0x00c65f; 	X(POP(bp));	// 108498                  pop     bp ;~ 17C5:C65F
cs=0x17c5;eip=0x00c660; 	J(RETN(0));	// 108499                  retn ;~ 17C5:C660

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_326f5: 	goto loc_326f5;
        case m2c::kloc_326ff: 	goto loc_326ff;
        case m2c::kloc_32713: 	goto loc_32713;
        case m2c::kloc_3271d: 	goto loc_3271d;
        case m2c::kloc_32739: 	goto loc_32739;
        case m2c::kloc_32743: 	goto loc_32743;
        case m2c::kloc_32746: 	goto loc_32746;
        case m2c::kloc_3279d: 	goto loc_3279d;
        case m2c::kloc_327b0: 	goto loc_327b0;
        case m2c::kloc_327c9: 	goto loc_327c9;
        case m2c::kloc_327db: 	goto loc_327db;
        case m2c::kloc_327e4: 	goto loc_327e4;
        case m2c::kloc_32837: 	goto loc_32837;
        case m2c::kloc_3283a: 	goto loc_3283a;
        case m2c::kloc_32846: 	goto loc_32846;
        case m2c::kloc_32850: 	goto loc_32850;
        case m2c::kloc_32862: 	goto loc_32862;
        case m2c::kloc_3286e: 	goto loc_3286e;
        case m2c::kloc_32881: 	goto loc_32881;
        case m2c::kloc_3288d: 	goto loc_3288d;
        case m2c::ksub_326b8: 	goto sub_326b8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32891(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32891:
    _begin:
#undef var_4
#define var_4 -4
	// 108510 var_4           = word ptr -4 ;~ 17C5:C661
#undef var_2
#define var_2 -2
	// 108511 var_2           = word ptr -2 ;~ 17C5:C661
#undef arg_0
#define arg_0 4
	// 108512 arg_0           = word ptr  4 ;~ 17C5:C661
#undef arg_2
#define arg_2 6
	// 108513 arg_2           = word ptr  6 ;~ 17C5:C661
#undef arg_4
#define arg_4 8
	// 108514 arg_4           = word ptr  8 ;~ 17C5:C661
#undef arg_6
#define arg_6 0x0A
	// 108515 arg_6           = word ptr  0Ah ;~ 17C5:C661
cs=0x17c5;eip=0x00c661; 	X(PUSH(bp));	// 108517                  push    bp ;~ 17C5:C661
cs=0x17c5;eip=0x00c662; 	T(bp = sp;);	// 108518                  mov     bp, sp ;~ 17C5:C662
cs=0x17c5;eip=0x00c664; 	T(SUB(sp, 4));	// 108519                  sub     sp, 4 ;~ 17C5:C664
cs=0x17c5;eip=0x00c667; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 108520                  push    [bp+arg_2] ;~ 17C5:C667
cs=0x17c5;eip=0x00c66a; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 108521                  mov     bx, [bp+arg_0] ;~ 17C5:C66A
cs=0x17c5;eip=0x00c66d; 	T(SHL(bx, 1));	// 108522                  shl     bx, 1 ;~ 17C5:C66D
cs=0x17c5;eip=0x00c66f; 	X(PUSH(*(dw*)(raddr(ds,bx-0x7F68))));	// 108523                  push    word ptr [bx-7F68h] ;~ 17C5:C66F
cs=0x17c5;eip=0x00c673; 	J(CALL(sub_29d5f,0));	// 108524                  call    sub_29D5F ;~ 17C5:C673
cs=0x17c5;eip=0x00c676; 	T(ADD(sp, 4));	// 108525                  add     sp, 4 ;~ 17C5:C676
cs=0x17c5;eip=0x00c679; 	T(CWD);	// 108526                  cwd ;~ 17C5:C679
cs=0x17c5;eip=0x00c67a; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 108527                  mov     [bp+var_4], ax ;~ 17C5:C67A
cs=0x17c5;eip=0x00c67d; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), dx));	// 108528                  mov     [bp+var_2], dx ;~ 17C5:C67D
cs=0x17c5;eip=0x00c680; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 108529                  push    [bp+arg_6] ;~ 17C5:C680
cs=0x17c5;eip=0x00c683; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 108530                  mov     bx, [bp+arg_0] ;~ 17C5:C683
cs=0x17c5;eip=0x00c686; 	T(SHL(bx, 1));	// 108531                  shl     bx, 1 ;~ 17C5:C686
cs=0x17c5;eip=0x00c688; 	X(PUSH(*(dw*)(raddr(ds,bx-0x7F62))));	// 108532                  push    word ptr [bx-7F62h] ;~ 17C5:C688
cs=0x17c5;eip=0x00c68c; 	J(CALL(sub_29d5f,0));	// 108533                  call    sub_29D5F ;~ 17C5:C68C
cs=0x17c5;eip=0x00c68f; 	T(ADD(sp, 4));	// 108534                  add     sp, 4 ;~ 17C5:C68F
cs=0x17c5;eip=0x00c692; 	T(CWD);	// 108535                  cwd ;~ 17C5:C692
cs=0x17c5;eip=0x00c693; 	X(ADD(*(dw*)(raddr(ss,bp+var_4)), ax));	// 108536                  add     [bp+var_4], ax ;~ 17C5:C693
cs=0x17c5;eip=0x00c696; 	X(ADC(*(dw*)(raddr(ss,bp+var_2)), dx));	// 108537                  adc     [bp+var_2], dx ;~ 17C5:C696
cs=0x17c5;eip=0x00c699; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 108538                  push    [bp+arg_4] ;~ 17C5:C699
cs=0x17c5;eip=0x00c69c; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 108539                  mov     bx, [bp+arg_0] ;~ 17C5:C69C
cs=0x17c5;eip=0x00c69f; 	T(SHL(bx, 1));	// 108540                  shl     bx, 1 ;~ 17C5:C69F
cs=0x17c5;eip=0x00c6a1; 	X(PUSH(*(dw*)(raddr(ds,bx-0x7F5C))));	// 108541                  push    word ptr [bx-7F5Ch] ;~ 17C5:C6A1
cs=0x17c5;eip=0x00c6a5; 	J(CALL(sub_29d5f,0));	// 108542                  call    sub_29D5F ;~ 17C5:C6A5
cs=0x17c5;eip=0x00c6a8; 	T(ADD(sp, 4));	// 108543                  add     sp, 4 ;~ 17C5:C6A8
cs=0x17c5;eip=0x00c6ab; 	T(CWD);	// 108544                  cwd ;~ 17C5:C6AB
cs=0x17c5;eip=0x00c6ac; 	X(ADD(*(dw*)(raddr(ss,bp+var_4)), ax));	// 108545                  add     [bp+var_4], ax ;~ 17C5:C6AC
cs=0x17c5;eip=0x00c6af; 	X(ADC(*(dw*)(raddr(ss,bp+var_2)), dx));	// 108546                  adc     [bp+var_2], dx ;~ 17C5:C6AF
cs=0x17c5;eip=0x00c6b2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 108547                  mov     ax, [bp+var_4] ;~ 17C5:C6B2
cs=0x17c5;eip=0x00c6b5; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_2))));	// 108548                  mov     dx, [bp+var_2] ;~ 17C5:C6B5
cs=0x17c5;eip=0x00c6b8; 	J({;});	// 108549                  jmp     short $+2 ;~ 17C5:C6B8
loc_328ea:
	// 6369 
cs=0x17c5;eip=0x00c6ba; 	T(sp = bp;);	// 108553                  mov     sp, bp ;~ 17C5:C6BA
cs=0x17c5;eip=0x00c6bc; 	X(POP(bp));	// 108554                  pop     bp ;~ 17C5:C6BC
cs=0x17c5;eip=0x00c6bd; 	J(RETN(0));	// 108555                  retn ;~ 17C5:C6BD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_328ea: 	goto loc_328ea;
        case m2c::ksub_32891: 	goto sub_32891;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_328ee(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_328ee:
    _begin:
#undef var_2
#define var_2 -2
	// 108566 var_2           = word ptr -2 ;~ 17C5:C6BE
#undef arg_0
#define arg_0 4
	// 108567 arg_0           = word ptr  4 ;~ 17C5:C6BE
#undef arg_2
#define arg_2 6
	// 108568 arg_2           = word ptr  6 ;~ 17C5:C6BE
cs=0x17c5;eip=0x00c6be; 	X(PUSH(bp));	// 108570                  push    bp ;~ 17C5:C6BE
cs=0x17c5;eip=0x00c6bf; 	T(bp = sp;);	// 108571                  mov     bp, sp ;~ 17C5:C6BF
cs=0x17c5;eip=0x00c6c1; 	T(SUB(sp, 2));	// 108572                  sub     sp, 2 ;~ 17C5:C6C1
cs=0x17c5;eip=0x00c6c4; 	X(PUSH(si));	// 108573                  push    si ;~ 17C5:C6C4
cs=0x17c5;eip=0x00c6c5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 108574                  mov     ax, [bp+arg_2] ;~ 17C5:C6C5
cs=0x17c5;eip=0x00c6c8; 	T(CWD);	// 108575                  cwd ;~ 17C5:C6C8
cs=0x17c5;eip=0x00c6c9; 	T(SUB(ax, 0x8000));	// 108576                  sub     ax, 8000h ;~ 17C5:C6C9
cs=0x17c5;eip=0x00c6cc; 	T(SBB(dx, 0));	// 108577                  sbb     dx, 0 ;~ 17C5:C6CC
cs=0x17c5;eip=0x00c6cf; 	T(NEG(ax));	// 108578                  neg     ax ;~ 17C5:C6CF
cs=0x17c5;eip=0x00c6d1; 	T(ADC(dx, 0));	// 108579                  adc     dx, 0 ;~ 17C5:C6D1
cs=0x17c5;eip=0x00c6d4; 	T(NEG(dx));	// 108580                  neg     dx ;~ 17C5:C6D4
cs=0x17c5;eip=0x00c6d6; 	T(cl = 5;);	// 108581                  mov     cl, 5 ;~ 17C5:C6D6
loc_32908:
	// 6370 
cs=0x17c5;eip=0x00c6d8; 	T(SHL(ax, 1));	// 108584                  shl     ax, 1 ;~ 17C5:C6D8
cs=0x17c5;eip=0x00c6da; 	T(RCL(dx, 1));	// 108585                  rcl     dx, 1 ;~ 17C5:C6DA
cs=0x17c5;eip=0x00c6dc; 	T(DEC(cl));	// 108586                  dec     cl ;~ 17C5:C6DC
cs=0x17c5;eip=0x00c6de; 	J(JZ(loc_32912));	// 108587                  jz      short loc_32912 ;~ 17C5:C6DE
cs=0x17c5;eip=0x00c6e0; 	J(JMP(loc_32908));	// 108588                  jmp     short loc_32908 ;~ 17C5:C6E0
loc_32912:
	// 6371 
cs=0x17c5;eip=0x00c6e2; 	X(PUSH(dx));	// 108592                  push    dx ;~ 17C5:C6E2
cs=0x17c5;eip=0x00c6e3; 	X(PUSH(ax));	// 108593                  push    ax ;~ 17C5:C6E3
cs=0x17c5;eip=0x00c6e4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 108594                  mov     ax, [bp+arg_0] ;~ 17C5:C6E4
cs=0x17c5;eip=0x00c6e7; 	T(CWD);	// 108595                  cwd ;~ 17C5:C6E7
cs=0x17c5;eip=0x00c6e8; 	T(cl = 5;);	// 108596                  mov     cl, 5 ;~ 17C5:C6E8
loc_3291a:
	// 6372 
cs=0x17c5;eip=0x00c6ea; 	T(SHL(ax, 1));	// 108599                  shl     ax, 1 ;~ 17C5:C6EA
cs=0x17c5;eip=0x00c6ec; 	T(RCL(dx, 1));	// 108600                  rcl     dx, 1 ;~ 17C5:C6EC
cs=0x17c5;eip=0x00c6ee; 	T(DEC(cl));	// 108601                  dec     cl ;~ 17C5:C6EE
cs=0x17c5;eip=0x00c6f0; 	J(JZ(loc_32924));	// 108602                  jz      short loc_32924 ;~ 17C5:C6F0
cs=0x17c5;eip=0x00c6f2; 	J(JMP(loc_3291a));	// 108603                  jmp     short loc_3291A ;~ 17C5:C6F2
loc_32924:
	// 6373 
cs=0x17c5;eip=0x00c6f4; 	X(PUSH(dx));	// 108607                  push    dx ;~ 17C5:C6F4
cs=0x17c5;eip=0x00c6f5; 	X(PUSH(ax));	// 108608                  push    ax ;~ 17C5:C6F5
cs=0x17c5;eip=0x00c6f6; 	J(CALL(sub_2920a,0));	// 108609                  call    sub_2920A ;~ 17C5:C6F6
cs=0x17c5;eip=0x00c6f9; 	T(ADD(sp, 8));	// 108610                  add     sp, 8 ;~ 17C5:C6F9
cs=0x17c5;eip=0x00c6fc; 	X(word_4fa38 = ax;);	// 108611                  mov     ds:word_4FA38, ax ;~ 17C5:C6FC
cs=0x17c5;eip=0x00c6ff; 	T(OR(ax, ax));	// 108612                  or      ax, ax ;~ 17C5:C6FF
cs=0x17c5;eip=0x00c701; 	J(JNZ(loc_32936));	// 108613                  jnz     short loc_32936 ;~ 17C5:C701
cs=0x17c5;eip=0x00c703; 	J(JMP(loc_329c8));	// 108614                  jmp     loc_329C8 ;~ 17C5:C703
loc_32936:
	// 6374 
cs=0x17c5;eip=0x00c706; 	T(bx = ax;);	// 108618                  mov     bx, ax ;~ 17C5:C706
cs=0x17c5;eip=0x00c708; 	T(MOV(ax, *(dw*)(raddr(ds,bx+4))));	// 108619                  mov     ax, [bx+4] ;~ 17C5:C708
cs=0x17c5;eip=0x00c70b; 	T(MOV(dx, *(dw*)(raddr(ds,bx+6))));	// 108620                  mov     dx, [bx+6] ;~ 17C5:C70B
cs=0x17c5;eip=0x00c70e; 	T(cl = 5;);	// 108621                  mov     cl, 5 ;~ 17C5:C70E
loc_32940:
	// 6375 
cs=0x17c5;eip=0x00c710; 	T(SAR(dx, 1));	// 108624                  sar     dx, 1 ;~ 17C5:C710
cs=0x17c5;eip=0x00c712; 	T(RCR(ax, 1));	// 108625                  rcr     ax, 1 ;~ 17C5:C712
cs=0x17c5;eip=0x00c714; 	T(DEC(cl));	// 108626                  dec     cl ;~ 17C5:C714
cs=0x17c5;eip=0x00c716; 	J(JZ(loc_3294a));	// 108627                  jz      short loc_3294A ;~ 17C5:C716
cs=0x17c5;eip=0x00c718; 	J(JMP(loc_32940));	// 108628                  jmp     short loc_32940 ;~ 17C5:C718
loc_3294a:
	// 6376 
cs=0x17c5;eip=0x00c71a; 	X(MOV(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 108632                  mov     [bp+arg_0], ax ;~ 17C5:C71A
cs=0x17c5;eip=0x00c71d; 	T(bx = word_4fa38;);	// 108633                  mov     bx, ds:word_4FA38 ;~ 17C5:C71D
cs=0x17c5;eip=0x00c721; 	T(MOV(ax, *(dw*)(raddr(ds,bx+8))));	// 108634                  mov     ax, [bx+8] ;~ 17C5:C721
cs=0x17c5;eip=0x00c724; 	T(MOV(dx, *(dw*)(raddr(ds,bx+0x0A))));	// 108635                  mov     dx, [bx+0Ah] ;~ 17C5:C724
cs=0x17c5;eip=0x00c727; 	T(cl = 5;);	// 108636                  mov     cl, 5 ;~ 17C5:C727
loc_32959:
	// 6377 
cs=0x17c5;eip=0x00c729; 	T(SAR(dx, 1));	// 108639                  sar     dx, 1 ;~ 17C5:C729
cs=0x17c5;eip=0x00c72b; 	T(RCR(ax, 1));	// 108640                  rcr     ax, 1 ;~ 17C5:C72B
cs=0x17c5;eip=0x00c72d; 	T(DEC(cl));	// 108641                  dec     cl ;~ 17C5:C72D
cs=0x17c5;eip=0x00c72f; 	J(JZ(loc_32963));	// 108642                  jz      short loc_32963 ;~ 17C5:C72F
cs=0x17c5;eip=0x00c731; 	J(JMP(loc_32959));	// 108643                  jmp     short loc_32959 ;~ 17C5:C731
loc_32963:
	// 6378 
cs=0x17c5;eip=0x00c733; 	T(SUB(ax, 0x8000));	// 108647                  sub     ax, 8000h ;~ 17C5:C733
cs=0x17c5;eip=0x00c736; 	T(NEG(ax));	// 108648                  neg     ax ;~ 17C5:C736
cs=0x17c5;eip=0x00c738; 	X(MOV(*(dw*)(raddr(ss,bp+arg_2)), ax));	// 108649                  mov     [bp+arg_2], ax ;~ 17C5:C738
cs=0x17c5;eip=0x00c73b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 1));	// 108650                  mov     [bp+var_2], 1 ;~ 17C5:C73B
cs=0x17c5;eip=0x00c740; 	J(JMP(loc_32975));	// 108651                  jmp     short loc_32975 ;~ 17C5:C740
loc_32972:
	// 6379 
cs=0x17c5;eip=0x00c742; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 108655                  inc     [bp+var_2] ;~ 17C5:C742
loc_32975:
	// 6380 
cs=0x17c5;eip=0x00c745; 	T(ax = word_52102;);	// 108658                  mov     ax, ds:word_52102 ;~ 17C5:C745
cs=0x17c5;eip=0x00c748; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), ax));	// 108659                  cmp     [bp+var_2], ax ;~ 17C5:C748
cs=0x17c5;eip=0x00c74b; 	J(JGE(loc_3299d));	// 108660                  jge     short loc_3299D ;~ 17C5:C74B
cs=0x17c5;eip=0x00c74d; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_2))));	// 108661                  mov     si, [bp+var_2] ;~ 17C5:C74D
cs=0x17c5;eip=0x00c750; 	T(cl = 4;);	// 108662                  mov     cl, 4 ;~ 17C5:C750
cs=0x17c5;eip=0x00c752; 	T(SHL(si, cl));	// 108663                  shl     si, cl ;~ 17C5:C752
cs=0x17c5;eip=0x00c754; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 108664                  mov     ax, [si-7E52h] ;~ 17C5:C754
cs=0x17c5;eip=0x00c758; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 108665                  cmp     [bp+arg_0], ax ;~ 17C5:C758
cs=0x17c5;eip=0x00c75b; 	J(JNZ(loc_3299b));	// 108666                  jnz     short loc_3299B ;~ 17C5:C75B
cs=0x17c5;eip=0x00c75d; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 108667                  mov     ax, [si-7E50h] ;~ 17C5:C75D
cs=0x17c5;eip=0x00c761; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), ax));	// 108668                  cmp     [bp+arg_2], ax ;~ 17C5:C761
cs=0x17c5;eip=0x00c764; 	J(JNZ(loc_3299b));	// 108669                  jnz     short loc_3299B ;~ 17C5:C764
cs=0x17c5;eip=0x00c766; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 108670                  mov     ax, [bp+var_2] ;~ 17C5:C766
cs=0x17c5;eip=0x00c769; 	J(JMP(loc_329cd));	// 108671                  jmp     short loc_329CD ;~ 17C5:C769
loc_3299b:
	// 6381 
cs=0x17c5;eip=0x00c76b; 	J(JMP(loc_32972));	// 108676                  jmp     short loc_32972 ;~ 17C5:C76B
loc_3299d:
	// 6382 
cs=0x17c5;eip=0x00c76d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 108680                  mov     ax, [bp+arg_0] ;~ 17C5:C76D
cs=0x17c5;eip=0x00c770; 	X(word_50c8e = ax;);	// 108681                  mov     ds:word_50C8E, ax ;~ 17C5:C770
cs=0x17c5;eip=0x00c773; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 108682                  mov     ax, [bp+arg_2] ;~ 17C5:C773
cs=0x17c5;eip=0x00c776; 	X(*(dw*)(asc_50c90) = ax;);	// 108683                  mov     word ptr ds:asc_50C90, ax ; "\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v\v" ;~ 17C5:C776
cs=0x17c5;eip=0x00c779; 	T(bx = word_4fa38;);	// 108684                  mov     bx, ds:word_4FA38 ;~ 17C5:C779
cs=0x17c5;eip=0x00c77d; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 108685                  mov     ax, [bx] ;~ 17C5:C77D
cs=0x17c5;eip=0x00c77f; 	T(ADD(ah, 1));	// 108686                  add     ah, 1 ;~ 17C5:C77F
cs=0x17c5;eip=0x00c782; 	X(*(dw*)((asc_50c90)+0x0A) = ax;);	// 108687                  mov     word ptr ds:asc_50C90+0Ah, ax ; "\v\v\v\v\v\v" ;~ 17C5:C782
cs=0x17c5;eip=0x00c785; 	T(CMP(word_49926, 0));	// 108688                  cmp     word_49926, 0 ;~ 17C5:C785
cs=0x17c5;eip=0x00c78a; 	J(JNZ(loc_329c2));	// 108689                  jnz     short loc_329C2 ;~ 17C5:C78A
cs=0x17c5;eip=0x00c78c; 	X(word_49926 = 0x0FFFF;);	// 108690                  mov     word_49926, 0FFFFh ;~ 17C5:C78C
loc_329c2:
	// 6383 
cs=0x17c5;eip=0x00c792; 	T(SUB(ax, ax));	// 108693                  sub     ax, ax ;~ 17C5:C792
cs=0x17c5;eip=0x00c794; 	J(JMP(loc_329cd));	// 108694                  jmp     short loc_329CD ;~ 17C5:C794
ret_17c5_c796:
	// 6384 
cs=0x17c5;eip=0x00c796; 	J(JMP(loc_329cd));	// 108696                  jmp     short loc_329CD ;~ 17C5:C796
loc_329c8:
	// 6385 
cs=0x17c5;eip=0x00c798; 	T(ax = 0x0FFFF;);	// 108700                  mov     ax, 0FFFFh ;~ 17C5:C798
cs=0x17c5;eip=0x00c79b; 	J({;});	// 108701                  jmp     short $+2 ;~ 17C5:C79B
loc_329cd:
	// 6386 
cs=0x17c5;eip=0x00c79d; 	X(POP(si));	// 108706                  pop     si ;~ 17C5:C79D
cs=0x17c5;eip=0x00c79e; 	T(sp = bp;);	// 108707                  mov     sp, bp ;~ 17C5:C79E
cs=0x17c5;eip=0x00c7a0; 	X(POP(bp));	// 108708                  pop     bp ;~ 17C5:C7A0
cs=0x17c5;eip=0x00c7a1; 	J(RETN(0));	// 108709                  retn ;~ 17C5:C7A1

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32908: 	goto loc_32908;
        case m2c::kloc_32912: 	goto loc_32912;
        case m2c::kloc_3291a: 	goto loc_3291a;
        case m2c::kloc_32924: 	goto loc_32924;
        case m2c::kloc_32936: 	goto loc_32936;
        case m2c::kloc_32940: 	goto loc_32940;
        case m2c::kloc_3294a: 	goto loc_3294a;
        case m2c::kloc_32959: 	goto loc_32959;
        case m2c::kloc_32963: 	goto loc_32963;
        case m2c::kloc_32972: 	goto loc_32972;
        case m2c::kloc_32975: 	goto loc_32975;
        case m2c::kloc_3299b: 	goto loc_3299b;
        case m2c::kloc_3299d: 	goto loc_3299d;
        case m2c::kloc_329c2: 	goto loc_329c2;
        case m2c::kloc_329c8: 	goto loc_329c8;
        case m2c::kloc_329cd: 	goto loc_329cd;
        case m2c::kret_17c5_c796: 	goto ret_17c5_c796;
        case m2c::ksub_328ee: 	goto sub_328ee;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_329d2(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_329d2:
    _begin:
#undef arg_0
#define arg_0 4
	// 108720 arg_0           = word ptr  4 ;~ 17C5:C7A2
cs=0x17c5;eip=0x00c7a2; 	X(PUSH(bp));	// 108722                  push    bp ;~ 17C5:C7A2
cs=0x17c5;eip=0x00c7a3; 	T(bp = sp;);	// 108723                  mov     bp, sp ;~ 17C5:C7A3
cs=0x17c5;eip=0x00c7a5; 	X(PUSH(si));	// 108724                  push    si ;~ 17C5:C7A5
cs=0x17c5;eip=0x00c7a6; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 108725                  mov     si, [bp+arg_0] ;~ 17C5:C7A6
cs=0x17c5;eip=0x00c7a9; 	T(cl = 4;);	// 108726                  mov     cl, 4 ;~ 17C5:C7A9
cs=0x17c5;eip=0x00c7ab; 	T(SHL(si, cl));	// 108727                  shl     si, cl ;~ 17C5:C7AB
cs=0x17c5;eip=0x00c7ad; 	T(ax = 1;);	// 108728                  mov     ax, 1 ;~ 17C5:C7AD
cs=0x17c5;eip=0x00c7b0; 	X(PUSH(ax));	// 108729                  push    ax ;~ 17C5:C7B0
cs=0x17c5;eip=0x00c7b1; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E50))));	// 108730                  push    word ptr [si-7E50h] ;~ 17C5:C7B1
cs=0x17c5;eip=0x00c7b5; 	X(PUSH(*(dw*)(raddr(ds,si-0x7E52))));	// 108731                  push    word ptr [si-7E52h] ;~ 17C5:C7B5
cs=0x17c5;eip=0x00c7b9; 	J(CALL(sub_32a1a,0));	// 108732                  call    sub_32A1A ;~ 17C5:C7B9
cs=0x17c5;eip=0x00c7bc; 	T(ADD(sp, 6));	// 108733                  add     sp, 6 ;~ 17C5:C7BC
cs=0x17c5;eip=0x00c7bf; 	J({;});	// 108734                  jmp     short $+2 ;~ 17C5:C7BF
loc_329f1:
	// 6387 
cs=0x17c5;eip=0x00c7c1; 	X(POP(si));	// 108738                  pop     si ;~ 17C5:C7C1
cs=0x17c5;eip=0x00c7c2; 	T(sp = bp;);	// 108739                  mov     sp, bp ;~ 17C5:C7C2
cs=0x17c5;eip=0x00c7c4; 	X(POP(bp));	// 108740                  pop     bp ;~ 17C5:C7C4
cs=0x17c5;eip=0x00c7c5; 	J(RETN(0));	// 108741                  retn ;~ 17C5:C7C5

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_329f1: 	goto loc_329f1;
        case m2c::ksub_329d2: 	goto sub_329d2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_329f6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_329f6:
    _begin:
#undef arg_0
#define arg_0 4
	// 108751 arg_0           = word ptr  4 ;~ 17C5:C7C6
cs=0x17c5;eip=0x00c7c6; 	X(PUSH(bp));	// 108753                  push    bp ;~ 17C5:C7C6
cs=0x17c5;eip=0x00c7c7; 	T(bp = sp;);	// 108754                  mov     bp, sp ;~ 17C5:C7C7
cs=0x17c5;eip=0x00c7c9; 	X(PUSH(si));	// 108755                  push    si ;~ 17C5:C7C9
cs=0x17c5;eip=0x00c7ca; 	T(ax = 0x24;);	// 108756                  mov     ax, 24h ; '$' ;~ 17C5:C7CA
cs=0x17c5;eip=0x00c7cd; 	X(IMUL1_2(*(dw*)(raddr(ss,bp+arg_0))));	// 108757                  imul    [bp+arg_0] ;~ 17C5:C7CD
cs=0x17c5;eip=0x00c7d0; 	T(si = ax;);	// 108758                  mov     si, ax ;~ 17C5:C7D0
cs=0x17c5;eip=0x00c7d2; 	T(SUB(ax, ax));	// 108759                  sub     ax, ax ;~ 17C5:C7D2
cs=0x17c5;eip=0x00c7d4; 	X(PUSH(ax));	// 108760                  push    ax ;~ 17C5:C7D4
cs=0x17c5;eip=0x00c7d5; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AA))));	// 108761                  push    word ptr [si-76AAh] ;~ 17C5:C7D5
cs=0x17c5;eip=0x00c7d9; 	X(PUSH(*(dw*)(raddr(ds,si-0x76AC))));	// 108762                  push    word ptr [si-76ACh] ;~ 17C5:C7D9
cs=0x17c5;eip=0x00c7dd; 	J(CALL(sub_32a1a,0));	// 108763                  call    sub_32A1A ;~ 17C5:C7DD
cs=0x17c5;eip=0x00c7e0; 	T(ADD(sp, 6));	// 108764                  add     sp, 6 ;~ 17C5:C7E0
cs=0x17c5;eip=0x00c7e3; 	J({;});	// 108765                  jmp     short $+2 ;~ 17C5:C7E3
loc_32a15:
	// 6388 
cs=0x17c5;eip=0x00c7e5; 	X(POP(si));	// 108769                  pop     si ;~ 17C5:C7E5
cs=0x17c5;eip=0x00c7e6; 	T(sp = bp;);	// 108770                  mov     sp, bp ;~ 17C5:C7E6
cs=0x17c5;eip=0x00c7e8; 	X(POP(bp));	// 108771                  pop     bp ;~ 17C5:C7E8
cs=0x17c5;eip=0x00c7e9; 	J(RETN(0));	// 108772                  retn ;~ 17C5:C7E9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32a15: 	goto loc_32a15;
        case m2c::ksub_329f6: 	goto sub_329f6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32a1a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32a1a:
    _begin:
#undef var_4
#define var_4 -4
	// 108783 var_4           = word ptr -4 ;~ 17C5:C7EA
#undef var_2
#define var_2 -2
	// 108784 var_2           = word ptr -2 ;~ 17C5:C7EA
#undef arg_0
#define arg_0 4
	// 108785 arg_0           = word ptr  4 ;~ 17C5:C7EA
#undef arg_2
#define arg_2 6
	// 108786 arg_2           = word ptr  6 ;~ 17C5:C7EA
#undef arg_4
#define arg_4 8
	// 108787 arg_4           = word ptr  8 ;~ 17C5:C7EA
cs=0x17c5;eip=0x00c7ea; 	X(PUSH(bp));	// 108789                  push    bp ;~ 17C5:C7EA
cs=0x17c5;eip=0x00c7eb; 	T(bp = sp;);	// 108790                  mov     bp, sp ;~ 17C5:C7EB
cs=0x17c5;eip=0x00c7ed; 	T(SUB(sp, 4));	// 108791                  sub     sp, 4 ;~ 17C5:C7ED
cs=0x17c5;eip=0x00c7f0; 	T(ax = word_520f0;);	// 108792                  mov     ax, ds:word_520F0 ;~ 17C5:C7F0
cs=0x17c5;eip=0x00c7f3; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 108793                  sub     ax, [bp+arg_0] ;~ 17C5:C7F3
cs=0x17c5;eip=0x00c7f6; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 108794                  mov     [bp+var_2], ax ;~ 17C5:C7F6
cs=0x17c5;eip=0x00c7f9; 	T(ax = word_52100;);	// 108795                  mov     ax, ds:word_52100 ;~ 17C5:C7F9
cs=0x17c5;eip=0x00c7fc; 	T(SUB(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 108796                  sub     ax, [bp+arg_2] ;~ 17C5:C7FC
cs=0x17c5;eip=0x00c7ff; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 108797                  mov     [bp+var_4], ax ;~ 17C5:C7FF
cs=0x17c5;eip=0x00c802; 	T(CMP(*(dw*)(raddr(ss,bp+arg_4)), 0));	// 108798                  cmp     [bp+arg_4], 0 ;~ 17C5:C802
cs=0x17c5;eip=0x00c806; 	J(JZ(loc_32a48));	// 108799                  jz      short loc_32A48 ;~ 17C5:C806
cs=0x17c5;eip=0x00c808; 	X(PUSH(ax));	// 108800                  push    ax ;~ 17C5:C808
cs=0x17c5;eip=0x00c809; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 108801                  mov     ax, [bp+var_2] ;~ 17C5:C809
cs=0x17c5;eip=0x00c80c; 	T(NEG(ax));	// 108802                  neg     ax ;~ 17C5:C80C
cs=0x17c5;eip=0x00c80e; 	X(PUSH(ax));	// 108803                  push    ax ;~ 17C5:C80E
cs=0x17c5;eip=0x00c80f; 	J(CALL(sub_33238,0));	// 108804                  call    sub_33238 ;~ 17C5:C80F
cs=0x17c5;eip=0x00c812; 	T(ADD(sp, 4));	// 108805                  add     sp, 4 ;~ 17C5:C812
cs=0x17c5;eip=0x00c815; 	X(word_4ef30 = ax;);	// 108806                  mov     ds:word_4EF30, ax ;~ 17C5:C815
loc_32a48:
	// 6389 
cs=0x17c5;eip=0x00c818; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 108809                  push    [bp+var_4] ;~ 17C5:C818
cs=0x17c5;eip=0x00c81b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 108810                  push    [bp+var_2] ;~ 17C5:C81B
cs=0x17c5;eip=0x00c81e; 	J(CALL(sub_331d6,0));	// 108811                  call    sub_331D6 ;~ 17C5:C81E
cs=0x17c5;eip=0x00c821; 	T(ADD(sp, 4));	// 108812                  add     sp, 4 ;~ 17C5:C821
cs=0x17c5;eip=0x00c824; 	X(word_4ef2c = ax;);	// 108813                  mov     ds:word_4EF2C, ax ;~ 17C5:C824
cs=0x17c5;eip=0x00c827; 	J({;});	// 108814                  jmp     short $+2 ;~ 17C5:C827
loc_32a59:
	// 6390 
cs=0x17c5;eip=0x00c829; 	T(sp = bp;);	// 108818                  mov     sp, bp ;~ 17C5:C829
cs=0x17c5;eip=0x00c82b; 	X(POP(bp));	// 108819                  pop     bp ;~ 17C5:C82B
cs=0x17c5;eip=0x00c82c; 	J(RETN(0));	// 108820                  retn ;~ 17C5:C82C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32a48: 	goto loc_32a48;
        case m2c::kloc_32a59: 	goto loc_32a59;
        case m2c::ksub_32a1a: 	goto sub_32a1a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32a5d(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32a5d:
    _begin:
cs=0x17c5;eip=0x00c82d; 	X(PUSH(bp));	// 108830                  push    bp ;~ 17C5:C82D
cs=0x17c5;eip=0x00c82e; 	T(bp = sp;);	// 108831                  mov     bp, sp ;~ 17C5:C82E
cs=0x17c5;eip=0x00c830; 	T(ax = word_4e2fe;);	// 108832                  mov     ax, ds:word_4E2FE ;~ 17C5:C830
cs=0x17c5;eip=0x00c833; 	T(ADD(ah, 0x10));	// 108833                  add     ah, 10h ;~ 17C5:C833
cs=0x17c5;eip=0x00c836; 	T(SUB(cx, cx));	// 108834                  sub     cx, cx ;~ 17C5:C836
cs=0x17c5;eip=0x00c838; 	X(PUSH(cx));	// 108835                  push    cx ;~ 17C5:C838
cs=0x17c5;eip=0x00c839; 	X(PUSH(ax));	// 108836                  push    ax ;~ 17C5:C839
cs=0x17c5;eip=0x00c83a; 	X(PUSH(word_4e2fa));	// 108837                  push    ds:word_4E2FA ;~ 17C5:C83A
cs=0x17c5;eip=0x00c83e; 	J(CALL(sub_34dc0,0));	// 108838                  call    sub_34DC0 ;~ 17C5:C83E
cs=0x17c5;eip=0x00c841; 	T(ADD(sp, 2));	// 108839                  add     sp, 2 ;~ 17C5:C841
cs=0x17c5;eip=0x00c844; 	T(SUB(ax, 0x4000));	// 108840                  sub     ax, 4000h ;~ 17C5:C844
cs=0x17c5;eip=0x00c847; 	T(NEG(ax));	// 108841                  neg     ax ;~ 17C5:C847
cs=0x17c5;eip=0x00c849; 	T(CWD);	// 108842                  cwd ;~ 17C5:C849
cs=0x17c5;eip=0x00c84a; 	T(cl = 0x0C;);	// 108843                  mov     cl, 0Ch ;~ 17C5:C84A
loc_32a7c:
	// 6391 
cs=0x17c5;eip=0x00c84c; 	T(SHL(ax, 1));	// 108846                  shl     ax, 1 ;~ 17C5:C84C
cs=0x17c5;eip=0x00c84e; 	T(RCL(dx, 1));	// 108847                  rcl     dx, 1 ;~ 17C5:C84E
cs=0x17c5;eip=0x00c850; 	T(DEC(cl));	// 108848                  dec     cl ;~ 17C5:C850
cs=0x17c5;eip=0x00c852; 	J(JZ(loc_32a86));	// 108849                  jz      short loc_32A86 ;~ 17C5:C852
cs=0x17c5;eip=0x00c854; 	J(JMP(loc_32a7c));	// 108850                  jmp     short loc_32A7C ;~ 17C5:C854
loc_32a86:
	// 6392 
cs=0x17c5;eip=0x00c856; 	X(PUSH(dx));	// 108854                  push    dx ;~ 17C5:C856
cs=0x17c5;eip=0x00c857; 	X(PUSH(ax));	// 108855                  push    ax ;~ 17C5:C857
cs=0x17c5;eip=0x00c858; 	J(CALL(sub_34f54,0));	// 108856                  call    sub_34F54 ;~ 17C5:C858
cs=0x17c5;eip=0x00c85b; 	T(SUB(ax, 0x4000));	// 108857                  sub     ax, 4000h ;~ 17C5:C85B
cs=0x17c5;eip=0x00c85e; 	J({;});	// 108858                  jmp     short $+2 ;~ 17C5:C85E
loc_32a90:
	// 6393 
cs=0x17c5;eip=0x00c860; 	T(sp = bp;);	// 108862                  mov     sp, bp ;~ 17C5:C860
cs=0x17c5;eip=0x00c862; 	X(POP(bp));	// 108863                  pop     bp ;~ 17C5:C862
cs=0x17c5;eip=0x00c863; 	J(RETN(0));	// 108864                  retn ;~ 17C5:C863

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32a7c: 	goto loc_32a7c;
        case m2c::kloc_32a86: 	goto loc_32a86;
        case m2c::kloc_32a90: 	goto loc_32a90;
        case m2c::ksub_32a5d: 	goto sub_32a5d;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32a94(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32a94:
    _begin:
#undef arg_0
#define arg_0 4
	// 108875 arg_0           = word ptr  4 ;~ 17C5:C864
cs=0x17c5;eip=0x00c864; 	X(PUSH(bp));	// 108877                  push    bp ;~ 17C5:C864
cs=0x17c5;eip=0x00c865; 	T(bp = sp;);	// 108878                  mov     bp, sp ;~ 17C5:C865
cs=0x17c5;eip=0x00c867; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 108879                  mov     bx, [bp+arg_0] ;~ 17C5:C867
cs=0x17c5;eip=0x00c86a; 	T(cl = 4;);	// 108880                  mov     cl, 4 ;~ 17C5:C86A
cs=0x17c5;eip=0x00c86c; 	T(SHL(bx, cl));	// 108881                  shl     bx, cl ;~ 17C5:C86C
cs=0x17c5;eip=0x00c86e; 	T(TEST(*(raddr(ds,bx-0x7E4C)), 0x80));	// 108882                  test    byte ptr [bx-7E4Ch], 80h ;~ 17C5:C86E
cs=0x17c5;eip=0x00c873; 	J(JZ(loc_32ac3));	// 108883                  jz      short loc_32AC3 ;~ 17C5:C873
cs=0x17c5;eip=0x00c875; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 108884                  push    [bp+arg_0] ;~ 17C5:C875
cs=0x17c5;eip=0x00c878; 	J(CALL(sub_32ad4,0));	// 108885                  call    sub_32AD4 ;~ 17C5:C878
cs=0x17c5;eip=0x00c87b; 	T(ADD(sp, 2));	// 108886                  add     sp, 2 ;~ 17C5:C87B
cs=0x17c5;eip=0x00c87e; 	T(OR(ax, ax));	// 108887                  or      ax, ax ;~ 17C5:C87E
cs=0x17c5;eip=0x00c880; 	J(JZ(loc_32ab8));	// 108888                  jz      short loc_32AB8 ;~ 17C5:C880
cs=0x17c5;eip=0x00c882; 	T(al = byte_520f4;);	// 108889                  mov     al, ds:byte_520F4 ;~ 17C5:C882
cs=0x17c5;eip=0x00c885; 	T(CBW);	// 108890                  cbw ;~ 17C5:C885
cs=0x17c5;eip=0x00c886; 	J(JMP(loc_32abc));	// 108891                  jmp     short loc_32ABC ;~ 17C5:C886
loc_32ab8:
	// 6394 
cs=0x17c5;eip=0x00c888; 	T(al = byte_5225a;);	// 108895                  mov     al, ds:byte_5225A ;~ 17C5:C888
cs=0x17c5;eip=0x00c88b; 	T(CBW);	// 108896                  cbw ;~ 17C5:C88B
loc_32abc:
	// 6395 
cs=0x17c5;eip=0x00c88c; 	T(ADD(ah, 1));	// 108899                  add     ah, 1 ;~ 17C5:C88C
cs=0x17c5;eip=0x00c88f; 	J(JMP(loc_32ad0));	// 108900                  jmp     short loc_32AD0 ;~ 17C5:C88F
ret_17c5_c891:
	// 6396 
cs=0x17c5;eip=0x00c891; 	J(JMP(loc_32ad0));	// 108902                  jmp     short loc_32AD0 ;~ 17C5:C891
loc_32ac3:
	// 6397 
cs=0x17c5;eip=0x00c893; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 108906                  mov     bx, [bp+arg_0] ;~ 17C5:C893
cs=0x17c5;eip=0x00c896; 	T(cl = 4;);	// 108907                  mov     cl, 4 ;~ 17C5:C896
cs=0x17c5;eip=0x00c898; 	T(SHL(bx, cl));	// 108908                  shl     bx, cl ;~ 17C5:C898
cs=0x17c5;eip=0x00c89a; 	T(MOV(ax, *(dw*)(raddr(ds,bx-0x7E46))));	// 108909                  mov     ax, [bx-7E46h] ;~ 17C5:C89A
cs=0x17c5;eip=0x00c89e; 	J({;});	// 108910                  jmp     short $+2 ;~ 17C5:C89E
loc_32ad0:
	// 6398 
cs=0x17c5;eip=0x00c8a0; 	T(sp = bp;);	// 108915                  mov     sp, bp ;~ 17C5:C8A0
cs=0x17c5;eip=0x00c8a2; 	X(POP(bp));	// 108916                  pop     bp ;~ 17C5:C8A2
cs=0x17c5;eip=0x00c8a3; 	J(RETN(0));	// 108917                  retn ;~ 17C5:C8A3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32ab8: 	goto loc_32ab8;
        case m2c::kloc_32abc: 	goto loc_32abc;
        case m2c::kloc_32ac3: 	goto loc_32ac3;
        case m2c::kloc_32ad0: 	goto loc_32ad0;
        case m2c::kret_17c5_c891: 	goto ret_17c5_c891;
        case m2c::ksub_32a94: 	goto sub_32a94;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32ad4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32ad4:
    _begin:
#undef var_2
#define var_2 -2
	// 108928 var_2           = word ptr -2 ;~ 17C5:C8A4
#undef arg_0
#define arg_0 4
	// 108929 arg_0           = word ptr  4 ;~ 17C5:C8A4
cs=0x17c5;eip=0x00c8a4; 	X(PUSH(bp));	// 108931                  push    bp ;~ 17C5:C8A4
cs=0x17c5;eip=0x00c8a5; 	T(bp = sp;);	// 108932                  mov     bp, sp ;~ 17C5:C8A5
cs=0x17c5;eip=0x00c8a7; 	T(SUB(sp, 2));	// 108933                  sub     sp, 2 ;~ 17C5:C8A7
cs=0x17c5;eip=0x00c8aa; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 108934                  mov     bx, [bp+arg_0] ;~ 17C5:C8AA
cs=0x17c5;eip=0x00c8ad; 	T(cl = 4;);	// 108935                  mov     cl, 4 ;~ 17C5:C8AD
cs=0x17c5;eip=0x00c8af; 	T(SHL(bx, cl));	// 108936                  shl     bx, cl ;~ 17C5:C8AF
cs=0x17c5;eip=0x00c8b1; 	T(MOV(bx, *(dw*)(raddr(ds,bx-0x7E46))));	// 108937                  mov     bx, [bx-7E46h] ;~ 17C5:C8B1
cs=0x17c5;eip=0x00c8b5; 	T(AND(bx, 0x7F));	// 108938                  and     bx, 7Fh ;~ 17C5:C8B5
cs=0x17c5;eip=0x00c8b8; 	T(MOV(al, *(raddr(ds,bx-0x690C))));	// 108939                  mov     al, [bx-690Ch] ;~ 17C5:C8B8
cs=0x17c5;eip=0x00c8bc; 	T(AND(ax, 0x0F));	// 108940                  and     ax, 0Fh ;~ 17C5:C8BC
cs=0x17c5;eip=0x00c8bf; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 108941                  mov     [bp+var_2], ax ;~ 17C5:C8BF
cs=0x17c5;eip=0x00c8c2; 	T(CMP(ax, 0x0C));	// 108942                  cmp     ax, 0Ch ;~ 17C5:C8C2
cs=0x17c5;eip=0x00c8c5; 	J(JZ(loc_32b01));	// 108943                  jz      short loc_32B01 ;~ 17C5:C8C5
cs=0x17c5;eip=0x00c8c7; 	T(CMP(ax, 9));	// 108944                  cmp     ax, 9 ;~ 17C5:C8C7
cs=0x17c5;eip=0x00c8ca; 	J(JZ(loc_32b01));	// 108945                  jz      short loc_32B01 ;~ 17C5:C8CA
cs=0x17c5;eip=0x00c8cc; 	T(CMP(ax, 0x0B));	// 108946                  cmp     ax, 0Bh ;~ 17C5:C8CC
cs=0x17c5;eip=0x00c8cf; 	J(JNZ(loc_32b06));	// 108947                  jnz     short loc_32B06 ;~ 17C5:C8CF
loc_32b01:
	// 6399 
cs=0x17c5;eip=0x00c8d1; 	T(ax = 1;);	// 108951                  mov     ax, 1 ;~ 17C5:C8D1
cs=0x17c5;eip=0x00c8d4; 	J(JMP(loc_32b08));	// 108952                  jmp     short loc_32B08 ;~ 17C5:C8D4
loc_32b06:
	// 6400 
cs=0x17c5;eip=0x00c8d6; 	T(SUB(ax, ax));	// 108956                  sub     ax, ax ;~ 17C5:C8D6
loc_32b08:
	// 6401 
cs=0x17c5;eip=0x00c8d8; 	J({;});	// 108959                  jmp     short $+2 ;~ 17C5:C8D8
loc_32b0a:
	// 6402 
cs=0x17c5;eip=0x00c8da; 	T(sp = bp;);	// 108963                  mov     sp, bp ;~ 17C5:C8DA
cs=0x17c5;eip=0x00c8dc; 	X(POP(bp));	// 108964                  pop     bp ;~ 17C5:C8DC
cs=0x17c5;eip=0x00c8dd; 	J(RETN(0));	// 108965                  retn ;~ 17C5:C8DD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32b01: 	goto loc_32b01;
        case m2c::kloc_32b06: 	goto loc_32b06;
        case m2c::kloc_32b08: 	goto loc_32b08;
        case m2c::kloc_32b0a: 	goto loc_32b0a;
        case m2c::ksub_32ad4: 	goto sub_32ad4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_c8de_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_c8de_proc:
    _begin:
loc_32b0e:
	// 6403 
cs=0x17c5;eip=0x00c8de; 	X(PUSH(bp));	// 108971                  push    bp ;~ 17C5:C8DE
cs=0x17c5;eip=0x00c8df; 	T(bp = sp;);	// 108972                  mov     bp, sp ;~ 17C5:C8DF
cs=0x17c5;eip=0x00c8e1; 	T(SUB(sp, 0x10));	// 108973                  sub     sp, 10h ;~ 17C5:C8E1
cs=0x17c5;eip=0x00c8e4; 	T(ax = 0x5C42;);	// 108974                  mov     ax, 5C42h ;~ 17C5:C8E4
cs=0x17c5;eip=0x00c8e7; 	X(PUSH(ax));	// 108975                  push    ax ;~ 17C5:C8E7
cs=0x17c5;eip=0x00c8e8; 	T(ax = 0x5C60;);	// 108976                  mov     ax, 5C60h ;~ 17C5:C8E8
cs=0x17c5;eip=0x00c8eb; 	X(PUSH(ax));	// 108977                  push    ax ;~ 17C5:C8EB
cs=0x17c5;eip=0x00c8ec; 	J(CALL(sub_291df,0));	// 108978                  call    sub_291DF ;~ 17C5:C8EC
cs=0x17c5;eip=0x00c8ef; 	T(ADD(sp, 4));	// 108979                  add     sp, 4 ;~ 17C5:C8EF
cs=0x17c5;eip=0x00c8f2; 	T(ax = 0x5C47;);	// 108980                  mov     ax, 5C47h ;~ 17C5:C8F2
cs=0x17c5;eip=0x00c8f5; 	X(PUSH(ax));	// 108981                  push    ax ;~ 17C5:C8F5
cs=0x17c5;eip=0x00c8f6; 	T(ax = 0x5C60;);	// 108982                  mov     ax, 5C60h ;~ 17C5:C8F6
cs=0x17c5;eip=0x00c8f9; 	X(PUSH(ax));	// 108983                  push    ax ;~ 17C5:C8F9
cs=0x17c5;eip=0x00c8fa; 	J(CALL(sub_34954,0));	// 108984                  call    sub_34954 ;~ 17C5:C8FA
cs=0x17c5;eip=0x00c8fd; 	T(ADD(sp, 4));	// 108985                  add     sp, 4 ;~ 17C5:C8FD
cs=0x17c5;eip=0x00c900; 	X(word_4f216 = ax;);	// 108986                  mov     ds:word_4F216, ax ;~ 17C5:C900
cs=0x17c5;eip=0x00c903; 	T(OR(ax, ax));	// 108987                  or      ax, ax ;~ 17C5:C903
cs=0x17c5;eip=0x00c905; 	J(JNZ(loc_32b42));	// 108988                  jnz     short loc_32B42 ;~ 17C5:C905
cs=0x17c5;eip=0x00c907; 	T(ax = 0x5C4A;);	// 108989                  mov     ax, 5C4Ah ;~ 17C5:C907
cs=0x17c5;eip=0x00c90a; 	X(PUSH(ax));	// 108990                  push    ax ;~ 17C5:C90A
cs=0x17c5;eip=0x00c90b; 	J(CALL(print_line,0));	// 108991                  call    print_line ;~ 17C5:C90B
cs=0x17c5;eip=0x00c90e; 	T(sp = bp;);	// 108993                  mov     sp, bp ;~ 17C5:C90E
cs=0x17c5;eip=0x00c910; 	X(POP(bp));	// 108994                  pop     bp ;~ 17C5:C910
cs=0x17c5;eip=0x00c911; 	J(RETN(0));	// 108995                  retn ;~ 17C5:C911
loc_32b42:
	// 6404 
cs=0x17c5;eip=0x00c912; 	X(PUSH(word_4f216));	// 108999                  push    ds:word_4F216 ;~ 17C5:C912
cs=0x17c5;eip=0x00c916; 	T(ax = 1;);	// 109000                  mov     ax, 1 ;~ 17C5:C916
cs=0x17c5;eip=0x00c919; 	X(PUSH(ax));	// 109001                  push    ax ;~ 17C5:C919
cs=0x17c5;eip=0x00c91a; 	T(ax = 2;);	// 109002                  mov     ax, 2 ;~ 17C5:C91A
cs=0x17c5;eip=0x00c91d; 	X(PUSH(ax));	// 109003                  push    ax ;~ 17C5:C91D
cs=0x17c5;eip=0x00c91e; 	T(ax = 0x6458;);	// 109004                  mov     ax, 6458h ;~ 17C5:C91E
cs=0x17c5;eip=0x00c921; 	X(PUSH(ax));	// 109005                  push    ax ;~ 17C5:C921
cs=0x17c5;eip=0x00c922; 	J(CALL(sub_3497c,0));	// 109006                  call    sub_3497C ;~ 17C5:C922
cs=0x17c5;eip=0x00c925; 	T(ADD(sp, 8));	// 109007                  add     sp, 8 ;~ 17C5:C925
cs=0x17c5;eip=0x00c928; 	X(PUSH(word_4f216));	// 109008                  push    ds:word_4F216 ;~ 17C5:C928
cs=0x17c5;eip=0x00c92c; 	T(ax = 1;);	// 109009                  mov     ax, 1 ;~ 17C5:C92C
cs=0x17c5;eip=0x00c92f; 	X(PUSH(ax));	// 109010                  push    ax ;~ 17C5:C92F
cs=0x17c5;eip=0x00c930; 	T(ax = 2;);	// 109011                  mov     ax, 2 ;~ 17C5:C930
cs=0x17c5;eip=0x00c933; 	X(PUSH(ax));	// 109012                  push    ax ;~ 17C5:C933
cs=0x17c5;eip=0x00c934; 	T(ax = 0x649A;);	// 109013                  mov     ax, 649Ah ;~ 17C5:C934
cs=0x17c5;eip=0x00c937; 	X(PUSH(ax));	// 109014                  push    ax ;~ 17C5:C937
cs=0x17c5;eip=0x00c938; 	J(CALL(sub_3497c,0));	// 109015                  call    sub_3497C ;~ 17C5:C938
cs=0x17c5;eip=0x00c93b; 	T(ADD(sp, 8));	// 109016                  add     sp, 8 ;~ 17C5:C93B
cs=0x17c5;eip=0x00c93e; 	X(PUSH(word_4f216));	// 109017                  push    ds:word_4F216 ;~ 17C5:C93E
cs=0x17c5;eip=0x00c942; 	X(PUSH(word_4ef7a));	// 109018                  push    ds:word_4EF7A ;~ 17C5:C942
cs=0x17c5;eip=0x00c946; 	T(ax = 2;);	// 109019                  mov     ax, 2 ;~ 17C5:C946
cs=0x17c5;eip=0x00c949; 	X(PUSH(ax));	// 109020                  push    ax ;~ 17C5:C949
cs=0x17c5;eip=0x00c94a; 	T(ax = 0x645A;);	// 109021                  mov     ax, 645Ah ;~ 17C5:C94A
cs=0x17c5;eip=0x00c94d; 	X(PUSH(ax));	// 109022                  push    ax ;~ 17C5:C94D
cs=0x17c5;eip=0x00c94e; 	J(CALL(sub_3497c,0));	// 109023                  call    sub_3497C ;~ 17C5:C94E
cs=0x17c5;eip=0x00c951; 	T(ADD(sp, 8));	// 109024                  add     sp, 8 ;~ 17C5:C951
cs=0x17c5;eip=0x00c954; 	X(PUSH(word_4f216));	// 109025                  push    ds:word_4F216 ;~ 17C5:C954
cs=0x17c5;eip=0x00c958; 	T(ax = 1;);	// 109026                  mov     ax, 1 ;~ 17C5:C958
cs=0x17c5;eip=0x00c95b; 	X(PUSH(ax));	// 109027                  push    ax ;~ 17C5:C95B
cs=0x17c5;eip=0x00c95c; 	T(ax = 2;);	// 109028                  mov     ax, 2 ;~ 17C5:C95C
cs=0x17c5;eip=0x00c95f; 	X(PUSH(ax));	// 109029                  push    ax ;~ 17C5:C95F
cs=0x17c5;eip=0x00c960; 	T(ax = bp-0x0A);	// 109030                  lea     ax, [bp-0Ah] ;~ 17C5:C960
cs=0x17c5;eip=0x00c963; 	X(PUSH(ax));	// 109031                  push    ax ;~ 17C5:C963
cs=0x17c5;eip=0x00c964; 	J(CALL(sub_3497c,0));	// 109032                  call    sub_3497C ;~ 17C5:C964
cs=0x17c5;eip=0x00c967; 	T(ADD(sp, 8));	// 109033                  add     sp, 8 ;~ 17C5:C967
cs=0x17c5;eip=0x00c96a; 	T(ax = bp-8);	// 109034                  lea     ax, [bp-8] ;~ 17C5:C96A
cs=0x17c5;eip=0x00c96d; 	X(PUSH(ax));	// 109035                  push    ax ;~ 17C5:C96D
cs=0x17c5;eip=0x00c96e; 	J(CALL(sub_34d4e,0));	// 109036                  call    sub_34D4E ;~ 17C5:C96E
cs=0x17c5;eip=0x00c971; 	T(ADD(sp, 2));	// 109037                  add     sp, 2 ;~ 17C5:C971
cs=0x17c5;eip=0x00c974; 	X(MOV(*(dw*)(raddr(ss,bp-0x10)), offset(seg3cd9,unk_438d4)-offset(seg38b0,unk_38b00)));	// 109038                  mov     word ptr [bp-10h], (offset unk_438D4 - offset unk_38B00) ;~ 17C5:C974
cs=0x17c5;eip=0x00c979; 	X(MOV(*(dw*)(raddr(ss,bp-0x0E)), seg_offset(seg38b0)));	// 109039                  mov     word ptr [bp-0Eh], seg seg38b0 ;~ 17C5:C979
cs=0x17c5;eip=0x00c97e; 	J(JMP(loc_32bf0));	// 109040                  jmp     short loc_32BF0 ;~ 17C5:C97E
loc_32bb0:
	// 6405 
cs=0x17c5;eip=0x00c980; 	T(MOV(ax, *(dw*)(raddr(ss,bp-0x0A))));	// 109044                  mov     ax, [bp-0Ah] ;~ 17C5:C980
cs=0x17c5;eip=0x00c983; 	T(CMP(ax, 0x800));	// 109045                  cmp     ax, 800h ;~ 17C5:C983
cs=0x17c5;eip=0x00c986; 	J(JLE(loc_32bbb));	// 109046                  jle     short loc_32BBB ;~ 17C5:C986
cs=0x17c5;eip=0x00c988; 	T(ax = 0x800;);	// 109047                  mov     ax, 800h ;~ 17C5:C988
loc_32bbb:
	// 6406 
cs=0x17c5;eip=0x00c98b; 	X(MOV(*(dw*)(raddr(ss,bp-0x0C)), ax));	// 109050                  mov     [bp-0Ch], ax ;~ 17C5:C98B
cs=0x17c5;eip=0x00c98e; 	X(PUSH(word_4f216));	// 109051                  push    ds:word_4F216 ;~ 17C5:C98E
cs=0x17c5;eip=0x00c992; 	X(PUSH(ax));	// 109052                  push    ax ;~ 17C5:C992
cs=0x17c5;eip=0x00c993; 	T(ax = 1;);	// 109053                  mov     ax, 1 ;~ 17C5:C993
cs=0x17c5;eip=0x00c996; 	X(PUSH(ax));	// 109054                  push    ax ;~ 17C5:C996
cs=0x17c5;eip=0x00c997; 	T(ax = 0x328E;);	// 109055                  mov     ax, 328Eh ;~ 17C5:C997
cs=0x17c5;eip=0x00c99a; 	X(PUSH(ax));	// 109056                  push    ax ;~ 17C5:C99A
cs=0x17c5;eip=0x00c99b; 	J(CALL(sub_3497c,0));	// 109057                  call    sub_3497C ;~ 17C5:C99B
cs=0x17c5;eip=0x00c99e; 	T(ADD(sp, 8));	// 109058                  add     sp, 8 ;~ 17C5:C99E
cs=0x17c5;eip=0x00c9a1; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0C))));	// 109059                  push    word ptr [bp-0Ch] ;~ 17C5:C9A1
cs=0x17c5;eip=0x00c9a4; 	X(PUSH(*(dw*)(raddr(ss,bp-0x10))));	// 109060                  push    word ptr [bp-10h] ;~ 17C5:C9A4
cs=0x17c5;eip=0x00c9a7; 	X(PUSH(*(dw*)(raddr(ss,bp-0x0E))));	// 109061                  push    word ptr [bp-0Eh] ;~ 17C5:C9A7
cs=0x17c5;eip=0x00c9aa; 	T(ax = 0x328E;);	// 109062                  mov     ax, 328Eh ;~ 17C5:C9AA
cs=0x17c5;eip=0x00c9ad; 	X(PUSH(ax));	// 109063                  push    ax ;~ 17C5:C9AD
cs=0x17c5;eip=0x00c9ae; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 109064                  push    word ptr [bp-2] ;~ 17C5:C9AE
cs=0x17c5;eip=0x00c9b1; 	J(CALL(sub_34d30,0));	// 109065                  call    sub_34D30 ;~ 17C5:C9B1
cs=0x17c5;eip=0x00c9b4; 	T(ADD(sp, 0x0A));	// 109066                  add     sp, 0Ah ;~ 17C5:C9B4
cs=0x17c5;eip=0x00c9b7; 	X(SUB(*(dw*)(raddr(ss,bp-0x0A)), 0x800));	// 109067                  sub     word ptr [bp-0Ah], 800h ;~ 17C5:C9B7
cs=0x17c5;eip=0x00c9bc; 	X(ADD(*(raddr(ss,bp-0x0F)), 8));	// 109068                  add     byte ptr [bp-0Fh], 8 ;~ 17C5:C9BC
loc_32bf0:
	// 6407 
cs=0x17c5;eip=0x00c9c0; 	T(CMP(*(dw*)(raddr(ss,bp-0x0A)), 0));	// 109071                  cmp     word ptr [bp-0Ah], 0 ;~ 17C5:C9C0
cs=0x17c5;eip=0x00c9c4; 	J(JG(loc_32bb0));	// 109072                  jg      short loc_32BB0 ;~ 17C5:C9C4
cs=0x17c5;eip=0x00c9c6; 	X(PUSH(word_4f216));	// 109073                  push    ds:word_4F216 ;~ 17C5:C9C6
cs=0x17c5;eip=0x00c9ca; 	J(CALL(sub_3489a,0));	// 109074                  call    sub_3489A ;~ 17C5:C9CA
cs=0x17c5;eip=0x00c9cd; 	T(sp = bp;);	// 109075                  mov     sp, bp ;~ 17C5:C9CD
cs=0x17c5;eip=0x00c9cf; 	X(POP(bp));	// 109076                  pop     bp ;~ 17C5:C9CF
cs=0x17c5;eip=0x00c9d0; 	J(RETN(0));	// 109077                  retn ;~ 17C5:C9D0

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32b0e: 	goto loc_32b0e;
        case m2c::kloc_32b42: 	goto loc_32b42;
        case m2c::kloc_32bb0: 	goto loc_32bb0;
        case m2c::kloc_32bbb: 	goto loc_32bbb;
        case m2c::kloc_32bf0: 	goto loc_32bf0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32c02(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32c02:
    _begin:
#undef var_10
#define var_10 -0x10
	// 109088 var_10          = word ptr -10h ;~ 17C5:C9D2
#undef var_e
#define var_e -0x0E
	// 109089 var_E           = word ptr -0Eh ;~ 17C5:C9D2
#undef var_c
#define var_c -0x0C
	// 109090 var_C           = word ptr -0Ch ;~ 17C5:C9D2
#undef var_a
#define var_a -0x0A
	// 109091 var_A           = word ptr -0Ah ;~ 17C5:C9D2
#undef var_8
#define var_8 -8
	// 109092 var_8           = word ptr -8 ;~ 17C5:C9D2
#undef var_6
#define var_6 -6
	// 109093 var_6           = word ptr -6 ;~ 17C5:C9D2
#undef var_4
#define var_4 -4
	// 109094 var_4           = word ptr -4 ;~ 17C5:C9D2
#undef var_2
#define var_2 -2
	// 109095 var_2           = word ptr -2 ;~ 17C5:C9D2
#undef arg_0
#define arg_0 4
	// 109096 arg_0           = word ptr  4 ;~ 17C5:C9D2
#undef arg_2
#define arg_2 6
	// 109097 arg_2           = word ptr  6 ;~ 17C5:C9D2
#undef arg_4
#define arg_4 8
	// 109098 arg_4           = word ptr  8 ;~ 17C5:C9D2
#undef arg_6
#define arg_6 0x0A
	// 109099 arg_6           = word ptr  0Ah ;~ 17C5:C9D2
#undef arg_8
#define arg_8 0x0C
	// 109100 arg_8           = word ptr  0Ch ;~ 17C5:C9D2
#undef arg_a
#define arg_a 0x0E
	// 109101 arg_A           = word ptr  0Eh ;~ 17C5:C9D2
#undef arg_c
#define arg_c 0x10
	// 109102 arg_C           = word ptr  10h ;~ 17C5:C9D2
#undef arg_e
#define arg_e 0x12
	// 109103 arg_E           = word ptr  12h ;~ 17C5:C9D2
#undef arg_10
#define arg_10 0x14
	// 109104 arg_10          = word ptr  14h ;~ 17C5:C9D2
#undef arg_12
#define arg_12 0x16
	// 109105 arg_12          = word ptr  16h ;~ 17C5:C9D2
cs=0x17c5;eip=0x00c9d2; 	X(PUSH(bp));	// 109107                  push    bp ;~ 17C5:C9D2
cs=0x17c5;eip=0x00c9d3; 	T(bp = sp;);	// 109108                  mov     bp, sp ;~ 17C5:C9D3
cs=0x17c5;eip=0x00c9d5; 	T(SUB(sp, 0x10));	// 109109                  sub     sp, 10h ;~ 17C5:C9D5
cs=0x17c5;eip=0x00c9d8; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 109110                  push    [bp+arg_0] ;~ 17C5:C9D8
cs=0x17c5;eip=0x00c9db; 	J(CALL(sub_33162,0));	// 109111                  call    sub_33162 ;~ 17C5:C9DB
cs=0x17c5;eip=0x00c9de; 	T(ADD(sp, 2));	// 109112                  add     sp, 2 ;~ 17C5:C9DE
cs=0x17c5;eip=0x00c9e1; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 109113                  mov     [bp+var_4], ax ;~ 17C5:C9E1
cs=0x17c5;eip=0x00c9e4; 	T(CMP(byte_527d0, 0));	// 109114                  cmp     ds:byte_527D0, 0 ;~ 17C5:C9E4
cs=0x17c5;eip=0x00c9e9; 	J(JNZ(loc_32c20));	// 109115                  jnz     short loc_32C20 ;~ 17C5:C9E9
cs=0x17c5;eip=0x00c9eb; 	T(ax = word_4e564;);	// 109116                  mov     ax, ds:word_4E564 ;~ 17C5:C9EB
cs=0x17c5;eip=0x00c9ee; 	J(JMP(loc_32c23));	// 109117                  jmp     short loc_32C23 ;~ 17C5:C9EE
loc_32c20:
	// 6408 
cs=0x17c5;eip=0x00c9f0; 	T(ax = word_4e57c;);	// 109121                  mov     ax, ds:word_4E57C ;~ 17C5:C9F0
loc_32c23:
	// 6409 
cs=0x17c5;eip=0x00c9f3; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 109124                  mov     [bp+var_2], ax ;~ 17C5:C9F3
cs=0x17c5;eip=0x00c9f6; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109125                  mov     ax, [bp+arg_2] ;~ 17C5:C9F6
cs=0x17c5;eip=0x00c9f9; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 109126                  mov     dx, [bp+arg_4] ;~ 17C5:C9F9
cs=0x17c5;eip=0x00c9fc; 	T(SUB(ax, word_51a0a));	// 109127                  sub     ax, ds:word_51A0A ;~ 17C5:C9FC
cs=0x17c5;eip=0x00ca00; 	T(SBB(dx, word_51a0c));	// 109128                  sbb     dx, ds:word_51A0C ;~ 17C5:CA00
cs=0x17c5;eip=0x00ca04; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 109129                  mov     [bp+var_8], ax ;~ 17C5:CA04
cs=0x17c5;eip=0x00ca07; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), dx));	// 109130                  mov     [bp+var_6], dx ;~ 17C5:CA07
cs=0x17c5;eip=0x00ca0a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 109131                  mov     ax, [bp+arg_6] ;~ 17C5:CA0A
cs=0x17c5;eip=0x00ca0d; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_8))));	// 109132                  mov     dx, [bp+arg_8] ;~ 17C5:CA0D
cs=0x17c5;eip=0x00ca10; 	T(ADD(ax, word_51a28));	// 109133                  add     ax, ds:word_51A28 ;~ 17C5:CA10
cs=0x17c5;eip=0x00ca14; 	T(ADC(dx, word_51a2a));	// 109134                  adc     dx, ds:word_51A2A ;~ 17C5:CA14
cs=0x17c5;eip=0x00ca18; 	T(SUB(ax, 0));	// 109135                  sub     ax, 0 ;~ 17C5:CA18
cs=0x17c5;eip=0x00ca1b; 	T(SBB(dx, 0x100));	// 109136                  sbb     dx, 100h ;~ 17C5:CA1B
cs=0x17c5;eip=0x00ca1f; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 109137                  mov     [bp+var_C], ax ;~ 17C5:CA1F
cs=0x17c5;eip=0x00ca22; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), dx));	// 109138                  mov     [bp+var_A], dx ;~ 17C5:CA22
cs=0x17c5;eip=0x00ca25; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_a))));	// 109139                  mov     ax, [bp+arg_A] ;~ 17C5:CA25
cs=0x17c5;eip=0x00ca28; 	T(SUB(ax, word_4e2fe));	// 109140                  sub     ax, ds:word_4E2FE ;~ 17C5:CA28
cs=0x17c5;eip=0x00ca2c; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 109141                  mov     [bp+var_E], ax ;~ 17C5:CA2C
cs=0x17c5;eip=0x00ca2f; 	T(TEST(*(db*)(&word_520c0), 0x80));	// 109142                  test    byte ptr ds:word_520C0, 80h ;~ 17C5:CA2F
cs=0x17c5;eip=0x00ca34; 	J(JZ(loc_32c9a));	// 109143                  jz      short loc_32C9A ;~ 17C5:CA34
cs=0x17c5;eip=0x00ca36; 	T(ax = word_51a0a;);	// 109144                  mov     ax, ds:word_51A0A ;~ 17C5:CA36
cs=0x17c5;eip=0x00ca39; 	T(dx = word_51a0c;);	// 109145                  mov     dx, ds:word_51A0C ;~ 17C5:CA39
cs=0x17c5;eip=0x00ca3d; 	T(SUB(ax, word_5142e));	// 109146                  sub     ax, ds:word_5142E ;~ 17C5:CA3D
cs=0x17c5;eip=0x00ca41; 	T(SBB(dx, word_51430));	// 109147                  sbb     dx, ds:word_51430 ;~ 17C5:CA41
cs=0x17c5;eip=0x00ca45; 	X(ADD(*(dw*)(raddr(ss,bp+var_8)), ax));	// 109148                  add     [bp+var_8], ax ;~ 17C5:CA45
cs=0x17c5;eip=0x00ca48; 	X(ADC(*(dw*)(raddr(ss,bp+var_6)), dx));	// 109149                  adc     [bp+var_6], dx ;~ 17C5:CA48
cs=0x17c5;eip=0x00ca4b; 	T(ax = word_51704;);	// 109150                  mov     ax, ds:word_51704 ;~ 17C5:CA4B
cs=0x17c5;eip=0x00ca4e; 	T(dx = word_51706;);	// 109151                  mov     dx, ds:word_51706 ;~ 17C5:CA4E
cs=0x17c5;eip=0x00ca52; 	T(SUB(ax, word_51a28));	// 109152                  sub     ax, ds:word_51A28 ;~ 17C5:CA52
cs=0x17c5;eip=0x00ca56; 	T(SBB(dx, word_51a2a));	// 109153                  sbb     dx, ds:word_51A2A ;~ 17C5:CA56
cs=0x17c5;eip=0x00ca5a; 	X(ADD(*(dw*)(raddr(ss,bp+var_c)), ax));	// 109154                  add     [bp+var_C], ax ;~ 17C5:CA5A
cs=0x17c5;eip=0x00ca5d; 	X(ADC(*(dw*)(raddr(ss,bp+var_a)), dx));	// 109155                  adc     [bp+var_A], dx ;~ 17C5:CA5D
cs=0x17c5;eip=0x00ca60; 	T(ax = word_4e2fe;);	// 109156                  mov     ax, ds:word_4E2FE ;~ 17C5:CA60
cs=0x17c5;eip=0x00ca63; 	T(SUB(ax, word_5170e));	// 109157                  sub     ax, ds:word_5170E ;~ 17C5:CA63
cs=0x17c5;eip=0x00ca67; 	X(ADD(*(dw*)(raddr(ss,bp+var_e)), ax));	// 109158                  add     [bp+var_E], ax ;~ 17C5:CA67
loc_32c9a:
	// 6410 
cs=0x17c5;eip=0x00ca6a; 	T(CMP(byte_4de54, 0));	// 109161                  cmp     ds:byte_4DE54, 0 ;~ 17C5:CA6A
cs=0x17c5;eip=0x00ca6f; 	J(JZ(loc_32caa));	// 109162                  jz      short loc_32CAA ;~ 17C5:CA6F
cs=0x17c5;eip=0x00ca71; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_12))));	// 109163                  mov     ax, [bp+arg_12] ;~ 17C5:CA71
cs=0x17c5;eip=0x00ca74; 	T(SUB(ax, 2));	// 109164                  sub     ax, 2 ;~ 17C5:CA74
cs=0x17c5;eip=0x00ca77; 	J(JMP(loc_32cb0));	// 109165                  jmp     short loc_32CB0 ;~ 17C5:CA77
loc_32caa:
	// 6411 
cs=0x17c5;eip=0x00ca7a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_12))));	// 109170                  mov     ax, [bp+arg_12] ;~ 17C5:CA7A
cs=0x17c5;eip=0x00ca7d; 	T(SUB(ax, 3));	// 109171                  sub     ax, 3 ;~ 17C5:CA7D
loc_32cb0:
	// 6412 
cs=0x17c5;eip=0x00ca80; 	X(MOV(*(dw*)(raddr(ss,bp+arg_12)), ax));	// 109174                  mov     [bp+arg_12], ax ;~ 17C5:CA80
cs=0x17c5;eip=0x00ca83; 	T(OR(ax, ax));	// 109175                  or      ax, ax ;~ 17C5:CA83
cs=0x17c5;eip=0x00ca85; 	J(JLE(loc_32ccf));	// 109176                  jle     short loc_32CCF ;~ 17C5:CA85
cs=0x17c5;eip=0x00ca87; 	X(PUSH(ax));	// 109177                  push    ax ;~ 17C5:CA87
cs=0x17c5;eip=0x00ca88; 	T(ax = bp+var_8);	// 109178                  lea     ax, [bp+var_8] ;~ 17C5:CA88
cs=0x17c5;eip=0x00ca8b; 	X(PUSH(ax));	// 109179                  push    ax ;~ 17C5:CA8B
cs=0x17c5;eip=0x00ca8c; 	J(CALL(sub_34f14,0));	// 109180                  call    sub_34F14 ;~ 17C5:CA8C
cs=0x17c5;eip=0x00ca8f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_12))));	// 109181                  push    [bp+arg_12] ;~ 17C5:CA8F
cs=0x17c5;eip=0x00ca92; 	T(ax = bp+var_c);	// 109182                  lea     ax, [bp+var_C] ;~ 17C5:CA92
cs=0x17c5;eip=0x00ca95; 	X(PUSH(ax));	// 109183                  push    ax ;~ 17C5:CA95
cs=0x17c5;eip=0x00ca96; 	J(CALL(sub_34f14,0));	// 109184                  call    sub_34F14 ;~ 17C5:CA96
cs=0x17c5;eip=0x00ca99; 	T(MOV(cl, *(raddr(ss,bp+arg_12))));	// 109185                  mov     cl, byte ptr [bp+arg_12] ;~ 17C5:CA99
cs=0x17c5;eip=0x00ca9c; 	X(SHL(*(dw*)(raddr(ss,bp+var_e)), cl));	// 109186                  shl     [bp+var_E], cl ;~ 17C5:CA9C
loc_32ccf:
	// 6413 
cs=0x17c5;eip=0x00ca9f; 	T(CMP(*(dw*)(raddr(ss,bp+arg_12)), 0));	// 109189                  cmp     [bp+arg_12], 0 ;~ 17C5:CA9F
cs=0x17c5;eip=0x00caa3; 	J(JGE(loc_32cf7));	// 109190                  jge     short loc_32CF7 ;~ 17C5:CAA3
cs=0x17c5;eip=0x00caa5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_12))));	// 109191                  mov     ax, [bp+arg_12] ;~ 17C5:CAA5
cs=0x17c5;eip=0x00caa8; 	T(NEG(ax));	// 109192                  neg     ax ;~ 17C5:CAA8
cs=0x17c5;eip=0x00caaa; 	X(MOV(*(raddr(ss,bp+var_10)), al));	// 109193                  mov     byte ptr [bp+var_10], al ;~ 17C5:CAAA
cs=0x17c5;eip=0x00caad; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 109194                  push    [bp+var_10] ;~ 17C5:CAAD
cs=0x17c5;eip=0x00cab0; 	T(ax = bp+var_8);	// 109195                  lea     ax, [bp+var_8] ;~ 17C5:CAB0
cs=0x17c5;eip=0x00cab3; 	X(PUSH(ax));	// 109196                  push    ax ;~ 17C5:CAB3
cs=0x17c5;eip=0x00cab4; 	J(CALL(sub_34f34,0));	// 109197                  call    sub_34F34 ;~ 17C5:CAB4
cs=0x17c5;eip=0x00cab7; 	X(PUSH(*(dw*)(raddr(ss,bp+var_10))));	// 109198                  push    [bp+var_10] ;~ 17C5:CAB7
cs=0x17c5;eip=0x00caba; 	T(ax = bp+var_c);	// 109199                  lea     ax, [bp+var_C] ;~ 17C5:CABA
cs=0x17c5;eip=0x00cabd; 	X(PUSH(ax));	// 109200                  push    ax ;~ 17C5:CABD
cs=0x17c5;eip=0x00cabe; 	J(CALL(sub_34f34,0));	// 109201                  call    sub_34F34 ;~ 17C5:CABE
cs=0x17c5;eip=0x00cac1; 	T(MOV(cl, *(raddr(ss,bp+var_10))));	// 109202                  mov     cl, byte ptr [bp+var_10] ;~ 17C5:CAC1
cs=0x17c5;eip=0x00cac4; 	X(SAR(*(dw*)(raddr(ss,bp+var_e)), cl));	// 109203                  sar     [bp+var_E], cl ;~ 17C5:CAC4
loc_32cf7:
	// 6414 
cs=0x17c5;eip=0x00cac7; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 109206                  push    [bp+var_6] ;~ 17C5:CAC7
cs=0x17c5;eip=0x00caca; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 109207                  push    [bp+var_8] ;~ 17C5:CACA
cs=0x17c5;eip=0x00cacd; 	J(CALL(sub_34dd6,0));	// 109208                  call    sub_34DD6 ;~ 17C5:CACD
cs=0x17c5;eip=0x00cad0; 	T(ADD(sp, 4));	// 109209                  add     sp, 4 ;~ 17C5:CAD0
cs=0x17c5;eip=0x00cad3; 	T(CWD);	// 109210                  cwd ;~ 17C5:CAD3
cs=0x17c5;eip=0x00cad4; 	T(OR(dx, dx));	// 109211                  or      dx, dx ;~ 17C5:CAD4
cs=0x17c5;eip=0x00cad6; 	J(JG(loc_32d6e));	// 109212                  jg      short loc_32D6E ;~ 17C5:CAD6
cs=0x17c5;eip=0x00cad8; 	J(JL(loc_32d0f));	// 109213                  jl      short loc_32D0F ;~ 17C5:CAD8
cs=0x17c5;eip=0x00cada; 	T(CMP(ax, 0x7FFF));	// 109214                  cmp     ax, 7FFFh ;~ 17C5:CADA
cs=0x17c5;eip=0x00cadd; 	J(JNC(loc_32d6e));	// 109215                  jnb     short loc_32D6E ;~ 17C5:CADD
loc_32d0f:
	// 6415 
cs=0x17c5;eip=0x00cadf; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 109218                  push    [bp+var_A] ;~ 17C5:CADF
cs=0x17c5;eip=0x00cae2; 	X(PUSH(*(dw*)(raddr(ss,bp+var_c))));	// 109219                  push    [bp+var_C] ;~ 17C5:CAE2
cs=0x17c5;eip=0x00cae5; 	J(CALL(sub_34dd6,0));	// 109220                  call    sub_34DD6 ;~ 17C5:CAE5
cs=0x17c5;eip=0x00cae8; 	T(ADD(sp, 4));	// 109221                  add     sp, 4 ;~ 17C5:CAE8
cs=0x17c5;eip=0x00caeb; 	T(CWD);	// 109222                  cwd ;~ 17C5:CAEB
cs=0x17c5;eip=0x00caec; 	T(OR(dx, dx));	// 109223                  or      dx, dx ;~ 17C5:CAEC
cs=0x17c5;eip=0x00caee; 	J(JG(loc_32d6e));	// 109224                  jg      short loc_32D6E ;~ 17C5:CAEE
cs=0x17c5;eip=0x00caf0; 	J(JL(loc_32d27));	// 109225                  jl      short loc_32D27 ;~ 17C5:CAF0
cs=0x17c5;eip=0x00caf2; 	T(CMP(ax, 0x7FFF));	// 109226                  cmp     ax, 7FFFh ;~ 17C5:CAF2
cs=0x17c5;eip=0x00caf5; 	J(JNC(loc_32d6e));	// 109227                  jnb     short loc_32D6E ;~ 17C5:CAF5
loc_32d27:
	// 6416 
cs=0x17c5;eip=0x00caf7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 109230                  mov     ax, [bp+var_E] ;~ 17C5:CAF7
cs=0x17c5;eip=0x00cafa; 	T(NEG(ax));	// 109231                  neg     ax ;~ 17C5:CAFA
cs=0x17c5;eip=0x00cafc; 	X(PUSH(ax));	// 109232                  push    ax ;~ 17C5:CAFC
cs=0x17c5;eip=0x00cafd; 	T(SUB(ax, ax));	// 109233                  sub     ax, ax ;~ 17C5:CAFD
cs=0x17c5;eip=0x00caff; 	X(PUSH(ax));	// 109234                  push    ax ;~ 17C5:CAFF
cs=0x17c5;eip=0x00cb00; 	X(PUSH(ax));	// 109235                  push    ax ;~ 17C5:CB00
cs=0x17c5;eip=0x00cb01; 	J(CALL(sub_29cc0,0));	// 109236                  call    sub_29CC0 ;~ 17C5:CB01
cs=0x17c5;eip=0x00cb04; 	T(ADD(sp, 6));	// 109237                  add     sp, 6 ;~ 17C5:CB04
cs=0x17c5;eip=0x00cb07; 	X(word_5239c = 1;);	// 109238                  mov     ds:word_5239C, 1 ;~ 17C5:CB07
cs=0x17c5;eip=0x00cb0d; 	T(CMP(*(dw*)(raddr(ss,bp+arg_a)), 1));	// 109239                  cmp     [bp+arg_A], 1 ;~ 17C5:CB0D
cs=0x17c5;eip=0x00cb11; 	T(SBB(ax, ax));	// 109240                  sbb     ax, ax ;~ 17C5:CB11
cs=0x17c5;eip=0x00cb13; 	T(INC(ax));	// 109241                  inc     ax ;~ 17C5:CB13
cs=0x17c5;eip=0x00cb14; 	X(PUSH(ax));	// 109242                  push    ax ;~ 17C5:CB14
cs=0x17c5;eip=0x00cb15; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_c))));	// 109243                  mov     ax, [bp+var_C] ;~ 17C5:CB15
cs=0x17c5;eip=0x00cb18; 	T(NEG(ax));	// 109244                  neg     ax ;~ 17C5:CB18
cs=0x17c5;eip=0x00cb1a; 	X(PUSH(ax));	// 109245                  push    ax ;~ 17C5:CB1A
cs=0x17c5;eip=0x00cb1b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 109246                  push    [bp+var_8] ;~ 17C5:CB1B
cs=0x17c5;eip=0x00cb1e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_10))));	// 109247                  push    [bp+arg_10] ;~ 17C5:CB1E
cs=0x17c5;eip=0x00cb21; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_e))));	// 109248                  push    [bp+arg_E] ;~ 17C5:CB21
cs=0x17c5;eip=0x00cb24; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_c))));	// 109249                  mov     ax, [bp+arg_C] ;~ 17C5:CB24
cs=0x17c5;eip=0x00cb27; 	T(NEG(ax));	// 109250                  neg     ax ;~ 17C5:CB27
cs=0x17c5;eip=0x00cb29; 	X(PUSH(ax));	// 109251                  push    ax ;~ 17C5:CB29
cs=0x17c5;eip=0x00cb2a; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_4))));	// 109252                  mov     bx, [bp+var_4] ;~ 17C5:CB2A
cs=0x17c5;eip=0x00cb2d; 	T(ax = bx+0);	// 109253                  lea     ax, [bx+0] ;~ 17C5:CB2D
cs=0x17c5;eip=0x00cb31; 	T(dx = seg_offset(seg38b0););	// 109254                  mov     dx, seg seg38b0 ;~ 17C5:CB31
cs=0x17c5;eip=0x00cb34; 	X(PUSH(dx));	// 109255                  push    dx ;~ 17C5:CB34
cs=0x17c5;eip=0x00cb35; 	X(PUSH(ax));	// 109256                  push    ax ;~ 17C5:CB35
cs=0x17c5;eip=0x00cb36; 	J(CALLF(sub_36334,0));	// 109257                  call    sub_36334 ;~ 17C5:CB36
cs=0x17c5;eip=0x00cb3b; 	T(ADD(sp, 0x10));	// 109258                  add     sp, 10h ;~ 17C5:CB3B
loc_32d6e:
	// 6417 
cs=0x17c5;eip=0x00cb3e; 	T(sp = bp;);	// 109262                  mov     sp, bp ;~ 17C5:CB3E
cs=0x17c5;eip=0x00cb40; 	X(POP(bp));	// 109263                  pop     bp ;~ 17C5:CB40
cs=0x17c5;eip=0x00cb41; 	J(RETN(0));	// 109264                  retn ;~ 17C5:CB41

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32c20: 	goto loc_32c20;
        case m2c::kloc_32c23: 	goto loc_32c23;
        case m2c::kloc_32c9a: 	goto loc_32c9a;
        case m2c::kloc_32caa: 	goto loc_32caa;
        case m2c::kloc_32cb0: 	goto loc_32cb0;
        case m2c::kloc_32ccf: 	goto loc_32ccf;
        case m2c::kloc_32cf7: 	goto loc_32cf7;
        case m2c::kloc_32d0f: 	goto loc_32d0f;
        case m2c::kloc_32d27: 	goto loc_32d27;
        case m2c::kloc_32d6e: 	goto loc_32d6e;
        case m2c::ksub_32c02: 	goto sub_32c02;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_32d72(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_32d72:
    _begin:
#undef var_1e
#define var_1e -0x1E
	// 109275 var_1E          = byte ptr -1Eh ;~ 17C5:CB42
#undef var_1c
#define var_1c -0x1C
	// 109276 var_1C          = word ptr -1Ch ;~ 17C5:CB42
#undef var_1a
#define var_1a -0x1A
	// 109277 var_1A          = word ptr -1Ah ;~ 17C5:CB42
#undef var_18
#define var_18 -0x18
	// 109278 var_18          = word ptr -18h ;~ 17C5:CB42
#undef var_16
#define var_16 -0x16
	// 109279 var_16          = word ptr -16h ;~ 17C5:CB42
#undef var_14
#define var_14 -0x14
	// 109280 var_14          = word ptr -14h ;~ 17C5:CB42
#undef var_12
#define var_12 -0x12
	// 109281 var_12          = word ptr -12h ;~ 17C5:CB42
#undef var_10
#define var_10 -0x10
	// 109282 var_10          = word ptr -10h ;~ 17C5:CB42
#undef var_e
#define var_e -0x0E
	// 109283 var_E           = word ptr -0Eh ;~ 17C5:CB42
#undef var_c
#define var_c -0x0C
	// 109284 var_C           = word ptr -0Ch ;~ 17C5:CB42
#undef var_a
#define var_a -0x0A
	// 109285 var_A           = word ptr -0Ah ;~ 17C5:CB42
#undef var_8
#define var_8 -8
	// 109286 var_8           = word ptr -8 ;~ 17C5:CB42
#undef var_6
#define var_6 -6
	// 109287 var_6           = word ptr -6 ;~ 17C5:CB42
#undef var_4
#define var_4 -4
	// 109288 var_4           = word ptr -4 ;~ 17C5:CB42
#undef arg_0
#define arg_0 4
	// 109289 arg_0           = word ptr  4 ;~ 17C5:CB42
#undef arg_2
#define arg_2 6
	// 109290 arg_2           = word ptr  6 ;~ 17C5:CB42
#undef arg_4
#define arg_4 8
	// 109291 arg_4           = word ptr  8 ;~ 17C5:CB42
#undef arg_6
#define arg_6 0x0A
	// 109292 arg_6           = word ptr  0Ah ;~ 17C5:CB42
#undef arg_8
#define arg_8 0x0C
	// 109293 arg_8           = word ptr  0Ch ;~ 17C5:CB42
#undef arg_a
#define arg_a 0x0E
	// 109294 arg_A           = word ptr  0Eh ;~ 17C5:CB42
#undef arg_c
#define arg_c 0x10
	// 109295 arg_C           = word ptr  10h ;~ 17C5:CB42
#undef arg_e
#define arg_e 0x12
	// 109296 arg_E           = word ptr  12h ;~ 17C5:CB42
#undef arg_10
#define arg_10 0x14
	// 109297 arg_10          = word ptr  14h ;~ 17C5:CB42
cs=0x17c5;eip=0x00cb42; 	X(PUSH(bp));	// 109299                  push    bp ;~ 17C5:CB42
cs=0x17c5;eip=0x00cb43; 	T(bp = sp;);	// 109300                  mov     bp, sp ;~ 17C5:CB43
cs=0x17c5;eip=0x00cb45; 	T(SUB(sp, 0x1E));	// 109301                  sub     sp, 1Eh ;~ 17C5:CB45
cs=0x17c5;eip=0x00cb48; 	X(PUSH(si));	// 109302                  push    si ;~ 17C5:CB48
cs=0x17c5;eip=0x00cb49; 	X(word_4f632 = 1;);	// 109303                  mov     ds:word_4F632, 1 ;~ 17C5:CB49
cs=0x17c5;eip=0x00cb4f; 	T(CMP(*(dw*)(raddr(ss,bp+arg_e)), 1));	// 109304                  cmp     [bp+arg_E], 1 ;~ 17C5:CB4F
cs=0x17c5;eip=0x00cb53; 	J(JNZ(loc_32d9d));	// 109305                  jnz     short loc_32D9D ;~ 17C5:CB53
cs=0x17c5;eip=0x00cb55; 	T(CMP(word_4f20c, 0));	// 109306                  cmp     ds:word_4F20C, 0 ;~ 17C5:CB55
cs=0x17c5;eip=0x00cb5a; 	J(JNZ(loc_32d9d));	// 109307                  jnz     short loc_32D9D ;~ 17C5:CB5A
cs=0x17c5;eip=0x00cb5c; 	T(CMP(*(db*)(&word_48b66), 0));	// 109308                  cmp     byte ptr word_48B66, 0 ;~ 17C5:CB5C
cs=0x17c5;eip=0x00cb61; 	J(JZ(loc_32d9d));	// 109309                  jz      short loc_32D9D ;~ 17C5:CB61
cs=0x17c5;eip=0x00cb63; 	T(TEST(*(db*)(&word_49918), 3));	// 109310                  test    byte ptr word_49918, 3 ;~ 17C5:CB63
cs=0x17c5;eip=0x00cb68; 	J(JZ(loc_32d9d));	// 109311                  jz      short loc_32D9D ;~ 17C5:CB68
cs=0x17c5;eip=0x00cb6a; 	J(JMP(loc_3315c));	// 109312                  jmp     loc_3315C ;~ 17C5:CB6A
loc_32d9d:
	// 6418 
cs=0x17c5;eip=0x00cb6d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 109317                  push    [bp+arg_0] ;~ 17C5:CB6D
cs=0x17c5;eip=0x00cb70; 	J(CALL(sub_33162,0));	// 109318                  call    sub_33162 ;~ 17C5:CB70
cs=0x17c5;eip=0x00cb73; 	T(ADD(sp, 2));	// 109319                  add     sp, 2 ;~ 17C5:CB73
cs=0x17c5;eip=0x00cb76; 	X(MOV(*(dw*)(raddr(ss,bp+var_10)), ax));	// 109320                  mov     [bp+var_10], ax ;~ 17C5:CB76
cs=0x17c5;eip=0x00cb79; 	T(CMP(byte_527d0, 0));	// 109321                  cmp     ds:byte_527D0, 0 ;~ 17C5:CB79
cs=0x17c5;eip=0x00cb7e; 	J(JNZ(loc_32dba));	// 109322                  jnz     short loc_32DBA ;~ 17C5:CB7E
cs=0x17c5;eip=0x00cb80; 	T(bx = word_4e5dc;);	// 109323                  mov     bx, ds:word_4E5DC ;~ 17C5:CB80
cs=0x17c5;eip=0x00cb84; 	X(MOV(*(dw*)(raddr(ds,bx)), 0));	// 109324                  mov     word ptr [bx], 0 ;~ 17C5:CB84
cs=0x17c5;eip=0x00cb88; 	J(JMP(loc_32dc2));	// 109325                  jmp     short loc_32DC2 ;~ 17C5:CB88
loc_32dba:
	// 6419 
cs=0x17c5;eip=0x00cb8a; 	T(bx = word_4e5dc;);	// 109329                  mov     bx, ds:word_4E5DC ;~ 17C5:CB8A
cs=0x17c5;eip=0x00cb8e; 	X(MOV(*(dw*)(raddr(ds,bx)), 1));	// 109330                  mov     word ptr [bx], 1 ;~ 17C5:CB8E
loc_32dc2:
	// 6420 
cs=0x17c5;eip=0x00cb92; 	T(CMP(*(dw*)(raddr(ss,bp+arg_e)), 2));	// 109333                  cmp     [bp+arg_E], 2 ;~ 17C5:CB92
cs=0x17c5;eip=0x00cb96; 	J(JL(loc_32dcb));	// 109334                  jl      short loc_32DCB ;~ 17C5:CB96
cs=0x17c5;eip=0x00cb98; 	J(JMP(loc_32f78));	// 109335                  jmp     loc_32F78 ;~ 17C5:CB98
loc_32dcb:
	// 6421 
cs=0x17c5;eip=0x00cb9b; 	X(word_4ef86 = 0;);	// 109339                  mov     ds:word_4EF86, 0 ;~ 17C5:CB9B
cs=0x17c5;eip=0x00cba1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109340                  mov     ax, [bp+arg_2] ;~ 17C5:CBA1
cs=0x17c5;eip=0x00cba4; 	T(SUB(ax, word_520f0));	// 109341                  sub     ax, ds:word_520F0 ;~ 17C5:CBA4
cs=0x17c5;eip=0x00cba8; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 109342                  mov     [bp+var_18], ax ;~ 17C5:CBA8
cs=0x17c5;eip=0x00cbab; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 109343                  mov     ax, [bp+arg_4] ;~ 17C5:CBAB
cs=0x17c5;eip=0x00cbae; 	T(SUB(ax, word_52100));	// 109344                  sub     ax, ds:word_52100 ;~ 17C5:CBAE
cs=0x17c5;eip=0x00cbb2; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 109345                  mov     [bp+var_1A], ax ;~ 17C5:CBB2
cs=0x17c5;eip=0x00cbb5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 109346                  mov     ax, [bp+arg_6] ;~ 17C5:CBB5
cs=0x17c5;eip=0x00cbb8; 	T(SUB(ax, word_4e2fe));	// 109347                  sub     ax, ds:word_4E2FE ;~ 17C5:CBB8
cs=0x17c5;eip=0x00cbbc; 	T(cl = 5;);	// 109348                  mov     cl, 5 ;~ 17C5:CBBC
cs=0x17c5;eip=0x00cbbe; 	T(SAR(ax, cl));	// 109349                  sar     ax, cl ;~ 17C5:CBBE
cs=0x17c5;eip=0x00cbc0; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 109350                  mov     [bp+var_1C], ax ;~ 17C5:CBC0
cs=0x17c5;eip=0x00cbc3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1a))));	// 109351                  mov     ax, [bp+var_1A] ;~ 17C5:CBC3
cs=0x17c5;eip=0x00cbc6; 	T(NEG(ax));	// 109352                  neg     ax ;~ 17C5:CBC6
cs=0x17c5;eip=0x00cbc8; 	X(PUSH(ax));	// 109353                  push    ax ;~ 17C5:CBC8
cs=0x17c5;eip=0x00cbc9; 	X(PUSH(*(dw*)(raddr(ss,bp+var_18))));	// 109354                  push    [bp+var_18] ;~ 17C5:CBC9
cs=0x17c5;eip=0x00cbcc; 	J(CALL(sub_33238,0));	// 109355                  call    sub_33238 ;~ 17C5:CBCC
cs=0x17c5;eip=0x00cbcf; 	T(ADD(sp, 4));	// 109356                  add     sp, 4 ;~ 17C5:CBCF
cs=0x17c5;eip=0x00cbd2; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 109357                  mov     [bp+var_6], ax ;~ 17C5:CBD2
cs=0x17c5;eip=0x00cbd5; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1a))));	// 109358                  push    [bp+var_1A] ;~ 17C5:CBD5
cs=0x17c5;eip=0x00cbd8; 	X(PUSH(*(dw*)(raddr(ss,bp+var_18))));	// 109359                  push    [bp+var_18] ;~ 17C5:CBD8
cs=0x17c5;eip=0x00cbdb; 	J(CALL(sub_331d6,0));	// 109360                  call    sub_331D6 ;~ 17C5:CBDB
cs=0x17c5;eip=0x00cbde; 	T(ADD(sp, 4));	// 109361                  add     sp, 4 ;~ 17C5:CBDE
cs=0x17c5;eip=0x00cbe1; 	X(PUSH(ax));	// 109362                  push    ax ;~ 17C5:CBE1
cs=0x17c5;eip=0x00cbe2; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 109363                  push    [bp+var_1C] ;~ 17C5:CBE2
cs=0x17c5;eip=0x00cbe5; 	J(CALL(sub_33238,0));	// 109364                  call    sub_33238 ;~ 17C5:CBE5
cs=0x17c5;eip=0x00cbe8; 	T(ADD(sp, 4));	// 109365                  add     sp, 4 ;~ 17C5:CBE8
cs=0x17c5;eip=0x00cbeb; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 109366                  mov     [bp+var_E], ax ;~ 17C5:CBEB
cs=0x17c5;eip=0x00cbee; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1a))));	// 109367                  push    [bp+var_1A] ;~ 17C5:CBEE
cs=0x17c5;eip=0x00cbf1; 	X(PUSH(*(dw*)(raddr(ss,bp+var_18))));	// 109368                  push    [bp+var_18] ;~ 17C5:CBF1
cs=0x17c5;eip=0x00cbf4; 	J(CALL(sub_331d6,0));	// 109369                  call    sub_331D6 ;~ 17C5:CBF4
cs=0x17c5;eip=0x00cbf7; 	T(ADD(sp, 4));	// 109370                  add     sp, 4 ;~ 17C5:CBF7
cs=0x17c5;eip=0x00cbfa; 	X(PUSH(ax));	// 109371                  push    ax ;~ 17C5:CBFA
cs=0x17c5;eip=0x00cbfb; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 109372                  push    [bp+var_1C] ;~ 17C5:CBFB
cs=0x17c5;eip=0x00cbfe; 	J(CALL(sub_331d6,0));	// 109373                  call    sub_331D6 ;~ 17C5:CBFE
cs=0x17c5;eip=0x00cc01; 	T(ADD(sp, 4));	// 109374                  add     sp, 4 ;~ 17C5:CC01
cs=0x17c5;eip=0x00cc04; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 109375                  mov     [bp+var_8], ax ;~ 17C5:CC04
cs=0x17c5;eip=0x00cc07; 	T(CMP(*(dw*)(raddr(ss,bp+arg_e)), 1));	// 109376                  cmp     [bp+arg_E], 1 ;~ 17C5:CC07
cs=0x17c5;eip=0x00cc0b; 	J(JNZ(loc_32e72));	// 109377                  jnz     short loc_32E72 ;~ 17C5:CC0B
cs=0x17c5;eip=0x00cc0d; 	X(word_4ef7c = ax;);	// 109378                  mov     ds:word_4EF7C, ax ;~ 17C5:CC0D
cs=0x17c5;eip=0x00cc10; 	T(cl = 4;);	// 109379                  mov     cl, 4 ;~ 17C5:CC10
cs=0x17c5;eip=0x00cc12; 	T(SAR(ax, cl));	// 109380                  sar     ax, cl ;~ 17C5:CC12
cs=0x17c5;eip=0x00cc14; 	T(ADD(ax, 0x190));	// 109381                  add     ax, 190h ;~ 17C5:CC14
cs=0x17c5;eip=0x00cc17; 	X(word_4ef80 = ax;);	// 109382                  mov     ds:word_4EF80, ax ;~ 17C5:CC17
cs=0x17c5;eip=0x00cc1a; 	T(cl = 5;);	// 109383                  mov     cl, 5 ;~ 17C5:CC1A
cs=0x17c5;eip=0x00cc1c; 	T(SHL(ax, cl));	// 109384                  shl     ax, cl ;~ 17C5:CC1C
cs=0x17c5;eip=0x00cc1e; 	T(CWD);	// 109385                  cwd ;~ 17C5:CC1E
cs=0x17c5;eip=0x00cc1f; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_8))));	// 109386                  mov     cx, [bp+var_8] ;~ 17C5:CC1F
cs=0x17c5;eip=0x00cc22; 	T(INC(cx));	// 109387                  inc     cx ;~ 17C5:CC22
cs=0x17c5;eip=0x00cc23; 	T(IDIV2(cx));	// 109388                  idiv    cx ;~ 17C5:CC23
cs=0x17c5;eip=0x00cc25; 	X(word_4ef82 = ax;);	// 109389                  mov     ds:word_4EF82, ax ;~ 17C5:CC25
cs=0x17c5;eip=0x00cc28; 	T(ax = word_4ef80;);	// 109390                  mov     ax, ds:word_4EF80 ;~ 17C5:CC28
cs=0x17c5;eip=0x00cc2b; 	T(SHL(ax, 1));	// 109391                  shl     ax, 1 ;~ 17C5:CC2B
cs=0x17c5;eip=0x00cc2d; 	T(SHL(ax, 1));	// 109392                  shl     ax, 1 ;~ 17C5:CC2D
cs=0x17c5;eip=0x00cc2f; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 109393                  mov     [bp+var_8], ax ;~ 17C5:CC2F
cs=0x17c5;eip=0x00cc32; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 109394                  mov     ax, [bp+var_6] ;~ 17C5:CC32
cs=0x17c5;eip=0x00cc35; 	X(word_4ef7e = ax;);	// 109395                  mov     ds:word_4EF7E, ax ;~ 17C5:CC35
cs=0x17c5;eip=0x00cc38; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 109396                  mov     ax, [bp+var_E] ;~ 17C5:CC38
cs=0x17c5;eip=0x00cc3b; 	X(word_4ef84 = ax;);	// 109397                  mov     ds:word_4EF84, ax ;~ 17C5:CC3B
cs=0x17c5;eip=0x00cc3e; 	J(JMP(loc_32f10));	// 109398                  jmp     loc_32F10 ;~ 17C5:CC3E
loc_32e72:
	// 6422 
cs=0x17c5;eip=0x00cc42; 	T(ax = word_4ef7c;);	// 109403                  mov     ax, ds:word_4EF7C ;~ 17C5:CC42
cs=0x17c5;eip=0x00cc45; 	T(cl = 5;);	// 109404                  mov     cl, 5 ;~ 17C5:CC45
cs=0x17c5;eip=0x00cc47; 	T(SHL(ax, cl));	// 109405                  shl     ax, cl ;~ 17C5:CC47
cs=0x17c5;eip=0x00cc49; 	T(CWD);	// 109406                  cwd ;~ 17C5:CC49
cs=0x17c5;eip=0x00cc4a; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_8))));	// 109407                  mov     cx, [bp+var_8] ;~ 17C5:CC4A
cs=0x17c5;eip=0x00cc4d; 	T(INC(cx));	// 109408                  inc     cx ;~ 17C5:CC4D
cs=0x17c5;eip=0x00cc4e; 	T(IDIV2(cx));	// 109409                  idiv    cx ;~ 17C5:CC4E
cs=0x17c5;eip=0x00cc50; 	X(word_4ef82 = ax;);	// 109410                  mov     ds:word_4EF82, ax ;~ 17C5:CC50
cs=0x17c5;eip=0x00cc53; 	T(CMP(ax, 0x100));	// 109411                  cmp     ax, 100h ;~ 17C5:CC53
cs=0x17c5;eip=0x00cc56; 	J(JLE(loc_32e8e));	// 109412                  jle     short loc_32E8E ;~ 17C5:CC56
cs=0x17c5;eip=0x00cc58; 	X(word_4ef82 = 0x100;);	// 109413                  mov     ds:word_4EF82, 100h ;~ 17C5:CC58
loc_32e8e:
	// 6423 
cs=0x17c5;eip=0x00cc5e; 	T(CMP(word_4ef82, 4));	// 109416                  cmp     ds:word_4EF82, 4 ;~ 17C5:CC5E
cs=0x17c5;eip=0x00cc63; 	J(JGE(loc_32e9b));	// 109417                  jge     short loc_32E9B ;~ 17C5:CC63
cs=0x17c5;eip=0x00cc65; 	X(word_4ef82 = 4;);	// 109418                  mov     ds:word_4EF82, 4 ;~ 17C5:CC65
loc_32e9b:
	// 6424 
cs=0x17c5;eip=0x00cc6b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 109421                  mov     ax, [bp+var_6] ;~ 17C5:CC6B
cs=0x17c5;eip=0x00cc6e; 	T(SUB(ax, word_4ef7e));	// 109422                  sub     ax, ds:word_4EF7E ;~ 17C5:CC6E
cs=0x17c5;eip=0x00cc72; 	T(cl = 5;);	// 109423                  mov     cl, 5 ;~ 17C5:CC72
cs=0x17c5;eip=0x00cc74; 	T(SAR(ax, cl));	// 109424                  sar     ax, cl ;~ 17C5:CC74
cs=0x17c5;eip=0x00cc76; 	X(IMUL1_2(word_4ef82));	// 109425                  imul    ds:word_4EF82 ;~ 17C5:CC76
cs=0x17c5;eip=0x00cc7a; 	X(MOV(*(dw*)(raddr(ss,bp+var_16)), ax));	// 109426                  mov     [bp+var_16], ax ;~ 17C5:CC7A
cs=0x17c5;eip=0x00cc7d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_e))));	// 109427                  mov     ax, [bp+var_E] ;~ 17C5:CC7D
cs=0x17c5;eip=0x00cc80; 	T(SUB(ax, word_4ef84));	// 109428                  sub     ax, ds:word_4EF84 ;~ 17C5:CC80
cs=0x17c5;eip=0x00cc84; 	T(SAR(ax, cl));	// 109429                  sar     ax, cl ;~ 17C5:CC84
cs=0x17c5;eip=0x00cc86; 	X(IMUL1_2(word_4ef82));	// 109430                  imul    ds:word_4EF82 ;~ 17C5:CC86
cs=0x17c5;eip=0x00cc8a; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 109431                  mov     [bp+var_A], ax ;~ 17C5:CC8A
cs=0x17c5;eip=0x00cc8d; 	X(PUSH(*(dw*)(raddr(ss,bp+var_16))));	// 109432                  push    [bp+var_16] ;~ 17C5:CC8D
cs=0x17c5;eip=0x00cc90; 	J(CALL(sub_34dc0,0));	// 109433                  call    sub_34DC0 ;~ 17C5:CC90
cs=0x17c5;eip=0x00cc93; 	T(ADD(sp, 2));	// 109434                  add     sp, 2 ;~ 17C5:CC93
cs=0x17c5;eip=0x00cc96; 	T(CMP(ax, 0x1000));	// 109435                  cmp     ax, 1000h ;~ 17C5:CC96
cs=0x17c5;eip=0x00cc99; 	J(JLE(loc_32ece));	// 109436                  jle     short loc_32ECE ;~ 17C5:CC99
cs=0x17c5;eip=0x00cc9b; 	J(JMP(loc_3315c));	// 109437                  jmp     loc_3315C ;~ 17C5:CC9B
loc_32ece:
	// 6425 
cs=0x17c5;eip=0x00cc9e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 109441                  push    [bp+var_A] ;~ 17C5:CC9E
cs=0x17c5;eip=0x00cca1; 	J(CALL(sub_34dc0,0));	// 109442                  call    sub_34DC0 ;~ 17C5:CCA1
cs=0x17c5;eip=0x00cca4; 	T(ADD(sp, 2));	// 109443                  add     sp, 2 ;~ 17C5:CCA4
cs=0x17c5;eip=0x00cca7; 	T(CMP(ax, 0x1000));	// 109444                  cmp     ax, 1000h ;~ 17C5:CCA7
cs=0x17c5;eip=0x00ccaa; 	J(JLE(loc_32edf));	// 109445                  jle     short loc_32EDF ;~ 17C5:CCAA
cs=0x17c5;eip=0x00ccac; 	J(JMP(loc_3315c));	// 109446                  jmp     loc_3315C ;~ 17C5:CCAC
loc_32edf:
	// 6426 
cs=0x17c5;eip=0x00ccaf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_16))));	// 109450                  mov     ax, [bp+var_16] ;~ 17C5:CCAF
cs=0x17c5;eip=0x00ccb2; 	T(SHL(ax, 1));	// 109451                  shl     ax, 1 ;~ 17C5:CCB2
cs=0x17c5;eip=0x00ccb4; 	T(SHL(ax, 1));	// 109452                  shl     ax, 1 ;~ 17C5:CCB4
cs=0x17c5;eip=0x00ccb6; 	T(ADD(ax, word_4ef7e));	// 109453                  add     ax, ds:word_4EF7E ;~ 17C5:CCB6
cs=0x17c5;eip=0x00ccba; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 109454                  mov     [bp+var_6], ax ;~ 17C5:CCBA
cs=0x17c5;eip=0x00ccbd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 109455                  mov     ax, [bp+var_A] ;~ 17C5:CCBD
cs=0x17c5;eip=0x00ccc0; 	T(SHL(ax, 1));	// 109456                  shl     ax, 1 ;~ 17C5:CCC0
cs=0x17c5;eip=0x00ccc2; 	T(SHL(ax, 1));	// 109457                  shl     ax, 1 ;~ 17C5:CCC2
cs=0x17c5;eip=0x00ccc4; 	T(ADD(ax, word_4ef84));	// 109458                  add     ax, ds:word_4EF84 ;~ 17C5:CCC4
cs=0x17c5;eip=0x00ccc8; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 109459                  mov     [bp+var_E], ax ;~ 17C5:CCC8
cs=0x17c5;eip=0x00cccb; 	T(ax = word_4ef80;);	// 109460                  mov     ax, ds:word_4EF80 ;~ 17C5:CCCB
cs=0x17c5;eip=0x00ccce; 	T(cl = 5;);	// 109461                  mov     cl, 5 ;~ 17C5:CCCE
cs=0x17c5;eip=0x00ccd0; 	T(SHL(ax, cl));	// 109462                  shl     ax, cl ;~ 17C5:CCD0
cs=0x17c5;eip=0x00ccd2; 	T(CWD);	// 109463                  cwd ;~ 17C5:CCD2
cs=0x17c5;eip=0x00ccd3; 	T(cx = word_4ef82;);	// 109464                  mov     cx, ds:word_4EF82 ;~ 17C5:CCD3
cs=0x17c5;eip=0x00ccd7; 	T(IDIV2(cx));	// 109465                  idiv    cx ;~ 17C5:CCD7
cs=0x17c5;eip=0x00ccd9; 	T(SHL(ax, 1));	// 109466                  shl     ax, 1 ;~ 17C5:CCD9
cs=0x17c5;eip=0x00ccdb; 	T(SHL(ax, 1));	// 109467                  shl     ax, 1 ;~ 17C5:CCDB
cs=0x17c5;eip=0x00ccdd; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 109468                  mov     [bp+var_8], ax ;~ 17C5:CCDD
loc_32f10:
	// 6427 
cs=0x17c5;eip=0x00cce0; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 109471                  push    [bp+var_8] ;~ 17C5:CCE0
cs=0x17c5;eip=0x00cce3; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 109472                  push    [bp+var_E] ;~ 17C5:CCE3
cs=0x17c5;eip=0x00cce6; 	J(CALL(sub_333c0,0));	// 109473                  call    sub_333C0 ;~ 17C5:CCE6
cs=0x17c5;eip=0x00cce9; 	T(ADD(sp, 4));	// 109474                  add     sp, 4 ;~ 17C5:CCE9
cs=0x17c5;eip=0x00ccec; 	X(MOV(*(dw*)(raddr(ss,bp+var_14)), ax));	// 109475                  mov     [bp+var_14], ax ;~ 17C5:CCEC
cs=0x17c5;eip=0x00ccef; 	X(byte_4e73e = 2;);	// 109476                  mov     ds:byte_4E73E, 2 ;~ 17C5:CCEF
cs=0x17c5;eip=0x00ccf4; 	T(CMP(*(dw*)(raddr(ss,bp+arg_10)), 0));	// 109477                  cmp     [bp+arg_10], 0 ;~ 17C5:CCF4
cs=0x17c5;eip=0x00ccf8; 	J(JGE(loc_32f37));	// 109478                  jge     short loc_32F37 ;~ 17C5:CCF8
cs=0x17c5;eip=0x00ccfa; 	T(MOV(al, *(raddr(ss,bp+arg_10))));	// 109479                  mov     al, byte ptr [bp+arg_10] ;~ 17C5:CCFA
cs=0x17c5;eip=0x00ccfd; 	T(ADD(al, 2));	// 109480                  add     al, 2 ;~ 17C5:CCFD
cs=0x17c5;eip=0x00ccff; 	X(byte_4e73e = al;);	// 109481                  mov     ds:byte_4E73E, al ;~ 17C5:CCFF
cs=0x17c5;eip=0x00cd02; 	X(MOV(*(dw*)(raddr(ss,bp+arg_10)), 0));	// 109482                  mov     [bp+arg_10], 0 ;~ 17C5:CD02
loc_32f37:
	// 6428 
cs=0x17c5;eip=0x00cd07; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 109485                  push    [bp+var_14] ;~ 17C5:CD07
cs=0x17c5;eip=0x00cd0a; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 109486                  push    [bp+var_6] ;~ 17C5:CD0A
cs=0x17c5;eip=0x00cd0d; 	J(CALL(sub_333a8,0));	// 109487                  call    sub_333A8 ;~ 17C5:CD0D
cs=0x17c5;eip=0x00cd10; 	T(ADD(sp, 4));	// 109488                  add     sp, 4 ;~ 17C5:CD10
cs=0x17c5;eip=0x00cd13; 	T(MOV(cl, *(raddr(ss,bp+arg_10))));	// 109489                  mov     cl, byte ptr [bp+arg_10] ;~ 17C5:CD13
cs=0x17c5;eip=0x00cd16; 	T(SAR(ax, cl));	// 109490                  sar     ax, cl ;~ 17C5:CD16
cs=0x17c5;eip=0x00cd18; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 109491                  mov     [bp+var_18], ax ;~ 17C5:CD18
cs=0x17c5;eip=0x00cd1b; 	X(PUSH(*(dw*)(raddr(ss,bp+var_14))));	// 109492                  push    [bp+var_14] ;~ 17C5:CD1B
cs=0x17c5;eip=0x00cd1e; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 109493                  push    [bp+var_6] ;~ 17C5:CD1E
cs=0x17c5;eip=0x00cd21; 	J(CALL(sub_333c0,0));	// 109494                  call    sub_333C0 ;~ 17C5:CD21
cs=0x17c5;eip=0x00cd24; 	T(ADD(sp, 4));	// 109495                  add     sp, 4 ;~ 17C5:CD24
cs=0x17c5;eip=0x00cd27; 	T(NEG(ax));	// 109496                  neg     ax ;~ 17C5:CD27
cs=0x17c5;eip=0x00cd29; 	T(MOV(cl, *(raddr(ss,bp+arg_10))));	// 109497                  mov     cl, byte ptr [bp+arg_10] ;~ 17C5:CD29
cs=0x17c5;eip=0x00cd2c; 	T(SAR(ax, cl));	// 109498                  sar     ax, cl ;~ 17C5:CD2C
cs=0x17c5;eip=0x00cd2e; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 109499                  mov     [bp+var_1A], ax ;~ 17C5:CD2E
cs=0x17c5;eip=0x00cd31; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 109500                  push    [bp+var_8] ;~ 17C5:CD31
cs=0x17c5;eip=0x00cd34; 	X(PUSH(*(dw*)(raddr(ss,bp+var_e))));	// 109501                  push    [bp+var_E] ;~ 17C5:CD34
cs=0x17c5;eip=0x00cd37; 	J(CALL(sub_333a8,0));	// 109502                  call    sub_333A8 ;~ 17C5:CD37
cs=0x17c5;eip=0x00cd3a; 	T(ADD(sp, 4));	// 109503                  add     sp, 4 ;~ 17C5:CD3A
cs=0x17c5;eip=0x00cd3d; 	T(MOV(cl, *(raddr(ss,bp+arg_10))));	// 109504                  mov     cl, byte ptr [bp+arg_10] ;~ 17C5:CD3D
cs=0x17c5;eip=0x00cd40; 	T(SAR(ax, cl));	// 109505                  sar     ax, cl ;~ 17C5:CD40
cs=0x17c5;eip=0x00cd42; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 109506                  mov     [bp+var_1C], ax ;~ 17C5:CD42
cs=0x17c5;eip=0x00cd45; 	J(JMP(loc_32fbb));	// 109507                  jmp     short loc_32FBB ;~ 17C5:CD45
loc_32f78:
	// 6429 
cs=0x17c5;eip=0x00cd48; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109512                  mov     ax, [bp+arg_2] ;~ 17C5:CD48
cs=0x17c5;eip=0x00cd4b; 	T(SUB(ax, word_520f0));	// 109513                  sub     ax, ds:word_520F0 ;~ 17C5:CD4B
cs=0x17c5;eip=0x00cd4f; 	T(cl = 4;);	// 109514                  mov     cl, 4 ;~ 17C5:CD4F
cs=0x17c5;eip=0x00cd51; 	T(SHL(ax, cl));	// 109515                  shl     ax, cl ;~ 17C5:CD51
cs=0x17c5;eip=0x00cd53; 	X(MOV(*(dw*)(raddr(ss,bp+var_18)), ax));	// 109516                  mov     [bp+var_18], ax ;~ 17C5:CD53
cs=0x17c5;eip=0x00cd56; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 109517                  mov     ax, [bp+arg_4] ;~ 17C5:CD56
cs=0x17c5;eip=0x00cd59; 	T(SUB(ax, word_52100));	// 109518                  sub     ax, ds:word_52100 ;~ 17C5:CD59
cs=0x17c5;eip=0x00cd5d; 	T(SHL(ax, cl));	// 109519                  shl     ax, cl ;~ 17C5:CD5D
cs=0x17c5;eip=0x00cd5f; 	X(MOV(*(dw*)(raddr(ss,bp+var_1a)), ax));	// 109520                  mov     [bp+var_1A], ax ;~ 17C5:CD5F
cs=0x17c5;eip=0x00cd62; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 109521                  mov     ax, [bp+arg_6] ;~ 17C5:CD62
cs=0x17c5;eip=0x00cd65; 	T(SUB(ax, word_4e2fe));	// 109522                  sub     ax, ds:word_4E2FE ;~ 17C5:CD65
cs=0x17c5;eip=0x00cd69; 	T(SAR(ax, 1));	// 109523                  sar     ax, 1 ;~ 17C5:CD69
cs=0x17c5;eip=0x00cd6b; 	X(MOV(*(dw*)(raddr(ss,bp+var_1c)), ax));	// 109524                  mov     [bp+var_1C], ax ;~ 17C5:CD6B
cs=0x17c5;eip=0x00cd6e; 	T(ax = word_4e2f8;);	// 109525                  mov     ax, ds:word_4E2F8 ;~ 17C5:CD6E
cs=0x17c5;eip=0x00cd71; 	X(word_4ef7e = ax;);	// 109526                  mov     ds:word_4EF7E, ax ;~ 17C5:CD71
cs=0x17c5;eip=0x00cd74; 	T(ax = seg_4f1fe;);	// 109527                  mov     ax, ds:seg_4F1FE ;~ 17C5:CD74
cs=0x17c5;eip=0x00cd77; 	X(word_4ef84 = ax;);	// 109528                  mov     ds:word_4EF84, ax ;~ 17C5:CD77
cs=0x17c5;eip=0x00cd7a; 	T(ax = word_4e2fc;);	// 109529                  mov     ax, ds:word_4E2FC ;~ 17C5:CD7A
cs=0x17c5;eip=0x00cd7d; 	X(word_4ef86 = ax;);	// 109530                  mov     ds:word_4EF86, ax ;~ 17C5:CD7D
cs=0x17c5;eip=0x00cd80; 	X(word_4ef82 = 0x20;);	// 109531                  mov     ds:word_4EF82, 20h ; ' ' ;~ 17C5:CD80
cs=0x17c5;eip=0x00cd86; 	X(byte_4e73e = 2;);	// 109532                  mov     ds:byte_4E73E, 2 ;~ 17C5:CD86
loc_32fbb:
	// 6430 
cs=0x17c5;eip=0x00cd8b; 	T(CMP(*(dw*)(raddr(ss,bp+arg_e)), 1));	// 109535                  cmp     [bp+arg_E], 1 ;~ 17C5:CD8B
cs=0x17c5;eip=0x00cd8f; 	J(JZ(loc_32fca));	// 109536                  jz      short loc_32FCA ;~ 17C5:CD8F
cs=0x17c5;eip=0x00cd91; 	T(CMP(*(dw*)(raddr(ss,bp+arg_e)), 3));	// 109537                  cmp     [bp+arg_E], 3 ;~ 17C5:CD91
cs=0x17c5;eip=0x00cd95; 	J(JZ(loc_32fca));	// 109538                  jz      short loc_32FCA ;~ 17C5:CD95
cs=0x17c5;eip=0x00cd97; 	J(JMP(loc_330b2));	// 109539                  jmp     loc_330B2 ;~ 17C5:CD97
loc_32fca:
	// 6431 
cs=0x17c5;eip=0x00cd9a; 	T(ax = word_4ef82;);	// 109544                  mov     ax, ds:word_4EF82 ;~ 17C5:CD9A
cs=0x17c5;eip=0x00cd9d; 	T(CWD);	// 109545                  cwd ;~ 17C5:CD9D
cs=0x17c5;eip=0x00cd9e; 	X(PUSH(dx));	// 109546                  push    dx ;~ 17C5:CD9E
cs=0x17c5;eip=0x00cd9f; 	X(PUSH(ax));	// 109547                  push    ax ;~ 17C5:CD9F
cs=0x17c5;eip=0x00cda0; 	T(ax = word_4ef84;);	// 109548                  mov     ax, ds:word_4EF84 ;~ 17C5:CDA0
cs=0x17c5;eip=0x00cda3; 	T(SAR(ax, 1));	// 109549                  sar     ax, 1 ;~ 17C5:CDA3
cs=0x17c5;eip=0x00cda5; 	T(SAR(ax, 1));	// 109550                  sar     ax, 1 ;~ 17C5:CDA5
cs=0x17c5;eip=0x00cda7; 	T(CWD);	// 109551                  cwd ;~ 17C5:CDA7
cs=0x17c5;eip=0x00cda8; 	X(PUSH(dx));	// 109552                  push    dx ;~ 17C5:CDA8
cs=0x17c5;eip=0x00cda9; 	X(PUSH(ax));	// 109553                  push    ax ;~ 17C5:CDA9
cs=0x17c5;eip=0x00cdaa; 	J(CALL(sub_34ee0,0));	// 109554                  call    sub_34EE0 ;~ 17C5:CDAA
cs=0x17c5;eip=0x00cdad; 	T(cl = 5;);	// 109555                  mov     cl, 5 ;~ 17C5:CDAD
loc_32fdf:
	// 6432 
cs=0x17c5;eip=0x00cdaf; 	T(SAR(dx, 1));	// 109558                  sar     dx, 1 ;~ 17C5:CDAF
cs=0x17c5;eip=0x00cdb1; 	T(RCR(ax, 1));	// 109559                  rcr     ax, 1 ;~ 17C5:CDB1
cs=0x17c5;eip=0x00cdb3; 	T(DEC(cl));	// 109560                  dec     cl ;~ 17C5:CDB3
cs=0x17c5;eip=0x00cdb5; 	J(JNZ(loc_32fdf));	// 109561                  jnz     short loc_32FDF ;~ 17C5:CDB5
cs=0x17c5;eip=0x00cdb7; 	T(ADD(ax, 0x9C));	// 109562                  add     ax, 9Ch ;~ 17C5:CDB7
cs=0x17c5;eip=0x00cdba; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 109563                  mov     [bp+var_4], ax ;~ 17C5:CDBA
cs=0x17c5;eip=0x00cdbd; 	T(CMP(ax, 0x80));	// 109564                  cmp     ax, 80h ;~ 17C5:CDBD
cs=0x17c5;eip=0x00cdc0; 	J(JL(loc_32ffa));	// 109565                  jl      short loc_32FFA ;~ 17C5:CDC0
cs=0x17c5;eip=0x00cdc2; 	T(CMP(word_4ef84, 0x0E800));	// 109566                  cmp     ds:word_4EF84, 0E800h ;~ 17C5:CDC2
cs=0x17c5;eip=0x00cdc8; 	J(JGE(loc_32fff));	// 109567                  jge     short loc_32FFF ;~ 17C5:CDC8
loc_32ffa:
	// 6433 
cs=0x17c5;eip=0x00cdca; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0x80));	// 109570                  mov     [bp+var_4], 80h ;~ 17C5:CDCA
loc_32fff:
	// 6434 
cs=0x17c5;eip=0x00cdcf; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x0B8));	// 109573                  cmp     [bp+var_4], 0B8h ;~ 17C5:CDCF
cs=0x17c5;eip=0x00cdd4; 	J(JG(loc_3300e));	// 109574                  jg      short loc_3300E ;~ 17C5:CDD4
cs=0x17c5;eip=0x00cdd6; 	T(CMP(word_4ef84, 0x1800));	// 109575                  cmp     ds:word_4EF84, 1800h ;~ 17C5:CDD6
cs=0x17c5;eip=0x00cddc; 	J(JLE(loc_33013));	// 109576                  jle     short loc_33013 ;~ 17C5:CDDC
loc_3300e:
	// 6435 
cs=0x17c5;eip=0x00cdde; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0x0B8));	// 109579                  mov     [bp+var_4], 0B8h ;~ 17C5:CDDE
loc_33013:
	// 6436 
cs=0x17c5;eip=0x00cde3; 	T(bx = word_4e5dc;);	// 109582                  mov     bx, ds:word_4E5DC ;~ 17C5:CDE3
cs=0x17c5;eip=0x00cde7; 	T(al = *(byte_4a3cf););	// 109583                  mov     al, byte_4A3CF ;~ 17C5:CDE7
cs=0x17c5;eip=0x00cdea; 	T(SUB(ah, ah));	// 109584                  sub     ah, ah ;~ 17C5:CDEA
cs=0x17c5;eip=0x00cdec; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 109585                  mov     [bx+4], ax ;~ 17C5:CDEC
cs=0x17c5;eip=0x00cdef; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x80));	// 109586                  cmp     [bp+var_4], 80h ;~ 17C5:CDEF
cs=0x17c5;eip=0x00cdf4; 	J(JZ(loc_33041));	// 109587                  jz      short loc_33041 ;~ 17C5:CDF4
cs=0x17c5;eip=0x00cdf6; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 109588                  push    [bp+var_4] ;~ 17C5:CDF6
cs=0x17c5;eip=0x00cdf9; 	T(ax = 0x130;);	// 109589                  mov     ax, 130h ;~ 17C5:CDF9
cs=0x17c5;eip=0x00cdfc; 	X(PUSH(ax));	// 109590                  push    ax ;~ 17C5:CDFC
cs=0x17c5;eip=0x00cdfd; 	T(ax = 0x80;);	// 109591                  mov     ax, 80h ;~ 17C5:CDFD
cs=0x17c5;eip=0x00ce00; 	X(PUSH(ax));	// 109592                  push    ax ;~ 17C5:CE00
cs=0x17c5;eip=0x00ce01; 	T(ax = 0x0E8;);	// 109593                  mov     ax, 0E8h ;~ 17C5:CE01
cs=0x17c5;eip=0x00ce04; 	X(PUSH(ax));	// 109594                  push    ax ;~ 17C5:CE04
cs=0x17c5;eip=0x00ce05; 	X(PUSH(word_4e5dc));	// 109595                  push    ds:word_4E5DC ;~ 17C5:CE05
cs=0x17c5;eip=0x00ce09; 	J(CALLF(sub_37674,0));	// 109596                  call    sub_37674 ;~ 17C5:CE09
cs=0x17c5;eip=0x00ce0e; 	T(ADD(sp, 0x0A));	// 109598                  add     sp, 0Ah ;~ 17C5:CE0E
loc_33041:
	// 6437 
cs=0x17c5;eip=0x00ce11; 	T(es = seg_4ee26;);	// 109601                  mov     es, ds:seg_4EE26 ;~ 17C5:CE11
cs=0x17c5;eip=0x00ce15; 	T(al = byte_38b2f;);	// 109603                  mov     al, es:byte_38B2F ;~ 17C5:CE15
cs=0x17c5;eip=0x00ce19; 	T(SUB(ah, ah));	// 109604                  sub     ah, ah ;~ 17C5:CE19
cs=0x17c5;eip=0x00ce1b; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), ax));	// 109605                  mov     [bp+var_12], ax ;~ 17C5:CE1B
cs=0x17c5;eip=0x00ce1e; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 109606                  mov     bx, [bp+arg_0] ;~ 17C5:CE1E
cs=0x17c5;eip=0x00ce21; 	T(AND(bx, 0x7F));	// 109607                  and     bx, 7Fh ;~ 17C5:CE21
cs=0x17c5;eip=0x00ce24; 	T(MOV(al, *(raddr(ds,bx-0x690C))));	// 109608                  mov     al, [bx-690Ch] ;~ 17C5:CE24
cs=0x17c5;eip=0x00ce28; 	T(CBW);	// 109609                  cbw ;~ 17C5:CE28
cs=0x17c5;eip=0x00ce29; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), ax));	// 109610                  mov     [bp+var_C], ax ;~ 17C5:CE29
cs=0x17c5;eip=0x00ce2c; 	T(TEST(*(raddr(ss,bp+var_c)), 0x10));	// 109611                  test    byte ptr [bp+var_C], 10h ;~ 17C5:CE2C
cs=0x17c5;eip=0x00ce30; 	J(JZ(loc_33067));	// 109612                  jz      short loc_33067 ;~ 17C5:CE30
cs=0x17c5;eip=0x00ce32; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), 8));	// 109613                  mov     [bp+var_12], 8 ;~ 17C5:CE32
loc_33067:
	// 6438 
cs=0x17c5;eip=0x00ce37; 	T(MOV(al, *(raddr(ss,bp+var_c))));	// 109616                  mov     al, byte ptr [bp+var_C] ;~ 17C5:CE37
cs=0x17c5;eip=0x00ce3a; 	T(AND(al, 0x0F));	// 109617                  and     al, 0Fh ;~ 17C5:CE3A
cs=0x17c5;eip=0x00ce3c; 	X(MOV(*(raddr(ss,bp+var_1e)), al));	// 109618                  mov     [bp+var_1E], al ;~ 17C5:CE3C
cs=0x17c5;eip=0x00ce3f; 	T(CMP(al, 0x0C));	// 109619                  cmp     al, 0Ch ;~ 17C5:CE3F
cs=0x17c5;eip=0x00ce41; 	J(JZ(loc_3307b));	// 109620                  jz      short loc_3307B ;~ 17C5:CE41
cs=0x17c5;eip=0x00ce43; 	T(CMP(al, 9));	// 109621                  cmp     al, 9 ;~ 17C5:CE43
cs=0x17c5;eip=0x00ce45; 	J(JZ(loc_3307b));	// 109622                  jz      short loc_3307B ;~ 17C5:CE45
cs=0x17c5;eip=0x00ce47; 	T(CMP(al, 0x0B));	// 109623                  cmp     al, 0Bh ;~ 17C5:CE47
cs=0x17c5;eip=0x00ce49; 	J(JNZ(loc_33080));	// 109624                  jnz     short loc_33080 ;~ 17C5:CE49
loc_3307b:
	// 6439 
cs=0x17c5;eip=0x00ce4b; 	X(MOV(*(dw*)(raddr(ss,bp+var_12)), 1));	// 109628                  mov     [bp+var_12], 1 ;~ 17C5:CE4B
loc_33080:
	// 6440 
cs=0x17c5;eip=0x00ce50; 	T(bx = word_4e5dc;);	// 109631                  mov     bx, ds:word_4E5DC ;~ 17C5:CE50
cs=0x17c5;eip=0x00ce54; 	T(MOV(si, *(dw*)(raddr(ss,bp+var_12))));	// 109632                  mov     si, [bp+var_12] ;~ 17C5:CE54
cs=0x17c5;eip=0x00ce57; 	T(MOV(al, *(raddr(ds,si+0x18EC))));	// 109633                  mov     al, [si+18ECh] ;~ 17C5:CE57
cs=0x17c5;eip=0x00ce5b; 	T(SUB(ah, ah));	// 109634                  sub     ah, ah ;~ 17C5:CE5B
cs=0x17c5;eip=0x00ce5d; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 109635                  mov     [bx+4], ax ;~ 17C5:CE5D
cs=0x17c5;eip=0x00ce60; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x0B8));	// 109636                  cmp     [bp+var_4], 0B8h ;~ 17C5:CE60
cs=0x17c5;eip=0x00ce65; 	J(JZ(loc_330b2));	// 109637                  jz      short loc_330B2 ;~ 17C5:CE65
cs=0x17c5;eip=0x00ce67; 	T(ax = 0x0B8;);	// 109638                  mov     ax, 0B8h ;~ 17C5:CE67
cs=0x17c5;eip=0x00ce6a; 	X(PUSH(ax));	// 109639                  push    ax ;~ 17C5:CE6A
cs=0x17c5;eip=0x00ce6b; 	T(ax = 0x130;);	// 109640                  mov     ax, 130h ;~ 17C5:CE6B
cs=0x17c5;eip=0x00ce6e; 	X(PUSH(ax));	// 109641                  push    ax ;~ 17C5:CE6E
cs=0x17c5;eip=0x00ce6f; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 109642                  push    [bp+var_4] ;~ 17C5:CE6F
cs=0x17c5;eip=0x00ce72; 	T(ax = 0x0E8;);	// 109643                  mov     ax, 0E8h ;~ 17C5:CE72
cs=0x17c5;eip=0x00ce75; 	X(PUSH(ax));	// 109644                  push    ax ;~ 17C5:CE75
cs=0x17c5;eip=0x00ce76; 	X(PUSH(word_4e5dc));	// 109645                  push    ds:word_4E5DC ;~ 17C5:CE76
cs=0x17c5;eip=0x00ce7a; 	J(CALLF(sub_37674,0));	// 109646                  call    sub_37674 ;~ 17C5:CE7A
cs=0x17c5;eip=0x00ce7f; 	T(ADD(sp, 0x0A));	// 109648                  add     sp, 0Ah ;~ 17C5:CE7F
loc_330b2:
	// 6441 
cs=0x17c5;eip=0x00ce82; 	X(byte_4cdb8 = 1;);	// 109652                  mov     ds:byte_4CDB8, 1 ;~ 17C5:CE82
cs=0x17c5;eip=0x00ce87; 	T(SUB(ax, ax));	// 109653                  sub     ax, ax ;~ 17C5:CE87
cs=0x17c5;eip=0x00ce89; 	X(PUSH(ax));	// 109654                  push    ax ;~ 17C5:CE89
cs=0x17c5;eip=0x00ce8a; 	X(PUSH(ax));	// 109655                  push    ax ;~ 17C5:CE8A
cs=0x17c5;eip=0x00ce8b; 	X(PUSH(ax));	// 109656                  push    ax ;~ 17C5:CE8B
cs=0x17c5;eip=0x00ce8c; 	X(PUSH(ax));	// 109657                  push    ax ;~ 17C5:CE8C
cs=0x17c5;eip=0x00ce8d; 	X(PUSH(word_4ef86));	// 109658                  push    ds:word_4EF86 ;~ 17C5:CE8D
cs=0x17c5;eip=0x00ce91; 	X(PUSH(word_4ef84));	// 109659                  push    ds:word_4EF84 ;~ 17C5:CE91
cs=0x17c5;eip=0x00ce95; 	T(ax = word_4ef7e;);	// 109660                  mov     ax, ds:word_4EF7E ;~ 17C5:CE95
cs=0x17c5;eip=0x00ce98; 	T(NEG(ax));	// 109661                  neg     ax ;~ 17C5:CE98
cs=0x17c5;eip=0x00ce9a; 	X(PUSH(ax));	// 109662                  push    ax ;~ 17C5:CE9A
cs=0x17c5;eip=0x00ce9b; 	X(PUSH(word_4e5dc));	// 109663                  push    ds:word_4E5DC ;~ 17C5:CE9B
cs=0x17c5;eip=0x00ce9f; 	J(CALL(sub_29b62,0));	// 109664                  call    sub_29B62 ;~ 17C5:CE9F
cs=0x17c5;eip=0x00cea2; 	T(ADD(sp, 0x10));	// 109666                  add     sp, 10h ;~ 17C5:CEA2
cs=0x17c5;eip=0x00cea5; 	X(PUSH(*(dw*)(raddr(ss,bp+var_1c))));	// 109667                  push    [bp+var_1C] ;~ 17C5:CEA5
cs=0x17c5;eip=0x00cea8; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_1a))));	// 109668                  mov     ax, [bp+var_1A] ;~ 17C5:CEA8
cs=0x17c5;eip=0x00ceab; 	T(NEG(ax));	// 109669                  neg     ax ;~ 17C5:CEAB
cs=0x17c5;eip=0x00cead; 	X(PUSH(ax));	// 109670                  push    ax ;~ 17C5:CEAD
cs=0x17c5;eip=0x00ceae; 	X(PUSH(*(dw*)(raddr(ss,bp+var_18))));	// 109671                  push    [bp+var_18] ;~ 17C5:CEAE
cs=0x17c5;eip=0x00ceb1; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_c))));	// 109672                  push    [bp+arg_C] ;~ 17C5:CEB1
cs=0x17c5;eip=0x00ceb4; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_a))));	// 109673                  push    [bp+arg_A] ;~ 17C5:CEB4
cs=0x17c5;eip=0x00ceb7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_8))));	// 109674                  mov     ax, [bp+arg_8] ;~ 17C5:CEB7
cs=0x17c5;eip=0x00ceba; 	T(NEG(ax));	// 109675                  neg     ax ;~ 17C5:CEBA
cs=0x17c5;eip=0x00cebc; 	X(PUSH(ax));	// 109676                  push    ax ;~ 17C5:CEBC
cs=0x17c5;eip=0x00cebd; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_10))));	// 109677                  mov     bx, [bp+var_10] ;~ 17C5:CEBD
cs=0x17c5;eip=0x00cec0; 	T(ax = bx+0);	// 109678                  lea     ax, [bx+0] ;~ 17C5:CEC0
cs=0x17c5;eip=0x00cec4; 	T(dx = seg_offset(seg38b0););	// 109679                  mov     dx, seg seg38b0 ;~ 17C5:CEC4
cs=0x17c5;eip=0x00cec7; 	X(PUSH(dx));	// 109680                  push    dx ;~ 17C5:CEC7
cs=0x17c5;eip=0x00cec8; 	X(PUSH(ax));	// 109681                  push    ax ;~ 17C5:CEC8
cs=0x17c5;eip=0x00cec9; 	J(CALLF(sub_36334,0));	// 109682                  call    sub_36334 ;~ 17C5:CEC9
cs=0x17c5;eip=0x00cece; 	T(ADD(sp, 0x10));	// 109683                  add     sp, 10h ;~ 17C5:CECE
cs=0x17c5;eip=0x00ced1; 	J(CALL(sub_29bda,0));	// 109684                  call    sub_29BDA ;~ 17C5:CED1
cs=0x17c5;eip=0x00ced4; 	X(byte_4cdb8 = 0;);	// 109686                  mov     ds:byte_4CDB8, 0 ;~ 17C5:CED4
cs=0x17c5;eip=0x00ced9; 	T(CMP(*(dw*)(raddr(ss,bp+arg_e)), 1));	// 109687                  cmp     [bp+arg_E], 1 ;~ 17C5:CED9
cs=0x17c5;eip=0x00cedd; 	J(JNZ(loc_33157));	// 109688                  jnz     short loc_33157 ;~ 17C5:CEDD
cs=0x17c5;eip=0x00cedf; 	T(ax = 0x5C6A;);	// 109689                  mov     ax, 5C6Ah ;~ 17C5:CEDF
cs=0x17c5;eip=0x00cee2; 	X(PUSH(ax));	// 109690                  push    ax ;~ 17C5:CEE2
cs=0x17c5;eip=0x00cee3; 	T(ax = 0x66C4;);	// 109691                  mov     ax, 66C4h ;~ 17C5:CEE3
cs=0x17c5;eip=0x00cee6; 	X(PUSH(ax));	// 109692                  push    ax ;~ 17C5:CEE6
cs=0x17c5;eip=0x00cee7; 	J(CALL(sub_34c1c,0));	// 109693                  call    sub_34C1C ;~ 17C5:CEE7
cs=0x17c5;eip=0x00ceea; 	T(ADD(sp, 4));	// 109694                  add     sp, 4 ;~ 17C5:CEEA
cs=0x17c5;eip=0x00ceed; 	T(ax = 0x0A;);	// 109695                  mov     ax, 0Ah ;~ 17C5:CEED
cs=0x17c5;eip=0x00cef0; 	X(PUSH(ax));	// 109696                  push    ax ;~ 17C5:CEF0
cs=0x17c5;eip=0x00cef1; 	T(ax = 0x9780;);	// 109697                  mov     ax, 9780h ;~ 17C5:CEF1
cs=0x17c5;eip=0x00cef4; 	X(PUSH(ax));	// 109698                  push    ax ;~ 17C5:CEF4
cs=0x17c5;eip=0x00cef5; 	T(ax = word_4ef7e;);	// 109699                  mov     ax, ds:word_4EF7E ;~ 17C5:CEF5
cs=0x17c5;eip=0x00cef8; 	T(SUB(dx, dx));	// 109700                  sub     dx, dx ;~ 17C5:CEF8
cs=0x17c5;eip=0x00cefa; 	T(cx = 0x0B6;);	// 109701                  mov     cx, 0B6h ;~ 17C5:CEFA
cs=0x17c5;eip=0x00cefd; 	T(DIV2(cx));	// 109702                  div     cx ;~ 17C5:CEFD
cs=0x17c5;eip=0x00ceff; 	X(PUSH(ax));	// 109703                  push    ax ;~ 17C5:CEFF
cs=0x17c5;eip=0x00cf00; 	J(CALL(sub_34c6a,0));	// 109704                  call    sub_34C6A ;~ 17C5:CF00
cs=0x17c5;eip=0x00cf03; 	T(ADD(sp, 6));	// 109705                  add     sp, 6 ;~ 17C5:CF03
cs=0x17c5;eip=0x00cf06; 	X(PUSH(ax));	// 109706                  push    ax ;~ 17C5:CF06
cs=0x17c5;eip=0x00cf07; 	T(ax = 0x66C4;);	// 109707                  mov     ax, 66C4h ;~ 17C5:CF07
cs=0x17c5;eip=0x00cf0a; 	X(PUSH(ax));	// 109708                  push    ax ;~ 17C5:CF0A
cs=0x17c5;eip=0x00cf0b; 	J(CALL(sub_34bdc,0));	// 109709                  call    sub_34BDC ;~ 17C5:CF0B
cs=0x17c5;eip=0x00cf0e; 	T(ADD(sp, 4));	// 109710                  add     sp, 4 ;~ 17C5:CF0E
cs=0x17c5;eip=0x00cf11; 	T(ax = 0x0F;);	// 109711                  mov     ax, 0Fh ;~ 17C5:CF11
cs=0x17c5;eip=0x00cf14; 	X(PUSH(ax));	// 109712                  push    ax ;~ 17C5:CF14
cs=0x17c5;eip=0x00cf15; 	T(ax = 0x0B0;);	// 109713                  mov     ax, 0B0h ;~ 17C5:CF15
cs=0x17c5;eip=0x00cf18; 	X(PUSH(ax));	// 109714                  push    ax ;~ 17C5:CF18
cs=0x17c5;eip=0x00cf19; 	T(ax = 0x0F8;);	// 109715                  mov     ax, 0F8h ;~ 17C5:CF19
cs=0x17c5;eip=0x00cf1c; 	X(PUSH(ax));	// 109716                  push    ax ;~ 17C5:CF1C
cs=0x17c5;eip=0x00cf1d; 	T(ax = 0x66C4;);	// 109717                  mov     ax, 66C4h ;~ 17C5:CF1D
cs=0x17c5;eip=0x00cf20; 	X(PUSH(ax));	// 109718                  push    ax ;~ 17C5:CF20
cs=0x17c5;eip=0x00cf21; 	J(CALL(sub_3032e,0));	// 109719                  call    sub_3032E ;~ 17C5:CF21
cs=0x17c5;eip=0x00cf24; 	T(ADD(sp, 8));	// 109721                  add     sp, 8 ;~ 17C5:CF24
loc_33157:
	// 6442 
cs=0x17c5;eip=0x00cf27; 	X(byte_4e73e = 0;);	// 109724                  mov     ds:byte_4E73E, 0 ;~ 17C5:CF27
loc_3315c:
	// 6443 
cs=0x17c5;eip=0x00cf2c; 	X(POP(si));	// 109728                  pop     si ;~ 17C5:CF2C
cs=0x17c5;eip=0x00cf2d; 	T(sp = bp;);	// 109729                  mov     sp, bp ;~ 17C5:CF2D
cs=0x17c5;eip=0x00cf2f; 	X(POP(bp));	// 109730                  pop     bp ;~ 17C5:CF2F
cs=0x17c5;eip=0x00cf30; 	J(RETN(0));	// 109731                  retn ;~ 17C5:CF30

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_32d9d: 	goto loc_32d9d;
        case m2c::kloc_32dba: 	goto loc_32dba;
        case m2c::kloc_32dc2: 	goto loc_32dc2;
        case m2c::kloc_32dcb: 	goto loc_32dcb;
        case m2c::kloc_32e72: 	goto loc_32e72;
        case m2c::kloc_32e8e: 	goto loc_32e8e;
        case m2c::kloc_32e9b: 	goto loc_32e9b;
        case m2c::kloc_32ece: 	goto loc_32ece;
        case m2c::kloc_32edf: 	goto loc_32edf;
        case m2c::kloc_32f10: 	goto loc_32f10;
        case m2c::kloc_32f37: 	goto loc_32f37;
        case m2c::kloc_32f78: 	goto loc_32f78;
        case m2c::kloc_32fbb: 	goto loc_32fbb;
        case m2c::kloc_32fca: 	goto loc_32fca;
        case m2c::kloc_32fdf: 	goto loc_32fdf;
        case m2c::kloc_32ffa: 	goto loc_32ffa;
        case m2c::kloc_32fff: 	goto loc_32fff;
        case m2c::kloc_3300e: 	goto loc_3300e;
        case m2c::kloc_33013: 	goto loc_33013;
        case m2c::kloc_33041: 	goto loc_33041;
        case m2c::kloc_33067: 	goto loc_33067;
        case m2c::kloc_3307b: 	goto loc_3307b;
        case m2c::kloc_33080: 	goto loc_33080;
        case m2c::kloc_330b2: 	goto loc_330b2;
        case m2c::kloc_33157: 	goto loc_33157;
        case m2c::kloc_3315c: 	goto loc_3315c;
        case m2c::ksub_32d72: 	goto sub_32d72;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33162(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33162:
    _begin:
#undef arg_0
#define arg_0 4
	// 109744 arg_0           = word ptr  4 ;~ 17C5:CF32
cs=0x17c5;eip=0x00cf32; 	X(PUSH(bp));	// 109746                  push    bp ;~ 17C5:CF32
cs=0x17c5;eip=0x00cf33; 	T(bp = sp;);	// 109747                  mov     bp, sp ;~ 17C5:CF33
cs=0x17c5;eip=0x00cf35; 	T(TEST(*(dw*)(raddr(ss,bp+arg_0)), 0x100));	// 109748                  test    [bp+arg_0], 100h ;~ 17C5:CF35
cs=0x17c5;eip=0x00cf3a; 	J(JZ(loc_3317a));	// 109749                  jz      short loc_3317A ;~ 17C5:CF3A
cs=0x17c5;eip=0x00cf3c; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 109750                  mov     bx, [bp+arg_0] ;~ 17C5:CF3C
cs=0x17c5;eip=0x00cf3f; 	T(AND(bx, 0x7F));	// 109751                  and     bx, 7Fh ;~ 17C5:CF3F
cs=0x17c5;eip=0x00cf42; 	T(SHL(bx, 1));	// 109752                  shl     bx, 1 ;~ 17C5:CF42
cs=0x17c5;eip=0x00cf44; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x130A))));	// 109753                  mov     ax, [bx+130Ah] ;~ 17C5:CF44
cs=0x17c5;eip=0x00cf48; 	X(POP(bp));	// 109754                  pop     bp ;~ 17C5:CF48
cs=0x17c5;eip=0x00cf49; 	J(RETN(0));	// 109755                  retn ;~ 17C5:CF49
loc_3317a:
	// 6444 
cs=0x17c5;eip=0x00cf4a; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 109759                  mov     bx, [bp+arg_0] ;~ 17C5:CF4A
cs=0x17c5;eip=0x00cf4d; 	T(SHL(bx, 1));	// 109760                  shl     bx, 1 ;~ 17C5:CF4D
cs=0x17c5;eip=0x00cf4f; 	T(MOV(bx, *(dw*)(raddr(ds,bx+0x645A))));	// 109761                  mov     bx, [bx+645Ah] ;~ 17C5:CF4F
cs=0x17c5;eip=0x00cf53; 	T(ax = bx-0x522C);	// 109762                  lea     ax, [bx-522Ch] ;~ 17C5:CF53
cs=0x17c5;eip=0x00cf57; 	T(dx = seg_offset(seg38b0););	// 109763                  mov     dx, seg seg38b0 ;~ 17C5:CF57
cs=0x17c5;eip=0x00cf5a; 	T(cx = 0;);	// 109764                  mov     cx, 0 ;~ 17C5:CF5A
cs=0x17c5;eip=0x00cf5d; 	T(bx = seg_offset(seg38b0););	// 109765                  mov     bx, seg seg38b0 ;~ 17C5:CF5D
cs=0x17c5;eip=0x00cf60; 	T(SUB(ax, cx));	// 109766                  sub     ax, cx ;~ 17C5:CF60
cs=0x17c5;eip=0x00cf62; 	X(POP(bp));	// 109767                  pop     bp ;~ 17C5:CF62
cs=0x17c5;eip=0x00cf63; 	J(RETN(0));	// 109768                  retn ;~ 17C5:CF63

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3317a: 	goto loc_3317a;
        case m2c::ksub_33162: 	goto sub_33162;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33194(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33194:
    _begin:
#undef arg_0
#define arg_0 4
	// 109779 arg_0           = word ptr  4 ;~ 17C5:CF64
#undef arg_2
#define arg_2 6
	// 109780 arg_2           = word ptr  6 ;~ 17C5:CF64
#undef arg_4
#define arg_4 8
	// 109781 arg_4           = word ptr  8 ;~ 17C5:CF64
cs=0x17c5;eip=0x00cf64; 	X(PUSH(bp));	// 109783                  push    bp ;~ 17C5:CF64
cs=0x17c5;eip=0x00cf65; 	T(bp = sp;);	// 109784                  mov     bp, sp ;~ 17C5:CF65
cs=0x17c5;eip=0x00cf67; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 109785                  mov     ax, [bp+arg_4] ;~ 17C5:CF67
cs=0x17c5;eip=0x00cf6a; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 109786                  cmp     [bp+arg_0], ax ;~ 17C5:CF6A
cs=0x17c5;eip=0x00cf6d; 	J(JLE(loc_331a4));	// 109787                  jle     short loc_331A4 ;~ 17C5:CF6D
loc_3319f:
	// 6445 
cs=0x17c5;eip=0x00cf6f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 109790                  mov     ax, [bp+arg_4] ;~ 17C5:CF6F
cs=0x17c5;eip=0x00cf72; 	X(POP(bp));	// 109791                  pop     bp ;~ 17C5:CF72
cs=0x17c5;eip=0x00cf73; 	J(RETN(0));	// 109792                  retn ;~ 17C5:CF73
loc_331a4:
	// 6446 
cs=0x17c5;eip=0x00cf74; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109796                  mov     ax, [bp+arg_2] ;~ 17C5:CF74
cs=0x17c5;eip=0x00cf77; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 109797                  cmp     [bp+arg_0], ax ;~ 17C5:CF77
cs=0x17c5;eip=0x00cf7a; 	J(JL(loc_331b2));	// 109798                  jl      short loc_331B2 ;~ 17C5:CF7A
cs=0x17c5;eip=0x00cf7c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 109799                  mov     ax, [bp+arg_0] ;~ 17C5:CF7C
cs=0x17c5;eip=0x00cf7f; 	X(POP(bp));	// 109800                  pop     bp ;~ 17C5:CF7F
cs=0x17c5;eip=0x00cf80; 	J(RETN(0));	// 109801                  retn ;~ 17C5:CF80
loc_331b2:
	// 6447 
cs=0x17c5;eip=0x00cf82; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0x0C000));	// 109806                  cmp     [bp+arg_0], 0C000h ;~ 17C5:CF82
cs=0x17c5;eip=0x00cf87; 	J(JLE(loc_3319f));	// 109807                  jle     short loc_3319F ;~ 17C5:CF87
cs=0x17c5;eip=0x00cf89; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109808                  mov     ax, [bp+arg_2] ;~ 17C5:CF89
cs=0x17c5;eip=0x00cf8c; 	X(POP(bp));	// 109809                  pop     bp ;~ 17C5:CF8C
cs=0x17c5;eip=0x00cf8d; 	J(RETN(0));	// 109810                  retn ;~ 17C5:CF8D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3319f: 	goto loc_3319f;
        case m2c::kloc_331a4: 	goto loc_331a4;
        case m2c::kloc_331b2: 	goto loc_331b2;
        case m2c::ksub_33194: 	goto sub_33194;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_331be(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_331be:
    _begin:
#undef arg_0
#define arg_0 4
	// 109821 arg_0           = word ptr  4 ;~ 17C5:CF8E
#undef arg_2
#define arg_2 6
	// 109822 arg_2           = word ptr  6 ;~ 17C5:CF8E
#undef arg_4
#define arg_4 8
	// 109823 arg_4           = word ptr  8 ;~ 17C5:CF8E
cs=0x17c5;eip=0x00cf8e; 	X(PUSH(bp));	// 109825                  push    bp ;~ 17C5:CF8E
cs=0x17c5;eip=0x00cf8f; 	T(bp = sp;);	// 109826                  mov     bp, sp ;~ 17C5:CF8F
cs=0x17c5;eip=0x00cf91; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 109827                  mov     ax, [bp+arg_4] ;~ 17C5:CF91
cs=0x17c5;eip=0x00cf94; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 109828                  cmp     [bp+arg_0], ax ;~ 17C5:CF94
cs=0x17c5;eip=0x00cf97; 	J(JG(loc_331d4));	// 109829                  jg      short loc_331D4 ;~ 17C5:CF97
cs=0x17c5;eip=0x00cf99; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109830                  mov     ax, [bp+arg_2] ;~ 17C5:CF99
cs=0x17c5;eip=0x00cf9c; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 109831                  cmp     [bp+arg_0], ax ;~ 17C5:CF9C
cs=0x17c5;eip=0x00cf9f; 	J(JL(loc_331d4));	// 109832                  jl      short loc_331D4 ;~ 17C5:CF9F
cs=0x17c5;eip=0x00cfa1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 109833                  mov     ax, [bp+arg_0] ;~ 17C5:CFA1
loc_331d4:
	// 6448 
cs=0x17c5;eip=0x00cfa4; 	X(POP(bp));	// 109837                  pop     bp ;~ 17C5:CFA4
cs=0x17c5;eip=0x00cfa5; 	J(RETN(0));	// 109838                  retn ;~ 17C5:CFA5

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_331d4: 	goto loc_331d4;
        case m2c::ksub_331be: 	goto sub_331be;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_331d6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_331d6:
    _begin:
#undef var_4
#define var_4 -4
	// 109849 var_4           = word ptr -4 ;~ 17C5:CFA6
#undef var_2
#define var_2 -2
	// 109850 var_2           = word ptr -2 ;~ 17C5:CFA6
#undef arg_0
#define arg_0 4
	// 109851 arg_0           = word ptr  4 ;~ 17C5:CFA6
#undef arg_2
#define arg_2 6
	// 109852 arg_2           = word ptr  6 ;~ 17C5:CFA6
cs=0x17c5;eip=0x00cfa6; 	X(PUSH(bp));	// 109854                  push    bp ;~ 17C5:CFA6
cs=0x17c5;eip=0x00cfa7; 	T(bp = sp;);	// 109855                  mov     bp, sp ;~ 17C5:CFA7
cs=0x17c5;eip=0x00cfa9; 	T(SUB(sp, 4));	// 109856                  sub     sp, 4 ;~ 17C5:CFA9
cs=0x17c5;eip=0x00cfac; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 109857                  push    [bp+arg_0] ;~ 17C5:CFAC
cs=0x17c5;eip=0x00cfaf; 	J(CALL(sub_34dc0,0));	// 109858                  call    sub_34DC0 ;~ 17C5:CFAF
cs=0x17c5;eip=0x00cfb2; 	T(ADD(sp, 2));	// 109859                  add     sp, 2 ;~ 17C5:CFB2
cs=0x17c5;eip=0x00cfb5; 	X(MOV(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 109860                  mov     [bp+arg_0], ax ;~ 17C5:CFB5
cs=0x17c5;eip=0x00cfb8; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 109861                  push    [bp+arg_2] ;~ 17C5:CFB8
cs=0x17c5;eip=0x00cfbb; 	J(CALL(sub_34dc0,0));	// 109862                  call    sub_34DC0 ;~ 17C5:CFBB
cs=0x17c5;eip=0x00cfbe; 	T(ADD(sp, 2));	// 109863                  add     sp, 2 ;~ 17C5:CFBE
cs=0x17c5;eip=0x00cfc1; 	X(MOV(*(dw*)(raddr(ss,bp+arg_2)), ax));	// 109864                  mov     [bp+arg_2], ax ;~ 17C5:CFC1
cs=0x17c5;eip=0x00cfc4; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 109865                  cmp     [bp+arg_0], ax ;~ 17C5:CFC4
cs=0x17c5;eip=0x00cfc7; 	J(JLE(loc_33204));	// 109866                  jle     short loc_33204 ;~ 17C5:CFC7
cs=0x17c5;eip=0x00cfc9; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 109867                  mov     ax, [bp+arg_0] ;~ 17C5:CFC9
cs=0x17c5;eip=0x00cfcc; 	T(CWD);	// 109868                  cwd ;~ 17C5:CFCC
cs=0x17c5;eip=0x00cfcd; 	T(cx = ax;);	// 109869                  mov     cx, ax ;~ 17C5:CFCD
cs=0x17c5;eip=0x00cfcf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109870                  mov     ax, [bp+arg_2] ;~ 17C5:CFCF
cs=0x17c5;eip=0x00cfd2; 	J(JMP(loc_3320d));	// 109871                  jmp     short loc_3320D ;~ 17C5:CFD2
loc_33204:
	// 6449 
cs=0x17c5;eip=0x00cfd4; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 109875                  mov     ax, [bp+arg_2] ;~ 17C5:CFD4
cs=0x17c5;eip=0x00cfd7; 	T(CWD);	// 109876                  cwd ;~ 17C5:CFD7
cs=0x17c5;eip=0x00cfd8; 	T(cx = ax;);	// 109877                  mov     cx, ax ;~ 17C5:CFD8
cs=0x17c5;eip=0x00cfda; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 109878                  mov     ax, [bp+arg_0] ;~ 17C5:CFDA
loc_3320d:
	// 6450 
cs=0x17c5;eip=0x00cfdd; 	T(SAR(ax, 1));	// 109881                  sar     ax, 1 ;~ 17C5:CFDD
cs=0x17c5;eip=0x00cfdf; 	T(bx = dx;);	// 109882                  mov     bx, dx ;~ 17C5:CFDF
cs=0x17c5;eip=0x00cfe1; 	T(CWD);	// 109883                  cwd ;~ 17C5:CFE1
cs=0x17c5;eip=0x00cfe2; 	T(ADD(ax, cx));	// 109884                  add     ax, cx ;~ 17C5:CFE2
cs=0x17c5;eip=0x00cfe4; 	T(ADC(dx, bx));	// 109885                  adc     dx, bx ;~ 17C5:CFE4
cs=0x17c5;eip=0x00cfe6; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 109886                  mov     [bp+var_4], ax ;~ 17C5:CFE6
cs=0x17c5;eip=0x00cfe9; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), dx));	// 109887                  mov     [bp+var_2], dx ;~ 17C5:CFE9
cs=0x17c5;eip=0x00cfec; 	T(OR(dx, dx));	// 109888                  or      dx, dx ;~ 17C5:CFEC
cs=0x17c5;eip=0x00cfee; 	J(JL(loc_33231));	// 109889                  jl      short loc_33231 ;~ 17C5:CFEE
cs=0x17c5;eip=0x00cff0; 	J(JG(loc_33227));	// 109890                  jg      short loc_33227 ;~ 17C5:CFF0
cs=0x17c5;eip=0x00cff2; 	T(CMP(ax, 0x7FFF));	// 109891                  cmp     ax, 7FFFh ;~ 17C5:CFF2
cs=0x17c5;eip=0x00cff5; 	J(JBE(loc_33231));	// 109892                  jbe     short loc_33231 ;~ 17C5:CFF5
loc_33227:
	// 6451 
cs=0x17c5;eip=0x00cff7; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), 0x7FFF));	// 109895                  mov     [bp+var_4], 7FFFh ;~ 17C5:CFF7
cs=0x17c5;eip=0x00cffc; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 109896                  mov     [bp+var_2], 0 ;~ 17C5:CFFC
loc_33231:
	// 6452 
cs=0x17c5;eip=0x00d001; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 109900                  mov     ax, [bp+var_4] ;~ 17C5:D001
cs=0x17c5;eip=0x00d004; 	T(sp = bp;);	// 109901                  mov     sp, bp ;~ 17C5:D004
cs=0x17c5;eip=0x00d006; 	X(POP(bp));	// 109902                  pop     bp ;~ 17C5:D006
cs=0x17c5;eip=0x00d007; 	J(RETN(0));	// 109903                  retn ;~ 17C5:D007

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33204: 	goto loc_33204;
        case m2c::kloc_3320d: 	goto loc_3320d;
        case m2c::kloc_33227: 	goto loc_33227;
        case m2c::kloc_33231: 	goto loc_33231;
        case m2c::ksub_331d6: 	goto sub_331d6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33238(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33238:
    _begin:
#undef var_e
#define var_e -0x0E
	// 109914 var_E           = word ptr -0Eh ;~ 17C5:D008
#undef var_c
#define var_c -0x0C
	// 109915 var_C           = word ptr -0Ch ;~ 17C5:D008
#undef var_a
#define var_a -0x0A
	// 109916 var_A           = word ptr -0Ah ;~ 17C5:D008
#undef var_8
#define var_8 -8
	// 109917 var_8           = word ptr -8 ;~ 17C5:D008
#undef var_6
#define var_6 -6
	// 109918 var_6           = word ptr -6 ;~ 17C5:D008
#undef var_4
#define var_4 -4
	// 109919 var_4           = word ptr -4 ;~ 17C5:D008
#undef var_2
#define var_2 -2
	// 109920 var_2           = word ptr -2 ;~ 17C5:D008
#undef arg_0
#define arg_0 4
	// 109921 arg_0           = word ptr  4 ;~ 17C5:D008
#undef arg_2
#define arg_2 6
	// 109922 arg_2           = word ptr  6 ;~ 17C5:D008
cs=0x17c5;eip=0x00d008; 	X(PUSH(bp));	// 109924                  push    bp ;~ 17C5:D008
cs=0x17c5;eip=0x00d009; 	T(bp = sp;);	// 109925                  mov     bp, sp ;~ 17C5:D009
cs=0x17c5;eip=0x00d00b; 	T(SUB(sp, 0x0E));	// 109926                  sub     sp, 0Eh ;~ 17C5:D00B
cs=0x17c5;eip=0x00d00e; 	X(PUSH(si));	// 109927                  push    si ;~ 17C5:D00E
cs=0x17c5;eip=0x00d00f; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 109928                  cmp     [bp+arg_0], 0 ;~ 17C5:D00F
cs=0x17c5;eip=0x00d013; 	J(JNZ(loc_3325a));	// 109929                  jnz     short loc_3325A ;~ 17C5:D013
cs=0x17c5;eip=0x00d015; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 109930                  cmp     [bp+arg_2], 0 ;~ 17C5:D015
cs=0x17c5;eip=0x00d019; 	J(JLE(loc_33252));	// 109931                  jle     short loc_33252 ;~ 17C5:D019
cs=0x17c5;eip=0x00d01b; 	T(SUB(ax, ax));	// 109932                  sub     ax, ax ;~ 17C5:D01B
cs=0x17c5;eip=0x00d01d; 	X(POP(si));	// 109933                  pop     si ;~ 17C5:D01D
cs=0x17c5;eip=0x00d01e; 	T(sp = bp;);	// 109934                  mov     sp, bp ;~ 17C5:D01E
cs=0x17c5;eip=0x00d020; 	X(POP(bp));	// 109935                  pop     bp ;~ 17C5:D020
cs=0x17c5;eip=0x00d021; 	J(RETN(0));	// 109936                  retn ;~ 17C5:D021
loc_33252:
	// 6453 
cs=0x17c5;eip=0x00d022; 	T(ax = 0x8000;);	// 109940                  mov     ax, 8000h ;~ 17C5:D022
cs=0x17c5;eip=0x00d025; 	X(POP(si));	// 109941                  pop     si ;~ 17C5:D025
cs=0x17c5;eip=0x00d026; 	T(sp = bp;);	// 109942                  mov     sp, bp ;~ 17C5:D026
cs=0x17c5;eip=0x00d028; 	X(POP(bp));	// 109943                  pop     bp ;~ 17C5:D028
cs=0x17c5;eip=0x00d029; 	J(RETN(0));	// 109944                  retn ;~ 17C5:D029
loc_3325a:
	// 6454 
cs=0x17c5;eip=0x00d02a; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 109948                  cmp     [bp+arg_2], 0 ;~ 17C5:D02A
cs=0x17c5;eip=0x00d02e; 	J(JNZ(loc_33276));	// 109949                  jnz     short loc_33276 ;~ 17C5:D02E
cs=0x17c5;eip=0x00d030; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 109950                  cmp     [bp+arg_0], 0 ;~ 17C5:D030
cs=0x17c5;eip=0x00d034; 	J(JLE(loc_3326e));	// 109951                  jle     short loc_3326E ;~ 17C5:D034
cs=0x17c5;eip=0x00d036; 	T(ax = 0x4000;);	// 109952                  mov     ax, 4000h ;~ 17C5:D036
cs=0x17c5;eip=0x00d039; 	X(POP(si));	// 109953                  pop     si ;~ 17C5:D039
cs=0x17c5;eip=0x00d03a; 	T(sp = bp;);	// 109954                  mov     sp, bp ;~ 17C5:D03A
cs=0x17c5;eip=0x00d03c; 	X(POP(bp));	// 109955                  pop     bp ;~ 17C5:D03C
cs=0x17c5;eip=0x00d03d; 	J(RETN(0));	// 109956                  retn ;~ 17C5:D03D
loc_3326e:
	// 6455 
cs=0x17c5;eip=0x00d03e; 	T(ax = 0x0C000;);	// 109960                  mov     ax, 0C000h ;~ 17C5:D03E
cs=0x17c5;eip=0x00d041; 	X(POP(si));	// 109961                  pop     si ;~ 17C5:D041
cs=0x17c5;eip=0x00d042; 	T(sp = bp;);	// 109962                  mov     sp, bp ;~ 17C5:D042
cs=0x17c5;eip=0x00d044; 	X(POP(bp));	// 109963                  pop     bp ;~ 17C5:D044
cs=0x17c5;eip=0x00d045; 	J(RETN(0));	// 109964                  retn ;~ 17C5:D045
loc_33276:
	// 6456 
cs=0x17c5;eip=0x00d046; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 109968                  push    [bp+arg_2] ;~ 17C5:D046
cs=0x17c5;eip=0x00d049; 	J(CALL(sub_34dc0,0));	// 109969                  call    sub_34DC0 ;~ 17C5:D049
cs=0x17c5;eip=0x00d04c; 	T(ADD(sp, 2));	// 109970                  add     sp, 2 ;~ 17C5:D04C
cs=0x17c5;eip=0x00d04f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 109971                  push    [bp+arg_0] ;~ 17C5:D04F
cs=0x17c5;eip=0x00d052; 	T(si = ax;);	// 109972                  mov     si, ax ;~ 17C5:D052
cs=0x17c5;eip=0x00d054; 	J(CALL(sub_34dc0,0));	// 109973                  call    sub_34DC0 ;~ 17C5:D054
cs=0x17c5;eip=0x00d057; 	T(ADD(sp, 2));	// 109974                  add     sp, 2 ;~ 17C5:D057
cs=0x17c5;eip=0x00d05a; 	T(CMP(ax, si));	// 109975                  cmp     ax, si ;~ 17C5:D05A
cs=0x17c5;eip=0x00d05c; 	J(JLE(loc_332bc));	// 109976                  jle     short loc_332BC ;~ 17C5:D05C
cs=0x17c5;eip=0x00d05e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 109977                  push    [bp+arg_2] ;~ 17C5:D05E
cs=0x17c5;eip=0x00d061; 	J(CALL(sub_34dc0,0));	// 109978                  call    sub_34DC0 ;~ 17C5:D061
cs=0x17c5;eip=0x00d064; 	T(ADD(sp, 2));	// 109979                  add     sp, 2 ;~ 17C5:D064
cs=0x17c5;eip=0x00d067; 	T(CWD);	// 109980                  cwd ;~ 17C5:D067
cs=0x17c5;eip=0x00d068; 	T(cl = 0x0E;);	// 109981                  mov     cl, 0Eh ;~ 17C5:D068
loc_3329a:
	// 6457 
cs=0x17c5;eip=0x00d06a; 	T(SHL(ax, 1));	// 109984                  shl     ax, 1 ;~ 17C5:D06A
cs=0x17c5;eip=0x00d06c; 	T(RCL(dx, 1));	// 109985                  rcl     dx, 1 ;~ 17C5:D06C
cs=0x17c5;eip=0x00d06e; 	T(DEC(cl));	// 109986                  dec     cl ;~ 17C5:D06E
cs=0x17c5;eip=0x00d070; 	J(JNZ(loc_3329a));	// 109987                  jnz     short loc_3329A ;~ 17C5:D070
cs=0x17c5;eip=0x00d072; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 109988                  mov     [bp+var_8], ax ;~ 17C5:D072
cs=0x17c5;eip=0x00d075; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), dx));	// 109989                  mov     [bp+var_6], dx ;~ 17C5:D075
cs=0x17c5;eip=0x00d078; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 109990                  push    [bp+arg_0] ;~ 17C5:D078
cs=0x17c5;eip=0x00d07b; 	J(CALL(sub_34dc0,0));	// 109991                  call    sub_34DC0 ;~ 17C5:D07B
cs=0x17c5;eip=0x00d07e; 	T(ADD(sp, 2));	// 109992                  add     sp, 2 ;~ 17C5:D07E
cs=0x17c5;eip=0x00d081; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 109993                  mov     [bp+var_A], ax ;~ 17C5:D081
cs=0x17c5;eip=0x00d084; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), 1));	// 109994                  mov     [bp+var_C], 1 ;~ 17C5:D084
cs=0x17c5;eip=0x00d089; 	J(JMP(loc_332e7));	// 109995                  jmp     short loc_332E7 ;~ 17C5:D089
loc_332bc:
	// 6458 
cs=0x17c5;eip=0x00d08c; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 110000                  push    [bp+arg_0] ;~ 17C5:D08C
cs=0x17c5;eip=0x00d08f; 	J(CALL(sub_34dc0,0));	// 110001                  call    sub_34DC0 ;~ 17C5:D08F
cs=0x17c5;eip=0x00d092; 	T(ADD(sp, 2));	// 110002                  add     sp, 2 ;~ 17C5:D092
cs=0x17c5;eip=0x00d095; 	T(CWD);	// 110003                  cwd ;~ 17C5:D095
cs=0x17c5;eip=0x00d096; 	T(cl = 0x0E;);	// 110004                  mov     cl, 0Eh ;~ 17C5:D096
loc_332c8:
	// 6459 
cs=0x17c5;eip=0x00d098; 	T(SHL(ax, 1));	// 110007                  shl     ax, 1 ;~ 17C5:D098
cs=0x17c5;eip=0x00d09a; 	T(RCL(dx, 1));	// 110008                  rcl     dx, 1 ;~ 17C5:D09A
cs=0x17c5;eip=0x00d09c; 	T(DEC(cl));	// 110009                  dec     cl ;~ 17C5:D09C
cs=0x17c5;eip=0x00d09e; 	J(JNZ(loc_332c8));	// 110010                  jnz     short loc_332C8 ;~ 17C5:D09E
cs=0x17c5;eip=0x00d0a0; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 110011                  mov     [bp+var_8], ax ;~ 17C5:D0A0
cs=0x17c5;eip=0x00d0a3; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), dx));	// 110012                  mov     [bp+var_6], dx ;~ 17C5:D0A3
cs=0x17c5;eip=0x00d0a6; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 110013                  push    [bp+arg_2] ;~ 17C5:D0A6
cs=0x17c5;eip=0x00d0a9; 	J(CALL(sub_34dc0,0));	// 110014                  call    sub_34DC0 ;~ 17C5:D0A9
cs=0x17c5;eip=0x00d0ac; 	T(ADD(sp, 2));	// 110015                  add     sp, 2 ;~ 17C5:D0AC
cs=0x17c5;eip=0x00d0af; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 110016                  mov     [bp+var_A], ax ;~ 17C5:D0AF
cs=0x17c5;eip=0x00d0b2; 	X(MOV(*(dw*)(raddr(ss,bp+var_c)), 0));	// 110017                  mov     [bp+var_C], 0 ;~ 17C5:D0B2
loc_332e7:
	// 6460 
cs=0x17c5;eip=0x00d0b7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_a))));	// 110020                  mov     ax, [bp+var_A] ;~ 17C5:D0B7
cs=0x17c5;eip=0x00d0ba; 	T(CWD);	// 110021                  cwd ;~ 17C5:D0BA
cs=0x17c5;eip=0x00d0bb; 	X(PUSH(dx));	// 110022                  push    dx ;~ 17C5:D0BB
cs=0x17c5;eip=0x00d0bc; 	X(PUSH(ax));	// 110023                  push    ax ;~ 17C5:D0BC
cs=0x17c5;eip=0x00d0bd; 	X(PUSH(*(dw*)(raddr(ss,bp+var_6))));	// 110024                  push    [bp+var_6] ;~ 17C5:D0BD
cs=0x17c5;eip=0x00d0c0; 	X(PUSH(*(dw*)(raddr(ss,bp+var_8))));	// 110025                  push    [bp+var_8] ;~ 17C5:D0C0
cs=0x17c5;eip=0x00d0c3; 	J(CALL(sub_34e44,0));	// 110026                  call    sub_34E44 ;~ 17C5:D0C3
cs=0x17c5;eip=0x00d0c6; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 110027                  mov     [bp+var_E], ax ;~ 17C5:D0C6
cs=0x17c5;eip=0x00d0c9; 	T(CWD);	// 110028                  cwd ;~ 17C5:D0C9
cs=0x17c5;eip=0x00d0ca; 	X(PUSH(dx));	// 110029                  push    dx ;~ 17C5:D0CA
cs=0x17c5;eip=0x00d0cb; 	X(PUSH(ax));	// 110030                  push    ax ;~ 17C5:D0CB
cs=0x17c5;eip=0x00d0cc; 	T(ax = 0x0B00;);	// 110031                  mov     ax, 0B00h ;~ 17C5:D0CC
cs=0x17c5;eip=0x00d0cf; 	T(CWD);	// 110032                  cwd ;~ 17C5:D0CF
cs=0x17c5;eip=0x00d0d0; 	X(PUSH(dx));	// 110033                  push    dx ;~ 17C5:D0D0
cs=0x17c5;eip=0x00d0d1; 	X(PUSH(ax));	// 110034                  push    ax ;~ 17C5:D0D1
cs=0x17c5;eip=0x00d0d2; 	T(ax = 0x1333;);	// 110035                  mov     ax, 1333h ;~ 17C5:D0D2
cs=0x17c5;eip=0x00d0d5; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_e))));	// 110036                  sub     ax, [bp+var_E] ;~ 17C5:D0D5
cs=0x17c5;eip=0x00d0d8; 	X(PUSH(ax));	// 110037                  push    ax ;~ 17C5:D0D8
cs=0x17c5;eip=0x00d0d9; 	J(CALL(sub_34dc0,0));	// 110038                  call    sub_34DC0 ;~ 17C5:D0D9
cs=0x17c5;eip=0x00d0dc; 	T(ADD(sp, 2));	// 110039                  add     sp, 2 ;~ 17C5:D0DC
cs=0x17c5;eip=0x00d0df; 	T(CWD);	// 110040                  cwd ;~ 17C5:D0DF
cs=0x17c5;eip=0x00d0e0; 	X(PUSH(dx));	// 110041                  push    dx ;~ 17C5:D0E0
cs=0x17c5;eip=0x00d0e1; 	X(PUSH(ax));	// 110042                  push    ax ;~ 17C5:D0E1
cs=0x17c5;eip=0x00d0e2; 	J(CALL(sub_34ee0,0));	// 110043                  call    sub_34EE0 ;~ 17C5:D0E2
cs=0x17c5;eip=0x00d0e5; 	T(cl = 0x0E;);	// 110044                  mov     cl, 0Eh ;~ 17C5:D0E5
loc_33317:
	// 6461 
cs=0x17c5;eip=0x00d0e7; 	T(SAR(dx, 1));	// 110047                  sar     dx, 1 ;~ 17C5:D0E7
cs=0x17c5;eip=0x00d0e9; 	T(RCR(ax, 1));	// 110048                  rcr     ax, 1 ;~ 17C5:D0E9
cs=0x17c5;eip=0x00d0eb; 	T(DEC(cl));	// 110049                  dec     cl ;~ 17C5:D0EB
cs=0x17c5;eip=0x00d0ed; 	J(JNZ(loc_33317));	// 110050                  jnz     short loc_33317 ;~ 17C5:D0ED
cs=0x17c5;eip=0x00d0ef; 	T(SUB(ax, 0x2800));	// 110051                  sub     ax, 2800h ;~ 17C5:D0EF
cs=0x17c5;eip=0x00d0f2; 	T(SBB(dx, 0));	// 110052                  sbb     dx, 0 ;~ 17C5:D0F2
cs=0x17c5;eip=0x00d0f5; 	T(NEG(ax));	// 110053                  neg     ax ;~ 17C5:D0F5
cs=0x17c5;eip=0x00d0f7; 	T(ADC(dx, 0));	// 110054                  adc     dx, 0 ;~ 17C5:D0F7
cs=0x17c5;eip=0x00d0fa; 	T(NEG(dx));	// 110055                  neg     dx ;~ 17C5:D0FA
cs=0x17c5;eip=0x00d0fc; 	X(PUSH(dx));	// 110056                  push    dx ;~ 17C5:D0FC
cs=0x17c5;eip=0x00d0fd; 	X(PUSH(ax));	// 110057                  push    ax ;~ 17C5:D0FD
cs=0x17c5;eip=0x00d0fe; 	J(CALL(sub_34ee0,0));	// 110058                  call    sub_34EE0 ;~ 17C5:D0FE
cs=0x17c5;eip=0x00d101; 	T(cl = 0x0E;);	// 110059                  mov     cl, 0Eh ;~ 17C5:D101
loc_33333:
	// 6462 
cs=0x17c5;eip=0x00d103; 	T(SAR(dx, 1));	// 110062                  sar     dx, 1 ;~ 17C5:D103
cs=0x17c5;eip=0x00d105; 	T(RCR(ax, 1));	// 110063                  rcr     ax, 1 ;~ 17C5:D105
cs=0x17c5;eip=0x00d107; 	T(DEC(cl));	// 110064                  dec     cl ;~ 17C5:D107
cs=0x17c5;eip=0x00d109; 	J(JNZ(loc_33333));	// 110065                  jnz     short loc_33333 ;~ 17C5:D109
cs=0x17c5;eip=0x00d10b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 110066                  mov     [bp+var_2], ax ;~ 17C5:D10B
cs=0x17c5;eip=0x00d10e; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 110067                  cmp     [bp+arg_0], 0 ;~ 17C5:D10E
cs=0x17c5;eip=0x00d112; 	J(JLE(loc_33372));	// 110068                  jle     short loc_33372 ;~ 17C5:D112
cs=0x17c5;eip=0x00d114; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 110069                  cmp     [bp+arg_2], 0 ;~ 17C5:D114
cs=0x17c5;eip=0x00d118; 	J(JLE(loc_3335e));	// 110070                  jle     short loc_3335E ;~ 17C5:D118
cs=0x17c5;eip=0x00d11a; 	T(CMP(*(dw*)(raddr(ss,bp+var_c)), 0));	// 110071                  cmp     [bp+var_C], 0 ;~ 17C5:D11A
cs=0x17c5;eip=0x00d11e; 	J(JZ(loc_33358));	// 110072                  jz      short loc_33358 ;~ 17C5:D11E
cs=0x17c5;eip=0x00d120; 	T(ax = 0x4000;);	// 110073                  mov     ax, 4000h ;~ 17C5:D120
loc_33353:
	// 6463 
cs=0x17c5;eip=0x00d123; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_2))));	// 110077                  sub     ax, [bp+var_2] ;~ 17C5:D123
cs=0x17c5;eip=0x00d126; 	J(JMP(loc_333a0));	// 110078                  jmp     short loc_333A0 ;~ 17C5:D126
loc_33358:
	// 6464 
cs=0x17c5;eip=0x00d128; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 110082                  mov     ax, [bp+var_2] ;~ 17C5:D128
cs=0x17c5;eip=0x00d12b; 	J(JMP(loc_333a0));	// 110083                  jmp     short loc_333A0 ;~ 17C5:D12B
loc_3335e:
	// 6465 
cs=0x17c5;eip=0x00d12e; 	T(CMP(*(dw*)(raddr(ss,bp+var_c)), 0));	// 110088                  cmp     [bp+var_C], 0 ;~ 17C5:D12E
cs=0x17c5;eip=0x00d132; 	J(JZ(loc_3336c));	// 110089                  jz      short loc_3336C ;~ 17C5:D132
cs=0x17c5;eip=0x00d134; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 110090                  mov     ax, [bp+var_2] ;~ 17C5:D134
cs=0x17c5;eip=0x00d137; 	T(ADD(ah, 0x40));	// 110091                  add     ah, 40h ; '@' ;~ 17C5:D137
cs=0x17c5;eip=0x00d13a; 	J(JMP(loc_333a0));	// 110092                  jmp     short loc_333A0 ;~ 17C5:D13A
loc_3336c:
	// 6466 
cs=0x17c5;eip=0x00d13c; 	T(ax = 0x8000;);	// 110096                  mov     ax, 8000h ;~ 17C5:D13C
cs=0x17c5;eip=0x00d13f; 	J(JMP(loc_33353));	// 110097                  jmp     short loc_33353 ;~ 17C5:D13F
loc_33372:
	// 6467 
cs=0x17c5;eip=0x00d142; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 110102                  cmp     [bp+arg_2], 0 ;~ 17C5:D142
cs=0x17c5;eip=0x00d146; 	J(JLE(loc_3338e));	// 110103                  jle     short loc_3338E ;~ 17C5:D146
cs=0x17c5;eip=0x00d148; 	T(CMP(*(dw*)(raddr(ss,bp+var_c)), 0));	// 110104                  cmp     [bp+var_C], 0 ;~ 17C5:D148
cs=0x17c5;eip=0x00d14c; 	J(JZ(loc_33386));	// 110105                  jz      short loc_33386 ;~ 17C5:D14C
cs=0x17c5;eip=0x00d14e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 110106                  mov     ax, [bp+var_2] ;~ 17C5:D14E
cs=0x17c5;eip=0x00d151; 	T(ADD(ah, 0x0C0));	// 110107                  add     ah, 0C0h ;~ 17C5:D151
cs=0x17c5;eip=0x00d154; 	J(JMP(loc_333a0));	// 110108                  jmp     short loc_333A0 ;~ 17C5:D154
loc_33386:
	// 6468 
cs=0x17c5;eip=0x00d156; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 110112                  mov     ax, [bp+var_2] ;~ 17C5:D156
cs=0x17c5;eip=0x00d159; 	T(NEG(ax));	// 110113                  neg     ax ;~ 17C5:D159
cs=0x17c5;eip=0x00d15b; 	J(JMP(loc_333a0));	// 110114                  jmp     short loc_333A0 ;~ 17C5:D15B
loc_3338e:
	// 6469 
cs=0x17c5;eip=0x00d15e; 	T(CMP(*(dw*)(raddr(ss,bp+var_c)), 0));	// 110119                  cmp     [bp+var_C], 0 ;~ 17C5:D15E
cs=0x17c5;eip=0x00d162; 	J(JZ(loc_3339a));	// 110120                  jz      short loc_3339A ;~ 17C5:D162
cs=0x17c5;eip=0x00d164; 	T(ax = 0x0C000;);	// 110121                  mov     ax, 0C000h ;~ 17C5:D164
cs=0x17c5;eip=0x00d167; 	J(JMP(loc_33353));	// 110122                  jmp     short loc_33353 ;~ 17C5:D167
loc_3339a:
	// 6470 
cs=0x17c5;eip=0x00d16a; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 110127                  mov     ax, [bp+var_2] ;~ 17C5:D16A
cs=0x17c5;eip=0x00d16d; 	T(ADD(ah, 0x80));	// 110128                  add     ah, 80h ;~ 17C5:D16D
loc_333a0:
	// 6471 
cs=0x17c5;eip=0x00d170; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 110132                  mov     [bp+var_4], ax ;~ 17C5:D170
cs=0x17c5;eip=0x00d173; 	X(POP(si));	// 110133                  pop     si ;~ 17C5:D173
cs=0x17c5;eip=0x00d174; 	T(sp = bp;);	// 110134                  mov     sp, bp ;~ 17C5:D174
cs=0x17c5;eip=0x00d176; 	X(POP(bp));	// 110135                  pop     bp ;~ 17C5:D176
cs=0x17c5;eip=0x00d177; 	J(RETN(0));	// 110136                  retn ;~ 17C5:D177

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33252: 	goto loc_33252;
        case m2c::kloc_3325a: 	goto loc_3325a;
        case m2c::kloc_3326e: 	goto loc_3326e;
        case m2c::kloc_33276: 	goto loc_33276;
        case m2c::kloc_3329a: 	goto loc_3329a;
        case m2c::kloc_332bc: 	goto loc_332bc;
        case m2c::kloc_332c8: 	goto loc_332c8;
        case m2c::kloc_332e7: 	goto loc_332e7;
        case m2c::kloc_33317: 	goto loc_33317;
        case m2c::kloc_33333: 	goto loc_33333;
        case m2c::kloc_33353: 	goto loc_33353;
        case m2c::kloc_33358: 	goto loc_33358;
        case m2c::kloc_3335e: 	goto loc_3335e;
        case m2c::kloc_3336c: 	goto loc_3336c;
        case m2c::kloc_33372: 	goto loc_33372;
        case m2c::kloc_33386: 	goto loc_33386;
        case m2c::kloc_3338e: 	goto loc_3338e;
        case m2c::kloc_3339a: 	goto loc_3339a;
        case m2c::kloc_333a0: 	goto loc_333a0;
        case m2c::ksub_33238: 	goto sub_33238;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_333a8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_333a8:
    _begin:
#undef arg_0
#define arg_0 4
	// 110147 arg_0           = word ptr  4 ;~ 17C5:D178
#undef arg_2
#define arg_2 6
	// 110148 arg_2           = word ptr  6 ;~ 17C5:D178
cs=0x17c5;eip=0x00d178; 	X(PUSH(bp));	// 110150                  push    bp ;~ 17C5:D178
cs=0x17c5;eip=0x00d179; 	T(bp = sp;);	// 110151                  mov     bp, sp ;~ 17C5:D179
cs=0x17c5;eip=0x00d17b; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 110152                  push    [bp+arg_2] ;~ 17C5:D17B
cs=0x17c5;eip=0x00d17e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 110153                  push    [bp+arg_0] ;~ 17C5:D17E
cs=0x17c5;eip=0x00d181; 	J(CALL(sub_29dc6,0));	// 110154                  call    sub_29DC6 ;~ 17C5:D181
cs=0x17c5;eip=0x00d184; 	T(ADD(sp, 2));	// 110155                  add     sp, 2 ;~ 17C5:D184
cs=0x17c5;eip=0x00d187; 	X(PUSH(ax));	// 110156                  push    ax ;~ 17C5:D187
cs=0x17c5;eip=0x00d188; 	J(CALL(sub_29d5f,0));	// 110157                  call    sub_29D5F ;~ 17C5:D188
cs=0x17c5;eip=0x00d18b; 	T(ADD(sp, 4));	// 110158                  add     sp, 4 ;~ 17C5:D18B
cs=0x17c5;eip=0x00d18e; 	X(POP(bp));	// 110159                  pop     bp ;~ 17C5:D18E
cs=0x17c5;eip=0x00d18f; 	J(RETN(0));	// 110160                  retn ;~ 17C5:D18F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_333a8: 	goto sub_333a8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_333c0(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_333c0:
    _begin:
#undef arg_0
#define arg_0 4
	// 110171 arg_0           = word ptr  4 ;~ 17C5:D190
#undef arg_2
#define arg_2 6
	// 110172 arg_2           = word ptr  6 ;~ 17C5:D190
cs=0x17c5;eip=0x00d190; 	X(PUSH(bp));	// 110174                  push    bp ;~ 17C5:D190
cs=0x17c5;eip=0x00d191; 	T(bp = sp;);	// 110175                  mov     bp, sp ;~ 17C5:D191
cs=0x17c5;eip=0x00d193; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 110176                  push    [bp+arg_2] ;~ 17C5:D193
cs=0x17c5;eip=0x00d196; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 110177                  mov     ax, [bp+arg_0] ;~ 17C5:D196
cs=0x17c5;eip=0x00d199; 	T(ADD(ah, 0x40));	// 110178                  add     ah, 40h ; '@' ;~ 17C5:D199
cs=0x17c5;eip=0x00d19c; 	X(PUSH(ax));	// 110179                  push    ax ;~ 17C5:D19C
cs=0x17c5;eip=0x00d19d; 	J(CALL(sub_333a8,0));	// 110180                  call    sub_333A8 ;~ 17C5:D19D
cs=0x17c5;eip=0x00d1a0; 	T(ADD(sp, 4));	// 110181                  add     sp, 4 ;~ 17C5:D1A0
cs=0x17c5;eip=0x00d1a3; 	X(POP(bp));	// 110182                  pop     bp ;~ 17C5:D1A3
cs=0x17c5;eip=0x00d1a4; 	J(RETN(0));	// 110183                  retn ;~ 17C5:D1A4

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_333c0: 	goto sub_333c0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_d1a6_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_d1a6_proc:
    _begin:
cs=0x17c5;eip=0x00d1a6; 	X(PUSH(bp));	// 110188                  push    bp ;~ 17C5:D1A6
cs=0x17c5;eip=0x00d1a7; 	T(bp = sp;);	// 110189                  mov     bp, sp ;~ 17C5:D1A7
cs=0x17c5;eip=0x00d1a9; 	T(CMP(*(raddr(ss,bp+4)), 0x80));	// 110190                  cmp     byte ptr [bp+4], 80h ;~ 17C5:D1A9
cs=0x17c5;eip=0x00d1ad; 	J(JNC(loc_333ea));	// 110191                  jnb     short loc_333EA ;~ 17C5:D1AD
cs=0x17c5;eip=0x00d1af; 	T(MOV(al, *(raddr(ss,bp+4))));	// 110192                  mov     al, [bp+4] ;~ 17C5:D1AF
cs=0x17c5;eip=0x00d1b2; 	T(SUB(ah, ah));	// 110193                  sub     ah, ah ;~ 17C5:D1B2
cs=0x17c5;eip=0x00d1b4; 	X(MOV(*(dw*)(raddr(ss,bp+4)), ax));	// 110194                  mov     [bp+4], ax ;~ 17C5:D1B4
cs=0x17c5;eip=0x00d1b7; 	X(POP(bp));	// 110195                  pop     bp ;~ 17C5:D1B7
cs=0x17c5;eip=0x00d1b8; 	J(RETN(0));	// 110196                  retn ;~ 17C5:D1B8
loc_333ea:
	// 6472 
cs=0x17c5;eip=0x00d1ba; 	T(MOV(al, *(raddr(ss,bp+4))));	// 110201                  mov     al, [bp+4] ;~ 17C5:D1BA
cs=0x17c5;eip=0x00d1bd; 	T(SUB(ah, ah));	// 110202                  sub     ah, ah ;~ 17C5:D1BD
cs=0x17c5;eip=0x00d1bf; 	T(SUB(ax, 0x100));	// 110203                  sub     ax, 100h ;~ 17C5:D1BF
cs=0x17c5;eip=0x00d1c2; 	X(MOV(*(dw*)(raddr(ss,bp+4)), ax));	// 110204                  mov     [bp+4], ax ;~ 17C5:D1C2
cs=0x17c5;eip=0x00d1c5; 	X(POP(bp));	// 110205                  pop     bp ;~ 17C5:D1C5
cs=0x17c5;eip=0x00d1c6; 	J(RETN(0));	// 110206                  retn ;~ 17C5:D1C6

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_333ea: 	goto loc_333ea;
        case m2c::kseg2623_d1a6_proc: 	goto seg2623_d1a6_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_333f8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_333f8:
    _begin:
#undef arg_0
#define arg_0 4
	// 110217 arg_0           = word ptr  4 ;~ 17C5:D1C8
cs=0x17c5;eip=0x00d1c8; 	X(PUSH(bp));	// 110219                  push    bp ;~ 17C5:D1C8
cs=0x17c5;eip=0x00d1c9; 	T(bp = sp;);	// 110220                  mov     bp, sp ;~ 17C5:D1C9
cs=0x17c5;eip=0x00d1cb; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 110221                  cmp     [bp+arg_0], 0 ;~ 17C5:D1CB
cs=0x17c5;eip=0x00d1cf; 	J(JNZ(loc_33406));	// 110222                  jnz     short loc_33406 ;~ 17C5:D1CF
cs=0x17c5;eip=0x00d1d1; 	T(SUB(ax, ax));	// 110223                  sub     ax, ax ;~ 17C5:D1D1
cs=0x17c5;eip=0x00d1d3; 	X(POP(bp));	// 110224                  pop     bp ;~ 17C5:D1D3
cs=0x17c5;eip=0x00d1d4; 	J(RETN(0));	// 110225                  retn ;~ 17C5:D1D4
loc_33406:
	// 6473 
cs=0x17c5;eip=0x00d1d6; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 110230                  cmp     [bp+arg_0], 0 ;~ 17C5:D1D6
cs=0x17c5;eip=0x00d1da; 	J(JLE(loc_33412));	// 110231                  jle     short loc_33412 ;~ 17C5:D1DA
cs=0x17c5;eip=0x00d1dc; 	T(ax = 1;);	// 110232                  mov     ax, 1 ;~ 17C5:D1DC
cs=0x17c5;eip=0x00d1df; 	X(POP(bp));	// 110233                  pop     bp ;~ 17C5:D1DF
cs=0x17c5;eip=0x00d1e0; 	J(RETN(0));	// 110234                  retn ;~ 17C5:D1E0
loc_33412:
	// 6474 
cs=0x17c5;eip=0x00d1e2; 	T(ax = 0x0FFFF;);	// 110239                  mov     ax, 0FFFFh ;~ 17C5:D1E2
cs=0x17c5;eip=0x00d1e5; 	X(POP(bp));	// 110240                  pop     bp ;~ 17C5:D1E5
cs=0x17c5;eip=0x00d1e6; 	J(RETN(0));	// 110241                  retn ;~ 17C5:D1E6

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33406: 	goto loc_33406;
        case m2c::kloc_33412: 	goto loc_33412;
        case m2c::ksub_333f8: 	goto sub_333f8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_d1e8_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_d1e8_proc:
    _begin:
loc_33418:
	// 6475 
cs=0x17c5;eip=0x00d1e8; 	T(CMP(word_492ee, 0));	// 110248                  cmp     word_492EE, 0 ;~ 17C5:D1E8
cs=0x17c5;eip=0x00d1ed; 	J(JNZ(loc_33425));	// 110249                  jnz     short loc_33425 ;~ 17C5:D1ED
cs=0x17c5;eip=0x00d1ef; 	J(CALL(sub_2a10c,0));	// 110250                  call    sub_2A10C ;~ 17C5:D1EF
cs=0x17c5;eip=0x00d1f2; 	X(word_4ef88 = ax;);	// 110251                  mov     ds:word_4EF88, ax ;~ 17C5:D1F2
loc_33425:
	// 6476 
cs=0x17c5;eip=0x00d1f5; 	X(PUSH(word_4ef88));	// 110254                  push    ds:word_4EF88 ;~ 17C5:D1F5
cs=0x17c5;eip=0x00d1f9; 	J(CALL(sub_34df8,0));	// 110255                  call    sub_34DF8 ;~ 17C5:D1F9
cs=0x17c5;eip=0x00d1fc; 	T(ADD(sp, 2));	// 110256                  add     sp, 2 ;~ 17C5:D1FC
cs=0x17c5;eip=0x00d1ff; 	J(RETN(0));	// 110257                  retn ;~ 17C5:D1FF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33418: 	goto loc_33418;
        case m2c::kloc_33425: 	goto loc_33425;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33430(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33430:
    _begin:
#undef arg_0
#define arg_0 4
	// 110266 arg_0           = word ptr  4 ;~ 17C5:D200
cs=0x17c5;eip=0x00d200; 	X(PUSH(bp));	// 110268                  push    bp ;~ 17C5:D200
cs=0x17c5;eip=0x00d201; 	T(bp = sp;);	// 110269                  mov     bp, sp ;~ 17C5:D201
cs=0x17c5;eip=0x00d203; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 110270                  mov     ax, [bp+arg_0] ;~ 17C5:D203
cs=0x17c5;eip=0x00d206; 	T(CWD);	// 110271                  cwd ;~ 17C5:D206
cs=0x17c5;eip=0x00d207; 	X(PUSH(dx));	// 110272                  push    dx ;~ 17C5:D207
cs=0x17c5;eip=0x00d208; 	X(PUSH(ax));	// 110273                  push    ax ;~ 17C5:D208
cs=0x17c5;eip=0x00d209; 	J(CALL(sub_34e0a,0));	// 110274                  call    sub_34E0A ;~ 17C5:D209
cs=0x17c5;eip=0x00d20c; 	T(CWD);	// 110275                  cwd ;~ 17C5:D20C
cs=0x17c5;eip=0x00d20d; 	X(PUSH(dx));	// 110276                  push    dx ;~ 17C5:D20D
cs=0x17c5;eip=0x00d20e; 	X(PUSH(ax));	// 110277                  push    ax ;~ 17C5:D20E
cs=0x17c5;eip=0x00d20f; 	J(CALL(sub_34ee0,0));	// 110278                  call    sub_34EE0 ;~ 17C5:D20F
cs=0x17c5;eip=0x00d212; 	T(cl = 0x0F;);	// 110279                  mov     cl, 0Fh ;~ 17C5:D212
loc_33444:
	// 6477 
cs=0x17c5;eip=0x00d214; 	T(SAR(dx, 1));	// 110282                  sar     dx, 1 ;~ 17C5:D214
cs=0x17c5;eip=0x00d216; 	T(RCR(ax, 1));	// 110283                  rcr     ax, 1 ;~ 17C5:D216
cs=0x17c5;eip=0x00d218; 	T(DEC(cl));	// 110284                  dec     cl ;~ 17C5:D218
cs=0x17c5;eip=0x00d21a; 	J(JNZ(loc_33444));	// 110285                  jnz     short loc_33444 ;~ 17C5:D21A
cs=0x17c5;eip=0x00d21c; 	X(POP(bp));	// 110286                  pop     bp ;~ 17C5:D21C
cs=0x17c5;eip=0x00d21d; 	J(RETN(0));	// 110287                  retn ;~ 17C5:D21D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33444: 	goto loc_33444;
        case m2c::ksub_33430: 	goto sub_33430;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_3344e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_3344e:
    _begin:
#undef var_2
#define var_2 -2
	// 110298 var_2           = word ptr -2 ;~ 17C5:D21E
#undef arg_0
#define arg_0 4
	// 110299 arg_0           = word ptr  4 ;~ 17C5:D21E
cs=0x17c5;eip=0x00d21e; 	X(PUSH(bp));	// 110301                  push    bp ;~ 17C5:D21E
cs=0x17c5;eip=0x00d21f; 	T(bp = sp;);	// 110302                  mov     bp, sp ;~ 17C5:D21F
cs=0x17c5;eip=0x00d221; 	T(SUB(sp, 2));	// 110303                  sub     sp, 2 ;~ 17C5:D221
cs=0x17c5;eip=0x00d224; 	T(CMP(word_492ee, 0));	// 110304                  cmp     word_492EE, 0 ;~ 17C5:D224
cs=0x17c5;eip=0x00d229; 	J(JZ(loc_33462));	// 110305                  jz      short loc_33462 ;~ 17C5:D229
cs=0x17c5;eip=0x00d22b; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 110306                  mov     [bp+var_2], 0 ;~ 17C5:D22B
cs=0x17c5;eip=0x00d230; 	J(JMP(loc_33488));	// 110307                  jmp     short loc_33488 ;~ 17C5:D230
loc_33462:
	// 6478 
cs=0x17c5;eip=0x00d232; 	T(LES(bx, dword_528d6));	// 110311                  les     bx, ds:dword_528D6 ;~ 17C5:D232
cs=0x17c5;eip=0x00d236; 	T(CMP(*(dw*)(raddr(es,bx+0x72)), 0));	// 110313                  cmp     word ptr es:[bx+72h], 0 ;~ 17C5:D236
cs=0x17c5;eip=0x00d23b; 	J(JZ(loc_3347a));	// 110314                  jz      short loc_3347A ;~ 17C5:D23B
cs=0x17c5;eip=0x00d23d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 110315                  push    [bp+arg_0] ;~ 17C5:D23D
cs=0x17c5;eip=0x00d240; 	J(CALLF(sub_49b6f,0));	// 110316                  call    far ptr sub_49B6F ;~ 17C5:D240
cs=0x17c5;eip=0x00d245; 	T(ADD(sp, 2));	// 110318                  add     sp, 2 ;~ 17C5:D245
cs=0x17c5;eip=0x00d248; 	J(JMP(loc_3347c));	// 110319                  jmp     short loc_3347C ;~ 17C5:D248
loc_3347a:
	// 6479 
cs=0x17c5;eip=0x00d24a; 	T(SUB(ax, ax));	// 110323                  sub     ax, ax ;~ 17C5:D24A
loc_3347c:
	// 6480 
cs=0x17c5;eip=0x00d24c; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 110326                  mov     bx, [bp+arg_0] ;~ 17C5:D24C
cs=0x17c5;eip=0x00d24f; 	T(SHL(bx, 1));	// 110327                  shl     bx, 1 ;~ 17C5:D24F
cs=0x17c5;eip=0x00d251; 	T(ADD(ax, *(dw*)(raddr(ds,bx+0x5D56))));	// 110328                  add     ax, [bx+5D56h] ;~ 17C5:D251
cs=0x17c5;eip=0x00d255; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 110329                  mov     [bp+var_2], ax ;~ 17C5:D255
loc_33488:
	// 6481 
cs=0x17c5;eip=0x00d258; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 110332                  mov     ax, [bp+var_2] ;~ 17C5:D258
cs=0x17c5;eip=0x00d25b; 	T(sp = bp;);	// 110333                  mov     sp, bp ;~ 17C5:D25B
cs=0x17c5;eip=0x00d25d; 	X(POP(bp));	// 110334                  pop     bp ;~ 17C5:D25D
cs=0x17c5;eip=0x00d25e; 	J(RETN(0));	// 110335                  retn ;~ 17C5:D25E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33462: 	goto loc_33462;
        case m2c::kloc_3347a: 	goto loc_3347a;
        case m2c::kloc_3347c: 	goto loc_3347c;
        case m2c::kloc_33488: 	goto loc_33488;
        case m2c::ksub_3344e: 	goto sub_3344e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_d260_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_d260_proc:
    _begin:
loc_33490:
	// 6482 
cs=0x17c5;eip=0x00d260; 	X(PUSH(bp));	// 110342                  push    bp ;~ 17C5:D260
cs=0x17c5;eip=0x00d261; 	T(bp = sp;);	// 110343                  mov     bp, sp ;~ 17C5:D261
cs=0x17c5;eip=0x00d263; 	T(SUB(sp, 0x0E));	// 110344                  sub     sp, 0Eh ;~ 17C5:D263
cs=0x17c5;eip=0x00d266; 	X(PUSH(di));	// 110345                  push    di ;~ 17C5:D266
cs=0x17c5;eip=0x00d267; 	X(PUSH(si));	// 110346                  push    si ;~ 17C5:D267
cs=0x17c5;eip=0x00d268; 	T(SUB(ax, ax));	// 110347                  sub     ax, ax ;~ 17C5:D268
cs=0x17c5;eip=0x00d26a; 	X(word_4e838 = ax;);	// 110348                  mov     ds:word_4E838, ax ;~ 17C5:D26A
cs=0x17c5;eip=0x00d26d; 	X(word_4e836 = ax;);	// 110349                  mov     ds:word_4E836, ax ;~ 17C5:D26D
cs=0x17c5;eip=0x00d270; 	T(CMP(*(dw*)(raddr(ss,bp+4)), ax));	// 110350                  cmp     [bp+4], ax ;~ 17C5:D270
cs=0x17c5;eip=0x00d273; 	J(JNZ(loc_334a8));	// 110351                  jnz     short loc_334A8 ;~ 17C5:D273
cs=0x17c5;eip=0x00d275; 	J(JMP(loc_33b88));	// 110352                  jmp     loc_33B88 ;~ 17C5:D275
loc_334a8:
	// 6483 
cs=0x17c5;eip=0x00d278; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 110356                  mov     ax, [bp+4] ;~ 17C5:D278
cs=0x17c5;eip=0x00d27b; 	J(JMP(loc_33977));	// 110357                  jmp     loc_33977 ;~ 17C5:D27B
loc_334ae:
	// 6484 
cs=0x17c5;eip=0x00d27e; 	J(CALL(sub_33e10,0));	// 110361                  call    sub_33E10 ;~ 17C5:D27E
cs=0x17c5;eip=0x00d281; 	J(JMP(loc_33abc));	// 110362                  jmp     loc_33ABC ;~ 17C5:D281
loc_334b4:
	// 6485 
cs=0x17c5;eip=0x00d284; 	X(INC(word_4e61c));	// 110366                  inc     ds:word_4E61C ;~ 17C5:D284
cs=0x17c5;eip=0x00d288; 	T(CMP(word_4e61c, 2));	// 110367                  cmp     ds:word_4E61C, 2 ;~ 17C5:D288
cs=0x17c5;eip=0x00d28d; 	J(JLE(loc_334c5));	// 110368                  jle     short loc_334C5 ;~ 17C5:D28D
cs=0x17c5;eip=0x00d28f; 	X(word_4e61c = 0;);	// 110369                  mov     ds:word_4E61C, 0 ;~ 17C5:D28F
loc_334c5:
	// 6486 
cs=0x17c5;eip=0x00d295; 	T(ax = word_4e61c;);	// 110372                  mov     ax, ds:word_4E61C ;~ 17C5:D295
cs=0x17c5;eip=0x00d298; 	J(JMP(loc_334fc));	// 110373                  jmp     short loc_334FC ;~ 17C5:D298
loc_334ca:
	// 6487 
cs=0x17c5;eip=0x00d29a; 	T(ax = 0x5C70;);	// 110377                  mov     ax, 5C70h ;~ 17C5:D29A
cs=0x17c5;eip=0x00d29d; 	X(PUSH(ax));	// 110378                  push    ax ;~ 17C5:D29D
cs=0x17c5;eip=0x00d29e; 	T(ax = 0x66C4;);	// 110379                  mov     ax, 66C4h ;~ 17C5:D29E
cs=0x17c5;eip=0x00d2a1; 	X(PUSH(ax));	// 110380                  push    ax ;~ 17C5:D2A1
cs=0x17c5;eip=0x00d2a2; 	J(CALL(sub_34c1c,0));	// 110381                  call    sub_34C1C ;~ 17C5:D2A2
cs=0x17c5;eip=0x00d2a5; 	T(ADD(sp, 4));	// 110382                  add     sp, 4 ;~ 17C5:D2A5
cs=0x17c5;eip=0x00d2a8; 	J(JMP(loc_3350c));	// 110383                  jmp     short loc_3350C ;~ 17C5:D2A8
loc_334da:
	// 6488 
cs=0x17c5;eip=0x00d2aa; 	T(ax = 0x5C75;);	// 110387                  mov     ax, 5C75h ;~ 17C5:D2AA
cs=0x17c5;eip=0x00d2ad; 	X(PUSH(ax));	// 110388                  push    ax ;~ 17C5:D2AD
cs=0x17c5;eip=0x00d2ae; 	T(ax = 0x66C4;);	// 110389                  mov     ax, 66C4h ;~ 17C5:D2AE
cs=0x17c5;eip=0x00d2b1; 	X(PUSH(ax));	// 110390                  push    ax ;~ 17C5:D2B1
cs=0x17c5;eip=0x00d2b2; 	J(CALL(sub_34c1c,0));	// 110391                  call    sub_34C1C ;~ 17C5:D2B2
cs=0x17c5;eip=0x00d2b5; 	T(ADD(sp, 4));	// 110392                  add     sp, 4 ;~ 17C5:D2B5
cs=0x17c5;eip=0x00d2b8; 	J(JMP(loc_3350c));	// 110393                  jmp     short loc_3350C ;~ 17C5:D2B8
loc_334ea:
	// 6489 
cs=0x17c5;eip=0x00d2ba; 	T(ax = 0x5C7C;);	// 110397                  mov     ax, 5C7Ch ;~ 17C5:D2BA
cs=0x17c5;eip=0x00d2bd; 	X(PUSH(ax));	// 110398                  push    ax ;~ 17C5:D2BD
cs=0x17c5;eip=0x00d2be; 	T(ax = 0x66C4;);	// 110399                  mov     ax, 66C4h ;~ 17C5:D2BE
cs=0x17c5;eip=0x00d2c1; 	X(PUSH(ax));	// 110400                  push    ax ;~ 17C5:D2C1
cs=0x17c5;eip=0x00d2c2; 	J(CALL(sub_34c1c,0));	// 110401                  call    sub_34C1C ;~ 17C5:D2C2
cs=0x17c5;eip=0x00d2c5; 	T(ADD(sp, 4));	// 110402                  add     sp, 4 ;~ 17C5:D2C5
cs=0x17c5;eip=0x00d2c8; 	J(JMP(loc_3350c));	// 110403                  jmp     short loc_3350C ;~ 17C5:D2C8
ret_17c5_d2ca:
	// 6490 
cs=0x17c5;eip=0x00d2ca; 	J(JMP(loc_3350c));	// 110405                  jmp     short loc_3350C ;~ 17C5:D2CA
loc_334fc:
	// 6491 
cs=0x17c5;eip=0x00d2cc; 	T(OR(ax, ax));	// 110409                  or      ax, ax ;~ 17C5:D2CC
cs=0x17c5;eip=0x00d2ce; 	J(JZ(loc_334ca));	// 110410                  jz      short loc_334CA ;~ 17C5:D2CE
cs=0x17c5;eip=0x00d2d0; 	T(CMP(ax, 1));	// 110411                  cmp     ax, 1 ;~ 17C5:D2D0
cs=0x17c5;eip=0x00d2d3; 	J(JZ(loc_334da));	// 110412                  jz      short loc_334DA ;~ 17C5:D2D3
cs=0x17c5;eip=0x00d2d5; 	T(CMP(ax, 2));	// 110413                  cmp     ax, 2 ;~ 17C5:D2D5
cs=0x17c5;eip=0x00d2d8; 	J(JZ(loc_334ea));	// 110414                  jz      short loc_334EA ;~ 17C5:D2D8
cs=0x17c5;eip=0x00d2da; 	J({;});	// 110415                  jmp     short $+2 ;~ 17C5:D2DA
loc_3350c:
	// 6492 
cs=0x17c5;eip=0x00d2dc; 	T(ax = 0x5C82;);	// 110420                  mov     ax, 5C82h ;~ 17C5:D2DC
cs=0x17c5;eip=0x00d2df; 	X(PUSH(ax));	// 110421                  push    ax ;~ 17C5:D2DF
cs=0x17c5;eip=0x00d2e0; 	T(ax = 0x66C4;);	// 110422                  mov     ax, 66C4h ;~ 17C5:D2E0
cs=0x17c5;eip=0x00d2e3; 	X(PUSH(ax));	// 110423                  push    ax ;~ 17C5:D2E3
cs=0x17c5;eip=0x00d2e4; 	J(CALL(sub_34bdc,0));	// 110424                  call    sub_34BDC ;~ 17C5:D2E4
cs=0x17c5;eip=0x00d2e7; 	T(ADD(sp, 4));	// 110425                  add     sp, 4 ;~ 17C5:D2E7
cs=0x17c5;eip=0x00d2ea; 	T(ax = 0x66C4;);	// 110426                  mov     ax, 66C4h ;~ 17C5:D2EA
cs=0x17c5;eip=0x00d2ed; 	X(PUSH(ax));	// 110427                  push    ax ;~ 17C5:D2ED
cs=0x17c5;eip=0x00d2ee; 	J(CALL(sub_30414,0));	// 110428                  call    sub_30414 ;~ 17C5:D2EE
cs=0x17c5;eip=0x00d2f1; 	T(ADD(sp, 2));	// 110429                  add     sp, 2 ;~ 17C5:D2F1
cs=0x17c5;eip=0x00d2f4; 	J(JMP(loc_33abc));	// 110430                  jmp     loc_33ABC ;~ 17C5:D2F4
loc_33527:
	// 6493 
cs=0x17c5;eip=0x00d2f7; 	J(CALL(sub_2faa5,0));	// 110434                  call    sub_2FAA5 ;~ 17C5:D2F7
cs=0x17c5;eip=0x00d2fa; 	J(JMP(loc_33abc));	// 110435                  jmp     loc_33ABC ;~ 17C5:D2FA
loc_3352d:
	// 6494 
cs=0x17c5;eip=0x00d2fd; 	J(CALL(sub_2fae4,0));	// 110439                  call    sub_2FAE4 ;~ 17C5:D2FD
cs=0x17c5;eip=0x00d300; 	J(JMP(loc_33abc));	// 110440                  jmp     loc_33ABC ;~ 17C5:D300
loc_33533:
	// 6495 
cs=0x17c5;eip=0x00d303; 	T(ax = 1;);	// 110444                  mov     ax, 1 ;~ 17C5:D303
cs=0x17c5;eip=0x00d306; 	X(PUSH(ax));	// 110445                  push    ax ;~ 17C5:D306
cs=0x17c5;eip=0x00d307; 	J(CALL(sub_2772c,0));	// 110446                  call    sub_2772C ;~ 17C5:D307
cs=0x17c5;eip=0x00d30a; 	T(ADD(sp, 2));	// 110447                  add     sp, 2 ;~ 17C5:D30A
cs=0x17c5;eip=0x00d30d; 	J(JMP(loc_33abc));	// 110448                  jmp     loc_33ABC ;~ 17C5:D30D
loc_33540:
	// 6496 
cs=0x17c5;eip=0x00d310; 	T(ax = 2;);	// 110452                  mov     ax, 2 ;~ 17C5:D310
cs=0x17c5;eip=0x00d313; 	X(PUSH(ax));	// 110453                  push    ax ;~ 17C5:D313
cs=0x17c5;eip=0x00d314; 	J(CALL(sub_2772c,0));	// 110454                  call    sub_2772C ;~ 17C5:D314
cs=0x17c5;eip=0x00d317; 	T(ADD(sp, 2));	// 110455                  add     sp, 2 ;~ 17C5:D317
cs=0x17c5;eip=0x00d31a; 	J(JMP(loc_33abc));	// 110456                  jmp     loc_33ABC ;~ 17C5:D31A
loc_3354d:
	// 6497 
cs=0x17c5;eip=0x00d31d; 	T(ax = word_520ee;);	// 110460                  mov     ax, ds:word_520EE ;~ 17C5:D31D
cs=0x17c5;eip=0x00d320; 	T(CMP(word_4e2fe, ax));	// 110461                  cmp     ds:word_4E2FE, ax ;~ 17C5:D320
cs=0x17c5;eip=0x00d324; 	J(JZ(loc_3356f));	// 110462                  jz      short loc_3356F ;~ 17C5:D324
cs=0x17c5;eip=0x00d326; 	X(XOR(*(db*)(&word_4f42e), 1));	// 110463                  xor     byte ptr ds:word_4F42E, 1 ;~ 17C5:D326
cs=0x17c5;eip=0x00d32b; 	X(word_4991c = 0;);	// 110464                  mov     word_4991C, 0 ;~ 17C5:D32B
cs=0x17c5;eip=0x00d331; 	T(ax = 2;);	// 110465                  mov     ax, 2 ;~ 17C5:D331
cs=0x17c5;eip=0x00d334; 	X(PUSH(ax));	// 110466                  push    ax ;~ 17C5:D334
cs=0x17c5;eip=0x00d335; 	T(ax = 0x20;);	// 110467                  mov     ax, 20h ; ' ' ;~ 17C5:D335
cs=0x17c5;eip=0x00d338; 	X(PUSH(ax));	// 110468                  push    ax ;~ 17C5:D338
cs=0x17c5;eip=0x00d339; 	J(CALL(sub_33c65,0));	// 110469                  call    sub_33C65 ;~ 17C5:D339
cs=0x17c5;eip=0x00d33c; 	T(ADD(sp, 4));	// 110471                  add     sp, 4 ;~ 17C5:D33C
loc_3356f:
	// 6498 
cs=0x17c5;eip=0x00d33f; 	T(TEST(*(db*)(&word_4f42e), 1));	// 110474                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:D33F
cs=0x17c5;eip=0x00d344; 	J(JNZ(loc_33579));	// 110475                  jnz     short loc_33579 ;~ 17C5:D344
cs=0x17c5;eip=0x00d346; 	J(CALL(sub_33dcc,0));	// 110476                  call    sub_33DCC ;~ 17C5:D346
loc_33579:
	// 6499 
cs=0x17c5;eip=0x00d349; 	J(JMP(loc_33abc));	// 110479                  jmp     loc_33ABC ;~ 17C5:D349
loc_3357c:
	// 6500 
cs=0x17c5;eip=0x00d34c; 	X(DEC(word_4f20c));	// 110483                  dec     ds:word_4F20C ;~ 17C5:D34C
cs=0x17c5;eip=0x00d350; 	J(JNS(loc_33597));	// 110484                  jns     short loc_33597 ;~ 17C5:D350
cs=0x17c5;eip=0x00d352; 	J(CALLF(sub_49ad9,0));	// 110485                  call    far ptr sub_49AD9 ;~ 17C5:D352
cs=0x17c5;eip=0x00d357; 	T(CMP(ax, 3));	// 110487                  cmp     ax, 3 ;~ 17C5:D357
cs=0x17c5;eip=0x00d35a; 	J(JNZ(loc_33591));	// 110488                  jnz     short loc_33591 ;~ 17C5:D35A
cs=0x17c5;eip=0x00d35c; 	T(ax = 3;);	// 110489                  mov     ax, 3 ;~ 17C5:D35C
cs=0x17c5;eip=0x00d35f; 	J(JMP(loc_33594));	// 110490                  jmp     short loc_33594 ;~ 17C5:D35F
loc_33591:
	// 6501 
cs=0x17c5;eip=0x00d361; 	T(ax = 2;);	// 110494                  mov     ax, 2 ;~ 17C5:D361
loc_33594:
	// 6502 
cs=0x17c5;eip=0x00d364; 	X(word_4f20c = ax;);	// 110497                  mov     ds:word_4F20C, ax ;~ 17C5:D364
loc_33597:
	// 6503 
cs=0x17c5;eip=0x00d367; 	T(ax = 0x5C8F;);	// 110500                  mov     ax, 5C8Fh ;~ 17C5:D367
cs=0x17c5;eip=0x00d36a; 	X(PUSH(ax));	// 110501                  push    ax ;~ 17C5:D36A
cs=0x17c5;eip=0x00d36b; 	T(ax = 0x66C4;);	// 110502                  mov     ax, 66C4h ;~ 17C5:D36B
cs=0x17c5;eip=0x00d36e; 	X(PUSH(ax));	// 110503                  push    ax ;~ 17C5:D36E
cs=0x17c5;eip=0x00d36f; 	J(CALL(sub_34c1c,0));	// 110504                  call    sub_34C1C ;~ 17C5:D36F
cs=0x17c5;eip=0x00d372; 	T(ADD(sp, 4));	// 110505                  add     sp, 4 ;~ 17C5:D372
cs=0x17c5;eip=0x00d375; 	T(ax = 0x0A;);	// 110506                  mov     ax, 0Ah ;~ 17C5:D375
cs=0x17c5;eip=0x00d378; 	X(PUSH(ax));	// 110507                  push    ax ;~ 17C5:D378
cs=0x17c5;eip=0x00d379; 	T(ax = 0x9780;);	// 110508                  mov     ax, 9780h ;~ 17C5:D379
cs=0x17c5;eip=0x00d37c; 	X(PUSH(ax));	// 110509                  push    ax ;~ 17C5:D37C
cs=0x17c5;eip=0x00d37d; 	X(PUSH(word_4f20c));	// 110510                  push    ds:word_4F20C ;~ 17C5:D37D
cs=0x17c5;eip=0x00d381; 	J(CALL(sub_34c6a,0));	// 110511                  call    sub_34C6A ;~ 17C5:D381
cs=0x17c5;eip=0x00d384; 	T(ADD(sp, 6));	// 110512                  add     sp, 6 ;~ 17C5:D384
cs=0x17c5;eip=0x00d387; 	X(PUSH(ax));	// 110513                  push    ax ;~ 17C5:D387
cs=0x17c5;eip=0x00d388; 	T(ax = 0x66C4;);	// 110514                  mov     ax, 66C4h ;~ 17C5:D388
cs=0x17c5;eip=0x00d38b; 	X(PUSH(ax));	// 110515                  push    ax ;~ 17C5:D38B
cs=0x17c5;eip=0x00d38c; 	J(CALL(sub_34bdc,0));	// 110516                  call    sub_34BDC ;~ 17C5:D38C
cs=0x17c5;eip=0x00d38f; 	T(ADD(sp, 4));	// 110517                  add     sp, 4 ;~ 17C5:D38F
cs=0x17c5;eip=0x00d392; 	T(ax = 0x66C4;);	// 110518                  mov     ax, 66C4h ;~ 17C5:D392
cs=0x17c5;eip=0x00d395; 	X(PUSH(ax));	// 110519                  push    ax ;~ 17C5:D395
cs=0x17c5;eip=0x00d396; 	J(CALL(sub_30414,0));	// 110520                  call    sub_30414 ;~ 17C5:D396
cs=0x17c5;eip=0x00d399; 	T(ADD(sp, 2));	// 110521                  add     sp, 2 ;~ 17C5:D399
cs=0x17c5;eip=0x00d39c; 	J(CALL(sub_33d5b,0));	// 110522                  call    sub_33D5B ;~ 17C5:D39C
cs=0x17c5;eip=0x00d39f; 	J(JMP(loc_33abc));	// 110523                  jmp     loc_33ABC ;~ 17C5:D39F
loc_335d2:
	// 6504 
cs=0x17c5;eip=0x00d3a2; 	X(INC(word_4e832));	// 110527                  inc     ds:word_4E832 ;~ 17C5:D3A2
cs=0x17c5;eip=0x00d3a6; 	T(CMP(word_4e832, 2));	// 110528                  cmp     ds:word_4E832, 2 ;~ 17C5:D3A6
cs=0x17c5;eip=0x00d3ab; 	J(JLE(loc_335e3));	// 110529                  jle     short loc_335E3 ;~ 17C5:D3AB
cs=0x17c5;eip=0x00d3ad; 	X(word_4e832 = 0;);	// 110530                  mov     ds:word_4E832, 0 ;~ 17C5:D3AD
loc_335e3:
	// 6505 
cs=0x17c5;eip=0x00d3b3; 	T(ax = 0x5C9D;);	// 110533                  mov     ax, 5C9Dh ;~ 17C5:D3B3
cs=0x17c5;eip=0x00d3b6; 	X(PUSH(ax));	// 110534                  push    ax ;~ 17C5:D3B6
cs=0x17c5;eip=0x00d3b7; 	T(ax = 0x66C4;);	// 110535                  mov     ax, 66C4h ;~ 17C5:D3B7
cs=0x17c5;eip=0x00d3ba; 	X(PUSH(ax));	// 110536                  push    ax ;~ 17C5:D3BA
cs=0x17c5;eip=0x00d3bb; 	J(CALL(sub_34c1c,0));	// 110537                  call    sub_34C1C ;~ 17C5:D3BB
cs=0x17c5;eip=0x00d3be; 	T(ADD(sp, 4));	// 110538                  add     sp, 4 ;~ 17C5:D3BE
cs=0x17c5;eip=0x00d3c1; 	T(ax = 0x0A;);	// 110539                  mov     ax, 0Ah ;~ 17C5:D3C1
cs=0x17c5;eip=0x00d3c4; 	X(PUSH(ax));	// 110540                  push    ax ;~ 17C5:D3C4
cs=0x17c5;eip=0x00d3c5; 	T(ax = 0x9780;);	// 110541                  mov     ax, 9780h ;~ 17C5:D3C5
cs=0x17c5;eip=0x00d3c8; 	X(PUSH(ax));	// 110542                  push    ax ;~ 17C5:D3C8
cs=0x17c5;eip=0x00d3c9; 	T(ax = word_4e832;);	// 110543                  mov     ax, ds:word_4E832 ;~ 17C5:D3C9
cs=0x17c5;eip=0x00d3cc; 	T(INC(ax));	// 110544                  inc     ax ;~ 17C5:D3CC
cs=0x17c5;eip=0x00d3cd; 	X(PUSH(ax));	// 110545                  push    ax ;~ 17C5:D3CD
cs=0x17c5;eip=0x00d3ce; 	J(CALL(sub_34c6a,0));	// 110546                  call    sub_34C6A ;~ 17C5:D3CE
cs=0x17c5;eip=0x00d3d1; 	T(ADD(sp, 6));	// 110547                  add     sp, 6 ;~ 17C5:D3D1
cs=0x17c5;eip=0x00d3d4; 	X(PUSH(ax));	// 110548                  push    ax ;~ 17C5:D3D4
cs=0x17c5;eip=0x00d3d5; 	T(ax = 0x66C4;);	// 110549                  mov     ax, 66C4h ;~ 17C5:D3D5
cs=0x17c5;eip=0x00d3d8; 	X(PUSH(ax));	// 110550                  push    ax ;~ 17C5:D3D8
cs=0x17c5;eip=0x00d3d9; 	J(CALL(sub_34bdc,0));	// 110551                  call    sub_34BDC ;~ 17C5:D3D9
cs=0x17c5;eip=0x00d3dc; 	T(ADD(sp, 4));	// 110552                  add     sp, 4 ;~ 17C5:D3DC
cs=0x17c5;eip=0x00d3df; 	T(ax = 0x66C4;);	// 110553                  mov     ax, 66C4h ;~ 17C5:D3DF
cs=0x17c5;eip=0x00d3e2; 	X(PUSH(ax));	// 110554                  push    ax ;~ 17C5:D3E2
cs=0x17c5;eip=0x00d3e3; 	J(CALL(sub_30414,0));	// 110555                  call    sub_30414 ;~ 17C5:D3E3
cs=0x17c5;eip=0x00d3e6; 	T(ADD(sp, 2));	// 110556                  add     sp, 2 ;~ 17C5:D3E6
cs=0x17c5;eip=0x00d3e9; 	J(JMP(loc_33abc));	// 110557                  jmp     loc_33ABC ;~ 17C5:D3E9
loc_3361c:
	// 6506 
cs=0x17c5;eip=0x00d3ec; 	T(ax = 0x5CAE;);	// 110561                  mov     ax, 5CAEh ;~ 17C5:D3EC
cs=0x17c5;eip=0x00d3ef; 	X(PUSH(ax));	// 110562                  push    ax ;~ 17C5:D3EF
cs=0x17c5;eip=0x00d3f0; 	T(ax = 0x66C4;);	// 110563                  mov     ax, 66C4h ;~ 17C5:D3F0
cs=0x17c5;eip=0x00d3f3; 	X(PUSH(ax));	// 110564                  push    ax ;~ 17C5:D3F3
cs=0x17c5;eip=0x00d3f4; 	J(CALL(sub_34c1c,0));	// 110565                  call    sub_34C1C ;~ 17C5:D3F4
cs=0x17c5;eip=0x00d3f7; 	T(ADD(sp, 4));	// 110566                  add     sp, 4 ;~ 17C5:D3F7
cs=0x17c5;eip=0x00d3fa; 	T(ax = 0x0A;);	// 110567                  mov     ax, 0Ah ;~ 17C5:D3FA
cs=0x17c5;eip=0x00d3fd; 	X(PUSH(ax));	// 110568                  push    ax ;~ 17C5:D3FD
cs=0x17c5;eip=0x00d3fe; 	T(ax = bp-0x0E);	// 110569                  lea     ax, [bp-0Eh] ;~ 17C5:D3FE
cs=0x17c5;eip=0x00d401; 	X(PUSH(ax));	// 110570                  push    ax ;~ 17C5:D401
cs=0x17c5;eip=0x00d402; 	X(PUSH(word_48ba2));	// 110571                  push    word_48BA2 ;~ 17C5:D402
cs=0x17c5;eip=0x00d406; 	J(CALL(sub_34c6a,0));	// 110572                  call    sub_34C6A ;~ 17C5:D406
cs=0x17c5;eip=0x00d409; 	T(ADD(sp, 6));	// 110573                  add     sp, 6 ;~ 17C5:D409
cs=0x17c5;eip=0x00d40c; 	X(PUSH(ax));	// 110574                  push    ax ;~ 17C5:D40C
cs=0x17c5;eip=0x00d40d; 	T(ax = 0x66C4;);	// 110575                  mov     ax, 66C4h ;~ 17C5:D40D
cs=0x17c5;eip=0x00d410; 	X(PUSH(ax));	// 110576                  push    ax ;~ 17C5:D410
cs=0x17c5;eip=0x00d411; 	J(CALL(sub_34bdc,0));	// 110577                  call    sub_34BDC ;~ 17C5:D411
cs=0x17c5;eip=0x00d414; 	T(ADD(sp, 4));	// 110578                  add     sp, 4 ;~ 17C5:D414
cs=0x17c5;eip=0x00d417; 	T(ax = 0x66C4;);	// 110579                  mov     ax, 66C4h ;~ 17C5:D417
cs=0x17c5;eip=0x00d41a; 	X(PUSH(ax));	// 110580                  push    ax ;~ 17C5:D41A
cs=0x17c5;eip=0x00d41b; 	J(CALL(sub_30414,0));	// 110581                  call    sub_30414 ;~ 17C5:D41B
cs=0x17c5;eip=0x00d41e; 	T(ADD(sp, 2));	// 110582                  add     sp, 2 ;~ 17C5:D41E
cs=0x17c5;eip=0x00d421; 	J(JMP(loc_33abc));	// 110583                  jmp     loc_33ABC ;~ 17C5:D421
loc_33654:
	// 6507 
cs=0x17c5;eip=0x00d424; 	T(ax = 0x5CC0;);	// 110587                  mov     ax, 5CC0h ;~ 17C5:D424
cs=0x17c5;eip=0x00d427; 	X(PUSH(ax));	// 110588                  push    ax ;~ 17C5:D427
cs=0x17c5;eip=0x00d428; 	T(ax = 0x66C4;);	// 110589                  mov     ax, 66C4h ;~ 17C5:D428
cs=0x17c5;eip=0x00d42b; 	X(PUSH(ax));	// 110590                  push    ax ;~ 17C5:D42B
cs=0x17c5;eip=0x00d42c; 	J(CALL(sub_34c1c,0));	// 110591                  call    sub_34C1C ;~ 17C5:D42C
cs=0x17c5;eip=0x00d42f; 	T(ADD(sp, 4));	// 110592                  add     sp, 4 ;~ 17C5:D42F
cs=0x17c5;eip=0x00d432; 	T(ax = 0x0A;);	// 110593                  mov     ax, 0Ah ;~ 17C5:D432
cs=0x17c5;eip=0x00d435; 	X(PUSH(ax));	// 110594                  push    ax ;~ 17C5:D435
cs=0x17c5;eip=0x00d436; 	T(ax = 0x9780;);	// 110595                  mov     ax, 9780h ;~ 17C5:D436
cs=0x17c5;eip=0x00d439; 	X(PUSH(ax));	// 110596                  push    ax ;~ 17C5:D439
cs=0x17c5;eip=0x00d43a; 	X(PUSH(word_528de));	// 110597                  push    ds:word_528DE ;~ 17C5:D43A
cs=0x17c5;eip=0x00d43e; 	J(CALL(sub_34c6a,0));	// 110598                  call    sub_34C6A ;~ 17C5:D43E
cs=0x17c5;eip=0x00d441; 	T(ADD(sp, 6));	// 110599                  add     sp, 6 ;~ 17C5:D441
cs=0x17c5;eip=0x00d444; 	X(PUSH(ax));	// 110600                  push    ax ;~ 17C5:D444
cs=0x17c5;eip=0x00d445; 	T(ax = 0x66C4;);	// 110601                  mov     ax, 66C4h ;~ 17C5:D445
cs=0x17c5;eip=0x00d448; 	X(PUSH(ax));	// 110602                  push    ax ;~ 17C5:D448
cs=0x17c5;eip=0x00d449; 	J(CALL(sub_34bdc,0));	// 110603                  call    sub_34BDC ;~ 17C5:D449
cs=0x17c5;eip=0x00d44c; 	T(ADD(sp, 4));	// 110604                  add     sp, 4 ;~ 17C5:D44C
cs=0x17c5;eip=0x00d44f; 	T(ax = 0x66C4;);	// 110605                  mov     ax, 66C4h ;~ 17C5:D44F
cs=0x17c5;eip=0x00d452; 	X(PUSH(ax));	// 110606                  push    ax ;~ 17C5:D452
cs=0x17c5;eip=0x00d453; 	J(CALL(sub_30414,0));	// 110607                  call    sub_30414 ;~ 17C5:D453
cs=0x17c5;eip=0x00d456; 	T(ADD(sp, 2));	// 110608                  add     sp, 2 ;~ 17C5:D456
cs=0x17c5;eip=0x00d459; 	J(JMP(loc_33abc));	// 110609                  jmp     loc_33ABC ;~ 17C5:D459
loc_3368c:
	// 6508 
cs=0x17c5;eip=0x00d45c; 	T(CMP(word_4993a, 1));	// 110613                  cmp     word_4993A, 1 ;~ 17C5:D45C
cs=0x17c5;eip=0x00d461; 	J(JNZ(loc_336aa));	// 110614                  jnz     short loc_336AA ;~ 17C5:D461
cs=0x17c5;eip=0x00d463; 	X(word_4993a = 2;);	// 110615                  mov     word_4993A, 2 ;~ 17C5:D463
cs=0x17c5;eip=0x00d469; 	T(cx = 2;);	// 110616                  mov     cx, 2 ;~ 17C5:D469
cs=0x17c5;eip=0x00d46c; 	T(ax = word_492f4;);	// 110617                  mov     ax, word_492F4 ;~ 17C5:D46C
cs=0x17c5;eip=0x00d46f; 	T(CWD);	// 110618                  cwd ;~ 17C5:D46F
cs=0x17c5;eip=0x00d470; 	T(IDIV2(cx));	// 110619                  idiv    cx ;~ 17C5:D470
cs=0x17c5;eip=0x00d472; 	X(word_492f4 = ax;);	// 110620                  mov     word_492F4, ax ;~ 17C5:D472
cs=0x17c5;eip=0x00d475; 	J(CALL(sub_33cde,0));	// 110621                  call    sub_33CDE ;~ 17C5:D475
cs=0x17c5;eip=0x00d478; 	J(JMP(loc_336ad));	// 110622                  jmp     short loc_336AD ;~ 17C5:D478
loc_336aa:
	// 6509 
cs=0x17c5;eip=0x00d47a; 	J(CALL(sub_33dcc,0));	// 110626                  call    sub_33DCC ;~ 17C5:D47A
loc_336ad:
	// 6510 
cs=0x17c5;eip=0x00d47d; 	J(JMP(loc_33abc));	// 110629                  jmp     loc_33ABC ;~ 17C5:D47D
loc_336b0:
	// 6511 
cs=0x17c5;eip=0x00d480; 	X(INC(word_4e83a));	// 110633                  inc     ds:word_4E83A ;~ 17C5:D480
cs=0x17c5;eip=0x00d484; 	T(ax = word_4e83a;);	// 110634                  mov     ax, ds:word_4E83A ;~ 17C5:D484
cs=0x17c5;eip=0x00d487; 	T(AND(ax, 3));	// 110635                  and     ax, 3 ;~ 17C5:D487
cs=0x17c5;eip=0x00d48a; 	X(word_4e83a = ax;);	// 110636                  mov     ds:word_4E83A, ax ;~ 17C5:D48A
cs=0x17c5;eip=0x00d48d; 	T(ax = 0x5CCF;);	// 110637                  mov     ax, 5CCFh ;~ 17C5:D48D
cs=0x17c5;eip=0x00d490; 	X(PUSH(ax));	// 110638                  push    ax ;~ 17C5:D490
cs=0x17c5;eip=0x00d491; 	T(ax = 0x66C4;);	// 110639                  mov     ax, 66C4h ;~ 17C5:D491
cs=0x17c5;eip=0x00d494; 	X(PUSH(ax));	// 110640                  push    ax ;~ 17C5:D494
cs=0x17c5;eip=0x00d495; 	J(CALL(sub_34c1c,0));	// 110641                  call    sub_34C1C ;~ 17C5:D495
cs=0x17c5;eip=0x00d498; 	T(ADD(sp, 4));	// 110642                  add     sp, 4 ;~ 17C5:D498
cs=0x17c5;eip=0x00d49b; 	T(ax = 0x0A;);	// 110643                  mov     ax, 0Ah ;~ 17C5:D49B
cs=0x17c5;eip=0x00d49e; 	X(PUSH(ax));	// 110644                  push    ax ;~ 17C5:D49E
cs=0x17c5;eip=0x00d49f; 	T(ax = 0x9780;);	// 110645                  mov     ax, 9780h ;~ 17C5:D49F
cs=0x17c5;eip=0x00d4a2; 	X(PUSH(ax));	// 110646                  push    ax ;~ 17C5:D4A2
cs=0x17c5;eip=0x00d4a3; 	T(ax = 3;);	// 110647                  mov     ax, 3 ;~ 17C5:D4A3
cs=0x17c5;eip=0x00d4a6; 	T(SUB(ax, word_4e83a));	// 110648                  sub     ax, ds:word_4E83A ;~ 17C5:D4A6
cs=0x17c5;eip=0x00d4aa; 	X(PUSH(ax));	// 110649                  push    ax ;~ 17C5:D4AA
cs=0x17c5;eip=0x00d4ab; 	J(CALL(sub_34c6a,0));	// 110650                  call    sub_34C6A ;~ 17C5:D4AB
cs=0x17c5;eip=0x00d4ae; 	T(ADD(sp, 6));	// 110651                  add     sp, 6 ;~ 17C5:D4AE
cs=0x17c5;eip=0x00d4b1; 	X(PUSH(ax));	// 110652                  push    ax ;~ 17C5:D4B1
cs=0x17c5;eip=0x00d4b2; 	T(ax = 0x66C4;);	// 110653                  mov     ax, 66C4h ;~ 17C5:D4B2
cs=0x17c5;eip=0x00d4b5; 	X(PUSH(ax));	// 110654                  push    ax ;~ 17C5:D4B5
cs=0x17c5;eip=0x00d4b6; 	J(CALL(sub_34bdc,0));	// 110655                  call    sub_34BDC ;~ 17C5:D4B6
cs=0x17c5;eip=0x00d4b9; 	T(ADD(sp, 4));	// 110656                  add     sp, 4 ;~ 17C5:D4B9
cs=0x17c5;eip=0x00d4bc; 	T(ax = 0x66C4;);	// 110657                  mov     ax, 66C4h ;~ 17C5:D4BC
cs=0x17c5;eip=0x00d4bf; 	X(PUSH(ax));	// 110658                  push    ax ;~ 17C5:D4BF
cs=0x17c5;eip=0x00d4c0; 	J(CALL(sub_30414,0));	// 110659                  call    sub_30414 ;~ 17C5:D4C0
cs=0x17c5;eip=0x00d4c3; 	T(ADD(sp, 2));	// 110660                  add     sp, 2 ;~ 17C5:D4C3
cs=0x17c5;eip=0x00d4c6; 	J(CALL(sub_33cbd,0));	// 110661                  call    sub_33CBD ;~ 17C5:D4C6
cs=0x17c5;eip=0x00d4c9; 	J(JMP(loc_33abc));	// 110663                  jmp     loc_33ABC ;~ 17C5:D4C9
loc_336fc:
	// 6512 
cs=0x17c5;eip=0x00d4cc; 	X(XOR(*(db*)(&word_492ec), 1));	// 110667                  xor     byte ptr word_492EC, 1 ;~ 17C5:D4CC
cs=0x17c5;eip=0x00d4d1; 	T(CMP(byte_48b63, 0));	// 110668                  cmp     byte_48B63, 0 ;~ 17C5:D4D1
cs=0x17c5;eip=0x00d4d6; 	J(JZ(loc_3370b));	// 110669                  jz      short loc_3370B ;~ 17C5:D4D6
cs=0x17c5;eip=0x00d4d8; 	J(CALL(sub_29d1e,0));	// 110670                  call    sub_29D1E ;~ 17C5:D4D8
loc_3370b:
	// 6513 
cs=0x17c5;eip=0x00d4db; 	J(JMP(loc_33abc));	// 110673                  jmp     loc_33ABC ;~ 17C5:D4DB
loc_3370e:
	// 6514 
cs=0x17c5;eip=0x00d4de; 	X(XOR(*(db*)(((db*)&word_4f42e)+1), 0x10));	// 110677                  xor     byte ptr ds:word_4F42E+1, 10h ;~ 17C5:D4DE
cs=0x17c5;eip=0x00d4e3; 	T(TEST(word_4f42e, 0x1000));	// 110678                  test    ds:word_4F42E, 1000h ;~ 17C5:D4E3
cs=0x17c5;eip=0x00d4e9; 	J(JZ(loc_33724));	// 110679                  jz      short loc_33724 ;~ 17C5:D4E9
cs=0x17c5;eip=0x00d4eb; 	T(LES(bx, dword_528d6));	// 110680                  les     bx, ds:dword_528D6 ;~ 17C5:D4EB
cs=0x17c5;eip=0x00d4ef; 	X(OR(*(raddr(es,bx+0x30)), 1));	// 110681                  or      byte ptr es:[bx+30h], 1 ;~ 17C5:D4EF
loc_33724:
	// 6515 
cs=0x17c5;eip=0x00d4f4; 	J(JMP(loc_33abc));	// 110684                  jmp     loc_33ABC ;~ 17C5:D4F4
loc_33727:
	// 6516 
cs=0x17c5;eip=0x00d4f7; 	X(word_492e2 = 0;);	// 110688                  mov     word_492E2, 0 ;~ 17C5:D4F7
cs=0x17c5;eip=0x00d4fd; 	T(CMP(word_5268c, 1));	// 110689                  cmp     ds:word_5268C, 1 ;~ 17C5:D4FD
cs=0x17c5;eip=0x00d502; 	J(JZ(loc_3373a));	// 110690                  jz      short loc_3373A ;~ 17C5:D502
cs=0x17c5;eip=0x00d504; 	X(word_4f834 = 0;);	// 110691                  mov     ds:word_4F834, 0 ;~ 17C5:D504
loc_3373a:
	// 6517 
cs=0x17c5;eip=0x00d50a; 	X(word_5268c = 1;);	// 110694                  mov     ds:word_5268C, 1 ;~ 17C5:D50A
cs=0x17c5;eip=0x00d510; 	J(CALL(sub_33c0b,0));	// 110695                  call    sub_33C0B ;~ 17C5:D510
cs=0x17c5;eip=0x00d513; 	J(JMP(loc_33abc));	// 110696                  jmp     loc_33ABC ;~ 17C5:D513
loc_33746:
	// 6518 
cs=0x17c5;eip=0x00d516; 	X(word_492e2 = 1;);	// 110700                  mov     word_492E2, 1 ;~ 17C5:D516
cs=0x17c5;eip=0x00d51c; 	X(word_5268c = 1;);	// 110701                  mov     ds:word_5268C, 1 ;~ 17C5:D51C
cs=0x17c5;eip=0x00d522; 	J(JMP(loc_3375a));	// 110702                  jmp     short loc_3375A ;~ 17C5:D522
ret_17c5_d524:
	// 6519 
cs=0x17c5;eip=0x00d524; 	X(word_4f834 = 0;);	// 110704                  mov     ds:word_4F834, 0 ;~ 17C5:D524
loc_3375a:
	// 6520 
cs=0x17c5;eip=0x00d52a; 	J(CALL(sub_33c0b,0));	// 110707                  call    sub_33C0B ;~ 17C5:D52A
cs=0x17c5;eip=0x00d52d; 	J(JMP(loc_33abc));	// 110708                  jmp     loc_33ABC ;~ 17C5:D52D
loc_33760:
	// 6521 
cs=0x17c5;eip=0x00d530; 	X(word_492e2 = 2;);	// 110712                  mov     word_492E2, 2 ;~ 17C5:D530
cs=0x17c5;eip=0x00d536; 	T(CMP(word_5268c, 2));	// 110713                  cmp     ds:word_5268C, 2 ;~ 17C5:D536
cs=0x17c5;eip=0x00d53b; 	J(JZ(loc_33773));	// 110714                  jz      short loc_33773 ;~ 17C5:D53B
cs=0x17c5;eip=0x00d53d; 	X(word_4f834 = 0;);	// 110715                  mov     ds:word_4F834, 0 ;~ 17C5:D53D
loc_33773:
	// 6522 
cs=0x17c5;eip=0x00d543; 	X(word_5268c = 2;);	// 110718                  mov     ds:word_5268C, 2 ;~ 17C5:D543
cs=0x17c5;eip=0x00d549; 	J(CALL(sub_33c0b,0));	// 110719                  call    sub_33C0B ;~ 17C5:D549
cs=0x17c5;eip=0x00d54c; 	J(JMP(loc_33abc));	// 110720                  jmp     loc_33ABC ;~ 17C5:D54C
loc_3377f:
	// 6523 
cs=0x17c5;eip=0x00d54f; 	X(INC(word_4993e));	// 110724                  inc     word_4993E ;~ 17C5:D54F
cs=0x17c5;eip=0x00d553; 	T(CMP(word_4993e, 2));	// 110725                  cmp     word_4993E, 2 ;~ 17C5:D553
cs=0x17c5;eip=0x00d558; 	J(JLE(loc_33790));	// 110726                  jle     short loc_33790 ;~ 17C5:D558
cs=0x17c5;eip=0x00d55a; 	X(word_4993e = 0;);	// 110727                  mov     word_4993E, 0 ;~ 17C5:D55A
loc_33790:
	// 6524 
cs=0x17c5;eip=0x00d560; 	T(ax = 0x5CD7;);	// 110730                  mov     ax, 5CD7h ;~ 17C5:D560
cs=0x17c5;eip=0x00d563; 	X(PUSH(ax));	// 110731                  push    ax ;~ 17C5:D563
cs=0x17c5;eip=0x00d564; 	T(ax = 0x66C4;);	// 110732                  mov     ax, 66C4h ;~ 17C5:D564
cs=0x17c5;eip=0x00d567; 	X(PUSH(ax));	// 110733                  push    ax ;~ 17C5:D567
cs=0x17c5;eip=0x00d568; 	J(CALL(sub_34c1c,0));	// 110734                  call    sub_34C1C ;~ 17C5:D568
cs=0x17c5;eip=0x00d56b; 	T(ADD(sp, 4));	// 110735                  add     sp, 4 ;~ 17C5:D56B
cs=0x17c5;eip=0x00d56e; 	T(CMP(word_4993e, 0));	// 110736                  cmp     word_4993E, 0 ;~ 17C5:D56E
cs=0x17c5;eip=0x00d573; 	J(JZ(loc_337c4));	// 110737                  jz      short loc_337C4 ;~ 17C5:D573
cs=0x17c5;eip=0x00d575; 	T(ax = 0x0A;);	// 110738                  mov     ax, 0Ah ;~ 17C5:D575
cs=0x17c5;eip=0x00d578; 	X(PUSH(ax));	// 110739                  push    ax ;~ 17C5:D578
cs=0x17c5;eip=0x00d579; 	T(ax = 0x9780;);	// 110740                  mov     ax, 9780h ;~ 17C5:D579
cs=0x17c5;eip=0x00d57c; 	X(PUSH(ax));	// 110741                  push    ax ;~ 17C5:D57C
cs=0x17c5;eip=0x00d57d; 	X(PUSH(word_4993e));	// 110742                  push    word_4993E ;~ 17C5:D57D
cs=0x17c5;eip=0x00d581; 	J(CALL(sub_34c6a,0));	// 110743                  call    sub_34C6A ;~ 17C5:D581
cs=0x17c5;eip=0x00d584; 	T(ADD(sp, 6));	// 110744                  add     sp, 6 ;~ 17C5:D584
cs=0x17c5;eip=0x00d587; 	X(PUSH(ax));	// 110745                  push    ax ;~ 17C5:D587
cs=0x17c5;eip=0x00d588; 	T(ax = 0x66C4;);	// 110746                  mov     ax, 66C4h ;~ 17C5:D588
cs=0x17c5;eip=0x00d58b; 	X(PUSH(ax));	// 110747                  push    ax ;~ 17C5:D58B
cs=0x17c5;eip=0x00d58c; 	J(CALL(sub_34bdc,0));	// 110748                  call    sub_34BDC ;~ 17C5:D58C
cs=0x17c5;eip=0x00d58f; 	T(ADD(sp, 4));	// 110749                  add     sp, 4 ;~ 17C5:D58F
cs=0x17c5;eip=0x00d592; 	J(JMP(loc_337d2));	// 110750                  jmp     short loc_337D2 ;~ 17C5:D592
loc_337c4:
	// 6525 
cs=0x17c5;eip=0x00d594; 	T(ax = 0x5CE1;);	// 110754                  mov     ax, 5CE1h ;~ 17C5:D594
cs=0x17c5;eip=0x00d597; 	X(PUSH(ax));	// 110755                  push    ax ;~ 17C5:D597
cs=0x17c5;eip=0x00d598; 	T(ax = 0x66C4;);	// 110756                  mov     ax, 66C4h ;~ 17C5:D598
cs=0x17c5;eip=0x00d59b; 	X(PUSH(ax));	// 110757                  push    ax ;~ 17C5:D59B
cs=0x17c5;eip=0x00d59c; 	J(CALL(sub_34bdc,0));	// 110758                  call    sub_34BDC ;~ 17C5:D59C
cs=0x17c5;eip=0x00d59f; 	T(ADD(sp, 4));	// 110759                  add     sp, 4 ;~ 17C5:D59F
loc_337d2:
	// 6526 
cs=0x17c5;eip=0x00d5a2; 	T(ax = 0x66C4;);	// 110762                  mov     ax, 66C4h ;~ 17C5:D5A2
cs=0x17c5;eip=0x00d5a5; 	X(PUSH(ax));	// 110763                  push    ax ;~ 17C5:D5A5
cs=0x17c5;eip=0x00d5a6; 	J(CALL(sub_30414,0));	// 110764                  call    sub_30414 ;~ 17C5:D5A6
cs=0x17c5;eip=0x00d5a9; 	T(ADD(sp, 2));	// 110765                  add     sp, 2 ;~ 17C5:D5A9
cs=0x17c5;eip=0x00d5ac; 	J(JMP(loc_33abc));	// 110766                  jmp     loc_33ABC ;~ 17C5:D5AC
loc_337df:
	// 6527 
cs=0x17c5;eip=0x00d5af; 	X(INC(word_48c62));	// 110770                  inc     word_48C62 ;~ 17C5:D5AF
cs=0x17c5;eip=0x00d5b3; 	T(CMP(word_48c62, 3));	// 110771                  cmp     word_48C62, 3 ;~ 17C5:D5B3
cs=0x17c5;eip=0x00d5b8; 	J(JLE(loc_337f0));	// 110772                  jle     short loc_337F0 ;~ 17C5:D5B8
cs=0x17c5;eip=0x00d5ba; 	X(word_48c62 = 1;);	// 110773                  mov     word_48C62, 1 ;~ 17C5:D5BA
loc_337f0:
	// 6528 
cs=0x17c5;eip=0x00d5c0; 	T(ax = word_48c62;);	// 110776                  mov     ax, word_48C62 ;~ 17C5:D5C0
cs=0x17c5;eip=0x00d5c3; 	J(JMP(loc_33821));	// 110777                  jmp     short loc_33821 ;~ 17C5:D5C3
loc_337f5:
	// 6529 
cs=0x17c5;eip=0x00d5c5; 	T(ax = 0x5CE5;);	// 110781                  mov     ax, 5CE5h ;~ 17C5:D5C5
cs=0x17c5;eip=0x00d5c8; 	X(PUSH(ax));	// 110782                  push    ax ;~ 17C5:D5C8
cs=0x17c5;eip=0x00d5c9; 	J(CALL(sub_30414,0));	// 110783                  call    sub_30414 ;~ 17C5:D5C9
cs=0x17c5;eip=0x00d5cc; 	T(ADD(sp, 2));	// 110784                  add     sp, 2 ;~ 17C5:D5CC
cs=0x17c5;eip=0x00d5cf; 	J(JMP(loc_33832));	// 110785                  jmp     short loc_33832 ;~ 17C5:D5CF
loc_33801:
	// 6530 
cs=0x17c5;eip=0x00d5d1; 	T(ax = 0x5CFE;);	// 110789                  mov     ax, 5CFEh ;~ 17C5:D5D1
cs=0x17c5;eip=0x00d5d4; 	X(PUSH(ax));	// 110790                  push    ax ;~ 17C5:D5D4
cs=0x17c5;eip=0x00d5d5; 	J(CALL(sub_30414,0));	// 110791                  call    sub_30414 ;~ 17C5:D5D5
cs=0x17c5;eip=0x00d5d8; 	T(ADD(sp, 2));	// 110792                  add     sp, 2 ;~ 17C5:D5D8
cs=0x17c5;eip=0x00d5db; 	J(JMP(loc_33832));	// 110793                  jmp     short loc_33832 ;~ 17C5:D5DB
loc_3380d:
	// 6531 
cs=0x17c5;eip=0x00d5dd; 	T(ax = 0x5D19;);	// 110797                  mov     ax, 5D19h ;~ 17C5:D5DD
cs=0x17c5;eip=0x00d5e0; 	X(PUSH(ax));	// 110798                  push    ax ;~ 17C5:D5E0
cs=0x17c5;eip=0x00d5e1; 	J(CALL(sub_30414,0));	// 110799                  call    sub_30414 ;~ 17C5:D5E1
cs=0x17c5;eip=0x00d5e4; 	T(ADD(sp, 2));	// 110800                  add     sp, 2 ;~ 17C5:D5E4
cs=0x17c5;eip=0x00d5e7; 	T(ax = word_5239a;);	// 110801                  mov     ax, ds:word_5239A ;~ 17C5:D5E7
cs=0x17c5;eip=0x00d5ea; 	X(word_5138a = ax;);	// 110802                  mov     ds:word_5138A, ax ;~ 17C5:D5EA
cs=0x17c5;eip=0x00d5ed; 	J(JMP(loc_33832));	// 110803                  jmp     short loc_33832 ;~ 17C5:D5ED
ret_17c5_d5ef:
	// 6532 
cs=0x17c5;eip=0x00d5ef; 	J(JMP(loc_33832));	// 110805                  jmp     short loc_33832 ;~ 17C5:D5EF
loc_33821:
	// 6533 
cs=0x17c5;eip=0x00d5f1; 	T(CMP(ax, 1));	// 110809                  cmp     ax, 1 ;~ 17C5:D5F1
cs=0x17c5;eip=0x00d5f4; 	J(JZ(loc_337f5));	// 110810                  jz      short loc_337F5 ;~ 17C5:D5F4
cs=0x17c5;eip=0x00d5f6; 	T(CMP(ax, 2));	// 110811                  cmp     ax, 2 ;~ 17C5:D5F6
cs=0x17c5;eip=0x00d5f9; 	J(JZ(loc_33801));	// 110812                  jz      short loc_33801 ;~ 17C5:D5F9
cs=0x17c5;eip=0x00d5fb; 	T(CMP(ax, 3));	// 110813                  cmp     ax, 3 ;~ 17C5:D5FB
cs=0x17c5;eip=0x00d5fe; 	J(JZ(loc_3380d));	// 110814                  jz      short loc_3380D ;~ 17C5:D5FE
cs=0x17c5;eip=0x00d600; 	J({;});	// 110815                  jmp     short $+2 ;~ 17C5:D600
loc_33832:
	// 6534 
cs=0x17c5;eip=0x00d602; 	J(JMP(loc_33abc));	// 110820                  jmp     loc_33ABC ;~ 17C5:D602
loc_33835:
	// 6535 
cs=0x17c5;eip=0x00d605; 	T(CMP(word_492e6, 0));	// 110824                  cmp     word_492E6, 0 ;~ 17C5:D605
cs=0x17c5;eip=0x00d60a; 	J(JZ(loc_3384e));	// 110825                  jz      short loc_3384E ;~ 17C5:D60A
cs=0x17c5;eip=0x00d60c; 	X(word_492e6 = 0;);	// 110826                  mov     word_492E6, 0 ;~ 17C5:D60C
cs=0x17c5;eip=0x00d612; 	T(ax = 0x5D34;);	// 110827                  mov     ax, 5D34h ;~ 17C5:D612
cs=0x17c5;eip=0x00d615; 	X(PUSH(ax));	// 110828                  push    ax ;~ 17C5:D615
cs=0x17c5;eip=0x00d616; 	J(CALL(sub_30414,0));	// 110829                  call    sub_30414 ;~ 17C5:D616
cs=0x17c5;eip=0x00d619; 	T(ADD(sp, 2));	// 110830                  add     sp, 2 ;~ 17C5:D619
cs=0x17c5;eip=0x00d61c; 	J(JMP(loc_33866));	// 110831                  jmp     short loc_33866 ;~ 17C5:D61C
loc_3384e:
	// 6536 
cs=0x17c5;eip=0x00d61e; 	T(ax = word_4e2fe;);	// 110835                  mov     ax, ds:word_4E2FE ;~ 17C5:D61E
cs=0x17c5;eip=0x00d621; 	T(CMP(ax, 0x3E8));	// 110836                  cmp     ax, 3E8h ;~ 17C5:D621
cs=0x17c5;eip=0x00d624; 	J(JGE(loc_33859));	// 110837                  jge     short loc_33859 ;~ 17C5:D624
cs=0x17c5;eip=0x00d626; 	T(ax = 0x3E8;);	// 110838                  mov     ax, 3E8h ;~ 17C5:D626
loc_33859:
	// 6537 
cs=0x17c5;eip=0x00d629; 	X(word_492e6 = ax;);	// 110841                  mov     word_492E6, ax ;~ 17C5:D629
cs=0x17c5;eip=0x00d62c; 	T(ax = 0x5D42;);	// 110842                  mov     ax, 5D42h ;~ 17C5:D62C
cs=0x17c5;eip=0x00d62f; 	X(PUSH(ax));	// 110843                  push    ax ;~ 17C5:D62F
cs=0x17c5;eip=0x00d630; 	J(CALL(sub_30414,0));	// 110844                  call    sub_30414 ;~ 17C5:D630
cs=0x17c5;eip=0x00d633; 	T(ADD(sp, 2));	// 110845                  add     sp, 2 ;~ 17C5:D633
loc_33866:
	// 6538 
cs=0x17c5;eip=0x00d636; 	J(JMP(loc_33abc));	// 110848                  jmp     loc_33ABC ;~ 17C5:D636
loc_33869:
	// 6539 
cs=0x17c5;eip=0x00d639; 	X(OR(*(db*)(&word_49924), 0x80));	// 110852                  or      byte ptr word_49924, 80h ;~ 17C5:D639
cs=0x17c5;eip=0x00d63e; 	J(JMP(loc_33abc));	// 110853                  jmp     loc_33ABC ;~ 17C5:D63E
loc_33871:
	// 6540 
cs=0x17c5;eip=0x00d641; 	X(word_4e836 = 1;);	// 110857                  mov     ds:word_4E836, 1 ;~ 17C5:D641
cs=0x17c5;eip=0x00d647; 	J(JMP(loc_33abc));	// 110858                  jmp     loc_33ABC ;~ 17C5:D647
loc_3387a:
	// 6541 
cs=0x17c5;eip=0x00d64a; 	X(word_4e838 = 1;);	// 110862                  mov     ds:word_4E838, 1 ;~ 17C5:D64A
cs=0x17c5;eip=0x00d650; 	J(JMP(loc_33abc));	// 110863                  jmp     loc_33ABC ;~ 17C5:D650
loc_33883:
	// 6542 
cs=0x17c5;eip=0x00d653; 	X(word_520c0 = 0;);	// 110867                  mov     ds:word_520C0, 0 ;~ 17C5:D653
cs=0x17c5;eip=0x00d659; 	J(JMP(loc_33abc));	// 110868                  jmp     loc_33ABC ;~ 17C5:D659
loc_3388c:
	// 6543 
cs=0x17c5;eip=0x00d65c; 	X(word_520c0 = 0x44;);	// 110872                  mov     ds:word_520C0, 44h ; 'D' ;~ 17C5:D65C
cs=0x17c5;eip=0x00d662; 	J(JMP(loc_33abc));	// 110873                  jmp     loc_33ABC ;~ 17C5:D662
loc_33895:
	// 6544 
cs=0x17c5;eip=0x00d665; 	X(word_520c0 = 0x42;);	// 110877                  mov     ds:word_520C0, 42h ; 'B' ;~ 17C5:D665
cs=0x17c5;eip=0x00d66b; 	J(JMP(loc_33abc));	// 110878                  jmp     loc_33ABC ;~ 17C5:D66B
loc_3389e:
	// 6545 
cs=0x17c5;eip=0x00d66e; 	X(word_520c0 = 0x43;);	// 110882                  mov     ds:word_520C0, 43h ; 'C' ;~ 17C5:D66E
cs=0x17c5;eip=0x00d674; 	J(JMP(loc_33abc));	// 110883                  jmp     loc_33ABC ;~ 17C5:D674
loc_338a7:
	// 6546 
cs=0x17c5;eip=0x00d677; 	X(word_520c0 = 0x41;);	// 110887                  mov     ds:word_520C0, 41h ; 'A' ;~ 17C5:D677
cs=0x17c5;eip=0x00d67d; 	J(JMP(loc_33abc));	// 110888                  jmp     loc_33ABC ;~ 17C5:D67D
loc_338b0:
	// 6547 
cs=0x17c5;eip=0x00d680; 	X(word_520c0 = 0x87;);	// 110892                  mov     ds:word_520C0, 87h ;~ 17C5:D680
cs=0x17c5;eip=0x00d686; 	J(JMP(loc_33abc));	// 110893                  jmp     loc_33ABC ;~ 17C5:D686
loc_338b9:
	// 6548 
cs=0x17c5;eip=0x00d689; 	X(word_520c0 = 0x84;);	// 110897                  mov     ds:word_520C0, 84h ;~ 17C5:D689
cs=0x17c5;eip=0x00d68f; 	J(JMP(loc_33abc));	// 110898                  jmp     loc_33ABC ;~ 17C5:D68F
loc_338c2:
	// 6549 
cs=0x17c5;eip=0x00d692; 	X(word_520c0 = 0x85;);	// 110902                  mov     ds:word_520C0, 85h ;~ 17C5:D692
cs=0x17c5;eip=0x00d698; 	J(JMP(loc_33abc));	// 110903                  jmp     loc_33ABC ;~ 17C5:D698
loc_338cb:
	// 6550 
cs=0x17c5;eip=0x00d69b; 	X(word_520c0 = 0x89;);	// 110907                  mov     ds:word_520C0, 89h ;~ 17C5:D69B
cs=0x17c5;eip=0x00d6a1; 	J(JMP(loc_33abc));	// 110908                  jmp     loc_33ABC ;~ 17C5:D6A1
loc_338d4:
	// 6551 
cs=0x17c5;eip=0x00d6a4; 	X(word_520c0 = 0x88;);	// 110912                  mov     ds:word_520C0, 88h ;~ 17C5:D6A4
cs=0x17c5;eip=0x00d6aa; 	J(JMP(loc_33abc));	// 110913                  jmp     loc_33ABC ;~ 17C5:D6AA
loc_338dd:
	// 6552 
cs=0x17c5;eip=0x00d6ad; 	X(word_520c0 = 0x8B;);	// 110917                  mov     ds:word_520C0, 8Bh ;~ 17C5:D6AD
cs=0x17c5;eip=0x00d6b3; 	J(JMP(loc_33abc));	// 110918                  jmp     loc_33ABC ;~ 17C5:D6B3
loc_338e6:
	// 6553 
cs=0x17c5;eip=0x00d6b6; 	T(CMP(word_5206c, 0));	// 110922                  cmp     ds:word_5206C, 0 ;~ 17C5:D6B6
cs=0x17c5;eip=0x00d6bb; 	J(JZ(loc_338f0));	// 110923                  jz      short loc_338F0 ;~ 17C5:D6BB
cs=0x17c5;eip=0x00d6bd; 	J(JMP(loc_33971));	// 110924                  jmp     loc_33971 ;~ 17C5:D6BD
loc_338f0:
	// 6554 
cs=0x17c5;eip=0x00d6c0; 	T(ax = 2;);	// 110928                  mov     ax, 2 ;~ 17C5:D6C0
cs=0x17c5;eip=0x00d6c3; 	X(PUSH(ax));	// 110929                  push    ax ;~ 17C5:D6C3
cs=0x17c5;eip=0x00d6c4; 	X(PUSH(ax));	// 110930                  push    ax ;~ 17C5:D6C4
cs=0x17c5;eip=0x00d6c5; 	J(CALL(sub_33c65,0));	// 110931                  call    sub_33C65 ;~ 17C5:D6C5
cs=0x17c5;eip=0x00d6c8; 	T(ADD(sp, 4));	// 110933                  add     sp, 4 ;~ 17C5:D6C8
cs=0x17c5;eip=0x00d6cb; 	T(ax = 2;);	// 110934                  mov     ax, 2 ;~ 17C5:D6CB
cs=0x17c5;eip=0x00d6ce; 	X(PUSH(ax));	// 110935                  push    ax ;~ 17C5:D6CE
cs=0x17c5;eip=0x00d6cf; 	T(ax = 0x22;);	// 110936                  mov     ax, 22h ; '"' ;~ 17C5:D6CF
cs=0x17c5;eip=0x00d6d2; 	X(PUSH(ax));	// 110937                  push    ax ;~ 17C5:D6D2
cs=0x17c5;eip=0x00d6d3; 	J(CALL(sub_33c65,0));	// 110938                  call    sub_33C65 ;~ 17C5:D6D3
cs=0x17c5;eip=0x00d6d6; 	T(ADD(sp, 4));	// 110940                  add     sp, 4 ;~ 17C5:D6D6
cs=0x17c5;eip=0x00d6d9; 	T(ax = 0x1F4;);	// 110941                  mov     ax, 1F4h ;~ 17C5:D6D9
cs=0x17c5;eip=0x00d6dc; 	X(PUSH(ax));	// 110942                  push    ax ;~ 17C5:D6DC
cs=0x17c5;eip=0x00d6dd; 	J(CALL(sub_33430,0));	// 110943                  call    sub_33430 ;~ 17C5:D6DD
cs=0x17c5;eip=0x00d6e0; 	T(ADD(sp, 2));	// 110944                  add     sp, 2 ;~ 17C5:D6E0
cs=0x17c5;eip=0x00d6e3; 	T(ADD(ax, 0x1F4));	// 110945                  add     ax, 1F4h ;~ 17C5:D6E3
cs=0x17c5;eip=0x00d6e6; 	X(PUSH(word_4e2fa));	// 110946                  push    ds:word_4E2FA ;~ 17C5:D6E6
cs=0x17c5;eip=0x00d6ea; 	T(si = ax;);	// 110947                  mov     si, ax ;~ 17C5:D6EA
cs=0x17c5;eip=0x00d6ec; 	J(CALL(sub_34dc0,0));	// 110948                  call    sub_34DC0 ;~ 17C5:D6EC
cs=0x17c5;eip=0x00d6ef; 	T(ADD(sp, 2));	// 110949                  add     sp, 2 ;~ 17C5:D6EF
cs=0x17c5;eip=0x00d6f2; 	T(cl = 5;);	// 110950                  mov     cl, 5 ;~ 17C5:D6F2
cs=0x17c5;eip=0x00d6f4; 	T(SAR(ax, cl));	// 110951                  sar     ax, cl ;~ 17C5:D6F4
cs=0x17c5;eip=0x00d6f6; 	X(PUSH(word_4e2fc));	// 110952                  push    ds:word_4E2FC ;~ 17C5:D6F6
cs=0x17c5;eip=0x00d6fa; 	T(di = ax;);	// 110953                  mov     di, ax ;~ 17C5:D6FA
cs=0x17c5;eip=0x00d6fc; 	J(CALL(sub_34dc0,0));	// 110954                  call    sub_34DC0 ;~ 17C5:D6FC
cs=0x17c5;eip=0x00d6ff; 	T(ADD(sp, 2));	// 110955                  add     sp, 2 ;~ 17C5:D6FF
cs=0x17c5;eip=0x00d702; 	T(cl = 5;);	// 110956                  mov     cl, 5 ;~ 17C5:D702
cs=0x17c5;eip=0x00d704; 	T(SAR(ax, cl));	// 110957                  sar     ax, cl ;~ 17C5:D704
cs=0x17c5;eip=0x00d706; 	T(ADD(ax, di));	// 110958                  add     ax, di ;~ 17C5:D706
cs=0x17c5;eip=0x00d708; 	T(ADD(ax, word_50c8a));	// 110959                  add     ax, ds:word_50C8A ;~ 17C5:D708
cs=0x17c5;eip=0x00d70c; 	T(CMP(ax, si));	// 110960                  cmp     ax, si ;~ 17C5:D70C
cs=0x17c5;eip=0x00d70e; 	J(JLE(loc_3394c));	// 110961                  jle     short loc_3394C ;~ 17C5:D70E
cs=0x17c5;eip=0x00d710; 	T(ax = 6;);	// 110962                  mov     ax, 6 ;~ 17C5:D710
cs=0x17c5;eip=0x00d713; 	X(PUSH(ax));	// 110963                  push    ax ;~ 17C5:D713
cs=0x17c5;eip=0x00d714; 	J(CALL(sub_27d67,0));	// 110964                  call    sub_27D67 ;~ 17C5:D714
cs=0x17c5;eip=0x00d717; 	T(ADD(sp, 2));	// 110965                  add     sp, 2 ;~ 17C5:D717
cs=0x17c5;eip=0x00d71a; 	J(JMP(loc_33956));	// 110966                  jmp     short loc_33956 ;~ 17C5:D71A
loc_3394c:
	// 6555 
cs=0x17c5;eip=0x00d71c; 	T(LES(bx, dword_528d6));	// 110970                  les     bx, ds:dword_528D6 ;~ 17C5:D71C
cs=0x17c5;eip=0x00d720; 	X(MOV(*(dw*)(raddr(es,bx+0x26)), 2));	// 110971                  mov     word ptr es:[bx+26h], 2 ;~ 17C5:D720
loc_33956:
	// 6556 
cs=0x17c5;eip=0x00d726; 	X(word_5206c = 1;);	// 110974                  mov     ds:word_5206C, 1 ;~ 17C5:D726
cs=0x17c5;eip=0x00d72c; 	T(ax = word_520f0;);	// 110975                  mov     ax, ds:word_520F0 ;~ 17C5:D72C
cs=0x17c5;eip=0x00d72f; 	X(word_52258 = ax;);	// 110976                  mov     ds:word_52258, ax ;~ 17C5:D72F
cs=0x17c5;eip=0x00d732; 	T(ax = word_52100;);	// 110977                  mov     ax, ds:word_52100 ;~ 17C5:D732
cs=0x17c5;eip=0x00d735; 	X(word_5226a = ax;);	// 110978                  mov     ds:word_5226A, ax ;~ 17C5:D735
cs=0x17c5;eip=0x00d738; 	T(ax = word_4e2fe;);	// 110979                  mov     ax, ds:word_4E2FE ;~ 17C5:D738
cs=0x17c5;eip=0x00d73b; 	T(ADD(ax, 8));	// 110980                  add     ax, 8 ;~ 17C5:D73B
cs=0x17c5;eip=0x00d73e; 	X(word_52270 = ax;);	// 110981                  mov     ds:word_52270, ax ;~ 17C5:D73E
loc_33971:
	// 6557 
cs=0x17c5;eip=0x00d741; 	J(JMP(loc_33abc));	// 110984                  jmp     loc_33ABC ;~ 17C5:D741
ret_17c5_d744:
	// 6558 
cs=0x17c5;eip=0x00d744; 	J(JMP(loc_33abc));	// 110986                  jmp     loc_33ABC ;~ 17C5:D744
loc_33977:
	// 6559 
cs=0x17c5;eip=0x00d747; 	T(CMP(ax, 0x266C));	// 110990                  cmp     ax, 266Ch ;~ 17C5:D747
cs=0x17c5;eip=0x00d74a; 	J(JNZ(loc_3397f));	// 110991                  jnz     short loc_3397F ;~ 17C5:D74A
cs=0x17c5;eip=0x00d74c; 	J(JMP(loc_3354d));	// 110992                  jmp     loc_3354D ;~ 17C5:D74C
loc_3397f:
	// 6560 
cs=0x17c5;eip=0x00d74f; 	J(JBE(loc_33984));	// 110996                  jbe     short loc_33984 ;~ 17C5:D74F
cs=0x17c5;eip=0x00d751; 	J(JMP(loc_33a1e));	// 110997                  jmp     loc_33A1E ;~ 17C5:D751
loc_33984:
	// 6561 
cs=0x17c5;eip=0x00d754; 	T(CMP(ax, 0x1970));	// 111001                  cmp     ax, 1970h ;~ 17C5:D754
cs=0x17c5;eip=0x00d757; 	J(JNZ(loc_3398c));	// 111002                  jnz     short loc_3398C ;~ 17C5:D757
cs=0x17c5;eip=0x00d759; 	J(JMP(loc_33835));	// 111003                  jmp     loc_33835 ;~ 17C5:D759
loc_3398c:
	// 6562 
cs=0x17c5;eip=0x00d75c; 	J(JA(loc_339ce));	// 111007                  ja      short loc_339CE ;~ 17C5:D75C
cs=0x17c5;eip=0x00d75e; 	T(CMP(ax, 0x1177));	// 111008                  cmp     ax, 1177h ;~ 17C5:D75E
cs=0x17c5;eip=0x00d761; 	J(JNZ(loc_33996));	// 111009                  jnz     short loc_33996 ;~ 17C5:D761
cs=0x17c5;eip=0x00d763; 	J(JMP(loc_337df));	// 111010                  jmp     loc_337DF ;~ 17C5:D763
loc_33996:
	// 6563 
cs=0x17c5;eip=0x00d766; 	J(JA(loc_339ab));	// 111014                  ja      short loc_339AB ;~ 17C5:D766
cs=0x17c5;eip=0x00d768; 	T(CMP(ax, 0x11B));	// 111015                  cmp     ax, 11Bh ;~ 17C5:D768
cs=0x17c5;eip=0x00d76b; 	J(JNZ(loc_339a0));	// 111016                  jnz     short loc_339A0 ;~ 17C5:D76B
cs=0x17c5;eip=0x00d76d; 	J(JMP(loc_338e6));	// 111017                  jmp     loc_338E6 ;~ 17C5:D76D
loc_339a0:
	// 6564 
cs=0x17c5;eip=0x00d770; 	T(CMP(ax, 0x0E08));	// 111021                  cmp     ax, 0E08h ;~ 17C5:D770
cs=0x17c5;eip=0x00d773; 	J(JNZ(loc_339a8));	// 111022                  jnz     short loc_339A8 ;~ 17C5:D773
cs=0x17c5;eip=0x00d775; 	J(JMP(loc_33871));	// 111023                  jmp     loc_33871 ;~ 17C5:D775
loc_339a8:
	// 6565 
cs=0x17c5;eip=0x00d778; 	J(JMP(loc_33abc));	// 111027                  jmp     loc_33ABC ;~ 17C5:D778
loc_339ab:
	// 6566 
cs=0x17c5;eip=0x00d77b; 	T(CMP(ax, 0x1372));	// 111031                  cmp     ax, 1372h ;~ 17C5:D77B
cs=0x17c5;eip=0x00d77e; 	J(JNZ(loc_339b3));	// 111032                  jnz     short loc_339B3 ;~ 17C5:D77E
cs=0x17c5;eip=0x00d780; 	J(JMP(loc_334b4));	// 111033                  jmp     loc_334B4 ;~ 17C5:D780
loc_339b3:
	// 6567 
cs=0x17c5;eip=0x00d783; 	T(CMP(ax, 0x1400));	// 111037                  cmp     ax, 1400h ;~ 17C5:D783
cs=0x17c5;eip=0x00d786; 	J(JNZ(loc_339bb));	// 111038                  jnz     short loc_339BB ;~ 17C5:D786
cs=0x17c5;eip=0x00d788; 	J(JMP(loc_3370e));	// 111039                  jmp     loc_3370E ;~ 17C5:D788
loc_339bb:
	// 6568 
cs=0x17c5;eip=0x00d78b; 	T(CMP(ax, 0x1474));	// 111043                  cmp     ax, 1474h ;~ 17C5:D78B
cs=0x17c5;eip=0x00d78e; 	J(JNZ(loc_339c3));	// 111044                  jnz     short loc_339C3 ;~ 17C5:D78E
cs=0x17c5;eip=0x00d790; 	J(JMP(loc_33869));	// 111045                  jmp     loc_33869 ;~ 17C5:D790
loc_339c3:
	// 6569 
cs=0x17c5;eip=0x00d793; 	T(CMP(ax, 0x1500));	// 111049                  cmp     ax, 1500h ;~ 17C5:D793
cs=0x17c5;eip=0x00d796; 	J(JNZ(loc_339cb));	// 111050                  jnz     short loc_339CB ;~ 17C5:D796
cs=0x17c5;eip=0x00d798; 	J(JMP(loc_334ae));	// 111051                  jmp     loc_334AE ;~ 17C5:D798
loc_339cb:
	// 6570 
cs=0x17c5;eip=0x00d79b; 	J(JMP(loc_33abc));	// 111055                  jmp     loc_33ABC ;~ 17C5:D79B
loc_339ce:
	// 6571 
cs=0x17c5;eip=0x00d79e; 	T(CMP(ax, 0x2000));	// 111059                  cmp     ax, 2000h ;~ 17C5:D79E
cs=0x17c5;eip=0x00d7a1; 	J(JNZ(loc_339d6));	// 111060                  jnz     short loc_339D6 ;~ 17C5:D7A1
cs=0x17c5;eip=0x00d7a3; 	J(JMP(loc_3357c));	// 111061                  jmp     loc_3357C ;~ 17C5:D7A3
loc_339d6:
	// 6572 
cs=0x17c5;eip=0x00d7a6; 	J(JA(loc_339f3));	// 111065                  ja      short loc_339F3 ;~ 17C5:D7A6
cs=0x17c5;eip=0x00d7a8; 	T(CMP(ax, 0x1C0D));	// 111066                  cmp     ax, 1C0Dh ;~ 17C5:D7A8
cs=0x17c5;eip=0x00d7ab; 	J(JNZ(loc_339e0));	// 111067                  jnz     short loc_339E0 ;~ 17C5:D7AB
cs=0x17c5;eip=0x00d7ad; 	J(JMP(loc_3387a));	// 111068                  jmp     loc_3387A ;~ 17C5:D7AD
loc_339e0:
	// 6573 
cs=0x17c5;eip=0x00d7b0; 	T(CMP(ax, 0x1E00));	// 111072                  cmp     ax, 1E00h ;~ 17C5:D7B0
cs=0x17c5;eip=0x00d7b3; 	J(JNZ(loc_339e8));	// 111073                  jnz     short loc_339E8 ;~ 17C5:D7B3
cs=0x17c5;eip=0x00d7b5; 	J(JMP(loc_3368c));	// 111074                  jmp     loc_3368C ;~ 17C5:D7B5
loc_339e8:
	// 6574 
cs=0x17c5;eip=0x00d7b8; 	T(CMP(ax, 0x1F73));	// 111078                  cmp     ax, 1F73h ;~ 17C5:D7B8
cs=0x17c5;eip=0x00d7bb; 	J(JNZ(loc_339f0));	// 111079                  jnz     short loc_339F0 ;~ 17C5:D7BB
cs=0x17c5;eip=0x00d7bd; 	J(JMP(loc_33727));	// 111080                  jmp     loc_33727 ;~ 17C5:D7BD
loc_339f0:
	// 6575 
cs=0x17c5;eip=0x00d7c0; 	J(JMP(loc_33abc));	// 111084                  jmp     loc_33ABC ;~ 17C5:D7C0
loc_339f3:
	// 6576 
cs=0x17c5;eip=0x00d7c3; 	T(CMP(ax, 0x2064));	// 111088                  cmp     ax, 2064h ;~ 17C5:D7C3
cs=0x17c5;eip=0x00d7c6; 	J(JNZ(loc_339fb));	// 111089                  jnz     short loc_339FB ;~ 17C5:D7C6
cs=0x17c5;eip=0x00d7c8; 	J(JMP(loc_3377f));	// 111090                  jmp     loc_3377F ;~ 17C5:D7C8
loc_339fb:
	// 6577 
cs=0x17c5;eip=0x00d7cb; 	T(CMP(ax, 0x2100));	// 111094                  cmp     ax, 2100h ;~ 17C5:D7CB
cs=0x17c5;eip=0x00d7ce; 	J(JNZ(loc_33a03));	// 111095                  jnz     short loc_33A03 ;~ 17C5:D7CE
cs=0x17c5;eip=0x00d7d0; 	J(JMP(loc_33654));	// 111096                  jmp     loc_33654 ;~ 17C5:D7D0
loc_33a03:
	// 6578 
cs=0x17c5;eip=0x00d7d3; 	T(CMP(ax, 0x2166));	// 111100                  cmp     ax, 2166h ;~ 17C5:D7D3
cs=0x17c5;eip=0x00d7d6; 	J(JNZ(loc_33a0b));	// 111101                  jnz     short loc_33A0B ;~ 17C5:D7D6
cs=0x17c5;eip=0x00d7d8; 	J(JMP(loc_33533));	// 111102                  jmp     loc_33533 ;~ 17C5:D7D8
loc_33a0b:
	// 6579 
cs=0x17c5;eip=0x00d7db; 	T(CMP(ax, 0x2267));	// 111106                  cmp     ax, 2267h ;~ 17C5:D7DB
cs=0x17c5;eip=0x00d7de; 	J(JNZ(loc_33a13));	// 111107                  jnz     short loc_33A13 ;~ 17C5:D7DE
cs=0x17c5;eip=0x00d7e0; 	J(JMP(loc_33760));	// 111108                  jmp     loc_33760 ;~ 17C5:D7E0
loc_33a13:
	// 6580 
cs=0x17c5;eip=0x00d7e3; 	T(CMP(ax, 0x2500));	// 111112                  cmp     ax, 2500h ;~ 17C5:D7E3
cs=0x17c5;eip=0x00d7e6; 	J(JNZ(loc_33a1b));	// 111113                  jnz     short loc_33A1B ;~ 17C5:D7E6
cs=0x17c5;eip=0x00d7e8; 	J(JMP(loc_335d2));	// 111114                  jmp     loc_335D2 ;~ 17C5:D7E8
loc_33a1b:
	// 6581 
cs=0x17c5;eip=0x00d7eb; 	J(JMP(loc_33abc));	// 111118                  jmp     loc_33ABC ;~ 17C5:D7EB
loc_33a1e:
	// 6582 
cs=0x17c5;eip=0x00d7ee; 	T(CMP(ax, 0x3B00));	// 111122                  cmp     ax, 3B00h ;~ 17C5:D7EE
cs=0x17c5;eip=0x00d7f1; 	J(JNZ(loc_33a26));	// 111123                  jnz     short loc_33A26 ;~ 17C5:D7F1
cs=0x17c5;eip=0x00d7f3; 	J(JMP(loc_3388c));	// 111124                  jmp     loc_3388C ;~ 17C5:D7F3
loc_33a26:
	// 6583 
cs=0x17c5;eip=0x00d7f6; 	J(JA(loc_33a6e));	// 111128                  ja      short loc_33A6E ;~ 17C5:D7F6
cs=0x17c5;eip=0x00d7f8; 	T(CMP(ax, 0x2F00));	// 111129                  cmp     ax, 2F00h ;~ 17C5:D7F8
cs=0x17c5;eip=0x00d7fb; 	J(JNZ(loc_33a30));	// 111130                  jnz     short loc_33A30 ;~ 17C5:D7FB
cs=0x17c5;eip=0x00d7fd; 	J(JMP(loc_336b0));	// 111131                  jmp     loc_336B0 ;~ 17C5:D7FD
loc_33a30:
	// 6584 
cs=0x17c5;eip=0x00d800; 	J(JA(loc_33a4c));	// 111135                  ja      short loc_33A4C ;~ 17C5:D800
cs=0x17c5;eip=0x00d802; 	T(CMP(ax, 0x2C7A));	// 111136                  cmp     ax, 2C7Ah ;~ 17C5:D802
cs=0x17c5;eip=0x00d805; 	J(JNZ(loc_33a3a));	// 111137                  jnz     short loc_33A3A ;~ 17C5:D805
cs=0x17c5;eip=0x00d807; 	J(JMP(loc_33527));	// 111138                  jmp     loc_33527 ;~ 17C5:D807
loc_33a3a:
	// 6585 
cs=0x17c5;eip=0x00d80a; 	T(CMP(ax, 0x2D78));	// 111142                  cmp     ax, 2D78h ;~ 17C5:D80A
cs=0x17c5;eip=0x00d80d; 	J(JNZ(loc_33a42));	// 111143                  jnz     short loc_33A42 ;~ 17C5:D80D
cs=0x17c5;eip=0x00d80f; 	J(JMP(loc_3352d));	// 111144                  jmp     loc_3352D ;~ 17C5:D80F
loc_33a42:
	// 6586 
cs=0x17c5;eip=0x00d812; 	T(CMP(ax, 0x2E63));	// 111148                  cmp     ax, 2E63h ;~ 17C5:D812
cs=0x17c5;eip=0x00d815; 	J(JNZ(loc_33a4a));	// 111149                  jnz     short loc_33A4A ;~ 17C5:D815
cs=0x17c5;eip=0x00d817; 	J(JMP(loc_33540));	// 111150                  jmp     loc_33540 ;~ 17C5:D817
loc_33a4a:
	// 6587 
cs=0x17c5;eip=0x00d81a; 	J(JMP(loc_33abc));	// 111154                  jmp     short loc_33ABC ;~ 17C5:D81A
loc_33a4c:
	// 6588 
cs=0x17c5;eip=0x00d81c; 	T(CMP(ax, 0x3100));	// 111158                  cmp     ax, 3100h ;~ 17C5:D81C
cs=0x17c5;eip=0x00d81f; 	J(JNZ(loc_33a54));	// 111159                  jnz     short loc_33A54 ;~ 17C5:D81F
cs=0x17c5;eip=0x00d821; 	J(JMP(loc_336fc));	// 111160                  jmp     loc_336FC ;~ 17C5:D821
loc_33a54:
	// 6589 
cs=0x17c5;eip=0x00d824; 	T(CMP(ax, 0x3200));	// 111164                  cmp     ax, 3200h ;~ 17C5:D824
cs=0x17c5;eip=0x00d827; 	J(JNZ(loc_33a5c));	// 111165                  jnz     short loc_33A5C ;~ 17C5:D827
cs=0x17c5;eip=0x00d829; 	J(JMP(loc_3361c));	// 111166                  jmp     loc_3361C ;~ 17C5:D829
loc_33a5c:
	// 6590 
cs=0x17c5;eip=0x00d82c; 	T(CMP(ax, 0x326D));	// 111170                  cmp     ax, 326Dh ;~ 17C5:D82C
cs=0x17c5;eip=0x00d82f; 	J(JNZ(loc_33a64));	// 111171                  jnz     short loc_33A64 ;~ 17C5:D82F
cs=0x17c5;eip=0x00d831; 	J(JMP(loc_33746));	// 111172                  jmp     loc_33746 ;~ 17C5:D831
loc_33a64:
	// 6591 
cs=0x17c5;eip=0x00d834; 	T(CMP(ax, 0x3920));	// 111176                  cmp     ax, 3920h ;~ 17C5:D834
cs=0x17c5;eip=0x00d837; 	J(JNZ(loc_33a6c));	// 111177                  jnz     short loc_33A6C ;~ 17C5:D837
cs=0x17c5;eip=0x00d839; 	J(JMP(loc_33883));	// 111178                  jmp     loc_33883 ;~ 17C5:D839
loc_33a6c:
	// 6592 
cs=0x17c5;eip=0x00d83c; 	J(JMP(loc_33abc));	// 111182                  jmp     short loc_33ABC ;~ 17C5:D83C
loc_33a6e:
	// 6593 
cs=0x17c5;eip=0x00d83e; 	T(CMP(ax, 0x3F00));	// 111186                  cmp     ax, 3F00h ;~ 17C5:D83E
cs=0x17c5;eip=0x00d841; 	J(JNZ(loc_33a76));	// 111187                  jnz     short loc_33A76 ;~ 17C5:D841
cs=0x17c5;eip=0x00d843; 	J(JMP(loc_338b0));	// 111188                  jmp     loc_338B0 ;~ 17C5:D843
loc_33a76:
	// 6594 
cs=0x17c5;eip=0x00d846; 	J(JA(loc_33a92));	// 111192                  ja      short loc_33A92 ;~ 17C5:D846
cs=0x17c5;eip=0x00d848; 	T(CMP(ax, 0x3C00));	// 111193                  cmp     ax, 3C00h ;~ 17C5:D848
cs=0x17c5;eip=0x00d84b; 	J(JNZ(loc_33a80));	// 111194                  jnz     short loc_33A80 ;~ 17C5:D84B
cs=0x17c5;eip=0x00d84d; 	J(JMP(loc_33895));	// 111195                  jmp     loc_33895 ;~ 17C5:D84D
loc_33a80:
	// 6595 
cs=0x17c5;eip=0x00d850; 	T(CMP(ax, 0x3D00));	// 111199                  cmp     ax, 3D00h ;~ 17C5:D850
cs=0x17c5;eip=0x00d853; 	J(JNZ(loc_33a88));	// 111200                  jnz     short loc_33A88 ;~ 17C5:D853
cs=0x17c5;eip=0x00d855; 	J(JMP(loc_3389e));	// 111201                  jmp     loc_3389E ;~ 17C5:D855
loc_33a88:
	// 6596 
cs=0x17c5;eip=0x00d858; 	T(CMP(ax, 0x3E00));	// 111205                  cmp     ax, 3E00h ;~ 17C5:D858
cs=0x17c5;eip=0x00d85b; 	J(JNZ(loc_33a90));	// 111206                  jnz     short loc_33A90 ;~ 17C5:D85B
cs=0x17c5;eip=0x00d85d; 	J(JMP(loc_338a7));	// 111207                  jmp     loc_338A7 ;~ 17C5:D85D
loc_33a90:
	// 6597 
cs=0x17c5;eip=0x00d860; 	J(JMP(loc_33abc));	// 111211                  jmp     short loc_33ABC ;~ 17C5:D860
loc_33a92:
	// 6598 
cs=0x17c5;eip=0x00d862; 	T(CMP(ax, 0x4000));	// 111215                  cmp     ax, 4000h ;~ 17C5:D862
cs=0x17c5;eip=0x00d865; 	J(JNZ(loc_33a9a));	// 111216                  jnz     short loc_33A9A ;~ 17C5:D865
cs=0x17c5;eip=0x00d867; 	J(JMP(loc_338b9));	// 111217                  jmp     loc_338B9 ;~ 17C5:D867
loc_33a9a:
	// 6599 
cs=0x17c5;eip=0x00d86a; 	T(CMP(ax, 0x4100));	// 111221                  cmp     ax, 4100h ;~ 17C5:D86A
cs=0x17c5;eip=0x00d86d; 	J(JNZ(loc_33aa2));	// 111222                  jnz     short loc_33AA2 ;~ 17C5:D86D
cs=0x17c5;eip=0x00d86f; 	J(JMP(loc_338c2));	// 111223                  jmp     loc_338C2 ;~ 17C5:D86F
loc_33aa2:
	// 6600 
cs=0x17c5;eip=0x00d872; 	T(CMP(ax, 0x4200));	// 111227                  cmp     ax, 4200h ;~ 17C5:D872
cs=0x17c5;eip=0x00d875; 	J(JNZ(loc_33aaa));	// 111228                  jnz     short loc_33AAA ;~ 17C5:D875
cs=0x17c5;eip=0x00d877; 	J(JMP(loc_338cb));	// 111229                  jmp     loc_338CB ;~ 17C5:D877
loc_33aaa:
	// 6601 
cs=0x17c5;eip=0x00d87a; 	T(CMP(ax, 0x4300));	// 111233                  cmp     ax, 4300h ;~ 17C5:D87A
cs=0x17c5;eip=0x00d87d; 	J(JNZ(loc_33ab2));	// 111234                  jnz     short loc_33AB2 ;~ 17C5:D87D
cs=0x17c5;eip=0x00d87f; 	J(JMP(loc_338d4));	// 111235                  jmp     loc_338D4 ;~ 17C5:D87F
loc_33ab2:
	// 6602 
cs=0x17c5;eip=0x00d882; 	T(CMP(ax, 0x4400));	// 111239                  cmp     ax, 4400h ;~ 17C5:D882
cs=0x17c5;eip=0x00d885; 	J(JNZ(loc_33aba));	// 111240                  jnz     short loc_33ABA ;~ 17C5:D885
cs=0x17c5;eip=0x00d887; 	J(JMP(loc_338dd));	// 111241                  jmp     loc_338DD ;~ 17C5:D887
loc_33aba:
	// 6603 
cs=0x17c5;eip=0x00d88a; 	J({;});	// 111245                  jmp     short $+2 ;~ 17C5:D88A
loc_33abc:
	// 6604 
cs=0x17c5;eip=0x00d88c; 	T(TEST(word_4f42e, 0x1000));	// 111250                  test    ds:word_4F42E, 1000h ;~ 17C5:D88C
cs=0x17c5;eip=0x00d892; 	J(JNZ(loc_33ac7));	// 111251                  jnz     short loc_33AC7 ;~ 17C5:D892
cs=0x17c5;eip=0x00d894; 	J(JMP(loc_33b7b));	// 111252                  jmp     loc_33B7B ;~ 17C5:D894
loc_33ac7:
	// 6605 
cs=0x17c5;eip=0x00d897; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 111256                  mov     ax, [bp+4] ;~ 17C5:D897
cs=0x17c5;eip=0x00d89a; 	J(JMP(loc_33b5a));	// 111257                  jmp     loc_33B5A ;~ 17C5:D89A
loc_33acd:
	// 6606 
cs=0x17c5;eip=0x00d89d; 	J(CALL(sub_27bd3,0));	// 111261                  call    sub_27BD3 ;~ 17C5:D89D
cs=0x17c5;eip=0x00d8a0; 	J(JMP(loc_33b7b));	// 111262                  jmp     loc_33B7B ;~ 17C5:D8A0
loc_33ad3:
	// 6607 
cs=0x17c5;eip=0x00d8a3; 	T(SUB(ax, ax));	// 111266                  sub     ax, ax ;~ 17C5:D8A3
cs=0x17c5;eip=0x00d8a5; 	T(dx = 2;);	// 111267                  mov     dx, 2 ;~ 17C5:D8A5
cs=0x17c5;eip=0x00d8a8; 	T(cl = *(db*)(&word_4e61a););	// 111268                  mov     cl, byte ptr ds:word_4E61A ;~ 17C5:D8A8
cs=0x17c5;eip=0x00d8ac; 	T(OR(cl, cl));	// 111269                  or      cl, cl ;~ 17C5:D8AC
cs=0x17c5;eip=0x00d8ae; 	J(JZ(loc_33aea));	// 111270                  jz      short loc_33AEA ;~ 17C5:D8AE
loc_33ae0:
	// 6608 
cs=0x17c5;eip=0x00d8b0; 	T(SAR(dx, 1));	// 111273                  sar     dx, 1 ;~ 17C5:D8B0
cs=0x17c5;eip=0x00d8b2; 	T(RCR(ax, 1));	// 111274                  rcr     ax, 1 ;~ 17C5:D8B2
cs=0x17c5;eip=0x00d8b4; 	T(DEC(cl));	// 111275                  dec     cl ;~ 17C5:D8B4
cs=0x17c5;eip=0x00d8b6; 	J(JZ(loc_33aea));	// 111276                  jz      short loc_33AEA ;~ 17C5:D8B6
cs=0x17c5;eip=0x00d8b8; 	J(JMP(loc_33ae0));	// 111277                  jmp     short loc_33AE0 ;~ 17C5:D8B8
loc_33aea:
	// 6609 
cs=0x17c5;eip=0x00d8ba; 	X(ADD(word_51a28, ax));	// 111282                  add     ds:word_51A28, ax ;~ 17C5:D8BA
cs=0x17c5;eip=0x00d8be; 	X(ADC(word_51a2a, dx));	// 111283                  adc     ds:word_51A2A, dx ;~ 17C5:D8BE
cs=0x17c5;eip=0x00d8c2; 	J(JMP(loc_33b7b));	// 111284                  jmp     loc_33B7B ;~ 17C5:D8C2
loc_33af5:
	// 6610 
cs=0x17c5;eip=0x00d8c5; 	T(SUB(ax, ax));	// 111288                  sub     ax, ax ;~ 17C5:D8C5
cs=0x17c5;eip=0x00d8c7; 	T(dx = 2;);	// 111289                  mov     dx, 2 ;~ 17C5:D8C7
cs=0x17c5;eip=0x00d8ca; 	T(cl = *(db*)(&word_4e61a););	// 111290                  mov     cl, byte ptr ds:word_4E61A ;~ 17C5:D8CA
cs=0x17c5;eip=0x00d8ce; 	T(OR(cl, cl));	// 111291                  or      cl, cl ;~ 17C5:D8CE
cs=0x17c5;eip=0x00d8d0; 	J(JZ(loc_33b0c));	// 111292                  jz      short loc_33B0C ;~ 17C5:D8D0
loc_33b02:
	// 6611 
cs=0x17c5;eip=0x00d8d2; 	T(SAR(dx, 1));	// 111295                  sar     dx, 1 ;~ 17C5:D8D2
cs=0x17c5;eip=0x00d8d4; 	T(RCR(ax, 1));	// 111296                  rcr     ax, 1 ;~ 17C5:D8D4
cs=0x17c5;eip=0x00d8d6; 	T(DEC(cl));	// 111297                  dec     cl ;~ 17C5:D8D6
cs=0x17c5;eip=0x00d8d8; 	J(JZ(loc_33b0c));	// 111298                  jz      short loc_33B0C ;~ 17C5:D8D8
cs=0x17c5;eip=0x00d8da; 	J(JMP(loc_33b02));	// 111299                  jmp     short loc_33B02 ;~ 17C5:D8DA
loc_33b0c:
	// 6612 
cs=0x17c5;eip=0x00d8dc; 	X(SUB(word_51a28, ax));	// 111304                  sub     ds:word_51A28, ax ;~ 17C5:D8DC
cs=0x17c5;eip=0x00d8e0; 	X(SBB(word_51a2a, dx));	// 111305                  sbb     ds:word_51A2A, dx ;~ 17C5:D8E0
cs=0x17c5;eip=0x00d8e4; 	J(JMP(loc_33b7b));	// 111306                  jmp     short loc_33B7B ;~ 17C5:D8E4
loc_33b16:
	// 6613 
cs=0x17c5;eip=0x00d8e6; 	T(SUB(ax, ax));	// 111310                  sub     ax, ax ;~ 17C5:D8E6
cs=0x17c5;eip=0x00d8e8; 	T(dx = 2;);	// 111311                  mov     dx, 2 ;~ 17C5:D8E8
cs=0x17c5;eip=0x00d8eb; 	T(cl = *(db*)(&word_4e61a););	// 111312                  mov     cl, byte ptr ds:word_4E61A ;~ 17C5:D8EB
cs=0x17c5;eip=0x00d8ef; 	T(OR(cl, cl));	// 111313                  or      cl, cl ;~ 17C5:D8EF
cs=0x17c5;eip=0x00d8f1; 	J(JZ(loc_33b2d));	// 111314                  jz      short loc_33B2D ;~ 17C5:D8F1
loc_33b23:
	// 6614 
cs=0x17c5;eip=0x00d8f3; 	T(SAR(dx, 1));	// 111317                  sar     dx, 1 ;~ 17C5:D8F3
cs=0x17c5;eip=0x00d8f5; 	T(RCR(ax, 1));	// 111318                  rcr     ax, 1 ;~ 17C5:D8F5
cs=0x17c5;eip=0x00d8f7; 	T(DEC(cl));	// 111319                  dec     cl ;~ 17C5:D8F7
cs=0x17c5;eip=0x00d8f9; 	J(JZ(loc_33b2d));	// 111320                  jz      short loc_33B2D ;~ 17C5:D8F9
cs=0x17c5;eip=0x00d8fb; 	J(JMP(loc_33b23));	// 111321                  jmp     short loc_33B23 ;~ 17C5:D8FB
loc_33b2d:
	// 6615 
cs=0x17c5;eip=0x00d8fd; 	X(SUB(word_51a0a, ax));	// 111326                  sub     ds:word_51A0A, ax ;~ 17C5:D8FD
cs=0x17c5;eip=0x00d901; 	X(SBB(word_51a0c, dx));	// 111327                  sbb     ds:word_51A0C, dx ;~ 17C5:D901
cs=0x17c5;eip=0x00d905; 	J(JMP(loc_33b7b));	// 111328                  jmp     short loc_33B7B ;~ 17C5:D905
loc_33b37:
	// 6616 
cs=0x17c5;eip=0x00d907; 	T(SUB(ax, ax));	// 111332                  sub     ax, ax ;~ 17C5:D907
cs=0x17c5;eip=0x00d909; 	T(dx = 2;);	// 111333                  mov     dx, 2 ;~ 17C5:D909
cs=0x17c5;eip=0x00d90c; 	T(cl = *(db*)(&word_4e61a););	// 111334                  mov     cl, byte ptr ds:word_4E61A ;~ 17C5:D90C
cs=0x17c5;eip=0x00d910; 	T(OR(cl, cl));	// 111335                  or      cl, cl ;~ 17C5:D910
cs=0x17c5;eip=0x00d912; 	J(JZ(loc_33b4e));	// 111336                  jz      short loc_33B4E ;~ 17C5:D912
loc_33b44:
	// 6617 
cs=0x17c5;eip=0x00d914; 	T(SAR(dx, 1));	// 111339                  sar     dx, 1 ;~ 17C5:D914
cs=0x17c5;eip=0x00d916; 	T(RCR(ax, 1));	// 111340                  rcr     ax, 1 ;~ 17C5:D916
cs=0x17c5;eip=0x00d918; 	T(DEC(cl));	// 111341                  dec     cl ;~ 17C5:D918
cs=0x17c5;eip=0x00d91a; 	J(JZ(loc_33b4e));	// 111342                  jz      short loc_33B4E ;~ 17C5:D91A
cs=0x17c5;eip=0x00d91c; 	J(JMP(loc_33b44));	// 111343                  jmp     short loc_33B44 ;~ 17C5:D91C
loc_33b4e:
	// 6618 
cs=0x17c5;eip=0x00d91e; 	X(ADD(word_51a0a, ax));	// 111348                  add     ds:word_51A0A, ax ;~ 17C5:D91E
cs=0x17c5;eip=0x00d922; 	X(ADC(word_51a0c, dx));	// 111349                  adc     ds:word_51A0C, dx ;~ 17C5:D922
cs=0x17c5;eip=0x00d926; 	J(JMP(loc_33b7b));	// 111350                  jmp     short loc_33B7B ;~ 17C5:D926
ret_17c5_d928:
	// 6619 
cs=0x17c5;eip=0x00d928; 	J(JMP(loc_33b7b));	// 111352                  jmp     short loc_33B7B ;~ 17C5:D928
loc_33b5a:
	// 6620 
cs=0x17c5;eip=0x00d92a; 	T(CMP(ax, 0x1300));	// 111356                  cmp     ax, 1300h ;~ 17C5:D92A
cs=0x17c5;eip=0x00d92d; 	J(JNZ(loc_33b62));	// 111357                  jnz     short loc_33B62 ;~ 17C5:D92D
cs=0x17c5;eip=0x00d92f; 	J(JMP(loc_33acd));	// 111358                  jmp     loc_33ACD ;~ 17C5:D92F
loc_33b62:
	// 6621 
cs=0x17c5;eip=0x00d932; 	T(CMP(ax, 0x1F00));	// 111362                  cmp     ax, 1F00h ;~ 17C5:D932
cs=0x17c5;eip=0x00d935; 	J(JNZ(loc_33b6a));	// 111363                  jnz     short loc_33B6A ;~ 17C5:D935
cs=0x17c5;eip=0x00d937; 	J(JMP(loc_33ad3));	// 111364                  jmp     loc_33AD3 ;~ 17C5:D937
loc_33b6a:
	// 6622 
cs=0x17c5;eip=0x00d93a; 	T(CMP(ax, 0x2C00));	// 111368                  cmp     ax, 2C00h ;~ 17C5:D93A
cs=0x17c5;eip=0x00d93d; 	J(JZ(loc_33b16));	// 111369                  jz      short loc_33B16 ;~ 17C5:D93D
cs=0x17c5;eip=0x00d93f; 	T(CMP(ax, 0x2D00));	// 111370                  cmp     ax, 2D00h ;~ 17C5:D93F
cs=0x17c5;eip=0x00d942; 	J(JZ(loc_33af5));	// 111371                  jz      short loc_33AF5 ;~ 17C5:D942
cs=0x17c5;eip=0x00d944; 	T(CMP(ax, 0x2E00));	// 111372                  cmp     ax, 2E00h ;~ 17C5:D944
cs=0x17c5;eip=0x00d947; 	J(JZ(loc_33b37));	// 111373                  jz      short loc_33B37 ;~ 17C5:D947
cs=0x17c5;eip=0x00d949; 	J({;});	// 111374                  jmp     short $+2 ;~ 17C5:D949
loc_33b7b:
	// 6623 
cs=0x17c5;eip=0x00d94b; 	T(CMP(word_5206c, 0));	// 111379                  cmp     ds:word_5206C, 0 ;~ 17C5:D94B
cs=0x17c5;eip=0x00d950; 	J(JZ(loc_33b88));	// 111380                  jz      short loc_33B88 ;~ 17C5:D950
cs=0x17c5;eip=0x00d952; 	X(word_520c0 = 0x8C;);	// 111381                  mov     ds:word_520C0, 8Ch ;~ 17C5:D952
loc_33b88:
	// 6624 
cs=0x17c5;eip=0x00d958; 	T(CMP(word_4e834, 0));	// 111385                  cmp     ds:word_4E834, 0 ;~ 17C5:D958
cs=0x17c5;eip=0x00d95d; 	J(JLE(loc_33b93));	// 111386                  jle     short loc_33B93 ;~ 17C5:D95D
cs=0x17c5;eip=0x00d95f; 	X(DEC(word_4e834));	// 111387                  dec     ds:word_4E834 ;~ 17C5:D95F
loc_33b93:
	// 6625 
cs=0x17c5;eip=0x00d963; 	T(ax = 1;);	// 111390                  mov     ax, 1 ;~ 17C5:D963
cs=0x17c5;eip=0x00d966; 	X(PUSH(ax));	// 111391                  push    ax ;~ 17C5:D966
cs=0x17c5;eip=0x00d967; 	J(CALL(sub_3344e,0));	// 111392                  call    sub_3344E ;~ 17C5:D967
cs=0x17c5;eip=0x00d96a; 	T(ADD(sp, 2));	// 111393                  add     sp, 2 ;~ 17C5:D96A
cs=0x17c5;eip=0x00d96d; 	T(OR(ax, ax));	// 111394                  or      ax, ax ;~ 17C5:D96D
cs=0x17c5;eip=0x00d96f; 	J(JZ(loc_33bb1));	// 111395                  jz      short loc_33BB1 ;~ 17C5:D96F
cs=0x17c5;eip=0x00d971; 	T(CMP(word_4e834, 0));	// 111396                  cmp     ds:word_4E834, 0 ;~ 17C5:D971
cs=0x17c5;eip=0x00d976; 	J(JNZ(loc_33bb1));	// 111397                  jnz     short loc_33BB1 ;~ 17C5:D976
cs=0x17c5;eip=0x00d978; 	J(CALL(sub_2ecd6,0));	// 111398                  call    sub_2ECD6 ;~ 17C5:D978
cs=0x17c5;eip=0x00d97b; 	X(word_4e834 = 4;);	// 111399                  mov     ds:word_4E834, 4 ;~ 17C5:D97B
loc_33bb1:
	// 6626 
cs=0x17c5;eip=0x00d981; 	T(TEST(*(db*)(&word_4f42e), 1));	// 111403                  test    byte ptr ds:word_4F42E, 1 ;~ 17C5:D981
cs=0x17c5;eip=0x00d986; 	J(JZ(loc_33bbd));	// 111404                  jz      short loc_33BBD ;~ 17C5:D986
cs=0x17c5;eip=0x00d988; 	T(ax = 4;);	// 111405                  mov     ax, 4 ;~ 17C5:D988
cs=0x17c5;eip=0x00d98b; 	J(JMP(loc_33bd4));	// 111406                  jmp     short loc_33BD4 ;~ 17C5:D98B
loc_33bbd:
	// 6627 
cs=0x17c5;eip=0x00d98d; 	T(CMP(word_50c8a, 0x0FA));	// 111410                  cmp     ds:word_50C8A, 0FAh ;~ 17C5:D98D
cs=0x17c5;eip=0x00d993; 	J(JL(loc_33bcc));	// 111411                  jl      short loc_33BCC ;~ 17C5:D993
cs=0x17c5;eip=0x00d995; 	T(TEST(*(db*)(&word_49918), 1));	// 111412                  test    byte ptr word_49918, 1 ;~ 17C5:D995
cs=0x17c5;eip=0x00d99a; 	J(JZ(loc_33bd1));	// 111413                  jz      short loc_33BD1 ;~ 17C5:D99A
loc_33bcc:
	// 6628 
cs=0x17c5;eip=0x00d99c; 	T(ax = 2;);	// 111416                  mov     ax, 2 ;~ 17C5:D99C
cs=0x17c5;eip=0x00d99f; 	J(JMP(loc_33bd4));	// 111417                  jmp     short loc_33BD4 ;~ 17C5:D99F
loc_33bd1:
	// 6629 
cs=0x17c5;eip=0x00d9a1; 	T(ax = 0x0A;);	// 111421                  mov     ax, 0Ah ;~ 17C5:D9A1
loc_33bd4:
	// 6630 
cs=0x17c5;eip=0x00d9a4; 	X(PUSH(ax));	// 111425                  push    ax ;~ 17C5:D9A4
cs=0x17c5;eip=0x00d9a5; 	T(ax = 3;);	// 111426                  mov     ax, 3 ;~ 17C5:D9A5
cs=0x17c5;eip=0x00d9a8; 	X(PUSH(ax));	// 111427                  push    ax ;~ 17C5:D9A8
cs=0x17c5;eip=0x00d9a9; 	J(CALL(sub_300e6,0));	// 111428                  call    sub_300E6 ;~ 17C5:D9A9
cs=0x17c5;eip=0x00d9ac; 	T(ADD(sp, 4));	// 111429                  add     sp, 4 ;~ 17C5:D9AC
cs=0x17c5;eip=0x00d9af; 	T(TEST(*(db*)(&word_4f42e), 8));	// 111430                  test    byte ptr ds:word_4F42E, 8 ;~ 17C5:D9AF
cs=0x17c5;eip=0x00d9b4; 	J(JZ(loc_33beb));	// 111431                  jz      short loc_33BEB ;~ 17C5:D9B4
cs=0x17c5;eip=0x00d9b6; 	T(ax = 0x0E;);	// 111432                  mov     ax, 0Eh ;~ 17C5:D9B6
cs=0x17c5;eip=0x00d9b9; 	J(JMP(loc_33bfa));	// 111433                  jmp     short loc_33BFA ;~ 17C5:D9B9
loc_33beb:
	// 6631 
cs=0x17c5;eip=0x00d9bb; 	T(CMP(*(db*)(&word_48b66), 0));	// 111437                  cmp     byte ptr word_48B66, 0 ;~ 17C5:D9BB
cs=0x17c5;eip=0x00d9c0; 	J(JZ(loc_33bf7));	// 111438                  jz      short loc_33BF7 ;~ 17C5:D9C0
cs=0x17c5;eip=0x00d9c2; 	T(ax = 3;);	// 111439                  mov     ax, 3 ;~ 17C5:D9C2
cs=0x17c5;eip=0x00d9c5; 	J(JMP(loc_33bfa));	// 111440                  jmp     short loc_33BFA ;~ 17C5:D9C5
loc_33bf7:
	// 6632 
cs=0x17c5;eip=0x00d9c7; 	T(ax = 2;);	// 111444                  mov     ax, 2 ;~ 17C5:D9C7
loc_33bfa:
	// 6633 
cs=0x17c5;eip=0x00d9ca; 	X(PUSH(ax));	// 111448                  push    ax ;~ 17C5:D9CA
cs=0x17c5;eip=0x00d9cb; 	T(ax = 2;);	// 111449                  mov     ax, 2 ;~ 17C5:D9CB
cs=0x17c5;eip=0x00d9ce; 	X(PUSH(ax));	// 111450                  push    ax ;~ 17C5:D9CE
cs=0x17c5;eip=0x00d9cf; 	J(CALL(sub_300e6,0));	// 111451                  call    sub_300E6 ;~ 17C5:D9CF
cs=0x17c5;eip=0x00d9d2; 	T(ADD(sp, 4));	// 111452                  add     sp, 4 ;~ 17C5:D9D2
cs=0x17c5;eip=0x00d9d5; 	X(POP(si));	// 111453                  pop     si ;~ 17C5:D9D5
cs=0x17c5;eip=0x00d9d6; 	X(POP(di));	// 111454                  pop     di ;~ 17C5:D9D6
cs=0x17c5;eip=0x00d9d7; 	T(sp = bp;);	// 111455                  mov     sp, bp ;~ 17C5:D9D7
cs=0x17c5;eip=0x00d9d9; 	X(POP(bp));	// 111456                  pop     bp ;~ 17C5:D9D9
cs=0x17c5;eip=0x00d9da; 	J(RETN(0));	// 111457                  retn ;~ 17C5:D9DA

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_334a8: 	goto loc_334a8;
        case m2c::kloc_334ae: 	goto loc_334ae;
        case m2c::kloc_334b4: 	goto loc_334b4;
        case m2c::kloc_334c5: 	goto loc_334c5;
        case m2c::kloc_334ca: 	goto loc_334ca;
        case m2c::kloc_334da: 	goto loc_334da;
        case m2c::kloc_334ea: 	goto loc_334ea;
        case m2c::kloc_334fc: 	goto loc_334fc;
        case m2c::kloc_3350c: 	goto loc_3350c;
        case m2c::kloc_33527: 	goto loc_33527;
        case m2c::kloc_3352d: 	goto loc_3352d;
        case m2c::kloc_33533: 	goto loc_33533;
        case m2c::kloc_33540: 	goto loc_33540;
        case m2c::kloc_3354d: 	goto loc_3354d;
        case m2c::kloc_3356f: 	goto loc_3356f;
        case m2c::kloc_33579: 	goto loc_33579;
        case m2c::kloc_3357c: 	goto loc_3357c;
        case m2c::kloc_33591: 	goto loc_33591;
        case m2c::kloc_33594: 	goto loc_33594;
        case m2c::kloc_33597: 	goto loc_33597;
        case m2c::kloc_335d2: 	goto loc_335d2;
        case m2c::kloc_335e3: 	goto loc_335e3;
        case m2c::kloc_3361c: 	goto loc_3361c;
        case m2c::kloc_33654: 	goto loc_33654;
        case m2c::kloc_3368c: 	goto loc_3368c;
        case m2c::kloc_336aa: 	goto loc_336aa;
        case m2c::kloc_336ad: 	goto loc_336ad;
        case m2c::kloc_336b0: 	goto loc_336b0;
        case m2c::kloc_336fc: 	goto loc_336fc;
        case m2c::kloc_3370b: 	goto loc_3370b;
        case m2c::kloc_3370e: 	goto loc_3370e;
        case m2c::kloc_33724: 	goto loc_33724;
        case m2c::kloc_33727: 	goto loc_33727;
        case m2c::kloc_3373a: 	goto loc_3373a;
        case m2c::kloc_33746: 	goto loc_33746;
        case m2c::kloc_3375a: 	goto loc_3375a;
        case m2c::kloc_33760: 	goto loc_33760;
        case m2c::kloc_33773: 	goto loc_33773;
        case m2c::kloc_3377f: 	goto loc_3377f;
        case m2c::kloc_33790: 	goto loc_33790;
        case m2c::kloc_337c4: 	goto loc_337c4;
        case m2c::kloc_337d2: 	goto loc_337d2;
        case m2c::kloc_337df: 	goto loc_337df;
        case m2c::kloc_337f0: 	goto loc_337f0;
        case m2c::kloc_337f5: 	goto loc_337f5;
        case m2c::kloc_33801: 	goto loc_33801;
        case m2c::kloc_3380d: 	goto loc_3380d;
        case m2c::kloc_33821: 	goto loc_33821;
        case m2c::kloc_33832: 	goto loc_33832;
        case m2c::kloc_33835: 	goto loc_33835;
        case m2c::kloc_3384e: 	goto loc_3384e;
        case m2c::kloc_33859: 	goto loc_33859;
        case m2c::kloc_33866: 	goto loc_33866;
        case m2c::kloc_33869: 	goto loc_33869;
        case m2c::kloc_33871: 	goto loc_33871;
        case m2c::kloc_3387a: 	goto loc_3387a;
        case m2c::kloc_33883: 	goto loc_33883;
        case m2c::kloc_3388c: 	goto loc_3388c;
        case m2c::kloc_33895: 	goto loc_33895;
        case m2c::kloc_3389e: 	goto loc_3389e;
        case m2c::kloc_338a7: 	goto loc_338a7;
        case m2c::kloc_338b0: 	goto loc_338b0;
        case m2c::kloc_338b9: 	goto loc_338b9;
        case m2c::kloc_338c2: 	goto loc_338c2;
        case m2c::kloc_338cb: 	goto loc_338cb;
        case m2c::kloc_338d4: 	goto loc_338d4;
        case m2c::kloc_338dd: 	goto loc_338dd;
        case m2c::kloc_338e6: 	goto loc_338e6;
        case m2c::kloc_338f0: 	goto loc_338f0;
        case m2c::kloc_3394c: 	goto loc_3394c;
        case m2c::kloc_33956: 	goto loc_33956;
        case m2c::kloc_33971: 	goto loc_33971;
        case m2c::kloc_33977: 	goto loc_33977;
        case m2c::kloc_3397f: 	goto loc_3397f;
        case m2c::kloc_33984: 	goto loc_33984;
        case m2c::kloc_3398c: 	goto loc_3398c;
        case m2c::kloc_33996: 	goto loc_33996;
        case m2c::kloc_339a0: 	goto loc_339a0;
        case m2c::kloc_339a8: 	goto loc_339a8;
        case m2c::kloc_339ab: 	goto loc_339ab;
        case m2c::kloc_339b3: 	goto loc_339b3;
        case m2c::kloc_339bb: 	goto loc_339bb;
        case m2c::kloc_339c3: 	goto loc_339c3;
        case m2c::kloc_339cb: 	goto loc_339cb;
        case m2c::kloc_339ce: 	goto loc_339ce;
        case m2c::kloc_339d6: 	goto loc_339d6;
        case m2c::kloc_339e0: 	goto loc_339e0;
        case m2c::kloc_339e8: 	goto loc_339e8;
        case m2c::kloc_339f0: 	goto loc_339f0;
        case m2c::kloc_339f3: 	goto loc_339f3;
        case m2c::kloc_339fb: 	goto loc_339fb;
        case m2c::kloc_33a03: 	goto loc_33a03;
        case m2c::kloc_33a0b: 	goto loc_33a0b;
        case m2c::kloc_33a13: 	goto loc_33a13;
        case m2c::kloc_33a1b: 	goto loc_33a1b;
        case m2c::kloc_33a1e: 	goto loc_33a1e;
        case m2c::kloc_33a26: 	goto loc_33a26;
        case m2c::kloc_33a30: 	goto loc_33a30;
        case m2c::kloc_33a3a: 	goto loc_33a3a;
        case m2c::kloc_33a42: 	goto loc_33a42;
        case m2c::kloc_33a4a: 	goto loc_33a4a;
        case m2c::kloc_33a4c: 	goto loc_33a4c;
        case m2c::kloc_33a54: 	goto loc_33a54;
        case m2c::kloc_33a5c: 	goto loc_33a5c;
        case m2c::kloc_33a64: 	goto loc_33a64;
        case m2c::kloc_33a6c: 	goto loc_33a6c;
        case m2c::kloc_33a6e: 	goto loc_33a6e;
        case m2c::kloc_33a76: 	goto loc_33a76;
        case m2c::kloc_33a80: 	goto loc_33a80;
        case m2c::kloc_33a88: 	goto loc_33a88;
        case m2c::kloc_33a90: 	goto loc_33a90;
        case m2c::kloc_33a92: 	goto loc_33a92;
        case m2c::kloc_33a9a: 	goto loc_33a9a;
        case m2c::kloc_33aa2: 	goto loc_33aa2;
        case m2c::kloc_33aaa: 	goto loc_33aaa;
        case m2c::kloc_33ab2: 	goto loc_33ab2;
        case m2c::kloc_33aba: 	goto loc_33aba;
        case m2c::kloc_33abc: 	goto loc_33abc;
        case m2c::kloc_33ac7: 	goto loc_33ac7;
        case m2c::kloc_33acd: 	goto loc_33acd;
        case m2c::kloc_33ad3: 	goto loc_33ad3;
        case m2c::kloc_33ae0: 	goto loc_33ae0;
        case m2c::kloc_33aea: 	goto loc_33aea;
        case m2c::kloc_33af5: 	goto loc_33af5;
        case m2c::kloc_33b02: 	goto loc_33b02;
        case m2c::kloc_33b0c: 	goto loc_33b0c;
        case m2c::kloc_33b16: 	goto loc_33b16;
        case m2c::kloc_33b23: 	goto loc_33b23;
        case m2c::kloc_33b2d: 	goto loc_33b2d;
        case m2c::kloc_33b37: 	goto loc_33b37;
        case m2c::kloc_33b44: 	goto loc_33b44;
        case m2c::kloc_33b4e: 	goto loc_33b4e;
        case m2c::kloc_33b5a: 	goto loc_33b5a;
        case m2c::kloc_33b62: 	goto loc_33b62;
        case m2c::kloc_33b6a: 	goto loc_33b6a;
        case m2c::kloc_33b7b: 	goto loc_33b7b;
        case m2c::kloc_33b88: 	goto loc_33b88;
        case m2c::kloc_33b93: 	goto loc_33b93;
        case m2c::kloc_33bb1: 	goto loc_33bb1;
        case m2c::kloc_33bbd: 	goto loc_33bbd;
        case m2c::kloc_33bcc: 	goto loc_33bcc;
        case m2c::kloc_33bd1: 	goto loc_33bd1;
        case m2c::kloc_33bd4: 	goto loc_33bd4;
        case m2c::kloc_33beb: 	goto loc_33beb;
        case m2c::kloc_33bf7: 	goto loc_33bf7;
        case m2c::kloc_33bfa: 	goto loc_33bfa;
        case m2c::kret_17c5_d2ca: 	goto ret_17c5_d2ca;
        case m2c::kret_17c5_d524: 	goto ret_17c5_d524;
        case m2c::kret_17c5_d5ef: 	goto ret_17c5_d5ef;
        case m2c::kret_17c5_d744: 	goto ret_17c5_d744;
        case m2c::kret_17c5_d928: 	goto ret_17c5_d928;
        case m2c::kseg2623_d260_proc: 	goto seg2623_d260_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33c0b(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33c0b:
    _begin:
cs=0x17c5;eip=0x00d9db; 	X(PUSH(bp));	// 111465                  push    bp ;~ 17C5:D9DB
cs=0x17c5;eip=0x00d9dc; 	T(bp = sp;);	// 111466                  mov     bp, sp ;~ 17C5:D9DC
cs=0x17c5;eip=0x00d9de; 	T(bx = word_492e2;);	// 111467                  mov     bx, word_492E2 ;~ 17C5:D9DE
cs=0x17c5;eip=0x00d9e2; 	T(SHL(bx, 1));	// 111468                  shl     bx, 1 ;~ 17C5:D9E2
cs=0x17c5;eip=0x00d9e4; 	T(SHL(bx, 1));	// 111469                  shl     bx, 1 ;~ 17C5:D9E4
cs=0x17c5;eip=0x00d9e6; 	T(ax = 0x1A;);	// 111470                  mov     ax, 1Ah ;~ 17C5:D9E6
cs=0x17c5;eip=0x00d9e9; 	X(IMUL1_2(*(dw*)(raddr(ds,bx+0x7F2))));	// 111471                  imul    word ptr [bx+7F2h] ;~ 17C5:D9E9
cs=0x17c5;eip=0x00d9ed; 	T(ADD(ax, 0x820));	// 111472                  add     ax, 820h ;~ 17C5:D9ED
cs=0x17c5;eip=0x00d9f0; 	X(PUSH(ax));	// 111473                  push    ax ;~ 17C5:D9F0
cs=0x17c5;eip=0x00d9f1; 	T(ax = 0x66C4;);	// 111474                  mov     ax, 66C4h ;~ 17C5:D9F1
cs=0x17c5;eip=0x00d9f4; 	X(PUSH(ax));	// 111475                  push    ax ;~ 17C5:D9F4
cs=0x17c5;eip=0x00d9f5; 	J(CALL(sub_34c1c,0));	// 111476                  call    sub_34C1C ;~ 17C5:D9F5
cs=0x17c5;eip=0x00d9f8; 	T(ADD(sp, 4));	// 111477                  add     sp, 4 ;~ 17C5:D9F8
cs=0x17c5;eip=0x00d9fb; 	T(bx = word_492e2;);	// 111478                  mov     bx, word_492E2 ;~ 17C5:D9FB
cs=0x17c5;eip=0x00d9ff; 	T(SHL(bx, 1));	// 111479                  shl     bx, 1 ;~ 17C5:D9FF
cs=0x17c5;eip=0x00da01; 	T(SHL(bx, 1));	// 111480                  shl     bx, 1 ;~ 17C5:DA01
cs=0x17c5;eip=0x00da03; 	T(CMP(*(dw*)(raddr(ds,bx+0x7F4)), 0));	// 111481                  cmp     word ptr [bx+7F4h], 0 ;~ 17C5:DA03
cs=0x17c5;eip=0x00da08; 	J(JNZ(loc_33c3f));	// 111482                  jnz     short loc_33C3F ;~ 17C5:DA08
cs=0x17c5;eip=0x00da0a; 	T(ax = 0x5D5E;);	// 111483                  mov     ax, 5D5Eh ;~ 17C5:DA0A
cs=0x17c5;eip=0x00da0d; 	J(JMP(loc_33c42));	// 111484                  jmp     short loc_33C42 ;~ 17C5:DA0D
loc_33c3f:
	// 6634 
cs=0x17c5;eip=0x00da0f; 	T(ax = 0x5D6D;);	// 111488                  mov     ax, 5D6Dh ;~ 17C5:DA0F
loc_33c42:
	// 6635 
cs=0x17c5;eip=0x00da12; 	X(PUSH(ax));	// 111491                  push    ax ;~ 17C5:DA12
cs=0x17c5;eip=0x00da13; 	T(ax = 0x66C4;);	// 111492                  mov     ax, 66C4h ;~ 17C5:DA13
cs=0x17c5;eip=0x00da16; 	X(PUSH(ax));	// 111493                  push    ax ;~ 17C5:DA16
cs=0x17c5;eip=0x00da17; 	J(CALL(sub_34bdc,0));	// 111494                  call    sub_34BDC ;~ 17C5:DA17
cs=0x17c5;eip=0x00da1a; 	T(ADD(sp, 4));	// 111495                  add     sp, 4 ;~ 17C5:DA1A
cs=0x17c5;eip=0x00da1d; 	X(PUSH(word_492e2));	// 111496                  push    word_492E2 ;~ 17C5:DA1D
cs=0x17c5;eip=0x00da21; 	J(CALL(sub_27cb8,0));	// 111497                  call    sub_27CB8 ;~ 17C5:DA21
cs=0x17c5;eip=0x00da24; 	T(ADD(sp, 2));	// 111498                  add     sp, 2 ;~ 17C5:DA24
cs=0x17c5;eip=0x00da27; 	T(ax = 0x66C4;);	// 111499                  mov     ax, 66C4h ;~ 17C5:DA27
cs=0x17c5;eip=0x00da2a; 	X(PUSH(ax));	// 111500                  push    ax ;~ 17C5:DA2A
cs=0x17c5;eip=0x00da2b; 	J(CALL(sub_30414,0));	// 111501                  call    sub_30414 ;~ 17C5:DA2B
cs=0x17c5;eip=0x00da2e; 	T(ADD(sp, 2));	// 111502                  add     sp, 2 ;~ 17C5:DA2E
cs=0x17c5;eip=0x00da31; 	T(sp = bp;);	// 111503                  mov     sp, bp ;~ 17C5:DA31
cs=0x17c5;eip=0x00da33; 	X(POP(bp));	// 111504                  pop     bp ;~ 17C5:DA33
cs=0x17c5;eip=0x00da34; 	J(RETN(0));	// 111505                  retn ;~ 17C5:DA34

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33c3f: 	goto loc_33c3f;
        case m2c::kloc_33c42: 	goto loc_33c42;
        case m2c::ksub_33c0b: 	goto sub_33c0b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group60(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group60:
    _begin:
sub_33c65:
	// 111513 
#undef arg_0
#define arg_0 4
	// 111516 arg_0           = word ptr  4 ;~ 17C5:DA35
#undef arg_2
#define arg_2 6
	// 111517 arg_2           = word ptr  6 ;~ 17C5:DA35
cs=0x17c5;eip=0x00da35; 	X(PUSH(bp));	// 111519                  push    bp ;~ 17C5:DA35
cs=0x17c5;eip=0x00da36; 	T(bp = sp;);	// 111520                  mov     bp, sp ;~ 17C5:DA36
cs=0x17c5;eip=0x00da38; 	T(ax = word_4e83a;);	// 111521                  mov     ax, ds:word_4E83A ;~ 17C5:DA38
cs=0x17c5;eip=0x00da3b; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), ax));	// 111522                  cmp     [bp+arg_2], ax ;~ 17C5:DA3B
cs=0x17c5;eip=0x00da3e; 	J(JL(loc_33c88));	// 111523                  jl      short loc_33C88 ;~ 17C5:DA3E
cs=0x17c5;eip=0x00da40; 	T(CMP(word_5206c, 0));	// 111524                  cmp     ds:word_5206C, 0 ;~ 17C5:DA40
cs=0x17c5;eip=0x00da45; 	J(JZ(loc_33c7d));	// 111525                  jz      short loc_33C7D ;~ 17C5:DA45
cs=0x17c5;eip=0x00da47; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 1));	// 111526                  cmp     [bp+arg_2], 1 ;~ 17C5:DA47
cs=0x17c5;eip=0x00da4b; 	J(JLE(loc_33c88));	// 111527                  jle     short loc_33C88 ;~ 17C5:DA4B
loc_33c7d:
	// 6636 
cs=0x17c5;eip=0x00da4d; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 111530                  push    [bp+arg_0] ;~ 17C5:DA4D
cs=0x17c5;eip=0x00da50; 	J(CALLF(sub_49b9c,0));	// 111531                  call    far ptr sub_49B9C ;~ 17C5:DA50
cs=0x17c5;eip=0x00da55; 	T(ADD(sp, 2));	// 111533                  add     sp, 2 ;~ 17C5:DA55
loc_33c88:
	// 6637 
cs=0x17c5;eip=0x00da58; 	J(CALL(sub_33cbd,0));	// 111537                  call    sub_33CBD ;~ 17C5:DA58
seg2623_da5b_proc:
	// 111541 
cs=0x17c5;eip=0x00da5b; 	T(sp = bp;);	// 111541                  mov     sp, bp ;~ 17C5:DA5B
cs=0x17c5;eip=0x00da5d; 	X(POP(bp));	// 111542                  pop     bp ;~ 17C5:DA5D
cs=0x17c5;eip=0x00da5e; 	J(RETN(0));	// 111543                  retn ;~ 17C5:DA5E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33c7d: 	goto loc_33c7d;
        case m2c::kloc_33c88: 	goto loc_33c88;
        case m2c::kseg2623_da5b_proc: 	goto seg2623_da5b_proc;
        case m2c::ksub_33c65: 	goto sub_33c65;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33c8f(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33c8f:
    _begin:
#undef arg_0
#define arg_0 4
	// 111552 arg_0           = word ptr  4 ;~ 17C5:DA5F
cs=0x17c5;eip=0x00da5f; 	X(PUSH(bp));	// 111554                  push    bp ;~ 17C5:DA5F
cs=0x17c5;eip=0x00da60; 	T(bp = sp;);	// 111555                  mov     bp, sp ;~ 17C5:DA60
cs=0x17c5;eip=0x00da62; 	T(CMP(word_4e83a, 2));	// 111556                  cmp     ds:word_4E83A, 2 ;~ 17C5:DA62
cs=0x17c5;eip=0x00da67; 	J(JGE(loc_33cb9));	// 111557                  jge     short loc_33CB9 ;~ 17C5:DA67
cs=0x17c5;eip=0x00da69; 	T(CMP(word_5206c, 0));	// 111558                  cmp     ds:word_5206C, 0 ;~ 17C5:DA69
cs=0x17c5;eip=0x00da6e; 	J(JNZ(loc_33cb9));	// 111559                  jnz     short loc_33CB9 ;~ 17C5:DA6E
cs=0x17c5;eip=0x00da70; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 111560                  mov     bx, [bp+arg_0] ;~ 17C5:DA70
cs=0x17c5;eip=0x00da73; 	T(SHL(bx, 1));	// 111561                  shl     bx, 1 ;~ 17C5:DA73
cs=0x17c5;eip=0x00da75; 	T(ax = word_48b68;);	// 111562                  mov     ax, word_48B68 ;~ 17C5:DA75
cs=0x17c5;eip=0x00da78; 	T(CMP(*(dw*)(raddr(ds,bx+0x5D74)), ax));	// 111563                  cmp     [bx+5D74h], ax ;~ 17C5:DA78
cs=0x17c5;eip=0x00da7c; 	J(JNC(loc_33cb9));	// 111564                  jnb     short loc_33CB9 ;~ 17C5:DA7C
cs=0x17c5;eip=0x00da7e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 111565                  push    [bp+arg_0] ;~ 17C5:DA7E
cs=0x17c5;eip=0x00da81; 	J(CALLF(sub_49bbf,0));	// 111566                  call    far ptr sub_49BBF ;~ 17C5:DA81
cs=0x17c5;eip=0x00da86; 	T(ADD(sp, 2));	// 111568                  add     sp, 2 ;~ 17C5:DA86
loc_33cb9:
	// 6638 
cs=0x17c5;eip=0x00da89; 	T(sp = bp;);	// 111572                  mov     sp, bp ;~ 17C5:DA89
cs=0x17c5;eip=0x00da8b; 	X(POP(bp));	// 111573                  pop     bp ;~ 17C5:DA8B
cs=0x17c5;eip=0x00da8c; 	J(RETN(0));	// 111574                  retn ;~ 17C5:DA8C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33cb9: 	goto loc_33cb9;
        case m2c::ksub_33c8f: 	goto sub_33c8f;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33cbd(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33cbd:
    _begin:
cs=0x17c5;eip=0x00da8d; 	X(PUSH(bp));	// 111584                  push    bp ;~ 17C5:DA8D
cs=0x17c5;eip=0x00da8e; 	T(bp = sp;);	// 111585                  mov     bp, sp ;~ 17C5:DA8E
cs=0x17c5;eip=0x00da90; 	T(CMP(word_4e83a, 0));	// 111586                  cmp     ds:word_4E83A, 0 ;~ 17C5:DA90
cs=0x17c5;eip=0x00da95; 	J(JNZ(loc_33cce));	// 111587                  jnz     short loc_33CCE ;~ 17C5:DA95
cs=0x17c5;eip=0x00da97; 	T(CMP(word_5206c, 0));	// 111588                  cmp     ds:word_5206C, 0 ;~ 17C5:DA97
cs=0x17c5;eip=0x00da9c; 	J(JZ(loc_33cd5));	// 111589                  jz      short loc_33CD5 ;~ 17C5:DA9C
loc_33cce:
	// 6639 
cs=0x17c5;eip=0x00da9e; 	J(CALLF(sub_49bab,0));	// 111592                  call    far ptr sub_49BAB ;~ 17C5:DA9E
cs=0x17c5;eip=0x00daa3; 	J(JMP(loc_33cda));	// 111594                  jmp     short loc_33CDA ;~ 17C5:DAA3
loc_33cd5:
	// 6640 
cs=0x17c5;eip=0x00daa5; 	J(CALLF(sub_49ba6,0));	// 111598                  call    far ptr sub_49BA6 ;~ 17C5:DAA5
loc_33cda:
	// 6641 
cs=0x17c5;eip=0x00daaa; 	T(sp = bp;);	// 111602                  mov     sp, bp ;~ 17C5:DAAA
cs=0x17c5;eip=0x00daac; 	X(POP(bp));	// 111603                  pop     bp ;~ 17C5:DAAC
cs=0x17c5;eip=0x00daad; 	J(RETN(0));	// 111604                  retn ;~ 17C5:DAAD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33cce: 	goto loc_33cce;
        case m2c::kloc_33cd5: 	goto loc_33cd5;
        case m2c::kloc_33cda: 	goto loc_33cda;
        case m2c::ksub_33cbd: 	goto sub_33cbd;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33cde(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33cde:
    _begin:
cs=0x17c5;eip=0x00daae; 	X(PUSH(bp));	// 111614                  push    bp ;~ 17C5:DAAE
cs=0x17c5;eip=0x00daaf; 	T(bp = sp;);	// 111615                  mov     bp, sp ;~ 17C5:DAAF
cs=0x17c5;eip=0x00dab1; 	T(CMP(word_492f4, 0x0F));	// 111616                  cmp     word_492F4, 0Fh ;~ 17C5:DAB1
cs=0x17c5;eip=0x00dab6; 	J(JLE(loc_33d0d));	// 111617                  jle     short loc_33D0D ;~ 17C5:DAB6
cs=0x17c5;eip=0x00dab8; 	T(ax = 4;);	// 111618                  mov     ax, 4 ;~ 17C5:DAB8
cs=0x17c5;eip=0x00dabb; 	X(PUSH(ax));	// 111619                  push    ax ;~ 17C5:DABB
cs=0x17c5;eip=0x00dabc; 	T(ax = 1;);	// 111620                  mov     ax, 1 ;~ 17C5:DABC
cs=0x17c5;eip=0x00dabf; 	X(PUSH(ax));	// 111621                  push    ax ;~ 17C5:DABF
cs=0x17c5;eip=0x00dac0; 	T(ax = 0x78;);	// 111622                  mov     ax, 78h ; 'x' ;~ 17C5:DAC0
cs=0x17c5;eip=0x00dac3; 	T(CWD);	// 111623                  cwd ;~ 17C5:DAC3
cs=0x17c5;eip=0x00dac4; 	T(cx = word_492f4;);	// 111624                  mov     cx, word_492F4 ;~ 17C5:DAC4
cs=0x17c5;eip=0x00dac8; 	T(IDIV2(cx));	// 111625                  idiv    cx ;~ 17C5:DAC8
cs=0x17c5;eip=0x00daca; 	T(SUB(ax, 9));	// 111626                  sub     ax, 9 ;~ 17C5:DACA
cs=0x17c5;eip=0x00dacd; 	T(NEG(ax));	// 111627                  neg     ax ;~ 17C5:DACD
cs=0x17c5;eip=0x00dacf; 	T(SAR(ax, 1));	// 111628                  sar     ax, 1 ;~ 17C5:DACF
cs=0x17c5;eip=0x00dad1; 	X(PUSH(ax));	// 111629                  push    ax ;~ 17C5:DAD1
cs=0x17c5;eip=0x00dad2; 	J(CALL(sub_33194,0));	// 111630                  call    sub_33194 ;~ 17C5:DAD2
cs=0x17c5;eip=0x00dad5; 	T(ADD(sp, 6));	// 111631                  add     sp, 6 ;~ 17C5:DAD5
cs=0x17c5;eip=0x00dad8; 	X(word_4e830 = ax;);	// 111632                  mov     ds:word_4E830, ax ;~ 17C5:DAD8
cs=0x17c5;eip=0x00dadb; 	J(JMP(loc_33d13));	// 111633                  jmp     short loc_33D13 ;~ 17C5:DADB
loc_33d0d:
	// 6642 
cs=0x17c5;eip=0x00dadd; 	X(word_4e830 = 0;);	// 111637                  mov     ds:word_4E830, 0 ;~ 17C5:DADD
loc_33d13:
	// 6643 
cs=0x17c5;eip=0x00dae3; 	T(ax = 0x0F;);	// 111640                  mov     ax, 0Fh ;~ 17C5:DAE3
cs=0x17c5;eip=0x00dae6; 	X(PUSH(ax));	// 111641                  push    ax ;~ 17C5:DAE6
cs=0x17c5;eip=0x00dae7; 	T(ax = 4;);	// 111642                  mov     ax, 4 ;~ 17C5:DAE7
cs=0x17c5;eip=0x00daea; 	T(SUB(ax, word_4993a));	// 111643                  sub     ax, word_4993A ;~ 17C5:DAEA
cs=0x17c5;eip=0x00daee; 	X(PUSH(ax));	// 111644                  push    ax ;~ 17C5:DAEE
cs=0x17c5;eip=0x00daef; 	X(PUSH(word_492f4));	// 111645                  push    word_492F4 ;~ 17C5:DAEF
cs=0x17c5;eip=0x00daf3; 	J(CALL(sub_33194,0));	// 111646                  call    sub_33194 ;~ 17C5:DAF3
cs=0x17c5;eip=0x00daf6; 	T(ADD(sp, 6));	// 111647                  add     sp, 6 ;~ 17C5:DAF6
cs=0x17c5;eip=0x00daf9; 	X(word_492f4 = ax;);	// 111648                  mov     word_492F4, ax ;~ 17C5:DAF9
cs=0x17c5;eip=0x00dafc; 	T(ax = 0x10;);	// 111649                  mov     ax, 10h ;~ 17C5:DAFC
cs=0x17c5;eip=0x00daff; 	X(PUSH(ax));	// 111650                  push    ax ;~ 17C5:DAFF
cs=0x17c5;eip=0x00db00; 	T(ax = 3;);	// 111651                  mov     ax, 3 ;~ 17C5:DB00
cs=0x17c5;eip=0x00db03; 	X(PUSH(ax));	// 111652                  push    ax ;~ 17C5:DB03
cs=0x17c5;eip=0x00db04; 	T(ax = word_492f4;);	// 111653                  mov     ax, word_492F4 ;~ 17C5:DB04
cs=0x17c5;eip=0x00db07; 	T(SHL(ax, 1));	// 111654                  shl     ax, 1 ;~ 17C5:DB07
cs=0x17c5;eip=0x00db09; 	X(PUSH(ax));	// 111655                  push    ax ;~ 17C5:DB09
cs=0x17c5;eip=0x00db0a; 	J(CALL(sub_33194,0));	// 111656                  call    sub_33194 ;~ 17C5:DB0A
cs=0x17c5;eip=0x00db0d; 	T(ADD(sp, 6));	// 111657                  add     sp, 6 ;~ 17C5:DB0D
cs=0x17c5;eip=0x00db10; 	X(word_511d4 = ax;);	// 111658                  mov     ds:word_511D4, ax ;~ 17C5:DB10
cs=0x17c5;eip=0x00db13; 	T(ax = 0x0FA;);	// 111659                  mov     ax, 0FAh ;~ 17C5:DB13
cs=0x17c5;eip=0x00db16; 	X(IMUL1_2(word_492f4));	// 111660                  imul    word_492F4 ;~ 17C5:DB16
cs=0x17c5;eip=0x00db1a; 	X(*(dw*)(asc_512dc) = ax;);	// 111661                  mov     word ptr ds:asc_512DC, ax ; "\v\v\v\v\v\v\v\v\v\v" ;~ 17C5:DB1A
cs=0x17c5;eip=0x00db1d; 	T(ax = 0x0C8;);	// 111662                  mov     ax, 0C8h ;~ 17C5:DB1D
cs=0x17c5;eip=0x00db20; 	X(IMUL1_2(word_492f4));	// 111663                  imul    word_492F4 ;~ 17C5:DB20
cs=0x17c5;eip=0x00db24; 	X(word_4fb8c = ax;);	// 111664                  mov     ds:word_4FB8C, ax ;~ 17C5:DB24
cs=0x17c5;eip=0x00db27; 	T(sp = bp;);	// 111665                  mov     sp, bp ;~ 17C5:DB27
cs=0x17c5;eip=0x00db29; 	X(POP(bp));	// 111666                  pop     bp ;~ 17C5:DB29
cs=0x17c5;eip=0x00db2a; 	J(RETN(0));	// 111667                  retn ;~ 17C5:DB2A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33d0d: 	goto loc_33d0d;
        case m2c::kloc_33d13: 	goto loc_33d13;
        case m2c::ksub_33cde: 	goto sub_33cde;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33d5b(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33d5b:
    _begin:
#undef var_2
#define var_2 -2
	// 111678 var_2           = word ptr -2 ;~ 17C5:DB2B
cs=0x17c5;eip=0x00db2b; 	X(PUSH(bp));	// 111680                  push    bp ;~ 17C5:DB2B
cs=0x17c5;eip=0x00db2c; 	T(bp = sp;);	// 111681                  mov     bp, sp ;~ 17C5:DB2C
cs=0x17c5;eip=0x00db2e; 	T(SUB(sp, 2));	// 111682                  sub     sp, 2 ;~ 17C5:DB2E
cs=0x17c5;eip=0x00db31; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), 0));	// 111683                  mov     [bp+var_2], 0 ;~ 17C5:DB31
cs=0x17c5;eip=0x00db36; 	J(JMP(loc_33d6b));	// 111684                  jmp     short loc_33D6B ;~ 17C5:DB36
loc_33d68:
	// 6644 
cs=0x17c5;eip=0x00db38; 	X(INC(*(dw*)(raddr(ss,bp+var_2))));	// 111688                  inc     [bp+var_2] ;~ 17C5:DB38
loc_33d6b:
	// 6645 
cs=0x17c5;eip=0x00db3b; 	T(CMP(*(dw*)(raddr(ss,bp+var_2)), 6));	// 111691                  cmp     [bp+var_2], 6 ;~ 17C5:DB3B
cs=0x17c5;eip=0x00db3f; 	J(JGE(loc_33d92));	// 111692                  jge     short loc_33D92 ;~ 17C5:DB3F
cs=0x17c5;eip=0x00db41; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2))));	// 111693                  mov     bx, [bp+var_2] ;~ 17C5:DB41
cs=0x17c5;eip=0x00db44; 	T(SHL(bx, 1));	// 111694                  shl     bx, 1 ;~ 17C5:DB44
cs=0x17c5;eip=0x00db46; 	T(ax = 0x20;);	// 111695                  mov     ax, 20h ; ' ' ;~ 17C5:DB46
cs=0x17c5;eip=0x00db49; 	T(MOV(cl, *(raddr(ss,bp+var_2))));	// 111696                  mov     cl, byte ptr [bp+var_2] ;~ 17C5:DB49
cs=0x17c5;eip=0x00db4c; 	T(dx = word_4f20c;);	// 111697                  mov     dx, ds:word_4F20C ;~ 17C5:DB4C
cs=0x17c5;eip=0x00db50; 	T(CMP(dx, 2));	// 111698                  cmp     dx, 2 ;~ 17C5:DB50
cs=0x17c5;eip=0x00db53; 	J(JLE(loc_33d88));	// 111699                  jle     short loc_33D88 ;~ 17C5:DB53
cs=0x17c5;eip=0x00db55; 	T(dx = 2;);	// 111700                  mov     dx, 2 ;~ 17C5:DB55
loc_33d88:
	// 6646 
cs=0x17c5;eip=0x00db58; 	T(ADD(cl, dl));	// 111703                  add     cl, dl ;~ 17C5:DB58
cs=0x17c5;eip=0x00db5a; 	T(SHL(ax, cl));	// 111704                  shl     ax, cl ;~ 17C5:DB5A
cs=0x17c5;eip=0x00db5c; 	X(MOV(*(dw*)(raddr(ds,bx+0x18FC)), ax));	// 111705                  mov     [bx+18FCh], ax ;~ 17C5:DB5C
cs=0x17c5;eip=0x00db60; 	J(JMP(loc_33d68));	// 111706                  jmp     short loc_33D68 ;~ 17C5:DB60
loc_33d92:
	// 6647 
cs=0x17c5;eip=0x00db62; 	T(ax = word_4a3e6;);	// 111710                  mov     ax, word_4A3E6 ;~ 17C5:DB62
cs=0x17c5;eip=0x00db65; 	T(ADD(ax, word_4a3e4));	// 111711                  add     ax, word_4A3E4 ;~ 17C5:DB65
cs=0x17c5;eip=0x00db69; 	X(word_4a3e8 = ax;);	// 111712                  mov     word_4A3E8, ax ;~ 17C5:DB69
cs=0x17c5;eip=0x00db6c; 	T(ax = 0x270F;);	// 111713                  mov     ax, 270Fh ;~ 17C5:DB6C
cs=0x17c5;eip=0x00db6f; 	X(PUSH(ax));	// 111714                  push    ax ;~ 17C5:DB6F
cs=0x17c5;eip=0x00db70; 	T(ax = 0x1000;);	// 111715                  mov     ax, 1000h ;~ 17C5:DB70
cs=0x17c5;eip=0x00db73; 	X(PUSH(ax));	// 111716                  push    ax ;~ 17C5:DB73
cs=0x17c5;eip=0x00db74; 	T(ax = word_4a3e6;);	// 111717                  mov     ax, word_4A3E6 ;~ 17C5:DB74
cs=0x17c5;eip=0x00db77; 	T(SHL(ax, 1));	// 111718                  shl     ax, 1 ;~ 17C5:DB77
cs=0x17c5;eip=0x00db79; 	X(PUSH(ax));	// 111719                  push    ax ;~ 17C5:DB79
cs=0x17c5;eip=0x00db7a; 	J(CALL(sub_33194,0));	// 111720                  call    sub_33194 ;~ 17C5:DB7A
cs=0x17c5;eip=0x00db7d; 	T(ADD(sp, 6));	// 111721                  add     sp, 6 ;~ 17C5:DB7D
cs=0x17c5;eip=0x00db80; 	X(word_4a3ea = ax;);	// 111722                  mov     word_4A3EA, ax ;~ 17C5:DB80
cs=0x17c5;eip=0x00db83; 	T(ax = word_4f20c;);	// 111723                  mov     ax, ds:word_4F20C ;~ 17C5:DB83
cs=0x17c5;eip=0x00db86; 	T(CMP(ax, 2));	// 111724                  cmp     ax, 2 ;~ 17C5:DB86
cs=0x17c5;eip=0x00db89; 	J(JLE(loc_33dbe));	// 111725                  jle     short loc_33DBE ;~ 17C5:DB89
cs=0x17c5;eip=0x00db8b; 	T(ax = 2;);	// 111726                  mov     ax, 2 ;~ 17C5:DB8B
loc_33dbe:
	// 6648 
cs=0x17c5;eip=0x00db8e; 	T(cx = 0x0D05;);	// 111729                  mov     cx, 0D05h ;~ 17C5:DB8E
cs=0x17c5;eip=0x00db91; 	T(IMUL1_2(cx));	// 111730                  imul    cx ;~ 17C5:DB91
cs=0x17c5;eip=0x00db93; 	T(ADD(ax, cx));	// 111731                  add     ax, cx ;~ 17C5:DB93
cs=0x17c5;eip=0x00db95; 	X(*(word_4a3ec) = ax;);	// 111732                  mov     word_4A3EC, ax ;~ 17C5:DB95
cs=0x17c5;eip=0x00db98; 	T(sp = bp;);	// 111733                  mov     sp, bp ;~ 17C5:DB98
cs=0x17c5;eip=0x00db9a; 	X(POP(bp));	// 111734                  pop     bp ;~ 17C5:DB9A
cs=0x17c5;eip=0x00db9b; 	J(RETN(0));	// 111735                  retn ;~ 17C5:DB9B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33d68: 	goto loc_33d68;
        case m2c::kloc_33d6b: 	goto loc_33d6b;
        case m2c::kloc_33d88: 	goto loc_33d88;
        case m2c::kloc_33d92: 	goto loc_33d92;
        case m2c::kloc_33dbe: 	goto loc_33dbe;
        case m2c::ksub_33d5b: 	goto sub_33d5b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33dcc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33dcc:
    _begin:
cs=0x17c5;eip=0x00db9c; 	X(PUSH(bp));	// 111745                  push    bp ;~ 17C5:DB9C
cs=0x17c5;eip=0x00db9d; 	T(bp = sp;);	// 111746                  mov     bp, sp ;~ 17C5:DB9D
cs=0x17c5;eip=0x00db9f; 	T(CMP(word_4993a, 2));	// 111747                  cmp     word_4993A, 2 ;~ 17C5:DB9F
cs=0x17c5;eip=0x00dba4; 	J(JNZ(loc_33de3));	// 111748                  jnz     short loc_33DE3 ;~ 17C5:DBA4
cs=0x17c5;eip=0x00dba6; 	X(word_4993a = 1;);	// 111749                  mov     word_4993A, 1 ;~ 17C5:DBA6
cs=0x17c5;eip=0x00dbac; 	X(SHL(word_492f4, 1));	// 111750                  shl     word_492F4, 1 ;~ 17C5:DBAC
cs=0x17c5;eip=0x00dbb0; 	J(CALL(sub_33cde,0));	// 111751                  call    sub_33CDE ;~ 17C5:DBB0
loc_33de3:
	// 6649 
cs=0x17c5;eip=0x00dbb3; 	T(sp = bp;);	// 111754                  mov     sp, bp ;~ 17C5:DBB3
cs=0x17c5;eip=0x00dbb5; 	X(POP(bp));	// 111755                  pop     bp ;~ 17C5:DBB5
cs=0x17c5;eip=0x00dbb6; 	J(RETN(0));	// 111756                  retn ;~ 17C5:DBB6

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_33de3: 	goto loc_33de3;
        case m2c::ksub_33dcc: 	goto sub_33dcc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_dbb7_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_dbb7_proc:
    _begin:
cs=0x17c5;eip=0x00dbb7; 	X(PUSH(bp));	// 111760                  push    bp ;~ 17C5:DBB7
cs=0x17c5;eip=0x00dbb8; 	T(bp = sp;);	// 111761                  mov     bp, sp ;~ 17C5:DBB8
cs=0x17c5;eip=0x00dbba; 	X(PUSH(di));	// 111762                  push    di ;~ 17C5:DBBA
cs=0x17c5;eip=0x00dbbb; 	X(PUSH(si));	// 111763                  push    si ;~ 17C5:DBBB
cs=0x17c5;eip=0x00dbbc; 	T(MOV(si, *(dw*)(raddr(ss,bp+6))));	// 111764                  mov     si, [bp+6] ;~ 17C5:DBBC
cs=0x17c5;eip=0x00dbbf; 	T(cl = 4;);	// 111765                  mov     cl, 4 ;~ 17C5:DBBF
cs=0x17c5;eip=0x00dbc1; 	T(SHL(si, cl));	// 111766                  shl     si, cl ;~ 17C5:DBC1
cs=0x17c5;eip=0x00dbc3; 	T(MOV(di, *(dw*)(raddr(ss,bp+4))));	// 111767                  mov     di, [bp+4] ;~ 17C5:DBC3
cs=0x17c5;eip=0x00dbc6; 	T(cl = 2;);	// 111768                  mov     cl, 2 ;~ 17C5:DBC6
cs=0x17c5;eip=0x00dbc8; 	T(SHL(di, cl));	// 111769                  shl     di, cl ;~ 17C5:DBC8
cs=0x17c5;eip=0x00dbca; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E52))));	// 111770                  mov     ax, [si-7E52h] ;~ 17C5:DBCA
cs=0x17c5;eip=0x00dbce; 	X(MOV(*(dw*)(raddr(ds,di+0x172)), ax));	// 111771                  mov     [di+172h], ax ;~ 17C5:DBCE
cs=0x17c5;eip=0x00dbd2; 	T(MOV(ax, *(dw*)(raddr(ds,si-0x7E50))));	// 111772                  mov     ax, [si-7E50h] ;~ 17C5:DBD2
cs=0x17c5;eip=0x00dbd6; 	X(MOV(*(dw*)(raddr(ds,di+0x174)), ax));	// 111773                  mov     [di+174h], ax ;~ 17C5:DBD6
cs=0x17c5;eip=0x00dbda; 	X(POP(si));	// 111774                  pop     si ;~ 17C5:DBDA
cs=0x17c5;eip=0x00dbdb; 	X(POP(di));	// 111775                  pop     di ;~ 17C5:DBDB
cs=0x17c5;eip=0x00dbdc; 	T(sp = bp;);	// 111776                  mov     sp, bp ;~ 17C5:DBDC
cs=0x17c5;eip=0x00dbde; 	X(POP(bp));	// 111777                  pop     bp ;~ 17C5:DBDE
cs=0x17c5;eip=0x00dbdf; 	J(RETN(0));	// 111778                  retn ;~ 17C5:DBDF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_dbb7_proc: 	goto seg2623_dbb7_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33e10(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33e10:
    _begin:
cs=0x17c5;eip=0x00dbe0; 	X(PUSH(bp));	// 111785                  push    bp ;~ 17C5:DBE0
cs=0x17c5;eip=0x00dbe1; 	T(bp = sp;);	// 111786                  mov     bp, sp ;~ 17C5:DBE1
cs=0x17c5;eip=0x00dbe3; 	X(byte_521c3 = 0;);	// 111787                  mov     ds:byte_521C3, 0 ;~ 17C5:DBE3
cs=0x17c5;eip=0x00dbe8; 	X(byte_521c2 = 0x8D;);	// 111788                  mov     ds:byte_521C2, 8Dh ;~ 17C5:DBE8
cs=0x17c5;eip=0x00dbed; 	T(ax = 0x96E2;);	// 111789                  mov     ax, 96E2h ;~ 17C5:DBED
cs=0x17c5;eip=0x00dbf0; 	X(PUSH(ax));	// 111790                  push    ax ;~ 17C5:DBF0
cs=0x17c5;eip=0x00dbf1; 	X(PUSH(ax));	// 111791                  push    ax ;~ 17C5:DBF1
cs=0x17c5;eip=0x00dbf2; 	T(ax = 0x10;);	// 111792                  mov     ax, 10h ;~ 17C5:DBF2
cs=0x17c5;eip=0x00dbf5; 	X(PUSH(ax));	// 111793                  push    ax ;~ 17C5:DBF5
cs=0x17c5;eip=0x00dbf6; 	J(CALL(sub_34cb2,0));	// 111794                  call    sub_34CB2 ;~ 17C5:DBF6
cs=0x17c5;eip=0x00dbf9; 	T(ADD(sp, 6));	// 111795                  add     sp, 6 ;~ 17C5:DBF9
cs=0x17c5;eip=0x00dbfc; 	T(sp = bp;);	// 111796                  mov     sp, bp ;~ 17C5:DBFC
cs=0x17c5;eip=0x00dbfe; 	X(POP(bp));	// 111797                  pop     bp ;~ 17C5:DBFE
cs=0x17c5;eip=0x00dbff; 	J(RETN(0));	// 111798                  retn ;~ 17C5:DBFF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_33e10: 	goto sub_33e10;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_dc00_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_dc00_proc:
    _begin:
cs=0x17c5;eip=0x00dc00; 	X(PUSH(bp));	// 111802                  push    bp ;~ 17C5:DC00
cs=0x17c5;eip=0x00dc01; 	T(bp = sp;);	// 111803                  mov     bp, sp ;~ 17C5:DC01
cs=0x17c5;eip=0x00dc03; 	X(PUSH(di));	// 111804                  push    di ;~ 17C5:DC03
cs=0x17c5;eip=0x00dc04; 	X(PUSH(si));	// 111805                  push    si ;~ 17C5:DC04
cs=0x17c5;eip=0x00dc05; 	X(PUSH(bp));	// 111806                  push    bp ;~ 17C5:DC05
cs=0x17c5;eip=0x00dc06; 	J(CALLF(sub_499ee,0));	// 111807                  call    far ptr sub_499EE ;~ 17C5:DC06
cs=0x17c5;eip=0x00dc0b; 	X(PUSH(ax));	// 111809                  push    ax ;~ 17C5:DC0B
cs=0x17c5;eip=0x00dc0c; 	T(MOV(bx, *(dw*)(raddr(ss,bp+4))));	// 111810                  mov     bx, [bp+4] ;~ 17C5:DC0C
cs=0x17c5;eip=0x00dc0f; 	T(MOV(ax, *(dw*)(raddr(ds,bx+8))));	// 111811                  mov     ax, [bx+8] ;~ 17C5:DC0F
cs=0x17c5;eip=0x00dc12; 	X(word_4d78d = ax;);	// 111812                  mov     ds:word_4D78D, ax ;~ 17C5:DC12
cs=0x17c5;eip=0x00dc15; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0A))));	// 111813                  mov     ax, [bx+0Ah] ;~ 17C5:DC15
cs=0x17c5;eip=0x00dc18; 	X(word_4d791 = ax;);	// 111814                  mov     ds:word_4D791, ax ;~ 17C5:DC18
cs=0x17c5;eip=0x00dc1b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 111815                  mov     ax, [bp+6] ;~ 17C5:DC1B
cs=0x17c5;eip=0x00dc1e; 	X(word_4d78f = ax;);	// 111816                  mov     ds:word_4D78F, ax ;~ 17C5:DC1E
cs=0x17c5;eip=0x00dc21; 	X(MOV(*(dw*)(raddr(ds,bx+8)), ax));	// 111817                  mov     [bx+8], ax ;~ 17C5:DC21
cs=0x17c5;eip=0x00dc24; 	T(MOV(ax, *(dw*)(raddr(ss,bp+8))));	// 111818                  mov     ax, [bp+8] ;~ 17C5:DC24
cs=0x17c5;eip=0x00dc27; 	X(word_4d793 = ax;);	// 111819                  mov     ds:word_4D793, ax ;~ 17C5:DC27
cs=0x17c5;eip=0x00dc2a; 	X(MOV(*(dw*)(raddr(ds,bx+0x0A)), ax));	// 111820                  mov     [bx+0Ah], ax ;~ 17C5:DC2A
cs=0x17c5;eip=0x00dc2d; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 111821                  mov     ax, [bx] ;~ 17C5:DC2D
cs=0x17c5;eip=0x00dc2f; 	J(CALLF(sub_499df,0));	// 111822                  call    far ptr sub_499DF ;~ 17C5:DC2F
cs=0x17c5;eip=0x00dc34; 	T(MOV(ah, *(raddr(ds,bx+4))));	// 111824                  mov     ah, [bx+4] ;~ 17C5:DC34
cs=0x17c5;eip=0x00dc37; 	J(CALLF(sub_49a3e,0));	// 111825                  call    far ptr sub_49A3E ;~ 17C5:DC37
cs=0x17c5;eip=0x00dc3c; 	T(ax = word_4d78d;);	// 111827                  mov     ax, ds:word_4D78D ;~ 17C5:DC3C
cs=0x17c5;eip=0x00dc3f; 	T(bx = word_4d791;);	// 111828                  mov     bx, ds:word_4D791 ;~ 17C5:DC3F
cs=0x17c5;eip=0x00dc43; 	T(cx = word_4d78f;);	// 111829                  mov     cx, ds:word_4D78F ;~ 17C5:DC43
cs=0x17c5;eip=0x00dc47; 	T(dx = word_4d793;);	// 111830                  mov     dx, ds:word_4D793 ;~ 17C5:DC47
cs=0x17c5;eip=0x00dc4b; 	J(CALLF(sub_49a39,0));	// 111831                  call    far ptr sub_49A39 ;~ 17C5:DC4B
cs=0x17c5;eip=0x00dc50; 	J(CALLF(sub_49a4d,0));	// 111833                  call    far ptr sub_49A4D ;~ 17C5:DC50
cs=0x17c5;eip=0x00dc55; 	X(POP(ax));	// 111835                  pop     ax ;~ 17C5:DC55
cs=0x17c5;eip=0x00dc56; 	J(CALLF(sub_499e9,0));	// 111836                  call    far ptr sub_499E9 ;~ 17C5:DC56
cs=0x17c5;eip=0x00dc5b; 	X(POP(bp));	// 111838                  pop     bp ;~ 17C5:DC5B
cs=0x17c5;eip=0x00dc5c; 	X(POP(si));	// 111839                  pop     si ;~ 17C5:DC5C
cs=0x17c5;eip=0x00dc5d; 	X(POP(di));	// 111840                  pop     di ;~ 17C5:DC5D
cs=0x17c5;eip=0x00dc5e; 	X(POP(bp));	// 111841                  pop     bp ;~ 17C5:DC5E
cs=0x17c5;eip=0x00dc5f; 	J(RETN(0));	// 111842                  retn ;~ 17C5:DC5F
ret_17c5_dc60:
	// 6650 
cs=0x17c5;eip=0x00dc60; 	X(PUSH(bp));	// 111844                  push    bp ;~ 17C5:DC60
cs=0x17c5;eip=0x00dc61; 	T(bp = sp;);	// 111845                  mov     bp, sp ;~ 17C5:DC61
cs=0x17c5;eip=0x00dc63; 	X(PUSH(di));	// 111846                  push    di ;~ 17C5:DC63
cs=0x17c5;eip=0x00dc64; 	X(PUSH(si));	// 111847                  push    si ;~ 17C5:DC64
cs=0x17c5;eip=0x00dc65; 	X(PUSH(bp));	// 111848                  push    bp ;~ 17C5:DC65
cs=0x17c5;eip=0x00dc66; 	J(CALLF(sub_499ee,0));	// 111849                  call    far ptr sub_499EE ;~ 17C5:DC66
cs=0x17c5;eip=0x00dc6b; 	X(PUSH(ax));	// 111851                  push    ax ;~ 17C5:DC6B
cs=0x17c5;eip=0x00dc6c; 	T(MOV(bx, *(dw*)(raddr(ss,bp+4))));	// 111852                  mov     bx, [bp+4] ;~ 17C5:DC6C
cs=0x17c5;eip=0x00dc6f; 	T(MOV(ax, *(dw*)(raddr(ds,bx+8))));	// 111853                  mov     ax, [bx+8] ;~ 17C5:DC6F
cs=0x17c5;eip=0x00dc72; 	X(word_4d78d = ax;);	// 111854                  mov     ds:word_4D78D, ax ;~ 17C5:DC72
cs=0x17c5;eip=0x00dc75; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x0A))));	// 111855                  mov     ax, [bx+0Ah] ;~ 17C5:DC75
cs=0x17c5;eip=0x00dc78; 	X(word_4d791 = ax;);	// 111856                  mov     ds:word_4D791, ax ;~ 17C5:DC78
cs=0x17c5;eip=0x00dc7b; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 111857                  mov     ax, [bx] ;~ 17C5:DC7B
cs=0x17c5;eip=0x00dc7d; 	J(CALLF(sub_499e9,0));	// 111858                  call    far ptr sub_499E9 ;~ 17C5:DC7D
cs=0x17c5;eip=0x00dc82; 	T(MOV(ah, *(raddr(ds,bx+4))));	// 111860                  mov     ah, [bx+4] ;~ 17C5:DC82
cs=0x17c5;eip=0x00dc85; 	J(CALLF(sub_49a3e,0));	// 111861                  call    far ptr sub_49A3E ;~ 17C5:DC85
cs=0x17c5;eip=0x00dc8a; 	T(ax = word_4d78d;);	// 111863                  mov     ax, ds:word_4D78D ;~ 17C5:DC8A
cs=0x17c5;eip=0x00dc8d; 	T(bx = word_4d791;);	// 111864                  mov     bx, ds:word_4D791 ;~ 17C5:DC8D
cs=0x17c5;eip=0x00dc91; 	J(CALLF(sub_49a52,0));	// 111865                  call    far ptr sub_49A52 ;~ 17C5:DC91
cs=0x17c5;eip=0x00dc96; 	J(CALLF(sub_49a4d,0));	// 111867                  call    far ptr sub_49A4D ;~ 17C5:DC96
cs=0x17c5;eip=0x00dc9b; 	X(POP(ax));	// 111869                  pop     ax ;~ 17C5:DC9B
cs=0x17c5;eip=0x00dc9c; 	J(CALLF(sub_499e9,0));	// 111870                  call    far ptr sub_499E9 ;~ 17C5:DC9C
cs=0x17c5;eip=0x00dca1; 	X(POP(bp));	// 111872                  pop     bp ;~ 17C5:DCA1
cs=0x17c5;eip=0x00dca2; 	X(POP(si));	// 111873                  pop     si ;~ 17C5:DCA2
cs=0x17c5;eip=0x00dca3; 	X(POP(di));	// 111874                  pop     di ;~ 17C5:DCA3
cs=0x17c5;eip=0x00dca4; 	X(POP(bp));	// 111875                  pop     bp ;~ 17C5:DCA4
cs=0x17c5;eip=0x00dca5; 	J(RETN(0));	// 111876                  retn ;~ 17C5:DCA5
ret_17c5_dca6:
	// 6651 
cs=0x17c5;eip=0x00dca6; 	X(PUSH(bp));	// 111878                  push    bp ;~ 17C5:DCA6
cs=0x17c5;eip=0x00dca7; 	T(bp = sp;);	// 111879                  mov     bp, sp ;~ 17C5:DCA7
cs=0x17c5;eip=0x00dca9; 	T(SUB(sp, 4));	// 111880                  sub     sp, 4 ;~ 17C5:DCA9
cs=0x17c5;eip=0x00dcac; 	T(SUB(ax, ax));	// 111881                  sub     ax, ax ;~ 17C5:DCAC
cs=0x17c5;eip=0x00dcae; 	X(PUSH(ax));	// 111882                  push    ax ;~ 17C5:DCAE
cs=0x17c5;eip=0x00dcaf; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 111883                  push    word ptr [bp+4] ;~ 17C5:DCAF
cs=0x17c5;eip=0x00dcb2; 	J(CALL(sub_33f7c,0));	// 111884                  call    sub_33F7C ;~ 17C5:DCB2
cs=0x17c5;eip=0x00dcb5; 	T(ADD(sp, 4));	// 111885                  add     sp, 4 ;~ 17C5:DCB5
cs=0x17c5;eip=0x00dcb8; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 111886                  mov     [bp-4], ax ;~ 17C5:DCB8
cs=0x17c5;eip=0x00dcbb; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 111887                  push    word ptr [bp+6] ;~ 17C5:DCBB
cs=0x17c5;eip=0x00dcbe; 	T(ax = 0x0FFFF;);	// 111888                  mov     ax, 0FFFFh ;~ 17C5:DCBE
cs=0x17c5;eip=0x00dcc1; 	X(PUSH(ax));	// 111889                  push    ax ;~ 17C5:DCC1
cs=0x17c5;eip=0x00dcc2; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 111890                  push    word ptr [bp-4] ;~ 17C5:DCC2
cs=0x17c5;eip=0x00dcc5; 	J(CALL(sub_33fae,0));	// 111891                  call    sub_33FAE ;~ 17C5:DCC5
cs=0x17c5;eip=0x00dcc8; 	T(ADD(sp, 6));	// 111892                  add     sp, 6 ;~ 17C5:DCC8
cs=0x17c5;eip=0x00dccb; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 111893                  mov     [bp-2], ax ;~ 17C5:DCCB
cs=0x17c5;eip=0x00dcce; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 111894                  push    word ptr [bp-4] ;~ 17C5:DCCE
cs=0x17c5;eip=0x00dcd1; 	J(CALL(sub_33fa0,0));	// 111895                  call    sub_33FA0 ;~ 17C5:DCD1
cs=0x17c5;eip=0x00dcd4; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 111896                  mov     ax, [bp-2] ;~ 17C5:DCD4
cs=0x17c5;eip=0x00dcd7; 	T(sp = bp;);	// 111897                  mov     sp, bp ;~ 17C5:DCD7
cs=0x17c5;eip=0x00dcd9; 	X(POP(bp));	// 111898                  pop     bp ;~ 17C5:DCD9
cs=0x17c5;eip=0x00dcda; 	J(RETN(0));	// 111899                  retn ;~ 17C5:DCDA
ret_17c5_dcdc:
	// 6652 
cs=0x17c5;eip=0x00dcdc; 	X(PUSH(bp));	// 111902                  push    bp ;~ 17C5:DCDC
cs=0x17c5;eip=0x00dcdd; 	T(bp = sp;);	// 111903                  mov     bp, sp ;~ 17C5:DCDD
cs=0x17c5;eip=0x00dcdf; 	T(SUB(sp, 4));	// 111904                  sub     sp, 4 ;~ 17C5:DCDF
cs=0x17c5;eip=0x00dce2; 	T(SUB(ax, ax));	// 111905                  sub     ax, ax ;~ 17C5:DCE2
cs=0x17c5;eip=0x00dce4; 	X(PUSH(ax));	// 111906                  push    ax ;~ 17C5:DCE4
cs=0x17c5;eip=0x00dce5; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 111907                  push    word ptr [bp+4] ;~ 17C5:DCE5
cs=0x17c5;eip=0x00dce8; 	J(CALL(sub_33f7c,0));	// 111908                  call    sub_33F7C ;~ 17C5:DCE8
cs=0x17c5;eip=0x00dceb; 	T(ADD(sp, 4));	// 111909                  add     sp, 4 ;~ 17C5:DCEB
cs=0x17c5;eip=0x00dcee; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 111910                  mov     [bp-4], ax ;~ 17C5:DCEE
cs=0x17c5;eip=0x00dcf1; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 111911                  push    word ptr [bp+8] ;~ 17C5:DCF1
cs=0x17c5;eip=0x00dcf4; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 111912                  push    word ptr [bp+6] ;~ 17C5:DCF4
cs=0x17c5;eip=0x00dcf7; 	T(ax = 0x0FFFF;);	// 111913                  mov     ax, 0FFFFh ;~ 17C5:DCF7
cs=0x17c5;eip=0x00dcfa; 	X(PUSH(ax));	// 111914                  push    ax ;~ 17C5:DCFA
cs=0x17c5;eip=0x00dcfb; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 111915                  push    word ptr [bp-4] ;~ 17C5:DCFB
cs=0x17c5;eip=0x00dcfe; 	J(CALL(sub_33fc2,0));	// 111916                  call    sub_33FC2 ;~ 17C5:DCFE
cs=0x17c5;eip=0x00dd01; 	T(ADD(sp, 8));	// 111917                  add     sp, 8 ;~ 17C5:DD01
cs=0x17c5;eip=0x00dd04; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 111918                  mov     [bp-2], ax ;~ 17C5:DD04
cs=0x17c5;eip=0x00dd07; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 111919                  push    word ptr [bp-4] ;~ 17C5:DD07
cs=0x17c5;eip=0x00dd0a; 	J(CALL(sub_33fa0,0));	// 111920                  call    sub_33FA0 ;~ 17C5:DD0A
cs=0x17c5;eip=0x00dd0d; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 111921                  mov     ax, [bp-2] ;~ 17C5:DD0D
cs=0x17c5;eip=0x00dd10; 	T(sp = bp;);	// 111922                  mov     sp, bp ;~ 17C5:DD10
cs=0x17c5;eip=0x00dd12; 	X(POP(bp));	// 111923                  pop     bp ;~ 17C5:DD12
cs=0x17c5;eip=0x00dd13; 	J(RETN(0));	// 111924                  retn ;~ 17C5:DD13
ret_17c5_dd14:
	// 6653 
cs=0x17c5;eip=0x00dd14; 	X(PUSH(bp));	// 111926                  push    bp ;~ 17C5:DD14
cs=0x17c5;eip=0x00dd15; 	T(bp = sp;);	// 111927                  mov     bp, sp ;~ 17C5:DD15
cs=0x17c5;eip=0x00dd17; 	T(SUB(sp, 4));	// 111928                  sub     sp, 4 ;~ 17C5:DD17
cs=0x17c5;eip=0x00dd1a; 	T(SUB(ax, ax));	// 111929                  sub     ax, ax ;~ 17C5:DD1A
cs=0x17c5;eip=0x00dd1c; 	X(PUSH(ax));	// 111930                  push    ax ;~ 17C5:DD1C
cs=0x17c5;eip=0x00dd1d; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 111931                  push    word ptr [bp+4] ;~ 17C5:DD1D
cs=0x17c5;eip=0x00dd20; 	J(CALL(sub_33f8e,0));	// 111932                  call    sub_33F8E ;~ 17C5:DD20
cs=0x17c5;eip=0x00dd23; 	T(ADD(sp, 4));	// 111933                  add     sp, 4 ;~ 17C5:DD23
cs=0x17c5;eip=0x00dd26; 	X(MOV(*(dw*)(raddr(ss,bp-4)), ax));	// 111934                  mov     [bp-4], ax ;~ 17C5:DD26
cs=0x17c5;eip=0x00dd29; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 111935                  push    word ptr [bp+0Ah] ;~ 17C5:DD29
cs=0x17c5;eip=0x00dd2c; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 111936                  push    word ptr [bp+8] ;~ 17C5:DD2C
cs=0x17c5;eip=0x00dd2f; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 111937                  push    word ptr [bp+6] ;~ 17C5:DD2F
cs=0x17c5;eip=0x00dd32; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0C))));	// 111938                  push    word ptr [bp+0Ch] ;~ 17C5:DD32
cs=0x17c5;eip=0x00dd35; 	X(PUSH(ax));	// 111939                  push    ax ;~ 17C5:DD35
cs=0x17c5;eip=0x00dd36; 	J(CALL(sub_33fda,0));	// 111940                  call    sub_33FDA ;~ 17C5:DD36
cs=0x17c5;eip=0x00dd39; 	T(ADD(sp, 0x0A));	// 111941                  add     sp, 0Ah ;~ 17C5:DD39
cs=0x17c5;eip=0x00dd3c; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 111942                  mov     [bp-2], ax ;~ 17C5:DD3C
cs=0x17c5;eip=0x00dd3f; 	X(PUSH(*(dw*)(raddr(ss,bp-4))));	// 111943                  push    word ptr [bp-4] ;~ 17C5:DD3F
cs=0x17c5;eip=0x00dd42; 	J(CALL(sub_33fa0,0));	// 111944                  call    sub_33FA0 ;~ 17C5:DD42
cs=0x17c5;eip=0x00dd45; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 111945                  mov     ax, [bp-2] ;~ 17C5:DD45
cs=0x17c5;eip=0x00dd48; 	T(sp = bp;);	// 111946                  mov     sp, bp ;~ 17C5:DD48
cs=0x17c5;eip=0x00dd4a; 	X(POP(bp));	// 111947                  pop     bp ;~ 17C5:DD4A
cs=0x17c5;eip=0x00dd4b; 	J(RETN(0));	// 111948                  retn ;~ 17C5:DD4B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kret_17c5_dc60: 	goto ret_17c5_dc60;
        case m2c::kret_17c5_dca6: 	goto ret_17c5_dca6;
        case m2c::kret_17c5_dcdc: 	goto ret_17c5_dcdc;
        case m2c::kret_17c5_dd14: 	goto ret_17c5_dd14;
        case m2c::kseg2623_dc00_proc: 	goto seg2623_dc00_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33f7c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33f7c:
    _begin:
#undef arg_0
#define arg_0 4
	// 111957 arg_0           = word ptr  4 ;~ 17C5:DD4C
#undef arg_2
#define arg_2 6
	// 111958 arg_2           = word ptr  6 ;~ 17C5:DD4C
cs=0x17c5;eip=0x00dd4c; 	X(PUSH(bp));	// 111960                  push    bp ;~ 17C5:DD4C
cs=0x17c5;eip=0x00dd4d; 	T(bp = sp;);	// 111961                  mov     bp, sp ;~ 17C5:DD4D
cs=0x17c5;eip=0x00dd4f; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 111962                  push    [bp+arg_2] ;~ 17C5:DD4F
cs=0x17c5;eip=0x00dd52; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 111963                  push    [bp+arg_0] ;~ 17C5:DD52
cs=0x17c5;eip=0x00dd55; 	J(CALL(sub_33ff4,0));	// 111964                  call    sub_33FF4 ;~ 17C5:DD55
cs=0x17c5;eip=0x00dd58; 	T(ADD(sp, 4));	// 111965                  add     sp, 4 ;~ 17C5:DD58
cs=0x17c5;eip=0x00dd5b; 	X(POP(bp));	// 111966                  pop     bp ;~ 17C5:DD5B
cs=0x17c5;eip=0x00dd5c; 	J(RETN(0));	// 111967                  retn ;~ 17C5:DD5C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_33f7c: 	goto sub_33f7c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33f8e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33f8e:
    _begin:
#undef arg_0
#define arg_0 4
	// 111979 arg_0           = word ptr  4 ;~ 17C5:DD5E
#undef arg_2
#define arg_2 6
	// 111980 arg_2           = word ptr  6 ;~ 17C5:DD5E
cs=0x17c5;eip=0x00dd5e; 	X(PUSH(bp));	// 111982                  push    bp ;~ 17C5:DD5E
cs=0x17c5;eip=0x00dd5f; 	T(bp = sp;);	// 111983                  mov     bp, sp ;~ 17C5:DD5F
cs=0x17c5;eip=0x00dd61; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 111984                  push    [bp+arg_2] ;~ 17C5:DD61
cs=0x17c5;eip=0x00dd64; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 111985                  push    [bp+arg_0] ;~ 17C5:DD64
cs=0x17c5;eip=0x00dd67; 	J(CALL(sub_3404b,0));	// 111986                  call    sub_3404B ;~ 17C5:DD67
cs=0x17c5;eip=0x00dd6a; 	T(ADD(sp, 4));	// 111987                  add     sp, 4 ;~ 17C5:DD6A
cs=0x17c5;eip=0x00dd6d; 	X(POP(bp));	// 111988                  pop     bp ;~ 17C5:DD6D
cs=0x17c5;eip=0x00dd6e; 	J(RETN(0));	// 111989                  retn ;~ 17C5:DD6E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_33f8e: 	goto sub_33f8e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33fa0(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33fa0:
    _begin:
#undef arg_0
#define arg_0 4
	// 112002 arg_0           = word ptr  4 ;~ 17C5:DD70
cs=0x17c5;eip=0x00dd70; 	X(PUSH(bp));	// 112004                  push    bp ;~ 17C5:DD70
cs=0x17c5;eip=0x00dd71; 	T(bp = sp;);	// 112005                  mov     bp, sp ;~ 17C5:DD71
cs=0x17c5;eip=0x00dd73; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 112006                  push    [bp+arg_0] ;~ 17C5:DD73
cs=0x17c5;eip=0x00dd76; 	J(CALL(sub_340a2,0));	// 112007                  call    sub_340A2 ;~ 17C5:DD76
cs=0x17c5;eip=0x00dd79; 	T(ADD(sp, 2));	// 112008                  add     sp, 2 ;~ 17C5:DD79
cs=0x17c5;eip=0x00dd7c; 	X(POP(bp));	// 112009                  pop     bp ;~ 17C5:DD7C
cs=0x17c5;eip=0x00dd7d; 	J(RETN(0));	// 112010                  retn ;~ 17C5:DD7D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_33fa0: 	goto sub_33fa0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33fae(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33fae:
    _begin:
#undef arg_0
#define arg_0 4
	// 112020 arg_0           = word ptr  4 ;~ 17C5:DD7E
#undef arg_2
#define arg_2 6
	// 112021 arg_2           = word ptr  6 ;~ 17C5:DD7E
#undef arg_4
#define arg_4 8
	// 112022 arg_4           = word ptr  8 ;~ 17C5:DD7E
cs=0x17c5;eip=0x00dd7e; 	X(PUSH(bp));	// 112024                  push    bp ;~ 17C5:DD7E
cs=0x17c5;eip=0x00dd7f; 	T(bp = sp;);	// 112025                  mov     bp, sp ;~ 17C5:DD7F
cs=0x17c5;eip=0x00dd81; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 112026                  push    [bp+arg_4] ;~ 17C5:DD81
cs=0x17c5;eip=0x00dd84; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 112027                  push    [bp+arg_2] ;~ 17C5:DD84
cs=0x17c5;eip=0x00dd87; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 112028                  push    [bp+arg_0] ;~ 17C5:DD87
cs=0x17c5;eip=0x00dd8a; 	J(CALL(sub_340c4,0));	// 112029                  call    sub_340C4 ;~ 17C5:DD8A
cs=0x17c5;eip=0x00dd8d; 	T(ADD(sp, 6));	// 112030                  add     sp, 6 ;~ 17C5:DD8D
cs=0x17c5;eip=0x00dd90; 	X(POP(bp));	// 112031                  pop     bp ;~ 17C5:DD90
cs=0x17c5;eip=0x00dd91; 	J(RETN(0));	// 112032                  retn ;~ 17C5:DD91

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_33fae: 	goto sub_33fae;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33fc2(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33fc2:
    _begin:
#undef arg_0
#define arg_0 4
	// 112042 arg_0           = word ptr  4 ;~ 17C5:DD92
#undef arg_2
#define arg_2 6
	// 112043 arg_2           = word ptr  6 ;~ 17C5:DD92
#undef arg_4
#define arg_4 8
	// 112044 arg_4           = word ptr  8 ;~ 17C5:DD92
#undef arg_6
#define arg_6 0x0A
	// 112045 arg_6           = word ptr  0Ah ;~ 17C5:DD92
cs=0x17c5;eip=0x00dd92; 	X(PUSH(bp));	// 112047                  push    bp ;~ 17C5:DD92
cs=0x17c5;eip=0x00dd93; 	T(bp = sp;);	// 112048                  mov     bp, sp ;~ 17C5:DD93
cs=0x17c5;eip=0x00dd95; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 112049                  push    [bp+arg_6] ;~ 17C5:DD95
cs=0x17c5;eip=0x00dd98; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 112050                  push    [bp+arg_4] ;~ 17C5:DD98
cs=0x17c5;eip=0x00dd9b; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 112051                  push    [bp+arg_2] ;~ 17C5:DD9B
cs=0x17c5;eip=0x00dd9e; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 112052                  push    [bp+arg_0] ;~ 17C5:DD9E
cs=0x17c5;eip=0x00dda1; 	J(CALL(_group61,m2c::kloc_340ef));	// 112053                  call    loc_340EF ;~ 17C5:DDA1
cs=0x17c5;eip=0x00dda4; 	T(ADD(sp, 8));	// 112054                  add     sp, 8 ;~ 17C5:DDA4
cs=0x17c5;eip=0x00dda7; 	X(POP(bp));	// 112055                  pop     bp ;~ 17C5:DDA7
cs=0x17c5;eip=0x00dda8; 	J(RETN(0));	// 112056                  retn ;~ 17C5:DDA8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_33fc2: 	goto sub_33fc2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33fda(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33fda:
    _begin:
#undef arg_0
#define arg_0 4
	// 112068 arg_0           = word ptr  4 ;~ 17C5:DDAA
#undef arg_2
#define arg_2 6
	// 112069 arg_2           = word ptr  6 ;~ 17C5:DDAA
#undef arg_4
#define arg_4 8
	// 112070 arg_4           = word ptr  8 ;~ 17C5:DDAA
#undef arg_6
#define arg_6 0x0A
	// 112071 arg_6           = word ptr  0Ah ;~ 17C5:DDAA
#undef arg_8
#define arg_8 0x0C
	// 112072 arg_8           = word ptr  0Ch ;~ 17C5:DDAA
cs=0x17c5;eip=0x00ddaa; 	X(PUSH(bp));	// 112074                  push    bp ;~ 17C5:DDAA
cs=0x17c5;eip=0x00ddab; 	T(bp = sp;);	// 112075                  mov     bp, sp ;~ 17C5:DDAB
cs=0x17c5;eip=0x00ddad; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_8))));	// 112076                  push    [bp+arg_8] ;~ 17C5:DDAD
cs=0x17c5;eip=0x00ddb0; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_6))));	// 112077                  push    [bp+arg_6] ;~ 17C5:DDB0
cs=0x17c5;eip=0x00ddb3; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 112078                  push    [bp+arg_4] ;~ 17C5:DDB3
cs=0x17c5;eip=0x00ddb6; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 112079                  push    [bp+arg_2] ;~ 17C5:DDB6
cs=0x17c5;eip=0x00ddb9; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 112080                  push    [bp+arg_0] ;~ 17C5:DDB9
cs=0x17c5;eip=0x00ddbc; 	J(CALL(_group61,m2c::kloc_3417f));	// 112081                  call    loc_3417F ;~ 17C5:DDBC
cs=0x17c5;eip=0x00ddbf; 	T(ADD(sp, 0x0A));	// 112082                  add     sp, 0Ah ;~ 17C5:DDBF
cs=0x17c5;eip=0x00ddc2; 	X(POP(bp));	// 112083                  pop     bp ;~ 17C5:DDC2
cs=0x17c5;eip=0x00ddc3; 	J(RETN(0));	// 112084                  retn ;~ 17C5:DDC3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_33fda: 	goto sub_33fda;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_33ff4(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_33ff4:
    _begin:
#undef arg_0
#define arg_0 4
	// 112094 arg_0           = word ptr  4 ;~ 17C5:DDC4
#undef arg_2
#define arg_2 6
	// 112095 arg_2           = byte ptr  6 ;~ 17C5:DDC4
cs=0x17c5;eip=0x00ddc4; 	X(PUSH(bp));	// 112097                  push    bp ;~ 17C5:DDC4
cs=0x17c5;eip=0x00ddc5; 	T(bp = sp;);	// 112098                  mov     bp, sp ;~ 17C5:DDC5
cs=0x17c5;eip=0x00ddc7; 	X(PUSH(di));	// 112099                  push    di ;~ 17C5:DDC7
cs=0x17c5;eip=0x00ddc8; 	X(PUSH(si));	// 112100                  push    si ;~ 17C5:DDC8
cs=0x17c5;eip=0x00ddc9; 	X(PUSH(es));	// 112101                  push    es ;~ 17C5:DDC9
cs=0x17c5;eip=0x00ddca; 	X(PUSH(bp));	// 112102                  push    bp ;~ 17C5:DDCA
cs=0x17c5;eip=0x00ddcb; 	T(ah = 0x3D;);	// 112103                  mov     ah, 3Dh ; '=' ;~ 17C5:DDCB
cs=0x17c5;eip=0x00ddcd; 	T(MOV(al, *(raddr(ss,bp+arg_2))));	// 112104                  mov     al, [bp+arg_2] ;~ 17C5:DDCD
cs=0x17c5;eip=0x00ddd0; 	T(bx = ss;);	// 112105                  mov     bx, ss ;~ 17C5:DDD0
cs=0x17c5;eip=0x00ddd2; 	T(ds = bx;);	// 112106                  mov     ds, bx ;~ 17C5:DDD2
cs=0x17c5;eip=0x00ddd4; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 112107                  mov     dx, [bp+arg_0] ;~ 17C5:DDD4
cs=0x17c5;eip=0x00ddd7; 	S(_INT(0x21));	// 112108                  int     21h             ; DOS - 2+ - OPEN DISK FILE WITH HANDLE ;~ 17C5:DDD7
cs=0x17c5;eip=0x00ddd9; 	J(JNC(loc_3403d));	// 112112                  jnb     short loc_3403D ;~ 17C5:DDD9
cs=0x17c5;eip=0x00dddb; 	T(CMP(ax, 2));	// 112113                  cmp     ax, 2 ;~ 17C5:DDDB
cs=0x17c5;eip=0x00ddde; 	J(JNZ(loc_3401c));	// 112114                  jnz     short loc_3401C ;~ 17C5:DDDE
loc_34010:
	// 6654 
cs=0x17c5;eip=0x00dde0; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112117                  mov     bx, [bp+arg_0] ;~ 17C5:DDE0
cs=0x17c5;eip=0x00dde3; 	T(ax = 0x5F7C;);	// 112118                  mov     ax, 5F7Ch ;~ 17C5:DDE3
cs=0x17c5;eip=0x00dde6; 	T(cx = 0x0FFFF;);	// 112119                  mov     cx, 0FFFFh ;~ 17C5:DDE6
cs=0x17c5;eip=0x00dde9; 	J(return _group61(m2c::kloc_341b0, _state););	// 112120                  jmp     loc_341B0 ;~ 17C5:DDE9
loc_3401c:
	// 6655 
cs=0x17c5;eip=0x00ddec; 	T(CMP(ax, 3));	// 112124                  cmp     ax, 3 ;~ 17C5:DDEC
cs=0x17c5;eip=0x00ddef; 	J(JZ(loc_34010));	// 112125                  jz      short loc_34010 ;~ 17C5:DDEF
cs=0x17c5;eip=0x00ddf1; 	T(CMP(ax, 4));	// 112126                  cmp     ax, 4 ;~ 17C5:DDF1
cs=0x17c5;eip=0x00ddf4; 	J(JNZ(loc_34032));	// 112127                  jnz     short loc_34032 ;~ 17C5:DDF4
cs=0x17c5;eip=0x00ddf6; 	T(cx = 0x0FFFF;);	// 112128                  mov     cx, 0FFFFh ;~ 17C5:DDF6
cs=0x17c5;eip=0x00ddf9; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112129                  mov     bx, [bp+arg_0] ;~ 17C5:DDF9
cs=0x17c5;eip=0x00ddfc; 	T(ax = 0x5F8C;);	// 112130                  mov     ax, 5F8Ch ;~ 17C5:DDFC
cs=0x17c5;eip=0x00ddff; 	J(return _group61(m2c::kloc_341b0, _state););	// 112131                  jmp     loc_341B0 ;~ 17C5:DDFF
loc_34032:
	// 6656 
cs=0x17c5;eip=0x00de02; 	T(cx = ax;);	// 112135                  mov     cx, ax ;~ 17C5:DE02
cs=0x17c5;eip=0x00de04; 	T(ax = 0x5FA7;);	// 112136                  mov     ax, 5FA7h ;~ 17C5:DE04
cs=0x17c5;eip=0x00de07; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112137                  mov     bx, [bp+arg_0] ;~ 17C5:DE07
cs=0x17c5;eip=0x00de0a; 	J(return _group61(m2c::kloc_341b0, _state););	// 112138                  jmp     loc_341B0 ;~ 17C5:DE0A
loc_3403d:
	// 6657 
cs=0x17c5;eip=0x00de0d; 	X(word_4eac4 = 0x200;);	// 112142                  mov     ds:word_4EAC4, 200h ;~ 17C5:DE0D
cs=0x17c5;eip=0x00de13; 	X(POP(bp));	// 112143                  pop     bp ;~ 17C5:DE13
cs=0x17c5;eip=0x00de14; 	X(POP(es));	// 112144                  pop     es ;~ 17C5:DE14
cs=0x17c5;eip=0x00de15; 	X(POP(si));	// 112145                  pop     si ;~ 17C5:DE15
cs=0x17c5;eip=0x00de16; 	X(POP(di));	// 112146                  pop     di ;~ 17C5:DE16
cs=0x17c5;eip=0x00de17; 	T(sp = bp;);	// 112147                  mov     sp, bp ;~ 17C5:DE17
cs=0x17c5;eip=0x00de19; 	X(POP(bp));	// 112148                  pop     bp ;~ 17C5:DE19
cs=0x17c5;eip=0x00de1a; 	J(RETN(0));	// 112149                  retn ;~ 17C5:DE1A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34010: 	goto loc_34010;
        case m2c::kloc_3401c: 	goto loc_3401c;
        case m2c::kloc_34032: 	goto loc_34032;
        case m2c::kloc_3403d: 	goto loc_3403d;
        case m2c::ksub_33ff4: 	goto sub_33ff4;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_3404b(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_3404b:
    _begin:
#undef arg_0
#define arg_0 4
	// 112159 arg_0           = word ptr  4 ;~ 17C5:DE1B
#undef arg_2
#define arg_2 6
	// 112160 arg_2           = word ptr  6 ;~ 17C5:DE1B
cs=0x17c5;eip=0x00de1b; 	X(PUSH(bp));	// 112162                  push    bp ;~ 17C5:DE1B
cs=0x17c5;eip=0x00de1c; 	T(bp = sp;);	// 112163                  mov     bp, sp ;~ 17C5:DE1C
cs=0x17c5;eip=0x00de1e; 	X(PUSH(di));	// 112164                  push    di ;~ 17C5:DE1E
cs=0x17c5;eip=0x00de1f; 	X(PUSH(si));	// 112165                  push    si ;~ 17C5:DE1F
cs=0x17c5;eip=0x00de20; 	X(PUSH(es));	// 112166                  push    es ;~ 17C5:DE20
cs=0x17c5;eip=0x00de21; 	X(PUSH(bp));	// 112167                  push    bp ;~ 17C5:DE21
cs=0x17c5;eip=0x00de22; 	T(ah = 0x3C;);	// 112168                  mov     ah, 3Ch ; '<' ;~ 17C5:DE22
cs=0x17c5;eip=0x00de24; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_2))));	// 112169                  mov     cx, [bp+arg_2] ;~ 17C5:DE24
cs=0x17c5;eip=0x00de27; 	T(bx = ss;);	// 112170                  mov     bx, ss ;~ 17C5:DE27
cs=0x17c5;eip=0x00de29; 	T(ds = bx;);	// 112171                  mov     ds, bx ;~ 17C5:DE29
cs=0x17c5;eip=0x00de2b; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 112172                  mov     dx, [bp+arg_0] ;~ 17C5:DE2B
cs=0x17c5;eip=0x00de2e; 	S(_INT(0x21));	// 112173                  int     21h             ; DOS - 2+ - CREATE A FILE WITH HANDLE (CREAT) ;~ 17C5:DE2E
cs=0x17c5;eip=0x00de30; 	J(JNC(loc_34094));	// 112176                  jnb     short loc_34094 ;~ 17C5:DE30
cs=0x17c5;eip=0x00de32; 	T(CMP(ax, 2));	// 112177                  cmp     ax, 2 ;~ 17C5:DE32
cs=0x17c5;eip=0x00de35; 	J(JNZ(loc_34073));	// 112178                  jnz     short loc_34073 ;~ 17C5:DE35
loc_34067:
	// 6658 
cs=0x17c5;eip=0x00de37; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112181                  mov     bx, [bp+arg_0] ;~ 17C5:DE37
cs=0x17c5;eip=0x00de3a; 	T(ax = 0x5F7C;);	// 112182                  mov     ax, 5F7Ch ;~ 17C5:DE3A
cs=0x17c5;eip=0x00de3d; 	T(cx = 0x0FFFF;);	// 112183                  mov     cx, 0FFFFh ;~ 17C5:DE3D
cs=0x17c5;eip=0x00de40; 	J(return _group61(m2c::kloc_341b0, _state););	// 112184                  jmp     loc_341B0 ;~ 17C5:DE40
loc_34073:
	// 6659 
cs=0x17c5;eip=0x00de43; 	T(CMP(ax, 3));	// 112188                  cmp     ax, 3 ;~ 17C5:DE43
cs=0x17c5;eip=0x00de46; 	J(JZ(loc_34067));	// 112189                  jz      short loc_34067 ;~ 17C5:DE46
cs=0x17c5;eip=0x00de48; 	T(CMP(ax, 4));	// 112190                  cmp     ax, 4 ;~ 17C5:DE48
cs=0x17c5;eip=0x00de4b; 	J(JNZ(loc_34089));	// 112191                  jnz     short loc_34089 ;~ 17C5:DE4B
cs=0x17c5;eip=0x00de4d; 	T(cx = 0x0FFFF;);	// 112192                  mov     cx, 0FFFFh ;~ 17C5:DE4D
cs=0x17c5;eip=0x00de50; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112193                  mov     bx, [bp+arg_0] ;~ 17C5:DE50
cs=0x17c5;eip=0x00de53; 	T(ax = 0x5F8C;);	// 112194                  mov     ax, 5F8Ch ;~ 17C5:DE53
cs=0x17c5;eip=0x00de56; 	J(return _group61(m2c::kloc_341b0, _state););	// 112195                  jmp     loc_341B0 ;~ 17C5:DE56
loc_34089:
	// 6660 
cs=0x17c5;eip=0x00de59; 	T(cx = ax;);	// 112199                  mov     cx, ax ;~ 17C5:DE59
cs=0x17c5;eip=0x00de5b; 	T(ax = 0x5FA7;);	// 112200                  mov     ax, 5FA7h ;~ 17C5:DE5B
cs=0x17c5;eip=0x00de5e; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112201                  mov     bx, [bp+arg_0] ;~ 17C5:DE5E
cs=0x17c5;eip=0x00de61; 	J(return _group61(m2c::kloc_341b0, _state););	// 112202                  jmp     loc_341B0 ;~ 17C5:DE61
loc_34094:
	// 6661 
cs=0x17c5;eip=0x00de64; 	X(word_4eac4 = 0x200;);	// 112206                  mov     ds:word_4EAC4, 200h ;~ 17C5:DE64
cs=0x17c5;eip=0x00de6a; 	X(POP(bp));	// 112207                  pop     bp ;~ 17C5:DE6A
cs=0x17c5;eip=0x00de6b; 	X(POP(es));	// 112208                  pop     es ;~ 17C5:DE6B
cs=0x17c5;eip=0x00de6c; 	X(POP(si));	// 112209                  pop     si ;~ 17C5:DE6C
cs=0x17c5;eip=0x00de6d; 	X(POP(di));	// 112210                  pop     di ;~ 17C5:DE6D
cs=0x17c5;eip=0x00de6e; 	T(sp = bp;);	// 112211                  mov     sp, bp ;~ 17C5:DE6E
cs=0x17c5;eip=0x00de70; 	X(POP(bp));	// 112212                  pop     bp ;~ 17C5:DE70
cs=0x17c5;eip=0x00de71; 	J(RETN(0));	// 112213                  retn ;~ 17C5:DE71

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34067: 	goto loc_34067;
        case m2c::kloc_34073: 	goto loc_34073;
        case m2c::kloc_34089: 	goto loc_34089;
        case m2c::kloc_34094: 	goto loc_34094;
        case m2c::ksub_3404b: 	goto sub_3404b;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_340a2(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_340a2:
    _begin:
#undef arg_0
#define arg_0 4
	// 112223 arg_0           = word ptr  4 ;~ 17C5:DE72
cs=0x17c5;eip=0x00de72; 	X(PUSH(bp));	// 112225                  push    bp ;~ 17C5:DE72
cs=0x17c5;eip=0x00de73; 	T(bp = sp;);	// 112226                  mov     bp, sp ;~ 17C5:DE73
cs=0x17c5;eip=0x00de75; 	X(PUSH(di));	// 112227                  push    di ;~ 17C5:DE75
cs=0x17c5;eip=0x00de76; 	X(PUSH(si));	// 112228                  push    si ;~ 17C5:DE76
cs=0x17c5;eip=0x00de77; 	X(PUSH(es));	// 112229                  push    es ;~ 17C5:DE77
cs=0x17c5;eip=0x00de78; 	X(PUSH(bp));	// 112230                  push    bp ;~ 17C5:DE78
cs=0x17c5;eip=0x00de79; 	T(ah = 0x3E;);	// 112231                  mov     ah, 3Eh ; '>' ;~ 17C5:DE79
cs=0x17c5;eip=0x00de7b; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112232                  mov     bx, [bp+arg_0] ;~ 17C5:DE7B
cs=0x17c5;eip=0x00de7e; 	S(_INT(0x21));	// 112233                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:DE7E
cs=0x17c5;eip=0x00de80; 	J(JNC(loc_340bb));	// 112235                  jnb     short loc_340BB ;~ 17C5:DE80
cs=0x17c5;eip=0x00de82; 	T(dx = 0x5FB4;);	// 112236                  mov     dx, 5FB4h ;~ 17C5:DE82
cs=0x17c5;eip=0x00de85; 	T(cx = 0x0FFFF;);	// 112237                  mov     cx, 0FFFFh ;~ 17C5:DE85
cs=0x17c5;eip=0x00de88; 	J(return _group61(m2c::kloc_341cb, _state););	// 112238                  jmp     loc_341CB ;~ 17C5:DE88
loc_340bb:
	// 6662 
cs=0x17c5;eip=0x00de8b; 	X(POP(bp));	// 112242                  pop     bp ;~ 17C5:DE8B
cs=0x17c5;eip=0x00de8c; 	X(POP(es));	// 112243                  pop     es ;~ 17C5:DE8C
cs=0x17c5;eip=0x00de8d; 	X(POP(si));	// 112244                  pop     si ;~ 17C5:DE8D
cs=0x17c5;eip=0x00de8e; 	X(POP(di));	// 112245                  pop     di ;~ 17C5:DE8E
cs=0x17c5;eip=0x00de8f; 	T(sp = bp;);	// 112246                  mov     sp, bp ;~ 17C5:DE8F
cs=0x17c5;eip=0x00de91; 	X(POP(bp));	// 112247                  pop     bp ;~ 17C5:DE91
cs=0x17c5;eip=0x00de92; 	J(RETN(0));	// 112248                  retn ;~ 17C5:DE92

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_340bb: 	goto loc_340bb;
        case m2c::ksub_340a2: 	goto sub_340a2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_de93_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_de93_proc:
    _begin:
cs=0x17c5;eip=0x00de93; 	J(RETN(0));	// 112252                  retn ;~ 17C5:DE93

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_de93_proc: 	goto seg2623_de93_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group61(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group61:
    _begin:
sub_340c4:
	// 112258 
#undef arg_0
#define arg_0 4
	// 112260 arg_0           = word ptr  4 ;~ 17C5:DE94
#undef arg_2
#define arg_2 6
	// 112261 arg_2           = word ptr  6 ;~ 17C5:DE94
#undef arg_4
#define arg_4 8
	// 112262 arg_4           = word ptr  8 ;~ 17C5:DE94
#undef arg_6
#define arg_6 0x0A
	// 112263 arg_6           = word ptr  0Ah ;~ 17C5:DE94
#undef arg_8
#define arg_8 0x0C
	// 112264 arg_8           = word ptr  0Ch ;~ 17C5:DE94
cs=0x17c5;eip=0x00de94; 	X(PUSH(bp));	// 112266                  push    bp ;~ 17C5:DE94
cs=0x17c5;eip=0x00de95; 	T(bp = sp;);	// 112267                  mov     bp, sp ;~ 17C5:DE95
cs=0x17c5;eip=0x00de97; 	X(PUSH(di));	// 112268                  push    di ;~ 17C5:DE97
cs=0x17c5;eip=0x00de98; 	X(PUSH(si));	// 112269                  push    si ;~ 17C5:DE98
cs=0x17c5;eip=0x00de99; 	X(PUSH(es));	// 112270                  push    es ;~ 17C5:DE99
cs=0x17c5;eip=0x00de9a; 	X(PUSH(bp));	// 112271                  push    bp ;~ 17C5:DE9A
cs=0x17c5;eip=0x00de9b; 	T(ah = 0x3F;);	// 112272                  mov     ah, 3Fh ; '?' ;~ 17C5:DE9B
cs=0x17c5;eip=0x00de9d; 	T(bx = ss;);	// 112273                  mov     bx, ss ;~ 17C5:DE9D
cs=0x17c5;eip=0x00de9f; 	T(ds = bx;);	// 112274                  mov     ds, bx ;~ 17C5:DE9F
cs=0x17c5;eip=0x00dea1; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112275                  mov     bx, [bp+arg_0] ;~ 17C5:DEA1
cs=0x17c5;eip=0x00dea4; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_2))));	// 112276                  mov     cx, [bp+arg_2] ;~ 17C5:DEA4
cs=0x17c5;eip=0x00dea7; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 112277                  mov     dx, [bp+arg_4] ;~ 17C5:DEA7
cs=0x17c5;eip=0x00deaa; 	S(_INT(0x21));	// 112278                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:DEAA
cs=0x17c5;eip=0x00deac; 	J(JNC(loc_340e7));	// 112281                  jnb     short loc_340E7 ;~ 17C5:DEAC
cs=0x17c5;eip=0x00deae; 	T(dx = 0x5FC7;);	// 112282                  mov     dx, 5FC7h ;~ 17C5:DEAE
cs=0x17c5;eip=0x00deb1; 	T(cx = 0x0FFFF;);	// 112283                  mov     cx, 0FFFFh ;~ 17C5:DEB1
cs=0x17c5;eip=0x00deb4; 	J(JMP(loc_341cb));	// 112284                  jmp     loc_341CB ;~ 17C5:DEB4
loc_340e7:
	// 6663 
cs=0x17c5;eip=0x00deb7; 	X(POP(bp));	// 112288                  pop     bp ;~ 17C5:DEB7
cs=0x17c5;eip=0x00deb8; 	X(POP(es));	// 112289                  pop     es ;~ 17C5:DEB8
cs=0x17c5;eip=0x00deb9; 	X(POP(si));	// 112290                  pop     si ;~ 17C5:DEB9
cs=0x17c5;eip=0x00deba; 	X(POP(di));	// 112291                  pop     di ;~ 17C5:DEBA
cs=0x17c5;eip=0x00debb; 	T(sp = bp;);	// 112292                  mov     sp, bp ;~ 17C5:DEBB
cs=0x17c5;eip=0x00debd; 	X(POP(bp));	// 112293                  pop     bp ;~ 17C5:DEBD
cs=0x17c5;eip=0x00debe; 	J(RETN(0));	// 112294                  retn ;~ 17C5:DEBE
loc_340ef:
	// 6664 
cs=0x17c5;eip=0x00debf; 	X(PUSH(bp));	// 112298                  push    bp ;~ 17C5:DEBF
cs=0x17c5;eip=0x00dec0; 	T(bp = sp;);	// 112299                  mov     bp, sp ;~ 17C5:DEC0
cs=0x17c5;eip=0x00dec2; 	X(PUSH(di));	// 112300                  push    di ;~ 17C5:DEC2
cs=0x17c5;eip=0x00dec3; 	X(PUSH(si));	// 112301                  push    si ;~ 17C5:DEC3
cs=0x17c5;eip=0x00dec4; 	X(PUSH(es));	// 112302                  push    es ;~ 17C5:DEC4
cs=0x17c5;eip=0x00dec5; 	X(PUSH(bp));	// 112303                  push    bp ;~ 17C5:DEC5
cs=0x17c5;eip=0x00dec6; 	X(PUSH(ds));	// 112304                  push    ds ;~ 17C5:DEC6
cs=0x17c5;eip=0x00dec7; 	T(ah = 0x3F;);	// 112305                  mov     ah, 3Fh ; '?' ;~ 17C5:DEC7
cs=0x17c5;eip=0x00dec9; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_6))));	// 112306                  mov     bx, [bp+arg_6] ;~ 17C5:DEC9
cs=0x17c5;eip=0x00decc; 	T(ds = bx;);	// 112307                  mov     ds, bx ;~ 17C5:DECC
cs=0x17c5;eip=0x00dece; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112308                  mov     bx, [bp+arg_0] ;~ 17C5:DECE
cs=0x17c5;eip=0x00ded1; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_2))));	// 112309                  mov     cx, [bp+arg_2] ;~ 17C5:DED1
cs=0x17c5;eip=0x00ded4; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 112310                  mov     dx, [bp+arg_4] ;~ 17C5:DED4
cs=0x17c5;eip=0x00ded7; 	S(_INT(0x21));	// 112311                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:DED7
cs=0x17c5;eip=0x00ded9; 	X(POP(ds));	// 112314                  pop     ds ;~ 17C5:DED9
cs=0x17c5;eip=0x00deda; 	J(JNC(loc_34115));	// 112315                  jnb     short loc_34115 ;~ 17C5:DEDA
cs=0x17c5;eip=0x00dedc; 	T(dx = 0x5FC7;);	// 112316                  mov     dx, 5FC7h ;~ 17C5:DEDC
cs=0x17c5;eip=0x00dedf; 	T(cx = 0x0FFFF;);	// 112317                  mov     cx, 0FFFFh ;~ 17C5:DEDF
cs=0x17c5;eip=0x00dee2; 	J(JMP(loc_341cb));	// 112318                  jmp     loc_341CB ;~ 17C5:DEE2
loc_34115:
	// 6665 
cs=0x17c5;eip=0x00dee5; 	X(POP(bp));	// 112322                  pop     bp ;~ 17C5:DEE5
cs=0x17c5;eip=0x00dee6; 	X(POP(es));	// 112323                  pop     es ;~ 17C5:DEE6
cs=0x17c5;eip=0x00dee7; 	X(POP(si));	// 112324                  pop     si ;~ 17C5:DEE7
cs=0x17c5;eip=0x00dee8; 	X(POP(di));	// 112325                  pop     di ;~ 17C5:DEE8
cs=0x17c5;eip=0x00dee9; 	T(sp = bp;);	// 112326                  mov     sp, bp ;~ 17C5:DEE9
cs=0x17c5;eip=0x00deeb; 	X(POP(bp));	// 112327                  pop     bp ;~ 17C5:DEEB
cs=0x17c5;eip=0x00deec; 	J(RETN(0));	// 112328                  retn ;~ 17C5:DEEC
ret_17c5_deed:
	// 6666 
cs=0x17c5;eip=0x00deed; 	X(PUSH(ds));	// 112330                  push    ds ;~ 17C5:DEED
cs=0x17c5;eip=0x00deee; 	X(PUSH(es));	// 112331                  push    es ;~ 17C5:DEEE
cs=0x17c5;eip=0x00deef; 	X(PUSH(si));	// 112332                  push    si ;~ 17C5:DEEF
cs=0x17c5;eip=0x00def0; 	X(PUSH(di));	// 112333                  push    di ;~ 17C5:DEF0
cs=0x17c5;eip=0x00def1; 	T(ax = ds;);	// 112334                  mov     ax, ds ;~ 17C5:DEF1
cs=0x17c5;eip=0x00def3; 	T(es = ax;);	// 112335                  mov     es, ax ;~ 17C5:DEF3
cs=0x17c5;eip=0x00def5; 	T(ds = word_4eabe;);	// 112337                  mov     ds, ss:word_4EABE ;~ 17C5:DEF5
cs=0x17c5;eip=0x00defa; 	T(cx = 0x100;);	// 112339                  mov     cx, 100h ;~ 17C5:DEFA
cs=0x17c5;eip=0x00defd; 	T(si = word_4eac0;);	// 112340                  mov     si, ss:word_4EAC0 ;~ 17C5:DEFD
cs=0x17c5;eip=0x00df02; 	T(di = 0x5D7C;);	// 112341                  mov     di, 5D7Ch ;~ 17C5:DF02
	// 112342                  rep movsw ;~ 17C5:DF05
cs=0x17c5;eip=0x00df05; 	X(	REP MOVSW);	// 112342                  rep movsw ;~ 17C5:DF05
cs=0x17c5;eip=0x00df07; 	X(ADD(word_4eac0, 0x200));	// 112343                  add     ss:word_4EAC0, 200h ;~ 17C5:DF07
cs=0x17c5;eip=0x00df0e; 	T(ax = 0x200;);	// 112344                  mov     ax, 200h ;~ 17C5:DF0E
cs=0x17c5;eip=0x00df11; 	X(POP(di));	// 112345                  pop     di ;~ 17C5:DF11
cs=0x17c5;eip=0x00df12; 	X(POP(si));	// 112346                  pop     si ;~ 17C5:DF12
cs=0x17c5;eip=0x00df13; 	X(POP(es));	// 112347                  pop     es ;~ 17C5:DF13
cs=0x17c5;eip=0x00df14; 	X(POP(ds));	// 112349                  pop     ds ;~ 17C5:DF14
cs=0x17c5;eip=0x00df15; 	J(RETN(0));	// 112351                  retn ;~ 17C5:DF15
loc_34146:
	// 6667 
cs=0x17c5;eip=0x00df16; 	X(PUSH(ds));	// 112355                  push    ds ;~ 17C5:DF16
cs=0x17c5;eip=0x00df17; 	T(ah = 0x3F;);	// 112356                  mov     ah, 3Fh ; '?' ;~ 17C5:DF17
cs=0x17c5;eip=0x00df19; 	T(bx = seg_offset(seg48ae););	// 112357                  mov     bx, seg seg48ae ;~ 17C5:DF19
cs=0x17c5;eip=0x00df1c; 	T(ds = bx;);	// 112358                  mov     ds, bx ;~ 17C5:DF1C
cs=0x17c5;eip=0x00df1e; 	T(bx = word_4eac6;);	// 112359                  mov     bx, ds:word_4EAC6 ;~ 17C5:DF1E
cs=0x17c5;eip=0x00df22; 	T(cx = 0x200;);	// 112360                  mov     cx, 200h ;~ 17C5:DF22
cs=0x17c5;eip=0x00df25; 	T(dx = 0x5D7C;);	// 112361                  mov     dx, 5D7Ch ;~ 17C5:DF25
cs=0x17c5;eip=0x00df28; 	S(_INT(0x21));	// 112362                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:DF28
cs=0x17c5;eip=0x00df2a; 	J(JNC(loc_34165));	// 112365                  jnb     short loc_34165 ;~ 17C5:DF2A
cs=0x17c5;eip=0x00df2c; 	T(dx = 0x5FC7;);	// 112366                  mov     dx, 5FC7h ;~ 17C5:DF2C
cs=0x17c5;eip=0x00df2f; 	T(cx = 0x0FFFF;);	// 112367                  mov     cx, 0FFFFh ;~ 17C5:DF2F
cs=0x17c5;eip=0x00df32; 	J(JMP(loc_341cb));	// 112368                  jmp     short loc_341CB ;~ 17C5:DF32
loc_34165:
	// 6668 
cs=0x17c5;eip=0x00df35; 	X(POP(ds));	// 112374                  pop     ds ;~ 17C5:DF35
cs=0x17c5;eip=0x00df36; 	J(RETN(0));	// 112375                  retn ;~ 17C5:DF36
ret_17c5_df37:
	// 6669 
cs=0x17c5;eip=0x00df37; 	X(PUSH(bp));	// 112377                  push    bp ;~ 17C5:DF37
cs=0x17c5;eip=0x00df38; 	T(bp = sp;);	// 112378                  mov     bp, sp ;~ 17C5:DF38
cs=0x17c5;eip=0x00df3a; 	X(PUSH(di));	// 112379                  push    di ;~ 17C5:DF3A
cs=0x17c5;eip=0x00df3b; 	X(PUSH(si));	// 112380                  push    si ;~ 17C5:DF3B
cs=0x17c5;eip=0x00df3c; 	X(PUSH(es));	// 112381                  push    es ;~ 17C5:DF3C
cs=0x17c5;eip=0x00df3d; 	X(PUSH(bp));	// 112382                  push    bp ;~ 17C5:DF3D
cs=0x17c5;eip=0x00df3e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 112383                  mov     ax, [bp+arg_0] ;~ 17C5:DF3E
cs=0x17c5;eip=0x00df41; 	X(word_4eac6 = ax;);	// 112384                  mov     ds:word_4EAC6, ax ;~ 17C5:DF41
cs=0x17c5;eip=0x00df44; 	J(CALL(_group61,m2c::kloc_34146));	// 112385                  call    loc_34146 ;~ 17C5:DF44
cs=0x17c5;eip=0x00df47; 	X(POP(bp));	// 112386                  pop     bp ;~ 17C5:DF47
cs=0x17c5;eip=0x00df48; 	X(POP(es));	// 112387                  pop     es ;~ 17C5:DF48
cs=0x17c5;eip=0x00df49; 	X(POP(si));	// 112388                  pop     si ;~ 17C5:DF49
cs=0x17c5;eip=0x00df4a; 	X(POP(di));	// 112389                  pop     di ;~ 17C5:DF4A
cs=0x17c5;eip=0x00df4b; 	T(sp = bp;);	// 112390                  mov     sp, bp ;~ 17C5:DF4B
cs=0x17c5;eip=0x00df4d; 	X(POP(bp));	// 112391                  pop     bp ;~ 17C5:DF4D
cs=0x17c5;eip=0x00df4e; 	J(RETN(0));	// 112392                  retn ;~ 17C5:DF4E
loc_3417f:
	// 6670 
cs=0x17c5;eip=0x00df4f; 	X(PUSH(bp));	// 112396                  push    bp ;~ 17C5:DF4F
cs=0x17c5;eip=0x00df50; 	T(bp = sp;);	// 112397                  mov     bp, sp ;~ 17C5:DF50
cs=0x17c5;eip=0x00df52; 	X(PUSH(di));	// 112398                  push    di ;~ 17C5:DF52
cs=0x17c5;eip=0x00df53; 	X(PUSH(si));	// 112399                  push    si ;~ 17C5:DF53
cs=0x17c5;eip=0x00df54; 	X(PUSH(es));	// 112400                  push    es ;~ 17C5:DF54
cs=0x17c5;eip=0x00df55; 	X(PUSH(bp));	// 112401                  push    bp ;~ 17C5:DF55
cs=0x17c5;eip=0x00df56; 	X(PUSH(ds));	// 112402                  push    ds ;~ 17C5:DF56
cs=0x17c5;eip=0x00df57; 	T(ah = 0x40;);	// 112403                  mov     ah, 40h ; '@' ;~ 17C5:DF57
cs=0x17c5;eip=0x00df59; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_6))));	// 112404                  mov     bx, [bp+arg_6] ;~ 17C5:DF59
cs=0x17c5;eip=0x00df5c; 	T(ds = bx;);	// 112405                  mov     ds, bx ;~ 17C5:DF5C
cs=0x17c5;eip=0x00df5e; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 112406                  mov     bx, [bp+arg_0] ;~ 17C5:DF5E
cs=0x17c5;eip=0x00df61; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_2))));	// 112407                  mov     cx, [bp+arg_2] ;~ 17C5:DF61
cs=0x17c5;eip=0x00df64; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 112408                  mov     dx, [bp+arg_4] ;~ 17C5:DF64
cs=0x17c5;eip=0x00df67; 	T(ADD(dx, *(dw*)(raddr(ss,bp+arg_8))));	// 112409                  add     dx, [bp+arg_8] ;~ 17C5:DF67
cs=0x17c5;eip=0x00df6a; 	S(_INT(0x21));	// 112410                  int     21h             ; DOS - 2+ - WRITE TO FILE WITH HANDLE ;~ 17C5:DF6A
cs=0x17c5;eip=0x00df6c; 	X(POP(ds));	// 112412                  pop     ds ;~ 17C5:DF6C
cs=0x17c5;eip=0x00df6d; 	J(JNC(loc_341a8));	// 112413                  jnb     short loc_341A8 ;~ 17C5:DF6D
cs=0x17c5;eip=0x00df6f; 	T(dx = 0x5FD2;);	// 112414                  mov     dx, 5FD2h ;~ 17C5:DF6F
cs=0x17c5;eip=0x00df72; 	T(cx = 0x0FFFF;);	// 112415                  mov     cx, 0FFFFh ;~ 17C5:DF72
cs=0x17c5;eip=0x00df75; 	J(JMP(loc_341cb));	// 112416                  jmp     short loc_341CB ;~ 17C5:DF75
loc_341a8:
	// 6671 
cs=0x17c5;eip=0x00df78; 	X(POP(bp));	// 112421                  pop     bp ;~ 17C5:DF78
cs=0x17c5;eip=0x00df79; 	X(POP(es));	// 112422                  pop     es ;~ 17C5:DF79
cs=0x17c5;eip=0x00df7a; 	X(POP(si));	// 112423                  pop     si ;~ 17C5:DF7A
cs=0x17c5;eip=0x00df7b; 	X(POP(di));	// 112424                  pop     di ;~ 17C5:DF7B
cs=0x17c5;eip=0x00df7c; 	T(sp = bp;);	// 112425                  mov     sp, bp ;~ 17C5:DF7C
cs=0x17c5;eip=0x00df7e; 	X(POP(bp));	// 112426                  pop     bp ;~ 17C5:DF7E
cs=0x17c5;eip=0x00df7f; 	J(RETN(0));	// 112427                  retn ;~ 17C5:DF7F
loc_341b0:
	// 6672 
cs=0x17c5;eip=0x00df80; 	X(PUSH(ax));	// 112432                  push    ax ;~ 17C5:DF80
cs=0x17c5;eip=0x00df81; 	T(ax = 3;);	// 112433                  mov     ax, 3 ;~ 17C5:DF81
cs=0x17c5;eip=0x00df84; 	S(_INT(0x10));	// 112434                  int     10h             ; - VIDEO - SET VIDEO MODE ;~ 17C5:DF84
cs=0x17c5;eip=0x00df86; 	T(di = 0;);	// 112436                  mov     di, 0 ;~ 17C5:DF86
loc_341b9:
	// 6673 
cs=0x17c5;eip=0x00df89; 	T(CMP(*(raddr(ds,bx+di)), 0));	// 112439                  cmp     byte ptr [bx+di], 0 ;~ 17C5:DF89
cs=0x17c5;eip=0x00df8c; 	J(JZ(loc_341c1));	// 112440                  jz      short loc_341C1 ;~ 17C5:DF8C
cs=0x17c5;eip=0x00df8e; 	T(INC(di));	// 112441                  inc     di ;~ 17C5:DF8E
cs=0x17c5;eip=0x00df8f; 	J(JMP(loc_341b9));	// 112442                  jmp     short loc_341B9 ;~ 17C5:DF8F
loc_341c1:
	// 6674 
cs=0x17c5;eip=0x00df91; 	X(MOV(*(raddr(ds,bx+di)), 0x24));	// 112446                  mov     byte ptr [bx+di], 24h ; '$' ;~ 17C5:DF91
cs=0x17c5;eip=0x00df94; 	T(dx = bx;);	// 112447                  mov     dx, bx ;~ 17C5:DF94
cs=0x17c5;eip=0x00df96; 	T(ah = 9;);	// 112448                  mov     ah, 9 ;~ 17C5:DF96
cs=0x17c5;eip=0x00df98; 	S(_INT(0x21));	// 112449                  int     21h             ; DOS - PRINT STRING ;~ 17C5:DF98
cs=0x17c5;eip=0x00df9a; 	X(POP(dx));	// 112451                  pop     dx ;~ 17C5:DF9A
loc_341cb:
	// 6675 
cs=0x17c5;eip=0x00df9b; 	T(ah = 9;);	// 112455                  mov     ah, 9 ;~ 17C5:DF9B
cs=0x17c5;eip=0x00df9d; 	S(_INT(0x21));	// 112456                  int     21h             ; DOS - PRINT STRING ;~ 17C5:DF9D
cs=0x17c5;eip=0x00df9f; 	T(CMP(cx, 0x0FFFF));	// 112458                  cmp     cx, 0FFFFh ;~ 17C5:DF9F
cs=0x17c5;eip=0x00dfa2; 	J(JZ(loc_341e7));	// 112459                  jz      short loc_341E7 ;~ 17C5:DFA2
cs=0x17c5;eip=0x00dfa4; 	T(ADD(cx, 0x30));	// 112460                  add     cx, 30h ; '0' ;~ 17C5:DFA4
cs=0x17c5;eip=0x00dfa7; 	X(byte_4e85a = cl;);	// 112461                  mov     ds:byte_4E85A, cl ;~ 17C5:DFA7
cs=0x17c5;eip=0x00dfab; 	X(byte_4e85b = 0x24;);	// 112462                  mov     ds:byte_4E85B, 24h ; '$' ;~ 17C5:DFAB
cs=0x17c5;eip=0x00dfb0; 	T(dx = 0x5D7A;);	// 112463                  mov     dx, 5D7Ah ;~ 17C5:DFB0
cs=0x17c5;eip=0x00dfb3; 	T(ah = 9;);	// 112464                  mov     ah, 9 ;~ 17C5:DFB3
cs=0x17c5;eip=0x00dfb5; 	S(_INT(0x21));	// 112465                  int     21h             ; DOS - PRINT STRING ;~ 17C5:DFB5
loc_341e7:
	// 6676 
cs=0x17c5;eip=0x00dfb7; 	T(ax = 0x4C00;);	// 112469                  mov     ax, 4C00h ;~ 17C5:DFB7
cs=0x17c5;eip=0x00dfba; 	S(_INT(0x21));	// 112470                  int     21h             ; DOS - 2+ - QUIT WITH EXIT CODE (EXIT) ;~ 17C5:DFBA
sub_341ec:
	// 112478 
#undef var_2
#define var_2 -2
	// 112481 var_2           = word ptr -2 ;~ 17C5:DFBC
#undef arg_0
#define arg_0 4
	// 112482 arg_0           = word ptr  4 ;~ 17C5:DFBC
#undef arg_2
#define arg_2 6
	// 112483 arg_2           = word ptr  6 ;~ 17C5:DFBC
#undef arg_4
#define arg_4 8
	// 112484 arg_4           = word ptr  8 ;~ 17C5:DFBC
cs=0x17c5;eip=0x00dfbc; 	X(PUSH(bp));	// 112486                  push    bp ;~ 17C5:DFBC
cs=0x17c5;eip=0x00dfbd; 	T(bp = sp;);	// 112487                  mov     bp, sp ;~ 17C5:DFBD
cs=0x17c5;eip=0x00dfbf; 	T(ax = 2;);	// 112488                  mov     ax, 2 ;~ 17C5:DFBF
cs=0x17c5;eip=0x00dfc2; 	J(CALL(sub_34884,0));	// 112489                  call    sub_34884 ;~ 17C5:DFC2
cs=0x17c5;eip=0x00dfc5; 	X(PUSH(di));	// 112490                  push    di ;~ 17C5:DFC5
cs=0x17c5;eip=0x00dfc6; 	X(PUSH(si));	// 112491                  push    si ;~ 17C5:DFC6
cs=0x17c5;eip=0x00dfc7; 	T(ax = 0;);	// 112492                  mov     ax, 0 ;~ 17C5:DFC7
cs=0x17c5;eip=0x00dfca; 	X(PUSH(ax));	// 112493                  push    ax ;~ 17C5:DFCA
cs=0x17c5;eip=0x00dfcb; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 112494                  push    [bp+arg_0] ;~ 17C5:DFCB
cs=0x17c5;eip=0x00dfce; 	J(CALL(sub_33f7c,0));	// 112495                  call    sub_33F7C ;~ 17C5:DFCE
cs=0x17c5;eip=0x00dfd1; 	T(ADD(sp, 4));	// 112496                  add     sp, 4 ;~ 17C5:DFD1
cs=0x17c5;eip=0x00dfd4; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 112497                  mov     [bp+var_2], ax ;~ 17C5:DFD4
cs=0x17c5;eip=0x00dfd7; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_4))));	// 112498                  push    [bp+arg_4] ;~ 17C5:DFD7
cs=0x17c5;eip=0x00dfda; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 112499                  push    [bp+arg_2] ;~ 17C5:DFDA
cs=0x17c5;eip=0x00dfdd; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 112500                  push    [bp+var_2] ;~ 17C5:DFDD
cs=0x17c5;eip=0x00dfe0; 	J(CALL(sub_342da,0));	// 112501                  call    sub_342DA ;~ 17C5:DFE0
seg2623_dfe3_proc:
	// 112505 
cs=0x17c5;eip=0x00dfe3; 	T(ADD(sp, 6));	// 112505                  add     sp, 6 ;~ 17C5:DFE3
cs=0x17c5;eip=0x00dfe6; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112506                  push    word ptr [bp-2] ;~ 17C5:DFE6
cs=0x17c5;eip=0x00dfe9; 	J(CALL(sub_33fa0,0));	// 112507                  call    sub_33FA0 ;~ 17C5:DFE9
cs=0x17c5;eip=0x00dfec; 	T(ADD(sp, 2));	// 112508                  add     sp, 2 ;~ 17C5:DFEC
cs=0x17c5;eip=0x00dfef; 	X(POP(si));	// 112509                  pop     si ;~ 17C5:DFEF
cs=0x17c5;eip=0x00dff0; 	X(POP(di));	// 112510                  pop     di ;~ 17C5:DFF0
cs=0x17c5;eip=0x00dff1; 	T(sp = bp;);	// 112511                  mov     sp, bp ;~ 17C5:DFF1
cs=0x17c5;eip=0x00dff3; 	X(POP(bp));	// 112512                  pop     bp ;~ 17C5:DFF3
cs=0x17c5;eip=0x00dff4; 	J(RETN(0));	// 112513                  retn ;~ 17C5:DFF4
ret_17c5_dff5:
	// 6677 
cs=0x17c5;eip=0x00dff5; 	X(PUSH(bp));	// 112515                  push    bp ;~ 17C5:DFF5
cs=0x17c5;eip=0x00dff6; 	T(bp = sp;);	// 112516                  mov     bp, sp ;~ 17C5:DFF6
cs=0x17c5;eip=0x00dff8; 	T(ax = 2;);	// 112517                  mov     ax, 2 ;~ 17C5:DFF8
cs=0x17c5;eip=0x00dffb; 	J(CALL(sub_34884,0));	// 112518                  call    sub_34884 ;~ 17C5:DFFB
cs=0x17c5;eip=0x00dffe; 	X(PUSH(di));	// 112519                  push    di ;~ 17C5:DFFE
cs=0x17c5;eip=0x00dfff; 	X(PUSH(si));	// 112520                  push    si ;~ 17C5:DFFF
cs=0x17c5;eip=0x00e000; 	T(ax = 0;);	// 112521                  mov     ax, 0 ;~ 17C5:E000
cs=0x17c5;eip=0x00e003; 	X(PUSH(ax));	// 112522                  push    ax ;~ 17C5:E003
cs=0x17c5;eip=0x00e004; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 112523                  push    word ptr [bp+4] ;~ 17C5:E004
cs=0x17c5;eip=0x00e007; 	J(CALL(sub_33f7c,0));	// 112524                  call    sub_33F7C ;~ 17C5:E007
cs=0x17c5;eip=0x00e00a; 	T(ADD(sp, 4));	// 112525                  add     sp, 4 ;~ 17C5:E00A
cs=0x17c5;eip=0x00e00d; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 112526                  mov     [bp-2], ax ;~ 17C5:E00D
cs=0x17c5;eip=0x00e010; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 112527                  push    word ptr [bp+6] ;~ 17C5:E010
cs=0x17c5;eip=0x00e013; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112528                  push    word ptr [bp-2] ;~ 17C5:E013
cs=0x17c5;eip=0x00e016; 	J(CALL(sub_3434c,0));	// 112529                  call    sub_3434C ;~ 17C5:E016
cs=0x17c5;eip=0x00e019; 	T(ADD(sp, 4));	// 112531                  add     sp, 4 ;~ 17C5:E019
cs=0x17c5;eip=0x00e01c; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112532                  push    word ptr [bp-2] ;~ 17C5:E01C
cs=0x17c5;eip=0x00e01f; 	J(CALL(sub_33fa0,0));	// 112533                  call    sub_33FA0 ;~ 17C5:E01F
cs=0x17c5;eip=0x00e022; 	T(ADD(sp, 2));	// 112534                  add     sp, 2 ;~ 17C5:E022
cs=0x17c5;eip=0x00e025; 	X(POP(si));	// 112535                  pop     si ;~ 17C5:E025
cs=0x17c5;eip=0x00e026; 	X(POP(di));	// 112536                  pop     di ;~ 17C5:E026
cs=0x17c5;eip=0x00e027; 	T(sp = bp;);	// 112537                  mov     sp, bp ;~ 17C5:E027
cs=0x17c5;eip=0x00e029; 	X(POP(bp));	// 112538                  pop     bp ;~ 17C5:E029
cs=0x17c5;eip=0x00e02a; 	J(RETN(0));	// 112539                  retn ;~ 17C5:E02A
ret_17c5_e02b:
	// 6678 
cs=0x17c5;eip=0x00e02b; 	X(PUSH(bp));	// 112541                  push    bp ;~ 17C5:E02B
cs=0x17c5;eip=0x00e02c; 	T(bp = sp;);	// 112542                  mov     bp, sp ;~ 17C5:E02C
cs=0x17c5;eip=0x00e02e; 	T(ax = 2;);	// 112543                  mov     ax, 2 ;~ 17C5:E02E
cs=0x17c5;eip=0x00e031; 	J(CALL(sub_34884,0));	// 112544                  call    sub_34884 ;~ 17C5:E031
cs=0x17c5;eip=0x00e034; 	X(PUSH(di));	// 112545                  push    di ;~ 17C5:E034
cs=0x17c5;eip=0x00e035; 	X(PUSH(si));	// 112546                  push    si ;~ 17C5:E035
cs=0x17c5;eip=0x00e036; 	T(ax = 0;);	// 112547                  mov     ax, 0 ;~ 17C5:E036
cs=0x17c5;eip=0x00e039; 	X(PUSH(ax));	// 112548                  push    ax ;~ 17C5:E039
cs=0x17c5;eip=0x00e03a; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 112549                  push    word ptr [bp+4] ;~ 17C5:E03A
cs=0x17c5;eip=0x00e03d; 	J(CALL(sub_33f7c,0));	// 112550                  call    sub_33F7C ;~ 17C5:E03D
cs=0x17c5;eip=0x00e040; 	T(ADD(sp, 4));	// 112551                  add     sp, 4 ;~ 17C5:E040
cs=0x17c5;eip=0x00e043; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 112552                  mov     [bp-2], ax ;~ 17C5:E043
cs=0x17c5;eip=0x00e046; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 112553                  push    word ptr [bp+6] ;~ 17C5:E046
cs=0x17c5;eip=0x00e049; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112554                  push    word ptr [bp-2] ;~ 17C5:E049
cs=0x17c5;eip=0x00e04c; 	J(CALL(sub_34428,0));	// 112555                  call    sub_34428 ;~ 17C5:E04C
cs=0x17c5;eip=0x00e04f; 	T(ADD(sp, 4));	// 112557                  add     sp, 4 ;~ 17C5:E04F
cs=0x17c5;eip=0x00e052; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112558                  push    word ptr [bp-2] ;~ 17C5:E052
cs=0x17c5;eip=0x00e055; 	J(CALL(sub_33fa0,0));	// 112559                  call    sub_33FA0 ;~ 17C5:E055
cs=0x17c5;eip=0x00e058; 	T(ADD(sp, 2));	// 112560                  add     sp, 2 ;~ 17C5:E058
cs=0x17c5;eip=0x00e05b; 	X(POP(si));	// 112561                  pop     si ;~ 17C5:E05B
cs=0x17c5;eip=0x00e05c; 	X(POP(di));	// 112562                  pop     di ;~ 17C5:E05C
cs=0x17c5;eip=0x00e05d; 	T(sp = bp;);	// 112563                  mov     sp, bp ;~ 17C5:E05D
cs=0x17c5;eip=0x00e05f; 	X(POP(bp));	// 112564                  pop     bp ;~ 17C5:E05F
cs=0x17c5;eip=0x00e060; 	J(RETN(0));	// 112565                  retn ;~ 17C5:E060
ret_17c5_e061:
	// 6679 
cs=0x17c5;eip=0x00e061; 	X(PUSH(bp));	// 112567                  push    bp ;~ 17C5:E061
cs=0x17c5;eip=0x00e062; 	T(bp = sp;);	// 112568                  mov     bp, sp ;~ 17C5:E062
cs=0x17c5;eip=0x00e064; 	T(ax = 2;);	// 112569                  mov     ax, 2 ;~ 17C5:E064
cs=0x17c5;eip=0x00e067; 	J(CALL(sub_34884,0));	// 112570                  call    sub_34884 ;~ 17C5:E067
cs=0x17c5;eip=0x00e06a; 	X(PUSH(di));	// 112571                  push    di ;~ 17C5:E06A
cs=0x17c5;eip=0x00e06b; 	X(PUSH(si));	// 112572                  push    si ;~ 17C5:E06B
cs=0x17c5;eip=0x00e06c; 	T(ax = 0;);	// 112573                  mov     ax, 0 ;~ 17C5:E06C
cs=0x17c5;eip=0x00e06f; 	X(PUSH(ax));	// 112574                  push    ax ;~ 17C5:E06F
cs=0x17c5;eip=0x00e070; 	X(PUSH(*(dw*)(raddr(ss,bp+4))));	// 112575                  push    word ptr [bp+4] ;~ 17C5:E070
cs=0x17c5;eip=0x00e073; 	J(CALL(sub_33f7c,0));	// 112576                  call    sub_33F7C ;~ 17C5:E073
cs=0x17c5;eip=0x00e076; 	T(ADD(sp, 4));	// 112577                  add     sp, 4 ;~ 17C5:E076
cs=0x17c5;eip=0x00e079; 	X(MOV(*(dw*)(raddr(ss,bp-2)), ax));	// 112578                  mov     [bp-2], ax ;~ 17C5:E079
cs=0x17c5;eip=0x00e07c; 	T(ax = 0;);	// 112579                  mov     ax, 0 ;~ 17C5:E07C
cs=0x17c5;eip=0x00e07f; 	X(PUSH(ax));	// 112580                  push    ax ;~ 17C5:E07F
cs=0x17c5;eip=0x00e080; 	X(PUSH(*(dw*)(raddr(ss,bp+0x0A))));	// 112581                  push    word ptr [bp+0Ah] ;~ 17C5:E080
cs=0x17c5;eip=0x00e083; 	X(PUSH(*(dw*)(raddr(ss,bp+8))));	// 112582                  push    word ptr [bp+8] ;~ 17C5:E083
cs=0x17c5;eip=0x00e086; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112583                  push    word ptr [bp-2] ;~ 17C5:E086
cs=0x17c5;eip=0x00e089; 	J(CALL(sub_34b62,0));	// 112584                  call    sub_34B62 ;~ 17C5:E089
cs=0x17c5;eip=0x00e08c; 	T(ADD(sp, 8));	// 112585                  add     sp, 8 ;~ 17C5:E08C
cs=0x17c5;eip=0x00e08f; 	X(PUSH(*(dw*)(raddr(ss,bp+6))));	// 112586                  push    word ptr [bp+6] ;~ 17C5:E08F
cs=0x17c5;eip=0x00e092; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112587                  push    word ptr [bp-2] ;~ 17C5:E092
cs=0x17c5;eip=0x00e095; 	J(CALL(sub_34428,0));	// 112588                  call    sub_34428 ;~ 17C5:E095
cs=0x17c5;eip=0x00e098; 	T(ADD(sp, 4));	// 112590                  add     sp, 4 ;~ 17C5:E098
cs=0x17c5;eip=0x00e09b; 	X(PUSH(*(dw*)(raddr(ss,bp-2))));	// 112591                  push    word ptr [bp-2] ;~ 17C5:E09B
cs=0x17c5;eip=0x00e09e; 	J(CALL(sub_33fa0,0));	// 112592                  call    sub_33FA0 ;~ 17C5:E09E
cs=0x17c5;eip=0x00e0a1; 	T(ADD(sp, 2));	// 112593                  add     sp, 2 ;~ 17C5:E0A1
cs=0x17c5;eip=0x00e0a4; 	X(POP(si));	// 112594                  pop     si ;~ 17C5:E0A4
cs=0x17c5;eip=0x00e0a5; 	X(POP(di));	// 112595                  pop     di ;~ 17C5:E0A5
cs=0x17c5;eip=0x00e0a6; 	T(sp = bp;);	// 112596                  mov     sp, bp ;~ 17C5:E0A6
cs=0x17c5;eip=0x00e0a8; 	X(POP(bp));	// 112597                  pop     bp ;~ 17C5:E0A8
cs=0x17c5;eip=0x00e0a9; 	J(RETN(0));	// 112598                  retn ;~ 17C5:E0A9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_340e7: 	goto loc_340e7;
        case m2c::kloc_340ef: 	goto loc_340ef;
        case m2c::kloc_34115: 	goto loc_34115;
        case m2c::kloc_34146: 	goto loc_34146;
        case m2c::kloc_34165: 	goto loc_34165;
        case m2c::kloc_3417f: 	goto loc_3417f;
        case m2c::kloc_341a8: 	goto loc_341a8;
        case m2c::kloc_341b0: 	goto loc_341b0;
        case m2c::kloc_341b9: 	goto loc_341b9;
        case m2c::kloc_341c1: 	goto loc_341c1;
        case m2c::kloc_341cb: 	goto loc_341cb;
        case m2c::kloc_341e7: 	goto loc_341e7;
        case m2c::kret_17c5_deed: 	goto ret_17c5_deed;
        case m2c::kret_17c5_df37: 	goto ret_17c5_df37;
        case m2c::kret_17c5_dff5: 	goto ret_17c5_dff5;
        case m2c::kret_17c5_e02b: 	goto ret_17c5_e02b;
        case m2c::kret_17c5_e061: 	goto ret_17c5_e061;
        case m2c::kseg2623_dfe3_proc: 	goto seg2623_dfe3_proc;
        case m2c::ksub_340c4: 	goto sub_340c4;
        case m2c::ksub_341ec: 	goto sub_341ec;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group62(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group62:
    _begin:
sub_342da:
	// 112604 
#undef arg_0
#define arg_0 4
	// 112606 arg_0           = word ptr  4 ;~ 17C5:E0AA
#undef arg_2
#define arg_2 6
	// 112607 arg_2           = word ptr  6 ;~ 17C5:E0AA
cs=0x17c5;eip=0x00e0aa; 	X(PUSH(bp));	// 112609                  push    bp ;~ 17C5:E0AA
cs=0x17c5;eip=0x00e0ab; 	T(bp = sp;);	// 112610                  mov     bp, sp ;~ 17C5:E0AB
cs=0x17c5;eip=0x00e0ad; 	X(PUSH(di));	// 112611                  push    di ;~ 17C5:E0AD
cs=0x17c5;eip=0x00e0ae; 	X(PUSH(si));	// 112612                  push    si ;~ 17C5:E0AE
cs=0x17c5;eip=0x00e0af; 	X(PUSH(es));	// 112613                  push    es ;~ 17C5:E0AF
cs=0x17c5;eip=0x00e0b0; 	X(PUSH(bp));	// 112614                  push    bp ;~ 17C5:E0B0
cs=0x17c5;eip=0x00e0b1; 	T(ax = 0x0DF16;);	// 112615                  mov     ax, 0DF16h ;~ 17C5:E0B1
cs=0x17c5;eip=0x00e0b4; 	X(word_4ec12 = ax;);	// 112616                  mov     ds:word_4EC12, ax ;~ 17C5:E0B4
cs=0x17c5;eip=0x00e0b7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 112617                  mov     ax, [bp+arg_0] ;~ 17C5:E0B7
cs=0x17c5;eip=0x00e0ba; 	X(word_4eac6 = ax;);	// 112618                  mov     ds:word_4EAC6, ax ;~ 17C5:E0BA
cs=0x17c5;eip=0x00e0bd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 112619                  mov     ax, [bp+arg_2] ;~ 17C5:E0BD
cs=0x17c5;eip=0x00e0c0; 	X(word_4ec0a = ax;);	// 112620                  mov     ds:word_4EC0A, ax ;~ 17C5:E0C0
cs=0x17c5;eip=0x00e0c3; 	J(CALL(nullsub_3,0));	// 112621                  call    nullsub_3 ;~ 17C5:E0C3
cs=0x17c5;eip=0x00e0c6; 	T(si = word_4ec0a;);	// 112622                  mov     si, ds:word_4EC0A ;~ 17C5:E0C6
cs=0x17c5;eip=0x00e0ca; 	J(CALLF(sub_49ab6,0));	// 112623                  call    far ptr sub_49AB6 ;~ 17C5:E0CA
seg2623_e0cf_proc:
	// 112627 
cs=0x17c5;eip=0x00e0cf; 	J(CALLF(sub_49ac5,0));	// 112627                  call    far ptr sub_49AC5 ;~ 17C5:E0CF
cs=0x17c5;eip=0x00e0d4; 	X(word_4ec10 = 0;);	// 112629                  mov     ds:word_4EC10, 0 ;~ 17C5:E0D4
cs=0x17c5;eip=0x00e0da; 	X(word_4ec08 = 0x0FA00;);	// 112630                  mov     ds:word_4EC08, 0FA00h ;~ 17C5:E0DA
loc_34310:
	// 6680 
cs=0x17c5;eip=0x00e0e0; 	T(di = word_4ec10;);	// 112633                  mov     di, ds:word_4EC10 ;~ 17C5:E0E0
cs=0x17c5;eip=0x00e0e4; 	J(CALLF(sub_49ac0,0));	// 112634                  call    far ptr sub_49AC0 ;~ 17C5:E0E4
cs=0x17c5;eip=0x00e0e9; 	X(word_4ec0c = ax;);	// 112636                  mov     ds:word_4EC0C, ax ;~ 17C5:E0E9
cs=0x17c5;eip=0x00e0ec; 	J(CALL(sub_34492,0));	// 112637                  call    sub_34492 ;~ 17C5:E0EC
cs=0x17c5;eip=0x00e0ef; 	T(di = word_4ec0c;);	// 112638                  mov     di, ds:word_4EC0C ;~ 17C5:E0EF
cs=0x17c5;eip=0x00e0f3; 	T(bp = 0x5FE8;);	// 112639                  mov     bp, 5FE8h ;~ 17C5:E0F3
cs=0x17c5;eip=0x00e0f6; 	T(bx = word_4ec10;);	// 112640                  mov     bx, ds:word_4EC10 ;~ 17C5:E0F6
cs=0x17c5;eip=0x00e0fa; 	J(CALLF(sub_49a9d,0));	// 112641                  call    far ptr sub_49A9D ;~ 17C5:E0FA
cs=0x17c5;eip=0x00e0ff; 	T(di = word_4ec0c;);	// 112643                  mov     di, ds:word_4EC0C ;~ 17C5:E0FF
cs=0x17c5;eip=0x00e103; 	J(CALLF(sub_49aa7,0));	// 112644                  call    far ptr sub_49AA7 ;~ 17C5:E103
cs=0x17c5;eip=0x00e108; 	X(INC(word_4ec10));	// 112646                  inc     ds:word_4EC10 ;~ 17C5:E108
cs=0x17c5;eip=0x00e10c; 	X(SUB(word_4ec08, 0x140));	// 112647                  sub     ds:word_4EC08, 140h ;~ 17C5:E10C
cs=0x17c5;eip=0x00e112; 	J(JNZ(loc_34310));	// 112648                  jnz     short loc_34310 ;~ 17C5:E112
cs=0x17c5;eip=0x00e114; 	X(POP(bp));	// 112649                  pop     bp ;~ 17C5:E114
cs=0x17c5;eip=0x00e115; 	X(POP(es));	// 112650                  pop     es ;~ 17C5:E115
cs=0x17c5;eip=0x00e116; 	X(POP(si));	// 112651                  pop     si ;~ 17C5:E116
cs=0x17c5;eip=0x00e117; 	X(POP(di));	// 112652                  pop     di ;~ 17C5:E117
cs=0x17c5;eip=0x00e118; 	T(sp = bp;);	// 112653                  mov     sp, bp ;~ 17C5:E118
cs=0x17c5;eip=0x00e11a; 	X(POP(bp));	// 112654                  pop     bp ;~ 17C5:E11A
cs=0x17c5;eip=0x00e11b; 	J(RETN(0));	// 112655                  retn ;~ 17C5:E11B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34310: 	goto loc_34310;
        case m2c::kseg2623_e0cf_proc: 	goto seg2623_e0cf_proc;
        case m2c::ksub_342da: 	goto sub_342da;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group63(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group63:
    _begin:
sub_3434c:
	// 112661 
#undef arg_0
#define arg_0 4
	// 112663 arg_0           = word ptr  4 ;~ 17C5:E11C
#undef arg_2
#define arg_2 6
	// 112664 arg_2           = word ptr  6 ;~ 17C5:E11C
cs=0x17c5;eip=0x00e11c; 	X(PUSH(bp));	// 112666                  push    bp ;~ 17C5:E11C
cs=0x17c5;eip=0x00e11d; 	T(bp = sp;);	// 112667                  mov     bp, sp ;~ 17C5:E11D
cs=0x17c5;eip=0x00e11f; 	X(PUSH(di));	// 112668                  push    di ;~ 17C5:E11F
cs=0x17c5;eip=0x00e120; 	X(PUSH(si));	// 112669                  push    si ;~ 17C5:E120
cs=0x17c5;eip=0x00e121; 	X(PUSH(es));	// 112670                  push    es ;~ 17C5:E121
cs=0x17c5;eip=0x00e122; 	X(PUSH(bp));	// 112671                  push    bp ;~ 17C5:E122
cs=0x17c5;eip=0x00e123; 	T(ax = 0x0DF16;);	// 112672                  mov     ax, 0DF16h ;~ 17C5:E123
cs=0x17c5;eip=0x00e126; 	X(word_4ec12 = ax;);	// 112673                  mov     ds:word_4EC12, ax ;~ 17C5:E126
cs=0x17c5;eip=0x00e129; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 112674                  mov     ax, [bp+arg_0] ;~ 17C5:E129
cs=0x17c5;eip=0x00e12c; 	X(word_4eac6 = ax;);	// 112675                  mov     ds:word_4EAC6, ax ;~ 17C5:E12C
cs=0x17c5;eip=0x00e12f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 112676                  mov     ax, [bp+arg_2] ;~ 17C5:E12F
cs=0x17c5;eip=0x00e132; 	T(es = ax;);	// 112677                  mov     es, ax ;~ 17C5:E132
cs=0x17c5;eip=0x00e134; 	J(CALLF(sub_49ac5,0));	// 112678                  call    far ptr sub_49AC5 ;~ 17C5:E134
seg2623_e139_proc:
	// 112682 
cs=0x17c5;eip=0x00e139; 	J(CALL(nullsub_3,0));	// 112682                  call    nullsub_3 ;~ 17C5:E139
cs=0x17c5;eip=0x00e13c; 	X(word_4ec10 = 0;);	// 112683                  mov     ds:word_4EC10, 0 ;~ 17C5:E13C
cs=0x17c5;eip=0x00e142; 	X(word_4ec08 = 0x0FA00;);	// 112684                  mov     ds:word_4EC08, 0FA00h ;~ 17C5:E142
loc_34378:
	// 6681 
cs=0x17c5;eip=0x00e148; 	T(di = word_4ec10;);	// 112687                  mov     di, ds:word_4EC10 ;~ 17C5:E148
cs=0x17c5;eip=0x00e14c; 	J(CALLF(sub_49ac0,0));	// 112688                  call    far ptr sub_49AC0 ;~ 17C5:E14C
cs=0x17c5;eip=0x00e151; 	X(word_4ec0c = ax;);	// 112690                  mov     ds:word_4EC0C, ax ;~ 17C5:E151
cs=0x17c5;eip=0x00e154; 	J(CALL(sub_34492,0));	// 112691                  call    sub_34492 ;~ 17C5:E154
cs=0x17c5;eip=0x00e157; 	T(di = word_4ec0c;);	// 112692                  mov     di, ds:word_4EC0C ;~ 17C5:E157
cs=0x17c5;eip=0x00e15b; 	T(bp = 0x5FE8;);	// 112693                  mov     bp, 5FE8h ;~ 17C5:E15B
cs=0x17c5;eip=0x00e15e; 	T(bx = word_4ec10;);	// 112694                  mov     bx, ds:word_4EC10 ;~ 17C5:E15E
cs=0x17c5;eip=0x00e162; 	J(CALLF(sub_49a9d,0));	// 112695                  call    far ptr sub_49A9D ;~ 17C5:E162
cs=0x17c5;eip=0x00e167; 	T(di = word_4ec0c;);	// 112697                  mov     di, ds:word_4EC0C ;~ 17C5:E167
cs=0x17c5;eip=0x00e16b; 	J(CALLF(sub_49ab1,0));	// 112698                  call    far ptr sub_49AB1 ;~ 17C5:E16B
cs=0x17c5;eip=0x00e170; 	X(INC(word_4ec10));	// 112700                  inc     ds:word_4EC10 ;~ 17C5:E170
cs=0x17c5;eip=0x00e174; 	X(SUB(word_4ec08, 0x140));	// 112701                  sub     ds:word_4EC08, 140h ;~ 17C5:E174
cs=0x17c5;eip=0x00e17a; 	J(JNZ(loc_34378));	// 112702                  jnz     short loc_34378 ;~ 17C5:E17A
cs=0x17c5;eip=0x00e17c; 	X(POP(bp));	// 112703                  pop     bp ;~ 17C5:E17C
cs=0x17c5;eip=0x00e17d; 	X(POP(es));	// 112704                  pop     es ;~ 17C5:E17D
cs=0x17c5;eip=0x00e17e; 	X(POP(si));	// 112705                  pop     si ;~ 17C5:E17E
cs=0x17c5;eip=0x00e17f; 	X(POP(di));	// 112706                  pop     di ;~ 17C5:E17F
cs=0x17c5;eip=0x00e180; 	T(sp = bp;);	// 112707                  mov     sp, bp ;~ 17C5:E180
cs=0x17c5;eip=0x00e182; 	X(POP(bp));	// 112708                  pop     bp ;~ 17C5:E182
cs=0x17c5;eip=0x00e183; 	J(RETN(0));	// 112709                  retn ;~ 17C5:E183
ret_17c5_e184:
	// 6682 
cs=0x17c5;eip=0x00e184; 	X(PUSH(bp));	// 112711                  push    bp ;~ 17C5:E184
cs=0x17c5;eip=0x00e185; 	T(bp = sp;);	// 112712                  mov     bp, sp ;~ 17C5:E185
cs=0x17c5;eip=0x00e187; 	X(PUSH(di));	// 112713                  push    di ;~ 17C5:E187
cs=0x17c5;eip=0x00e188; 	X(PUSH(si));	// 112714                  push    si ;~ 17C5:E188
cs=0x17c5;eip=0x00e189; 	X(PUSH(es));	// 112715                  push    es ;~ 17C5:E189
cs=0x17c5;eip=0x00e18a; 	X(PUSH(bp));	// 112716                  push    bp ;~ 17C5:E18A
cs=0x17c5;eip=0x00e18b; 	T(ax = 0x0DEED;);	// 112717                  mov     ax, 0DEEDh ;~ 17C5:E18B
cs=0x17c5;eip=0x00e18e; 	X(word_4ec12 = ax;);	// 112718                  mov     ds:word_4EC12, ax ;~ 17C5:E18E
cs=0x17c5;eip=0x00e191; 	X(word_4eac4 = 0x200;);	// 112719                  mov     ds:word_4EAC4, 200h ;~ 17C5:E191
cs=0x17c5;eip=0x00e197; 	X(word_4eac0 = 0;);	// 112720                  mov     ds:word_4EAC0, 0 ;~ 17C5:E197
cs=0x17c5;eip=0x00e19d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 112721                  mov     ax, [bp+4] ;~ 17C5:E19D
cs=0x17c5;eip=0x00e1a0; 	X(word_4eabe = ax;);	// 112722                  mov     ds:word_4EABE, ax ;~ 17C5:E1A0
cs=0x17c5;eip=0x00e1a3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+6))));	// 112723                  mov     ax, [bp+6] ;~ 17C5:E1A3
cs=0x17c5;eip=0x00e1a6; 	T(es = ax;);	// 112724                  mov     es, ax ;~ 17C5:E1A6
cs=0x17c5;eip=0x00e1a8; 	J(CALLF(sub_49ac5,0));	// 112725                  call    far ptr sub_49AC5 ;~ 17C5:E1A8
cs=0x17c5;eip=0x00e1ad; 	J(CALL(nullsub_3,0));	// 112727                  call    nullsub_3 ;~ 17C5:E1AD
cs=0x17c5;eip=0x00e1b0; 	X(word_4ec10 = 0;);	// 112728                  mov     ds:word_4EC10, 0 ;~ 17C5:E1B0
cs=0x17c5;eip=0x00e1b6; 	X(word_4ec08 = 0x0FA00;);	// 112729                  mov     ds:word_4EC08, 0FA00h ;~ 17C5:E1B6
loc_343ec:
	// 6683 
cs=0x17c5;eip=0x00e1bc; 	T(di = word_4ec10;);	// 112732                  mov     di, ds:word_4EC10 ;~ 17C5:E1BC
cs=0x17c5;eip=0x00e1c0; 	J(CALLF(sub_49ac0,0));	// 112733                  call    far ptr sub_49AC0 ;~ 17C5:E1C0
cs=0x17c5;eip=0x00e1c5; 	X(word_4ec0c = ax;);	// 112735                  mov     ds:word_4EC0C, ax ;~ 17C5:E1C5
cs=0x17c5;eip=0x00e1c8; 	J(CALL(sub_34492,0));	// 112736                  call    sub_34492 ;~ 17C5:E1C8
cs=0x17c5;eip=0x00e1cb; 	T(di = word_4ec0c;);	// 112737                  mov     di, ds:word_4EC0C ;~ 17C5:E1CB
cs=0x17c5;eip=0x00e1cf; 	T(bp = 0x5FE8;);	// 112738                  mov     bp, 5FE8h ;~ 17C5:E1CF
cs=0x17c5;eip=0x00e1d2; 	T(bx = word_4ec10;);	// 112739                  mov     bx, ds:word_4EC10 ;~ 17C5:E1D2
cs=0x17c5;eip=0x00e1d6; 	J(CALLF(sub_49a9d,0));	// 112740                  call    far ptr sub_49A9D ;~ 17C5:E1D6
cs=0x17c5;eip=0x00e1db; 	T(di = word_4ec0c;);	// 112742                  mov     di, ds:word_4EC0C ;~ 17C5:E1DB
cs=0x17c5;eip=0x00e1df; 	J(CALLF(sub_49ab1,0));	// 112743                  call    far ptr sub_49AB1 ;~ 17C5:E1DF
cs=0x17c5;eip=0x00e1e4; 	X(INC(word_4ec10));	// 112745                  inc     ds:word_4EC10 ;~ 17C5:E1E4
cs=0x17c5;eip=0x00e1e8; 	X(SUB(word_4ec08, 0x140));	// 112746                  sub     ds:word_4EC08, 140h ;~ 17C5:E1E8
cs=0x17c5;eip=0x00e1ee; 	J(JNZ(loc_343ec));	// 112747                  jnz     short loc_343EC ;~ 17C5:E1EE
cs=0x17c5;eip=0x00e1f0; 	X(POP(bp));	// 112748                  pop     bp ;~ 17C5:E1F0
cs=0x17c5;eip=0x00e1f1; 	X(POP(es));	// 112749                  pop     es ;~ 17C5:E1F1
cs=0x17c5;eip=0x00e1f2; 	X(POP(si));	// 112750                  pop     si ;~ 17C5:E1F2
cs=0x17c5;eip=0x00e1f3; 	X(POP(di));	// 112751                  pop     di ;~ 17C5:E1F3
cs=0x17c5;eip=0x00e1f4; 	T(sp = bp;);	// 112752                  mov     sp, bp ;~ 17C5:E1F4
cs=0x17c5;eip=0x00e1f6; 	X(POP(bp));	// 112753                  pop     bp ;~ 17C5:E1F6
cs=0x17c5;eip=0x00e1f7; 	J(RETN(0));	// 112754                  retn ;~ 17C5:E1F7

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34378: 	goto loc_34378;
        case m2c::kloc_343ec: 	goto loc_343ec;
        case m2c::kret_17c5_e184: 	goto ret_17c5_e184;
        case m2c::kseg2623_e139_proc: 	goto seg2623_e139_proc;
        case m2c::ksub_3434c: 	goto sub_3434c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group64(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group64:
    _begin:
sub_34428:
	// 112760 
#undef arg_0
#define arg_0 4
	// 112763 arg_0           = word ptr  4 ;~ 17C5:E1F8
#undef arg_2
#define arg_2 6
	// 112764 arg_2           = word ptr  6 ;~ 17C5:E1F8
cs=0x17c5;eip=0x00e1f8; 	X(PUSH(bp));	// 112766                  push    bp ;~ 17C5:E1F8
cs=0x17c5;eip=0x00e1f9; 	T(bp = sp;);	// 112767                  mov     bp, sp ;~ 17C5:E1F9
cs=0x17c5;eip=0x00e1fb; 	X(PUSH(di));	// 112768                  push    di ;~ 17C5:E1FB
cs=0x17c5;eip=0x00e1fc; 	X(PUSH(si));	// 112769                  push    si ;~ 17C5:E1FC
cs=0x17c5;eip=0x00e1fd; 	X(PUSH(es));	// 112770                  push    es ;~ 17C5:E1FD
cs=0x17c5;eip=0x00e1fe; 	X(PUSH(bp));	// 112771                  push    bp ;~ 17C5:E1FE
cs=0x17c5;eip=0x00e1ff; 	T(ax = 0x0DF16;);	// 112772                  mov     ax, 0DF16h ;~ 17C5:E1FF
cs=0x17c5;eip=0x00e202; 	X(word_4ec12 = ax;);	// 112773                  mov     ds:word_4EC12, ax ;~ 17C5:E202
cs=0x17c5;eip=0x00e205; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 112774                  mov     ax, [bp+arg_0] ;~ 17C5:E205
cs=0x17c5;eip=0x00e208; 	X(word_4eac6 = ax;);	// 112775                  mov     ds:word_4EAC6, ax ;~ 17C5:E208
cs=0x17c5;eip=0x00e20b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 112776                  mov     ax, [bp+arg_2] ;~ 17C5:E20B
cs=0x17c5;eip=0x00e20e; 	T(es = ax;);	// 112777                  mov     es, ax ;~ 17C5:E20E
cs=0x17c5;eip=0x00e210; 	J(CALLF(sub_49ac5,0));	// 112778                  call    far ptr sub_49AC5 ;~ 17C5:E210
seg2623_e215_proc:
	// 112782 
cs=0x17c5;eip=0x00e215; 	J(CALL(nullsub_3,0));	// 112782                  call    nullsub_3 ;~ 17C5:E215
cs=0x17c5;eip=0x00e218; 	X(word_4ec10 = 0;);	// 112783                  mov     ds:word_4EC10, 0 ;~ 17C5:E218
cs=0x17c5;eip=0x00e21e; 	X(word_4ec08 = 0x0FA00;);	// 112784                  mov     ds:word_4EC08, 0FA00h ;~ 17C5:E21E
loc_34454:
	// 6684 
cs=0x17c5;eip=0x00e224; 	T(di = word_4ec10;);	// 112787                  mov     di, ds:word_4EC10 ;~ 17C5:E224
cs=0x17c5;eip=0x00e228; 	J(CALLF(sub_49ac0,0));	// 112788                  call    far ptr sub_49AC0 ;~ 17C5:E228
cs=0x17c5;eip=0x00e22d; 	X(word_4ec0c = ax;);	// 112790                  mov     ds:word_4EC0C, ax ;~ 17C5:E22D
cs=0x17c5;eip=0x00e230; 	J(CALL(sub_34492,0));	// 112791                  call    sub_34492 ;~ 17C5:E230
cs=0x17c5;eip=0x00e233; 	T(di = word_4ec0c;);	// 112792                  mov     di, ds:word_4EC0C ;~ 17C5:E233
cs=0x17c5;eip=0x00e237; 	T(bp = 0x5FE8;);	// 112793                  mov     bp, 5FE8h ;~ 17C5:E237
cs=0x17c5;eip=0x00e23a; 	T(bx = word_4ec10;);	// 112794                  mov     bx, ds:word_4EC10 ;~ 17C5:E23A
cs=0x17c5;eip=0x00e23e; 	J(CALLF(sub_49aa2,0));	// 112795                  call    far ptr sub_49AA2 ;~ 17C5:E23E
cs=0x17c5;eip=0x00e243; 	T(di = word_4ec0c;);	// 112797                  mov     di, ds:word_4EC0C ;~ 17C5:E243
cs=0x17c5;eip=0x00e247; 	J(CALLF(sub_49aac,0));	// 112798                  call    far ptr sub_49AAC ;~ 17C5:E247
cs=0x17c5;eip=0x00e24c; 	X(INC(word_4ec10));	// 112800                  inc     ds:word_4EC10 ;~ 17C5:E24C
cs=0x17c5;eip=0x00e250; 	X(SUB(word_4ec08, 0x140));	// 112801                  sub     ds:word_4EC08, 140h ;~ 17C5:E250
cs=0x17c5;eip=0x00e256; 	J(JNZ(loc_34454));	// 112802                  jnz     short loc_34454 ;~ 17C5:E256
cs=0x17c5;eip=0x00e258; 	X(POP(bp));	// 112803                  pop     bp ;~ 17C5:E258
cs=0x17c5;eip=0x00e259; 	X(POP(es));	// 112804                  pop     es ;~ 17C5:E259
cs=0x17c5;eip=0x00e25a; 	X(POP(si));	// 112805                  pop     si ;~ 17C5:E25A
cs=0x17c5;eip=0x00e25b; 	X(POP(di));	// 112806                  pop     di ;~ 17C5:E25B
cs=0x17c5;eip=0x00e25c; 	T(sp = bp;);	// 112807                  mov     sp, bp ;~ 17C5:E25C
cs=0x17c5;eip=0x00e25e; 	X(POP(bp));	// 112808                  pop     bp ;~ 17C5:E25E
cs=0x17c5;eip=0x00e25f; 	J(RETN(0));	// 112809                  retn ;~ 17C5:E25F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34454: 	goto loc_34454;
        case m2c::kseg2623_e215_proc: 	goto seg2623_e215_proc;
        case m2c::ksub_34428: 	goto sub_34428;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool nullsub_3(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    nullsub_3:
    _begin:
cs=0x17c5;eip=0x00e260; 	J(RETN(0));	// 112816                  retn ;~ 17C5:E260

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::knullsub_3: 	goto nullsub_3;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34492(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34492:
    _begin:
cs=0x17c5;eip=0x00e262; 	X(PUSH(es));	// 112827                  push    es ;~ 17C5:E262
cs=0x17c5;eip=0x00e263; 	X(PUSH(ds));	// 112828                  push    ds ;~ 17C5:E263
cs=0x17c5;eip=0x00e264; 	X(POP(es));	// 112829                  pop     es ;~ 17C5:E264
cs=0x17c5;eip=0x00e265; 	T(CLD);	// 112831                  cld ;~ 17C5:E265
cs=0x17c5;eip=0x00e266; 	T(si = word_4eac4;);	// 112832                  mov     si, ds:word_4EAC4 ;~ 17C5:E266
cs=0x17c5;eip=0x00e26a; 	T(ADD(si, 0x5D7C));	// 112833                  add     si, 5D7Ch ;~ 17C5:E26A
cs=0x17c5;eip=0x00e26e; 	T(SHR(di, 1));	// 112834                  shr     di, 1 ;~ 17C5:E26E
cs=0x17c5;eip=0x00e270; 	J(JNZ(loc_344a5));	// 112835                  jnz     short loc_344A5 ;~ 17C5:E270
cs=0x17c5;eip=0x00e272; 	J(CALL(sub_344bc,0));	// 112836                  call    sub_344BC ;~ 17C5:E272
loc_344a5:
	// 6685 
cs=0x17c5;eip=0x00e275; 	T(cx = 0x140;);	// 112839                  mov     cx, 140h ;~ 17C5:E275
cs=0x17c5;eip=0x00e278; 	X(word_4ef8e = cx;);	// 112840                  mov     ds:word_4EF8E, cx ;~ 17C5:E278
cs=0x17c5;eip=0x00e27c; 	T(di = 0x5FE8;);	// 112841                  mov     di, 5FE8h ;~ 17C5:E27C
cs=0x17c5;eip=0x00e27f; 	J(CALL(sub_34539,0));	// 112842                  call    sub_34539 ;~ 17C5:E27F
cs=0x17c5;eip=0x00e282; 	T(SUB(si, 0x5D7C));	// 112843                  sub     si, 5D7Ch ;~ 17C5:E282
cs=0x17c5;eip=0x00e286; 	X(word_4eac4 = si;);	// 112844                  mov     ds:word_4EAC4, si ;~ 17C5:E286
cs=0x17c5;eip=0x00e28a; 	X(POP(es));	// 112845                  pop     es ;~ 17C5:E28A
cs=0x17c5;eip=0x00e28b; 	J(RETN(0));	// 112847                  retn ;~ 17C5:E28B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_344a5: 	goto loc_344a5;
        case m2c::ksub_34492: 	goto sub_34492;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group65(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group65:
    _begin:
sub_344bc:
	// 112854 
cs=0x17c5;eip=0x00e28c; 	T(ax = 0x5D7C;);	// 112855                  mov     ax, 5D7Ch ;~ 17C5:E28C
cs=0x17c5;eip=0x00e28f; 	T(ADD(ax, 0x200));	// 112856                  add     ax, 200h ;~ 17C5:E28F
cs=0x17c5;eip=0x00e292; 	X(word_4ef8a = ax;);	// 112857                  mov     ds:word_4EF8A, ax ;~ 17C5:E292
cs=0x17c5;eip=0x00e295; 	T(ax = 0x66BF;);	// 112858                  mov     ax, 66BFh ;~ 17C5:E295
cs=0x17c5;eip=0x00e298; 	X(word_4ef8c = ax;);	// 112859                  mov     ds:word_4EF8C, ax ;~ 17C5:E298
cs=0x17c5;eip=0x00e29b; 	X(byte_4ef90 = 0;);	// 112860                  mov     ds:byte_4EF90, 0 ;~ 17C5:E29B
cs=0x17c5;eip=0x00e2a0; 	X(byte_4ef91 = 0;);	// 112861                  mov     ds:byte_4EF91, 0 ;~ 17C5:E2A0
cs=0x17c5;eip=0x00e2a5; 	T(CMP(si, word_4ef8a));	// 112862                  cmp     si, ds:word_4EF8A ;~ 17C5:E2A5
cs=0x17c5;eip=0x00e2a9; 	J(JC(loc_344e8));	// 112863                  jb      short loc_344E8 ;~ 17C5:E2A9
cs=0x17c5;eip=0x00e2ab; 	X(PUSH(bx));	// 112864                  push    bx ;~ 17C5:E2AB
cs=0x17c5;eip=0x00e2ac; 	X(PUSH(cx));	// 112865                  push    cx ;~ 17C5:E2AC
cs=0x17c5;eip=0x00e2ad; 	X(PUSH(dx));	// 112866                  push    dx ;~ 17C5:E2AD
cs=0x17c5;eip=0x00e2ae; 	J(CALL(__dispatch_call,word_4ec12));	// 112867                  call    ds:word_4EC12 ;~ 17C5:E2AE
cs=0x17c5;eip=0x00e2b2; 	X(POP(dx));	// 112868                  pop     dx ;~ 17C5:E2B2
cs=0x17c5;eip=0x00e2b3; 	X(POP(cx));	// 112869                  pop     cx ;~ 17C5:E2B3
cs=0x17c5;eip=0x00e2b4; 	X(POP(bx));	// 112870                  pop     bx ;~ 17C5:E2B4
cs=0x17c5;eip=0x00e2b5; 	T(si = 0x5D7C;);	// 112871                  mov     si, 5D7Ch ;~ 17C5:E2B5
loc_344e8:
	// 6686 
cs=0x17c5;eip=0x00e2b8; 	T(LODSW);	// 112874                  lodsw ;~ 17C5:E2B8
cs=0x17c5;eip=0x00e2b9; 	X(word_4ef98 = ax;);	// 112875                  mov     ds:word_4EF98, ax ;~ 17C5:E2B9
cs=0x17c5;eip=0x00e2bc; 	X(byte_4ef9a = 8;);	// 112876                  mov     ds:byte_4EF9A, 8 ;~ 17C5:E2BC
cs=0x17c5;eip=0x00e2c1; 	X(byte_4ef9b = 1;);	// 112877                  mov     ds:byte_4EF9B, 1 ;~ 17C5:E2C1
cs=0x17c5;eip=0x00e2c6; 	T(OR(al, al));	// 112878                  or      al, al ;~ 17C5:E2C6
cs=0x17c5;eip=0x00e2c8; 	J(JNS(loc_34500));	// 112879                  jns     short loc_34500 ;~ 17C5:E2C8
cs=0x17c5;eip=0x00e2ca; 	X(DEC(byte_4ef9b));	// 112880                  dec     ds:byte_4EF9B ;~ 17C5:E2CA
cs=0x17c5;eip=0x00e2ce; 	T(NEG(al));	// 112881                  neg     al ;~ 17C5:E2CE
loc_34500:
	// 6687 
cs=0x17c5;eip=0x00e2d0; 	X(byte_4ef93 = al;);	// 112884                  mov     ds:byte_4EF93, al ;~ 17C5:E2D0
sub_34503:
	// 112891 
cs=0x17c5;eip=0x00e2d3; 	X(byte_4ef92 = 9;);	// 112892                  mov     ds:byte_4EF92, 9 ;~ 17C5:E2D3
cs=0x17c5;eip=0x00e2d8; 	X(word_4ef94 = 0x1FF;);	// 112893                  mov     ds:word_4EF94, 1FFh ;~ 17C5:E2D8
cs=0x17c5;eip=0x00e2de; 	T(dx = 0x100;);	// 112894                  mov     dx, 100h ;~ 17C5:E2DE
cs=0x17c5;eip=0x00e2e1; 	X(word_4ef96 = dx;);	// 112895                  mov     ds:word_4EF96, dx ;~ 17C5:E2E1
cs=0x17c5;eip=0x00e2e5; 	T(ax = 0x0FFFF;);	// 112896                  mov     ax, 0FFFFh ;~ 17C5:E2E5
cs=0x17c5;eip=0x00e2e8; 	T(XOR(bx, bx));	// 112897                  xor     bx, bx ;~ 17C5:E2E8
cs=0x17c5;eip=0x00e2ea; 	T(cx = 0x800;);	// 112898                  mov     cx, 800h ;~ 17C5:E2EA
loc_3451d:
	// 6688 
cs=0x17c5;eip=0x00e2ed; 	X(MOV(*(dw*)(raddr(ds,bx+0x199C)), ax));	// 112901                  mov     [bx+199Ch], ax ;~ 17C5:E2ED
cs=0x17c5;eip=0x00e2f1; 	T(ADD(bx, 3));	// 112902                  add     bx, 3 ;~ 17C5:E2F1
cs=0x17c5;eip=0x00e2f4; 	J(LOOP(loc_3451d));	// 112903                  loop    loc_3451D ;~ 17C5:E2F4
cs=0x17c5;eip=0x00e2f6; 	T(al = 0;);	// 112904                  mov     al, 0 ;~ 17C5:E2F6
cs=0x17c5;eip=0x00e2f8; 	T(XOR(bx, bx));	// 112905                  xor     bx, bx ;~ 17C5:E2F8
cs=0x17c5;eip=0x00e2fa; 	T(cx = 0x100;);	// 112906                  mov     cx, 100h ;~ 17C5:E2FA
loc_3452d:
	// 6689 
cs=0x17c5;eip=0x00e2fd; 	X(MOV(*(raddr(ds,bx+0x199E)), al));	// 112909                  mov     [bx+199Eh], al ;~ 17C5:E2FD
cs=0x17c5;eip=0x00e301; 	T(INC(al));	// 112910                  inc     al ;~ 17C5:E301
cs=0x17c5;eip=0x00e303; 	T(ADD(bx, 3));	// 112911                  add     bx, 3 ;~ 17C5:E303
cs=0x17c5;eip=0x00e306; 	J(LOOP(loc_3452d));	// 112912                  loop    loc_3452D ;~ 17C5:E306
cs=0x17c5;eip=0x00e308; 	J(RETN(0));	// 112913                  retn ;~ 17C5:E308

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_344e8: 	goto loc_344e8;
        case m2c::kloc_34500: 	goto loc_34500;
        case m2c::kloc_3451d: 	goto loc_3451d;
        case m2c::kloc_3452d: 	goto loc_3452d;
        case m2c::ksub_344bc: 	goto sub_344bc;
        case m2c::ksub_34503: 	goto sub_34503;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34539(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34539:
    _begin:
cs=0x17c5;eip=0x00e309; 	T(CMP(byte_4ef9b, 0));	// 112921                  cmp     ds:byte_4EF9B, 0 ;~ 17C5:E309
cs=0x17c5;eip=0x00e30e; 	J(JZ(loc_34544));	// 112922                  jz      short loc_34544 ;~ 17C5:E30E
cs=0x17c5;eip=0x00e310; 	X(SHR(word_4ef8e, 1));	// 112923                  shr     ds:word_4EF8E, 1 ;~ 17C5:E310
loc_34544:
	// 6690 
cs=0x17c5;eip=0x00e314; 	T(ax = word_4ef8c;);	// 112926                  mov     ax, ds:word_4EF8C ;~ 17C5:E314
cs=0x17c5;eip=0x00e317; 	X(word_4ef8c = sp;);	// 112927                  mov     ds:word_4EF8C, sp ;~ 17C5:E317
cs=0x17c5;eip=0x00e31b; 	T(sp = ax;);	// 112928                  mov     sp, ax ;~ 17C5:E31B
cs=0x17c5;eip=0x00e31d; 	T(dx = word_4ef96;);	// 112929                  mov     dx, ds:word_4EF96 ;~ 17C5:E31D
loc_34551:
	// 6691 
cs=0x17c5;eip=0x00e321; 	T(CMP(byte_4ef90, 0));	// 112933                  cmp     ds:byte_4EF90, 0 ;~ 17C5:E321
cs=0x17c5;eip=0x00e326; 	J(JNZ(loc_34579));	// 112934                  jnz     short loc_34579 ;~ 17C5:E326
cs=0x17c5;eip=0x00e328; 	J(CALL(sub_345b2,0));	// 112935                  call    sub_345B2 ;~ 17C5:E328
cs=0x17c5;eip=0x00e32b; 	T(CMP(al, 0x90));	// 112936                  cmp     al, 90h ;~ 17C5:E32B
cs=0x17c5;eip=0x00e32d; 	J(JZ(loc_34565));	// 112937                  jz      short loc_34565 ;~ 17C5:E32D
cs=0x17c5;eip=0x00e32f; 	X(byte_4ef91 = al;);	// 112938                  mov     ds:byte_4EF91, al ;~ 17C5:E32F
cs=0x17c5;eip=0x00e332; 	J(JMP(loc_34580));	// 112939                  jmp     short loc_34580 ;~ 17C5:E332
loc_34565:
	// 6692 
cs=0x17c5;eip=0x00e335; 	J(CALL(sub_345b2,0));	// 112945                  call    sub_345B2 ;~ 17C5:E335
cs=0x17c5;eip=0x00e338; 	T(OR(al, al));	// 112946                  or      al, al ;~ 17C5:E338
cs=0x17c5;eip=0x00e33a; 	J(JNZ(loc_34574));	// 112947                  jnz     short loc_34574 ;~ 17C5:E33A
cs=0x17c5;eip=0x00e33c; 	T(al = 0x90;);	// 112948                  mov     al, 90h ;~ 17C5:E33C
cs=0x17c5;eip=0x00e33e; 	X(byte_4ef91 = al;);	// 112949                  mov     ds:byte_4EF91, al ;~ 17C5:E33E
cs=0x17c5;eip=0x00e341; 	J(JMP(loc_34580));	// 112950                  jmp     short loc_34580 ;~ 17C5:E341
loc_34574:
	// 6693 
cs=0x17c5;eip=0x00e344; 	T(DEC(al));	// 112955                  dec     al ;~ 17C5:E344
cs=0x17c5;eip=0x00e346; 	X(byte_4ef90 = al;);	// 112956                  mov     ds:byte_4EF90, al ;~ 17C5:E346
loc_34579:
	// 6694 
cs=0x17c5;eip=0x00e349; 	T(al = byte_4ef91;);	// 112959                  mov     al, ds:byte_4EF91 ;~ 17C5:E349
cs=0x17c5;eip=0x00e34c; 	X(DEC(byte_4ef90));	// 112960                  dec     ds:byte_4EF90 ;~ 17C5:E34C
loc_34580:
	// 6695 
cs=0x17c5;eip=0x00e350; 	T(CMP(byte_4ef9b, 0));	// 112964                  cmp     ds:byte_4EF9B, 0 ;~ 17C5:E350
cs=0x17c5;eip=0x00e355; 	J(JZ(loc_3459d));	// 112965                  jz      short loc_3459D ;~ 17C5:E355
cs=0x17c5;eip=0x00e357; 	T(ah = al;);	// 112966                  mov     ah, al ;~ 17C5:E357
cs=0x17c5;eip=0x00e359; 	T(AND(al, 0x0F));	// 112967                  and     al, 0Fh ;~ 17C5:E359
cs=0x17c5;eip=0x00e35b; 	T(SHR(ah, 1));	// 112968                  shr     ah, 1 ;~ 17C5:E35B
cs=0x17c5;eip=0x00e35d; 	T(SHR(ah, 1));	// 112969                  shr     ah, 1 ;~ 17C5:E35D
cs=0x17c5;eip=0x00e35f; 	T(SHR(ah, 1));	// 112970                  shr     ah, 1 ;~ 17C5:E35F
cs=0x17c5;eip=0x00e361; 	T(SHR(ah, 1));	// 112971                  shr     ah, 1 ;~ 17C5:E361
cs=0x17c5;eip=0x00e363; 	X(STOSW);	// 112972                  stosw ;~ 17C5:E363
cs=0x17c5;eip=0x00e364; 	X(DEC(word_4ef8e));	// 112973                  dec     ds:word_4EF8E ;~ 17C5:E364
cs=0x17c5;eip=0x00e368; 	J(JNZ(loc_34551));	// 112974                  jnz     short loc_34551 ;~ 17C5:E368
cs=0x17c5;eip=0x00e36a; 	J(JMP(loc_345a4));	// 112975                  jmp     short loc_345A4 ;~ 17C5:E36A
loc_3459d:
	// 6696 
cs=0x17c5;eip=0x00e36d; 	X(STOSB);	// 112981                  stosb ;~ 17C5:E36D
cs=0x17c5;eip=0x00e36e; 	X(DEC(word_4ef8e));	// 112982                  dec     ds:word_4EF8E ;~ 17C5:E36E
cs=0x17c5;eip=0x00e372; 	J(JNZ(loc_34551));	// 112983                  jnz     short loc_34551 ;~ 17C5:E372
loc_345a4:
	// 6697 
cs=0x17c5;eip=0x00e374; 	X(word_4ef96 = dx;);	// 112986                  mov     ds:word_4EF96, dx ;~ 17C5:E374
cs=0x17c5;eip=0x00e378; 	T(ax = word_4ef8c;);	// 112987                  mov     ax, ds:word_4EF8C ;~ 17C5:E378
cs=0x17c5;eip=0x00e37b; 	X(word_4ef8c = sp;);	// 112988                  mov     ds:word_4EF8C, sp ;~ 17C5:E37B
cs=0x17c5;eip=0x00e37f; 	T(sp = ax;);	// 112989                  mov     sp, ax ;~ 17C5:E37F
cs=0x17c5;eip=0x00e381; 	J(RETN(0));	// 112990                  retn ;~ 17C5:E381

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34544: 	goto loc_34544;
        case m2c::kloc_34551: 	goto loc_34551;
        case m2c::kloc_34565: 	goto loc_34565;
        case m2c::kloc_34574: 	goto loc_34574;
        case m2c::kloc_34579: 	goto loc_34579;
        case m2c::kloc_34580: 	goto loc_34580;
        case m2c::kloc_3459d: 	goto loc_3459d;
        case m2c::kloc_345a4: 	goto loc_345a4;
        case m2c::ksub_34539: 	goto sub_34539;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_345b2(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_345b2:
    _begin:
cs=0x17c5;eip=0x00e382; 	X(POP(bp));	// 112999                  pop     bp ;~ 17C5:E382
cs=0x17c5;eip=0x00e383; 	T(CMP(sp, 0x66BF));	// 113000                  cmp     sp, 66BFh ;~ 17C5:E383
cs=0x17c5;eip=0x00e387; 	J(JZ(loc_345bc));	// 113001                  jz      short loc_345BC ;~ 17C5:E387
loc_345b9:
	// 6698 
cs=0x17c5;eip=0x00e389; 	X(POP(ax));	// 113004                  pop     ax ;~ 17C5:E389
cs=0x17c5;eip=0x00e38a; __disp=bp;
	J(return true;);	// 113005                  jmp     bp ;~ 17C5:E38A
loc_345bc:
	// 6699 
cs=0x17c5;eip=0x00e38c; 	T(bx = word_4ef98;);	// 113009                  mov     bx, ds:word_4EF98 ;~ 17C5:E38C
cs=0x17c5;eip=0x00e390; 	T(cl = 0x10;);	// 113010                  mov     cl, 10h ;~ 17C5:E390
cs=0x17c5;eip=0x00e392; 	T(ch = byte_4ef9a;);	// 113011                  mov     ch, ds:byte_4EF9A ;~ 17C5:E392
cs=0x17c5;eip=0x00e396; 	T(SUB(cl, ch));	// 113012                  sub     cl, ch ;~ 17C5:E396
cs=0x17c5;eip=0x00e398; 	T(SHR(bx, cl));	// 113013                  shr     bx, cl ;~ 17C5:E398
cs=0x17c5;eip=0x00e39a; 	T(cl = ch;);	// 113014                  mov     cl, ch ;~ 17C5:E39A
loc_345cc:
	// 6700 
cs=0x17c5;eip=0x00e39c; 	T(CMP(cl, byte_4ef92));	// 113017                  cmp     cl, ds:byte_4EF92 ;~ 17C5:E39C
cs=0x17c5;eip=0x00e3a0; 	J(JGE(loc_345f2));	// 113018                  jge     short loc_345F2 ;~ 17C5:E3A0
cs=0x17c5;eip=0x00e3a2; 	T(CMP(si, word_4ef8a));	// 113019                  cmp     si, ds:word_4EF8A ;~ 17C5:E3A2
cs=0x17c5;eip=0x00e3a6; 	J(JC(loc_345e5));	// 113020                  jb      short loc_345E5 ;~ 17C5:E3A6
cs=0x17c5;eip=0x00e3a8; 	X(PUSH(bx));	// 113021                  push    bx ;~ 17C5:E3A8
cs=0x17c5;eip=0x00e3a9; 	X(PUSH(cx));	// 113022                  push    cx ;~ 17C5:E3A9
cs=0x17c5;eip=0x00e3aa; 	X(PUSH(dx));	// 113023                  push    dx ;~ 17C5:E3AA
cs=0x17c5;eip=0x00e3ab; 	J(CALL(__dispatch_call,word_4ec12));	// 113024                  call    ds:word_4EC12 ;~ 17C5:E3AB
cs=0x17c5;eip=0x00e3af; 	X(POP(dx));	// 113025                  pop     dx ;~ 17C5:E3AF
cs=0x17c5;eip=0x00e3b0; 	X(POP(cx));	// 113026                  pop     cx ;~ 17C5:E3B0
cs=0x17c5;eip=0x00e3b1; 	X(POP(bx));	// 113027                  pop     bx ;~ 17C5:E3B1
cs=0x17c5;eip=0x00e3b2; 	T(si = 0x5D7C;);	// 113028                  mov     si, 5D7Ch ;~ 17C5:E3B2
loc_345e5:
	// 6701 
cs=0x17c5;eip=0x00e3b5; 	T(LODSW);	// 113031                  lodsw ;~ 17C5:E3B5
cs=0x17c5;eip=0x00e3b6; 	X(word_4ef98 = ax;);	// 113032                  mov     ds:word_4EF98, ax ;~ 17C5:E3B6
cs=0x17c5;eip=0x00e3b9; 	T(SHL(ax, cl));	// 113033                  shl     ax, cl ;~ 17C5:E3B9
cs=0x17c5;eip=0x00e3bb; 	T(OR(bx, ax));	// 113034                  or      bx, ax ;~ 17C5:E3BB
cs=0x17c5;eip=0x00e3bd; 	T(ADD(cl, 0x10));	// 113035                  add     cl, 10h ;~ 17C5:E3BD
cs=0x17c5;eip=0x00e3c0; 	J(JMP(loc_345cc));	// 113036                  jmp     short loc_345CC ;~ 17C5:E3C0
loc_345f2:
	// 6702 
cs=0x17c5;eip=0x00e3c2; 	T(SUB(cl, byte_4ef92));	// 113040                  sub     cl, ds:byte_4EF92 ;~ 17C5:E3C2
cs=0x17c5;eip=0x00e3c6; 	X(byte_4ef9a = cl;);	// 113041                  mov     ds:byte_4EF9A, cl ;~ 17C5:E3C6
cs=0x17c5;eip=0x00e3ca; 	T(ax = bx;);	// 113042                  mov     ax, bx ;~ 17C5:E3CA
cs=0x17c5;eip=0x00e3cc; 	T(AND(ax, word_4ef94));	// 113043                  and     ax, ds:word_4EF94 ;~ 17C5:E3CC
cs=0x17c5;eip=0x00e3d0; 	T(cx = ax;);	// 113044                  mov     cx, ax ;~ 17C5:E3D0
cs=0x17c5;eip=0x00e3d2; 	T(CMP(ax, dx));	// 113045                  cmp     ax, dx ;~ 17C5:E3D2
cs=0x17c5;eip=0x00e3d4; 	J(JL(loc_34610));	// 113046                  jl      short loc_34610 ;~ 17C5:E3D4
cs=0x17c5;eip=0x00e3d6; 	T(cx = dx;);	// 113047                  mov     cx, dx ;~ 17C5:E3D6
cs=0x17c5;eip=0x00e3d8; 	T(ax = word_4ef9c;);	// 113048                  mov     ax, ds:word_4EF9C ;~ 17C5:E3D8
cs=0x17c5;eip=0x00e3db; 	T(bl = byte_4ef9e;);	// 113049                  mov     bl, ds:byte_4EF9E ;~ 17C5:E3DB
cs=0x17c5;eip=0x00e3df; 	X(PUSH(bx));	// 113050                  push    bx ;~ 17C5:E3DF
loc_34610:
	// 6703 
cs=0x17c5;eip=0x00e3e0; 	T(bx = ax;);	// 113054                  mov     bx, ax ;~ 17C5:E3E0
cs=0x17c5;eip=0x00e3e2; 	T(ADD(bx, ax));	// 113055                  add     bx, ax ;~ 17C5:E3E2
cs=0x17c5;eip=0x00e3e4; 	T(ADD(bx, ax));	// 113056                  add     bx, ax ;~ 17C5:E3E4
cs=0x17c5;eip=0x00e3e6; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x199C))));	// 113057                  mov     ax, [bx+199Ch] ;~ 17C5:E3E6
cs=0x17c5;eip=0x00e3ea; 	T(INC(ax));	// 113058                  inc     ax ;~ 17C5:E3EA
cs=0x17c5;eip=0x00e3eb; 	J(JZ(loc_34625));	// 113059                  jz      short loc_34625 ;~ 17C5:E3EB
cs=0x17c5;eip=0x00e3ed; 	T(DEC(ax));	// 113060                  dec     ax ;~ 17C5:E3ED
cs=0x17c5;eip=0x00e3ee; 	T(MOV(bl, *(raddr(ds,bx+0x199E))));	// 113061                  mov     bl, [bx+199Eh] ;~ 17C5:E3EE
cs=0x17c5;eip=0x00e3f2; 	X(PUSH(bx));	// 113062                  push    bx ;~ 17C5:E3F2
cs=0x17c5;eip=0x00e3f3; 	J(JMP(loc_34610));	// 113063                  jmp     short loc_34610 ;~ 17C5:E3F3
loc_34625:
	// 6704 
cs=0x17c5;eip=0x00e3f5; 	T(MOV(al, *(raddr(ds,bx+0x199E))));	// 113067                  mov     al, [bx+199Eh] ;~ 17C5:E3F5
cs=0x17c5;eip=0x00e3f9; 	X(byte_4ef9e = al;);	// 113068                  mov     ds:byte_4EF9E, al ;~ 17C5:E3F9
cs=0x17c5;eip=0x00e3fc; 	X(PUSH(ax));	// 113069                  push    ax ;~ 17C5:E3FC
cs=0x17c5;eip=0x00e3fd; 	T(bx = dx;);	// 113070                  mov     bx, dx ;~ 17C5:E3FD
cs=0x17c5;eip=0x00e3ff; 	T(ADD(bx, dx));	// 113071                  add     bx, dx ;~ 17C5:E3FF
cs=0x17c5;eip=0x00e401; 	T(ADD(bx, dx));	// 113072                  add     bx, dx ;~ 17C5:E401
cs=0x17c5;eip=0x00e403; 	X(MOV(*(raddr(ds,bx+0x199E)), al));	// 113073                  mov     [bx+199Eh], al ;~ 17C5:E403
cs=0x17c5;eip=0x00e407; 	T(ax = word_4ef9c;);	// 113074                  mov     ax, ds:word_4EF9C ;~ 17C5:E407
cs=0x17c5;eip=0x00e40a; 	X(MOV(*(dw*)(raddr(ds,bx+0x199C)), ax));	// 113075                  mov     [bx+199Ch], ax ;~ 17C5:E40A
cs=0x17c5;eip=0x00e40e; 	T(INC(dx));	// 113076                  inc     dx ;~ 17C5:E40E
cs=0x17c5;eip=0x00e40f; 	T(CMP(dx, word_4ef94));	// 113077                  cmp     dx, ds:word_4EF94 ;~ 17C5:E40F
cs=0x17c5;eip=0x00e413; 	J(JLE(loc_3464e));	// 113078                  jle     short loc_3464E ;~ 17C5:E413
cs=0x17c5;eip=0x00e415; 	X(INC(byte_4ef92));	// 113079                  inc     ds:byte_4EF92 ;~ 17C5:E415
cs=0x17c5;eip=0x00e419; 	T(STC);	// 113080                  stc ;~ 17C5:E419
cs=0x17c5;eip=0x00e41a; 	X(RCL(word_4ef94, 1));	// 113081                  rcl     ds:word_4EF94, 1 ;~ 17C5:E41A
loc_3464e:
	// 6705 
cs=0x17c5;eip=0x00e41e; 	T(al = byte_4ef92;);	// 113084                  mov     al, ds:byte_4EF92 ;~ 17C5:E41E
cs=0x17c5;eip=0x00e421; 	T(CMP(al, byte_4ef93));	// 113085                  cmp     al, ds:byte_4EF93 ;~ 17C5:E421
cs=0x17c5;eip=0x00e425; 	J(JLE(loc_3465a));	// 113086                  jle     short loc_3465A ;~ 17C5:E425
cs=0x17c5;eip=0x00e427; 	J(CALL(sub_34503,0));	// 113087                  call    sub_34503 ;~ 17C5:E427
loc_3465a:
	// 6706 
cs=0x17c5;eip=0x00e42a; 	X(word_4ef9c = cx;);	// 113090                  mov     ds:word_4EF9C, cx ;~ 17C5:E42A
cs=0x17c5;eip=0x00e42e; 	J(JMP(loc_345b9));	// 113091                  jmp     loc_345B9 ;~ 17C5:E42E

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_345b9: 	goto loc_345b9;
        case m2c::kloc_345bc: 	goto loc_345bc;
        case m2c::kloc_345cc: 	goto loc_345cc;
        case m2c::kloc_345e5: 	goto loc_345e5;
        case m2c::kloc_345f2: 	goto loc_345f2;
        case m2c::kloc_34610: 	goto loc_34610;
        case m2c::kloc_34625: 	goto loc_34625;
        case m2c::kloc_3464e: 	goto loc_3464e;
        case m2c::kloc_3465a: 	goto loc_3465a;
        case m2c::ksub_345b2: 	goto sub_345b2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group66(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group66:
    _begin:
start:
	// 113101 
cs=0x17c5;eip=0x00e432; 	T(ax = 0x13;);	// 113102                  mov     ax, 13h ;~ 17C5:E432
cs=0x17c5;eip=0x00e435; 	S(_INT(0x10));	// 113103                  int     10h             ; - VIDEO - SET VIDEO MODE ;~ 17C5:E435
cs=0x17c5;eip=0x00e437; 	T(ax = seg_offset(seg001););	// 113105                  mov     ax, seg seg001 ;~ 17C5:E437
cs=0x17c5;eip=0x00e43a; 	T(NOP);	// 113106                  nop ;~ 17C5:E43A
cs=0x17c5;eip=0x00e43b; 	T(NOP);	// 113107                  nop ;~ 17C5:E43B
cs=0x17c5;eip=0x00e43c; 	T(di = seg_offset(seg48ae););	// 113108                  mov     di, seg seg48ae ;~ 17C5:E43C
cs=0x17c5;eip=0x00e43f; 	T(MOV(si, *(dw*)(raddr(ds,2))));	// 113109                  mov     si, ds:2 ;~ 17C5:E43F
cs=0x17c5;eip=0x00e443; 	T(SUB(si, di));	// 113110                  sub     si, di ;~ 17C5:E443
cs=0x17c5;eip=0x00e445; 	T(CMP(si, 0x1000));	// 113111                  cmp     si, 1000h ;~ 17C5:E445
cs=0x17c5;eip=0x00e449; 	J(JC(loc_3467e));	// 113112                  jb      short loc_3467E ;~ 17C5:E449
cs=0x17c5;eip=0x00e44b; 	T(si = 0x1000;);	// 113113                  mov     si, 1000h ;~ 17C5:E44B
loc_3467e:
	// 6707 
cs=0x17c5;eip=0x00e44e; 	T(CLI);	// 113116                  cli ;~ 17C5:E44E
cs=0x17c5;eip=0x00e44f; 	R(ss = di;);	// 113117                  mov     ss, di ;~ 17C5:E44F
cs=0x17c5;eip=0x00e451; 	R(ADD(sp, 0x0A01E));	// 113118                  add     sp, 0A01Eh ;~ 17C5:E451
cs=0x17c5;eip=0x00e455; 	R(STI);	// 113119                  sti ;~ 17C5:E455
cs=0x17c5;eip=0x00e456; 	X(MOV(*(dw*)(raddr(fs,0x4F0)), ax));	// 113120                  mov     fs:4F0h, ax ;~ 17C5:E456
cs=0x17c5;eip=0x00e45a; 	X(MOV(*(raddr(fs,0x4F5)), 1));	// 113121                  mov     byte ptr fs:4F5h, 1 ;~ 17C5:E45A
cs=0x17c5;eip=0x00e460; 	T(NOP);	// 113122                  nop ;~ 17C5:E460
cs=0x17c5;eip=0x00e461; 	T(NOP);	// 113123                  nop ;~ 17C5:E461
cs=0x17c5;eip=0x00e462; 	T(NOP);	// 113124                  nop ;~ 17C5:E462
cs=0x17c5;eip=0x00e463; 	T(NOP);	// 113125                  nop ;~ 17C5:E463
cs=0x17c5;eip=0x00e464; 	T(NOP);	// 113126                  nop ;~ 17C5:E464
cs=0x17c5;eip=0x00e465; 	T(NOP);	// 113127                  nop ;~ 17C5:E465
cs=0x17c5;eip=0x00e466; 	T(NOP);	// 113128                  nop ;~ 17C5:E466
cs=0x17c5;eip=0x00e467; 	T(NOP);	// 113129                  nop ;~ 17C5:E467
cs=0x17c5;eip=0x00e468; 	T(AND(sp, 0x0FFFE));	// 113130                  and     sp, 0FFFEh ;~ 17C5:E468
cs=0x17c5;eip=0x00e46b; 	X(word_4ec1a = sp;);	// 113131                  mov     ss:word_4EC1A, sp ;~ 17C5:E46B
cs=0x17c5;eip=0x00e470; 	X(word_4ec16 = sp;);	// 113132                  mov     ss:word_4EC16, sp ;~ 17C5:E470
cs=0x17c5;eip=0x00e475; 	T(ax = si;);	// 113133                  mov     ax, si ;~ 17C5:E475
cs=0x17c5;eip=0x00e477; 	T(cl = 4;);	// 113134                  mov     cl, 4 ;~ 17C5:E477
cs=0x17c5;eip=0x00e479; 	T(SHL(ax, cl));	// 113135                  shl     ax, cl ;~ 17C5:E479
cs=0x17c5;eip=0x00e47b; 	T(DEC(ax));	// 113136                  dec     ax ;~ 17C5:E47B
cs=0x17c5;eip=0x00e47c; 	X(word_4ec14 = ax;);	// 113137                  mov     ss:word_4EC14, ax ;~ 17C5:E47C
cs=0x17c5;eip=0x00e480; 	T(ADD(si, di));	// 113138                  add     si, di ;~ 17C5:E480
cs=0x17c5;eip=0x00e482; 	X(MOV(*(dw*)(raddr(ds,2)), si));	// 113139                  mov     ds:2, si ;~ 17C5:E482
cs=0x17c5;eip=0x00e486; 	T(bx = es;);	// 113140                  mov     bx, es ;~ 17C5:E486
cs=0x17c5;eip=0x00e488; 	T(SUB(bx, si));	// 113141                  sub     bx, si ;~ 17C5:E488
cs=0x17c5;eip=0x00e48a; 	T(NEG(bx));	// 113142                  neg     bx ;~ 17C5:E48A
cs=0x17c5;eip=0x00e48c; 	T(ah = 0x4A;);	// 113143                  mov     ah, 4Ah ;~ 17C5:E48C
cs=0x17c5;eip=0x00e48e; 	S(_INT(0x21));	// 113144                  int     21h             ; DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK) ;~ 17C5:E48E
cs=0x17c5;eip=0x00e490; 	X(word_4ec8b = ds;);	// 113147                  mov     ss:word_4EC8B, ds ;~ 17C5:E490
cs=0x17c5;eip=0x00e495; 	X(PUSH(ss));	// 113148                  push    ss ;~ 17C5:E495
cs=0x17c5;eip=0x00e496; 	X(POP(es));	// 113149                  pop     es ;~ 17C5:E496
cs=0x17c5;eip=0x00e497; 	T(CLD);	// 113151                  cld ;~ 17C5:E497
cs=0x17c5;eip=0x00e498; 	T(di = 0x6422;);	// 113152                  mov     di, 6422h ;~ 17C5:E498
cs=0x17c5;eip=0x00e49b; 	T(cx = 0x0A020;);	// 113153                  mov     cx, 0A020h ;~ 17C5:E49B
cs=0x17c5;eip=0x00e49e; 	T(SUB(cx, di));	// 113154                  sub     cx, di ;~ 17C5:E49E
cs=0x17c5;eip=0x00e4a0; 	T(XOR(ax, ax));	// 113155                  xor     ax, ax ;~ 17C5:E4A0
	// 113156                  rep stosb ;~ 17C5:E4A2
cs=0x17c5;eip=0x00e4a2; 	X(	REP STOSB);	// 113156                  rep stosb ;~ 17C5:E4A2
cs=0x17c5;eip=0x00e4a4; 	X(PUSH(ss));	// 113157                  push    ss ;~ 17C5:E4A4
cs=0x17c5;eip=0x00e4a5; 	X(POP(ds));	// 113158                  pop     ds ;~ 17C5:E4A5
cs=0x17c5;eip=0x00e4a6; 	J(CALL(sub_34714,0));	// 113159                  call    sub_34714 ;~ 17C5:E4A6
cs=0x17c5;eip=0x00e4a9; 	X(PUSH(ss));	// 113160                  push    ss ;~ 17C5:E4A9
cs=0x17c5;eip=0x00e4aa; 	X(POP(ds));	// 113161                  pop     ds ;~ 17C5:E4AA
cs=0x17c5;eip=0x00e4ab; 	J(CALL(sub_264c7,0));	// 113162                  call    sub_264C7 ;~ 17C5:E4AB
cs=0x17c5;eip=0x00e4ae; 	J(CALL(sub_264c4,0));	// 113163                  call    sub_264C4 ;~ 17C5:E4AE
cs=0x17c5;eip=0x00e4b1; 	T(XOR(bp, bp));	// 113164                  xor     bp, bp ;~ 17C5:E4B1
cs=0x17c5;eip=0x00e4b3; 	X(PUSH(word_4ecac));	// 113165                  push    ds:word_4ECAC ;~ 17C5:E4B3
cs=0x17c5;eip=0x00e4b7; 	X(PUSH(word_4ecaa));	// 113166                  push    ds:word_4ECAA ;~ 17C5:E4B7
cs=0x17c5;eip=0x00e4bb; 	X(PUSH(word_4eca8));	// 113167                  push    ds:word_4ECA8 ;~ 17C5:E4BB
cs=0x17c5;eip=0x00e4bf; 	J(CALL(sub_26240,0));	// 113168                  call    sub_26240 ;~ 17C5:E4BF
seg2623_e4c2_proc:
	// 113172 
cs=0x17c5;eip=0x00e4c2; 	X(PUSH(ax));	// 113172                  push    ax ;~ 17C5:E4C2
cs=0x17c5;eip=0x00e4c3; 	J(CALL(sub_347d8,0));	// 113173                  call    sub_347D8 ;~ 17C5:E4C3
loc_346f6:
	// 6708 
cs=0x17c5;eip=0x00e4c6; 	T(ax = seg_offset(seg48ae););	// 113177                  mov     ax, seg seg48ae ;~ 17C5:E4C6
cs=0x17c5;eip=0x00e4c9; 	T(ds = ax;);	// 113178                  mov     ds, ax ;~ 17C5:E4C9
cs=0x17c5;eip=0x00e4cb; 	T(ax = 3;);	// 113179                  mov     ax, 3 ;~ 17C5:E4CB
cs=0x17c5;eip=0x00e4ce; 	X(off_4ec18 = m2c::ksub_347d8;);	// 113180                  mov     ss:off_4EC18, offset sub_347D8 ;~ 17C5:E4CE
loc_34705:
	// 6709 
cs=0x17c5;eip=0x00e4d5; 	X(PUSH(ax));	// 113187                  push    ax ;~ 17C5:E4D5
cs=0x17c5;eip=0x00e4d6; 	J(CALL(sub_34fb6,0));	// 113188                  call    sub_34FB6 ;~ 17C5:E4D6
cs=0x17c5;eip=0x00e4d9; 	J(CALL(sub_35029,0));	// 113189                  call    sub_35029 ;~ 17C5:E4D9
cs=0x17c5;eip=0x00e4dc; 	T(ax = 0x0FF;);	// 113190                  mov     ax, 0FFh ;~ 17C5:E4DC
cs=0x17c5;eip=0x00e4df; 	X(PUSH(ax));	// 113191                  push    ax ;~ 17C5:E4DF
cs=0x17c5;eip=0x00e4e0; 	J(CALL(__dispatch_call,off_4ec18));	// 113192                  call    ds:off_4EC18 ;~ 17C5:E4E0
sub_34714:
	// 113198 
cs=0x17c5;eip=0x00e4e4; 	T(ah = 0x30;);	// 113203                  mov     ah, 30h ;~ 17C5:E4E4
cs=0x17c5;eip=0x00e4e6; 	S(_INT(0x21));	// 113204                  int     21h             ; DOS - GET DOS VERSION ;~ 17C5:E4E6
cs=0x17c5;eip=0x00e4e8; 	X(word_4ec8d = ax;);	// 113206                  mov     ds:word_4EC8D, ax ;~ 17C5:E4E8
cs=0x17c5;eip=0x00e4eb; 	T(ax = 0x3500;);	// 113207                  mov     ax, 3500h ;~ 17C5:E4EB
cs=0x17c5;eip=0x00e4ee; 	S(_INT(0x21));	// 113208                  int     21h             ; DOS - 2+ - GET INTERRUPT VECTOR ;~ 17C5:E4EE
cs=0x17c5;eip=0x00e4f0; 	X(*(dw*)(&dword_4ec79) = bx;);	// 113211                  mov     word ptr ds:dword_4EC79, bx ;~ 17C5:E4F0
cs=0x17c5;eip=0x00e4f4; 	X(*(dw*)(((db*)&dword_4ec79)+2) = es;);	// 113212                  mov     word ptr ds:dword_4EC79+2, es ;~ 17C5:E4F4
cs=0x17c5;eip=0x00e4f8; 	X(PUSH(cs));	// 113213                  push    cs ;~ 17C5:E4F8
cs=0x17c5;eip=0x00e4f9; 	X(POP(ds));	// 113214                  pop     ds ;~ 17C5:E4F9
cs=0x17c5;eip=0x00e4fa; 	T(ax = 0x2500;);	// 113216                  mov     ax, 2500h ;~ 17C5:E4FA
cs=0x17c5;eip=0x00e4fd; 	T(dx = m2c::kloc_346f6;);	// 113217                  mov     dx, offset loc_346F6 ;~ 17C5:E4FD
cs=0x17c5;eip=0x00e500; 	S(_INT(0x21));	// 113218                  int     21h             ; DOS - SET INTERRUPT VECTOR ;~ 17C5:E500
cs=0x17c5;eip=0x00e502; 	X(PUSH(ss));	// 113221                  push    ss ;~ 17C5:E502
cs=0x17c5;eip=0x00e503; 	X(POP(ds));	// 113222                  pop     ds ;~ 17C5:E503
cs=0x17c5;eip=0x00e504; 	T(cx = word_4ee16;);	// 113224                  mov     cx, ds:word_4EE16 ;~ 17C5:E504
cs=0x17c5;eip=0x00e508; 	J(JCXZ(loc_34768));	// 113225                  jcxz    short loc_34768 ;~ 17C5:E508
cs=0x17c5;eip=0x00e50a; 	T(es = word_4ec8b;);	// 113226                  mov     es, ds:word_4EC8B ;~ 17C5:E50A
cs=0x17c5;eip=0x00e50e; 	T(MOV(si, *(dw*)(raddr(es,0x2C))));	// 113228                  mov     si, es:2Ch ;~ 17C5:E50E
cs=0x17c5;eip=0x00e513; 	T(LDS(ax, dword_4ee18));	// 113229                  lds     ax, ds:dword_4EE18 ;~ 17C5:E513
cs=0x17c5;eip=0x00e517; 	T(dx = ds;);	// 113230                  mov     dx, ds ;~ 17C5:E517
cs=0x17c5;eip=0x00e519; 	T(XOR(bx, bx));	// 113231                  xor     bx, bx ;~ 17C5:E519
cs=0x17c5;eip=0x00e51b; 	J(CALLF(__dispatch_call,*(dd*)(&unk_4ee14)));	// 113232                  call    dword ptr ss:unk_4EE14 ;~ 17C5:E51B
cs=0x17c5;eip=0x00e520; 	J(JNC(loc_34757));	// 113233                  jnb     short loc_34757 ;~ 17C5:E520
cs=0x17c5;eip=0x00e522; 	X(PUSH(ss));	// 113234                  push    ss ;~ 17C5:E522
cs=0x17c5;eip=0x00e523; 	X(POP(ds));	// 113235                  pop     ds ;~ 17C5:E523
cs=0x17c5;eip=0x00e524; 	J(return seg2623_eda6_proc(m2c::kloc_34fd6, _state););	// 113236                  jmp     loc_34FD6 ;~ 17C5:E524
loc_34757:
	// 6710 
cs=0x17c5;eip=0x00e527; 	T(LDS(ax, dword_4ee1c));	// 113240                  lds     ax, ss:dword_4EE1C ;~ 17C5:E527
cs=0x17c5;eip=0x00e52c; 	T(dx = ds;);	// 113241                  mov     dx, ds ;~ 17C5:E52C
cs=0x17c5;eip=0x00e52e; 	T(bx = 3;);	// 113242                  mov     bx, 3 ;~ 17C5:E52E
cs=0x17c5;eip=0x00e531; 	J(CALLF(__dispatch_call,*(dd*)(&unk_4ee14)));	// 113243                  call    dword ptr ss:unk_4EE14 ;~ 17C5:E531
cs=0x17c5;eip=0x00e536; 	X(PUSH(ss));	// 113244                  push    ss ;~ 17C5:E536
cs=0x17c5;eip=0x00e537; 	X(POP(ds));	// 113245                  pop     ds ;~ 17C5:E537
loc_34768:
	// 6711 
cs=0x17c5;eip=0x00e538; 	T(es = word_4ec8b;);	// 113248                  mov     es, ds:word_4EC8B ;~ 17C5:E538
cs=0x17c5;eip=0x00e53c; 	T(MOV(cx, *(dw*)(raddr(es,0x2C))));	// 113249                  mov     cx, es:2Ch ;~ 17C5:E53C
cs=0x17c5;eip=0x00e541; 	J(JCXZ(loc_347a9));	// 113250                  jcxz    short loc_347A9 ;~ 17C5:E541
cs=0x17c5;eip=0x00e543; 	T(es = cx;);	// 113251                  mov     es, cx ;~ 17C5:E543
cs=0x17c5;eip=0x00e545; 	T(XOR(di, di));	// 113252                  xor     di, di ;~ 17C5:E545
loc_34777:
	// 6712 
cs=0x17c5;eip=0x00e547; 	T(CMP(*(raddr(es,di)), 0));	// 113255                  cmp     byte ptr es:[di], 0 ;~ 17C5:E547
cs=0x17c5;eip=0x00e54b; 	J(JZ(loc_347a9));	// 113256                  jz      short loc_347A9 ;~ 17C5:E54B
cs=0x17c5;eip=0x00e54d; 	T(cx = 0x0C;);	// 113257                  mov     cx, 0Ch ;~ 17C5:E54D
cs=0x17c5;eip=0x00e550; 	T(si = 0x618C;);	// 113258                  mov     si, 618Ch ;~ 17C5:E550
	// 113259                  repe cmpsb ;~ 17C5:E553
cs=0x17c5;eip=0x00e553; 	T(	REPE CMPSB);	// 113259                  repe cmpsb ;~ 17C5:E553
cs=0x17c5;eip=0x00e555; 	J(JZ(loc_34792));	// 113260                  jz      short loc_34792 ;~ 17C5:E555
cs=0x17c5;eip=0x00e557; 	T(cx = 0x7FFF;);	// 113261                  mov     cx, 7FFFh ;~ 17C5:E557
cs=0x17c5;eip=0x00e55a; 	T(XOR(ax, ax));	// 113262                  xor     ax, ax ;~ 17C5:E55A
	// 113263                  repne scasb ;~ 17C5:E55C
cs=0x17c5;eip=0x00e55c; 	T(	REPNE SCASB);	// 113263                  repne scasb ;~ 17C5:E55C
cs=0x17c5;eip=0x00e55e; 	J(JNZ(loc_347a9));	// 113264                  jnz     short loc_347A9 ;~ 17C5:E55E
cs=0x17c5;eip=0x00e560; 	J(JMP(loc_34777));	// 113265                  jmp     short loc_34777 ;~ 17C5:E560
loc_34792:
	// 6713 
cs=0x17c5;eip=0x00e562; 	X(PUSH(es));	// 113269                  push    es ;~ 17C5:E562
cs=0x17c5;eip=0x00e563; 	X(PUSH(ds));	// 113270                  push    ds ;~ 17C5:E563
cs=0x17c5;eip=0x00e564; 	X(POP(es));	// 113271                  pop     es ;~ 17C5:E564
cs=0x17c5;eip=0x00e565; 	X(POP(ds));	// 113273                  pop     ds ;~ 17C5:E565
cs=0x17c5;eip=0x00e566; 	T(si = di;);	// 113274                  mov     si, di ;~ 17C5:E566
cs=0x17c5;eip=0x00e568; 	T(di = 0x61B4;);	// 113275                  mov     di, 61B4h ;~ 17C5:E568
cs=0x17c5;eip=0x00e56b; 	T(LODSB);	// 113276                  lodsb ;~ 17C5:E56B
cs=0x17c5;eip=0x00e56c; 	T(CBW);	// 113277                  cbw ;~ 17C5:E56C
cs=0x17c5;eip=0x00e56d; 	T(XCHG(ax, cx));	// 113278                  xchg    ax, cx ;~ 17C5:E56D
loc_3479e:
	// 6714 
cs=0x17c5;eip=0x00e56e; 	T(LODSB);	// 113281                  lodsb ;~ 17C5:E56E
cs=0x17c5;eip=0x00e56f; 	T(INC(al));	// 113282                  inc     al ;~ 17C5:E56F
cs=0x17c5;eip=0x00e571; 	J(JZ(loc_347a4));	// 113283                  jz      short loc_347A4 ;~ 17C5:E571
cs=0x17c5;eip=0x00e573; 	T(DEC(ax));	// 113284                  dec     ax ;~ 17C5:E573
loc_347a4:
	// 6715 
cs=0x17c5;eip=0x00e574; 	X(STOSB);	// 113287                  stosb ;~ 17C5:E574
cs=0x17c5;eip=0x00e575; 	J(LOOP(loc_3479e));	// 113288                  loop    loc_3479E ;~ 17C5:E575
cs=0x17c5;eip=0x00e577; 	X(PUSH(ss));	// 113289                  push    ss ;~ 17C5:E577
cs=0x17c5;eip=0x00e578; 	X(POP(ds));	// 113290                  pop     ds ;~ 17C5:E578
loc_347a9:
	// 6716 
cs=0x17c5;eip=0x00e579; 	T(bx = 4;);	// 113294                  mov     bx, 4 ;~ 17C5:E579
loc_347ac:
	// 6717 
cs=0x17c5;eip=0x00e57c; 	X(AND(*(raddr(ds,bx+0x61B4)), 0x0BF));	// 113297                  and     byte ptr [bx+61B4h], 0BFh ;~ 17C5:E57C
cs=0x17c5;eip=0x00e581; 	T(ax = 0x4400;);	// 113298                  mov     ax, 4400h ;~ 17C5:E581
cs=0x17c5;eip=0x00e584; 	S(_INT(0x21));	// 113299                  int     21h             ; DOS - 2+ - IOCTL - GET DEVICE INFORMATION ;~ 17C5:E584
cs=0x17c5;eip=0x00e586; 	J(JC(loc_347c2));	// 113301                  jb      short loc_347C2 ;~ 17C5:E586
cs=0x17c5;eip=0x00e588; 	T(TEST(dl, 0x80));	// 113302                  test    dl, 80h ;~ 17C5:E588
cs=0x17c5;eip=0x00e58b; 	J(JZ(loc_347c2));	// 113303                  jz      short loc_347C2 ;~ 17C5:E58B
cs=0x17c5;eip=0x00e58d; 	X(OR(*(raddr(ds,bx+0x61B4)), 0x40));	// 113304                  or      byte ptr [bx+61B4h], 40h ;~ 17C5:E58D
loc_347c2:
	// 6718 
cs=0x17c5;eip=0x00e592; 	T(DEC(bx));	// 113308                  dec     bx ;~ 17C5:E592
cs=0x17c5;eip=0x00e593; 	J(JNS(loc_347ac));	// 113309                  jns     short loc_347AC ;~ 17C5:E593
cs=0x17c5;eip=0x00e595; 	T(si = 0x6340;);	// 113310                  mov     si, 6340h ;~ 17C5:E595
cs=0x17c5;eip=0x00e598; 	T(di = 0x6340;);	// 113311                  mov     di, 6340h ;~ 17C5:E598
cs=0x17c5;eip=0x00e59b; 	J(CALL(sub_34870,0));	// 113312                  call    sub_34870 ;~ 17C5:E59B
cs=0x17c5;eip=0x00e59e; 	T(si = 0x6340;);	// 113313                  mov     si, 6340h ;~ 17C5:E59E
cs=0x17c5;eip=0x00e5a1; 	T(di = 0x6340;);	// 113314                  mov     di, 6340h ;~ 17C5:E5A1
cs=0x17c5;eip=0x00e5a4; 	J(CALL(sub_34861,0));	// 113315                  call    sub_34861 ;~ 17C5:E5A4
cs=0x17c5;eip=0x00e5a7; 	J(RETN(0));	// 113316                  retn ;~ 17C5:E5A7
sub_347d8:
	// 113324 
cs=0x17c5;eip=0x00e5a8; 	X(PUSH(bp));	// 113327                  push    bp ;~ 17C5:E5A8
cs=0x17c5;eip=0x00e5a9; 	T(bp = sp;);	// 113328                  mov     bp, sp ;~ 17C5:E5A9
cs=0x17c5;eip=0x00e5ab; 	T(si = 0x66C0;);	// 113329                  mov     si, 66C0h ;~ 17C5:E5AB
cs=0x17c5;eip=0x00e5ae; 	T(di = 0x66C0;);	// 113330                  mov     di, 66C0h ;~ 17C5:E5AE
cs=0x17c5;eip=0x00e5b1; 	J(CALL(sub_34861,0));	// 113331                  call    sub_34861 ;~ 17C5:E5B1
cs=0x17c5;eip=0x00e5b4; 	T(si = 0x6340;);	// 113332                  mov     si, 6340h ;~ 17C5:E5B4
cs=0x17c5;eip=0x00e5b7; 	T(di = 0x6342;);	// 113333                  mov     di, 6342h ;~ 17C5:E5B7
cs=0x17c5;eip=0x00e5ba; 	J(CALL(sub_34861,0));	// 113334                  call    sub_34861 ;~ 17C5:E5BA
cs=0x17c5;eip=0x00e5bd; 	J(return _group67(m2c::kloc_347f2, _state););	// 113335                  jmp     short loc_347F2 ;~ 17C5:E5BD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3467e: 	goto loc_3467e;
        case m2c::kloc_346f6: 	goto loc_346f6;
        case m2c::kloc_34705: 	goto loc_34705;
        case m2c::kloc_34757: 	goto loc_34757;
        case m2c::kloc_34768: 	goto loc_34768;
        case m2c::kloc_34777: 	goto loc_34777;
        case m2c::kloc_34792: 	goto loc_34792;
        case m2c::kloc_3479e: 	goto loc_3479e;
        case m2c::kloc_347a4: 	goto loc_347a4;
        case m2c::kloc_347a9: 	goto loc_347a9;
        case m2c::kloc_347ac: 	goto loc_347ac;
        case m2c::kloc_347c2: 	goto loc_347c2;
        case m2c::kseg2623_e4c2_proc: 	goto seg2623_e4c2_proc;
        case m2c::kstart: 	goto start;
        case m2c::ksub_34714: 	goto sub_34714;
        case m2c::ksub_347d8: 	goto sub_347d8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group67(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group67:
    _begin:
sub_347ef:
	// 113343 
#undef arg_0
#define arg_0 4
	// 113346 arg_0           = word ptr  4 ;~ 17C5:E5BF
cs=0x17c5;eip=0x00e5bf; 	X(PUSH(bp));	// 113348                  push    bp ;~ 17C5:E5BF
cs=0x17c5;eip=0x00e5c0; 	T(bp = sp;);	// 113349                  mov     bp, sp ;~ 17C5:E5C0
loc_347f2:
	// 6719 
cs=0x17c5;eip=0x00e5c2; 	T(si = 0x6342;);	// 113352                  mov     si, 6342h ;~ 17C5:E5C2
cs=0x17c5;eip=0x00e5c5; 	T(di = 0x6342;);	// 113353                  mov     di, 6342h ;~ 17C5:E5C5
cs=0x17c5;eip=0x00e5c8; 	J(CALL(sub_34861,0));	// 113354                  call    sub_34861 ;~ 17C5:E5C8
cs=0x17c5;eip=0x00e5cb; 	T(si = 0x6342;);	// 113355                  mov     si, 6342h ;~ 17C5:E5CB
cs=0x17c5;eip=0x00e5ce; 	T(di = 0x6342;);	// 113356                  mov     di, 6342h ;~ 17C5:E5CE
cs=0x17c5;eip=0x00e5d1; 	J(CALL(sub_34870,0));	// 113357                  call    sub_34870 ;~ 17C5:E5D1
cs=0x17c5;eip=0x00e5d4; 	J(CALL(sub_34fdc,0));	// 113358                  call    sub_34FDC ;~ 17C5:E5D4
cs=0x17c5;eip=0x00e5d7; 	T(OR(ax, ax));	// 113359                  or      ax, ax ;~ 17C5:E5D7
cs=0x17c5;eip=0x00e5d9; 	J(JZ(loc_34816));	// 113360                  jz      short loc_34816 ;~ 17C5:E5D9
cs=0x17c5;eip=0x00e5db; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 113361                  cmp     [bp+arg_0], 0 ;~ 17C5:E5DB
cs=0x17c5;eip=0x00e5df; 	J(JNZ(loc_34816));	// 113362                  jnz     short loc_34816 ;~ 17C5:E5DF
cs=0x17c5;eip=0x00e5e1; 	X(MOV(*(dw*)(raddr(ss,bp+arg_0)), 0x0FF));	// 113363                  mov     [bp+arg_0], 0FFh ;~ 17C5:E5E1
loc_34816:
	// 6720 
cs=0x17c5;eip=0x00e5e6; 	T(cx = 0x0F;);	// 113367                  mov     cx, 0Fh ;~ 17C5:E5E6
cs=0x17c5;eip=0x00e5e9; 	T(bx = 5;);	// 113368                  mov     bx, 5 ;~ 17C5:E5E9
loc_3481c:
	// 6721 
cs=0x17c5;eip=0x00e5ec; 	T(TEST(*(raddr(ds,bx+0x61B4)), 1));	// 113371                  test    byte ptr [bx+61B4h], 1 ;~ 17C5:E5EC
cs=0x17c5;eip=0x00e5f1; 	J(JZ(loc_34827));	// 113372                  jz      short loc_34827 ;~ 17C5:E5F1
cs=0x17c5;eip=0x00e5f3; 	T(ah = 0x3E;);	// 113373                  mov     ah, 3Eh ;~ 17C5:E5F3
cs=0x17c5;eip=0x00e5f5; 	S(_INT(0x21));	// 113374                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:E5F5
loc_34827:
	// 6722 
cs=0x17c5;eip=0x00e5f7; 	T(INC(bx));	// 113378                  inc     bx ;~ 17C5:E5F7
cs=0x17c5;eip=0x00e5f8; 	J(LOOP(loc_3481c));	// 113379                  loop    loc_3481C ;~ 17C5:E5F8
cs=0x17c5;eip=0x00e5fa; 	J(CALL(sub_34834,0));	// 113380                  call    sub_34834 ;~ 17C5:E5FA
cs=0x17c5;eip=0x00e5fd; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 113381                  mov     ax, [bp+arg_0] ;~ 17C5:E5FD
cs=0x17c5;eip=0x00e600; 	T(ah = 0x4C;);	// 113382                  mov     ah, 4Ch ;~ 17C5:E600
cs=0x17c5;eip=0x00e602; 	S(_INT(0x21));	// 113383                  int     21h             ; DOS - 2+ - QUIT WITH EXIT CODE (EXIT) ;~ 17C5:E602
sub_34834:
	// 113390 
cs=0x17c5;eip=0x00e604; 	T(cx = word_4ee16;);	// 113391                  mov     cx, ds:word_4EE16 ;~ 17C5:E604
cs=0x17c5;eip=0x00e608; 	J(JCXZ(loc_34841));	// 113392                  jcxz    short loc_34841 ;~ 17C5:E608
cs=0x17c5;eip=0x00e60a; 	T(bx = 2;);	// 113393                  mov     bx, 2 ;~ 17C5:E60A
cs=0x17c5;eip=0x00e60d; 	J(CALLF(__dispatch_call,*(dd*)(&unk_4ee14)));	// 113394                  call    dword ptr ds:unk_4EE14 ;~ 17C5:E60D
loc_34841:
	// 6723 
cs=0x17c5;eip=0x00e611; 	X(PUSH(ds));	// 113397                  push    ds ;~ 17C5:E611
cs=0x17c5;eip=0x00e612; 	T(LDS(dx, dword_4ec79));	// 113398                  lds     dx, ds:dword_4EC79 ;~ 17C5:E612
cs=0x17c5;eip=0x00e616; 	T(ax = 0x2500;);	// 113399                  mov     ax, 2500h ;~ 17C5:E616
cs=0x17c5;eip=0x00e619; 	S(_INT(0x21));	// 113400                  int     21h             ; DOS - SET INTERRUPT VECTOR ;~ 17C5:E619
cs=0x17c5;eip=0x00e61b; 	X(POP(ds));	// 113403                  pop     ds ;~ 17C5:E61B
cs=0x17c5;eip=0x00e61c; 	T(CMP(byte_4ecb6, 0));	// 113404                  cmp     ds:byte_4ECB6, 0 ;~ 17C5:E61C
cs=0x17c5;eip=0x00e621; 	J(JZ(locret_34860));	// 113405                  jz      short locret_34860 ;~ 17C5:E621
cs=0x17c5;eip=0x00e623; 	X(PUSH(ds));	// 113406                  push    ds ;~ 17C5:E623
cs=0x17c5;eip=0x00e624; 	T(al = byte_4ecb7;);	// 113407                  mov     al, ds:byte_4ECB7 ;~ 17C5:E624
cs=0x17c5;eip=0x00e627; 	T(LDS(dx, dword_4ecb8));	// 113408                  lds     dx, ds:dword_4ECB8 ;~ 17C5:E627
cs=0x17c5;eip=0x00e62b; 	T(ah = 0x25;);	// 113409                  mov     ah, 25h ;~ 17C5:E62B
cs=0x17c5;eip=0x00e62d; 	S(_INT(0x21));	// 113410                  int     21h             ; DOS - SET INTERRUPT VECTOR ;~ 17C5:E62D
cs=0x17c5;eip=0x00e62f; 	X(POP(ds));	// 113413                  pop     ds ;~ 17C5:E62F
locret_34860:
	// 6724 
cs=0x17c5;eip=0x00e630; 	J(RETN(0));	// 113416                  retn ;~ 17C5:E630

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_347f2: 	goto loc_347f2;
        case m2c::kloc_34816: 	goto loc_34816;
        case m2c::kloc_3481c: 	goto loc_3481c;
        case m2c::kloc_34827: 	goto loc_34827;
        case m2c::kloc_34841: 	goto loc_34841;
        case m2c::klocret_34860: 	goto locret_34860;
        case m2c::ksub_347ef: 	goto sub_347ef;
        case m2c::ksub_34834: 	goto sub_34834;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34861(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34861:
    _begin:
cs=0x17c5;eip=0x00e631; 	T(CMP(si, di));	// 113425                  cmp     si, di ;~ 17C5:E631
cs=0x17c5;eip=0x00e633; 	J(JNC(locret_3486f));	// 113426                  jnb     short locret_3486F ;~ 17C5:E633
cs=0x17c5;eip=0x00e635; 	T(DEC(di));	// 113427                  dec     di ;~ 17C5:E635
cs=0x17c5;eip=0x00e636; 	T(DEC(di));	// 113428                  dec     di ;~ 17C5:E636
cs=0x17c5;eip=0x00e637; 	T(MOV(cx, *(dw*)(raddr(ds,di))));	// 113429                  mov     cx, [di] ;~ 17C5:E637
cs=0x17c5;eip=0x00e639; 	J(JCXZ(sub_34861));	// 113430                  jcxz    short sub_34861 ;~ 17C5:E639
cs=0x17c5;eip=0x00e63b; 	J(CALL(__dispatch_call,cx));	// 113431                  call    cx ;~ 17C5:E63B
cs=0x17c5;eip=0x00e63d; 	J(JMP(sub_34861));	// 113432                  jmp     short sub_34861 ;~ 17C5:E63D
locret_3486f:
	// 6725 
cs=0x17c5;eip=0x00e63f; 	J(RETN(0));	// 113436                  retn ;~ 17C5:E63F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::klocret_3486f: 	goto locret_3486f;
        case m2c::ksub_34861: 	goto sub_34861;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34870(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34870:
    _begin:
cs=0x17c5;eip=0x00e640; 	T(CMP(si, di));	// 113445                  cmp     si, di ;~ 17C5:E640
cs=0x17c5;eip=0x00e642; 	J(JNC(locret_34882));	// 113446                  jnb     short locret_34882 ;~ 17C5:E642
cs=0x17c5;eip=0x00e644; 	T(SUB(di, 4));	// 113447                  sub     di, 4 ;~ 17C5:E644
cs=0x17c5;eip=0x00e647; 	T(MOV(ax, *(dw*)(raddr(ds,di))));	// 113448                  mov     ax, [di] ;~ 17C5:E647
cs=0x17c5;eip=0x00e649; 	T(OR(ax, *(dw*)(raddr(ds,di+2))));	// 113449                  or      ax, [di+2] ;~ 17C5:E649
cs=0x17c5;eip=0x00e64c; 	J(JZ(sub_34870));	// 113450                  jz      short sub_34870 ;~ 17C5:E64C
cs=0x17c5;eip=0x00e64e; 	J(CALLF(__dispatch_call,*(dd*)(raddr(ds,di))));	// 113451                  call    dword ptr [di] ;~ 17C5:E64E
cs=0x17c5;eip=0x00e650; 	J(JMP(sub_34870));	// 113452                  jmp     short sub_34870 ;~ 17C5:E650
locret_34882:
	// 6726 
cs=0x17c5;eip=0x00e652; 	J(RETN(0));	// 113456                  retn ;~ 17C5:E652

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::klocret_34882: 	goto locret_34882;
        case m2c::ksub_34870: 	goto sub_34870;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34884(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34884:
    _begin:
cs=0x17c5;eip=0x00e654; 	X(POP(cx));	// 113470                  pop     cx ;~ 17C5:E654
cs=0x17c5;eip=0x00e655; 	T(bx = sp;);	// 113471                  mov     bx, sp ;~ 17C5:E655
cs=0x17c5;eip=0x00e657; 	T(SUB(bx, ax));	// 113472                  sub     bx, ax ;~ 17C5:E657
cs=0x17c5;eip=0x00e659; 	J(JC(loc_34895));	// 113473                  jb      short loc_34895 ;~ 17C5:E659
cs=0x17c5;eip=0x00e65b; 	T(CMP(bx, word_4ecbc));	// 113474                  cmp     bx, ds:word_4ECBC ;~ 17C5:E65B
cs=0x17c5;eip=0x00e65f; 	J(JC(loc_34895));	// 113475                  jb      short loc_34895 ;~ 17C5:E65F
cs=0x17c5;eip=0x00e661; 	T(sp = bx;);	// 113476                  mov     sp, bx ;~ 17C5:E661
cs=0x17c5;eip=0x00e663; __disp=cx;
	J(return true;);	// 113477                  jmp     cx ;~ 17C5:E663
loc_34895:
	// 6727 
cs=0x17c5;eip=0x00e665; 	T(XOR(ax, ax));	// 113482                  xor     ax, ax ;~ 17C5:E665
cs=0x17c5;eip=0x00e667; 	J(return _group66(m2c::kloc_34705, _state););	// 113483                  jmp     loc_34705 ;~ 17C5:E667

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34895: 	goto loc_34895;
        case m2c::ksub_34884: 	goto sub_34884;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_3489a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_3489a:
    _begin:
#undef var_e
#define var_e -0x0E
	// 113494 var_E           = byte ptr -0Eh ;~ 17C5:E66A
#undef var_c
#define var_c -0x0C
	// 113495 var_C           = byte ptr -0Ch ;~ 17C5:E66A
#undef var_4
#define var_4 -4
	// 113496 var_4           = word ptr -4 ;~ 17C5:E66A
#undef var_2
#define var_2 -2
	// 113497 var_2           = word ptr -2 ;~ 17C5:E66A
#undef arg_0
#define arg_0 4
	// 113498 arg_0           = word ptr  4 ;~ 17C5:E66A
cs=0x17c5;eip=0x00e66a; 	X(PUSH(bp));	// 113500                  push    bp ;~ 17C5:E66A
cs=0x17c5;eip=0x00e66b; 	T(bp = sp;);	// 113501                  mov     bp, sp ;~ 17C5:E66B
cs=0x17c5;eip=0x00e66d; 	T(SUB(sp, 0x10));	// 113502                  sub     sp, 10h ;~ 17C5:E66D
cs=0x17c5;eip=0x00e670; 	X(PUSH(di));	// 113503                  push    di ;~ 17C5:E670
cs=0x17c5;eip=0x00e671; 	X(PUSH(si));	// 113504                  push    si ;~ 17C5:E671
cs=0x17c5;eip=0x00e672; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 113505                  mov     si, [bp+arg_0] ;~ 17C5:E672
cs=0x17c5;eip=0x00e675; 	T(di = 0x0FFFF;);	// 113506                  mov     di, 0FFFFh ;~ 17C5:E675
cs=0x17c5;eip=0x00e678; 	T(TEST(*(raddr(ds,si+6)), 0x83));	// 113507                  test    byte ptr [si+6], 83h ;~ 17C5:E678
cs=0x17c5;eip=0x00e67c; 	J(JNZ(loc_348b1));	// 113508                  jnz     short loc_348B1 ;~ 17C5:E67C
cs=0x17c5;eip=0x00e67e; 	J(JMP(loc_34948));	// 113509                  jmp     loc_34948 ;~ 17C5:E67E
loc_348b1:
	// 6728 
cs=0x17c5;eip=0x00e681; 	T(TEST(*(raddr(ds,si+6)), 0x40));	// 113513                  test    byte ptr [si+6], 40h ;~ 17C5:E681
cs=0x17c5;eip=0x00e685; 	J(JZ(loc_348ba));	// 113514                  jz      short loc_348BA ;~ 17C5:E685
cs=0x17c5;eip=0x00e687; 	J(JMP(loc_34948));	// 113515                  jmp     loc_34948 ;~ 17C5:E687
loc_348ba:
	// 6729 
cs=0x17c5;eip=0x00e68a; 	X(PUSH(si));	// 113519                  push    si ;~ 17C5:E68A
cs=0x17c5;eip=0x00e68b; 	J(CALL(sub_3528c,0));	// 113520                  call    sub_3528C ;~ 17C5:E68B
cs=0x17c5;eip=0x00e68e; 	T(ADD(sp, 2));	// 113521                  add     sp, 2 ;~ 17C5:E68E
cs=0x17c5;eip=0x00e691; 	T(di = ax;);	// 113522                  mov     di, ax ;~ 17C5:E691
cs=0x17c5;eip=0x00e693; 	T(bx = si;);	// 113523                  mov     bx, si ;~ 17C5:E693
cs=0x17c5;eip=0x00e695; 	T(SUB(bx, 0x61FE));	// 113524                  sub     bx, 61FEh ;~ 17C5:E695
cs=0x17c5;eip=0x00e699; 	T(cl = 3;);	// 113525                  mov     cl, 3 ;~ 17C5:E699
cs=0x17c5;eip=0x00e69b; 	T(SAR(bx, cl));	// 113526                  sar     bx, cl ;~ 17C5:E69B
cs=0x17c5;eip=0x00e69d; 	T(ax = bx;);	// 113527                  mov     ax, bx ;~ 17C5:E69D
cs=0x17c5;eip=0x00e69f; 	T(SHL(bx, 1));	// 113528                  shl     bx, 1 ;~ 17C5:E69F
cs=0x17c5;eip=0x00e6a1; 	T(ADD(bx, ax));	// 113529                  add     bx, ax ;~ 17C5:E6A1
cs=0x17c5;eip=0x00e6a3; 	T(SHL(bx, 1));	// 113530                  shl     bx, 1 ;~ 17C5:E6A3
cs=0x17c5;eip=0x00e6a5; 	T(MOV(ax, *(dw*)(raddr(ds,bx+0x62A2))));	// 113531                  mov     ax, [bx+62A2h] ;~ 17C5:E6A5
cs=0x17c5;eip=0x00e6a9; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 113532                  mov     [bp+var_4], ax ;~ 17C5:E6A9
cs=0x17c5;eip=0x00e6ac; 	X(PUSH(si));	// 113533                  push    si ;~ 17C5:E6AC
cs=0x17c5;eip=0x00e6ad; 	J(CALL(sub_35166,0));	// 113534                  call    sub_35166 ;~ 17C5:E6AD
cs=0x17c5;eip=0x00e6b0; 	T(ADD(sp, 2));	// 113535                  add     sp, 2 ;~ 17C5:E6B0
cs=0x17c5;eip=0x00e6b3; 	T(MOV(al, *(raddr(ds,si+7))));	// 113536                  mov     al, [si+7] ;~ 17C5:E6B3
cs=0x17c5;eip=0x00e6b6; 	T(CBW);	// 113537                  cbw ;~ 17C5:E6B6
cs=0x17c5;eip=0x00e6b7; 	X(PUSH(ax));	// 113538                  push    ax ;~ 17C5:E6B7
cs=0x17c5;eip=0x00e6b8; 	J(CALL(sub_35334,0));	// 113539                  call    sub_35334 ;~ 17C5:E6B8
cs=0x17c5;eip=0x00e6bb; 	T(ADD(sp, 2));	// 113540                  add     sp, 2 ;~ 17C5:E6BB
cs=0x17c5;eip=0x00e6be; 	T(OR(ax, ax));	// 113541                  or      ax, ax ;~ 17C5:E6BE
cs=0x17c5;eip=0x00e6c0; 	J(JL(loc_34945));	// 113542                  jl      short loc_34945 ;~ 17C5:E6C0
cs=0x17c5;eip=0x00e6c2; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 113543                  cmp     [bp+var_4], 0 ;~ 17C5:E6C2
cs=0x17c5;eip=0x00e6c6; 	J(JZ(loc_34948));	// 113544                  jz      short loc_34948 ;~ 17C5:E6C6
cs=0x17c5;eip=0x00e6c8; 	T(ax = 0x61DE;);	// 113545                  mov     ax, 61DEh ;~ 17C5:E6C8
cs=0x17c5;eip=0x00e6cb; 	X(PUSH(ax));	// 113546                  push    ax ;~ 17C5:E6CB
cs=0x17c5;eip=0x00e6cc; 	T(ax = bp+var_e);	// 113547                  lea     ax, [bp+var_E] ;~ 17C5:E6CC
cs=0x17c5;eip=0x00e6cf; 	X(PUSH(ax));	// 113548                  push    ax ;~ 17C5:E6CF
cs=0x17c5;eip=0x00e6d0; 	J(CALL(sub_34c1c,0));	// 113549                  call    sub_34C1C ;~ 17C5:E6D0
cs=0x17c5;eip=0x00e6d3; 	T(ADD(sp, 4));	// 113550                  add     sp, 4 ;~ 17C5:E6D3
cs=0x17c5;eip=0x00e6d6; 	T(ax = bp+var_c);	// 113551                  lea     ax, [bp+var_C] ;~ 17C5:E6D6
cs=0x17c5;eip=0x00e6d9; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 113552                  mov     [bp+var_2], ax ;~ 17C5:E6D9
cs=0x17c5;eip=0x00e6dc; 	T(bx = ax;);	// 113553                  mov     bx, ax ;~ 17C5:E6DC
cs=0x17c5;eip=0x00e6de; 	T(CMP(*(raddr(ds,bx-2)), 0x5C));	// 113554                  cmp     byte ptr [bx-2], 5Ch ; '\' ;~ 17C5:E6DE
cs=0x17c5;eip=0x00e6e2; 	J(JZ(loc_34924));	// 113555                  jz      short loc_34924 ;~ 17C5:E6E2
cs=0x17c5;eip=0x00e6e4; 	T(ax = 0x61E0;);	// 113556                  mov     ax, 61E0h ;~ 17C5:E6E4
cs=0x17c5;eip=0x00e6e7; 	X(PUSH(ax));	// 113557                  push    ax ;~ 17C5:E6E7
cs=0x17c5;eip=0x00e6e8; 	T(ax = bp+var_e);	// 113558                  lea     ax, [bp+var_E] ;~ 17C5:E6E8
cs=0x17c5;eip=0x00e6eb; 	X(PUSH(ax));	// 113559                  push    ax ;~ 17C5:E6EB
cs=0x17c5;eip=0x00e6ec; 	J(CALL(sub_34bdc,0));	// 113560                  call    sub_34BDC ;~ 17C5:E6EC
cs=0x17c5;eip=0x00e6ef; 	T(ADD(sp, 4));	// 113561                  add     sp, 4 ;~ 17C5:E6EF
cs=0x17c5;eip=0x00e6f2; 	J(JMP(loc_34927));	// 113562                  jmp     short loc_34927 ;~ 17C5:E6F2
loc_34924:
	// 6730 
cs=0x17c5;eip=0x00e6f4; 	X(DEC(*(dw*)(raddr(ss,bp+var_2))));	// 113566                  dec     [bp+var_2] ;~ 17C5:E6F4
loc_34927:
	// 6731 
cs=0x17c5;eip=0x00e6f7; 	T(ax = 0x0A;);	// 113569                  mov     ax, 0Ah ;~ 17C5:E6F7
cs=0x17c5;eip=0x00e6fa; 	X(PUSH(ax));	// 113570                  push    ax ;~ 17C5:E6FA
cs=0x17c5;eip=0x00e6fb; 	X(PUSH(*(dw*)(raddr(ss,bp+var_2))));	// 113571                  push    [bp+var_2] ;~ 17C5:E6FB
cs=0x17c5;eip=0x00e6fe; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 113572                  push    [bp+var_4] ;~ 17C5:E6FE
cs=0x17c5;eip=0x00e701; 	J(CALL(sub_34c6a,0));	// 113573                  call    sub_34C6A ;~ 17C5:E701
cs=0x17c5;eip=0x00e704; 	T(ADD(sp, 6));	// 113574                  add     sp, 6 ;~ 17C5:E704
cs=0x17c5;eip=0x00e707; 	T(ax = bp+var_e);	// 113575                  lea     ax, [bp+var_E] ;~ 17C5:E707
cs=0x17c5;eip=0x00e70a; 	X(PUSH(ax));	// 113576                  push    ax ;~ 17C5:E70A
cs=0x17c5;eip=0x00e70b; 	J(CALL(sub_35492,0));	// 113577                  call    sub_35492 ;~ 17C5:E70B
cs=0x17c5;eip=0x00e70e; 	T(ADD(sp, 2));	// 113578                  add     sp, 2 ;~ 17C5:E70E
cs=0x17c5;eip=0x00e711; 	T(OR(ax, ax));	// 113579                  or      ax, ax ;~ 17C5:E711
cs=0x17c5;eip=0x00e713; 	J(JZ(loc_34948));	// 113580                  jz      short loc_34948 ;~ 17C5:E713
loc_34945:
	// 6732 
cs=0x17c5;eip=0x00e715; 	T(di = 0x0FFFF;);	// 113583                  mov     di, 0FFFFh ;~ 17C5:E715
loc_34948:
	// 6733 
cs=0x17c5;eip=0x00e718; 	X(MOV(*(raddr(ds,si+6)), 0));	// 113587                  mov     byte ptr [si+6], 0 ;~ 17C5:E718
cs=0x17c5;eip=0x00e71c; 	T(ax = di;);	// 113588                  mov     ax, di ;~ 17C5:E71C
cs=0x17c5;eip=0x00e71e; 	X(POP(si));	// 113589                  pop     si ;~ 17C5:E71E
cs=0x17c5;eip=0x00e71f; 	X(POP(di));	// 113590                  pop     di ;~ 17C5:E71F
cs=0x17c5;eip=0x00e720; 	T(sp = bp;);	// 113591                  mov     sp, bp ;~ 17C5:E720
cs=0x17c5;eip=0x00e722; 	X(POP(bp));	// 113592                  pop     bp ;~ 17C5:E722
cs=0x17c5;eip=0x00e723; 	J(RETN(0));	// 113593                  retn ;~ 17C5:E723

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_348b1: 	goto loc_348b1;
        case m2c::kloc_348ba: 	goto loc_348ba;
        case m2c::kloc_34924: 	goto loc_34924;
        case m2c::kloc_34927: 	goto loc_34927;
        case m2c::kloc_34945: 	goto loc_34945;
        case m2c::kloc_34948: 	goto loc_34948;
        case m2c::ksub_3489a: 	goto sub_3489a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34954(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34954:
    _begin:
#undef arg_0
#define arg_0 4
	// 113604 arg_0           = word ptr  4 ;~ 17C5:E724
#undef arg_2
#define arg_2 6
	// 113605 arg_2           = word ptr  6 ;~ 17C5:E724
cs=0x17c5;eip=0x00e724; 	X(PUSH(bp));	// 113607                  push    bp ;~ 17C5:E724
cs=0x17c5;eip=0x00e725; 	T(bp = sp;);	// 113608                  mov     bp, sp ;~ 17C5:E725
cs=0x17c5;eip=0x00e727; 	T(SUB(sp, 2));	// 113609                  sub     sp, 2 ;~ 17C5:E727
cs=0x17c5;eip=0x00e72a; 	X(PUSH(si));	// 113610                  push    si ;~ 17C5:E72A
cs=0x17c5;eip=0x00e72b; 	J(CALL(sub_352fa,0));	// 113611                  call    sub_352FA ;~ 17C5:E72B
cs=0x17c5;eip=0x00e72e; 	T(si = ax;);	// 113612                  mov     si, ax ;~ 17C5:E72E
cs=0x17c5;eip=0x00e730; 	T(OR(si, si));	// 113613                  or      si, si ;~ 17C5:E730
cs=0x17c5;eip=0x00e732; 	J(JZ(loc_34974));	// 113614                  jz      short loc_34974 ;~ 17C5:E732
cs=0x17c5;eip=0x00e734; 	X(PUSH(si));	// 113615                  push    si ;~ 17C5:E734
cs=0x17c5;eip=0x00e735; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_2))));	// 113616                  push    [bp+arg_2] ;~ 17C5:E735
cs=0x17c5;eip=0x00e738; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 113617                  push    [bp+arg_0] ;~ 17C5:E738
cs=0x17c5;eip=0x00e73b; 	J(CALL(sub_35194,0));	// 113618                  call    sub_35194 ;~ 17C5:E73B
cs=0x17c5;eip=0x00e73e; 	T(ADD(sp, 6));	// 113619                  add     sp, 6 ;~ 17C5:E73E
cs=0x17c5;eip=0x00e741; 	J(JMP(loc_34976));	// 113620                  jmp     short loc_34976 ;~ 17C5:E741
loc_34974:
	// 6734 
cs=0x17c5;eip=0x00e744; 	T(SUB(ax, ax));	// 113625                  sub     ax, ax ;~ 17C5:E744
loc_34976:
	// 6735 
cs=0x17c5;eip=0x00e746; 	X(POP(si));	// 113628                  pop     si ;~ 17C5:E746
cs=0x17c5;eip=0x00e747; 	T(sp = bp;);	// 113629                  mov     sp, bp ;~ 17C5:E747
cs=0x17c5;eip=0x00e749; 	X(POP(bp));	// 113630                  pop     bp ;~ 17C5:E749
cs=0x17c5;eip=0x00e74a; 	J(RETN(0));	// 113631                  retn ;~ 17C5:E74A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34974: 	goto loc_34974;
        case m2c::kloc_34976: 	goto loc_34976;
        case m2c::ksub_34954: 	goto sub_34954;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_3497c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_3497c:
    _begin:
#undef var_a
#define var_a -0x0A
	// 113644 var_A           = word ptr -0Ah ;~ 17C5:E74C
#undef var_6
#define var_6 -6
	// 113645 var_6           = word ptr -6 ;~ 17C5:E74C
#undef var_4
#define var_4 -4
	// 113646 var_4           = word ptr -4 ;~ 17C5:E74C
#undef var_2
#define var_2 -2
	// 113647 var_2           = word ptr -2 ;~ 17C5:E74C
#undef arg_0
#define arg_0 4
	// 113648 arg_0           = word ptr  4 ;~ 17C5:E74C
#undef arg_2
#define arg_2 6
	// 113649 arg_2           = word ptr  6 ;~ 17C5:E74C
#undef arg_4
#define arg_4 8
	// 113650 arg_4           = word ptr  8 ;~ 17C5:E74C
#undef arg_6
#define arg_6 0x0A
	// 113651 arg_6           = word ptr  0Ah ;~ 17C5:E74C
cs=0x17c5;eip=0x00e74c; 	X(PUSH(bp));	// 113653                  push    bp ;~ 17C5:E74C
cs=0x17c5;eip=0x00e74d; 	T(bp = sp;);	// 113654                  mov     bp, sp ;~ 17C5:E74D
cs=0x17c5;eip=0x00e74f; 	T(SUB(sp, 0x0A));	// 113655                  sub     sp, 0Ah ;~ 17C5:E74F
cs=0x17c5;eip=0x00e752; 	X(PUSH(di));	// 113656                  push    di ;~ 17C5:E752
cs=0x17c5;eip=0x00e753; 	X(PUSH(si));	// 113657                  push    si ;~ 17C5:E753
cs=0x17c5;eip=0x00e754; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_6))));	// 113658                  mov     si, [bp+arg_6] ;~ 17C5:E754
cs=0x17c5;eip=0x00e757; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 113659                  mov     ax, [bp+arg_2] ;~ 17C5:E757
cs=0x17c5;eip=0x00e75a; 	X(MUL1_2(*(dw*)(raddr(ss,bp+arg_4))));	// 113660                  mul     [bp+arg_4] ;~ 17C5:E75A
cs=0x17c5;eip=0x00e75d; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 113661                  mov     [bp+var_2], ax ;~ 17C5:E75D
cs=0x17c5;eip=0x00e760; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 113662                  mov     [bp+var_4], ax ;~ 17C5:E760
cs=0x17c5;eip=0x00e763; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 113663                  cmp     [bp+arg_2], 0 ;~ 17C5:E763
cs=0x17c5;eip=0x00e767; 	J(JZ(loc_3499f));	// 113664                  jz      short loc_3499F ;~ 17C5:E767
cs=0x17c5;eip=0x00e769; 	T(CMP(*(dw*)(raddr(ss,bp+arg_4)), 0));	// 113665                  cmp     [bp+arg_4], 0 ;~ 17C5:E769
cs=0x17c5;eip=0x00e76d; 	J(JNZ(loc_349a6));	// 113666                  jnz     short loc_349A6 ;~ 17C5:E76D
loc_3499f:
	// 6736 
cs=0x17c5;eip=0x00e76f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 113669                  mov     ax, [bp+var_4] ;~ 17C5:E76F
cs=0x17c5;eip=0x00e772; 	J(JMP(loc_34b5c));	// 113670                  jmp     loc_34B5C ;~ 17C5:E772
loc_349a6:
	// 6737 
cs=0x17c5;eip=0x00e776; 	T(TEST(*(raddr(ds,si+6)), 0x0C));	// 113675                  test    byte ptr [si+6], 0Ch ;~ 17C5:E776
cs=0x17c5;eip=0x00e77a; 	J(JZ(loc_349af));	// 113676                  jz      short loc_349AF ;~ 17C5:E77A
cs=0x17c5;eip=0x00e77c; 	J(JMP(loc_34a4d));	// 113677                  jmp     loc_34A4D ;~ 17C5:E77C
loc_349af:
	// 6738 
cs=0x17c5;eip=0x00e77f; 	T(bx = si;);	// 113681                  mov     bx, si ;~ 17C5:E77F
cs=0x17c5;eip=0x00e781; 	T(SUB(bx, 0x61FE));	// 113682                  sub     bx, 61FEh ;~ 17C5:E781
cs=0x17c5;eip=0x00e785; 	T(cl = 3;);	// 113683                  mov     cl, 3 ;~ 17C5:E785
cs=0x17c5;eip=0x00e787; 	T(SAR(bx, cl));	// 113684                  sar     bx, cl ;~ 17C5:E787
cs=0x17c5;eip=0x00e789; 	T(ax = bx;);	// 113685                  mov     ax, bx ;~ 17C5:E789
cs=0x17c5;eip=0x00e78b; 	T(SHL(bx, 1));	// 113686                  shl     bx, 1 ;~ 17C5:E78B
cs=0x17c5;eip=0x00e78d; 	T(ADD(bx, ax));	// 113687                  add     bx, ax ;~ 17C5:E78D
cs=0x17c5;eip=0x00e78f; 	T(SHL(bx, 1));	// 113688                  shl     bx, 1 ;~ 17C5:E78F
cs=0x17c5;eip=0x00e791; 	T(TEST(*(raddr(ds,bx+0x629E)), 1));	// 113689                  test    byte ptr [bx+629Eh], 1 ;~ 17C5:E791
cs=0x17c5;eip=0x00e796; 	J(JZ(loc_349cb));	// 113690                  jz      short loc_349CB ;~ 17C5:E796
cs=0x17c5;eip=0x00e798; 	J(JMP(loc_34a4d));	// 113691                  jmp     loc_34A4D ;~ 17C5:E798
loc_349cb:
	// 6739 
cs=0x17c5;eip=0x00e79b; 	T(MOV(al, *(raddr(ds,si+7))));	// 113695                  mov     al, [si+7] ;~ 17C5:E79B
cs=0x17c5;eip=0x00e79e; 	T(CBW);	// 113696                  cbw ;~ 17C5:E79E
cs=0x17c5;eip=0x00e79f; 	T(bx = ax;);	// 113697                  mov     bx, ax ;~ 17C5:E79F
cs=0x17c5;eip=0x00e7a1; 	T(TEST(*(raddr(ds,bx+0x61B4)), 0x80));	// 113698                  test    byte ptr [bx+61B4h], 80h ;~ 17C5:E7A1
cs=0x17c5;eip=0x00e7a6; 	J(JNZ(loc_34a1e));	// 113699                  jnz     short loc_34A1E ;~ 17C5:E7A6
cs=0x17c5;eip=0x00e7a8; 	T(TEST(*(dw*)(raddr(ss,bp+var_4)), 0x1FF));	// 113700                  test    [bp+var_4], 1FFh ;~ 17C5:E7A8
cs=0x17c5;eip=0x00e7ad; 	J(JNZ(loc_34a1e));	// 113701                  jnz     short loc_34A1E ;~ 17C5:E7AD
cs=0x17c5;eip=0x00e7af; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 113702                  cmp     [bp+var_4], 0 ;~ 17C5:E7AF
cs=0x17c5;eip=0x00e7b3; 	J(JNZ(loc_349e8));	// 113703                  jnz     short loc_349E8 ;~ 17C5:E7B3
cs=0x17c5;eip=0x00e7b5; 	J(JMP(loc_34aae));	// 113704                  jmp     loc_34AAE ;~ 17C5:E7B5
loc_349e8:
	// 6740 
cs=0x17c5;eip=0x00e7b8; 	T(CBW);	// 113708                  cbw ;~ 17C5:E7B8
cs=0x17c5;eip=0x00e7b9; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 113709                  mov     [bp+var_A], ax ;~ 17C5:E7B9
loc_349ec:
	// 6741 
cs=0x17c5;eip=0x00e7bc; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 113712                  push    [bp+var_4] ;~ 17C5:E7BC
cs=0x17c5;eip=0x00e7bf; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 113713                  push    [bp+arg_0] ;~ 17C5:E7BF
cs=0x17c5;eip=0x00e7c2; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 113714                  push    [bp+var_A] ;~ 17C5:E7C2
cs=0x17c5;eip=0x00e7c5; 	J(CALL(sub_35354,0));	// 113715                  call    sub_35354 ;~ 17C5:E7C5
cs=0x17c5;eip=0x00e7c8; 	T(ADD(sp, 6));	// 113716                  add     sp, 6 ;~ 17C5:E7C8
cs=0x17c5;eip=0x00e7cb; 	T(di = ax;);	// 113717                  mov     di, ax ;~ 17C5:E7CB
cs=0x17c5;eip=0x00e7cd; 	T(OR(di, di));	// 113718                  or      di, di ;~ 17C5:E7CD
cs=0x17c5;eip=0x00e7cf; 	J(JNZ(loc_34a04));	// 113719                  jnz     short loc_34A04 ;~ 17C5:E7CF
cs=0x17c5;eip=0x00e7d1; 	J(JMP(loc_34b3d));	// 113720                  jmp     loc_34B3D ;~ 17C5:E7D1
loc_34a04:
	// 6742 
cs=0x17c5;eip=0x00e7d4; 	T(CMP(di, 0x0FFFF));	// 113724                  cmp     di, 0FFFFh ;~ 17C5:E7D4
cs=0x17c5;eip=0x00e7d7; 	J(JNZ(loc_34a0c));	// 113725                  jnz     short loc_34A0C ;~ 17C5:E7D7
cs=0x17c5;eip=0x00e7d9; 	J(JMP(loc_34b3d));	// 113726                  jmp     loc_34B3D ;~ 17C5:E7D9
loc_34a0c:
	// 6743 
cs=0x17c5;eip=0x00e7dc; 	X(SUB(*(dw*)(raddr(ss,bp+var_4)), di));	// 113730                  sub     [bp+var_4], di ;~ 17C5:E7DC
cs=0x17c5;eip=0x00e7df; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), di));	// 113731                  add     [bp+arg_0], di ;~ 17C5:E7DF
cs=0x17c5;eip=0x00e7e2; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 113732                  cmp     [bp+var_4], 0 ;~ 17C5:E7E2
cs=0x17c5;eip=0x00e7e6; 	J(JNZ(loc_34a1b));	// 113733                  jnz     short loc_34A1B ;~ 17C5:E7E6
cs=0x17c5;eip=0x00e7e8; 	J(JMP(loc_34aae));	// 113734                  jmp     loc_34AAE ;~ 17C5:E7E8
loc_34a1b:
	// 6744 
cs=0x17c5;eip=0x00e7eb; 	J(JMP(loc_349ec));	// 113738                  jmp     short loc_349EC ;~ 17C5:E7EB
loc_34a1e:
	// 6745 
cs=0x17c5;eip=0x00e7ee; 	X(DEC(*(dw*)(raddr(ds,si+2))));	// 113744                  dec     word ptr [si+2] ;~ 17C5:E7EE
cs=0x17c5;eip=0x00e7f1; 	J(JS(loc_34a2e));	// 113745                  js      short loc_34A2E ;~ 17C5:E7F1
cs=0x17c5;eip=0x00e7f3; 	T(MOV(bx, *(dw*)(raddr(ds,si))));	// 113746                  mov     bx, [si] ;~ 17C5:E7F3
cs=0x17c5;eip=0x00e7f5; 	X(INC(*(dw*)(raddr(ds,si))));	// 113747                  inc     word ptr [si] ;~ 17C5:E7F5
cs=0x17c5;eip=0x00e7f7; 	T(MOV(al, *(raddr(ds,bx))));	// 113748                  mov     al, [bx] ;~ 17C5:E7F7
cs=0x17c5;eip=0x00e7f9; 	T(SUB(ah, ah));	// 113749                  sub     ah, ah ;~ 17C5:E7F9
cs=0x17c5;eip=0x00e7fb; 	J(JMP(loc_34a35));	// 113750                  jmp     short loc_34A35 ;~ 17C5:E7FB
loc_34a2e:
	// 6746 
cs=0x17c5;eip=0x00e7fe; 	X(PUSH(si));	// 113755                  push    si ;~ 17C5:E7FE
cs=0x17c5;eip=0x00e7ff; 	J(CALL(sub_350a6,0));	// 113756                  call    sub_350A6 ;~ 17C5:E7FF
cs=0x17c5;eip=0x00e802; 	T(ADD(sp, 2));	// 113757                  add     sp, 2 ;~ 17C5:E802
loc_34a35:
	// 6747 
cs=0x17c5;eip=0x00e805; 	T(di = ax;);	// 113760                  mov     di, ax ;~ 17C5:E805
cs=0x17c5;eip=0x00e807; 	T(INC(ax));	// 113761                  inc     ax ;~ 17C5:E807
cs=0x17c5;eip=0x00e808; 	J(JNZ(loc_34a40));	// 113762                  jnz     short loc_34A40 ;~ 17C5:E808
cs=0x17c5;eip=0x00e80a; 	T(SUB(ax, ax));	// 113763                  sub     ax, ax ;~ 17C5:E80A
cs=0x17c5;eip=0x00e80c; 	J(JMP(loc_34b5c));	// 113764                  jmp     loc_34B5C ;~ 17C5:E80C
loc_34a40:
	// 6748 
cs=0x17c5;eip=0x00e810; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 113769                  mov     bx, [bp+arg_0] ;~ 17C5:E810
cs=0x17c5;eip=0x00e813; 	X(INC(*(dw*)(raddr(ss,bp+arg_0))));	// 113770                  inc     [bp+arg_0] ;~ 17C5:E813
cs=0x17c5;eip=0x00e816; 	T(ax = di;);	// 113771                  mov     ax, di ;~ 17C5:E816
cs=0x17c5;eip=0x00e818; 	X(MOV(*(raddr(ds,bx)), al));	// 113772                  mov     [bx], al ;~ 17C5:E818
cs=0x17c5;eip=0x00e81a; 	X(DEC(*(dw*)(raddr(ss,bp+var_4))));	// 113773                  dec     [bp+var_4] ;~ 17C5:E81A
loc_34a4d:
	// 6749 
cs=0x17c5;eip=0x00e81d; 	T(TEST(*(raddr(ds,si+6)), 8));	// 113777                  test    byte ptr [si+6], 8 ;~ 17C5:E81D
cs=0x17c5;eip=0x00e821; 	J(JZ(loc_34a56));	// 113778                  jz      short loc_34A56 ;~ 17C5:E821
cs=0x17c5;eip=0x00e823; 	J(JMP(loc_34add));	// 113779                  jmp     loc_34ADD ;~ 17C5:E823
loc_34a56:
	// 6750 
cs=0x17c5;eip=0x00e826; 	T(bx = si;);	// 113783                  mov     bx, si ;~ 17C5:E826
cs=0x17c5;eip=0x00e828; 	T(SUB(bx, 0x61FE));	// 113784                  sub     bx, 61FEh ;~ 17C5:E828
cs=0x17c5;eip=0x00e82c; 	T(cl = 3;);	// 113785                  mov     cl, 3 ;~ 17C5:E82C
cs=0x17c5;eip=0x00e82e; 	T(SAR(bx, cl));	// 113786                  sar     bx, cl ;~ 17C5:E82E
cs=0x17c5;eip=0x00e830; 	T(ax = bx;);	// 113787                  mov     ax, bx ;~ 17C5:E830
cs=0x17c5;eip=0x00e832; 	T(SHL(bx, 1));	// 113788                  shl     bx, 1 ;~ 17C5:E832
cs=0x17c5;eip=0x00e834; 	T(ADD(bx, ax));	// 113789                  add     bx, ax ;~ 17C5:E834
cs=0x17c5;eip=0x00e836; 	T(SHL(bx, 1));	// 113790                  shl     bx, 1 ;~ 17C5:E836
cs=0x17c5;eip=0x00e838; 	T(TEST(*(raddr(ds,bx+0x629E)), 1));	// 113791                  test    byte ptr [bx+629Eh], 1 ;~ 17C5:E838
cs=0x17c5;eip=0x00e83d; 	J(JNZ(loc_34a72));	// 113792                  jnz     short loc_34A72 ;~ 17C5:E83D
cs=0x17c5;eip=0x00e83f; 	J(JMP(loc_34b16));	// 113793                  jmp     loc_34B16 ;~ 17C5:E83F
loc_34a72:
	// 6751 
cs=0x17c5;eip=0x00e842; 	J(JMP(loc_34add));	// 113797                  jmp     short loc_34ADD ;~ 17C5:E842
loc_34a74:
	// 6752 
cs=0x17c5;eip=0x00e844; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0x200));	// 113801                  cmp     [bp+var_4], 200h ;~ 17C5:E844
cs=0x17c5;eip=0x00e849; 	J(JC(loc_34ac4));	// 113802                  jb      short loc_34AC4 ;~ 17C5:E849
cs=0x17c5;eip=0x00e84b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_4))));	// 113803                  mov     ax, [bp+var_4] ;~ 17C5:E84B
cs=0x17c5;eip=0x00e84e; 	T(cl = 9;);	// 113804                  mov     cl, 9 ;~ 17C5:E84E
cs=0x17c5;eip=0x00e850; 	T(SHR(ax, cl));	// 113805                  shr     ax, cl ;~ 17C5:E850
cs=0x17c5;eip=0x00e852; 	T(SHL(ax, cl));	// 113806                  shl     ax, cl ;~ 17C5:E852
cs=0x17c5;eip=0x00e854; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 113807                  mov     [bp+var_6], ax ;~ 17C5:E854
cs=0x17c5;eip=0x00e857; 	X(PUSH(ax));	// 113808                  push    ax ;~ 17C5:E857
cs=0x17c5;eip=0x00e858; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 113809                  push    [bp+arg_0] ;~ 17C5:E858
cs=0x17c5;eip=0x00e85b; 	T(MOV(al, *(raddr(ds,si+7))));	// 113810                  mov     al, [si+7] ;~ 17C5:E85B
cs=0x17c5;eip=0x00e85e; 	T(CBW);	// 113811                  cbw ;~ 17C5:E85E
cs=0x17c5;eip=0x00e85f; 	X(PUSH(ax));	// 113812                  push    ax ;~ 17C5:E85F
cs=0x17c5;eip=0x00e860; 	J(CALL(sub_35354,0));	// 113813                  call    sub_35354 ;~ 17C5:E860
cs=0x17c5;eip=0x00e863; 	T(ADD(sp, 6));	// 113814                  add     sp, 6 ;~ 17C5:E863
cs=0x17c5;eip=0x00e866; 	T(di = ax;);	// 113815                  mov     di, ax ;~ 17C5:E866
cs=0x17c5;eip=0x00e868; 	T(OR(di, di));	// 113816                  or      di, di ;~ 17C5:E868
cs=0x17c5;eip=0x00e86a; 	J(JZ(loc_34aa1));	// 113817                  jz      short loc_34AA1 ;~ 17C5:E86A
cs=0x17c5;eip=0x00e86c; 	T(CMP(di, 0x0FFFF));	// 113818                  cmp     di, 0FFFFh ;~ 17C5:E86C
cs=0x17c5;eip=0x00e86f; 	J(JNZ(loc_34abc));	// 113819                  jnz     short loc_34ABC ;~ 17C5:E86F
loc_34aa1:
	// 6753 
cs=0x17c5;eip=0x00e871; 	T(CMP(di, 0x0FFFF));	// 113822                  cmp     di, 0FFFFh ;~ 17C5:E871
cs=0x17c5;eip=0x00e874; 	J(JNZ(loc_34aa9));	// 113823                  jnz     short loc_34AA9 ;~ 17C5:E874
cs=0x17c5;eip=0x00e876; 	J(JMP(loc_34b45));	// 113824                  jmp     loc_34B45 ;~ 17C5:E876
loc_34aa9:
	// 6754 
cs=0x17c5;eip=0x00e879; 	T(al = 0x10;);	// 113829                  mov     al, 10h ;~ 17C5:E879
loc_34aab:
	// 6755 
cs=0x17c5;eip=0x00e87b; 	X(OR(*(raddr(ds,si+6)), al));	// 113832                  or      [si+6], al ;~ 17C5:E87B
loc_34aae:
	// 6756 
cs=0x17c5;eip=0x00e87e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 113836                  mov     ax, [bp+var_2] ;~ 17C5:E87E
cs=0x17c5;eip=0x00e881; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_4))));	// 113837                  sub     ax, [bp+var_4] ;~ 17C5:E881
cs=0x17c5;eip=0x00e884; 	T(SUB(dx, dx));	// 113838                  sub     dx, dx ;~ 17C5:E884
cs=0x17c5;eip=0x00e886; 	X(DIV2(*(dw*)(raddr(ss,bp+arg_2))));	// 113839                  div     [bp+arg_2] ;~ 17C5:E886
cs=0x17c5;eip=0x00e889; 	J(JMP(loc_34b5c));	// 113840                  jmp     loc_34B5C ;~ 17C5:E889
loc_34abc:
	// 6757 
cs=0x17c5;eip=0x00e88c; 	X(SUB(*(dw*)(raddr(ss,bp+var_4)), di));	// 113844                  sub     [bp+var_4], di ;~ 17C5:E88C
cs=0x17c5;eip=0x00e88f; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), di));	// 113845                  add     [bp+arg_0], di ;~ 17C5:E88F
cs=0x17c5;eip=0x00e892; 	J(JMP(loc_34add));	// 113846                  jmp     short loc_34ADD ;~ 17C5:E892
loc_34ac4:
	// 6758 
cs=0x17c5;eip=0x00e894; 	X(PUSH(si));	// 113850                  push    si ;~ 17C5:E894
cs=0x17c5;eip=0x00e895; 	J(CALL(sub_350a6,0));	// 113851                  call    sub_350A6 ;~ 17C5:E895
cs=0x17c5;eip=0x00e898; 	T(ADD(sp, 2));	// 113852                  add     sp, 2 ;~ 17C5:E898
cs=0x17c5;eip=0x00e89b; 	T(di = ax;);	// 113853                  mov     di, ax ;~ 17C5:E89B
cs=0x17c5;eip=0x00e89d; 	T(INC(ax));	// 113854                  inc     ax ;~ 17C5:E89D
cs=0x17c5;eip=0x00e89e; 	J(JZ(loc_34aae));	// 113855                  jz      short loc_34AAE ;~ 17C5:E89E
cs=0x17c5;eip=0x00e8a0; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 113856                  mov     bx, [bp+arg_0] ;~ 17C5:E8A0
cs=0x17c5;eip=0x00e8a3; 	T(ax = di;);	// 113857                  mov     ax, di ;~ 17C5:E8A3
cs=0x17c5;eip=0x00e8a5; 	X(MOV(*(raddr(ds,bx)), al));	// 113858                  mov     [bx], al ;~ 17C5:E8A5
cs=0x17c5;eip=0x00e8a7; 	X(INC(*(dw*)(raddr(ss,bp+arg_0))));	// 113859                  inc     [bp+arg_0] ;~ 17C5:E8A7
cs=0x17c5;eip=0x00e8aa; 	X(DEC(*(dw*)(raddr(ss,bp+var_4))));	// 113860                  dec     [bp+var_4] ;~ 17C5:E8AA
loc_34add:
	// 6759 
cs=0x17c5;eip=0x00e8ad; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 113864                  cmp     [bp+var_4], 0 ;~ 17C5:E8AD
cs=0x17c5;eip=0x00e8b1; 	J(JZ(loc_34aae));	// 113865                  jz      short loc_34AAE ;~ 17C5:E8B1
cs=0x17c5;eip=0x00e8b3; 	T(CMP(*(dw*)(raddr(ds,si+2)), 0));	// 113866                  cmp     word ptr [si+2], 0 ;~ 17C5:E8B3
cs=0x17c5;eip=0x00e8b7; 	J(JZ(loc_34a74));	// 113867                  jz      short loc_34A74 ;~ 17C5:E8B7
cs=0x17c5;eip=0x00e8b9; 	T(MOV(ax, *(dw*)(raddr(ds,si+2))));	// 113868                  mov     ax, [si+2] ;~ 17C5:E8B9
cs=0x17c5;eip=0x00e8bc; 	T(SUB(ax, *(dw*)(raddr(ss,bp+var_4))));	// 113869                  sub     ax, [bp+var_4] ;~ 17C5:E8BC
cs=0x17c5;eip=0x00e8bf; 	T(SBB(cx, cx));	// 113870                  sbb     cx, cx ;~ 17C5:E8BF
cs=0x17c5;eip=0x00e8c1; 	T(AND(ax, cx));	// 113871                  and     ax, cx ;~ 17C5:E8C1
cs=0x17c5;eip=0x00e8c3; 	T(ADD(ax, *(dw*)(raddr(ss,bp+var_4))));	// 113872                  add     ax, [bp+var_4] ;~ 17C5:E8C3
cs=0x17c5;eip=0x00e8c6; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 113873                  mov     [bp+var_6], ax ;~ 17C5:E8C6
cs=0x17c5;eip=0x00e8c9; 	X(PUSH(ax));	// 113874                  push    ax ;~ 17C5:E8C9
cs=0x17c5;eip=0x00e8ca; 	X(PUSH(*(dw*)(raddr(ds,si))));	// 113875                  push    word ptr [si] ;~ 17C5:E8CA
cs=0x17c5;eip=0x00e8cc; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 113876                  push    [bp+arg_0] ;~ 17C5:E8CC
cs=0x17c5;eip=0x00e8cf; 	J(CALL(sub_34d94,0));	// 113877                  call    sub_34D94 ;~ 17C5:E8CF
cs=0x17c5;eip=0x00e8d2; 	T(ADD(sp, 6));	// 113878                  add     sp, 6 ;~ 17C5:E8D2
cs=0x17c5;eip=0x00e8d5; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_6))));	// 113879                  mov     ax, [bp+var_6] ;~ 17C5:E8D5
cs=0x17c5;eip=0x00e8d8; 	X(ADD(*(dw*)(raddr(ds,si)), ax));	// 113880                  add     [si], ax ;~ 17C5:E8D8
cs=0x17c5;eip=0x00e8da; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), ax));	// 113881                  add     [bp+arg_0], ax ;~ 17C5:E8DA
cs=0x17c5;eip=0x00e8dd; 	X(SUB(*(dw*)(raddr(ss,bp+var_4)), ax));	// 113882                  sub     [bp+var_4], ax ;~ 17C5:E8DD
cs=0x17c5;eip=0x00e8e0; 	X(SUB(*(dw*)(raddr(ds,si+2)), ax));	// 113883                  sub     [si+2], ax ;~ 17C5:E8E0
cs=0x17c5;eip=0x00e8e3; 	J(JMP(loc_34add));	// 113884                  jmp     short loc_34ADD ;~ 17C5:E8E3
loc_34b16:
	// 6760 
cs=0x17c5;eip=0x00e8e6; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 113889                  cmp     [bp+var_4], 0 ;~ 17C5:E8E6
cs=0x17c5;eip=0x00e8ea; 	J(JZ(loc_34aae));	// 113890                  jz      short loc_34AAE ;~ 17C5:E8EA
cs=0x17c5;eip=0x00e8ec; 	T(MOV(al, *(raddr(ds,si+7))));	// 113891                  mov     al, [si+7] ;~ 17C5:E8EC
cs=0x17c5;eip=0x00e8ef; 	T(CBW);	// 113892                  cbw ;~ 17C5:E8EF
cs=0x17c5;eip=0x00e8f0; 	X(MOV(*(dw*)(raddr(ss,bp+var_a)), ax));	// 113893                  mov     [bp+var_A], ax ;~ 17C5:E8F0
loc_34b23:
	// 6761 
cs=0x17c5;eip=0x00e8f3; 	X(PUSH(*(dw*)(raddr(ss,bp+var_4))));	// 113896                  push    [bp+var_4] ;~ 17C5:E8F3
cs=0x17c5;eip=0x00e8f6; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 113897                  push    [bp+arg_0] ;~ 17C5:E8F6
cs=0x17c5;eip=0x00e8f9; 	X(PUSH(*(dw*)(raddr(ss,bp+var_a))));	// 113898                  push    [bp+var_A] ;~ 17C5:E8F9
cs=0x17c5;eip=0x00e8fc; 	J(CALL(sub_35354,0));	// 113899                  call    sub_35354 ;~ 17C5:E8FC
cs=0x17c5;eip=0x00e8ff; 	T(ADD(sp, 6));	// 113900                  add     sp, 6 ;~ 17C5:E8FF
cs=0x17c5;eip=0x00e902; 	T(di = ax;);	// 113901                  mov     di, ax ;~ 17C5:E902
cs=0x17c5;eip=0x00e904; 	T(OR(di, di));	// 113902                  or      di, di ;~ 17C5:E904
cs=0x17c5;eip=0x00e906; 	J(JZ(loc_34b3d));	// 113903                  jz      short loc_34B3D ;~ 17C5:E906
cs=0x17c5;eip=0x00e908; 	T(CMP(di, 0x0FFFF));	// 113904                  cmp     di, 0FFFFh ;~ 17C5:E908
cs=0x17c5;eip=0x00e90b; 	J(JNZ(loc_34b4a));	// 113905                  jnz     short loc_34B4A ;~ 17C5:E90B
loc_34b3d:
	// 6762 
cs=0x17c5;eip=0x00e90d; 	T(CMP(di, 0x0FFFF));	// 113909                  cmp     di, 0FFFFh ;~ 17C5:E90D
cs=0x17c5;eip=0x00e910; 	J(JZ(loc_34b45));	// 113910                  jz      short loc_34B45 ;~ 17C5:E910
cs=0x17c5;eip=0x00e912; 	J(JMP(loc_34aa9));	// 113911                  jmp     loc_34AA9 ;~ 17C5:E912
loc_34b45:
	// 6763 
cs=0x17c5;eip=0x00e915; 	T(al = 0x20;);	// 113916                  mov     al, 20h ; ' ' ;~ 17C5:E915
cs=0x17c5;eip=0x00e917; 	J(JMP(loc_34aab));	// 113917                  jmp     loc_34AAB ;~ 17C5:E917
loc_34b4a:
	// 6764 
cs=0x17c5;eip=0x00e91a; 	X(SUB(*(dw*)(raddr(ss,bp+var_4)), di));	// 113921                  sub     [bp+var_4], di ;~ 17C5:E91A
cs=0x17c5;eip=0x00e91d; 	X(ADD(*(dw*)(raddr(ss,bp+arg_0)), di));	// 113922                  add     [bp+arg_0], di ;~ 17C5:E91D
cs=0x17c5;eip=0x00e920; 	T(CMP(*(dw*)(raddr(ss,bp+var_4)), 0));	// 113923                  cmp     [bp+var_4], 0 ;~ 17C5:E920
cs=0x17c5;eip=0x00e924; 	J(JNZ(loc_34b59));	// 113924                  jnz     short loc_34B59 ;~ 17C5:E924
cs=0x17c5;eip=0x00e926; 	J(JMP(loc_34aae));	// 113925                  jmp     loc_34AAE ;~ 17C5:E926
loc_34b59:
	// 6765 
cs=0x17c5;eip=0x00e929; 	J(JMP(loc_34b23));	// 113929                  jmp     short loc_34B23 ;~ 17C5:E929
loc_34b5c:
	// 6766 
cs=0x17c5;eip=0x00e92c; 	X(POP(si));	// 113935                  pop     si ;~ 17C5:E92C
cs=0x17c5;eip=0x00e92d; 	X(POP(di));	// 113936                  pop     di ;~ 17C5:E92D
cs=0x17c5;eip=0x00e92e; 	T(sp = bp;);	// 113937                  mov     sp, bp ;~ 17C5:E92E
cs=0x17c5;eip=0x00e930; 	X(POP(bp));	// 113938                  pop     bp ;~ 17C5:E930
cs=0x17c5;eip=0x00e931; 	J(RETN(0));	// 113939                  retn ;~ 17C5:E931

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3499f: 	goto loc_3499f;
        case m2c::kloc_349a6: 	goto loc_349a6;
        case m2c::kloc_349af: 	goto loc_349af;
        case m2c::kloc_349cb: 	goto loc_349cb;
        case m2c::kloc_349e8: 	goto loc_349e8;
        case m2c::kloc_349ec: 	goto loc_349ec;
        case m2c::kloc_34a04: 	goto loc_34a04;
        case m2c::kloc_34a0c: 	goto loc_34a0c;
        case m2c::kloc_34a1b: 	goto loc_34a1b;
        case m2c::kloc_34a1e: 	goto loc_34a1e;
        case m2c::kloc_34a2e: 	goto loc_34a2e;
        case m2c::kloc_34a35: 	goto loc_34a35;
        case m2c::kloc_34a40: 	goto loc_34a40;
        case m2c::kloc_34a4d: 	goto loc_34a4d;
        case m2c::kloc_34a56: 	goto loc_34a56;
        case m2c::kloc_34a72: 	goto loc_34a72;
        case m2c::kloc_34a74: 	goto loc_34a74;
        case m2c::kloc_34aa1: 	goto loc_34aa1;
        case m2c::kloc_34aa9: 	goto loc_34aa9;
        case m2c::kloc_34aab: 	goto loc_34aab;
        case m2c::kloc_34aae: 	goto loc_34aae;
        case m2c::kloc_34abc: 	goto loc_34abc;
        case m2c::kloc_34ac4: 	goto loc_34ac4;
        case m2c::kloc_34add: 	goto loc_34add;
        case m2c::kloc_34b16: 	goto loc_34b16;
        case m2c::kloc_34b23: 	goto loc_34b23;
        case m2c::kloc_34b3d: 	goto loc_34b3d;
        case m2c::kloc_34b45: 	goto loc_34b45;
        case m2c::kloc_34b4a: 	goto loc_34b4a;
        case m2c::kloc_34b59: 	goto loc_34b59;
        case m2c::kloc_34b5c: 	goto loc_34b5c;
        case m2c::ksub_3497c: 	goto sub_3497c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34b62(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34b62:
    _begin:
#undef var_4
#define var_4 -4
	// 113949 var_4           = word ptr -4 ;~ 17C5:E932
#undef var_2
#define var_2 -2
	// 113950 var_2           = word ptr -2 ;~ 17C5:E932
#undef arg_0
#define arg_0 4
	// 113951 arg_0           = word ptr  4 ;~ 17C5:E932
#undef arg_2
#define arg_2 6
	// 113952 arg_2           = word ptr  6 ;~ 17C5:E932
#undef arg_4
#define arg_4 8
	// 113953 arg_4           = word ptr  8 ;~ 17C5:E932
#undef arg_6
#define arg_6 0x0A
	// 113954 arg_6           = word ptr  0Ah ;~ 17C5:E932
cs=0x17c5;eip=0x00e932; 	X(PUSH(bp));	// 113958                  push    bp ;~ 17C5:E932
cs=0x17c5;eip=0x00e933; 	T(bp = sp;);	// 113959                  mov     bp, sp ;~ 17C5:E933
cs=0x17c5;eip=0x00e935; 	T(SUB(sp, 4));	// 113960                  sub     sp, 4 ;~ 17C5:E935
cs=0x17c5;eip=0x00e938; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 113961                  mov     bx, [bp+arg_0] ;~ 17C5:E938
cs=0x17c5;eip=0x00e93b; 	T(CMP(bx, word_4ec92));	// 113962                  cmp     bx, ds:word_4EC92 ;~ 17C5:E93B
cs=0x17c5;eip=0x00e93f; 	J(JC(loc_34b76));	// 113963                  jb      short loc_34B76 ;~ 17C5:E93F
cs=0x17c5;eip=0x00e941; 	T(ax = 0x900;);	// 113964                  mov     ax, 900h ;~ 17C5:E941
cs=0x17c5;eip=0x00e944; 	J(JMP(loc_34ba0));	// 113965                  jmp     short loc_34BA0 ;~ 17C5:E944
loc_34b76:
	// 6767 
cs=0x17c5;eip=0x00e946; 	T(TEST(*(dw*)(raddr(ss,bp+arg_4)), 0x8000));	// 113969                  test    [bp+arg_4], 8000h ;~ 17C5:E946
cs=0x17c5;eip=0x00e94b; 	J(JZ(loc_34bc5));	// 113970                  jz      short loc_34BC5 ;~ 17C5:E94B
cs=0x17c5;eip=0x00e94d; 	T(CMP(*(dw*)(raddr(ss,bp+arg_6)), 0));	// 113971                  cmp     [bp+arg_6], 0 ;~ 17C5:E94D
cs=0x17c5;eip=0x00e951; 	J(JZ(loc_34b9d));	// 113972                  jz      short loc_34B9D ;~ 17C5:E951
cs=0x17c5;eip=0x00e953; 	T(XOR(cx, cx));	// 113973                  xor     cx, cx ;~ 17C5:E953
cs=0x17c5;eip=0x00e955; 	T(dx = cx;);	// 113974                  mov     dx, cx ;~ 17C5:E955
cs=0x17c5;eip=0x00e957; 	T(ax = 0x4201;);	// 113975                  mov     ax, 4201h ;~ 17C5:E957
cs=0x17c5;eip=0x00e95a; 	S(_INT(0x21));	// 113976                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:E95A
cs=0x17c5;eip=0x00e95c; 	J(JC(loc_34bd9));	// 113978                  jb      short loc_34BD9 ;~ 17C5:E95C
cs=0x17c5;eip=0x00e95e; 	T(TEST(*(dw*)(raddr(ss,bp+arg_6)), 2));	// 113979                  test    [bp+arg_6], 2 ;~ 17C5:E95E
cs=0x17c5;eip=0x00e963; 	J(JNZ(loc_34ba3));	// 113980                  jnz     short loc_34BA3 ;~ 17C5:E963
cs=0x17c5;eip=0x00e965; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 113981                  add     ax, [bp+arg_2] ;~ 17C5:E965
cs=0x17c5;eip=0x00e968; 	T(ADC(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 113982                  adc     dx, [bp+arg_4] ;~ 17C5:E968
cs=0x17c5;eip=0x00e96b; 	J(JNS(loc_34bc5));	// 113983                  jns     short loc_34BC5 ;~ 17C5:E96B
loc_34b9d:
	// 6768 
cs=0x17c5;eip=0x00e96d; 	T(ax = 0x1600;);	// 113987                  mov     ax, 1600h ;~ 17C5:E96D
loc_34ba0:
	// 6769 
cs=0x17c5;eip=0x00e970; 	T(STC);	// 113990                  stc ;~ 17C5:E970
cs=0x17c5;eip=0x00e971; 	J(JMP(loc_34bd9));	// 113991                  jmp     short loc_34BD9 ;~ 17C5:E971
loc_34ba3:
	// 6770 
cs=0x17c5;eip=0x00e973; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), dx));	// 113995                  mov     [bp+var_2], dx ;~ 17C5:E973
cs=0x17c5;eip=0x00e976; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 113996                  mov     [bp+var_4], ax ;~ 17C5:E976
cs=0x17c5;eip=0x00e979; 	T(dx = cx;);	// 113997                  mov     dx, cx ;~ 17C5:E979
cs=0x17c5;eip=0x00e97b; 	T(ax = 0x4202;);	// 113998                  mov     ax, 4202h ;~ 17C5:E97B
cs=0x17c5;eip=0x00e97e; 	S(_INT(0x21));	// 113999                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:E97E
cs=0x17c5;eip=0x00e980; 	T(ADD(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 114001                  add     ax, [bp+arg_2] ;~ 17C5:E980
cs=0x17c5;eip=0x00e983; 	T(ADC(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 114002                  adc     dx, [bp+arg_4] ;~ 17C5:E983
cs=0x17c5;eip=0x00e986; 	J(JNS(loc_34bc5));	// 114003                  jns     short loc_34BC5 ;~ 17C5:E986
cs=0x17c5;eip=0x00e988; 	T(MOV(cx, *(dw*)(raddr(ss,bp+var_2))));	// 114004                  mov     cx, [bp+var_2] ;~ 17C5:E988
cs=0x17c5;eip=0x00e98b; 	T(MOV(dx, *(dw*)(raddr(ss,bp+var_4))));	// 114005                  mov     dx, [bp+var_4] ;~ 17C5:E98B
cs=0x17c5;eip=0x00e98e; 	T(ax = 0x4200;);	// 114006                  mov     ax, 4200h ;~ 17C5:E98E
cs=0x17c5;eip=0x00e991; 	S(_INT(0x21));	// 114007                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:E991
cs=0x17c5;eip=0x00e993; 	J(JMP(loc_34b9d));	// 114009                  jmp     short loc_34B9D ;~ 17C5:E993
loc_34bc5:
	// 6771 
cs=0x17c5;eip=0x00e995; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 114014                  mov     dx, [bp+arg_2] ;~ 17C5:E995
cs=0x17c5;eip=0x00e998; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 114015                  mov     cx, [bp+arg_4] ;~ 17C5:E998
cs=0x17c5;eip=0x00e99b; 	T(MOV(al, *(raddr(ss,bp+arg_6))));	// 114016                  mov     al, byte ptr [bp+arg_6] ;~ 17C5:E99B
cs=0x17c5;eip=0x00e99e; 	T(ah = 0x42;);	// 114017                  mov     ah, 42h ;~ 17C5:E99E
cs=0x17c5;eip=0x00e9a0; 	S(_INT(0x21));	// 114018                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:E9A0
cs=0x17c5;eip=0x00e9a2; 	J(JC(loc_34bd9));	// 114021                  jb      short loc_34BD9 ;~ 17C5:E9A2
cs=0x17c5;eip=0x00e9a4; 	X(AND(*(raddr(ds,bx+0x61B4)), 0x0FD));	// 114022                  and     byte ptr [bx+61B4h], 0FDh ;~ 17C5:E9A4
loc_34bd9:
	// 6772 
cs=0x17c5;eip=0x00e9a9; 	J(return seg2623_ee22_proc(m2c::kloc_35065, _state););	// 114026                  jmp     loc_35065 ;~ 17C5:E9A9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34b76: 	goto loc_34b76;
        case m2c::kloc_34b9d: 	goto loc_34b9d;
        case m2c::kloc_34ba0: 	goto loc_34ba0;
        case m2c::kloc_34ba3: 	goto loc_34ba3;
        case m2c::kloc_34bc5: 	goto loc_34bc5;
        case m2c::kloc_34bd9: 	goto loc_34bd9;
        case m2c::ksub_34b62: 	goto sub_34b62;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34bdc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34bdc:
    _begin:
#undef arg_0
#define arg_0 4
	// 114037 arg_0           = word ptr  4 ;~ 17C5:E9AC
#undef arg_2
#define arg_2 6
	// 114038 arg_2           = word ptr  6 ;~ 17C5:E9AC
cs=0x17c5;eip=0x00e9ac; 	X(PUSH(bp));	// 114040                  push    bp ;~ 17C5:E9AC
cs=0x17c5;eip=0x00e9ad; 	T(bp = sp;);	// 114041                  mov     bp, sp ;~ 17C5:E9AD
cs=0x17c5;eip=0x00e9af; 	T(dx = di;);	// 114042                  mov     dx, di ;~ 17C5:E9AF
cs=0x17c5;eip=0x00e9b1; 	T(bx = si;);	// 114043                  mov     bx, si ;~ 17C5:E9B1
cs=0x17c5;eip=0x00e9b3; 	T(ax = ds;);	// 114044                  mov     ax, ds ;~ 17C5:E9B3
cs=0x17c5;eip=0x00e9b5; 	T(es = ax;);	// 114045                  mov     es, ax ;~ 17C5:E9B5
cs=0x17c5;eip=0x00e9b7; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_0))));	// 114046                  mov     di, [bp+arg_0] ;~ 17C5:E9B7
cs=0x17c5;eip=0x00e9ba; 	T(XOR(ax, ax));	// 114047                  xor     ax, ax ;~ 17C5:E9BA
cs=0x17c5;eip=0x00e9bc; 	T(cx = 0x0FFFF;);	// 114048                  mov     cx, 0FFFFh ;~ 17C5:E9BC
	// 114049                  repne scasb ;~ 17C5:E9BF
cs=0x17c5;eip=0x00e9bf; 	T(	REPNE SCASB);	// 114049                  repne scasb ;~ 17C5:E9BF
cs=0x17c5;eip=0x00e9c1; 	T(si = di-1);	// 114050                  lea     si, [di-1] ;~ 17C5:E9C1
cs=0x17c5;eip=0x00e9c4; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_2))));	// 114051                  mov     di, [bp+arg_2] ;~ 17C5:E9C4
cs=0x17c5;eip=0x00e9c7; 	T(cx = 0x0FFFF;);	// 114052                  mov     cx, 0FFFFh ;~ 17C5:E9C7
	// 114053                  repne scasb ;~ 17C5:E9CA
cs=0x17c5;eip=0x00e9ca; 	T(	REPNE SCASB);	// 114053                  repne scasb ;~ 17C5:E9CA
cs=0x17c5;eip=0x00e9cc; 	T(NOT(cx));	// 114054                  not     cx ;~ 17C5:E9CC
cs=0x17c5;eip=0x00e9ce; 	T(SUB(di, cx));	// 114055                  sub     di, cx ;~ 17C5:E9CE
cs=0x17c5;eip=0x00e9d0; 	T(XCHG(di, si));	// 114056                  xchg    di, si ;~ 17C5:E9D0
cs=0x17c5;eip=0x00e9d2; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114057                  mov     ax, [bp+arg_0] ;~ 17C5:E9D2
cs=0x17c5;eip=0x00e9d5; 	T(TEST(si, 1));	// 114058                  test    si, 1 ;~ 17C5:E9D5
cs=0x17c5;eip=0x00e9d9; 	J(JZ(loc_34c0d));	// 114059                  jz      short loc_34C0D ;~ 17C5:E9D9
cs=0x17c5;eip=0x00e9db; 	X(MOVSB);	// 114060                  movsb ;~ 17C5:E9DB
cs=0x17c5;eip=0x00e9dc; 	T(DEC(cx));	// 114061                  dec     cx ;~ 17C5:E9DC
loc_34c0d:
	// 6773 
cs=0x17c5;eip=0x00e9dd; 	T(SHR(cx, 1));	// 114064                  shr     cx, 1 ;~ 17C5:E9DD
	// 114065                  rep movsw ;~ 17C5:E9DF
cs=0x17c5;eip=0x00e9df; 	X(	REP MOVSW);	// 114065                  rep movsw ;~ 17C5:E9DF
cs=0x17c5;eip=0x00e9e1; 	T(ADC(cx, cx));	// 114066                  adc     cx, cx ;~ 17C5:E9E1
	// 114067                  rep movsb ;~ 17C5:E9E3
cs=0x17c5;eip=0x00e9e3; 	X(	REP MOVSB);	// 114067                  rep movsb ;~ 17C5:E9E3
cs=0x17c5;eip=0x00e9e5; 	T(si = bx;);	// 114068                  mov     si, bx ;~ 17C5:E9E5
cs=0x17c5;eip=0x00e9e7; 	T(di = dx;);	// 114069                  mov     di, dx ;~ 17C5:E9E7
cs=0x17c5;eip=0x00e9e9; 	X(POP(bp));	// 114070                  pop     bp ;~ 17C5:E9E9
cs=0x17c5;eip=0x00e9ea; 	J(RETN(0));	// 114071                  retn ;~ 17C5:E9EA

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34c0d: 	goto loc_34c0d;
        case m2c::ksub_34bdc: 	goto sub_34bdc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34c1c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34c1c:
    _begin:
#undef arg_0
#define arg_0 4
	// 114084 arg_0           = word ptr  4 ;~ 17C5:E9EC
#undef arg_2
#define arg_2 6
	// 114085 arg_2           = word ptr  6 ;~ 17C5:E9EC
cs=0x17c5;eip=0x00e9ec; 	X(PUSH(bp));	// 114087                  push    bp ;~ 17C5:E9EC
cs=0x17c5;eip=0x00e9ed; 	T(bp = sp;);	// 114088                  mov     bp, sp ;~ 17C5:E9ED
cs=0x17c5;eip=0x00e9ef; 	T(dx = di;);	// 114089                  mov     dx, di ;~ 17C5:E9EF
cs=0x17c5;eip=0x00e9f1; 	T(bx = si;);	// 114090                  mov     bx, si ;~ 17C5:E9F1
cs=0x17c5;eip=0x00e9f3; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_2))));	// 114091                  mov     si, [bp+arg_2] ;~ 17C5:E9F3
cs=0x17c5;eip=0x00e9f6; 	T(di = si;);	// 114092                  mov     di, si ;~ 17C5:E9F6
cs=0x17c5;eip=0x00e9f8; 	T(ax = ds;);	// 114093                  mov     ax, ds ;~ 17C5:E9F8
cs=0x17c5;eip=0x00e9fa; 	T(es = ax;);	// 114094                  mov     es, ax ;~ 17C5:E9FA
cs=0x17c5;eip=0x00e9fc; 	T(XOR(ax, ax));	// 114095                  xor     ax, ax ;~ 17C5:E9FC
cs=0x17c5;eip=0x00e9fe; 	T(cx = 0x0FFFF;);	// 114096                  mov     cx, 0FFFFh ;~ 17C5:E9FE
	// 114097                  repne scasb ;~ 17C5:EA01
cs=0x17c5;eip=0x00ea01; 	T(	REPNE SCASB);	// 114097                  repne scasb ;~ 17C5:EA01
cs=0x17c5;eip=0x00ea03; 	T(NOT(cx));	// 114098                  not     cx ;~ 17C5:EA03
cs=0x17c5;eip=0x00ea05; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_0))));	// 114099                  mov     di, [bp+arg_0] ;~ 17C5:EA05
cs=0x17c5;eip=0x00ea08; 	T(ax = di;);	// 114100                  mov     ax, di ;~ 17C5:EA08
cs=0x17c5;eip=0x00ea0a; 	T(TEST(al, 1));	// 114101                  test    al, 1 ;~ 17C5:EA0A
cs=0x17c5;eip=0x00ea0c; 	J(JZ(loc_34c40));	// 114102                  jz      short loc_34C40 ;~ 17C5:EA0C
cs=0x17c5;eip=0x00ea0e; 	X(MOVSB);	// 114103                  movsb ;~ 17C5:EA0E
cs=0x17c5;eip=0x00ea0f; 	T(DEC(cx));	// 114104                  dec     cx ;~ 17C5:EA0F
loc_34c40:
	// 6774 
cs=0x17c5;eip=0x00ea10; 	T(SHR(cx, 1));	// 114107                  shr     cx, 1 ;~ 17C5:EA10
	// 114108                  rep movsw ;~ 17C5:EA12
cs=0x17c5;eip=0x00ea12; 	X(	REP MOVSW);	// 114108                  rep movsw ;~ 17C5:EA12
cs=0x17c5;eip=0x00ea14; 	T(ADC(cx, cx));	// 114109                  adc     cx, cx ;~ 17C5:EA14
	// 114110                  rep movsb ;~ 17C5:EA16
cs=0x17c5;eip=0x00ea16; 	X(	REP MOVSB);	// 114110                  rep movsb ;~ 17C5:EA16
cs=0x17c5;eip=0x00ea18; 	T(si = bx;);	// 114111                  mov     si, bx ;~ 17C5:EA18
cs=0x17c5;eip=0x00ea1a; 	T(di = dx;);	// 114112                  mov     di, dx ;~ 17C5:EA1A
cs=0x17c5;eip=0x00ea1c; 	X(POP(bp));	// 114113                  pop     bp ;~ 17C5:EA1C
cs=0x17c5;eip=0x00ea1d; 	J(RETN(0));	// 114114                  retn ;~ 17C5:EA1D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34c40: 	goto loc_34c40;
        case m2c::ksub_34c1c: 	goto sub_34c1c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34c4e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34c4e:
    _begin:
#undef arg_0
#define arg_0 4
	// 114125 arg_0           = word ptr  4 ;~ 17C5:EA1E
cs=0x17c5;eip=0x00ea1e; 	X(PUSH(bp));	// 114127                  push    bp ;~ 17C5:EA1E
cs=0x17c5;eip=0x00ea1f; 	T(bp = sp;);	// 114128                  mov     bp, sp ;~ 17C5:EA1F
cs=0x17c5;eip=0x00ea21; 	T(dx = di;);	// 114129                  mov     dx, di ;~ 17C5:EA21
cs=0x17c5;eip=0x00ea23; 	T(ax = ds;);	// 114130                  mov     ax, ds ;~ 17C5:EA23
cs=0x17c5;eip=0x00ea25; 	T(es = ax;);	// 114131                  mov     es, ax ;~ 17C5:EA25
cs=0x17c5;eip=0x00ea27; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_0))));	// 114132                  mov     di, [bp+arg_0] ;~ 17C5:EA27
cs=0x17c5;eip=0x00ea2a; 	T(XOR(ax, ax));	// 114133                  xor     ax, ax ;~ 17C5:EA2A
cs=0x17c5;eip=0x00ea2c; 	T(cx = 0x0FFFF;);	// 114134                  mov     cx, 0FFFFh ;~ 17C5:EA2C
	// 114135                  repne scasb ;~ 17C5:EA2F
cs=0x17c5;eip=0x00ea2f; 	T(	REPNE SCASB);	// 114135                  repne scasb ;~ 17C5:EA2F
cs=0x17c5;eip=0x00ea31; 	T(NOT(cx));	// 114136                  not     cx ;~ 17C5:EA31
cs=0x17c5;eip=0x00ea33; 	T(DEC(cx));	// 114137                  dec     cx ;~ 17C5:EA33
cs=0x17c5;eip=0x00ea34; 	T(XCHG(ax, cx));	// 114138                  xchg    ax, cx ;~ 17C5:EA34
cs=0x17c5;eip=0x00ea35; 	T(di = dx;);	// 114139                  mov     di, dx ;~ 17C5:EA35
cs=0x17c5;eip=0x00ea37; 	X(POP(bp));	// 114140                  pop     bp ;~ 17C5:EA37
cs=0x17c5;eip=0x00ea38; 	J(RETN(0));	// 114141                  retn ;~ 17C5:EA38

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_34c4e: 	goto sub_34c4e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34c6a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34c6a:
    _begin:
#undef arg_0
#define arg_0 4
	// 114154 arg_0           = word ptr  4 ;~ 17C5:EA3A
#undef arg_2
#define arg_2 6
	// 114155 arg_2           = word ptr  6 ;~ 17C5:EA3A
#undef arg_4
#define arg_4 8
	// 114156 arg_4           = word ptr  8 ;~ 17C5:EA3A
cs=0x17c5;eip=0x00ea3a; 	X(PUSH(bp));	// 114160                  push    bp ;~ 17C5:EA3A
cs=0x17c5;eip=0x00ea3b; 	T(bp = sp;);	// 114161                  mov     bp, sp ;~ 17C5:EA3B
cs=0x17c5;eip=0x00ea3d; 	X(PUSH(si));	// 114162                  push    si ;~ 17C5:EA3D
cs=0x17c5;eip=0x00ea3e; 	X(PUSH(di));	// 114163                  push    di ;~ 17C5:EA3E
cs=0x17c5;eip=0x00ea3f; 	T(bl = 1;);	// 114164                  mov     bl, 1 ;~ 17C5:EA3F
cs=0x17c5;eip=0x00ea41; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 114165                  mov     cx, [bp+arg_4] ;~ 17C5:EA41
cs=0x17c5;eip=0x00ea44; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114166                  mov     ax, [bp+arg_0] ;~ 17C5:EA44
cs=0x17c5;eip=0x00ea47; 	T(XOR(dx, dx));	// 114167                  xor     dx, dx ;~ 17C5:EA47
cs=0x17c5;eip=0x00ea49; 	T(CMP(cx, 0x0A));	// 114168                  cmp     cx, 0Ah ;~ 17C5:EA49
cs=0x17c5;eip=0x00ea4c; 	J(JNZ(loc_34c7f));	// 114169                  jnz     short loc_34C7F ;~ 17C5:EA4C
cs=0x17c5;eip=0x00ea4e; 	T(CWD);	// 114170                  cwd ;~ 17C5:EA4E
loc_34c7f:
	// 6775 
cs=0x17c5;eip=0x00ea4f; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_2))));	// 114173                  mov     di, [bp+arg_2] ;~ 17C5:EA4F
cs=0x17c5;eip=0x00ea52; 	J(return seg2623_f202_proc(m2c::kloc_3543e, _state););	// 114174                  jmp     loc_3543E ;~ 17C5:EA52

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34c7f: 	goto loc_34c7f;
        case m2c::ksub_34c6a: 	goto sub_34c6a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34c86(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34c86:
    _begin:
cs=0x17c5;eip=0x00ea56; 	T(ax = word_4ecc2;);	// 114185                  mov     ax, ds:word_4ECC2 ;~ 17C5:EA56
cs=0x17c5;eip=0x00ea59; 	T(OR(ah, ah));	// 114186                  or      ah, ah ;~ 17C5:EA59
cs=0x17c5;eip=0x00ea5b; 	T(al = 0x0FF;);	// 114187                  mov     al, 0FFh ;~ 17C5:EA5B
cs=0x17c5;eip=0x00ea5d; 	J(JZ(locret_34c95));	// 114188                  jz      short locret_34C95 ;~ 17C5:EA5D
cs=0x17c5;eip=0x00ea5f; 	T(ah = 0x0B;);	// 114189                  mov     ah, 0Bh ;~ 17C5:EA5F
cs=0x17c5;eip=0x00ea61; 	S(_INT(0x21));	// 114190                  int     21h             ; DOS - CHECK STANDARD INPUT STATUS ;~ 17C5:EA61
cs=0x17c5;eip=0x00ea63; 	T(ah = 0;);	// 114193                  mov     ah, 0 ;~ 17C5:EA63
locret_34c95:
	// 6776 
cs=0x17c5;eip=0x00ea65; 	J(RETN(0));	// 114196                  retn ;~ 17C5:EA65

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::klocret_34c95: 	goto locret_34c95;
        case m2c::ksub_34c86: 	goto sub_34c86;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_ea66_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_ea66_proc:
    _begin:
cs=0x17c5;eip=0x00ea66; 	T(dh = 1;);	// 114200                  mov     dh, 1 ;~ 17C5:EA66
cs=0x17c5;eip=0x00ea68; 	J(return sub_34c9a(m2c::kloc_34c9c, _state););	// 114201                  jmp     short loc_34C9C ;~ 17C5:EA68

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_ea66_proc: 	goto seg2623_ea66_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34c9a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34c9a:
    _begin:
cs=0x17c5;eip=0x00ea6a; 	T(dh = 8;);	// 114207                  mov     dh, 8 ;~ 17C5:EA6A
loc_34c9c:
	// 6777 
cs=0x17c5;eip=0x00ea6c; 	T(ax = word_4ecc2;);	// 114210                  mov     ax, ds:word_4ECC2 ;~ 17C5:EA6C
cs=0x17c5;eip=0x00ea6f; 	T(OR(ah, ah));	// 114211                  or      ah, ah ;~ 17C5:EA6F
cs=0x17c5;eip=0x00ea71; 	J(JNZ(loc_34cab));	// 114212                  jnz     short loc_34CAB ;~ 17C5:EA71
cs=0x17c5;eip=0x00ea73; 	X(word_4ecc2 = 0x0FFFF;);	// 114213                  mov     ds:word_4ECC2, 0FFFFh ;~ 17C5:EA73
cs=0x17c5;eip=0x00ea79; 	J(JMP(locret_34cb0));	// 114214                  jmp     short locret_34CB0 ;~ 17C5:EA79
loc_34cab:
	// 6778 
cs=0x17c5;eip=0x00ea7b; 	T(XCHG(ax, dx));	// 114218                  xchg    ax, dx ;~ 17C5:EA7B
cs=0x17c5;eip=0x00ea7c; 	S(_INT(0x21));	// 114219                  int     21h             ; DOS - ;~ 17C5:EA7C
cs=0x17c5;eip=0x00ea7e; 	T(ah = 0;);	// 114220                  mov     ah, 0 ;~ 17C5:EA7E
locret_34cb0:
	// 6779 
cs=0x17c5;eip=0x00ea80; 	J(RETN(0));	// 114223                  retn ;~ 17C5:EA80

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34c9c: 	goto loc_34c9c;
        case m2c::kloc_34cab: 	goto loc_34cab;
        case m2c::klocret_34cb0: 	goto locret_34cb0;
        case m2c::ksub_34c9a: 	goto sub_34c9a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34cb2(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34cb2:
    _begin:
#undef var_e
#define var_e -0x0E
	// 114236 var_E           = dword ptr -0Eh ;~ 17C5:EA82
#undef var_a
#define var_a -0x0A
	// 114237 var_A           = byte ptr -0Ah ;~ 17C5:EA82
#undef var_9
#define var_9 -9
	// 114238 var_9           = byte ptr -9 ;~ 17C5:EA82
#undef var_8
#define var_8 -8
	// 114239 var_8           = byte ptr -8 ;~ 17C5:EA82
#undef var_7
#define var_7 -7
	// 114240 var_7           = byte ptr -7 ;~ 17C5:EA82
#undef var_6
#define var_6 -6
	// 114241 var_6           = byte ptr -6 ;~ 17C5:EA82
#undef arg_0
#define arg_0 4
	// 114242 arg_0           = word ptr  4 ;~ 17C5:EA82
#undef arg_2
#define arg_2 6
	// 114243 arg_2           = word ptr  6 ;~ 17C5:EA82
#undef arg_4
#define arg_4 8
	// 114244 arg_4           = word ptr  8 ;~ 17C5:EA82
cs=0x17c5;eip=0x00ea82; 	X(PUSH(bp));	// 114246                  push    bp ;~ 17C5:EA82
cs=0x17c5;eip=0x00ea83; 	T(bp = sp;);	// 114247                  mov     bp, sp ;~ 17C5:EA83
cs=0x17c5;eip=0x00ea85; 	X(PUSH(si));	// 114248                  push    si ;~ 17C5:EA85
cs=0x17c5;eip=0x00ea86; 	X(PUSH(di));	// 114249                  push    di ;~ 17C5:EA86
cs=0x17c5;eip=0x00ea87; 	T(SUB(sp, 0x0A));	// 114250                  sub     sp, 0Ah ;~ 17C5:EA87
cs=0x17c5;eip=0x00ea8a; 	X(MOV(*(raddr(ss,bp+var_a)), 0x0CD));	// 114251                  mov     [bp+var_A], 0CDh ;~ 17C5:EA8A
cs=0x17c5;eip=0x00ea8e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114252                  mov     ax, [bp+arg_0] ;~ 17C5:EA8E
cs=0x17c5;eip=0x00ea91; 	X(MOV(*(raddr(ss,bp+var_9)), al));	// 114253                  mov     [bp+var_9], al ;~ 17C5:EA91
cs=0x17c5;eip=0x00ea94; 	T(CMP(al, 0x25));	// 114254                  cmp     al, 25h ; '%' ;~ 17C5:EA94
cs=0x17c5;eip=0x00ea96; 	J(JZ(loc_34cd2));	// 114255                  jz      short loc_34CD2 ;~ 17C5:EA96
cs=0x17c5;eip=0x00ea98; 	T(CMP(al, 0x26));	// 114256                  cmp     al, 26h ; '&' ;~ 17C5:EA98
cs=0x17c5;eip=0x00ea9a; 	J(JZ(loc_34cd2));	// 114257                  jz      short loc_34CD2 ;~ 17C5:EA9A
cs=0x17c5;eip=0x00ea9c; 	X(MOV(*(raddr(ss,bp+var_8)), 0x0CB));	// 114258                  mov     [bp+var_8], 0CBh ;~ 17C5:EA9C
cs=0x17c5;eip=0x00eaa0; 	J(JMP(loc_34cde));	// 114259                  jmp     short loc_34CDE ;~ 17C5:EAA0
loc_34cd2:
	// 6780 
cs=0x17c5;eip=0x00eaa2; 	X(MOV(*(raddr(ss,bp+var_6)), 0x0CB));	// 114264                  mov     [bp+var_6], 0CBh ;~ 17C5:EAA2
cs=0x17c5;eip=0x00eaa6; 	X(MOV(*(raddr(ss,bp+var_7)), 0x44));	// 114265                  mov     [bp+var_7], 44h ; 'D' ;~ 17C5:EAA6
cs=0x17c5;eip=0x00eaaa; 	X(MOV(*(raddr(ss,bp+var_8)), 0x44));	// 114266                  mov     [bp+var_8], 44h ; 'D' ;~ 17C5:EAAA
loc_34cde:
	// 6781 
cs=0x17c5;eip=0x00eaae; 	X(MOV(*(dw*)(raddr(ss,bp+var_e+2)), ss));	// 114269                  mov     word ptr [bp+var_E+2], ss ;~ 17C5:EAAE
cs=0x17c5;eip=0x00eab1; 	T(ax = bp+var_a);	// 114270                  lea     ax, [bp+var_A] ;~ 17C5:EAB1
cs=0x17c5;eip=0x00eab4; 	X(MOV(*(dw*)(raddr(ss,bp+var_e)), ax));	// 114271                  mov     word ptr [bp+var_E], ax ;~ 17C5:EAB4
cs=0x17c5;eip=0x00eab7; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_2))));	// 114272                  mov     di, [bp+arg_2] ;~ 17C5:EAB7
cs=0x17c5;eip=0x00eaba; 	T(MOV(ax, *(dw*)(raddr(ds,di))));	// 114273                  mov     ax, [di] ;~ 17C5:EABA
cs=0x17c5;eip=0x00eabc; 	T(MOV(bx, *(dw*)(raddr(ds,di+2))));	// 114274                  mov     bx, [di+2] ;~ 17C5:EABC
cs=0x17c5;eip=0x00eabf; 	T(MOV(cx, *(dw*)(raddr(ds,di+4))));	// 114275                  mov     cx, [di+4] ;~ 17C5:EABF
cs=0x17c5;eip=0x00eac2; 	T(MOV(dx, *(dw*)(raddr(ds,di+6))));	// 114276                  mov     dx, [di+6] ;~ 17C5:EAC2
cs=0x17c5;eip=0x00eac5; 	T(MOV(si, *(dw*)(raddr(ds,di+8))));	// 114277                  mov     si, [di+8] ;~ 17C5:EAC5
cs=0x17c5;eip=0x00eac8; 	T(MOV(di, *(dw*)(raddr(ds,di+0x0A))));	// 114278                  mov     di, [di+0Ah] ;~ 17C5:EAC8
cs=0x17c5;eip=0x00eacb; 	X(PUSH(bp));	// 114279                  push    bp ;~ 17C5:EACB
cs=0x17c5;eip=0x00eacc; 	J(CALLF(__dispatch_call,*(dd*)(raddr(ss,bp+var_e))));	// 114280                  call    [bp+var_E] ;~ 17C5:EACC
cs=0x17c5;eip=0x00eacf; 	X(POP(bp));	// 114281                  pop     bp ;~ 17C5:EACF
cs=0x17c5;eip=0x00ead0; 	T(CLD);	// 114282                  cld ;~ 17C5:EAD0
cs=0x17c5;eip=0x00ead1; 	X(PUSH(di));	// 114283                  push    di ;~ 17C5:EAD1
cs=0x17c5;eip=0x00ead2; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_4))));	// 114284                  mov     di, [bp+arg_4] ;~ 17C5:EAD2
cs=0x17c5;eip=0x00ead5; 	X(MOV(*(dw*)(raddr(ds,di)), ax));	// 114285                  mov     [di], ax ;~ 17C5:EAD5
cs=0x17c5;eip=0x00ead7; 	X(MOV(*(dw*)(raddr(ds,di+2)), bx));	// 114286                  mov     [di+2], bx ;~ 17C5:EAD7
cs=0x17c5;eip=0x00eada; 	X(MOV(*(dw*)(raddr(ds,di+4)), cx));	// 114287                  mov     [di+4], cx ;~ 17C5:EADA
cs=0x17c5;eip=0x00eadd; 	X(MOV(*(dw*)(raddr(ds,di+6)), dx));	// 114288                  mov     [di+6], dx ;~ 17C5:EADD
cs=0x17c5;eip=0x00eae0; 	X(MOV(*(dw*)(raddr(ds,di+8)), si));	// 114289                  mov     [di+8], si ;~ 17C5:EAE0
cs=0x17c5;eip=0x00eae3; 	X(POP(*(dw*)(raddr(ds,di+0x0A))));	// 114290                  pop     word ptr [di+0Ah] ;~ 17C5:EAE3
cs=0x17c5;eip=0x00eae6; 	J(JC(loc_34d1c));	// 114291                  jb      short loc_34D1C ;~ 17C5:EAE6
cs=0x17c5;eip=0x00eae8; 	T(XOR(si, si));	// 114292                  xor     si, si ;~ 17C5:EAE8
cs=0x17c5;eip=0x00eaea; 	J(JMP(loc_34d24));	// 114293                  jmp     short loc_34D24 ;~ 17C5:EAEA
loc_34d1c:
	// 6782 
cs=0x17c5;eip=0x00eaec; 	J(CALL(sub_35072,0));	// 114297                  call    sub_35072 ;~ 17C5:EAEC
cs=0x17c5;eip=0x00eaef; 	T(si = 1;);	// 114298                  mov     si, 1 ;~ 17C5:EAEF
cs=0x17c5;eip=0x00eaf2; 	T(MOV(ax, *(dw*)(raddr(ds,di))));	// 114299                  mov     ax, [di] ;~ 17C5:EAF2
loc_34d24:
	// 6783 
cs=0x17c5;eip=0x00eaf4; 	X(MOV(*(dw*)(raddr(ds,di+0x0C)), si));	// 114302                  mov     [di+0Ch], si ;~ 17C5:EAF4
cs=0x17c5;eip=0x00eaf7; 	T(ADD(sp, 0x0A));	// 114303                  add     sp, 0Ah ;~ 17C5:EAF7
cs=0x17c5;eip=0x00eafa; 	X(POP(di));	// 114304                  pop     di ;~ 17C5:EAFA
cs=0x17c5;eip=0x00eafb; 	X(POP(si));	// 114305                  pop     si ;~ 17C5:EAFB
cs=0x17c5;eip=0x00eafc; 	T(sp = bp;);	// 114306                  mov     sp, bp ;~ 17C5:EAFC
cs=0x17c5;eip=0x00eafe; 	X(POP(bp));	// 114307                  pop     bp ;~ 17C5:EAFE
cs=0x17c5;eip=0x00eaff; 	J(RETN(0));	// 114308                  retn ;~ 17C5:EAFF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34cd2: 	goto loc_34cd2;
        case m2c::kloc_34cde: 	goto loc_34cde;
        case m2c::kloc_34d1c: 	goto loc_34d1c;
        case m2c::kloc_34d24: 	goto loc_34d24;
        case m2c::ksub_34cb2: 	goto sub_34cb2;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34d30(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34d30:
    _begin:
#undef arg_0
#define arg_0 4
	// 114319 arg_0           = word ptr  4 ;~ 17C5:EB00
#undef arg_2
#define arg_2 6
	// 114320 arg_2           = word ptr  6 ;~ 17C5:EB00
#undef arg_4
#define arg_4 8
	// 114321 arg_4           = word ptr  8 ;~ 17C5:EB00
#undef arg_6
#define arg_6 0x0A
	// 114322 arg_6           = word ptr  0Ah ;~ 17C5:EB00
#undef arg_8
#define arg_8 0x0C
	// 114323 arg_8           = word ptr  0Ch ;~ 17C5:EB00
cs=0x17c5;eip=0x00eb00; 	X(PUSH(bp));	// 114325                  push    bp ;~ 17C5:EB00
cs=0x17c5;eip=0x00eb01; 	T(bp = sp;);	// 114326                  mov     bp, sp ;~ 17C5:EB01
cs=0x17c5;eip=0x00eb03; 	X(PUSH(si));	// 114327                  push    si ;~ 17C5:EB03
cs=0x17c5;eip=0x00eb04; 	X(PUSH(di));	// 114328                  push    di ;~ 17C5:EB04
cs=0x17c5;eip=0x00eb05; 	X(PUSH(ds));	// 114329                  push    ds ;~ 17C5:EB05
cs=0x17c5;eip=0x00eb06; 	T(MOV(ds, *(dw*)(raddr(ss,bp+arg_0))));	// 114330                  mov     ds, [bp+arg_0] ;~ 17C5:EB06
cs=0x17c5;eip=0x00eb09; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_2))));	// 114331                  mov     si, [bp+arg_2] ;~ 17C5:EB09
cs=0x17c5;eip=0x00eb0c; 	T(MOV(es, *(dw*)(raddr(ss,bp+arg_4))));	// 114332                  mov     es, [bp+arg_4] ;~ 17C5:EB0C
cs=0x17c5;eip=0x00eb0f; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_6))));	// 114334                  mov     di, [bp+arg_6] ;~ 17C5:EB0F
cs=0x17c5;eip=0x00eb12; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_8))));	// 114335                  mov     cx, [bp+arg_8] ;~ 17C5:EB12
	// 114336                  rep movsb ;~ 17C5:EB15
cs=0x17c5;eip=0x00eb15; 	X(	REP MOVSB);	// 114336                  rep movsb ;~ 17C5:EB15
cs=0x17c5;eip=0x00eb17; 	X(POP(ds));	// 114337                  pop     ds ;~ 17C5:EB17
cs=0x17c5;eip=0x00eb18; 	X(POP(di));	// 114338                  pop     di ;~ 17C5:EB18
cs=0x17c5;eip=0x00eb19; 	X(POP(si));	// 114339                  pop     si ;~ 17C5:EB19
cs=0x17c5;eip=0x00eb1a; 	T(sp = bp;);	// 114340                  mov     sp, bp ;~ 17C5:EB1A
cs=0x17c5;eip=0x00eb1c; 	X(POP(bp));	// 114341                  pop     bp ;~ 17C5:EB1C
cs=0x17c5;eip=0x00eb1d; 	J(RETN(0));	// 114342                  retn ;~ 17C5:EB1D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_34d30: 	goto sub_34d30;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34d4e(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34d4e:
    _begin:
#undef arg_0
#define arg_0 4
	// 114353 arg_0           = word ptr  4 ;~ 17C5:EB1E
cs=0x17c5;eip=0x00eb1e; 	X(PUSH(bp));	// 114355                  push    bp ;~ 17C5:EB1E
cs=0x17c5;eip=0x00eb1f; 	T(bp = sp;);	// 114356                  mov     bp, sp ;~ 17C5:EB1F
cs=0x17c5;eip=0x00eb21; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 114357                  mov     bx, [bp+arg_0] ;~ 17C5:EB21
cs=0x17c5;eip=0x00eb24; 	X(MOV(*(dw*)(raddr(ds,bx+6)), ds));	// 114358                  mov     word ptr [bx+6], ds ;~ 17C5:EB24
cs=0x17c5;eip=0x00eb27; 	X(MOV(*(dw*)(raddr(ds,bx)), es));	// 114359                  mov     word ptr [bx], es ;~ 17C5:EB27
cs=0x17c5;eip=0x00eb29; 	X(MOV(*(dw*)(raddr(ds,bx+2)), cs));	// 114360                  mov     word ptr [bx+2], cs ;~ 17C5:EB29
cs=0x17c5;eip=0x00eb2c; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ss));	// 114361                  mov     word ptr [bx+4], ss ;~ 17C5:EB2C
cs=0x17c5;eip=0x00eb2f; 	T(sp = bp;);	// 114362                  mov     sp, bp ;~ 17C5:EB2F
cs=0x17c5;eip=0x00eb31; 	X(POP(bp));	// 114363                  pop     bp ;~ 17C5:EB31
cs=0x17c5;eip=0x00eb32; 	J(RETN(0));	// 114364                  retn ;~ 17C5:EB32

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_34d4e: 	goto sub_34d4e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_eb34_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_eb34_proc:
    _begin:
loc_34d64:
	// 6784 
cs=0x17c5;eip=0x00eb34; 	X(PUSH(bp));	// 114372                  push    bp ;~ 17C5:EB34
cs=0x17c5;eip=0x00eb35; 	T(bp = sp;);	// 114373                  mov     bp, sp ;~ 17C5:EB35
cs=0x17c5;eip=0x00eb37; 	T(MOV(dx, *(dw*)(raddr(ss,bp+4))));	// 114374                  mov     dx, [bp+4] ;~ 17C5:EB37
cs=0x17c5;eip=0x00eb3a; 	T(MOV(al, *(raddr(ss,bp+6))));	// 114375                  mov     al, [bp+6] ;~ 17C5:EB3A
cs=0x17c5;eip=0x00eb3d; 	S(OUT(dx, al));	// 114376                  out     dx, al ;~ 17C5:EB3D
cs=0x17c5;eip=0x00eb3e; 	T(ah = 0;);	// 114377                  mov     ah, 0 ;~ 17C5:EB3E
cs=0x17c5;eip=0x00eb40; 	X(POP(bp));	// 114378                  pop     bp ;~ 17C5:EB40
cs=0x17c5;eip=0x00eb41; 	J(RETN(0));	// 114379                  retn ;~ 17C5:EB41

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_eb34_proc: 	goto seg2623_eb34_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34d72(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34d72:
    _begin:
#undef arg_0
#define arg_0 4
	// 114387 arg_0           = word ptr  4 ;~ 17C5:EB42
cs=0x17c5;eip=0x00eb42; 	X(PUSH(bp));	// 114389                  push    bp ;~ 17C5:EB42
cs=0x17c5;eip=0x00eb43; 	T(bp = sp;);	// 114390                  mov     bp, sp ;~ 17C5:EB43
cs=0x17c5;eip=0x00eb45; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 114391                  mov     bx, [bp+arg_0] ;~ 17C5:EB45
cs=0x17c5;eip=0x00eb48; 	T(dx = bx;);	// 114392                  mov     dx, bx ;~ 17C5:EB48
cs=0x17c5;eip=0x00eb4a; 	T(MOV(al, *(raddr(ds,bx))));	// 114393                  mov     al, [bx] ;~ 17C5:EB4A
cs=0x17c5;eip=0x00eb4c; 	T(OR(al, al));	// 114394                  or      al, al ;~ 17C5:EB4C
cs=0x17c5;eip=0x00eb4e; 	J(JZ(loc_34d91));	// 114395                  jz      short loc_34D91 ;~ 17C5:EB4E
loc_34d80:
	// 6785 
cs=0x17c5;eip=0x00eb50; 	T(SUB(al, 0x61));	// 114398                  sub     al, 61h ; 'a' ;~ 17C5:EB50
cs=0x17c5;eip=0x00eb52; 	T(CMP(al, 0x1A));	// 114399                  cmp     al, 1Ah ;~ 17C5:EB52
cs=0x17c5;eip=0x00eb54; 	J(JNC(loc_34d8a));	// 114400                  jnb     short loc_34D8A ;~ 17C5:EB54
cs=0x17c5;eip=0x00eb56; 	T(ADD(al, 0x41));	// 114401                  add     al, 41h ; 'A' ;~ 17C5:EB56
cs=0x17c5;eip=0x00eb58; 	X(MOV(*(raddr(ds,bx)), al));	// 114402                  mov     [bx], al ;~ 17C5:EB58
loc_34d8a:
	// 6786 
cs=0x17c5;eip=0x00eb5a; 	T(INC(bx));	// 114405                  inc     bx ;~ 17C5:EB5A
cs=0x17c5;eip=0x00eb5b; 	T(MOV(al, *(raddr(ds,bx))));	// 114406                  mov     al, [bx] ;~ 17C5:EB5B
cs=0x17c5;eip=0x00eb5d; 	T(OR(al, al));	// 114407                  or      al, al ;~ 17C5:EB5D
cs=0x17c5;eip=0x00eb5f; 	J(JNZ(loc_34d80));	// 114408                  jnz     short loc_34D80 ;~ 17C5:EB5F
loc_34d91:
	// 6787 
cs=0x17c5;eip=0x00eb61; 	T(XCHG(ax, dx));	// 114411                  xchg    ax, dx ;~ 17C5:EB61
cs=0x17c5;eip=0x00eb62; 	X(POP(bp));	// 114412                  pop     bp ;~ 17C5:EB62
cs=0x17c5;eip=0x00eb63; 	J(RETN(0));	// 114413                  retn ;~ 17C5:EB63

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34d80: 	goto loc_34d80;
        case m2c::kloc_34d8a: 	goto loc_34d8a;
        case m2c::kloc_34d91: 	goto loc_34d91;
        case m2c::ksub_34d72: 	goto sub_34d72;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34d94(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34d94:
    _begin:
#undef arg_0
#define arg_0 4
	// 114424 arg_0           = word ptr  4 ;~ 17C5:EB64
#undef arg_2
#define arg_2 6
	// 114425 arg_2           = word ptr  6 ;~ 17C5:EB64
#undef arg_4
#define arg_4 8
	// 114426 arg_4           = word ptr  8 ;~ 17C5:EB64
cs=0x17c5;eip=0x00eb64; 	X(PUSH(bp));	// 114428                  push    bp ;~ 17C5:EB64
cs=0x17c5;eip=0x00eb65; 	T(bp = sp;);	// 114429                  mov     bp, sp ;~ 17C5:EB65
cs=0x17c5;eip=0x00eb67; 	T(dx = di;);	// 114430                  mov     dx, di ;~ 17C5:EB67
cs=0x17c5;eip=0x00eb69; 	T(bx = si;);	// 114431                  mov     bx, si ;~ 17C5:EB69
cs=0x17c5;eip=0x00eb6b; 	T(ax = ds;);	// 114432                  mov     ax, ds ;~ 17C5:EB6B
cs=0x17c5;eip=0x00eb6d; 	T(es = ax;);	// 114433                  mov     es, ax ;~ 17C5:EB6D
cs=0x17c5;eip=0x00eb6f; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_2))));	// 114435                  mov     si, [bp+arg_2] ;~ 17C5:EB6F
cs=0x17c5;eip=0x00eb72; 	T(MOV(di, *(dw*)(raddr(ss,bp+arg_0))));	// 114436                  mov     di, [bp+arg_0] ;~ 17C5:EB72
cs=0x17c5;eip=0x00eb75; 	T(ax = di;);	// 114437                  mov     ax, di ;~ 17C5:EB75
cs=0x17c5;eip=0x00eb77; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 114438                  mov     cx, [bp+arg_4] ;~ 17C5:EB77
cs=0x17c5;eip=0x00eb7a; 	J(JCXZ(loc_34dba));	// 114439                  jcxz    short loc_34DBA ;~ 17C5:EB7A
cs=0x17c5;eip=0x00eb7c; 	T(TEST(al, 1));	// 114440                  test    al, 1 ;~ 17C5:EB7C
cs=0x17c5;eip=0x00eb7e; 	J(JZ(loc_34db2));	// 114441                  jz      short loc_34DB2 ;~ 17C5:EB7E
cs=0x17c5;eip=0x00eb80; 	X(MOVSB);	// 114442                  movsb ;~ 17C5:EB80
cs=0x17c5;eip=0x00eb81; 	T(DEC(cx));	// 114443                  dec     cx ;~ 17C5:EB81
loc_34db2:
	// 6788 
cs=0x17c5;eip=0x00eb82; 	T(SHR(cx, 1));	// 114446                  shr     cx, 1 ;~ 17C5:EB82
	// 114447                  rep movsw ;~ 17C5:EB84
cs=0x17c5;eip=0x00eb84; 	X(	REP MOVSW);	// 114447                  rep movsw ;~ 17C5:EB84
cs=0x17c5;eip=0x00eb86; 	T(ADC(cx, cx));	// 114448                  adc     cx, cx ;~ 17C5:EB86
	// 114449                  rep movsb ;~ 17C5:EB88
cs=0x17c5;eip=0x00eb88; 	X(	REP MOVSB);	// 114449                  rep movsb ;~ 17C5:EB88
loc_34dba:
	// 6789 
cs=0x17c5;eip=0x00eb8a; 	T(si = bx;);	// 114452                  mov     si, bx ;~ 17C5:EB8A
cs=0x17c5;eip=0x00eb8c; 	T(di = dx;);	// 114453                  mov     di, dx ;~ 17C5:EB8C
cs=0x17c5;eip=0x00eb8e; 	X(POP(bp));	// 114454                  pop     bp ;~ 17C5:EB8E
cs=0x17c5;eip=0x00eb8f; 	J(RETN(0));	// 114455                  retn ;~ 17C5:EB8F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34db2: 	goto loc_34db2;
        case m2c::kloc_34dba: 	goto loc_34dba;
        case m2c::ksub_34d94: 	goto sub_34d94;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34dc0(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34dc0:
    _begin:
#undef arg_0
#define arg_0 4
	// 114466 arg_0           = word ptr  4 ;~ 17C5:EB90
cs=0x17c5;eip=0x00eb90; 	X(PUSH(bp));	// 114468                  push    bp ;~ 17C5:EB90
cs=0x17c5;eip=0x00eb91; 	T(bp = sp;);	// 114469                  mov     bp, sp ;~ 17C5:EB91
cs=0x17c5;eip=0x00eb93; 	T(CMP(*(dw*)(raddr(ss,bp+arg_0)), 0));	// 114470                  cmp     [bp+arg_0], 0 ;~ 17C5:EB93
cs=0x17c5;eip=0x00eb97; 	J(JL(loc_34dce));	// 114471                  jl      short loc_34DCE ;~ 17C5:EB97
cs=0x17c5;eip=0x00eb99; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114472                  mov     ax, [bp+arg_0] ;~ 17C5:EB99
cs=0x17c5;eip=0x00eb9c; 	J(JMP(loc_34dd3));	// 114473                  jmp     short loc_34DD3 ;~ 17C5:EB9C
loc_34dce:
	// 6790 
cs=0x17c5;eip=0x00eb9e; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114477                  mov     ax, [bp+arg_0] ;~ 17C5:EB9E
cs=0x17c5;eip=0x00eba1; 	T(NEG(ax));	// 114478                  neg     ax ;~ 17C5:EBA1
loc_34dd3:
	// 6791 
cs=0x17c5;eip=0x00eba3; 	X(POP(bp));	// 114481                  pop     bp ;~ 17C5:EBA3
cs=0x17c5;eip=0x00eba4; 	J(RETN(0));	// 114482                  retn ;~ 17C5:EBA4

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34dce: 	goto loc_34dce;
        case m2c::kloc_34dd3: 	goto loc_34dd3;
        case m2c::ksub_34dc0: 	goto sub_34dc0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34dd6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34dd6:
    _begin:
#undef arg_0
#define arg_0 4
	// 114495 arg_0           = word ptr  4 ;~ 17C5:EBA6
#undef arg_2
#define arg_2 6
	// 114496 arg_2           = word ptr  6 ;~ 17C5:EBA6
cs=0x17c5;eip=0x00eba6; 	X(PUSH(bp));	// 114498                  push    bp ;~ 17C5:EBA6
cs=0x17c5;eip=0x00eba7; 	T(bp = sp;);	// 114499                  mov     bp, sp ;~ 17C5:EBA7
cs=0x17c5;eip=0x00eba9; 	T(CMP(*(dw*)(raddr(ss,bp+arg_2)), 0));	// 114500                  cmp     [bp+arg_2], 0 ;~ 17C5:EBA9
cs=0x17c5;eip=0x00ebad; 	J(JL(loc_34de8));	// 114501                  jl      short loc_34DE8 ;~ 17C5:EBAD
cs=0x17c5;eip=0x00ebaf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114502                  mov     ax, [bp+arg_0] ;~ 17C5:EBAF
cs=0x17c5;eip=0x00ebb2; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 114503                  mov     dx, [bp+arg_2] ;~ 17C5:EBB2
cs=0x17c5;eip=0x00ebb5; 	J(JMP(loc_34df5));	// 114504                  jmp     short loc_34DF5 ;~ 17C5:EBB5
loc_34de8:
	// 6792 
cs=0x17c5;eip=0x00ebb8; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114509                  mov     ax, [bp+arg_0] ;~ 17C5:EBB8
cs=0x17c5;eip=0x00ebbb; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 114510                  mov     dx, [bp+arg_2] ;~ 17C5:EBBB
cs=0x17c5;eip=0x00ebbe; 	T(NEG(ax));	// 114511                  neg     ax ;~ 17C5:EBBE
cs=0x17c5;eip=0x00ebc0; 	T(ADC(dx, 0));	// 114512                  adc     dx, 0 ;~ 17C5:EBC0
cs=0x17c5;eip=0x00ebc3; 	T(NEG(dx));	// 114513                  neg     dx ;~ 17C5:EBC3
loc_34df5:
	// 6793 
cs=0x17c5;eip=0x00ebc5; 	X(POP(bp));	// 114516                  pop     bp ;~ 17C5:EBC5
cs=0x17c5;eip=0x00ebc6; 	J(RETN(0));	// 114517                  retn ;~ 17C5:EBC6

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34de8: 	goto loc_34de8;
        case m2c::kloc_34df5: 	goto loc_34df5;
        case m2c::ksub_34dd6: 	goto sub_34dd6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34df8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34df8:
    _begin:
#undef arg_0
#define arg_0 4
	// 114529 arg_0           = word ptr  4 ;~ 17C5:EBC8
cs=0x17c5;eip=0x00ebc8; 	X(PUSH(bp));	// 114531                  push    bp ;~ 17C5:EBC8
cs=0x17c5;eip=0x00ebc9; 	T(bp = sp;);	// 114532                  mov     bp, sp ;~ 17C5:EBC9
cs=0x17c5;eip=0x00ebcb; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114533                  mov     ax, [bp+arg_0] ;~ 17C5:EBCB
cs=0x17c5;eip=0x00ebce; 	X(word_4ecc4 = ax;);	// 114534                  mov     ds:word_4ECC4, ax ;~ 17C5:EBCE
cs=0x17c5;eip=0x00ebd1; 	X(word_4ecc6 = 0;);	// 114535                  mov     ds:word_4ECC6, 0 ;~ 17C5:EBD1
cs=0x17c5;eip=0x00ebd7; 	X(POP(bp));	// 114536                  pop     bp ;~ 17C5:EBD7
cs=0x17c5;eip=0x00ebd8; 	J(RETN(0));	// 114537                  retn ;~ 17C5:EBD8

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_34df8: 	goto sub_34df8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34e0a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34e0a:
    _begin:
cs=0x17c5;eip=0x00ebda; 	T(ax = 0x43FD;);	// 114547                  mov     ax, 43FDh ;~ 17C5:EBDA
cs=0x17c5;eip=0x00ebdd; 	T(dx = 3;);	// 114548                  mov     dx, 3 ;~ 17C5:EBDD
cs=0x17c5;eip=0x00ebe0; 	X(PUSH(dx));	// 114549                  push    dx ;~ 17C5:EBE0
cs=0x17c5;eip=0x00ebe1; 	X(PUSH(ax));	// 114550                  push    ax ;~ 17C5:EBE1
cs=0x17c5;eip=0x00ebe2; 	X(PUSH(word_4ecc6));	// 114551                  push    ds:word_4ECC6 ;~ 17C5:EBE2
cs=0x17c5;eip=0x00ebe6; 	X(PUSH(word_4ecc4));	// 114552                  push    ds:word_4ECC4 ;~ 17C5:EBE6
cs=0x17c5;eip=0x00ebea; 	J(CALL(sub_34ee0,0));	// 114553                  call    sub_34EE0 ;~ 17C5:EBEA
cs=0x17c5;eip=0x00ebed; 	T(ADD(ax, 0x9EC3));	// 114554                  add     ax, 9EC3h ;~ 17C5:EBED
cs=0x17c5;eip=0x00ebf0; 	T(ADC(dx, 0x26));	// 114555                  adc     dx, 26h ; '&' ;~ 17C5:EBF0
cs=0x17c5;eip=0x00ebf3; 	X(word_4ecc4 = ax;);	// 114556                  mov     ds:word_4ECC4, ax ;~ 17C5:EBF3
cs=0x17c5;eip=0x00ebf6; 	X(word_4ecc6 = dx;);	// 114557                  mov     ds:word_4ECC6, dx ;~ 17C5:EBF6
cs=0x17c5;eip=0x00ebfa; 	T(ax = dx;);	// 114558                  mov     ax, dx ;~ 17C5:EBFA
cs=0x17c5;eip=0x00ebfc; 	T(AND(ah, 0x7F));	// 114559                  and     ah, 7Fh ;~ 17C5:EBFC
cs=0x17c5;eip=0x00ebff; 	J(RETN(0));	// 114560                  retn ;~ 17C5:EBFF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_34e0a: 	goto sub_34e0a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34e30(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34e30:
    _begin:
#undef arg_0
#define arg_0 4
	// 114571 arg_0           = byte ptr  4 ;~ 17C5:EC00
cs=0x17c5;eip=0x00ec00; 	X(PUSH(bp));	// 114573                  push    bp ;~ 17C5:EC00
cs=0x17c5;eip=0x00ec01; 	T(bp = sp;);	// 114574                  mov     bp, sp ;~ 17C5:EC01
cs=0x17c5;eip=0x00ec03; 	T(MOV(ah, *(raddr(ss,bp+arg_0))));	// 114575                  mov     ah, [bp+arg_0] ;~ 17C5:EC03
cs=0x17c5;eip=0x00ec06; 	S(_INT(0x16));	// 114576                  int     16h             ; KEYBOARD - ;~ 17C5:EC06
cs=0x17c5;eip=0x00ec08; 	J(JNZ(loc_34e42));	// 114577                  jnz     short loc_34E42 ;~ 17C5:EC08
cs=0x17c5;eip=0x00ec0a; 	T(CMP(*(raddr(ss,bp+arg_0)), 1));	// 114578                  cmp     [bp+arg_0], 1 ;~ 17C5:EC0A
cs=0x17c5;eip=0x00ec0e; 	J(JNZ(loc_34e42));	// 114579                  jnz     short loc_34E42 ;~ 17C5:EC0E
cs=0x17c5;eip=0x00ec10; 	T(XOR(ax, ax));	// 114580                  xor     ax, ax ;~ 17C5:EC10
loc_34e42:
	// 6794 
cs=0x17c5;eip=0x00ec12; 	X(POP(bp));	// 114584                  pop     bp ;~ 17C5:EC12
cs=0x17c5;eip=0x00ec13; 	J(RETN(0));	// 114585                  retn ;~ 17C5:EC13

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34e42: 	goto loc_34e42;
        case m2c::ksub_34e30: 	goto sub_34e30;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34e44(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34e44:
    _begin:
#undef arg_0
#define arg_0 4
	// 114596 arg_0           = word ptr  4 ;~ 17C5:EC14
#undef arg_2
#define arg_2 6
	// 114597 arg_2           = word ptr  6 ;~ 17C5:EC14
#undef arg_4
#define arg_4 8
	// 114598 arg_4           = word ptr  8 ;~ 17C5:EC14
#undef arg_6
#define arg_6 0x0A
	// 114599 arg_6           = word ptr  0Ah ;~ 17C5:EC14
cs=0x17c5;eip=0x00ec14; 	X(PUSH(bp));	// 114601                  push    bp ;~ 17C5:EC14
cs=0x17c5;eip=0x00ec15; 	T(bp = sp;);	// 114602                  mov     bp, sp ;~ 17C5:EC15
cs=0x17c5;eip=0x00ec17; 	X(PUSH(di));	// 114603                  push    di ;~ 17C5:EC17
cs=0x17c5;eip=0x00ec18; 	X(PUSH(si));	// 114604                  push    si ;~ 17C5:EC18
cs=0x17c5;eip=0x00ec19; 	X(PUSH(bx));	// 114605                  push    bx ;~ 17C5:EC19
cs=0x17c5;eip=0x00ec1a; 	T(XOR(di, di));	// 114606                  xor     di, di ;~ 17C5:EC1A
cs=0x17c5;eip=0x00ec1c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 114607                  mov     ax, [bp+arg_2] ;~ 17C5:EC1C
cs=0x17c5;eip=0x00ec1f; 	T(OR(ax, ax));	// 114608                  or      ax, ax ;~ 17C5:EC1F
cs=0x17c5;eip=0x00ec21; 	J(JGE(loc_34e64));	// 114609                  jge     short loc_34E64 ;~ 17C5:EC21
cs=0x17c5;eip=0x00ec23; 	T(INC(di));	// 114610                  inc     di ;~ 17C5:EC23
cs=0x17c5;eip=0x00ec24; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 114611                  mov     dx, [bp+arg_0] ;~ 17C5:EC24
cs=0x17c5;eip=0x00ec27; 	T(NEG(ax));	// 114612                  neg     ax ;~ 17C5:EC27
cs=0x17c5;eip=0x00ec29; 	T(NEG(dx));	// 114613                  neg     dx ;~ 17C5:EC29
cs=0x17c5;eip=0x00ec2b; 	T(SBB(ax, 0));	// 114614                  sbb     ax, 0 ;~ 17C5:EC2B
cs=0x17c5;eip=0x00ec2e; 	X(MOV(*(dw*)(raddr(ss,bp+arg_2)), ax));	// 114615                  mov     [bp+arg_2], ax ;~ 17C5:EC2E
cs=0x17c5;eip=0x00ec31; 	X(MOV(*(dw*)(raddr(ss,bp+arg_0)), dx));	// 114616                  mov     [bp+arg_0], dx ;~ 17C5:EC31
loc_34e64:
	// 6795 
cs=0x17c5;eip=0x00ec34; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 114619                  mov     ax, [bp+arg_6] ;~ 17C5:EC34
cs=0x17c5;eip=0x00ec37; 	T(OR(ax, ax));	// 114620                  or      ax, ax ;~ 17C5:EC37
cs=0x17c5;eip=0x00ec39; 	J(JGE(loc_34e7c));	// 114621                  jge     short loc_34E7C ;~ 17C5:EC39
cs=0x17c5;eip=0x00ec3b; 	T(INC(di));	// 114622                  inc     di ;~ 17C5:EC3B
cs=0x17c5;eip=0x00ec3c; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_4))));	// 114623                  mov     dx, [bp+arg_4] ;~ 17C5:EC3C
cs=0x17c5;eip=0x00ec3f; 	T(NEG(ax));	// 114624                  neg     ax ;~ 17C5:EC3F
cs=0x17c5;eip=0x00ec41; 	T(NEG(dx));	// 114625                  neg     dx ;~ 17C5:EC41
cs=0x17c5;eip=0x00ec43; 	T(SBB(ax, 0));	// 114626                  sbb     ax, 0 ;~ 17C5:EC43
cs=0x17c5;eip=0x00ec46; 	X(MOV(*(dw*)(raddr(ss,bp+arg_6)), ax));	// 114627                  mov     [bp+arg_6], ax ;~ 17C5:EC46
cs=0x17c5;eip=0x00ec49; 	X(MOV(*(dw*)(raddr(ss,bp+arg_4)), dx));	// 114628                  mov     [bp+arg_4], dx ;~ 17C5:EC49
loc_34e7c:
	// 6796 
cs=0x17c5;eip=0x00ec4c; 	T(OR(ax, ax));	// 114631                  or      ax, ax ;~ 17C5:EC4C
cs=0x17c5;eip=0x00ec4e; 	J(JNZ(loc_34e95));	// 114632                  jnz     short loc_34E95 ;~ 17C5:EC4E
cs=0x17c5;eip=0x00ec50; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 114633                  mov     cx, [bp+arg_4] ;~ 17C5:EC50
cs=0x17c5;eip=0x00ec53; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 114634                  mov     ax, [bp+arg_2] ;~ 17C5:EC53
cs=0x17c5;eip=0x00ec56; 	T(XOR(dx, dx));	// 114635                  xor     dx, dx ;~ 17C5:EC56
cs=0x17c5;eip=0x00ec58; 	T(DIV2(cx));	// 114636                  div     cx ;~ 17C5:EC58
cs=0x17c5;eip=0x00ec5a; 	T(bx = ax;);	// 114637                  mov     bx, ax ;~ 17C5:EC5A
cs=0x17c5;eip=0x00ec5c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114638                  mov     ax, [bp+arg_0] ;~ 17C5:EC5C
cs=0x17c5;eip=0x00ec5f; 	T(DIV2(cx));	// 114639                  div     cx ;~ 17C5:EC5F
cs=0x17c5;eip=0x00ec61; 	T(dx = bx;);	// 114640                  mov     dx, bx ;~ 17C5:EC61
cs=0x17c5;eip=0x00ec63; 	J(JMP(loc_34ecd));	// 114641                  jmp     short loc_34ECD ;~ 17C5:EC63
loc_34e95:
	// 6797 
cs=0x17c5;eip=0x00ec65; 	T(bx = ax;);	// 114645                  mov     bx, ax ;~ 17C5:EC65
cs=0x17c5;eip=0x00ec67; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 114646                  mov     cx, [bp+arg_4] ;~ 17C5:EC67
cs=0x17c5;eip=0x00ec6a; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 114647                  mov     dx, [bp+arg_2] ;~ 17C5:EC6A
cs=0x17c5;eip=0x00ec6d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114648                  mov     ax, [bp+arg_0] ;~ 17C5:EC6D
loc_34ea0:
	// 6798 
cs=0x17c5;eip=0x00ec70; 	T(SHR(bx, 1));	// 114651                  shr     bx, 1 ;~ 17C5:EC70
cs=0x17c5;eip=0x00ec72; 	T(RCR(cx, 1));	// 114652                  rcr     cx, 1 ;~ 17C5:EC72
cs=0x17c5;eip=0x00ec74; 	T(SHR(dx, 1));	// 114653                  shr     dx, 1 ;~ 17C5:EC74
cs=0x17c5;eip=0x00ec76; 	T(RCR(ax, 1));	// 114654                  rcr     ax, 1 ;~ 17C5:EC76
cs=0x17c5;eip=0x00ec78; 	T(OR(bx, bx));	// 114655                  or      bx, bx ;~ 17C5:EC78
cs=0x17c5;eip=0x00ec7a; 	J(JNZ(loc_34ea0));	// 114656                  jnz     short loc_34EA0 ;~ 17C5:EC7A
cs=0x17c5;eip=0x00ec7c; 	T(DIV2(cx));	// 114657                  div     cx ;~ 17C5:EC7C
cs=0x17c5;eip=0x00ec7e; 	T(si = ax;);	// 114658                  mov     si, ax ;~ 17C5:EC7E
cs=0x17c5;eip=0x00ec80; 	X(MUL1_2(*(dw*)(raddr(ss,bp+arg_6))));	// 114659                  mul     [bp+arg_6] ;~ 17C5:EC80
cs=0x17c5;eip=0x00ec83; 	T(XCHG(ax, cx));	// 114660                  xchg    ax, cx ;~ 17C5:EC83
cs=0x17c5;eip=0x00ec84; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 114661                  mov     ax, [bp+arg_4] ;~ 17C5:EC84
cs=0x17c5;eip=0x00ec87; 	T(MUL1_2(si));	// 114662                  mul     si ;~ 17C5:EC87
cs=0x17c5;eip=0x00ec89; 	T(ADD(dx, cx));	// 114663                  add     dx, cx ;~ 17C5:EC89
cs=0x17c5;eip=0x00ec8b; 	J(JC(loc_34ec9));	// 114664                  jb      short loc_34EC9 ;~ 17C5:EC8B
cs=0x17c5;eip=0x00ec8d; 	T(CMP(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 114665                  cmp     dx, [bp+arg_2] ;~ 17C5:EC8D
cs=0x17c5;eip=0x00ec90; 	J(JA(loc_34ec9));	// 114666                  ja      short loc_34EC9 ;~ 17C5:EC90
cs=0x17c5;eip=0x00ec92; 	J(JC(loc_34eca));	// 114667                  jb      short loc_34ECA ;~ 17C5:EC92
cs=0x17c5;eip=0x00ec94; 	T(CMP(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114668                  cmp     ax, [bp+arg_0] ;~ 17C5:EC94
cs=0x17c5;eip=0x00ec97; 	J(JBE(loc_34eca));	// 114669                  jbe     short loc_34ECA ;~ 17C5:EC97
loc_34ec9:
	// 6799 
cs=0x17c5;eip=0x00ec99; 	T(DEC(si));	// 114673                  dec     si ;~ 17C5:EC99
loc_34eca:
	// 6800 
cs=0x17c5;eip=0x00ec9a; 	T(XOR(dx, dx));	// 114677                  xor     dx, dx ;~ 17C5:EC9A
cs=0x17c5;eip=0x00ec9c; 	T(XCHG(ax, si));	// 114678                  xchg    ax, si ;~ 17C5:EC9C
loc_34ecd:
	// 6801 
cs=0x17c5;eip=0x00ec9d; 	T(DEC(di));	// 114681                  dec     di ;~ 17C5:EC9D
cs=0x17c5;eip=0x00ec9e; 	J(JNZ(loc_34ed7));	// 114682                  jnz     short loc_34ED7 ;~ 17C5:EC9E
cs=0x17c5;eip=0x00eca0; 	T(NEG(dx));	// 114683                  neg     dx ;~ 17C5:ECA0
cs=0x17c5;eip=0x00eca2; 	T(NEG(ax));	// 114684                  neg     ax ;~ 17C5:ECA2
cs=0x17c5;eip=0x00eca4; 	T(SBB(dx, 0));	// 114685                  sbb     dx, 0 ;~ 17C5:ECA4
loc_34ed7:
	// 6802 
cs=0x17c5;eip=0x00eca7; 	X(POP(bx));	// 114688                  pop     bx ;~ 17C5:ECA7
cs=0x17c5;eip=0x00eca8; 	X(POP(si));	// 114689                  pop     si ;~ 17C5:ECA8
cs=0x17c5;eip=0x00eca9; 	X(POP(di));	// 114690                  pop     di ;~ 17C5:ECA9
cs=0x17c5;eip=0x00ecaa; 	T(sp = bp;);	// 114691                  mov     sp, bp ;~ 17C5:ECAA
cs=0x17c5;eip=0x00ecac; 	X(POP(bp));	// 114692                  pop     bp ;~ 17C5:ECAC
cs=0x17c5;eip=0x00ecad; 	J(RETN(8));	// 114693                  retn    8 ;~ 17C5:ECAD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34e64: 	goto loc_34e64;
        case m2c::kloc_34e7c: 	goto loc_34e7c;
        case m2c::kloc_34e95: 	goto loc_34e95;
        case m2c::kloc_34ea0: 	goto loc_34ea0;
        case m2c::kloc_34ec9: 	goto loc_34ec9;
        case m2c::kloc_34eca: 	goto loc_34eca;
        case m2c::kloc_34ecd: 	goto loc_34ecd;
        case m2c::kloc_34ed7: 	goto loc_34ed7;
        case m2c::ksub_34e44: 	goto sub_34e44;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34ee0(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34ee0:
    _begin:
#undef arg_0
#define arg_0 4
	// 114704 arg_0           = word ptr  4 ;~ 17C5:ECB0
#undef arg_2
#define arg_2 6
	// 114705 arg_2           = word ptr  6 ;~ 17C5:ECB0
#undef arg_4
#define arg_4 8
	// 114706 arg_4           = word ptr  8 ;~ 17C5:ECB0
#undef arg_6
#define arg_6 0x0A
	// 114707 arg_6           = word ptr  0Ah ;~ 17C5:ECB0
cs=0x17c5;eip=0x00ecb0; 	X(PUSH(bp));	// 114709                  push    bp ;~ 17C5:ECB0
cs=0x17c5;eip=0x00ecb1; 	T(bp = sp;);	// 114710                  mov     bp, sp ;~ 17C5:ECB1
cs=0x17c5;eip=0x00ecb3; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 114711                  mov     ax, [bp+arg_2] ;~ 17C5:ECB3
cs=0x17c5;eip=0x00ecb6; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_6))));	// 114712                  mov     bx, [bp+arg_6] ;~ 17C5:ECB6
cs=0x17c5;eip=0x00ecb9; 	T(OR(bx, ax));	// 114713                  or      bx, ax ;~ 17C5:ECB9
cs=0x17c5;eip=0x00ecbb; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_4))));	// 114714                  mov     bx, [bp+arg_4] ;~ 17C5:ECBB
cs=0x17c5;eip=0x00ecbe; 	J(JNZ(loc_34efb));	// 114715                  jnz     short loc_34EFB ;~ 17C5:ECBE
cs=0x17c5;eip=0x00ecc0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114716                  mov     ax, [bp+arg_0] ;~ 17C5:ECC0
cs=0x17c5;eip=0x00ecc3; 	T(MUL1_2(bx));	// 114717                  mul     bx ;~ 17C5:ECC3
cs=0x17c5;eip=0x00ecc5; 	T(sp = bp;);	// 114718                  mov     sp, bp ;~ 17C5:ECC5
cs=0x17c5;eip=0x00ecc7; 	X(POP(bp));	// 114719                  pop     bp ;~ 17C5:ECC7
cs=0x17c5;eip=0x00ecc8; 	J(RETN(8));	// 114720                  retn    8 ;~ 17C5:ECC8
loc_34efb:
	// 6803 
cs=0x17c5;eip=0x00eccb; 	T(MUL1_2(bx));	// 114724                  mul     bx ;~ 17C5:ECCB
cs=0x17c5;eip=0x00eccd; 	T(cx = ax;);	// 114725                  mov     cx, ax ;~ 17C5:ECCD
cs=0x17c5;eip=0x00eccf; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114726                  mov     ax, [bp+arg_0] ;~ 17C5:ECCF
cs=0x17c5;eip=0x00ecd2; 	X(MUL1_2(*(dw*)(raddr(ss,bp+arg_6))));	// 114727                  mul     [bp+arg_6] ;~ 17C5:ECD2
cs=0x17c5;eip=0x00ecd5; 	T(ADD(cx, ax));	// 114728                  add     cx, ax ;~ 17C5:ECD5
cs=0x17c5;eip=0x00ecd7; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114729                  mov     ax, [bp+arg_0] ;~ 17C5:ECD7
cs=0x17c5;eip=0x00ecda; 	T(MUL1_2(bx));	// 114730                  mul     bx ;~ 17C5:ECDA
cs=0x17c5;eip=0x00ecdc; 	T(ADD(dx, cx));	// 114731                  add     dx, cx ;~ 17C5:ECDC
cs=0x17c5;eip=0x00ecde; 	T(sp = bp;);	// 114732                  mov     sp, bp ;~ 17C5:ECDE
cs=0x17c5;eip=0x00ece0; 	X(POP(bp));	// 114733                  pop     bp ;~ 17C5:ECE0
cs=0x17c5;eip=0x00ece1; 	J(RETN(8));	// 114734                  retn    8 ;~ 17C5:ECE1

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34efb: 	goto loc_34efb;
        case m2c::ksub_34ee0: 	goto sub_34ee0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34f14(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34f14:
    _begin:
#undef arg_0
#define arg_0 4
	// 114745 arg_0           = word ptr  4 ;~ 17C5:ECE4
#undef arg_2
#define arg_2 6
	// 114746 arg_2           = word ptr  6 ;~ 17C5:ECE4
cs=0x17c5;eip=0x00ece4; 	X(PUSH(bp));	// 114748                  push    bp ;~ 17C5:ECE4
cs=0x17c5;eip=0x00ece5; 	T(bp = sp;);	// 114749                  mov     bp, sp ;~ 17C5:ECE5
cs=0x17c5;eip=0x00ece7; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 114750                  mov     bx, [bp+arg_0] ;~ 17C5:ECE7
cs=0x17c5;eip=0x00ecea; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 114751                  mov     ax, [bx] ;~ 17C5:ECEA
cs=0x17c5;eip=0x00ecec; 	T(MOV(dx, *(dw*)(raddr(ds,bx+2))));	// 114752                  mov     dx, [bx+2] ;~ 17C5:ECEC
cs=0x17c5;eip=0x00ecef; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_2))));	// 114753                  mov     cx, [bp+arg_2] ;~ 17C5:ECEF
cs=0x17c5;eip=0x00ecf2; 	J(CALL(sub_354a0,0));	// 114754                  call    sub_354A0 ;~ 17C5:ECF2
cs=0x17c5;eip=0x00ecf5; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 114755                  mov     bx, [bp+arg_0] ;~ 17C5:ECF5
cs=0x17c5;eip=0x00ecf8; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 114756                  mov     [bx], ax ;~ 17C5:ECF8
cs=0x17c5;eip=0x00ecfa; 	X(MOV(*(dw*)(raddr(ds,bx+2)), dx));	// 114757                  mov     [bx+2], dx ;~ 17C5:ECFA
cs=0x17c5;eip=0x00ecfd; 	T(sp = bp;);	// 114758                  mov     sp, bp ;~ 17C5:ECFD
cs=0x17c5;eip=0x00ecff; 	X(POP(bp));	// 114759                  pop     bp ;~ 17C5:ECFF
cs=0x17c5;eip=0x00ed00; 	J(RETN(4));	// 114760                  retn    4 ;~ 17C5:ED00

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_34f14: 	goto sub_34f14;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34f34(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34f34:
    _begin:
#undef arg_0
#define arg_0 4
	// 114773 arg_0           = word ptr  4 ;~ 17C5:ED04
#undef arg_2
#define arg_2 6
	// 114774 arg_2           = word ptr  6 ;~ 17C5:ED04
cs=0x17c5;eip=0x00ed04; 	X(PUSH(bp));	// 114776                  push    bp ;~ 17C5:ED04
cs=0x17c5;eip=0x00ed05; 	T(bp = sp;);	// 114777                  mov     bp, sp ;~ 17C5:ED05
cs=0x17c5;eip=0x00ed07; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 114778                  mov     bx, [bp+arg_0] ;~ 17C5:ED07
cs=0x17c5;eip=0x00ed0a; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 114779                  mov     ax, [bx] ;~ 17C5:ED0A
cs=0x17c5;eip=0x00ed0c; 	T(MOV(dx, *(dw*)(raddr(ds,bx+2))));	// 114780                  mov     dx, [bx+2] ;~ 17C5:ED0C
cs=0x17c5;eip=0x00ed0f; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_2))));	// 114781                  mov     cx, [bp+arg_2] ;~ 17C5:ED0F
cs=0x17c5;eip=0x00ed12; 	J(CALL(sub_354ac,0));	// 114782                  call    sub_354AC ;~ 17C5:ED12
cs=0x17c5;eip=0x00ed15; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 114783                  mov     bx, [bp+arg_0] ;~ 17C5:ED15
cs=0x17c5;eip=0x00ed18; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 114784                  mov     [bx], ax ;~ 17C5:ED18
cs=0x17c5;eip=0x00ed1a; 	X(MOV(*(dw*)(raddr(ds,bx+2)), dx));	// 114785                  mov     [bx+2], dx ;~ 17C5:ED1A
cs=0x17c5;eip=0x00ed1d; 	T(sp = bp;);	// 114786                  mov     sp, bp ;~ 17C5:ED1D
cs=0x17c5;eip=0x00ed1f; 	X(POP(bp));	// 114787                  pop     bp ;~ 17C5:ED1F
cs=0x17c5;eip=0x00ed20; 	J(RETN(4));	// 114788                  retn    4 ;~ 17C5:ED20

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_34f34: 	goto sub_34f34;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34f54(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34f54:
    _begin:
#undef arg_0
#define arg_0 4
	// 114801 arg_0           = word ptr  4 ;~ 17C5:ED24
#undef arg_2
#define arg_2 6
	// 114802 arg_2           = word ptr  6 ;~ 17C5:ED24
#undef arg_4
#define arg_4 8
	// 114803 arg_4           = word ptr  8 ;~ 17C5:ED24
#undef arg_6
#define arg_6 0x0A
	// 114804 arg_6           = word ptr  0Ah ;~ 17C5:ED24
cs=0x17c5;eip=0x00ed24; 	X(PUSH(bp));	// 114806                  push    bp ;~ 17C5:ED24
cs=0x17c5;eip=0x00ed25; 	T(bp = sp;);	// 114807                  mov     bp, sp ;~ 17C5:ED25
cs=0x17c5;eip=0x00ed27; 	X(PUSH(bx));	// 114808                  push    bx ;~ 17C5:ED27
cs=0x17c5;eip=0x00ed28; 	X(PUSH(si));	// 114809                  push    si ;~ 17C5:ED28
cs=0x17c5;eip=0x00ed29; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_6))));	// 114810                  mov     ax, [bp+arg_6] ;~ 17C5:ED29
cs=0x17c5;eip=0x00ed2c; 	T(OR(ax, ax));	// 114811                  or      ax, ax ;~ 17C5:ED2C
cs=0x17c5;eip=0x00ed2e; 	J(JNZ(loc_34f75));	// 114812                  jnz     short loc_34F75 ;~ 17C5:ED2E
cs=0x17c5;eip=0x00ed30; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 114813                  mov     cx, [bp+arg_4] ;~ 17C5:ED30
cs=0x17c5;eip=0x00ed33; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 114814                  mov     ax, [bp+arg_2] ;~ 17C5:ED33
cs=0x17c5;eip=0x00ed36; 	T(XOR(dx, dx));	// 114815                  xor     dx, dx ;~ 17C5:ED36
cs=0x17c5;eip=0x00ed38; 	T(DIV2(cx));	// 114816                  div     cx ;~ 17C5:ED38
cs=0x17c5;eip=0x00ed3a; 	T(bx = ax;);	// 114817                  mov     bx, ax ;~ 17C5:ED3A
cs=0x17c5;eip=0x00ed3c; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114818                  mov     ax, [bp+arg_0] ;~ 17C5:ED3C
cs=0x17c5;eip=0x00ed3f; 	T(DIV2(cx));	// 114819                  div     cx ;~ 17C5:ED3F
cs=0x17c5;eip=0x00ed41; 	T(dx = bx;);	// 114820                  mov     dx, bx ;~ 17C5:ED41
cs=0x17c5;eip=0x00ed43; 	J(JMP(loc_34fad));	// 114821                  jmp     short loc_34FAD ;~ 17C5:ED43
loc_34f75:
	// 6804 
cs=0x17c5;eip=0x00ed45; 	T(cx = ax;);	// 114825                  mov     cx, ax ;~ 17C5:ED45
cs=0x17c5;eip=0x00ed47; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_4))));	// 114826                  mov     bx, [bp+arg_4] ;~ 17C5:ED47
cs=0x17c5;eip=0x00ed4a; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 114827                  mov     dx, [bp+arg_2] ;~ 17C5:ED4A
cs=0x17c5;eip=0x00ed4d; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114828                  mov     ax, [bp+arg_0] ;~ 17C5:ED4D
loc_34f80:
	// 6805 
cs=0x17c5;eip=0x00ed50; 	T(SHR(cx, 1));	// 114831                  shr     cx, 1 ;~ 17C5:ED50
cs=0x17c5;eip=0x00ed52; 	T(RCR(bx, 1));	// 114832                  rcr     bx, 1 ;~ 17C5:ED52
cs=0x17c5;eip=0x00ed54; 	T(SHR(dx, 1));	// 114833                  shr     dx, 1 ;~ 17C5:ED54
cs=0x17c5;eip=0x00ed56; 	T(RCR(ax, 1));	// 114834                  rcr     ax, 1 ;~ 17C5:ED56
cs=0x17c5;eip=0x00ed58; 	T(OR(cx, cx));	// 114835                  or      cx, cx ;~ 17C5:ED58
cs=0x17c5;eip=0x00ed5a; 	J(JNZ(loc_34f80));	// 114836                  jnz     short loc_34F80 ;~ 17C5:ED5A
cs=0x17c5;eip=0x00ed5c; 	T(DIV2(bx));	// 114837                  div     bx ;~ 17C5:ED5C
cs=0x17c5;eip=0x00ed5e; 	T(si = ax;);	// 114838                  mov     si, ax ;~ 17C5:ED5E
cs=0x17c5;eip=0x00ed60; 	X(MUL1_2(*(dw*)(raddr(ss,bp+arg_6))));	// 114839                  mul     [bp+arg_6] ;~ 17C5:ED60
cs=0x17c5;eip=0x00ed63; 	T(XCHG(ax, cx));	// 114840                  xchg    ax, cx ;~ 17C5:ED63
cs=0x17c5;eip=0x00ed64; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_4))));	// 114841                  mov     ax, [bp+arg_4] ;~ 17C5:ED64
cs=0x17c5;eip=0x00ed67; 	T(MUL1_2(si));	// 114842                  mul     si ;~ 17C5:ED67
cs=0x17c5;eip=0x00ed69; 	T(ADD(dx, cx));	// 114843                  add     dx, cx ;~ 17C5:ED69
cs=0x17c5;eip=0x00ed6b; 	J(JC(loc_34fa9));	// 114844                  jb      short loc_34FA9 ;~ 17C5:ED6B
cs=0x17c5;eip=0x00ed6d; 	T(CMP(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 114845                  cmp     dx, [bp+arg_2] ;~ 17C5:ED6D
cs=0x17c5;eip=0x00ed70; 	J(JA(loc_34fa9));	// 114846                  ja      short loc_34FA9 ;~ 17C5:ED70
cs=0x17c5;eip=0x00ed72; 	J(JC(loc_34faa));	// 114847                  jb      short loc_34FAA ;~ 17C5:ED72
cs=0x17c5;eip=0x00ed74; 	T(CMP(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 114848                  cmp     ax, [bp+arg_0] ;~ 17C5:ED74
cs=0x17c5;eip=0x00ed77; 	J(JBE(loc_34faa));	// 114849                  jbe     short loc_34FAA ;~ 17C5:ED77
loc_34fa9:
	// 6806 
cs=0x17c5;eip=0x00ed79; 	T(DEC(si));	// 114853                  dec     si ;~ 17C5:ED79
loc_34faa:
	// 6807 
cs=0x17c5;eip=0x00ed7a; 	T(XOR(dx, dx));	// 114857                  xor     dx, dx ;~ 17C5:ED7A
cs=0x17c5;eip=0x00ed7c; 	T(XCHG(ax, si));	// 114858                  xchg    ax, si ;~ 17C5:ED7C
loc_34fad:
	// 6808 
cs=0x17c5;eip=0x00ed7d; 	X(POP(si));	// 114861                  pop     si ;~ 17C5:ED7D
cs=0x17c5;eip=0x00ed7e; 	X(POP(bx));	// 114862                  pop     bx ;~ 17C5:ED7E
cs=0x17c5;eip=0x00ed7f; 	T(sp = bp;);	// 114863                  mov     sp, bp ;~ 17C5:ED7F
cs=0x17c5;eip=0x00ed81; 	X(POP(bp));	// 114864                  pop     bp ;~ 17C5:ED81
cs=0x17c5;eip=0x00ed82; 	J(RETN(8));	// 114865                  retn    8 ;~ 17C5:ED82

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34f75: 	goto loc_34f75;
        case m2c::kloc_34f80: 	goto loc_34f80;
        case m2c::kloc_34fa9: 	goto loc_34fa9;
        case m2c::kloc_34faa: 	goto loc_34faa;
        case m2c::kloc_34fad: 	goto loc_34fad;
        case m2c::ksub_34f54: 	goto sub_34f54;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34fb6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34fb6:
    _begin:
cs=0x17c5;eip=0x00ed86; 	X(PUSH(bp));	// 114877                  push    bp ;~ 17C5:ED86
cs=0x17c5;eip=0x00ed87; 	T(bp = sp;);	// 114878                  mov     bp, sp ;~ 17C5:ED87
cs=0x17c5;eip=0x00ed89; 	T(ax = 0x0FC;);	// 114879                  mov     ax, 0FCh ;~ 17C5:ED89
cs=0x17c5;eip=0x00ed8c; 	X(PUSH(ax));	// 114880                  push    ax ;~ 17C5:ED8C
cs=0x17c5;eip=0x00ed8d; 	J(CALL(sub_35029,0));	// 114881                  call    sub_35029 ;~ 17C5:ED8D
cs=0x17c5;eip=0x00ed90; 	T(CMP(word_4ecc8, 0));	// 114882                  cmp     ds:word_4ECC8, 0 ;~ 17C5:ED90
cs=0x17c5;eip=0x00ed95; 	J(JZ(loc_34fcb));	// 114883                  jz      short loc_34FCB ;~ 17C5:ED95
cs=0x17c5;eip=0x00ed97; 	J(CALL(__dispatch_call,word_4ecc8));	// 114884                  call    ds:word_4ECC8 ;~ 17C5:ED97
loc_34fcb:
	// 6809 
cs=0x17c5;eip=0x00ed9b; 	T(ax = 0x0FF;);	// 114887                  mov     ax, 0FFh ;~ 17C5:ED9B
cs=0x17c5;eip=0x00ed9e; 	X(PUSH(ax));	// 114888                  push    ax ;~ 17C5:ED9E
cs=0x17c5;eip=0x00ed9f; 	J(CALL(sub_35029,0));	// 114889                  call    sub_35029 ;~ 17C5:ED9F
cs=0x17c5;eip=0x00eda2; 	T(sp = bp;);	// 114890                  mov     sp, bp ;~ 17C5:EDA2
cs=0x17c5;eip=0x00eda4; 	X(POP(bp));	// 114891                  pop     bp ;~ 17C5:EDA4
cs=0x17c5;eip=0x00eda5; 	J(RETN(0));	// 114892                  retn ;~ 17C5:EDA5

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34fcb: 	goto loc_34fcb;
        case m2c::ksub_34fb6: 	goto sub_34fb6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_eda6_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_eda6_proc:
    _begin:
loc_34fd6:
	// 6810 
cs=0x17c5;eip=0x00eda6; 	T(ax = 2;);	// 114899                  mov     ax, 2 ;~ 17C5:EDA6
cs=0x17c5;eip=0x00eda9; 	J(return _group66(m2c::kloc_34705, _state););	// 114900                  jmp     loc_34705 ;~ 17C5:EDA9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kseg2623_eda6_proc: 	goto seg2623_eda6_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34fdc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34fdc:
    _begin:
cs=0x17c5;eip=0x00edac; 	X(PUSH(si));	// 114907                  push    si ;~ 17C5:EDAC
cs=0x17c5;eip=0x00edad; 	T(XOR(si, si));	// 114908                  xor     si, si ;~ 17C5:EDAD
cs=0x17c5;eip=0x00edaf; 	T(cx = 0x42;);	// 114909                  mov     cx, 42h ; 'B' ;~ 17C5:EDAF
cs=0x17c5;eip=0x00edb2; 	T(XOR(ah, ah));	// 114910                  xor     ah, ah ;~ 17C5:EDB2
cs=0x17c5;eip=0x00edb4; 	T(CLD);	// 114911                  cld ;~ 17C5:EDB4
loc_34fe5:
	// 6811 
cs=0x17c5;eip=0x00edb5; 	T(LODSB);	// 114914                  lodsb ;~ 17C5:EDB5
cs=0x17c5;eip=0x00edb6; 	T(XOR(ah, al));	// 114915                  xor     ah, al ;~ 17C5:EDB6
cs=0x17c5;eip=0x00edb8; 	J(LOOP(loc_34fe5));	// 114916                  loop    loc_34FE5 ;~ 17C5:EDB8
cs=0x17c5;eip=0x00edba; 	T(XOR(ah, 0x55));	// 114917                  xor     ah, 55h ;~ 17C5:EDBA
cs=0x17c5;eip=0x00edbd; 	J(JZ(loc_34ffc));	// 114918                  jz      short loc_34FFC ;~ 17C5:EDBD
cs=0x17c5;eip=0x00edbf; 	J(CALL(sub_34fb6,0));	// 114919                  call    sub_34FB6 ;~ 17C5:EDBF
cs=0x17c5;eip=0x00edc2; 	T(ax = 1;);	// 114920                  mov     ax, 1 ;~ 17C5:EDC2
cs=0x17c5;eip=0x00edc5; 	X(PUSH(ax));	// 114921                  push    ax ;~ 17C5:EDC5
cs=0x17c5;eip=0x00edc6; 	J(CALL(sub_35029,0));	// 114922                  call    sub_35029 ;~ 17C5:EDC6
cs=0x17c5;eip=0x00edc9; 	T(ax = 1;);	// 114923                  mov     ax, 1 ;~ 17C5:EDC9
loc_34ffc:
	// 6812 
cs=0x17c5;eip=0x00edcc; 	X(POP(si));	// 114926                  pop     si ;~ 17C5:EDCC
cs=0x17c5;eip=0x00edcd; 	J(RETN(0));	// 114927                  retn ;~ 17C5:EDCD

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_34fe5: 	goto loc_34fe5;
        case m2c::kloc_34ffc: 	goto loc_34ffc;
        case m2c::ksub_34fdc: 	goto sub_34fdc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_34ffe(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_34ffe:
    _begin:
#undef arg_0
#define arg_0 4
	// 114937 arg_0           = word ptr  4 ;~ 17C5:EDCE
cs=0x17c5;eip=0x00edce; 	X(PUSH(bp));	// 114939                  push    bp ;~ 17C5:EDCE
cs=0x17c5;eip=0x00edcf; 	T(bp = sp;);	// 114940                  mov     bp, sp ;~ 17C5:EDCF
cs=0x17c5;eip=0x00edd1; 	X(PUSH(si));	// 114941                  push    si ;~ 17C5:EDD1
cs=0x17c5;eip=0x00edd2; 	X(PUSH(di));	// 114942                  push    di ;~ 17C5:EDD2
cs=0x17c5;eip=0x00edd3; 	X(PUSH(ds));	// 114943                  push    ds ;~ 17C5:EDD3
cs=0x17c5;eip=0x00edd4; 	X(POP(es));	// 114944                  pop     es ;~ 17C5:EDD4
cs=0x17c5;eip=0x00edd5; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 114945                  mov     dx, [bp+arg_0] ;~ 17C5:EDD5
cs=0x17c5;eip=0x00edd8; 	T(si = 0x6350;);	// 114946                  mov     si, 6350h ;~ 17C5:EDD8
loc_3500b:
	// 6813 
cs=0x17c5;eip=0x00eddb; 	T(LODSW);	// 114949                  lodsw ;~ 17C5:EDDB
cs=0x17c5;eip=0x00eddc; 	T(CMP(ax, dx));	// 114950                  cmp     ax, dx ;~ 17C5:EDDC
cs=0x17c5;eip=0x00edde; 	J(JZ(loc_35020));	// 114951                  jz      short loc_35020 ;~ 17C5:EDDE
cs=0x17c5;eip=0x00ede0; 	T(INC(ax));	// 114952                  inc     ax ;~ 17C5:EDE0
cs=0x17c5;eip=0x00ede1; 	T(XCHG(ax, si));	// 114953                  xchg    ax, si ;~ 17C5:EDE1
cs=0x17c5;eip=0x00ede2; 	J(JZ(loc_35020));	// 114954                  jz      short loc_35020 ;~ 17C5:EDE2
cs=0x17c5;eip=0x00ede4; 	T(XCHG(ax, di));	// 114955                  xchg    ax, di ;~ 17C5:EDE4
cs=0x17c5;eip=0x00ede5; 	T(XOR(ax, ax));	// 114956                  xor     ax, ax ;~ 17C5:EDE5
cs=0x17c5;eip=0x00ede7; 	T(cx = 0x0FFFF;);	// 114957                  mov     cx, 0FFFFh ;~ 17C5:EDE7
	// 114958                  repne scasb ;~ 17C5:EDEA
cs=0x17c5;eip=0x00edea; 	T(	REPNE SCASB);	// 114958                  repne scasb ;~ 17C5:EDEA
cs=0x17c5;eip=0x00edec; 	T(si = di;);	// 114959                  mov     si, di ;~ 17C5:EDEC
cs=0x17c5;eip=0x00edee; 	J(JMP(loc_3500b));	// 114960                  jmp     short loc_3500B ;~ 17C5:EDEE
loc_35020:
	// 6814 
cs=0x17c5;eip=0x00edf0; 	T(XCHG(ax, si));	// 114965                  xchg    ax, si ;~ 17C5:EDF0
cs=0x17c5;eip=0x00edf1; 	X(POP(di));	// 114966                  pop     di ;~ 17C5:EDF1
cs=0x17c5;eip=0x00edf2; 	X(POP(si));	// 114967                  pop     si ;~ 17C5:EDF2
cs=0x17c5;eip=0x00edf3; 	T(sp = bp;);	// 114968                  mov     sp, bp ;~ 17C5:EDF3
cs=0x17c5;eip=0x00edf5; 	X(POP(bp));	// 114969                  pop     bp ;~ 17C5:EDF5
cs=0x17c5;eip=0x00edf6; 	J(RETN(2));	// 114970                  retn    2 ;~ 17C5:EDF6

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3500b: 	goto loc_3500b;
        case m2c::kloc_35020: 	goto loc_35020;
        case m2c::ksub_34ffe: 	goto sub_34ffe;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35029(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35029:
    _begin:
#undef arg_0
#define arg_0 4
	// 114981 arg_0           = word ptr  4 ;~ 17C5:EDF9
cs=0x17c5;eip=0x00edf9; 	X(PUSH(bp));	// 114983                  push    bp ;~ 17C5:EDF9
cs=0x17c5;eip=0x00edfa; 	T(bp = sp;);	// 114984                  mov     bp, sp ;~ 17C5:EDFA
cs=0x17c5;eip=0x00edfc; 	X(PUSH(di));	// 114985                  push    di ;~ 17C5:EDFC
cs=0x17c5;eip=0x00edfd; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 114986                  push    [bp+arg_0] ;~ 17C5:EDFD
cs=0x17c5;eip=0x00ee00; 	J(CALL(sub_34ffe,0));	// 114987                  call    sub_34FFE ;~ 17C5:EE00
cs=0x17c5;eip=0x00ee03; 	T(OR(ax, ax));	// 114988                  or      ax, ax ;~ 17C5:EE03
cs=0x17c5;eip=0x00ee05; 	J(JZ(loc_3504b));	// 114989                  jz      short loc_3504B ;~ 17C5:EE05
cs=0x17c5;eip=0x00ee07; 	T(XCHG(ax, dx));	// 114990                  xchg    ax, dx ;~ 17C5:EE07
cs=0x17c5;eip=0x00ee08; 	T(di = dx;);	// 114991                  mov     di, dx ;~ 17C5:EE08
cs=0x17c5;eip=0x00ee0a; 	T(XOR(ax, ax));	// 114992                  xor     ax, ax ;~ 17C5:EE0A
cs=0x17c5;eip=0x00ee0c; 	T(cx = 0x0FFFF;);	// 114993                  mov     cx, 0FFFFh ;~ 17C5:EE0C
	// 114994                  repne scasb ;~ 17C5:EE0F
cs=0x17c5;eip=0x00ee0f; 	T(	REPNE SCASB);	// 114994                  repne scasb ;~ 17C5:EE0F
cs=0x17c5;eip=0x00ee11; 	T(NOT(cx));	// 114995                  not     cx ;~ 17C5:EE11
cs=0x17c5;eip=0x00ee13; 	T(DEC(cx));	// 114996                  dec     cx ;~ 17C5:EE13
cs=0x17c5;eip=0x00ee14; 	T(bx = 2;);	// 114997                  mov     bx, 2 ;~ 17C5:EE14
cs=0x17c5;eip=0x00ee17; 	T(ah = 0x40;);	// 114998                  mov     ah, 40h ;~ 17C5:EE17
cs=0x17c5;eip=0x00ee19; 	S(_INT(0x21));	// 114999                  int     21h             ; DOS - 2+ - WRITE TO FILE WITH HANDLE ;~ 17C5:EE19
loc_3504b:
	// 6815 
cs=0x17c5;eip=0x00ee1b; 	X(POP(di));	// 115003                  pop     di ;~ 17C5:EE1B
cs=0x17c5;eip=0x00ee1c; 	T(sp = bp;);	// 115004                  mov     sp, bp ;~ 17C5:EE1C
cs=0x17c5;eip=0x00ee1e; 	X(POP(bp));	// 115005                  pop     bp ;~ 17C5:EE1E
cs=0x17c5;eip=0x00ee1f; 	J(RETN(2));	// 115006                  retn    2 ;~ 17C5:EE1F

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3504b: 	goto loc_3504b;
        case m2c::ksub_35029: 	goto sub_35029;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_ee22_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_ee22_proc:
    _begin:
loc_35052:
	// 6816 
cs=0x17c5;eip=0x00ee22; 	J(JC(loc_35067));	// 115015                  jb      short loc_35067 ;~ 17C5:EE22
loc_35054:
	// 6817 
cs=0x17c5;eip=0x00ee24; 	T(XOR(ax, ax));	// 115018                  xor     ax, ax ;~ 17C5:EE24
cs=0x17c5;eip=0x00ee26; 	T(sp = bp;);	// 115019                  mov     sp, bp ;~ 17C5:EE26
cs=0x17c5;eip=0x00ee28; 	X(POP(bp));	// 115020                  pop     bp ;~ 17C5:EE28
cs=0x17c5;eip=0x00ee29; 	J(RETN(0));	// 115021                  retn ;~ 17C5:EE29
ret_17c5_ee2a:
	// 6818 
cs=0x17c5;eip=0x00ee2a; 	J(JNC(loc_35054));	// 115024                  jnb     short loc_35054 ;~ 17C5:EE2A
cs=0x17c5;eip=0x00ee2c; 	X(PUSH(ax));	// 115025                  push    ax ;~ 17C5:EE2C
cs=0x17c5;eip=0x00ee2d; 	J(CALL(sub_35078,0));	// 115026                  call    sub_35078 ;~ 17C5:EE2D
cs=0x17c5;eip=0x00ee30; 	X(POP(ax));	// 115027                  pop     ax ;~ 17C5:EE30
cs=0x17c5;eip=0x00ee31; 	T(sp = bp;);	// 115028                  mov     sp, bp ;~ 17C5:EE31
cs=0x17c5;eip=0x00ee33; 	X(POP(bp));	// 115029                  pop     bp ;~ 17C5:EE33
cs=0x17c5;eip=0x00ee34; 	J(RETN(0));	// 115030                  retn ;~ 17C5:EE34
loc_35065:
	// 6819 
cs=0x17c5;eip=0x00ee35; 	J(JNC(loc_3506e));	// 115040                  jnb     short loc_3506E ;~ 17C5:EE35
loc_35067:
	// 6820 
cs=0x17c5;eip=0x00ee37; 	J(CALL(sub_35078,0));	// 115043                  call    sub_35078 ;~ 17C5:EE37
cs=0x17c5;eip=0x00ee3a; 	T(ax = 0x0FFFF;);	// 115044                  mov     ax, 0FFFFh ;~ 17C5:EE3A
cs=0x17c5;eip=0x00ee3d; 	T(CWD);	// 115045                  cwd ;~ 17C5:EE3D
loc_3506e:
	// 6821 
cs=0x17c5;eip=0x00ee3e; 	T(sp = bp;);	// 115048                  mov     sp, bp ;~ 17C5:EE3E
cs=0x17c5;eip=0x00ee40; 	X(POP(bp));	// 115049                  pop     bp ;~ 17C5:EE40
cs=0x17c5;eip=0x00ee41; 	J(RETN(0));	// 115050                  retn ;~ 17C5:EE41

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35054: 	goto loc_35054;
        case m2c::kloc_35065: 	goto loc_35065;
        case m2c::kloc_35067: 	goto loc_35067;
        case m2c::kloc_3506e: 	goto loc_3506e;
        case m2c::kret_17c5_ee2a: 	goto ret_17c5_ee2a;
        case m2c::kseg2623_ee22_proc: 	goto seg2623_ee22_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35072(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35072:
    _begin:
cs=0x17c5;eip=0x00ee42; 	T(XOR(ah, ah));	// 115057                  xor     ah, ah ;~ 17C5:EE42
cs=0x17c5;eip=0x00ee44; 	J(CALL(sub_35078,0));	// 115058                  call    sub_35078 ;~ 17C5:EE44
cs=0x17c5;eip=0x00ee47; 	J(RETN(0));	// 115059                  retn ;~ 17C5:EE47

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_35072: 	goto sub_35072;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35078(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35078:
    _begin:
cs=0x17c5;eip=0x00ee48; 	X(byte_4ec90 = al;);	// 115068                  mov     ds:byte_4EC90, al ;~ 17C5:EE48
cs=0x17c5;eip=0x00ee4b; 	T(OR(ah, ah));	// 115069                  or      ah, ah ;~ 17C5:EE4B
cs=0x17c5;eip=0x00ee4d; 	J(JNZ(loc_350a2));	// 115070                  jnz     short loc_350A2 ;~ 17C5:EE4D
cs=0x17c5;eip=0x00ee4f; 	T(CMP(*(db*)(&word_4ec8d), 3));	// 115071                  cmp     byte ptr ds:word_4EC8D, 3 ;~ 17C5:EE4F
cs=0x17c5;eip=0x00ee54; 	J(JC(loc_35093));	// 115072                  jb      short loc_35093 ;~ 17C5:EE54
cs=0x17c5;eip=0x00ee56; 	T(CMP(al, 0x22));	// 115073                  cmp     al, 22h ; '"' ;~ 17C5:EE56
cs=0x17c5;eip=0x00ee58; 	J(JNC(loc_35097));	// 115074                  jnb     short loc_35097 ;~ 17C5:EE58
cs=0x17c5;eip=0x00ee5a; 	T(CMP(al, 0x20));	// 115075                  cmp     al, 20h ; ' ' ;~ 17C5:EE5A
cs=0x17c5;eip=0x00ee5c; 	J(JC(loc_35093));	// 115076                  jb      short loc_35093 ;~ 17C5:EE5C
cs=0x17c5;eip=0x00ee5e; 	T(al = 5;);	// 115077                  mov     al, 5 ;~ 17C5:EE5E
cs=0x17c5;eip=0x00ee60; 	J(JMP(loc_35099));	// 115078                  jmp     short loc_35099 ;~ 17C5:EE60
loc_35093:
	// 6822 
cs=0x17c5;eip=0x00ee63; 	T(CMP(al, 0x13));	// 115085                  cmp     al, 13h ;~ 17C5:EE63
cs=0x17c5;eip=0x00ee65; 	J(JBE(loc_35099));	// 115086                  jbe     short loc_35099 ;~ 17C5:EE65
loc_35097:
	// 6823 
cs=0x17c5;eip=0x00ee67; 	T(al = 0x13;);	// 115089                  mov     al, 13h ;~ 17C5:EE67
loc_35099:
	// 6824 
cs=0x17c5;eip=0x00ee69; 	T(bx = 0x61EA;);	// 115093                  mov     bx, 61EAh ;~ 17C5:EE69
cs=0x17c5;eip=0x00ee6c; 	T(XLAT);	// 115094                  xlat ;~ 17C5:EE6C
loc_3509d:
	// 6825 
cs=0x17c5;eip=0x00ee6d; 	T(CBW);	// 115097                  cbw ;~ 17C5:EE6D
cs=0x17c5;eip=0x00ee6e; 	X(word_4ec85 = ax;);	// 115098                  mov     ds:word_4EC85, ax ;~ 17C5:EE6E
cs=0x17c5;eip=0x00ee71; 	J(RETN(0));	// 115099                  retn ;~ 17C5:EE71
loc_350a2:
	// 6826 
cs=0x17c5;eip=0x00ee72; 	T(al = ah;);	// 115103                  mov     al, ah ;~ 17C5:EE72
cs=0x17c5;eip=0x00ee74; 	J(JMP(loc_3509d));	// 115104                  jmp     short loc_3509D ;~ 17C5:EE74

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35093: 	goto loc_35093;
        case m2c::kloc_35097: 	goto loc_35097;
        case m2c::kloc_35099: 	goto loc_35099;
        case m2c::kloc_3509d: 	goto loc_3509d;
        case m2c::kloc_350a2: 	goto loc_350a2;
        case m2c::ksub_35078: 	goto sub_35078;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_350a6(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_350a6:
    _begin:
#undef var_2
#define var_2 -2
	// 115115 var_2           = word ptr -2 ;~ 17C5:EE76
#undef arg_0
#define arg_0 4
	// 115116 arg_0           = word ptr  4 ;~ 17C5:EE76
cs=0x17c5;eip=0x00ee76; 	X(PUSH(bp));	// 115118                  push    bp ;~ 17C5:EE76
cs=0x17c5;eip=0x00ee77; 	T(bp = sp;);	// 115119                  mov     bp, sp ;~ 17C5:EE77
cs=0x17c5;eip=0x00ee79; 	T(SUB(sp, 2));	// 115120                  sub     sp, 2 ;~ 17C5:EE79
cs=0x17c5;eip=0x00ee7c; 	X(PUSH(si));	// 115121                  push    si ;~ 17C5:EE7C
cs=0x17c5;eip=0x00ee7d; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 115122                  mov     si, [bp+arg_0] ;~ 17C5:EE7D
cs=0x17c5;eip=0x00ee80; 	T(ax = si;);	// 115123                  mov     ax, si ;~ 17C5:EE80
cs=0x17c5;eip=0x00ee82; 	T(SUB(ax, 0x61FE));	// 115124                  sub     ax, 61FEh ;~ 17C5:EE82
cs=0x17c5;eip=0x00ee85; 	T(cl = 3;);	// 115125                  mov     cl, 3 ;~ 17C5:EE85
cs=0x17c5;eip=0x00ee87; 	T(SAR(ax, cl));	// 115126                  sar     ax, cl ;~ 17C5:EE87
cs=0x17c5;eip=0x00ee89; 	T(cx = ax;);	// 115127                  mov     cx, ax ;~ 17C5:EE89
cs=0x17c5;eip=0x00ee8b; 	T(SHL(ax, 1));	// 115128                  shl     ax, 1 ;~ 17C5:EE8B
cs=0x17c5;eip=0x00ee8d; 	T(ADD(ax, cx));	// 115129                  add     ax, cx ;~ 17C5:EE8D
cs=0x17c5;eip=0x00ee8f; 	T(SHL(ax, 1));	// 115130                  shl     ax, 1 ;~ 17C5:EE8F
cs=0x17c5;eip=0x00ee91; 	T(ADD(ax, 0x629E));	// 115131                  add     ax, 629Eh ;~ 17C5:EE91
cs=0x17c5;eip=0x00ee94; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 115132                  mov     [bp+var_2], ax ;~ 17C5:EE94
cs=0x17c5;eip=0x00ee97; 	T(TEST(*(raddr(ds,si+6)), 0x83));	// 115133                  test    byte ptr [si+6], 83h ;~ 17C5:EE97
cs=0x17c5;eip=0x00ee9b; 	J(JZ(loc_350d3));	// 115134                  jz      short loc_350D3 ;~ 17C5:EE9B
cs=0x17c5;eip=0x00ee9d; 	T(TEST(*(raddr(ds,si+6)), 0x40));	// 115135                  test    byte ptr [si+6], 40h ;~ 17C5:EE9D
cs=0x17c5;eip=0x00eea1; 	J(JZ(loc_350da));	// 115136                  jz      short loc_350DA ;~ 17C5:EEA1
loc_350d3:
	// 6827 
cs=0x17c5;eip=0x00eea3; 	T(ax = 0x0FFFF;);	// 115140                  mov     ax, 0FFFFh ;~ 17C5:EEA3
cs=0x17c5;eip=0x00eea6; 	J(JMP(loc_35161));	// 115141                  jmp     loc_35161 ;~ 17C5:EEA6
loc_350da:
	// 6828 
cs=0x17c5;eip=0x00eeaa; 	T(TEST(*(raddr(ds,si+6)), 2));	// 115146                  test    byte ptr [si+6], 2 ;~ 17C5:EEAA
cs=0x17c5;eip=0x00eeae; 	J(JZ(loc_350e6));	// 115147                  jz      short loc_350E6 ;~ 17C5:EEAE
cs=0x17c5;eip=0x00eeb0; 	X(OR(*(raddr(ds,si+6)), 0x20));	// 115148                  or      byte ptr [si+6], 20h ;~ 17C5:EEB0
cs=0x17c5;eip=0x00eeb4; 	J(JMP(loc_350d3));	// 115149                  jmp     short loc_350D3 ;~ 17C5:EEB4
loc_350e6:
	// 6829 
cs=0x17c5;eip=0x00eeb6; 	X(OR(*(raddr(ds,si+6)), 1));	// 115153                  or      byte ptr [si+6], 1 ;~ 17C5:EEB6
cs=0x17c5;eip=0x00eeba; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2))));	// 115154                  mov     bx, [bp+var_2] ;~ 17C5:EEBA
cs=0x17c5;eip=0x00eebd; 	X(AND(*(raddr(ds,bx)), 0x0FB));	// 115155                  and     byte ptr [bx], 0FBh ;~ 17C5:EEBD
cs=0x17c5;eip=0x00eec0; 	T(TEST(*(raddr(ds,si+6)), 0x0C));	// 115156                  test    byte ptr [si+6], 0Ch ;~ 17C5:EEC0
cs=0x17c5;eip=0x00eec4; 	J(JNZ(loc_35118));	// 115157                  jnz     short loc_35118 ;~ 17C5:EEC4
cs=0x17c5;eip=0x00eec6; 	T(bx = si;);	// 115158                  mov     bx, si ;~ 17C5:EEC6
cs=0x17c5;eip=0x00eec8; 	T(SUB(bx, 0x61FE));	// 115159                  sub     bx, 61FEh ;~ 17C5:EEC8
cs=0x17c5;eip=0x00eecc; 	T(cl = 3;);	// 115160                  mov     cl, 3 ;~ 17C5:EECC
cs=0x17c5;eip=0x00eece; 	T(SAR(bx, cl));	// 115161                  sar     bx, cl ;~ 17C5:EECE
cs=0x17c5;eip=0x00eed0; 	T(ax = bx;);	// 115162                  mov     ax, bx ;~ 17C5:EED0
cs=0x17c5;eip=0x00eed2; 	T(SHL(bx, 1));	// 115163                  shl     bx, 1 ;~ 17C5:EED2
cs=0x17c5;eip=0x00eed4; 	T(ADD(bx, ax));	// 115164                  add     bx, ax ;~ 17C5:EED4
cs=0x17c5;eip=0x00eed6; 	T(SHL(bx, 1));	// 115165                  shl     bx, 1 ;~ 17C5:EED6
cs=0x17c5;eip=0x00eed8; 	T(TEST(*(raddr(ds,bx+0x629E)), 1));	// 115166                  test    byte ptr [bx+629Eh], 1 ;~ 17C5:EED8
cs=0x17c5;eip=0x00eedd; 	J(JNZ(loc_35118));	// 115167                  jnz     short loc_35118 ;~ 17C5:EEDD
cs=0x17c5;eip=0x00eedf; 	X(PUSH(si));	// 115168                  push    si ;~ 17C5:EEDF
cs=0x17c5;eip=0x00eee0; 	J(CALL(sub_354b8,0));	// 115169                  call    sub_354B8 ;~ 17C5:EEE0
cs=0x17c5;eip=0x00eee3; 	T(ADD(sp, 2));	// 115170                  add     sp, 2 ;~ 17C5:EEE3
cs=0x17c5;eip=0x00eee6; 	J(JMP(loc_3511d));	// 115171                  jmp     short loc_3511D ;~ 17C5:EEE6
loc_35118:
	// 6830 
cs=0x17c5;eip=0x00eee8; 	T(MOV(ax, *(dw*)(raddr(ds,si+4))));	// 115176                  mov     ax, [si+4] ;~ 17C5:EEE8
cs=0x17c5;eip=0x00eeeb; 	X(MOV(*(dw*)(raddr(ds,si)), ax));	// 115177                  mov     [si], ax ;~ 17C5:EEEB
loc_3511d:
	// 6831 
cs=0x17c5;eip=0x00eeed; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2))));	// 115180                  mov     bx, [bp+var_2] ;~ 17C5:EEED
cs=0x17c5;eip=0x00eef0; 	X(PUSH(*(dw*)(raddr(ds,bx+2))));	// 115181                  push    word ptr [bx+2] ;~ 17C5:EEF0
cs=0x17c5;eip=0x00eef3; 	X(PUSH(*(dw*)(raddr(ds,si+4))));	// 115182                  push    word ptr [si+4] ;~ 17C5:EEF3
cs=0x17c5;eip=0x00eef6; 	T(MOV(al, *(raddr(ds,si+7))));	// 115183                  mov     al, [si+7] ;~ 17C5:EEF6
cs=0x17c5;eip=0x00eef9; 	T(CBW);	// 115184                  cbw ;~ 17C5:EEF9
cs=0x17c5;eip=0x00eefa; 	X(PUSH(ax));	// 115185                  push    ax ;~ 17C5:EEFA
cs=0x17c5;eip=0x00eefb; 	J(CALL(sub_35354,0));	// 115186                  call    sub_35354 ;~ 17C5:EEFB
cs=0x17c5;eip=0x00eefe; 	T(ADD(sp, 6));	// 115187                  add     sp, 6 ;~ 17C5:EEFE
cs=0x17c5;eip=0x00ef01; 	X(MOV(*(dw*)(raddr(ds,si+2)), ax));	// 115188                  mov     [si+2], ax ;~ 17C5:EF01
cs=0x17c5;eip=0x00ef04; 	T(OR(ax, ax));	// 115189                  or      ax, ax ;~ 17C5:EF04
cs=0x17c5;eip=0x00ef06; 	J(JZ(loc_3513d));	// 115190                  jz      short loc_3513D ;~ 17C5:EF06
cs=0x17c5;eip=0x00ef08; 	T(CMP(ax, 0x0FFFF));	// 115191                  cmp     ax, 0FFFFh ;~ 17C5:EF08
cs=0x17c5;eip=0x00ef0b; 	J(JNZ(loc_35156));	// 115192                  jnz     short loc_35156 ;~ 17C5:EF0B
loc_3513d:
	// 6832 
cs=0x17c5;eip=0x00ef0d; 	T(CMP(*(dw*)(raddr(ds,si+2)), 0));	// 115195                  cmp     word ptr [si+2], 0 ;~ 17C5:EF0D
cs=0x17c5;eip=0x00ef11; 	J(JZ(loc_35148));	// 115196                  jz      short loc_35148 ;~ 17C5:EF11
cs=0x17c5;eip=0x00ef13; 	T(al = 0x20;);	// 115197                  mov     al, 20h ; ' ' ;~ 17C5:EF13
cs=0x17c5;eip=0x00ef15; 	J(JMP(loc_3514a));	// 115198                  jmp     short loc_3514A ;~ 17C5:EF15
loc_35148:
	// 6833 
cs=0x17c5;eip=0x00ef18; 	T(al = 0x10;);	// 115203                  mov     al, 10h ;~ 17C5:EF18
loc_3514a:
	// 6834 
cs=0x17c5;eip=0x00ef1a; 	X(OR(*(raddr(ds,si+6)), al));	// 115206                  or      [si+6], al ;~ 17C5:EF1A
cs=0x17c5;eip=0x00ef1d; 	X(MOV(*(dw*)(raddr(ds,si+2)), 0));	// 115207                  mov     word ptr [si+2], 0 ;~ 17C5:EF1D
cs=0x17c5;eip=0x00ef22; 	J(JMP(loc_350d3));	// 115208                  jmp     loc_350D3 ;~ 17C5:EF22
loc_35156:
	// 6835 
cs=0x17c5;eip=0x00ef26; 	X(DEC(*(dw*)(raddr(ds,si+2))));	// 115213                  dec     word ptr [si+2] ;~ 17C5:EF26
cs=0x17c5;eip=0x00ef29; 	T(MOV(bx, *(dw*)(raddr(ds,si))));	// 115214                  mov     bx, [si] ;~ 17C5:EF29
cs=0x17c5;eip=0x00ef2b; 	X(INC(*(dw*)(raddr(ds,si))));	// 115215                  inc     word ptr [si] ;~ 17C5:EF2B
cs=0x17c5;eip=0x00ef2d; 	T(MOV(al, *(raddr(ds,bx))));	// 115216                  mov     al, [bx] ;~ 17C5:EF2D
cs=0x17c5;eip=0x00ef2f; 	T(SUB(ah, ah));	// 115217                  sub     ah, ah ;~ 17C5:EF2F
loc_35161:
	// 6836 
cs=0x17c5;eip=0x00ef31; 	X(POP(si));	// 115220                  pop     si ;~ 17C5:EF31
cs=0x17c5;eip=0x00ef32; 	T(sp = bp;);	// 115221                  mov     sp, bp ;~ 17C5:EF32
cs=0x17c5;eip=0x00ef34; 	X(POP(bp));	// 115222                  pop     bp ;~ 17C5:EF34
cs=0x17c5;eip=0x00ef35; 	J(RETN(0));	// 115223                  retn ;~ 17C5:EF35

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_350d3: 	goto loc_350d3;
        case m2c::kloc_350da: 	goto loc_350da;
        case m2c::kloc_350e6: 	goto loc_350e6;
        case m2c::kloc_35118: 	goto loc_35118;
        case m2c::kloc_3511d: 	goto loc_3511d;
        case m2c::kloc_3513d: 	goto loc_3513d;
        case m2c::kloc_35148: 	goto loc_35148;
        case m2c::kloc_3514a: 	goto loc_3514a;
        case m2c::kloc_35156: 	goto loc_35156;
        case m2c::kloc_35161: 	goto loc_35161;
        case m2c::ksub_350a6: 	goto sub_350a6;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35166(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35166:
    _begin:
#undef arg_0
#define arg_0 4
	// 115233 arg_0           = word ptr  4 ;~ 17C5:EF36
cs=0x17c5;eip=0x00ef36; 	X(PUSH(bp));	// 115235                  push    bp ;~ 17C5:EF36
cs=0x17c5;eip=0x00ef37; 	T(bp = sp;);	// 115236                  mov     bp, sp ;~ 17C5:EF37
cs=0x17c5;eip=0x00ef39; 	X(PUSH(si));	// 115237                  push    si ;~ 17C5:EF39
cs=0x17c5;eip=0x00ef3a; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 115238                  mov     si, [bp+arg_0] ;~ 17C5:EF3A
cs=0x17c5;eip=0x00ef3d; 	T(TEST(*(raddr(ds,si+6)), 0x83));	// 115239                  test    byte ptr [si+6], 83h ;~ 17C5:EF3D
cs=0x17c5;eip=0x00ef41; 	J(JZ(loc_35190));	// 115240                  jz      short loc_35190 ;~ 17C5:EF41
cs=0x17c5;eip=0x00ef43; 	T(TEST(*(raddr(ds,si+6)), 8));	// 115241                  test    byte ptr [si+6], 8 ;~ 17C5:EF43
cs=0x17c5;eip=0x00ef47; 	J(JZ(loc_35190));	// 115242                  jz      short loc_35190 ;~ 17C5:EF47
cs=0x17c5;eip=0x00ef49; 	X(PUSH(*(dw*)(raddr(ds,si+4))));	// 115243                  push    word ptr [si+4] ;~ 17C5:EF49
cs=0x17c5;eip=0x00ef4c; 	J(CALL(sub_357f0,0));	// 115244                  call    sub_357F0 ;~ 17C5:EF4C
cs=0x17c5;eip=0x00ef4f; 	T(ADD(sp, 2));	// 115245                  add     sp, 2 ;~ 17C5:EF4F
cs=0x17c5;eip=0x00ef52; 	X(AND(*(raddr(ds,si+6)), 0x0F7));	// 115246                  and     byte ptr [si+6], 0F7h ;~ 17C5:EF52
cs=0x17c5;eip=0x00ef56; 	T(SUB(ax, ax));	// 115247                  sub     ax, ax ;~ 17C5:EF56
cs=0x17c5;eip=0x00ef58; 	X(MOV(*(dw*)(raddr(ds,si)), ax));	// 115248                  mov     [si], ax ;~ 17C5:EF58
cs=0x17c5;eip=0x00ef5a; 	X(MOV(*(dw*)(raddr(ds,si+4)), ax));	// 115249                  mov     [si+4], ax ;~ 17C5:EF5A
cs=0x17c5;eip=0x00ef5d; 	X(MOV(*(dw*)(raddr(ds,si+2)), ax));	// 115250                  mov     [si+2], ax ;~ 17C5:EF5D
loc_35190:
	// 6837 
cs=0x17c5;eip=0x00ef60; 	X(POP(si));	// 115254                  pop     si ;~ 17C5:EF60
cs=0x17c5;eip=0x00ef61; 	X(POP(bp));	// 115255                  pop     bp ;~ 17C5:EF61
cs=0x17c5;eip=0x00ef62; 	J(RETN(0));	// 115256                  retn ;~ 17C5:EF62

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35190: 	goto loc_35190;
        case m2c::ksub_35166: 	goto sub_35166;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35194(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35194:
    _begin:
#undef var_8
#define var_8 -8
	// 115268 var_8           = word ptr -8 ;~ 17C5:EF64
#undef var_6
#define var_6 -6
	// 115269 var_6           = word ptr -6 ;~ 17C5:EF64
#undef var_4
#define var_4 -4
	// 115270 var_4           = byte ptr -4 ;~ 17C5:EF64
#undef var_2
#define var_2 -2
	// 115271 var_2           = word ptr -2 ;~ 17C5:EF64
#undef arg_0
#define arg_0 4
	// 115272 arg_0           = word ptr  4 ;~ 17C5:EF64
#undef arg_2
#define arg_2 6
	// 115273 arg_2           = word ptr  6 ;~ 17C5:EF64
#undef arg_4
#define arg_4 8
	// 115274 arg_4           = word ptr  8 ;~ 17C5:EF64
cs=0x17c5;eip=0x00ef64; 	X(PUSH(bp));	// 115276                  push    bp ;~ 17C5:EF64
cs=0x17c5;eip=0x00ef65; 	T(bp = sp;);	// 115277                  mov     bp, sp ;~ 17C5:EF65
cs=0x17c5;eip=0x00ef67; 	T(SUB(sp, 0x0A));	// 115278                  sub     sp, 0Ah ;~ 17C5:EF67
cs=0x17c5;eip=0x00ef6a; 	X(PUSH(di));	// 115279                  push    di ;~ 17C5:EF6A
cs=0x17c5;eip=0x00ef6b; 	X(PUSH(si));	// 115280                  push    si ;~ 17C5:EF6B
cs=0x17c5;eip=0x00ef6c; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_4))));	// 115281                  mov     si, [bp+arg_4] ;~ 17C5:EF6C
cs=0x17c5;eip=0x00ef6f; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_2))));	// 115282                  mov     bx, [bp+arg_2] ;~ 17C5:EF6F
cs=0x17c5;eip=0x00ef72; 	T(MOV(al, *(raddr(ds,bx))));	// 115283                  mov     al, [bx] ;~ 17C5:EF72
cs=0x17c5;eip=0x00ef74; 	T(CBW);	// 115284                  cbw ;~ 17C5:EF74
cs=0x17c5;eip=0x00ef75; 	T(CMP(ax, 0x61));	// 115285                  cmp     ax, 61h ; 'a' ;~ 17C5:EF75
cs=0x17c5;eip=0x00ef78; 	J(JZ(loc_351d2));	// 115286                  jz      short loc_351D2 ;~ 17C5:EF78
cs=0x17c5;eip=0x00ef7a; 	T(CMP(ax, 0x72));	// 115287                  cmp     ax, 72h ; 'r' ;~ 17C5:EF7A
cs=0x17c5;eip=0x00ef7d; 	J(JZ(loc_351ba));	// 115288                  jz      short loc_351BA ;~ 17C5:EF7D
cs=0x17c5;eip=0x00ef7f; 	T(CMP(ax, 0x77));	// 115289                  cmp     ax, 77h ; 'w' ;~ 17C5:EF7F
cs=0x17c5;eip=0x00ef82; 	J(JZ(loc_351c8));	// 115290                  jz      short loc_351C8 ;~ 17C5:EF82
loc_351b4:
	// 6838 
cs=0x17c5;eip=0x00ef84; 	T(SUB(ax, ax));	// 115293                  sub     ax, ax ;~ 17C5:EF84
cs=0x17c5;eip=0x00ef86; 	J(JMP(loc_35286));	// 115294                  jmp     loc_35286 ;~ 17C5:EF86
loc_351ba:
	// 6839 
cs=0x17c5;eip=0x00ef8a; 	T(SUB(di, di));	// 115299                  sub     di, di ;~ 17C5:EF8A
cs=0x17c5;eip=0x00ef8c; 	X(MOV(*(raddr(ss,bp+var_4)), 1));	// 115300                  mov     [bp+var_4], 1 ;~ 17C5:EF8C
loc_351c0:
	// 6840 
cs=0x17c5;eip=0x00ef90; 	T(cx = 1;);	// 115303                  mov     cx, 1 ;~ 17C5:EF90
cs=0x17c5;eip=0x00ef93; 	T(MOV(dl, *(raddr(ss,bp+var_4))));	// 115304                  mov     dl, [bp+var_4] ;~ 17C5:EF93
cs=0x17c5;eip=0x00ef96; 	J(JMP(loc_351e7));	// 115305                  jmp     short loc_351E7 ;~ 17C5:EF96
loc_351c8:
	// 6841 
cs=0x17c5;eip=0x00ef98; 	T(di = 0x301;);	// 115309                  mov     di, 301h ;~ 17C5:EF98
loc_351cb:
	// 6842 
cs=0x17c5;eip=0x00ef9b; 	X(MOV(*(raddr(ss,bp+var_4)), 2));	// 115312                  mov     [bp+var_4], 2 ;~ 17C5:EF9B
cs=0x17c5;eip=0x00ef9f; 	J(JMP(loc_351c0));	// 115313                  jmp     short loc_351C0 ;~ 17C5:EF9F
loc_351d2:
	// 6843 
cs=0x17c5;eip=0x00efa2; 	T(di = 0x109;);	// 115318                  mov     di, 109h ;~ 17C5:EFA2
cs=0x17c5;eip=0x00efa5; 	J(JMP(loc_351cb));	// 115319                  jmp     short loc_351CB ;~ 17C5:EFA5
loc_351d8:
	// 6844 
cs=0x17c5;eip=0x00efa8; 	T(TEST(di, 2));	// 115324                  test    di, 2 ;~ 17C5:EFA8
cs=0x17c5;eip=0x00efac; 	J(JNZ(loc_3521d));	// 115325                  jnz     short loc_3521D ;~ 17C5:EFAC
cs=0x17c5;eip=0x00efae; 	T(OR(di, 2));	// 115326                  or      di, 2 ;~ 17C5:EFAE
cs=0x17c5;eip=0x00efb2; 	T(AND(di, 0x0FFFE));	// 115327                  and     di, 0FFFEh ;~ 17C5:EFB2
cs=0x17c5;eip=0x00efb5; 	T(dl = 0x80;);	// 115328                  mov     dl, 80h ;~ 17C5:EFB5
loc_351e7:
	// 6845 
cs=0x17c5;eip=0x00efb7; 	X(INC(*(dw*)(raddr(ss,bp+arg_2))));	// 115332                  inc     [bp+arg_2] ;~ 17C5:EFB7
cs=0x17c5;eip=0x00efba; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_2))));	// 115333                  mov     bx, [bp+arg_2] ;~ 17C5:EFBA
cs=0x17c5;eip=0x00efbd; 	T(CMP(*(raddr(ds,bx)), 0));	// 115334                  cmp     byte ptr [bx], 0 ;~ 17C5:EFBD
cs=0x17c5;eip=0x00efc0; 	J(JZ(loc_35228));	// 115335                  jz      short loc_35228 ;~ 17C5:EFC0
cs=0x17c5;eip=0x00efc2; 	T(OR(cx, cx));	// 115336                  or      cx, cx ;~ 17C5:EFC2
cs=0x17c5;eip=0x00efc4; 	J(JZ(loc_35228));	// 115337                  jz      short loc_35228 ;~ 17C5:EFC4
cs=0x17c5;eip=0x00efc6; 	T(MOV(al, *(raddr(ds,bx))));	// 115338                  mov     al, [bx] ;~ 17C5:EFC6
cs=0x17c5;eip=0x00efc8; 	T(CBW);	// 115339                  cbw ;~ 17C5:EFC8
cs=0x17c5;eip=0x00efc9; 	T(CMP(ax, 0x2B));	// 115340                  cmp     ax, 2Bh ; '+' ;~ 17C5:EFC9
cs=0x17c5;eip=0x00efcc; 	J(JZ(loc_351d8));	// 115341                  jz      short loc_351D8 ;~ 17C5:EFCC
cs=0x17c5;eip=0x00efce; 	T(CMP(ax, 0x62));	// 115342                  cmp     ax, 62h ; 'b' ;~ 17C5:EFCE
cs=0x17c5;eip=0x00efd1; 	J(JZ(loc_35216));	// 115343                  jz      short loc_35216 ;~ 17C5:EFD1
cs=0x17c5;eip=0x00efd3; 	T(CMP(ax, 0x74));	// 115344                  cmp     ax, 74h ; 't' ;~ 17C5:EFD3
cs=0x17c5;eip=0x00efd6; 	J(JNZ(loc_3521d));	// 115345                  jnz     short loc_3521D ;~ 17C5:EFD6
cs=0x17c5;eip=0x00efd8; 	T(ax = di;);	// 115346                  mov     ax, di ;~ 17C5:EFD8
cs=0x17c5;eip=0x00efda; 	T(TEST(ax, 0x0C000));	// 115347                  test    ax, 0C000h ;~ 17C5:EFDA
cs=0x17c5;eip=0x00efdd; 	J(JNZ(loc_3521d));	// 115348                  jnz     short loc_3521D ;~ 17C5:EFDD
cs=0x17c5;eip=0x00efdf; 	T(OR(di, 0x4000));	// 115349                  or      di, 4000h ;~ 17C5:EFDF
cs=0x17c5;eip=0x00efe3; 	J(JMP(loc_351e7));	// 115350                  jmp     short loc_351E7 ;~ 17C5:EFE3
loc_35216:
	// 6846 
cs=0x17c5;eip=0x00efe6; 	T(ax = di;);	// 115355                  mov     ax, di ;~ 17C5:EFE6
cs=0x17c5;eip=0x00efe8; 	T(TEST(ax, 0x0C000));	// 115356                  test    ax, 0C000h ;~ 17C5:EFE8
cs=0x17c5;eip=0x00efeb; 	J(JZ(loc_35222));	// 115357                  jz      short loc_35222 ;~ 17C5:EFEB
loc_3521d:
	// 6847 
cs=0x17c5;eip=0x00efed; 	T(SUB(cx, cx));	// 115361                  sub     cx, cx ;~ 17C5:EFED
cs=0x17c5;eip=0x00efef; 	J(JMP(loc_351e7));	// 115362                  jmp     short loc_351E7 ;~ 17C5:EFEF
loc_35222:
	// 6848 
cs=0x17c5;eip=0x00eff2; 	T(OR(di, 0x8000));	// 115367                  or      di, 8000h ;~ 17C5:EFF2
cs=0x17c5;eip=0x00eff6; 	J(JMP(loc_351e7));	// 115368                  jmp     short loc_351E7 ;~ 17C5:EFF6
loc_35228:
	// 6849 
cs=0x17c5;eip=0x00eff8; 	X(MOV(*(raddr(ss,bp+var_4)), dl));	// 115373                  mov     [bp+var_4], dl ;~ 17C5:EFF8
cs=0x17c5;eip=0x00effb; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), cx));	// 115374                  mov     [bp+var_2], cx ;~ 17C5:EFFB
cs=0x17c5;eip=0x00effe; 	T(ax = 0x1A4;);	// 115375                  mov     ax, 1A4h ;~ 17C5:EFFE
cs=0x17c5;eip=0x00f001; 	X(PUSH(ax));	// 115376                  push    ax ;~ 17C5:F001
cs=0x17c5;eip=0x00f002; 	X(PUSH(di));	// 115377                  push    di ;~ 17C5:F002
cs=0x17c5;eip=0x00f003; 	X(PUSH(*(dw*)(raddr(ss,bp+arg_0))));	// 115378                  push    [bp+arg_0] ;~ 17C5:F003
cs=0x17c5;eip=0x00f006; 	J(CALL(sub_35524,0));	// 115379                  call    sub_35524 ;~ 17C5:F006
cs=0x17c5;eip=0x00f009; 	T(ADD(sp, 6));	// 115380                  add     sp, 6 ;~ 17C5:F009
cs=0x17c5;eip=0x00f00c; 	X(MOV(*(dw*)(raddr(ss,bp+var_6)), ax));	// 115381                  mov     [bp+var_6], ax ;~ 17C5:F00C
cs=0x17c5;eip=0x00f00f; 	T(OR(ax, ax));	// 115382                  or      ax, ax ;~ 17C5:F00F
cs=0x17c5;eip=0x00f011; 	J(JGE(loc_35246));	// 115383                  jge     short loc_35246 ;~ 17C5:F011
cs=0x17c5;eip=0x00f013; 	J(JMP(loc_351b4));	// 115384                  jmp     loc_351B4 ;~ 17C5:F013
loc_35246:
	// 6850 
cs=0x17c5;eip=0x00f016; 	T(MOV(al, *(raddr(ss,bp+var_4))));	// 115388                  mov     al, [bp+var_4] ;~ 17C5:F016
cs=0x17c5;eip=0x00f019; 	X(MOV(*(raddr(ds,si+6)), al));	// 115389                  mov     [si+6], al ;~ 17C5:F019
cs=0x17c5;eip=0x00f01c; 	X(INC(word_4edf8));	// 115390                  inc     ds:word_4EDF8 ;~ 17C5:F01C
cs=0x17c5;eip=0x00f020; 	T(ax = si;);	// 115391                  mov     ax, si ;~ 17C5:F020
cs=0x17c5;eip=0x00f022; 	T(SUB(ax, 0x61FE));	// 115392                  sub     ax, 61FEh ;~ 17C5:F022
cs=0x17c5;eip=0x00f025; 	T(cl = 3;);	// 115393                  mov     cl, 3 ;~ 17C5:F025
cs=0x17c5;eip=0x00f027; 	T(SAR(ax, cl));	// 115394                  sar     ax, cl ;~ 17C5:F027
cs=0x17c5;eip=0x00f029; 	T(cx = ax;);	// 115395                  mov     cx, ax ;~ 17C5:F029
cs=0x17c5;eip=0x00f02b; 	T(SHL(ax, 1));	// 115396                  shl     ax, 1 ;~ 17C5:F02B
cs=0x17c5;eip=0x00f02d; 	T(ADD(ax, cx));	// 115397                  add     ax, cx ;~ 17C5:F02D
cs=0x17c5;eip=0x00f02f; 	T(SHL(ax, 1));	// 115398                  shl     ax, 1 ;~ 17C5:F02F
cs=0x17c5;eip=0x00f031; 	T(ADD(ax, 0x629E));	// 115399                  add     ax, 629Eh ;~ 17C5:F031
cs=0x17c5;eip=0x00f034; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), ax));	// 115400                  mov     [bp+var_8], ax ;~ 17C5:F034
cs=0x17c5;eip=0x00f037; 	T(SUB(al, al));	// 115401                  sub     al, al ;~ 17C5:F037
cs=0x17c5;eip=0x00f039; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_8))));	// 115402                  mov     bx, [bp+var_8] ;~ 17C5:F039
cs=0x17c5;eip=0x00f03c; 	X(MOV(*(raddr(ds,bx)), al));	// 115403                  mov     [bx], al ;~ 17C5:F03C
cs=0x17c5;eip=0x00f03e; 	T(CBW);	// 115404                  cbw ;~ 17C5:F03E
cs=0x17c5;eip=0x00f03f; 	X(MOV(*(dw*)(raddr(ds,si+2)), ax));	// 115405                  mov     [si+2], ax ;~ 17C5:F03F
cs=0x17c5;eip=0x00f042; 	X(MOV(*(dw*)(raddr(ds,bx+4)), 0));	// 115406                  mov     word ptr [bx+4], 0 ;~ 17C5:F042
cs=0x17c5;eip=0x00f047; 	T(SUB(ax, ax));	// 115407                  sub     ax, ax ;~ 17C5:F047
cs=0x17c5;eip=0x00f049; 	X(MOV(*(dw*)(raddr(ds,si)), ax));	// 115408                  mov     [si], ax ;~ 17C5:F049
cs=0x17c5;eip=0x00f04b; 	X(MOV(*(dw*)(raddr(ds,si+4)), ax));	// 115409                  mov     [si+4], ax ;~ 17C5:F04B
cs=0x17c5;eip=0x00f04e; 	T(MOV(al, *(raddr(ss,bp+var_6))));	// 115410                  mov     al, byte ptr [bp+var_6] ;~ 17C5:F04E
cs=0x17c5;eip=0x00f051; 	X(MOV(*(raddr(ds,si+7)), al));	// 115411                  mov     [si+7], al ;~ 17C5:F051
cs=0x17c5;eip=0x00f054; 	T(ax = si;);	// 115412                  mov     ax, si ;~ 17C5:F054
loc_35286:
	// 6851 
cs=0x17c5;eip=0x00f056; 	X(POP(si));	// 115415                  pop     si ;~ 17C5:F056
cs=0x17c5;eip=0x00f057; 	X(POP(di));	// 115416                  pop     di ;~ 17C5:F057
cs=0x17c5;eip=0x00f058; 	T(sp = bp;);	// 115417                  mov     sp, bp ;~ 17C5:F058
cs=0x17c5;eip=0x00f05a; 	X(POP(bp));	// 115418                  pop     bp ;~ 17C5:F05A
cs=0x17c5;eip=0x00f05b; 	J(RETN(0));	// 115419                  retn ;~ 17C5:F05B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_351b4: 	goto loc_351b4;
        case m2c::kloc_351ba: 	goto loc_351ba;
        case m2c::kloc_351c0: 	goto loc_351c0;
        case m2c::kloc_351c8: 	goto loc_351c8;
        case m2c::kloc_351cb: 	goto loc_351cb;
        case m2c::kloc_351d2: 	goto loc_351d2;
        case m2c::kloc_351d8: 	goto loc_351d8;
        case m2c::kloc_351e7: 	goto loc_351e7;
        case m2c::kloc_35216: 	goto loc_35216;
        case m2c::kloc_3521d: 	goto loc_3521d;
        case m2c::kloc_35222: 	goto loc_35222;
        case m2c::kloc_35228: 	goto loc_35228;
        case m2c::kloc_35246: 	goto loc_35246;
        case m2c::kloc_35286: 	goto loc_35286;
        case m2c::ksub_35194: 	goto sub_35194;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_3528c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_3528c:
    _begin:
#undef var_4
#define var_4 -4
	// 115430 var_4           = word ptr -4 ;~ 17C5:F05C
#undef arg_0
#define arg_0 4
	// 115431 arg_0           = word ptr  4 ;~ 17C5:F05C
cs=0x17c5;eip=0x00f05c; 	X(PUSH(bp));	// 115433                  push    bp ;~ 17C5:F05C
cs=0x17c5;eip=0x00f05d; 	T(bp = sp;);	// 115434                  mov     bp, sp ;~ 17C5:F05D
cs=0x17c5;eip=0x00f05f; 	T(SUB(sp, 4));	// 115435                  sub     sp, 4 ;~ 17C5:F05F
cs=0x17c5;eip=0x00f062; 	X(PUSH(di));	// 115436                  push    di ;~ 17C5:F062
cs=0x17c5;eip=0x00f063; 	X(PUSH(si));	// 115437                  push    si ;~ 17C5:F063
cs=0x17c5;eip=0x00f064; 	T(MOV(si, *(dw*)(raddr(ss,bp+arg_0))));	// 115438                  mov     si, [bp+arg_0] ;~ 17C5:F064
cs=0x17c5;eip=0x00f067; 	T(SUB(di, di));	// 115439                  sub     di, di ;~ 17C5:F067
cs=0x17c5;eip=0x00f069; 	T(MOV(al, *(raddr(ds,si+6))));	// 115440                  mov     al, [si+6] ;~ 17C5:F069
cs=0x17c5;eip=0x00f06c; 	T(AND(al, 3));	// 115441                  and     al, 3 ;~ 17C5:F06C
cs=0x17c5;eip=0x00f06e; 	T(CMP(al, 2));	// 115442                  cmp     al, 2 ;~ 17C5:F06E
cs=0x17c5;eip=0x00f070; 	J(JNZ(loc_352e8));	// 115443                  jnz     short loc_352E8 ;~ 17C5:F070
cs=0x17c5;eip=0x00f072; 	T(TEST(*(raddr(ds,si+6)), 8));	// 115444                  test    byte ptr [si+6], 8 ;~ 17C5:F072
cs=0x17c5;eip=0x00f076; 	J(JNZ(loc_352c1));	// 115445                  jnz     short loc_352C1 ;~ 17C5:F076
cs=0x17c5;eip=0x00f078; 	T(bx = si;);	// 115446                  mov     bx, si ;~ 17C5:F078
cs=0x17c5;eip=0x00f07a; 	T(SUB(bx, 0x61FE));	// 115447                  sub     bx, 61FEh ;~ 17C5:F07A
cs=0x17c5;eip=0x00f07e; 	T(cl = 3;);	// 115448                  mov     cl, 3 ;~ 17C5:F07E
cs=0x17c5;eip=0x00f080; 	T(SAR(bx, cl));	// 115449                  sar     bx, cl ;~ 17C5:F080
cs=0x17c5;eip=0x00f082; 	T(ax = bx;);	// 115450                  mov     ax, bx ;~ 17C5:F082
cs=0x17c5;eip=0x00f084; 	T(SHL(bx, 1));	// 115451                  shl     bx, 1 ;~ 17C5:F084
cs=0x17c5;eip=0x00f086; 	T(ADD(bx, ax));	// 115452                  add     bx, ax ;~ 17C5:F086
cs=0x17c5;eip=0x00f088; 	T(SHL(bx, 1));	// 115453                  shl     bx, 1 ;~ 17C5:F088
cs=0x17c5;eip=0x00f08a; 	T(TEST(*(raddr(ds,bx+0x629E)), 1));	// 115454                  test    byte ptr [bx+629Eh], 1 ;~ 17C5:F08A
cs=0x17c5;eip=0x00f08f; 	J(JZ(loc_352e8));	// 115455                  jz      short loc_352E8 ;~ 17C5:F08F
loc_352c1:
	// 6852 
cs=0x17c5;eip=0x00f091; 	T(MOV(ax, *(dw*)(raddr(ds,si))));	// 115458                  mov     ax, [si] ;~ 17C5:F091
cs=0x17c5;eip=0x00f093; 	T(SUB(ax, *(dw*)(raddr(ds,si+4))));	// 115459                  sub     ax, [si+4] ;~ 17C5:F093
cs=0x17c5;eip=0x00f096; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 115460                  mov     [bp+var_4], ax ;~ 17C5:F096
cs=0x17c5;eip=0x00f099; 	T(OR(ax, ax));	// 115461                  or      ax, ax ;~ 17C5:F099
cs=0x17c5;eip=0x00f09b; 	J(JLE(loc_352e8));	// 115462                  jle     short loc_352E8 ;~ 17C5:F09B
cs=0x17c5;eip=0x00f09d; 	X(PUSH(ax));	// 115463                  push    ax ;~ 17C5:F09D
cs=0x17c5;eip=0x00f09e; 	X(PUSH(*(dw*)(raddr(ds,si+4))));	// 115464                  push    word ptr [si+4] ;~ 17C5:F09E
cs=0x17c5;eip=0x00f0a1; 	T(MOV(al, *(raddr(ds,si+7))));	// 115465                  mov     al, [si+7] ;~ 17C5:F0A1
cs=0x17c5;eip=0x00f0a4; 	T(CBW);	// 115466                  cbw ;~ 17C5:F0A4
cs=0x17c5;eip=0x00f0a5; 	X(PUSH(ax));	// 115467                  push    ax ;~ 17C5:F0A5
cs=0x17c5;eip=0x00f0a6; 	J(CALL(sub_356c8,0));	// 115468                  call    sub_356C8 ;~ 17C5:F0A6
cs=0x17c5;eip=0x00f0a9; 	T(ADD(sp, 6));	// 115469                  add     sp, 6 ;~ 17C5:F0A9
cs=0x17c5;eip=0x00f0ac; 	T(CMP(ax, *(dw*)(raddr(ss,bp+var_4))));	// 115470                  cmp     ax, [bp+var_4] ;~ 17C5:F0AC
cs=0x17c5;eip=0x00f0af; 	J(JZ(loc_352e8));	// 115471                  jz      short loc_352E8 ;~ 17C5:F0AF
cs=0x17c5;eip=0x00f0b1; 	X(OR(*(raddr(ds,si+6)), 0x20));	// 115472                  or      byte ptr [si+6], 20h ;~ 17C5:F0B1
cs=0x17c5;eip=0x00f0b5; 	T(di = 0x0FFFF;);	// 115473                  mov     di, 0FFFFh ;~ 17C5:F0B5
loc_352e8:
	// 6853 
cs=0x17c5;eip=0x00f0b8; 	T(MOV(ax, *(dw*)(raddr(ds,si+4))));	// 115477                  mov     ax, [si+4] ;~ 17C5:F0B8
cs=0x17c5;eip=0x00f0bb; 	X(MOV(*(dw*)(raddr(ds,si)), ax));	// 115478                  mov     [si], ax ;~ 17C5:F0BB
cs=0x17c5;eip=0x00f0bd; 	X(MOV(*(dw*)(raddr(ds,si+2)), 0));	// 115479                  mov     word ptr [si+2], 0 ;~ 17C5:F0BD
cs=0x17c5;eip=0x00f0c2; 	T(ax = di;);	// 115480                  mov     ax, di ;~ 17C5:F0C2
cs=0x17c5;eip=0x00f0c4; 	X(POP(si));	// 115481                  pop     si ;~ 17C5:F0C4
cs=0x17c5;eip=0x00f0c5; 	X(POP(di));	// 115482                  pop     di ;~ 17C5:F0C5
cs=0x17c5;eip=0x00f0c6; 	T(sp = bp;);	// 115483                  mov     sp, bp ;~ 17C5:F0C6
cs=0x17c5;eip=0x00f0c8; 	X(POP(bp));	// 115484                  pop     bp ;~ 17C5:F0C8
cs=0x17c5;eip=0x00f0c9; 	J(RETN(0));	// 115485                  retn ;~ 17C5:F0C9

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_352c1: 	goto loc_352c1;
        case m2c::kloc_352e8: 	goto loc_352e8;
        case m2c::ksub_3528c: 	goto sub_3528c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_352fa(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_352fa:
    _begin:
cs=0x17c5;eip=0x00f0ca; 	X(PUSH(bp));	// 115494                  push    bp ;~ 17C5:F0CA
cs=0x17c5;eip=0x00f0cb; 	T(bp = sp;);	// 115495                  mov     bp, sp ;~ 17C5:F0CB
cs=0x17c5;eip=0x00f0cd; 	T(SUB(sp, 2));	// 115496                  sub     sp, 2 ;~ 17C5:F0CD
cs=0x17c5;eip=0x00f0d0; 	X(PUSH(si));	// 115497                  push    si ;~ 17C5:F0D0
cs=0x17c5;eip=0x00f0d1; 	T(si = 0x61FE;);	// 115498                  mov     si, 61FEh ;~ 17C5:F0D1
cs=0x17c5;eip=0x00f0d4; 	T(cx = word_4edf6;);	// 115499                  mov     cx, ds:word_4EDF6 ;~ 17C5:F0D4
loc_35308:
	// 6854 
cs=0x17c5;eip=0x00f0d8; 	T(TEST(*(raddr(ds,si+6)), 0x83));	// 115502                  test    byte ptr [si+6], 83h ;~ 17C5:F0D8
cs=0x17c5;eip=0x00f0dc; 	J(JNZ(loc_35324));	// 115503                  jnz     short loc_35324 ;~ 17C5:F0DC
cs=0x17c5;eip=0x00f0de; 	T(SUB(ax, ax));	// 115504                  sub     ax, ax ;~ 17C5:F0DE
cs=0x17c5;eip=0x00f0e0; 	X(MOV(*(dw*)(raddr(ds,si+2)), ax));	// 115505                  mov     [si+2], ax ;~ 17C5:F0E0
cs=0x17c5;eip=0x00f0e3; 	X(MOV(*(raddr(ds,si+6)), al));	// 115506                  mov     [si+6], al ;~ 17C5:F0E3
cs=0x17c5;eip=0x00f0e6; 	X(MOV(*(dw*)(raddr(ds,si+4)), ax));	// 115507                  mov     [si+4], ax ;~ 17C5:F0E6
cs=0x17c5;eip=0x00f0e9; 	X(MOV(*(dw*)(raddr(ds,si)), ax));	// 115508                  mov     [si], ax ;~ 17C5:F0E9
cs=0x17c5;eip=0x00f0eb; 	X(MOV(*(raddr(ds,si+7)), 0x0FF));	// 115509                  mov     byte ptr [si+7], 0FFh ;~ 17C5:F0EB
cs=0x17c5;eip=0x00f0ef; 	T(ax = si;);	// 115510                  mov     ax, si ;~ 17C5:F0EF
cs=0x17c5;eip=0x00f0f1; 	J(JMP(loc_3532f));	// 115511                  jmp     short loc_3532F ;~ 17C5:F0F1
loc_35324:
	// 6855 
cs=0x17c5;eip=0x00f0f4; 	T(ax = si;);	// 115516                  mov     ax, si ;~ 17C5:F0F4
cs=0x17c5;eip=0x00f0f6; 	T(ADD(si, 8));	// 115517                  add     si, 8 ;~ 17C5:F0F6
cs=0x17c5;eip=0x00f0f9; 	T(CMP(ax, cx));	// 115518                  cmp     ax, cx ;~ 17C5:F0F9
cs=0x17c5;eip=0x00f0fb; 	J(JNZ(loc_35308));	// 115519                  jnz     short loc_35308 ;~ 17C5:F0FB
cs=0x17c5;eip=0x00f0fd; 	T(SUB(ax, ax));	// 115520                  sub     ax, ax ;~ 17C5:F0FD
loc_3532f:
	// 6856 
cs=0x17c5;eip=0x00f0ff; 	X(POP(si));	// 115523                  pop     si ;~ 17C5:F0FF
cs=0x17c5;eip=0x00f100; 	T(sp = bp;);	// 115524                  mov     sp, bp ;~ 17C5:F100
cs=0x17c5;eip=0x00f102; 	X(POP(bp));	// 115525                  pop     bp ;~ 17C5:F102
cs=0x17c5;eip=0x00f103; 	J(RETN(0));	// 115526                  retn ;~ 17C5:F103

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35308: 	goto loc_35308;
        case m2c::kloc_35324: 	goto loc_35324;
        case m2c::kloc_3532f: 	goto loc_3532f;
        case m2c::ksub_352fa: 	goto sub_352fa;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35334(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35334:
    _begin:
#undef arg_0
#define arg_0 4
	// 115536 arg_0           = word ptr  4 ;~ 17C5:F104
cs=0x17c5;eip=0x00f104; 	X(PUSH(bp));	// 115540                  push    bp ;~ 17C5:F104
cs=0x17c5;eip=0x00f105; 	T(bp = sp;);	// 115541                  mov     bp, sp ;~ 17C5:F105
cs=0x17c5;eip=0x00f107; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 115542                  mov     bx, [bp+arg_0] ;~ 17C5:F107
cs=0x17c5;eip=0x00f10a; 	T(CMP(bx, word_4ec92));	// 115543                  cmp     bx, ds:word_4EC92 ;~ 17C5:F10A
cs=0x17c5;eip=0x00f10e; 	J(JC(loc_35346));	// 115544                  jb      short loc_35346 ;~ 17C5:F10E
cs=0x17c5;eip=0x00f110; 	T(ax = 0x900;);	// 115545                  mov     ax, 900h ;~ 17C5:F110
cs=0x17c5;eip=0x00f113; 	T(STC);	// 115546                  stc ;~ 17C5:F113
cs=0x17c5;eip=0x00f114; 	J(JMP(loc_35351));	// 115547                  jmp     short loc_35351 ;~ 17C5:F114
loc_35346:
	// 6857 
cs=0x17c5;eip=0x00f116; 	T(ah = 0x3E;);	// 115551                  mov     ah, 3Eh ;~ 17C5:F116
cs=0x17c5;eip=0x00f118; 	S(_INT(0x21));	// 115552                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:F118
cs=0x17c5;eip=0x00f11a; 	J(JC(loc_35351));	// 115554                  jb      short loc_35351 ;~ 17C5:F11A
cs=0x17c5;eip=0x00f11c; 	X(MOV(*(raddr(ds,bx+0x61B4)), 0));	// 115555                  mov     byte ptr [bx+61B4h], 0 ;~ 17C5:F11C
loc_35351:
	// 6858 
cs=0x17c5;eip=0x00f121; 	J(return seg2623_ee22_proc(m2c::kloc_35052, _state););	// 115559                  jmp     loc_35052 ;~ 17C5:F121

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35346: 	goto loc_35346;
        case m2c::kloc_35351: 	goto loc_35351;
        case m2c::ksub_35334: 	goto sub_35334;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35354(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35354:
    _begin:
#undef var_1
#define var_1 -1
	// 115570 var_1           = byte ptr -1 ;~ 17C5:F124
#undef arg_0
#define arg_0 4
	// 115571 arg_0           = word ptr  4 ;~ 17C5:F124
#undef arg_2
#define arg_2 6
	// 115572 arg_2           = word ptr  6 ;~ 17C5:F124
#undef arg_4
#define arg_4 8
	// 115573 arg_4           = word ptr  8 ;~ 17C5:F124
cs=0x17c5;eip=0x00f124; 	X(PUSH(bp));	// 115577                  push    bp ;~ 17C5:F124
cs=0x17c5;eip=0x00f125; 	T(bp = sp;);	// 115578                  mov     bp, sp ;~ 17C5:F125
cs=0x17c5;eip=0x00f127; 	T(SUB(sp, 2));	// 115579                  sub     sp, 2 ;~ 17C5:F127
cs=0x17c5;eip=0x00f12a; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 115580                  mov     bx, [bp+arg_0] ;~ 17C5:F12A
cs=0x17c5;eip=0x00f12d; 	T(CMP(bx, word_4ec92));	// 115581                  cmp     bx, ds:word_4EC92 ;~ 17C5:F12D
cs=0x17c5;eip=0x00f131; 	J(JC(loc_35369));	// 115582                  jb      short loc_35369 ;~ 17C5:F131
cs=0x17c5;eip=0x00f133; 	T(STC);	// 115583                  stc ;~ 17C5:F133
cs=0x17c5;eip=0x00f134; 	T(ax = 0x900;);	// 115584                  mov     ax, 900h ;~ 17C5:F134
cs=0x17c5;eip=0x00f137; 	J(JMP(loc_353c5));	// 115585                  jmp     short loc_353C5 ;~ 17C5:F137
loc_35369:
	// 6859 
cs=0x17c5;eip=0x00f139; 	T(XOR(ax, ax));	// 115589                  xor     ax, ax ;~ 17C5:F139
cs=0x17c5;eip=0x00f13b; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 115590                  mov     cx, [bp+arg_4] ;~ 17C5:F13B
cs=0x17c5;eip=0x00f13e; 	J(JCXZ(loc_353c5));	// 115591                  jcxz    short loc_353C5 ;~ 17C5:F13E
cs=0x17c5;eip=0x00f140; 	T(TEST(*(raddr(ds,bx+0x61B4)), 2));	// 115592                  test    byte ptr [bx+61B4h], 2 ;~ 17C5:F140
cs=0x17c5;eip=0x00f145; 	J(JNZ(loc_353c5));	// 115593                  jnz     short loc_353C5 ;~ 17C5:F145
cs=0x17c5;eip=0x00f147; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 115594                  mov     cx, [bp+arg_4] ;~ 17C5:F147
cs=0x17c5;eip=0x00f14a; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 115595                  mov     dx, [bp+arg_2] ;~ 17C5:F14A
cs=0x17c5;eip=0x00f14d; 	T(ah = 0x3F;);	// 115596                  mov     ah, 3Fh ;~ 17C5:F14D
cs=0x17c5;eip=0x00f14f; 	S(_INT(0x21));	// 115597                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:F14F
cs=0x17c5;eip=0x00f151; 	J(JNC(loc_35387));	// 115600                  jnb     short loc_35387 ;~ 17C5:F151
cs=0x17c5;eip=0x00f153; 	T(ah = 9;);	// 115601                  mov     ah, 9 ;~ 17C5:F153
cs=0x17c5;eip=0x00f155; 	J(JMP(loc_353c5));	// 115602                  jmp     short loc_353C5 ;~ 17C5:F155
loc_35387:
	// 6860 
cs=0x17c5;eip=0x00f157; 	T(TEST(*(raddr(ds,bx+0x61B4)), 0x80));	// 115606                  test    byte ptr [bx+61B4h], 80h ;~ 17C5:F157
cs=0x17c5;eip=0x00f15c; 	J(JZ(loc_353c5));	// 115607                  jz      short loc_353C5 ;~ 17C5:F15C
cs=0x17c5;eip=0x00f15e; 	X(AND(*(raddr(ds,bx+0x61B4)), 0x0FB));	// 115608                  and     byte ptr [bx+61B4h], 0FBh ;~ 17C5:F15E
cs=0x17c5;eip=0x00f163; 	X(PUSH(si));	// 115609                  push    si ;~ 17C5:F163
cs=0x17c5;eip=0x00f164; 	X(PUSH(di));	// 115610                  push    di ;~ 17C5:F164
cs=0x17c5;eip=0x00f165; 	T(CLD);	// 115611                  cld ;~ 17C5:F165
cs=0x17c5;eip=0x00f166; 	T(si = dx;);	// 115612                  mov     si, dx ;~ 17C5:F166
cs=0x17c5;eip=0x00f168; 	T(di = dx;);	// 115613                  mov     di, dx ;~ 17C5:F168
cs=0x17c5;eip=0x00f16a; 	T(cx = ax;);	// 115614                  mov     cx, ax ;~ 17C5:F16A
cs=0x17c5;eip=0x00f16c; 	J(JCXZ(loc_353c3));	// 115615                  jcxz    short loc_353C3 ;~ 17C5:F16C
cs=0x17c5;eip=0x00f16e; 	T(ah = 0x0D;);	// 115616                  mov     ah, 0Dh ;~ 17C5:F16E
cs=0x17c5;eip=0x00f170; 	T(CMP(*(raddr(ds,si)), 0x0A));	// 115617                  cmp     byte ptr [si], 0Ah ;~ 17C5:F170
cs=0x17c5;eip=0x00f173; 	J(JNZ(loc_353aa));	// 115618                  jnz     short loc_353AA ;~ 17C5:F173
cs=0x17c5;eip=0x00f175; 	X(OR(*(raddr(ds,bx+0x61B4)), 4));	// 115619                  or      byte ptr [bx+61B4h], 4 ;~ 17C5:F175
loc_353aa:
	// 6861 
cs=0x17c5;eip=0x00f17a; 	T(LODSB);	// 115623                  lodsb ;~ 17C5:F17A
cs=0x17c5;eip=0x00f17b; 	T(CMP(al, ah));	// 115624                  cmp     al, ah ;~ 17C5:F17B
cs=0x17c5;eip=0x00f17d; 	J(JZ(loc_353c8));	// 115625                  jz      short loc_353C8 ;~ 17C5:F17D
cs=0x17c5;eip=0x00f17f; 	T(CMP(al, 0x1A));	// 115626                  cmp     al, 1Ah ;~ 17C5:F17F
cs=0x17c5;eip=0x00f181; 	J(JNZ(loc_353ba));	// 115627                  jnz     short loc_353BA ;~ 17C5:F181
cs=0x17c5;eip=0x00f183; 	X(OR(*(raddr(ds,bx+0x61B4)), 2));	// 115628                  or      byte ptr [bx+61B4h], 2 ;~ 17C5:F183
cs=0x17c5;eip=0x00f188; 	J(JMP(loc_353bf));	// 115629                  jmp     short loc_353BF ;~ 17C5:F188
loc_353ba:
	// 6862 
cs=0x17c5;eip=0x00f18a; 	X(MOV(*(raddr(ds,di)), al));	// 115634                  mov     [di], al ;~ 17C5:F18A
cs=0x17c5;eip=0x00f18c; 	T(INC(di));	// 115635                  inc     di ;~ 17C5:F18C
loc_353bd:
	// 6863 
cs=0x17c5;eip=0x00f18d; 	J(LOOP(loc_353aa));	// 115639                  loop    loc_353AA ;~ 17C5:F18D
loc_353bf:
	// 6864 
cs=0x17c5;eip=0x00f18f; 	T(ax = di;);	// 115642                  mov     ax, di ;~ 17C5:F18F
cs=0x17c5;eip=0x00f191; 	T(SUB(ax, dx));	// 115643                  sub     ax, dx ;~ 17C5:F191
loc_353c3:
	// 6865 
cs=0x17c5;eip=0x00f193; 	X(POP(di));	// 115647                  pop     di ;~ 17C5:F193
cs=0x17c5;eip=0x00f194; 	X(POP(si));	// 115648                  pop     si ;~ 17C5:F194
loc_353c5:
	// 6866 
cs=0x17c5;eip=0x00f195; 	J(return seg2623_ee22_proc(m2c::kloc_35065, _state););	// 115652                  jmp     loc_35065 ;~ 17C5:F195
loc_353c8:
	// 6867 
cs=0x17c5;eip=0x00f198; 	T(CMP(cx, 1));	// 115656                  cmp     cx, 1 ;~ 17C5:F198
cs=0x17c5;eip=0x00f19b; 	J(JZ(loc_353d4));	// 115657                  jz      short loc_353D4 ;~ 17C5:F19B
cs=0x17c5;eip=0x00f19d; 	T(CMP(*(raddr(ds,si)), 0x0A));	// 115658                  cmp     byte ptr [si], 0Ah ;~ 17C5:F19D
cs=0x17c5;eip=0x00f1a0; 	J(JZ(loc_353bd));	// 115659                  jz      short loc_353BD ;~ 17C5:F1A0
cs=0x17c5;eip=0x00f1a2; 	J(JMP(loc_353ba));	// 115660                  jmp     short loc_353BA ;~ 17C5:F1A2
loc_353d4:
	// 6868 
cs=0x17c5;eip=0x00f1a4; 	T(TEST(*(raddr(ds,bx+0x61B4)), 0x40));	// 115664                  test    byte ptr [bx+61B4h], 40h ;~ 17C5:F1A4
cs=0x17c5;eip=0x00f1a9; 	J(JZ(loc_353f3));	// 115665                  jz      short loc_353F3 ;~ 17C5:F1A9
cs=0x17c5;eip=0x00f1ab; 	T(ax = 0x4400;);	// 115666                  mov     ax, 4400h ;~ 17C5:F1AB
cs=0x17c5;eip=0x00f1ae; 	S(_INT(0x21));	// 115667                  int     21h             ; DOS - 2+ - IOCTL - GET DEVICE INFORMATION ;~ 17C5:F1AE
cs=0x17c5;eip=0x00f1b0; 	T(TEST(dx, 0x20));	// 115669                  test    dx, 20h ;~ 17C5:F1B0
cs=0x17c5;eip=0x00f1b4; 	J(JNZ(loc_353ef));	// 115670                  jnz     short loc_353EF ;~ 17C5:F1B4
cs=0x17c5;eip=0x00f1b6; 	T(dx = bp+var_1);	// 115671                  lea     dx, [bp+var_1] ;~ 17C5:F1B6
cs=0x17c5;eip=0x00f1b9; 	T(ah = 0x3F;);	// 115672                  mov     ah, 3Fh ;~ 17C5:F1B9
cs=0x17c5;eip=0x00f1bb; 	S(_INT(0x21));	// 115673                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:F1BB
cs=0x17c5;eip=0x00f1bd; 	J(JC(loc_353c3));	// 115676                  jb      short loc_353C3 ;~ 17C5:F1BD
loc_353ef:
	// 6869 
cs=0x17c5;eip=0x00f1bf; 	T(al = 0x0A;);	// 115680                  mov     al, 0Ah ;~ 17C5:F1BF
cs=0x17c5;eip=0x00f1c1; 	J(JMP(loc_3541f));	// 115681                  jmp     short loc_3541F ;~ 17C5:F1C1
loc_353f3:
	// 6870 
cs=0x17c5;eip=0x00f1c3; 	X(MOV(*(raddr(ss,bp+var_1)), 0));	// 115685                  mov     [bp+var_1], 0 ;~ 17C5:F1C3
cs=0x17c5;eip=0x00f1c7; 	T(dx = bp+var_1);	// 115686                  lea     dx, [bp+var_1] ;~ 17C5:F1C7
cs=0x17c5;eip=0x00f1ca; 	T(ah = 0x3F;);	// 115687                  mov     ah, 3Fh ;~ 17C5:F1CA
cs=0x17c5;eip=0x00f1cc; 	S(_INT(0x21));	// 115688                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:F1CC
cs=0x17c5;eip=0x00f1ce; 	J(JC(loc_353c3));	// 115691                  jb      short loc_353C3 ;~ 17C5:F1CE
cs=0x17c5;eip=0x00f1d0; 	T(OR(ax, ax));	// 115692                  or      ax, ax ;~ 17C5:F1D0
cs=0x17c5;eip=0x00f1d2; 	J(JZ(loc_3541d));	// 115693                  jz      short loc_3541D ;~ 17C5:F1D2
cs=0x17c5;eip=0x00f1d4; 	T(CMP(*(dw*)(raddr(ss,bp+arg_4)), 1));	// 115694                  cmp     [bp+arg_4], 1 ;~ 17C5:F1D4
cs=0x17c5;eip=0x00f1d8; 	J(JZ(loc_35429));	// 115695                  jz      short loc_35429 ;~ 17C5:F1D8
loc_3540a:
	// 6871 
cs=0x17c5;eip=0x00f1da; 	T(cx = 0x0FFFF;);	// 115698                  mov     cx, 0FFFFh ;~ 17C5:F1DA
cs=0x17c5;eip=0x00f1dd; 	T(dx = cx;);	// 115699                  mov     dx, cx ;~ 17C5:F1DD
cs=0x17c5;eip=0x00f1df; 	T(ax = 0x4201;);	// 115700                  mov     ax, 4201h ;~ 17C5:F1DF
cs=0x17c5;eip=0x00f1e2; 	S(_INT(0x21));	// 115701                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:F1E2
cs=0x17c5;eip=0x00f1e4; 	T(cx = 1;);	// 115703                  mov     cx, 1 ;~ 17C5:F1E4
cs=0x17c5;eip=0x00f1e7; 	T(CMP(*(raddr(ss,bp+var_1)), 0x0A));	// 115704                  cmp     [bp+var_1], 0Ah ;~ 17C5:F1E7
cs=0x17c5;eip=0x00f1eb; 	J(JZ(loc_35424));	// 115705                  jz      short loc_35424 ;~ 17C5:F1EB
loc_3541d:
	// 6872 
cs=0x17c5;eip=0x00f1ed; 	T(al = 0x0D;);	// 115708                  mov     al, 0Dh ;~ 17C5:F1ED
loc_3541f:
	// 6873 
cs=0x17c5;eip=0x00f1ef; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 115711                  mov     dx, [bp+arg_2] ;~ 17C5:F1EF
cs=0x17c5;eip=0x00f1f2; 	J(JMP(loc_353ba));	// 115712                  jmp     short loc_353BA ;~ 17C5:F1F2
loc_35424:
	// 6874 
cs=0x17c5;eip=0x00f1f4; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 115716                  mov     dx, [bp+arg_2] ;~ 17C5:F1F4
cs=0x17c5;eip=0x00f1f7; 	J(JMP(loc_353bd));	// 115717                  jmp     short loc_353BD ;~ 17C5:F1F7
loc_35429:
	// 6875 
cs=0x17c5;eip=0x00f1f9; 	T(CMP(*(raddr(ss,bp+var_1)), 0x0A));	// 115721                  cmp     [bp+var_1], 0Ah ;~ 17C5:F1F9
cs=0x17c5;eip=0x00f1fd; 	J(JNZ(loc_3540a));	// 115722                  jnz     short loc_3540A ;~ 17C5:F1FD
cs=0x17c5;eip=0x00f1ff; 	J(JMP(loc_353ef));	// 115723                  jmp     short loc_353EF ;~ 17C5:F1FF

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35369: 	goto loc_35369;
        case m2c::kloc_35387: 	goto loc_35387;
        case m2c::kloc_353aa: 	goto loc_353aa;
        case m2c::kloc_353ba: 	goto loc_353ba;
        case m2c::kloc_353bd: 	goto loc_353bd;
        case m2c::kloc_353bf: 	goto loc_353bf;
        case m2c::kloc_353c3: 	goto loc_353c3;
        case m2c::kloc_353c5: 	goto loc_353c5;
        case m2c::kloc_353c8: 	goto loc_353c8;
        case m2c::kloc_353d4: 	goto loc_353d4;
        case m2c::kloc_353ef: 	goto loc_353ef;
        case m2c::kloc_353f3: 	goto loc_353f3;
        case m2c::kloc_3540a: 	goto loc_3540a;
        case m2c::kloc_3541d: 	goto loc_3541d;
        case m2c::kloc_3541f: 	goto loc_3541f;
        case m2c::kloc_35424: 	goto loc_35424;
        case m2c::kloc_35429: 	goto loc_35429;
        case m2c::ksub_35354: 	goto sub_35354;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_f202_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_f202_proc:
    _begin:
cs=0x17c5;eip=0x00f202; 	T(MOV(cx, *(dw*)(raddr(ss,bp+0x0A))));	// 115728                  mov     cx, [bp+0Ah] ;~ 17C5:F202
cs=0x17c5;eip=0x00f205; 	T(MOV(ax, *(dw*)(raddr(ss,bp+4))));	// 115729                  mov     ax, [bp+4] ;~ 17C5:F205
cs=0x17c5;eip=0x00f208; 	T(MOV(dx, *(dw*)(raddr(ss,bp+6))));	// 115730                  mov     dx, [bp+6] ;~ 17C5:F208
cs=0x17c5;eip=0x00f20b; 	T(MOV(di, *(dw*)(raddr(ss,bp+8))));	// 115731                  mov     di, [bp+8] ;~ 17C5:F20B
loc_3543e:
	// 6876 
cs=0x17c5;eip=0x00f20e; 	X(PUSH(di));	// 115735                  push    di ;~ 17C5:F20E
cs=0x17c5;eip=0x00f20f; 	X(PUSH(ds));	// 115736                  push    ds ;~ 17C5:F20F
cs=0x17c5;eip=0x00f210; 	X(POP(es));	// 115737                  pop     es ;~ 17C5:F210
cs=0x17c5;eip=0x00f211; 	T(CLD);	// 115738                  cld ;~ 17C5:F211
cs=0x17c5;eip=0x00f212; 	T(XCHG(ax, bx));	// 115739                  xchg    ax, bx ;~ 17C5:F212
cs=0x17c5;eip=0x00f213; 	T(OR(al, al));	// 115740                  or      al, al ;~ 17C5:F213
cs=0x17c5;eip=0x00f215; 	J(JZ(loc_3545a));	// 115741                  jz      short loc_3545A ;~ 17C5:F215
cs=0x17c5;eip=0x00f217; 	T(CMP(cx, 0x0A));	// 115742                  cmp     cx, 0Ah ;~ 17C5:F217
cs=0x17c5;eip=0x00f21a; 	J(JNZ(loc_3545a));	// 115743                  jnz     short loc_3545A ;~ 17C5:F21A
cs=0x17c5;eip=0x00f21c; 	T(OR(dx, dx));	// 115744                  or      dx, dx ;~ 17C5:F21C
cs=0x17c5;eip=0x00f21e; 	J(JNS(loc_3545a));	// 115745                  jns     short loc_3545A ;~ 17C5:F21E
cs=0x17c5;eip=0x00f220; 	T(al = 0x2D;);	// 115746                  mov     al, 2Dh ; '-' ;~ 17C5:F220
cs=0x17c5;eip=0x00f222; 	X(STOSB);	// 115747                  stosb ;~ 17C5:F222
cs=0x17c5;eip=0x00f223; 	T(NEG(bx));	// 115748                  neg     bx ;~ 17C5:F223
cs=0x17c5;eip=0x00f225; 	T(ADC(dx, 0));	// 115749                  adc     dx, 0 ;~ 17C5:F225
cs=0x17c5;eip=0x00f228; 	T(NEG(dx));	// 115750                  neg     dx ;~ 17C5:F228
loc_3545a:
	// 6877 
cs=0x17c5;eip=0x00f22a; 	T(si = di;);	// 115754                  mov     si, di ;~ 17C5:F22A
loc_3545c:
	// 6878 
cs=0x17c5;eip=0x00f22c; 	T(XCHG(ax, dx));	// 115757                  xchg    ax, dx ;~ 17C5:F22C
cs=0x17c5;eip=0x00f22d; 	T(XOR(dx, dx));	// 115758                  xor     dx, dx ;~ 17C5:F22D
cs=0x17c5;eip=0x00f22f; 	T(OR(ax, ax));	// 115759                  or      ax, ax ;~ 17C5:F22F
cs=0x17c5;eip=0x00f231; 	J(JZ(loc_35465));	// 115760                  jz      short loc_35465 ;~ 17C5:F231
cs=0x17c5;eip=0x00f233; 	T(DIV2(cx));	// 115761                  div     cx ;~ 17C5:F233
loc_35465:
	// 6879 
cs=0x17c5;eip=0x00f235; 	T(XCHG(ax, bx));	// 115764                  xchg    ax, bx ;~ 17C5:F235
cs=0x17c5;eip=0x00f236; 	T(DIV2(cx));	// 115765                  div     cx ;~ 17C5:F236
cs=0x17c5;eip=0x00f238; 	T(XCHG(ax, dx));	// 115766                  xchg    ax, dx ;~ 17C5:F238
cs=0x17c5;eip=0x00f239; 	T(XCHG(dx, bx));	// 115767                  xchg    dx, bx ;~ 17C5:F239
cs=0x17c5;eip=0x00f23b; 	T(ADD(al, 0x30));	// 115768                  add     al, 30h ; '0' ;~ 17C5:F23B
cs=0x17c5;eip=0x00f23d; 	T(CMP(al, 0x39));	// 115769                  cmp     al, 39h ; '9' ;~ 17C5:F23D
cs=0x17c5;eip=0x00f23f; 	J(JBE(loc_35473));	// 115770                  jbe     short loc_35473 ;~ 17C5:F23F
cs=0x17c5;eip=0x00f241; 	T(ADD(al, 0x27));	// 115771                  add     al, 27h ; ''' ;~ 17C5:F241
loc_35473:
	// 6880 
cs=0x17c5;eip=0x00f243; 	X(STOSB);	// 115774                  stosb ;~ 17C5:F243
cs=0x17c5;eip=0x00f244; 	T(ax = dx;);	// 115775                  mov     ax, dx ;~ 17C5:F244
cs=0x17c5;eip=0x00f246; 	T(OR(ax, bx));	// 115776                  or      ax, bx ;~ 17C5:F246
cs=0x17c5;eip=0x00f248; 	J(JNZ(loc_3545c));	// 115777                  jnz     short loc_3545C ;~ 17C5:F248
cs=0x17c5;eip=0x00f24a; 	X(MOV(*(raddr(ds,di)), al));	// 115778                  mov     [di], al ;~ 17C5:F24A
loc_3547c:
	// 6881 
cs=0x17c5;eip=0x00f24c; 	T(DEC(di));	// 115781                  dec     di ;~ 17C5:F24C
cs=0x17c5;eip=0x00f24d; 	T(LODSB);	// 115782                  lodsb ;~ 17C5:F24D
cs=0x17c5;eip=0x00f24e; 	X(XCHG(al, *(raddr(ds,di))));	// 115783                  xchg    al, [di] ;~ 17C5:F24E
cs=0x17c5;eip=0x00f250; 	X(MOV(*(raddr(ds,si-1)), al));	// 115784                  mov     [si-1], al ;~ 17C5:F250
cs=0x17c5;eip=0x00f253; 	T(ax = si+1);	// 115785                  lea     ax, [si+1] ;~ 17C5:F253
cs=0x17c5;eip=0x00f256; 	T(CMP(ax, di));	// 115786                  cmp     ax, di ;~ 17C5:F256
cs=0x17c5;eip=0x00f258; 	J(JC(loc_3547c));	// 115787                  jb      short loc_3547C ;~ 17C5:F258
cs=0x17c5;eip=0x00f25a; 	X(POP(ax));	// 115788                  pop     ax ;~ 17C5:F25A
cs=0x17c5;eip=0x00f25b; 	X(POP(di));	// 115789                  pop     di ;~ 17C5:F25B
cs=0x17c5;eip=0x00f25c; 	X(POP(si));	// 115790                  pop     si ;~ 17C5:F25C
cs=0x17c5;eip=0x00f25d; 	T(sp = bp;);	// 115791                  mov     sp, bp ;~ 17C5:F25D
cs=0x17c5;eip=0x00f25f; 	X(POP(bp));	// 115792                  pop     bp ;~ 17C5:F25F
cs=0x17c5;eip=0x00f260; 	J(RETN(0));	// 115793                  retn ;~ 17C5:F260

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3543e: 	goto loc_3543e;
        case m2c::kloc_3545a: 	goto loc_3545a;
        case m2c::kloc_3545c: 	goto loc_3545c;
        case m2c::kloc_35465: 	goto loc_35465;
        case m2c::kloc_35473: 	goto loc_35473;
        case m2c::kloc_3547c: 	goto loc_3547c;
        case m2c::kseg2623_f202_proc: 	goto seg2623_f202_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35492(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35492:
    _begin:
#undef arg_0
#define arg_0 4
	// 115804 arg_0           = word ptr  4 ;~ 17C5:F262
cs=0x17c5;eip=0x00f262; 	X(PUSH(bp));	// 115808                  push    bp ;~ 17C5:F262
cs=0x17c5;eip=0x00f263; 	T(bp = sp;);	// 115809                  mov     bp, sp ;~ 17C5:F263
cs=0x17c5;eip=0x00f265; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 115810                  mov     dx, [bp+arg_0] ;~ 17C5:F265
cs=0x17c5;eip=0x00f268; 	T(ah = 0x41;);	// 115811                  mov     ah, 41h ;~ 17C5:F268
cs=0x17c5;eip=0x00f26a; 	S(_INT(0x21));	// 115812                  int     21h             ; DOS - 2+ - DELETE A FILE (UNLINK) ;~ 17C5:F26A
cs=0x17c5;eip=0x00f26c; 	J(return seg2623_ee22_proc(m2c::kloc_35052, _state););	// 115814                  jmp     loc_35052 ;~ 17C5:F26C

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::ksub_35492: 	goto sub_35492;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_354a0(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_354a0:
    _begin:
cs=0x17c5;eip=0x00f270; 	T(XOR(ch, ch));	// 115824                  xor     ch, ch ;~ 17C5:F270
cs=0x17c5;eip=0x00f272; 	J(JCXZ(locret_354aa));	// 115825                  jcxz    short locret_354AA ;~ 17C5:F272
loc_354a4:
	// 6882 
cs=0x17c5;eip=0x00f274; 	T(SHL(ax, 1));	// 115828                  shl     ax, 1 ;~ 17C5:F274
cs=0x17c5;eip=0x00f276; 	T(RCL(dx, 1));	// 115829                  rcl     dx, 1 ;~ 17C5:F276
cs=0x17c5;eip=0x00f278; 	J(LOOP(loc_354a4));	// 115830                  loop    loc_354A4 ;~ 17C5:F278
locret_354aa:
	// 6883 
cs=0x17c5;eip=0x00f27a; 	J(RETN(0));	// 115833                  retn ;~ 17C5:F27A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_354a4: 	goto loc_354a4;
        case m2c::klocret_354aa: 	goto locret_354aa;
        case m2c::ksub_354a0: 	goto sub_354a0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_354ac(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_354ac:
    _begin:
cs=0x17c5;eip=0x00f27c; 	T(XOR(ch, ch));	// 115843                  xor     ch, ch ;~ 17C5:F27C
cs=0x17c5;eip=0x00f27e; 	J(JCXZ(locret_354b6));	// 115844                  jcxz    short locret_354B6 ;~ 17C5:F27E
loc_354b0:
	// 6884 
cs=0x17c5;eip=0x00f280; 	T(SAR(dx, 1));	// 115847                  sar     dx, 1 ;~ 17C5:F280
cs=0x17c5;eip=0x00f282; 	T(RCR(ax, 1));	// 115848                  rcr     ax, 1 ;~ 17C5:F282
cs=0x17c5;eip=0x00f284; 	J(LOOP(loc_354b0));	// 115849                  loop    loc_354B0 ;~ 17C5:F284
locret_354b6:
	// 6885 
cs=0x17c5;eip=0x00f286; 	J(RETN(0));	// 115852                  retn ;~ 17C5:F286

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_354b0: 	goto loc_354b0;
        case m2c::klocret_354b6: 	goto locret_354b6;
        case m2c::ksub_354ac: 	goto sub_354ac;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_354b8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_354b8:
    _begin:
#undef var_2
#define var_2 -2
	// 115864 var_2           = word ptr -2 ;~ 17C5:F288
#undef arg_0
#define arg_0 4
	// 115865 arg_0           = word ptr  4 ;~ 17C5:F288
cs=0x17c5;eip=0x00f288; 	X(PUSH(bp));	// 115867                  push    bp ;~ 17C5:F288
cs=0x17c5;eip=0x00f289; 	T(bp = sp;);	// 115868                  mov     bp, sp ;~ 17C5:F289
cs=0x17c5;eip=0x00f28b; 	T(SUB(sp, 2));	// 115869                  sub     sp, 2 ;~ 17C5:F28B
cs=0x17c5;eip=0x00f28e; 	X(PUSH(si));	// 115870                  push    si ;~ 17C5:F28E
cs=0x17c5;eip=0x00f28f; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 115871                  mov     ax, [bp+arg_0] ;~ 17C5:F28F
cs=0x17c5;eip=0x00f292; 	T(SUB(ax, 0x61FE));	// 115872                  sub     ax, 61FEh ;~ 17C5:F292
cs=0x17c5;eip=0x00f295; 	T(cl = 3;);	// 115873                  mov     cl, 3 ;~ 17C5:F295
cs=0x17c5;eip=0x00f297; 	T(SAR(ax, cl));	// 115874                  sar     ax, cl ;~ 17C5:F297
cs=0x17c5;eip=0x00f299; 	T(cx = ax;);	// 115875                  mov     cx, ax ;~ 17C5:F299
cs=0x17c5;eip=0x00f29b; 	T(SHL(ax, 1));	// 115876                  shl     ax, 1 ;~ 17C5:F29B
cs=0x17c5;eip=0x00f29d; 	T(ADD(ax, cx));	// 115877                  add     ax, cx ;~ 17C5:F29D
cs=0x17c5;eip=0x00f29f; 	T(SHL(ax, 1));	// 115878                  shl     ax, 1 ;~ 17C5:F29F
cs=0x17c5;eip=0x00f2a1; 	T(ADD(ax, 0x629E));	// 115879                  add     ax, 629Eh ;~ 17C5:F2A1
cs=0x17c5;eip=0x00f2a4; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 115880                  mov     [bp+var_2], ax ;~ 17C5:F2A4
cs=0x17c5;eip=0x00f2a7; 	T(ax = 0x200;);	// 115881                  mov     ax, 200h ;~ 17C5:F2A7
cs=0x17c5;eip=0x00f2aa; 	X(PUSH(ax));	// 115882                  push    ax ;~ 17C5:F2AA
cs=0x17c5;eip=0x00f2ab; 	J(CALL(sub_35802,0));	// 115883                  call    sub_35802 ;~ 17C5:F2AB
cs=0x17c5;eip=0x00f2ae; 	T(ADD(sp, 2));	// 115884                  add     sp, 2 ;~ 17C5:F2AE
cs=0x17c5;eip=0x00f2b1; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 115885                  mov     bx, [bp+arg_0] ;~ 17C5:F2B1
cs=0x17c5;eip=0x00f2b4; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 115886                  mov     [bx+4], ax ;~ 17C5:F2B4
cs=0x17c5;eip=0x00f2b7; 	T(OR(ax, ax));	// 115887                  or      ax, ax ;~ 17C5:F2B7
cs=0x17c5;eip=0x00f2b9; 	J(JZ(loc_354fa));	// 115888                  jz      short loc_354FA ;~ 17C5:F2B9
cs=0x17c5;eip=0x00f2bb; 	X(OR(*(raddr(ds,bx+6)), 8));	// 115889                  or      byte ptr [bx+6], 8 ;~ 17C5:F2BB
cs=0x17c5;eip=0x00f2bf; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2))));	// 115890                  mov     bx, [bp+var_2] ;~ 17C5:F2BF
cs=0x17c5;eip=0x00f2c2; 	X(MOV(*(dw*)(raddr(ds,bx+2)), 0x200));	// 115891                  mov     word ptr [bx+2], 200h ;~ 17C5:F2C2
cs=0x17c5;eip=0x00f2c7; 	J(JMP(loc_35510));	// 115892                  jmp     short loc_35510 ;~ 17C5:F2C7
loc_354fa:
	// 6886 
cs=0x17c5;eip=0x00f2ca; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 115897                  mov     bx, [bp+arg_0] ;~ 17C5:F2CA
cs=0x17c5;eip=0x00f2cd; 	X(OR(*(raddr(ds,bx+6)), 4));	// 115898                  or      byte ptr [bx+6], 4 ;~ 17C5:F2CD
cs=0x17c5;eip=0x00f2d1; 	T(MOV(ax, *(dw*)(raddr(ss,bp+var_2))));	// 115899                  mov     ax, [bp+var_2] ;~ 17C5:F2D1
cs=0x17c5;eip=0x00f2d4; 	T(INC(ax));	// 115900                  inc     ax ;~ 17C5:F2D4
cs=0x17c5;eip=0x00f2d5; 	X(MOV(*(dw*)(raddr(ds,bx+4)), ax));	// 115901                  mov     [bx+4], ax ;~ 17C5:F2D5
cs=0x17c5;eip=0x00f2d8; 	T(MOV(bx, *(dw*)(raddr(ss,bp+var_2))));	// 115902                  mov     bx, [bp+var_2] ;~ 17C5:F2D8
cs=0x17c5;eip=0x00f2db; 	X(MOV(*(dw*)(raddr(ds,bx+2)), 1));	// 115903                  mov     word ptr [bx+2], 1 ;~ 17C5:F2DB
loc_35510:
	// 6887 
cs=0x17c5;eip=0x00f2e0; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 115906                  mov     bx, [bp+arg_0] ;~ 17C5:F2E0
cs=0x17c5;eip=0x00f2e3; 	T(si = bx;);	// 115907                  mov     si, bx ;~ 17C5:F2E3
cs=0x17c5;eip=0x00f2e5; 	T(MOV(ax, *(dw*)(raddr(ds,si+4))));	// 115908                  mov     ax, [si+4] ;~ 17C5:F2E5
cs=0x17c5;eip=0x00f2e8; 	X(MOV(*(dw*)(raddr(ds,bx)), ax));	// 115909                  mov     [bx], ax ;~ 17C5:F2E8
cs=0x17c5;eip=0x00f2ea; 	X(MOV(*(dw*)(raddr(ds,bx+2)), 0));	// 115910                  mov     word ptr [bx+2], 0 ;~ 17C5:F2EA
cs=0x17c5;eip=0x00f2ef; 	X(POP(si));	// 115911                  pop     si ;~ 17C5:F2EF
cs=0x17c5;eip=0x00f2f0; 	T(sp = bp;);	// 115912                  mov     sp, bp ;~ 17C5:F2F0
cs=0x17c5;eip=0x00f2f2; 	X(POP(bp));	// 115913                  pop     bp ;~ 17C5:F2F2
cs=0x17c5;eip=0x00f2f3; 	J(RETN(0));	// 115914                  retn ;~ 17C5:F2F3

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_354fa: 	goto loc_354fa;
        case m2c::kloc_35510: 	goto loc_35510;
        case m2c::ksub_354b8: 	goto sub_354b8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35524(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35524:
    _begin:
#undef var_4
#define var_4 -4
	// 115924 var_4           = byte ptr -4 ;~ 17C5:F2F4
#undef var_3
#define var_3 -3
	// 115925 var_3           = byte ptr -3 ;~ 17C5:F2F4
#undef var_2
#define var_2 -2
	// 115926 var_2           = byte ptr -2 ;~ 17C5:F2F4
#undef var_1
#define var_1 -1
	// 115927 var_1           = byte ptr -1 ;~ 17C5:F2F4
#undef arg_0
#define arg_0 4
	// 115928 arg_0           = word ptr  4 ;~ 17C5:F2F4
#undef arg_2
#define arg_2 6
	// 115929 arg_2           = word ptr  6 ;~ 17C5:F2F4
#undef arg_4
#define arg_4 8
	// 115930 arg_4           = word ptr  8 ;~ 17C5:F2F4
cs=0x17c5;eip=0x00f2f4; 	X(PUSH(bp));	// 115934                  push    bp ;~ 17C5:F2F4
cs=0x17c5;eip=0x00f2f5; 	T(bp = sp;);	// 115935                  mov     bp, sp ;~ 17C5:F2F5
cs=0x17c5;eip=0x00f2f7; 	T(SUB(sp, 4));	// 115936                  sub     sp, 4 ;~ 17C5:F2F7
cs=0x17c5;eip=0x00f2fa; 	T(XOR(bh, bh));	// 115937                  xor     bh, bh ;~ 17C5:F2FA
cs=0x17c5;eip=0x00f2fc; 	X(MOV(*(raddr(ss,bp+var_2)), bh));	// 115938                  mov     [bp+var_2], bh ;~ 17C5:F2FC
cs=0x17c5;eip=0x00f2ff; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 115939                  mov     ax, [bp+arg_2] ;~ 17C5:F2FF
cs=0x17c5;eip=0x00f302; 	T(cx = ax;);	// 115940                  mov     cx, ax ;~ 17C5:F302
cs=0x17c5;eip=0x00f304; 	X(MOV(*(raddr(ss,bp+var_4)), 0));	// 115941                  mov     [bp+var_4], 0 ;~ 17C5:F304
cs=0x17c5;eip=0x00f308; 	T(TEST(ax, 0x8000));	// 115942                  test    ax, 8000h ;~ 17C5:F308
cs=0x17c5;eip=0x00f30b; 	J(JNZ(loc_3554d));	// 115943                  jnz     short loc_3554D ;~ 17C5:F30B
cs=0x17c5;eip=0x00f30d; 	T(TEST(ax, 0x4000));	// 115944                  test    ax, 4000h ;~ 17C5:F30D
cs=0x17c5;eip=0x00f310; 	J(JNZ(loc_35549));	// 115945                  jnz     short loc_35549 ;~ 17C5:F310
cs=0x17c5;eip=0x00f312; 	T(TEST(byte_4ee05, 0x80));	// 115946                  test    ds:byte_4EE05, 80h ;~ 17C5:F312
cs=0x17c5;eip=0x00f317; 	J(JNZ(loc_3554d));	// 115947                  jnz     short loc_3554D ;~ 17C5:F317
loc_35549:
	// 6888 
cs=0x17c5;eip=0x00f319; 	X(MOV(*(raddr(ss,bp+var_4)), 0x80));	// 115950                  mov     [bp+var_4], 80h ;~ 17C5:F319
loc_3554d:
	// 6889 
cs=0x17c5;eip=0x00f31d; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 115954                  mov     dx, [bp+arg_0] ;~ 17C5:F31D
cs=0x17c5;eip=0x00f320; 	T(AND(al, 3));	// 115955                  and     al, 3 ;~ 17C5:F320
cs=0x17c5;eip=0x00f322; 	T(OR(al, bh));	// 115956                  or      al, bh ;~ 17C5:F322
cs=0x17c5;eip=0x00f324; 	T(ah = 0x3D;);	// 115957                  mov     ah, 3Dh ;~ 17C5:F324
cs=0x17c5;eip=0x00f326; 	S(_INT(0x21));	// 115958                  int     21h             ; DOS - 2+ - OPEN DISK FILE WITH HANDLE ;~ 17C5:F326
cs=0x17c5;eip=0x00f328; 	J(JNC(loc_3556c));	// 115962                  jnb     short loc_3556C ;~ 17C5:F328
cs=0x17c5;eip=0x00f32a; 	T(CMP(ax, 2));	// 115963                  cmp     ax, 2 ;~ 17C5:F32A
cs=0x17c5;eip=0x00f32d; 	J(JNZ(loc_35568));	// 115964                  jnz     short loc_35568 ;~ 17C5:F32D
cs=0x17c5;eip=0x00f32f; 	T(TEST(cx, 0x100));	// 115965                  test    cx, 100h ;~ 17C5:F32F
cs=0x17c5;eip=0x00f333; 	J(JZ(loc_35568));	// 115966                  jz      short loc_35568 ;~ 17C5:F333
cs=0x17c5;eip=0x00f335; 	J(JMP(loc_35609));	// 115967                  jmp     loc_35609 ;~ 17C5:F335
loc_35568:
	// 6890 
cs=0x17c5;eip=0x00f338; 	T(STC);	// 115972                  stc ;~ 17C5:F338
cs=0x17c5;eip=0x00f339; 	J(return seg2623_ee22_proc(m2c::kloc_35065, _state););	// 115973                  jmp     loc_35065 ;~ 17C5:F339
loc_3556c:
	// 6891 
cs=0x17c5;eip=0x00f33c; 	T(XCHG(ax, bx));	// 115977                  xchg    ax, bx ;~ 17C5:F33C
cs=0x17c5;eip=0x00f33d; 	T(ax = cx;);	// 115978                  mov     ax, cx ;~ 17C5:F33D
cs=0x17c5;eip=0x00f33f; 	T(AND(ax, 0x500));	// 115979                  and     ax, 500h ;~ 17C5:F33F
cs=0x17c5;eip=0x00f342; 	T(CMP(ax, 0x500));	// 115980                  cmp     ax, 500h ;~ 17C5:F342
cs=0x17c5;eip=0x00f345; 	J(JNZ(loc_35580));	// 115981                  jnz     short loc_35580 ;~ 17C5:F345
cs=0x17c5;eip=0x00f347; 	T(ah = 0x3E;);	// 115982                  mov     ah, 3Eh ;~ 17C5:F347
cs=0x17c5;eip=0x00f349; 	S(_INT(0x21));	// 115983                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:F349
cs=0x17c5;eip=0x00f34b; 	T(ax = 0x1100;);	// 115985                  mov     ax, 1100h ;~ 17C5:F34B
cs=0x17c5;eip=0x00f34e; 	J(JMP(loc_35568));	// 115986                  jmp     short loc_35568 ;~ 17C5:F34E
loc_35580:
	// 6892 
cs=0x17c5;eip=0x00f350; 	X(MOV(*(raddr(ss,bp+var_3)), 1));	// 115990                  mov     [bp+var_3], 1 ;~ 17C5:F350
cs=0x17c5;eip=0x00f354; 	T(ax = 0x4400;);	// 115991                  mov     ax, 4400h ;~ 17C5:F354
cs=0x17c5;eip=0x00f357; 	S(_INT(0x21));	// 115992                  int     21h             ; DOS - 2+ - IOCTL - GET DEVICE INFORMATION ;~ 17C5:F357
cs=0x17c5;eip=0x00f359; 	T(TEST(dl, 0x80));	// 115994                  test    dl, 80h ;~ 17C5:F359
cs=0x17c5;eip=0x00f35c; 	J(JZ(loc_35592));	// 115995                  jz      short loc_35592 ;~ 17C5:F35C
cs=0x17c5;eip=0x00f35e; 	X(OR(*(raddr(ss,bp+var_4)), 0x40));	// 115996                  or      [bp+var_4], 40h ;~ 17C5:F35E
loc_35592:
	// 6893 
cs=0x17c5;eip=0x00f362; 	T(TEST(*(raddr(ss,bp+var_4)), 0x40));	// 115999                  test    [bp+var_4], 40h ;~ 17C5:F362
cs=0x17c5;eip=0x00f366; 	J(JZ(loc_3559b));	// 116000                  jz      short loc_3559B ;~ 17C5:F366
cs=0x17c5;eip=0x00f368; 	J(JMP(loc_35670));	// 116001                  jmp     loc_35670 ;~ 17C5:F368
loc_3559b:
	// 6894 
cs=0x17c5;eip=0x00f36b; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_2))));	// 116005                  mov     ax, [bp+arg_2] ;~ 17C5:F36B
cs=0x17c5;eip=0x00f36e; 	T(TEST(ax, 0x200));	// 116006                  test    ax, 200h ;~ 17C5:F36E
cs=0x17c5;eip=0x00f371; 	J(JZ(loc_355c0));	// 116007                  jz      short loc_355C0 ;~ 17C5:F371
cs=0x17c5;eip=0x00f373; 	T(TEST(ax, 3));	// 116008                  test    ax, 3 ;~ 17C5:F373
cs=0x17c5;eip=0x00f376; 	J(JZ(loc_355b1));	// 116009                  jz      short loc_355B1 ;~ 17C5:F376
cs=0x17c5;eip=0x00f378; 	T(XOR(cx, cx));	// 116010                  xor     cx, cx ;~ 17C5:F378
cs=0x17c5;eip=0x00f37a; 	T(ah = 0x40;);	// 116011                  mov     ah, 40h ;~ 17C5:F37A
cs=0x17c5;eip=0x00f37c; 	S(_INT(0x21));	// 116012                  int     21h             ; DOS - 2+ - WRITE TO FILE WITH HANDLE ;~ 17C5:F37C
cs=0x17c5;eip=0x00f37e; 	J(JMP(loc_35670));	// 116014                  jmp     loc_35670 ;~ 17C5:F37E
loc_355b1:
	// 6895 
cs=0x17c5;eip=0x00f381; 	T(ah = 0x3E;);	// 116018                  mov     ah, 3Eh ;~ 17C5:F381
cs=0x17c5;eip=0x00f383; 	S(_INT(0x21));	// 116019                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:F383
cs=0x17c5;eip=0x00f385; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 116021                  mov     dx, [bp+arg_0] ;~ 17C5:F385
cs=0x17c5;eip=0x00f388; 	T(ax = 0x4300;);	// 116022                  mov     ax, 4300h ;~ 17C5:F388
cs=0x17c5;eip=0x00f38b; 	S(_INT(0x21));	// 116023                  int     21h             ; DOS - 2+ - GET FILE ATTRIBUTES ;~ 17C5:F38B
cs=0x17c5;eip=0x00f38d; 	J(JMP(loc_35626));	// 116026                  jmp     short loc_35626 ;~ 17C5:F38D
loc_355c0:
	// 6896 
cs=0x17c5;eip=0x00f390; 	T(TEST(*(raddr(ss,bp+var_4)), 0x80));	// 116031                  test    [bp+var_4], 80h ;~ 17C5:F390
cs=0x17c5;eip=0x00f394; 	J(JNZ(loc_355c9));	// 116032                  jnz     short loc_355C9 ;~ 17C5:F394
cs=0x17c5;eip=0x00f396; 	J(JMP(loc_35670));	// 116033                  jmp     loc_35670 ;~ 17C5:F396
loc_355c9:
	// 6897 
cs=0x17c5;eip=0x00f399; 	T(TEST(ax, 2));	// 116037                  test    ax, 2 ;~ 17C5:F399
cs=0x17c5;eip=0x00f39c; 	J(JNZ(loc_355d1));	// 116038                  jnz     short loc_355D1 ;~ 17C5:F39C
cs=0x17c5;eip=0x00f39e; 	J(JMP(loc_35670));	// 116039                  jmp     loc_35670 ;~ 17C5:F39E
loc_355d1:
	// 6898 
cs=0x17c5;eip=0x00f3a1; 	T(cx = 0x0FFFF;);	// 116043                  mov     cx, 0FFFFh ;~ 17C5:F3A1
cs=0x17c5;eip=0x00f3a4; 	T(dx = cx;);	// 116044                  mov     dx, cx ;~ 17C5:F3A4
cs=0x17c5;eip=0x00f3a6; 	T(ax = 0x4202;);	// 116045                  mov     ax, 4202h ;~ 17C5:F3A6
cs=0x17c5;eip=0x00f3a9; 	S(_INT(0x21));	// 116046                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:F3A9
cs=0x17c5;eip=0x00f3ab; 	T(NEG(cx));	// 116048                  neg     cx ;~ 17C5:F3AB
cs=0x17c5;eip=0x00f3ad; 	T(dx = bp+var_1);	// 116049                  lea     dx, [bp+var_1] ;~ 17C5:F3AD
cs=0x17c5;eip=0x00f3b0; 	T(ah = 0x3F;);	// 116050                  mov     ah, 3Fh ;~ 17C5:F3B0
cs=0x17c5;eip=0x00f3b2; 	S(_INT(0x21));	// 116051                  int     21h             ; DOS - 2+ - READ FROM FILE WITH HANDLE ;~ 17C5:F3B2
cs=0x17c5;eip=0x00f3b4; 	T(OR(ax, ax));	// 116054                  or      ax, ax ;~ 17C5:F3B4
cs=0x17c5;eip=0x00f3b6; 	J(JZ(loc_355fd));	// 116055                  jz      short loc_355FD ;~ 17C5:F3B6
cs=0x17c5;eip=0x00f3b8; 	T(CMP(*(raddr(ss,bp+var_1)), 0x1A));	// 116056                  cmp     [bp+var_1], 1Ah ;~ 17C5:F3B8
cs=0x17c5;eip=0x00f3bc; 	J(JNZ(loc_355fd));	// 116057                  jnz     short loc_355FD ;~ 17C5:F3BC
cs=0x17c5;eip=0x00f3be; 	T(NEG(cx));	// 116058                  neg     cx ;~ 17C5:F3BE
cs=0x17c5;eip=0x00f3c0; 	T(dx = cx;);	// 116059                  mov     dx, cx ;~ 17C5:F3C0
cs=0x17c5;eip=0x00f3c2; 	T(ax = 0x4202;);	// 116060                  mov     ax, 4202h ;~ 17C5:F3C2
cs=0x17c5;eip=0x00f3c5; 	S(_INT(0x21));	// 116061                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:F3C5
cs=0x17c5;eip=0x00f3c7; 	T(XOR(cx, cx));	// 116063                  xor     cx, cx ;~ 17C5:F3C7
cs=0x17c5;eip=0x00f3c9; 	T(ah = 0x40;);	// 116064                  mov     ah, 40h ;~ 17C5:F3C9
cs=0x17c5;eip=0x00f3cb; 	S(_INT(0x21));	// 116065                  int     21h             ; DOS - 2+ - WRITE TO FILE WITH HANDLE ;~ 17C5:F3CB
loc_355fd:
	// 6899 
cs=0x17c5;eip=0x00f3cd; 	T(XOR(cx, cx));	// 116070                  xor     cx, cx ;~ 17C5:F3CD
cs=0x17c5;eip=0x00f3cf; 	T(dx = cx;);	// 116071                  mov     dx, cx ;~ 17C5:F3CF
cs=0x17c5;eip=0x00f3d1; 	T(ax = 0x4200;);	// 116072                  mov     ax, 4200h ;~ 17C5:F3D1
cs=0x17c5;eip=0x00f3d4; 	S(_INT(0x21));	// 116073                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:F3D4
cs=0x17c5;eip=0x00f3d6; 	J(JMP(loc_35670));	// 116075                  jmp     short loc_35670 ;~ 17C5:F3D6
loc_35609:
	// 6900 
cs=0x17c5;eip=0x00f3d9; 	X(MOV(*(raddr(ss,bp+var_3)), 0));	// 116081                  mov     [bp+var_3], 0 ;~ 17C5:F3D9
cs=0x17c5;eip=0x00f3dd; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 116082                  mov     cx, [bp+arg_4] ;~ 17C5:F3DD
cs=0x17c5;eip=0x00f3e0; 	J(CALL(sub_356b7,0));	// 116083                  call    sub_356B7 ;~ 17C5:F3E0
cs=0x17c5;eip=0x00f3e3; 	X(MOV(*(dw*)(raddr(ss,bp+arg_4)), cx));	// 116084                  mov     [bp+arg_4], cx ;~ 17C5:F3E3
cs=0x17c5;eip=0x00f3e6; 	T(TEST(*(raddr(ss,bp+var_2)), 0x0FF));	// 116085                  test    [bp+var_2], 0FFh ;~ 17C5:F3E6
cs=0x17c5;eip=0x00f3ea; 	J(JNZ(loc_35623));	// 116086                  jnz     short loc_35623 ;~ 17C5:F3EA
cs=0x17c5;eip=0x00f3ec; 	T(TEST(*(dw*)(raddr(ss,bp+arg_2)), 2));	// 116087                  test    [bp+arg_2], 2 ;~ 17C5:F3EC
cs=0x17c5;eip=0x00f3f1; 	J(JNZ(loc_35626));	// 116088                  jnz     short loc_35626 ;~ 17C5:F3F1
loc_35623:
	// 6901 
cs=0x17c5;eip=0x00f3f3; 	T(AND(cl, 0x0FE));	// 116091                  and     cl, 0FEh ;~ 17C5:F3F3
loc_35626:
	// 6902 
cs=0x17c5;eip=0x00f3f6; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 116095                  mov     dx, [bp+arg_0] ;~ 17C5:F3F6
cs=0x17c5;eip=0x00f3f9; 	T(ah = 0x3C;);	// 116096                  mov     ah, 3Ch ;~ 17C5:F3F9
cs=0x17c5;eip=0x00f3fb; 	S(_INT(0x21));	// 116097                  int     21h             ; DOS - 2+ - CREATE A FILE WITH HANDLE (CREAT) ;~ 17C5:F3FB
cs=0x17c5;eip=0x00f3fd; 	J(JNC(loc_35632));	// 116100                  jnb     short loc_35632 ;~ 17C5:F3FD
loc_3562f:
	// 6903 
cs=0x17c5;eip=0x00f3ff; 	J(return seg2623_ee22_proc(m2c::kloc_35065, _state););	// 116104                  jmp     loc_35065 ;~ 17C5:F3FF
loc_35632:
	// 6904 
cs=0x17c5;eip=0x00f402; 	T(XCHG(ax, bx));	// 116108                  xchg    ax, bx ;~ 17C5:F402
cs=0x17c5;eip=0x00f403; 	T(TEST(*(raddr(ss,bp+var_2)), 0x0FF));	// 116109                  test    [bp+var_2], 0FFh ;~ 17C5:F403
cs=0x17c5;eip=0x00f407; 	J(JNZ(loc_35640));	// 116110                  jnz     short loc_35640 ;~ 17C5:F407
cs=0x17c5;eip=0x00f409; 	T(TEST(*(dw*)(raddr(ss,bp+arg_2)), 2));	// 116111                  test    [bp+arg_2], 2 ;~ 17C5:F409
cs=0x17c5;eip=0x00f40e; 	J(JNZ(loc_35670));	// 116112                  jnz     short loc_35670 ;~ 17C5:F40E
loc_35640:
	// 6905 
cs=0x17c5;eip=0x00f410; 	T(ah = 0x3E;);	// 116115                  mov     ah, 3Eh ;~ 17C5:F410
cs=0x17c5;eip=0x00f412; 	S(_INT(0x21));	// 116116                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:F412
cs=0x17c5;eip=0x00f414; 	T(MOV(al, *(raddr(ss,bp+arg_2))));	// 116118                  mov     al, byte ptr [bp+arg_2] ;~ 17C5:F414
cs=0x17c5;eip=0x00f417; 	T(AND(al, 3));	// 116119                  and     al, 3 ;~ 17C5:F417
cs=0x17c5;eip=0x00f419; 	T(OR(al, *(raddr(ss,bp+var_2))));	// 116120                  or      al, [bp+var_2] ;~ 17C5:F419
cs=0x17c5;eip=0x00f41c; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 116121                  mov     dx, [bp+arg_0] ;~ 17C5:F41C
cs=0x17c5;eip=0x00f41f; 	T(ah = 0x3D;);	// 116122                  mov     ah, 3Dh ;~ 17C5:F41F
cs=0x17c5;eip=0x00f421; 	S(_INT(0x21));	// 116123                  int     21h             ; DOS - 2+ - OPEN DISK FILE WITH HANDLE ;~ 17C5:F421
cs=0x17c5;eip=0x00f423; 	J(JC(loc_3562f));	// 116127                  jb      short loc_3562F ;~ 17C5:F423
cs=0x17c5;eip=0x00f425; 	T(XCHG(ax, bx));	// 116128                  xchg    ax, bx ;~ 17C5:F425
cs=0x17c5;eip=0x00f426; 	T(TEST(*(raddr(ss,bp+var_3)), 1));	// 116129                  test    [bp+var_3], 1 ;~ 17C5:F426
cs=0x17c5;eip=0x00f42a; 	J(JNZ(loc_35670));	// 116130                  jnz     short loc_35670 ;~ 17C5:F42A
cs=0x17c5;eip=0x00f42c; 	T(TEST(*(dw*)(raddr(ss,bp+arg_4)), 1));	// 116131                  test    [bp+arg_4], 1 ;~ 17C5:F42C
cs=0x17c5;eip=0x00f431; 	J(JZ(loc_35670));	// 116132                  jz      short loc_35670 ;~ 17C5:F431
cs=0x17c5;eip=0x00f433; 	T(OR(cl, 1));	// 116133                  or      cl, 1 ;~ 17C5:F433
cs=0x17c5;eip=0x00f436; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 116134                  mov     dx, [bp+arg_0] ;~ 17C5:F436
cs=0x17c5;eip=0x00f439; 	T(ax = 0x4301;);	// 116135                  mov     ax, 4301h ;~ 17C5:F439
cs=0x17c5;eip=0x00f43c; 	S(_INT(0x21));	// 116136                  int     21h             ; DOS - 2+ - SET FILE ATTRIBUTES ;~ 17C5:F43C
cs=0x17c5;eip=0x00f43e; 	J(JC(loc_3562f));	// 116139                  jb      short loc_3562F ;~ 17C5:F43E
loc_35670:
	// 6906 
cs=0x17c5;eip=0x00f440; 	T(TEST(*(raddr(ss,bp+var_4)), 0x40));	// 116143                  test    [bp+var_4], 40h ;~ 17C5:F440
cs=0x17c5;eip=0x00f444; 	J(JNZ(loc_356b3));	// 116144                  jnz     short loc_356B3 ;~ 17C5:F444
cs=0x17c5;eip=0x00f446; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_0))));	// 116145                  mov     dx, [bp+arg_0] ;~ 17C5:F446
cs=0x17c5;eip=0x00f449; 	T(ax = 0x4300;);	// 116146                  mov     ax, 4300h ;~ 17C5:F449
cs=0x17c5;eip=0x00f44c; 	S(_INT(0x21));	// 116147                  int     21h             ; DOS - 2+ - GET FILE ATTRIBUTES ;~ 17C5:F44C
cs=0x17c5;eip=0x00f44e; 	T(ax = cx;);	// 116150                  mov     ax, cx ;~ 17C5:F44E
cs=0x17c5;eip=0x00f450; 	T(XOR(cl, cl));	// 116151                  xor     cl, cl ;~ 17C5:F450
cs=0x17c5;eip=0x00f452; 	T(AND(ax, 1));	// 116152                  and     ax, 1 ;~ 17C5:F452
cs=0x17c5;eip=0x00f455; 	J(JZ(loc_35689));	// 116153                  jz      short loc_35689 ;~ 17C5:F455
cs=0x17c5;eip=0x00f457; 	T(cl = 0x10;);	// 116154                  mov     cl, 10h ;~ 17C5:F457
loc_35689:
	// 6907 
cs=0x17c5;eip=0x00f459; 	T(TEST(*(dw*)(raddr(ss,bp+arg_2)), 8));	// 116157                  test    [bp+arg_2], 8 ;~ 17C5:F459
cs=0x17c5;eip=0x00f45e; 	J(JZ(loc_35693));	// 116158                  jz      short loc_35693 ;~ 17C5:F45E
cs=0x17c5;eip=0x00f460; 	T(OR(cl, 0x20));	// 116159                  or      cl, 20h ;~ 17C5:F460
loc_35693:
	// 6908 
cs=0x17c5;eip=0x00f463; 	T(CMP(bx, word_4ec92));	// 116163                  cmp     bx, ds:word_4EC92 ;~ 17C5:F463
cs=0x17c5;eip=0x00f467; 	J(JC(loc_356a3));	// 116164                  jb      short loc_356A3 ;~ 17C5:F467
cs=0x17c5;eip=0x00f469; 	T(ah = 0x3E;);	// 116165                  mov     ah, 3Eh ;~ 17C5:F469
cs=0x17c5;eip=0x00f46b; 	S(_INT(0x21));	// 116166                  int     21h             ; DOS - 2+ - CLOSE A FILE WITH HANDLE ;~ 17C5:F46B
cs=0x17c5;eip=0x00f46d; 	T(ax = 0x1800;);	// 116168                  mov     ax, 1800h ;~ 17C5:F46D
cs=0x17c5;eip=0x00f470; 	J(JMP(loc_35568));	// 116169                  jmp     loc_35568 ;~ 17C5:F470
loc_356a3:
	// 6909 
cs=0x17c5;eip=0x00f473; 	T(OR(cl, *(raddr(ss,bp+var_4))));	// 116173                  or      cl, [bp+var_4] ;~ 17C5:F473
cs=0x17c5;eip=0x00f476; 	T(OR(cl, 1));	// 116174                  or      cl, 1 ;~ 17C5:F476
cs=0x17c5;eip=0x00f479; 	X(MOV(*(raddr(ds,bx+0x61B4)), cl));	// 116175                  mov     [bx+61B4h], cl ;~ 17C5:F479
cs=0x17c5;eip=0x00f47d; 	T(ax = bx;);	// 116176                  mov     ax, bx ;~ 17C5:F47D
cs=0x17c5;eip=0x00f47f; 	T(sp = bp;);	// 116177                  mov     sp, bp ;~ 17C5:F47F
cs=0x17c5;eip=0x00f481; 	X(POP(bp));	// 116178                  pop     bp ;~ 17C5:F481
cs=0x17c5;eip=0x00f482; 	J(RETN(0));	// 116179                  retn ;~ 17C5:F482
loc_356b3:
	// 6910 
cs=0x17c5;eip=0x00f483; 	T(XOR(cl, cl));	// 116183                  xor     cl, cl ;~ 17C5:F483
cs=0x17c5;eip=0x00f485; 	J(JMP(loc_35693));	// 116184                  jmp     short loc_35693 ;~ 17C5:F485

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35549: 	goto loc_35549;
        case m2c::kloc_3554d: 	goto loc_3554d;
        case m2c::kloc_35568: 	goto loc_35568;
        case m2c::kloc_3556c: 	goto loc_3556c;
        case m2c::kloc_35580: 	goto loc_35580;
        case m2c::kloc_35592: 	goto loc_35592;
        case m2c::kloc_3559b: 	goto loc_3559b;
        case m2c::kloc_355b1: 	goto loc_355b1;
        case m2c::kloc_355c0: 	goto loc_355c0;
        case m2c::kloc_355c9: 	goto loc_355c9;
        case m2c::kloc_355d1: 	goto loc_355d1;
        case m2c::kloc_355fd: 	goto loc_355fd;
        case m2c::kloc_35609: 	goto loc_35609;
        case m2c::kloc_35623: 	goto loc_35623;
        case m2c::kloc_35626: 	goto loc_35626;
        case m2c::kloc_3562f: 	goto loc_3562f;
        case m2c::kloc_35632: 	goto loc_35632;
        case m2c::kloc_35640: 	goto loc_35640;
        case m2c::kloc_35670: 	goto loc_35670;
        case m2c::kloc_35689: 	goto loc_35689;
        case m2c::kloc_35693: 	goto loc_35693;
        case m2c::kloc_356a3: 	goto loc_356a3;
        case m2c::kloc_356b3: 	goto loc_356b3;
        case m2c::ksub_35524: 	goto sub_35524;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_356b7(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_356b7:
    _begin:
cs=0x17c5;eip=0x00f487; 	T(ax = word_4ec87;);	// 116192                  mov     ax, ds:word_4EC87 ;~ 17C5:F487
cs=0x17c5;eip=0x00f48a; 	T(NOT(ax));	// 116193                  not     ax ;~ 17C5:F48A
cs=0x17c5;eip=0x00f48c; 	T(AND(ax, cx));	// 116194                  and     ax, cx ;~ 17C5:F48C
cs=0x17c5;eip=0x00f48e; 	T(XOR(cx, cx));	// 116195                  xor     cx, cx ;~ 17C5:F48E
cs=0x17c5;eip=0x00f490; 	T(TEST(al, 0x80));	// 116196                  test    al, 80h ;~ 17C5:F490
cs=0x17c5;eip=0x00f492; 	J(JNZ(locret_356c7));	// 116197                  jnz     short locret_356C7 ;~ 17C5:F492
cs=0x17c5;eip=0x00f494; 	T(OR(cl, 1));	// 116198                  or      cl, 1 ;~ 17C5:F494
locret_356c7:
	// 6911 
cs=0x17c5;eip=0x00f497; 	J(RETN(0));	// 116201                  retn ;~ 17C5:F497

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::klocret_356c7: 	goto locret_356c7;
        case m2c::ksub_356b7: 	goto sub_356b7;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_356c8(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_356c8:
    _begin:
#undef var_8
#define var_8 -8
	// 116211 var_8           = word ptr -8 ;~ 17C5:F498
#undef var_4
#define var_4 -4
	// 116212 var_4           = word ptr -4 ;~ 17C5:F498
#undef var_2
#define var_2 -2
	// 116213 var_2           = word ptr -2 ;~ 17C5:F498
#undef arg_0
#define arg_0 4
	// 116214 arg_0           = word ptr  4 ;~ 17C5:F498
#undef arg_2
#define arg_2 6
	// 116215 arg_2           = word ptr  6 ;~ 17C5:F498
#undef arg_4
#define arg_4 8
	// 116216 arg_4           = word ptr  8 ;~ 17C5:F498
cs=0x17c5;eip=0x00f498; 	X(PUSH(bp));	// 116222                  push    bp ;~ 17C5:F498
cs=0x17c5;eip=0x00f499; 	T(bp = sp;);	// 116223                  mov     bp, sp ;~ 17C5:F499
cs=0x17c5;eip=0x00f49b; 	T(SUB(sp, 8));	// 116224                  sub     sp, 8 ;~ 17C5:F49B
cs=0x17c5;eip=0x00f49e; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 116225                  mov     bx, [bp+arg_0] ;~ 17C5:F49E
cs=0x17c5;eip=0x00f4a1; 	T(CMP(bx, word_4ec92));	// 116226                  cmp     bx, ds:word_4EC92 ;~ 17C5:F4A1
cs=0x17c5;eip=0x00f4a5; 	J(JC(loc_356de));	// 116227                  jb      short loc_356DE ;~ 17C5:F4A5
cs=0x17c5;eip=0x00f4a7; 	T(ax = 0x900;);	// 116228                  mov     ax, 900h ;~ 17C5:F4A7
cs=0x17c5;eip=0x00f4aa; 	T(STC);	// 116229                  stc ;~ 17C5:F4AA
loc_356db:
	// 6912 
cs=0x17c5;eip=0x00f4ab; 	J(return seg2623_ee22_proc(m2c::kloc_35065, _state););	// 116232                  jmp     loc_35065 ;~ 17C5:F4AB
loc_356de:
	// 6913 
cs=0x17c5;eip=0x00f4ae; 	T(TEST(*(raddr(ds,bx+0x61B4)), 0x20));	// 116236                  test    byte ptr [bx+61B4h], 20h ;~ 17C5:F4AE
cs=0x17c5;eip=0x00f4b3; 	J(JZ(loc_356f0));	// 116237                  jz      short loc_356F0 ;~ 17C5:F4B3
cs=0x17c5;eip=0x00f4b5; 	T(ax = 0x4202;);	// 116238                  mov     ax, 4202h ;~ 17C5:F4B5
cs=0x17c5;eip=0x00f4b8; 	T(XOR(cx, cx));	// 116239                  xor     cx, cx ;~ 17C5:F4B8
cs=0x17c5;eip=0x00f4ba; 	T(dx = cx;);	// 116240                  mov     dx, cx ;~ 17C5:F4BA
cs=0x17c5;eip=0x00f4bc; 	S(_INT(0x21));	// 116241                  int     21h             ; DOS - 2+ - MOVE FILE READ/WRITE POINTER (LSEEK) ;~ 17C5:F4BC
cs=0x17c5;eip=0x00f4be; 	J(JC(loc_356db));	// 116243                  jb      short loc_356DB ;~ 17C5:F4BE
loc_356f0:
	// 6914 
cs=0x17c5;eip=0x00f4c0; 	T(TEST(*(raddr(ds,bx+0x61B4)), 0x80));	// 116246                  test    byte ptr [bx+61B4h], 80h ;~ 17C5:F4C0
cs=0x17c5;eip=0x00f4c5; 	J(JZ(loc_35765));	// 116247                  jz      short loc_35765 ;~ 17C5:F4C5
cs=0x17c5;eip=0x00f4c7; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 116248                  mov     dx, [bp+arg_2] ;~ 17C5:F4C7
cs=0x17c5;eip=0x00f4ca; 	X(PUSH(ds));	// 116249                  push    ds ;~ 17C5:F4CA
cs=0x17c5;eip=0x00f4cb; 	X(POP(es));	// 116250                  pop     es ;~ 17C5:F4CB
cs=0x17c5;eip=0x00f4cc; 	T(XOR(ax, ax));	// 116251                  xor     ax, ax ;~ 17C5:F4CC
cs=0x17c5;eip=0x00f4ce; 	X(MOV(*(dw*)(raddr(ss,bp+var_2)), ax));	// 116252                  mov     [bp+var_2], ax ;~ 17C5:F4CE
cs=0x17c5;eip=0x00f4d1; 	X(MOV(*(dw*)(raddr(ss,bp+var_4)), ax));	// 116253                  mov     [bp+var_4], ax ;~ 17C5:F4D1
cs=0x17c5;eip=0x00f4d4; 	T(CLD);	// 116254                  cld ;~ 17C5:F4D4
cs=0x17c5;eip=0x00f4d5; 	X(PUSH(di));	// 116255                  push    di ;~ 17C5:F4D5
cs=0x17c5;eip=0x00f4d6; 	X(PUSH(si));	// 116256                  push    si ;~ 17C5:F4D6
cs=0x17c5;eip=0x00f4d7; 	T(di = dx;);	// 116257                  mov     di, dx ;~ 17C5:F4D7
cs=0x17c5;eip=0x00f4d9; 	T(si = dx;);	// 116258                  mov     si, dx ;~ 17C5:F4D9
cs=0x17c5;eip=0x00f4db; 	X(MOV(*(dw*)(raddr(ss,bp+var_8)), sp));	// 116259                  mov     [bp+var_8], sp ;~ 17C5:F4DB
cs=0x17c5;eip=0x00f4de; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 116260                  mov     cx, [bp+arg_4] ;~ 17C5:F4DE
cs=0x17c5;eip=0x00f4e1; 	J(JCXZ(loc_35767));	// 116261                  jcxz    short loc_35767 ;~ 17C5:F4E1
cs=0x17c5;eip=0x00f4e3; 	T(al = 0x0A;);	// 116262                  mov     al, 0Ah ;~ 17C5:F4E3
	// 116263                  repne scasb ;~ 17C5:F4E5
cs=0x17c5;eip=0x00f4e5; 	T(	REPNE SCASB);	// 116263                  repne scasb ;~ 17C5:F4E5
cs=0x17c5;eip=0x00f4e7; 	J(JNZ(loc_35763));	// 116264                  jnz     short loc_35763 ;~ 17C5:F4E7
cs=0x17c5;eip=0x00f4e9; 	J(CALL(sub_3587a,0));	// 116265                  call    sub_3587A ;~ 17C5:F4E9
cs=0x17c5;eip=0x00f4ec; 	T(CMP(ax, 0x0A8));	// 116266                  cmp     ax, 0A8h ;~ 17C5:F4EC
cs=0x17c5;eip=0x00f4ef; 	J(JBE(loc_35769));	// 116267                  jbe     short loc_35769 ;~ 17C5:F4EF
cs=0x17c5;eip=0x00f4f1; 	T(SUB(sp, 2));	// 116268                  sub     sp, 2 ;~ 17C5:F4F1
cs=0x17c5;eip=0x00f4f4; 	T(bx = sp;);	// 116269                  mov     bx, sp ;~ 17C5:F4F4
cs=0x17c5;eip=0x00f4f6; 	T(dx = 0x200;);	// 116270                  mov     dx, 200h ;~ 17C5:F4F6
cs=0x17c5;eip=0x00f4f9; 	T(CMP(ax, 0x228));	// 116271                  cmp     ax, 228h ;~ 17C5:F4F9
cs=0x17c5;eip=0x00f4fc; 	J(JNC(loc_35731));	// 116272                  jnb     short loc_35731 ;~ 17C5:F4FC
cs=0x17c5;eip=0x00f4fe; 	T(dx = 0x80;);	// 116273                  mov     dx, 80h ;~ 17C5:F4FE
loc_35731:
	// 6915 
cs=0x17c5;eip=0x00f501; 	T(SUB(sp, dx));	// 116276                  sub     sp, dx ;~ 17C5:F501
cs=0x17c5;eip=0x00f503; 	T(dx = sp;);	// 116277                  mov     dx, sp ;~ 17C5:F503
cs=0x17c5;eip=0x00f505; 	T(di = dx;);	// 116278                  mov     di, dx ;~ 17C5:F505
cs=0x17c5;eip=0x00f507; 	X(PUSH(ss));	// 116279                  push    ss ;~ 17C5:F507
cs=0x17c5;eip=0x00f508; 	X(POP(es));	// 116280                  pop     es ;~ 17C5:F508
cs=0x17c5;eip=0x00f509; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 116281                  mov     cx, [bp+arg_4] ;~ 17C5:F509
loc_3573c:
	// 6916 
cs=0x17c5;eip=0x00f50c; 	T(LODSB);	// 116284                  lodsb ;~ 17C5:F50C
cs=0x17c5;eip=0x00f50d; 	T(CMP(al, 0x0A));	// 116285                  cmp     al, 0Ah ;~ 17C5:F50D
cs=0x17c5;eip=0x00f50f; 	J(JZ(loc_3574d));	// 116286                  jz      short loc_3574D ;~ 17C5:F50F
loc_35741:
	// 6917 
cs=0x17c5;eip=0x00f511; 	T(CMP(di, bx));	// 116289                  cmp     di, bx ;~ 17C5:F511
cs=0x17c5;eip=0x00f513; 	J(JZ(loc_3575e));	// 116290                  jz      short loc_3575E ;~ 17C5:F513
loc_35745:
	// 6918 
cs=0x17c5;eip=0x00f515; 	X(STOSB);	// 116293                  stosb ;~ 17C5:F515
cs=0x17c5;eip=0x00f516; 	J(LOOP(loc_3573c));	// 116294                  loop    loc_3573C ;~ 17C5:F516
cs=0x17c5;eip=0x00f518; 	J(CALL(sub_3576e,0));	// 116295                  call    sub_3576E ;~ 17C5:F518
cs=0x17c5;eip=0x00f51b; 	J(return _group68(m2c::kloc_357ae, _state););	// 116296                  jmp     short loc_357AE ;~ 17C5:F51B
loc_3574d:
	// 6919 
cs=0x17c5;eip=0x00f51d; 	T(al = 0x0D;);	// 116300                  mov     al, 0Dh ;~ 17C5:F51D
cs=0x17c5;eip=0x00f51f; 	T(CMP(di, bx));	// 116301                  cmp     di, bx ;~ 17C5:F51F
cs=0x17c5;eip=0x00f521; 	J(JNZ(loc_35756));	// 116302                  jnz     short loc_35756 ;~ 17C5:F521
cs=0x17c5;eip=0x00f523; 	J(CALL(sub_3576e,0));	// 116303                  call    sub_3576E ;~ 17C5:F523
loc_35756:
	// 6920 
cs=0x17c5;eip=0x00f526; 	X(STOSB);	// 116306                  stosb ;~ 17C5:F526
cs=0x17c5;eip=0x00f527; 	T(al = 0x0A;);	// 116307                  mov     al, 0Ah ;~ 17C5:F527
cs=0x17c5;eip=0x00f529; 	X(INC(*(dw*)(raddr(ss,bp+var_4))));	// 116308                  inc     [bp+var_4] ;~ 17C5:F529
cs=0x17c5;eip=0x00f52c; 	J(JMP(loc_35741));	// 116309                  jmp     short loc_35741 ;~ 17C5:F52C
loc_3575e:
	// 6921 
cs=0x17c5;eip=0x00f52e; 	J(CALL(sub_3576e,0));	// 116313                  call    sub_3576E ;~ 17C5:F52E
cs=0x17c5;eip=0x00f531; 	J(JMP(loc_35745));	// 116314                  jmp     short loc_35745 ;~ 17C5:F531
loc_35763:
	// 6922 
cs=0x17c5;eip=0x00f533; 	X(POP(si));	// 116318                  pop     si ;~ 17C5:F533
cs=0x17c5;eip=0x00f534; 	X(POP(di));	// 116319                  pop     di ;~ 17C5:F534
loc_35765:
	// 6923 
cs=0x17c5;eip=0x00f535; 	J(return _group68(m2c::kloc_357bc, _state););	// 116322                  jmp     short loc_357BC ;~ 17C5:F535
loc_35767:
	// 6924 
cs=0x17c5;eip=0x00f537; 	J(return _group68(m2c::kloc_357ae, _state););	// 116326                  jmp     short loc_357AE ;~ 17C5:F537
loc_35769:
	// 6925 
cs=0x17c5;eip=0x00f539; 	T(XOR(ax, ax));	// 116330                  xor     ax, ax ;~ 17C5:F539
cs=0x17c5;eip=0x00f53b; 	J(return _group66(m2c::kloc_34705, _state););	// 116331                  jmp     loc_34705 ;~ 17C5:F53B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_356db: 	goto loc_356db;
        case m2c::kloc_356de: 	goto loc_356de;
        case m2c::kloc_356f0: 	goto loc_356f0;
        case m2c::kloc_35731: 	goto loc_35731;
        case m2c::kloc_3573c: 	goto loc_3573c;
        case m2c::kloc_35741: 	goto loc_35741;
        case m2c::kloc_35745: 	goto loc_35745;
        case m2c::kloc_3574d: 	goto loc_3574d;
        case m2c::kloc_35756: 	goto loc_35756;
        case m2c::kloc_3575e: 	goto loc_3575e;
        case m2c::kloc_35763: 	goto loc_35763;
        case m2c::kloc_35765: 	goto loc_35765;
        case m2c::kloc_35767: 	goto loc_35767;
        case m2c::kloc_35769: 	goto loc_35769;
        case m2c::ksub_356c8: 	goto sub_356c8;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group68(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group68:
    _begin:
sub_3576e:
	// 116338 
cs=0x17c5;eip=0x00f53e; 	X(PUSH(ax));	// 116343                  push    ax ;~ 17C5:F53E
cs=0x17c5;eip=0x00f53f; 	X(PUSH(bx));	// 116344                  push    bx ;~ 17C5:F53F
cs=0x17c5;eip=0x00f540; 	X(PUSH(cx));	// 116345                  push    cx ;~ 17C5:F540
cs=0x17c5;eip=0x00f541; 	T(cx = di;);	// 116346                  mov     cx, di ;~ 17C5:F541
cs=0x17c5;eip=0x00f543; 	T(SUB(cx, dx));	// 116347                  sub     cx, dx ;~ 17C5:F543
cs=0x17c5;eip=0x00f545; 	J(JCXZ(loc_35787));	// 116348                  jcxz    short loc_35787 ;~ 17C5:F545
cs=0x17c5;eip=0x00f547; 	T(MOV(bx, *(dw*)(raddr(ss,bp+4))));	// 116349                  mov     bx, [bp+4] ;~ 17C5:F547
cs=0x17c5;eip=0x00f54a; 	T(ah = 0x40;);	// 116350                  mov     ah, 40h ;~ 17C5:F54A
cs=0x17c5;eip=0x00f54c; 	S(_INT(0x21));	// 116351                  int     21h             ; DOS - 2+ - WRITE TO FILE WITH HANDLE ;~ 17C5:F54C
cs=0x17c5;eip=0x00f54e; 	J(JC(loc_3578d));	// 116353                  jb      short loc_3578D ;~ 17C5:F54E
cs=0x17c5;eip=0x00f550; 	X(ADD(*(dw*)(raddr(ss,bp-2)), ax));	// 116354                  add     [bp-2], ax ;~ 17C5:F550
cs=0x17c5;eip=0x00f553; 	T(OR(ax, ax));	// 116355                  or      ax, ax ;~ 17C5:F553
cs=0x17c5;eip=0x00f555; 	J(JZ(loc_3578d));	// 116356                  jz      short loc_3578D ;~ 17C5:F555
loc_35787:
	// 6926 
cs=0x17c5;eip=0x00f557; 	X(POP(cx));	// 116359                  pop     cx ;~ 17C5:F557
cs=0x17c5;eip=0x00f558; 	X(POP(bx));	// 116360                  pop     bx ;~ 17C5:F558
cs=0x17c5;eip=0x00f559; 	X(POP(ax));	// 116361                  pop     ax ;~ 17C5:F559
cs=0x17c5;eip=0x00f55a; 	T(di = dx;);	// 116362                  mov     di, dx ;~ 17C5:F55A
cs=0x17c5;eip=0x00f55c; 	J(RETN(0));	// 116363                  retn ;~ 17C5:F55C
loc_3578d:
	// 6927 
cs=0x17c5;eip=0x00f55d; 	T(ADD(sp, 8));	// 116368                  add     sp, 8 ;~ 17C5:F55D
cs=0x17c5;eip=0x00f560; 	J(JNC(loc_35796));	// 116369                  jnb     short loc_35796 ;~ 17C5:F560
cs=0x17c5;eip=0x00f562; 	T(ah = 9;);	// 116370                  mov     ah, 9 ;~ 17C5:F562
cs=0x17c5;eip=0x00f564; 	J(JMP(loc_357b4));	// 116371                  jmp     short loc_357B4 ;~ 17C5:F564
loc_35796:
	// 6928 
cs=0x17c5;eip=0x00f566; 	T(TEST(*(raddr(ds,bx+0x61B4)), 0x40));	// 116375                  test    byte ptr [bx+61B4h], 40h ;~ 17C5:F566
cs=0x17c5;eip=0x00f56b; 	J(JZ(loc_357a8));	// 116376                  jz      short loc_357A8 ;~ 17C5:F56B
cs=0x17c5;eip=0x00f56d; 	T(MOV(bx, *(dw*)(raddr(ss,bp+6))));	// 116377                  mov     bx, [bp+6] ;~ 17C5:F56D
cs=0x17c5;eip=0x00f570; 	T(CMP(*(raddr(ds,bx)), 0x1A));	// 116378                  cmp     byte ptr [bx], 1Ah ;~ 17C5:F570
cs=0x17c5;eip=0x00f573; 	J(JNZ(loc_357a8));	// 116379                  jnz     short loc_357A8 ;~ 17C5:F573
cs=0x17c5;eip=0x00f575; 	T(CLC);	// 116380                  clc ;~ 17C5:F575
cs=0x17c5;eip=0x00f576; 	J(JMP(loc_357b4));	// 116381                  jmp     short loc_357B4 ;~ 17C5:F576
loc_357a8:
	// 6929 
cs=0x17c5;eip=0x00f578; 	T(STC);	// 116386                  stc ;~ 17C5:F578
cs=0x17c5;eip=0x00f579; 	T(ax = 0x1C00;);	// 116387                  mov     ax, 1C00h ;~ 17C5:F579
cs=0x17c5;eip=0x00f57c; 	J(JMP(loc_357b4));	// 116388                  jmp     short loc_357B4 ;~ 17C5:F57C
loc_357ae:
	// 6930 
cs=0x17c5;eip=0x00f57e; 	T(MOV(ax, *(dw*)(raddr(ss,bp-2))));	// 116393                  mov     ax, [bp-2] ;~ 17C5:F57E
cs=0x17c5;eip=0x00f581; 	T(SUB(ax, *(dw*)(raddr(ss,bp-4))));	// 116394                  sub     ax, [bp-4] ;~ 17C5:F581
loc_357b4:
	// 6931 
cs=0x17c5;eip=0x00f584; 	T(MOV(sp, *(dw*)(raddr(ss,bp-8))));	// 116398                  mov     sp, [bp-8] ;~ 17C5:F584
cs=0x17c5;eip=0x00f587; 	X(POP(si));	// 116399                  pop     si ;~ 17C5:F587
cs=0x17c5;eip=0x00f588; 	X(POP(di));	// 116400                  pop     di ;~ 17C5:F588
loc_357b9:
	// 6932 
cs=0x17c5;eip=0x00f589; 	J(return seg2623_ee22_proc(m2c::kloc_35065, _state););	// 116404                  jmp     loc_35065 ;~ 17C5:F589
seg2623_f58c_proc:
	// 116410 
loc_357bc:
	// 6933 
cs=0x17c5;eip=0x00f58c; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_4))));	// 116411                  mov     cx, [bp+arg_4] ;~ 17C5:F58C
cs=0x17c5;eip=0x00f58f; 	T(OR(cx, cx));	// 116412                  or      cx, cx ;~ 17C5:F58F
cs=0x17c5;eip=0x00f591; 	J(JNZ(loc_357c8));	// 116413                  jnz     short loc_357C8 ;~ 17C5:F591
cs=0x17c5;eip=0x00f593; 	T(ax = cx;);	// 116414                  mov     ax, cx ;~ 17C5:F593
cs=0x17c5;eip=0x00f595; 	J(return seg2623_ee22_proc(m2c::kloc_35065, _state););	// 116415                  jmp     loc_35065 ;~ 17C5:F595
loc_357c8:
	// 6934 
cs=0x17c5;eip=0x00f598; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 116419                  mov     dx, [bp+arg_2] ;~ 17C5:F598
cs=0x17c5;eip=0x00f59b; 	T(ah = 0x40;);	// 116420                  mov     ah, 40h ;~ 17C5:F59B
cs=0x17c5;eip=0x00f59d; 	S(_INT(0x21));	// 116421                  int     21h             ; DOS - 2+ - WRITE TO FILE WITH HANDLE ;~ 17C5:F59D
cs=0x17c5;eip=0x00f59f; 	J(JNC(loc_357d5));	// 116423                  jnb     short loc_357D5 ;~ 17C5:F59F
cs=0x17c5;eip=0x00f5a1; 	T(ah = 9;);	// 116424                  mov     ah, 9 ;~ 17C5:F5A1
cs=0x17c5;eip=0x00f5a3; 	J(JMP(loc_357b9));	// 116425                  jmp     short loc_357B9 ;~ 17C5:F5A3
loc_357d5:
	// 6935 
cs=0x17c5;eip=0x00f5a5; 	T(OR(ax, ax));	// 116429                  or      ax, ax ;~ 17C5:F5A5
cs=0x17c5;eip=0x00f5a7; 	J(JNZ(loc_357b9));	// 116430                  jnz     short loc_357B9 ;~ 17C5:F5A7
cs=0x17c5;eip=0x00f5a9; 	T(TEST(*(raddr(ds,bx+0x61B4)), 0x40));	// 116431                  test    byte ptr [bx+61B4h], 40h ;~ 17C5:F5A9
cs=0x17c5;eip=0x00f5ae; 	J(JZ(loc_357ea));	// 116432                  jz      short loc_357EA ;~ 17C5:F5AE
cs=0x17c5;eip=0x00f5b0; 	T(bx = dx;);	// 116433                  mov     bx, dx ;~ 17C5:F5B0
cs=0x17c5;eip=0x00f5b2; 	T(CMP(*(raddr(ds,bx)), 0x1A));	// 116434                  cmp     byte ptr [bx], 1Ah ;~ 17C5:F5B2
cs=0x17c5;eip=0x00f5b5; 	J(JNZ(loc_357ea));	// 116435                  jnz     short loc_357EA ;~ 17C5:F5B5
cs=0x17c5;eip=0x00f5b7; 	T(CLC);	// 116436                  clc ;~ 17C5:F5B7
cs=0x17c5;eip=0x00f5b8; 	J(JMP(loc_357b9));	// 116437                  jmp     short loc_357B9 ;~ 17C5:F5B8
loc_357ea:
	// 6936 
cs=0x17c5;eip=0x00f5ba; 	T(STC);	// 116442                  stc ;~ 17C5:F5BA
cs=0x17c5;eip=0x00f5bb; 	T(ax = 0x1C00;);	// 116443                  mov     ax, 1C00h ;~ 17C5:F5BB
cs=0x17c5;eip=0x00f5be; 	J(JMP(loc_357b9));	// 116444                  jmp     short loc_357B9 ;~ 17C5:F5BE

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35787: 	goto loc_35787;
        case m2c::kloc_3578d: 	goto loc_3578d;
        case m2c::kloc_35796: 	goto loc_35796;
        case m2c::kloc_357a8: 	goto loc_357a8;
        case m2c::kloc_357ae: 	goto loc_357ae;
        case m2c::kloc_357b4: 	goto loc_357b4;
        case m2c::kloc_357b9: 	goto loc_357b9;
        case m2c::kloc_357bc: 	goto loc_357bc;
        case m2c::kloc_357c8: 	goto loc_357c8;
        case m2c::kloc_357d5: 	goto loc_357d5;
        case m2c::kloc_357ea: 	goto loc_357ea;
        case m2c::ksub_3576e: 	goto sub_3576e;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_357f0(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_357f0:
    _begin:
#undef arg_0
#define arg_0 4
	// 116453 arg_0           = word ptr  4 ;~ 17C5:F5C0
cs=0x17c5;eip=0x00f5c0; 	X(PUSH(bp));	// 116455                  push    bp ;~ 17C5:F5C0
cs=0x17c5;eip=0x00f5c1; 	T(bp = sp;);	// 116456                  mov     bp, sp ;~ 17C5:F5C1
cs=0x17c5;eip=0x00f5c3; 	T(MOV(bx, *(dw*)(raddr(ss,bp+arg_0))));	// 116457                  mov     bx, [bp+arg_0] ;~ 17C5:F5C3
cs=0x17c5;eip=0x00f5c6; 	T(OR(bx, bx));	// 116458                  or      bx, bx ;~ 17C5:F5C6
cs=0x17c5;eip=0x00f5c8; 	J(JZ(loc_357fe));	// 116459                  jz      short loc_357FE ;~ 17C5:F5C8
cs=0x17c5;eip=0x00f5ca; 	X(OR(*(raddr(ds,bx-2)), 1));	// 116460                  or      byte ptr [bx-2], 1 ;~ 17C5:F5CA
loc_357fe:
	// 6937 
cs=0x17c5;eip=0x00f5ce; 	T(sp = bp;);	// 116463                  mov     sp, bp ;~ 17C5:F5CE
cs=0x17c5;eip=0x00f5d0; 	X(POP(bp));	// 116464                  pop     bp ;~ 17C5:F5D0
cs=0x17c5;eip=0x00f5d1; 	J(RETN(0));	// 116465                  retn ;~ 17C5:F5D1

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_357fe: 	goto loc_357fe;
        case m2c::ksub_357f0: 	goto sub_357f0;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35802(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35802:
    _begin:
#undef arg_0
#define arg_0 4
	// 116475 arg_0           = word ptr  4 ;~ 17C5:F5D2
cs=0x17c5;eip=0x00f5d2; 	X(PUSH(bp));	// 116477                  push    bp ;~ 17C5:F5D2
cs=0x17c5;eip=0x00f5d3; 	T(bp = sp;);	// 116478                  mov     bp, sp ;~ 17C5:F5D3
cs=0x17c5;eip=0x00f5d5; 	X(PUSH(si));	// 116479                  push    si ;~ 17C5:F5D5
cs=0x17c5;eip=0x00f5d6; 	X(PUSH(di));	// 116480                  push    di ;~ 17C5:F5D6
cs=0x17c5;eip=0x00f5d7; 	T(bx = 0x631A;);	// 116481                  mov     bx, 631Ah ;~ 17C5:F5D7
cs=0x17c5;eip=0x00f5da; 	T(CMP(*(dw*)(raddr(ds,bx)), 0));	// 116482                  cmp     word ptr [bx], 0 ;~ 17C5:F5DA
cs=0x17c5;eip=0x00f5dd; 	J(JNZ(loc_35838));	// 116483                  jnz     short loc_35838 ;~ 17C5:F5DD
cs=0x17c5;eip=0x00f5df; 	X(PUSH(ds));	// 116484                  push    ds ;~ 17C5:F5DF
cs=0x17c5;eip=0x00f5e0; 	X(POP(es));	// 116485                  pop     es ;~ 17C5:F5E0
cs=0x17c5;eip=0x00f5e1; 	T(ax = 5;);	// 116486                  mov     ax, 5 ;~ 17C5:F5E1
cs=0x17c5;eip=0x00f5e4; 	J(CALL(sub_359ce,0));	// 116487                  call    sub_359CE ;~ 17C5:F5E4
cs=0x17c5;eip=0x00f5e7; 	J(JNZ(loc_3581e));	// 116488                  jnz     short loc_3581E ;~ 17C5:F5E7
cs=0x17c5;eip=0x00f5e9; 	T(XOR(ax, ax));	// 116489                  xor     ax, ax ;~ 17C5:F5E9
cs=0x17c5;eip=0x00f5eb; 	T(CWD);	// 116490                  cwd ;~ 17C5:F5EB
cs=0x17c5;eip=0x00f5ec; 	J(JMP(loc_35842));	// 116491                  jmp     short loc_35842 ;~ 17C5:F5EC
loc_3581e:
	// 6938 
cs=0x17c5;eip=0x00f5ee; 	T(INC(ax));	// 116495                  inc     ax ;~ 17C5:F5EE
cs=0x17c5;eip=0x00f5ef; 	T(AND(al, 0x0FE));	// 116496                  and     al, 0FEh ;~ 17C5:F5EF
cs=0x17c5;eip=0x00f5f1; 	X(word_4edfa = ax;);	// 116497                  mov     ds:word_4EDFA, ax ;~ 17C5:F5F1
cs=0x17c5;eip=0x00f5f4; 	X(word_4edfc = ax;);	// 116498                  mov     ds:word_4EDFC, ax ;~ 17C5:F5F4
cs=0x17c5;eip=0x00f5f7; 	T(XCHG(ax, si));	// 116499                  xchg    ax, si ;~ 17C5:F5F7
cs=0x17c5;eip=0x00f5f8; 	X(MOV(*(dw*)(raddr(ds,si)), 1));	// 116500                  mov     word ptr [si], 1 ;~ 17C5:F5F8
cs=0x17c5;eip=0x00f5fc; 	T(ADD(si, 4));	// 116501                  add     si, 4 ;~ 17C5:F5FC
cs=0x17c5;eip=0x00f5ff; 	X(MOV(*(dw*)(raddr(ds,si-2)), 0x0FFFE));	// 116502                  mov     word ptr [si-2], 0FFFEh ;~ 17C5:F5FF
cs=0x17c5;eip=0x00f604; 	X(word_4ee00 = si;);	// 116503                  mov     ds:word_4EE00, si ;~ 17C5:F604
loc_35838:
	// 6939 
cs=0x17c5;eip=0x00f608; 	T(MOV(cx, *(dw*)(raddr(ss,bp+arg_0))));	// 116506                  mov     cx, [bp+arg_0] ;~ 17C5:F608
cs=0x17c5;eip=0x00f60b; 	T(ax = ds;);	// 116507                  mov     ax, ds ;~ 17C5:F60B
cs=0x17c5;eip=0x00f60d; 	T(es = ax;);	// 116508                  mov     es, ax ;~ 17C5:F60D
cs=0x17c5;eip=0x00f60f; 	J(CALL(sub_3588f,0));	// 116509                  call    sub_3588F ;~ 17C5:F60F
loc_35842:
	// 6940 
cs=0x17c5;eip=0x00f612; 	X(POP(di));	// 116512                  pop     di ;~ 17C5:F612
cs=0x17c5;eip=0x00f613; 	X(POP(si));	// 116513                  pop     si ;~ 17C5:F613
cs=0x17c5;eip=0x00f614; 	T(sp = bp;);	// 116514                  mov     sp, bp ;~ 17C5:F614
cs=0x17c5;eip=0x00f616; 	X(POP(bp));	// 116515                  pop     bp ;~ 17C5:F616
cs=0x17c5;eip=0x00f617; 	J(RETN(0));	// 116516                  retn ;~ 17C5:F617

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3581e: 	goto loc_3581e;
        case m2c::kloc_35838: 	goto loc_35838;
        case m2c::kloc_35842: 	goto loc_35842;
        case m2c::ksub_35802: 	goto sub_35802;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool seg2623_f618_proc(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    seg2623_f618_proc:
    _begin:
cs=0x17c5;eip=0x00f618; 	X(PUSH(bp));	// 116520                  push    bp ;~ 17C5:F618
cs=0x17c5;eip=0x00f619; 	T(bp = sp;);	// 116521                  mov     bp, sp ;~ 17C5:F619
cs=0x17c5;eip=0x00f61b; 	T(SUB(sp, 4));	// 116522                  sub     sp, 4 ;~ 17C5:F61B
cs=0x17c5;eip=0x00f61e; 	X(PUSH(di));	// 116523                  push    di ;~ 17C5:F61E
cs=0x17c5;eip=0x00f61f; 	X(PUSH(si));	// 116524                  push    si ;~ 17C5:F61F
cs=0x17c5;eip=0x00f620; 	T(si = 0x61FE;);	// 116525                  mov     si, 61FEh ;~ 17C5:F620
cs=0x17c5;eip=0x00f623; 	T(SUB(di, di));	// 116526                  sub     di, di ;~ 17C5:F623
cs=0x17c5;eip=0x00f625; 	J(JMP(loc_3586c));	// 116527                  jmp     short loc_3586C ;~ 17C5:F625
loc_35858:
	// 6941 
cs=0x17c5;eip=0x00f628; 	T(TEST(*(raddr(ds,si+6)), 0x83));	// 116532                  test    byte ptr [si+6], 83h ;~ 17C5:F628
cs=0x17c5;eip=0x00f62c; 	J(JZ(loc_35869));	// 116533                  jz      short loc_35869 ;~ 17C5:F62C
cs=0x17c5;eip=0x00f62e; 	X(PUSH(si));	// 116534                  push    si ;~ 17C5:F62E
cs=0x17c5;eip=0x00f62f; 	J(CALL(sub_3528c,0));	// 116535                  call    sub_3528C ;~ 17C5:F62F
cs=0x17c5;eip=0x00f632; 	T(ADD(sp, 2));	// 116536                  add     sp, 2 ;~ 17C5:F632
cs=0x17c5;eip=0x00f635; 	T(INC(ax));	// 116537                  inc     ax ;~ 17C5:F635
cs=0x17c5;eip=0x00f636; 	J(JZ(loc_35869));	// 116538                  jz      short loc_35869 ;~ 17C5:F636
cs=0x17c5;eip=0x00f638; 	T(INC(di));	// 116539                  inc     di ;~ 17C5:F638
loc_35869:
	// 6942 
cs=0x17c5;eip=0x00f639; 	T(ADD(si, 8));	// 116543                  add     si, 8 ;~ 17C5:F639
loc_3586c:
	// 6943 
cs=0x17c5;eip=0x00f63c; 	T(CMP(word_4edf6, si));	// 116546                  cmp     ds:word_4EDF6, si ;~ 17C5:F63C
cs=0x17c5;eip=0x00f640; 	J(JNC(loc_35858));	// 116547                  jnb     short loc_35858 ;~ 17C5:F640
cs=0x17c5;eip=0x00f642; 	T(ax = di;);	// 116548                  mov     ax, di ;~ 17C5:F642
cs=0x17c5;eip=0x00f644; 	X(POP(si));	// 116549                  pop     si ;~ 17C5:F644
cs=0x17c5;eip=0x00f645; 	X(POP(di));	// 116550                  pop     di ;~ 17C5:F645
cs=0x17c5;eip=0x00f646; 	T(sp = bp;);	// 116551                  mov     sp, bp ;~ 17C5:F646
cs=0x17c5;eip=0x00f648; 	X(POP(bp));	// 116552                  pop     bp ;~ 17C5:F648
cs=0x17c5;eip=0x00f649; 	J(RETN(0));	// 116553                  retn ;~ 17C5:F649

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35858: 	goto loc_35858;
        case m2c::kloc_35869: 	goto loc_35869;
        case m2c::kloc_3586c: 	goto loc_3586c;
        case m2c::kseg2623_f618_proc: 	goto seg2623_f618_proc;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_3587a(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_3587a:
    _begin:
cs=0x17c5;eip=0x00f64a; 	X(POP(cx));	// 116559                  pop     cx ;~ 17C5:F64A
cs=0x17c5;eip=0x00f64b; 	T(ax = word_4ecbc;);	// 116560                  mov     ax, ds:word_4ECBC ;~ 17C5:F64B
cs=0x17c5;eip=0x00f64e; 	T(CMP(ax, sp));	// 116561                  cmp     ax, sp ;~ 17C5:F64E
cs=0x17c5;eip=0x00f650; 	J(JNC(loc_35888));	// 116562                  jnb     short loc_35888 ;~ 17C5:F650
cs=0x17c5;eip=0x00f652; 	T(SUB(ax, sp));	// 116563                  sub     ax, sp ;~ 17C5:F652
cs=0x17c5;eip=0x00f654; 	T(NEG(ax));	// 116564                  neg     ax ;~ 17C5:F654
loc_35886:
	// 6944 
cs=0x17c5;eip=0x00f656; __disp=cx;
	J(return true;);	// 116567                  jmp     cx ;~ 17C5:F656
loc_35888:
	// 6945 
cs=0x17c5;eip=0x00f658; 	T(XOR(ax, ax));	// 116571                  xor     ax, ax ;~ 17C5:F658
cs=0x17c5;eip=0x00f65a; 	J(JMP(loc_35886));	// 116572                  jmp     short loc_35886 ;~ 17C5:F65A

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35886: 	goto loc_35886;
        case m2c::kloc_35888: 	goto loc_35888;
        case m2c::ksub_3587a: 	goto sub_3587a;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool _group69(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    _group69:
    _begin:
seg2623_f65c_proc:
	// 116578 
loc_3588c:
	// 6946 
cs=0x17c5;eip=0x00f65c; 	J(JMP(loc_3595d));	// 116580                  jmp     loc_3595D ;~ 17C5:F65C
sub_3588f:
	// 116586 
cs=0x17c5;eip=0x00f65f; 	T(INC(cx));	// 116590                  inc     cx ;~ 17C5:F65F
cs=0x17c5;eip=0x00f660; 	J(JZ(loc_3588c));	// 116591                  jz      short loc_3588C ;~ 17C5:F660
cs=0x17c5;eip=0x00f662; 	T(AND(cl, 0x0FE));	// 116592                  and     cl, 0FEh ;~ 17C5:F662
cs=0x17c5;eip=0x00f665; 	T(CMP(cx, 0x0FFEE));	// 116593                  cmp     cx, 0FFEEh ;~ 17C5:F665
cs=0x17c5;eip=0x00f668; 	J(JNC(loc_3588c));	// 116594                  jnb     short loc_3588C ;~ 17C5:F668
cs=0x17c5;eip=0x00f66a; 	T(MOV(si, *(dw*)(raddr(ds,bx+2))));	// 116595                  mov     si, [bx+2] ;~ 17C5:F66A
cs=0x17c5;eip=0x00f66d; 	T(CLD);	// 116596                  cld ;~ 17C5:F66D
cs=0x17c5;eip=0x00f66e; 	T(LODSW);	// 116597                  lodsw ;~ 17C5:F66E
cs=0x17c5;eip=0x00f66f; 	T(di = si;);	// 116598                  mov     di, si ;~ 17C5:F66F
cs=0x17c5;eip=0x00f671; 	T(TEST(al, 1));	// 116599                  test    al, 1 ;~ 17C5:F671
cs=0x17c5;eip=0x00f673; 	J(JZ(loc_358e7));	// 116600                  jz      short loc_358E7 ;~ 17C5:F673
loc_358a5:
	// 6947 
cs=0x17c5;eip=0x00f675; 	T(DEC(ax));	// 116603                  dec     ax ;~ 17C5:F675
cs=0x17c5;eip=0x00f676; 	T(CMP(ax, cx));	// 116604                  cmp     ax, cx ;~ 17C5:F676
cs=0x17c5;eip=0x00f678; 	J(JNC(loc_358bf));	// 116605                  jnb     short loc_358BF ;~ 17C5:F678
cs=0x17c5;eip=0x00f67a; 	T(dx = ax;);	// 116606                  mov     dx, ax ;~ 17C5:F67A
cs=0x17c5;eip=0x00f67c; 	T(ADD(si, ax));	// 116607                  add     si, ax ;~ 17C5:F67C
cs=0x17c5;eip=0x00f67e; 	T(LODSW);	// 116608                  lodsw ;~ 17C5:F67E
cs=0x17c5;eip=0x00f67f; 	T(TEST(al, 1));	// 116609                  test    al, 1 ;~ 17C5:F67F
cs=0x17c5;eip=0x00f681; 	J(JZ(loc_358e7));	// 116610                  jz      short loc_358E7 ;~ 17C5:F681
cs=0x17c5;eip=0x00f683; 	T(ADD(ax, dx));	// 116611                  add     ax, dx ;~ 17C5:F683
cs=0x17c5;eip=0x00f685; 	T(ADD(ax, 2));	// 116612                  add     ax, 2 ;~ 17C5:F685
cs=0x17c5;eip=0x00f688; 	T(si = di;);	// 116613                  mov     si, di ;~ 17C5:F688
cs=0x17c5;eip=0x00f68a; 	X(MOV(*(dw*)(raddr(ds,si-2)), ax));	// 116614                  mov     [si-2], ax ;~ 17C5:F68A
cs=0x17c5;eip=0x00f68d; 	J(JMP(loc_358a5));	// 116615                  jmp     short loc_358A5 ;~ 17C5:F68D
loc_358bf:
	// 6948 
cs=0x17c5;eip=0x00f68f; 	T(di = si;);	// 116620                  mov     di, si ;~ 17C5:F68F
cs=0x17c5;eip=0x00f691; 	J(JZ(loc_358cf));	// 116621                  jz      short loc_358CF ;~ 17C5:F691
cs=0x17c5;eip=0x00f693; 	T(ADD(di, cx));	// 116622                  add     di, cx ;~ 17C5:F693
cs=0x17c5;eip=0x00f695; 	X(MOV(*(dw*)(raddr(ds,si-2)), cx));	// 116623                  mov     [si-2], cx ;~ 17C5:F695
cs=0x17c5;eip=0x00f698; 	T(SUB(ax, cx));	// 116624                  sub     ax, cx ;~ 17C5:F698
cs=0x17c5;eip=0x00f69a; 	T(DEC(ax));	// 116625                  dec     ax ;~ 17C5:F69A
cs=0x17c5;eip=0x00f69b; 	X(MOV(*(dw*)(raddr(ds,di)), ax));	// 116626                  mov     [di], ax ;~ 17C5:F69B
cs=0x17c5;eip=0x00f69d; 	J(JMP(loc_358d4));	// 116627                  jmp     short loc_358D4 ;~ 17C5:F69D
loc_358cf:
	// 6949 
cs=0x17c5;eip=0x00f69f; 	T(ADD(di, cx));	// 116631                  add     di, cx ;~ 17C5:F69F
cs=0x17c5;eip=0x00f6a1; 	X(DEC(*(raddr(ds,si-2))));	// 116632                  dec     byte ptr [si-2] ;~ 17C5:F6A1
loc_358d4:
	// 6950 
cs=0x17c5;eip=0x00f6a4; 	T(ax = si;);	// 116635                  mov     ax, si ;~ 17C5:F6A4
cs=0x17c5;eip=0x00f6a6; 	T(dx = ds;);	// 116636                  mov     dx, ds ;~ 17C5:F6A6
cs=0x17c5;eip=0x00f6a8; 	T(cx = ss;);	// 116637                  mov     cx, ss ;~ 17C5:F6A8
cs=0x17c5;eip=0x00f6aa; 	T(CMP(dx, cx));	// 116638                  cmp     dx, cx ;~ 17C5:F6AA
cs=0x17c5;eip=0x00f6ac; 	J(JZ(loc_358e3));	// 116639                  jz      short loc_358E3 ;~ 17C5:F6AC
cs=0x17c5;eip=0x00f6ae; 	X(word_4ee0a = ds;);	// 116640                  mov     es:word_4EE0A, ds ;~ 17C5:F6AE
loc_358e3:
	// 6951 
cs=0x17c5;eip=0x00f6b3; 	X(MOV(*(dw*)(raddr(ds,bx+2)), di));	// 116643                  mov     [bx+2], di ;~ 17C5:F6B3
cs=0x17c5;eip=0x00f6b6; 	J(RETN(0));	// 116644                  retn ;~ 17C5:F6B6
loc_358e7:
	// 6952 
cs=0x17c5;eip=0x00f6b7; 	X(byte_4ee10 = 2;);	// 116649                  mov     es:byte_4EE10, 2 ;~ 17C5:F6B7
loc_358ed:
	// 6953 
cs=0x17c5;eip=0x00f6bd; 	T(CMP(ax, 0x0FFFE));	// 116653                  cmp     ax, 0FFFEh ;~ 17C5:F6BD
cs=0x17c5;eip=0x00f6c0; 	J(JZ(loc_35917));	// 116654                  jz      short loc_35917 ;~ 17C5:F6C0
cs=0x17c5;eip=0x00f6c2; 	T(di = si;);	// 116655                  mov     di, si ;~ 17C5:F6C2
cs=0x17c5;eip=0x00f6c4; 	T(ADD(si, ax));	// 116656                  add     si, ax ;~ 17C5:F6C4
loc_358f6:
	// 6954 
cs=0x17c5;eip=0x00f6c6; 	T(LODSW);	// 116660                  lodsw ;~ 17C5:F6C6
cs=0x17c5;eip=0x00f6c7; 	T(TEST(al, 1));	// 116661                  test    al, 1 ;~ 17C5:F6C7
cs=0x17c5;eip=0x00f6c9; 	J(JZ(loc_358ed));	// 116662                  jz      short loc_358ED ;~ 17C5:F6C9
cs=0x17c5;eip=0x00f6cb; 	T(di = si;);	// 116663                  mov     di, si ;~ 17C5:F6CB
loc_358fd:
	// 6955 
cs=0x17c5;eip=0x00f6cd; 	T(DEC(ax));	// 116666                  dec     ax ;~ 17C5:F6CD
cs=0x17c5;eip=0x00f6ce; 	T(CMP(ax, cx));	// 116667                  cmp     ax, cx ;~ 17C5:F6CE
cs=0x17c5;eip=0x00f6d0; 	J(JNC(loc_358bf));	// 116668                  jnb     short loc_358BF ;~ 17C5:F6D0
cs=0x17c5;eip=0x00f6d2; 	T(dx = ax;);	// 116669                  mov     dx, ax ;~ 17C5:F6D2
cs=0x17c5;eip=0x00f6d4; 	T(ADD(si, ax));	// 116670                  add     si, ax ;~ 17C5:F6D4
cs=0x17c5;eip=0x00f6d6; 	T(LODSW);	// 116671                  lodsw ;~ 17C5:F6D6
cs=0x17c5;eip=0x00f6d7; 	T(TEST(al, 1));	// 116672                  test    al, 1 ;~ 17C5:F6D7
cs=0x17c5;eip=0x00f6d9; 	J(JZ(loc_358ed));	// 116673                  jz      short loc_358ED ;~ 17C5:F6D9
cs=0x17c5;eip=0x00f6db; 	T(ADD(ax, dx));	// 116674                  add     ax, dx ;~ 17C5:F6DB
cs=0x17c5;eip=0x00f6dd; 	T(ADD(ax, 2));	// 116675                  add     ax, 2 ;~ 17C5:F6DD
cs=0x17c5;eip=0x00f6e0; 	T(si = di;);	// 116676                  mov     si, di ;~ 17C5:F6E0
cs=0x17c5;eip=0x00f6e2; 	X(MOV(*(dw*)(raddr(ds,si-2)), ax));	// 116677                  mov     [si-2], ax ;~ 17C5:F6E2
cs=0x17c5;eip=0x00f6e5; 	J(JMP(loc_358fd));	// 116678                  jmp     short loc_358FD ;~ 17C5:F6E5
loc_35917:
	// 6956 
cs=0x17c5;eip=0x00f6e7; 	T(MOV(ax, *(dw*)(raddr(ds,bx+8))));	// 116682                  mov     ax, [bx+8] ;~ 17C5:F6E7
cs=0x17c5;eip=0x00f6ea; 	T(OR(ax, ax));	// 116683                  or      ax, ax ;~ 17C5:F6EA
cs=0x17c5;eip=0x00f6ec; 	J(JZ(loc_35922));	// 116684                  jz      short loc_35922 ;~ 17C5:F6EC
cs=0x17c5;eip=0x00f6ee; 	T(ds = ax;);	// 116685                  mov     ds, ax ;~ 17C5:F6EE
cs=0x17c5;eip=0x00f6f0; 	J(JMP(loc_35936));	// 116686                  jmp     short loc_35936 ;~ 17C5:F6F0
loc_35922:
	// 6957 
cs=0x17c5;eip=0x00f6f2; 	X(DEC(byte_4ee10));	// 116690                  dec     es:byte_4EE10 ;~ 17C5:F6F2
cs=0x17c5;eip=0x00f6f7; 	J(JZ(loc_3593a));	// 116691                  jz      short loc_3593A ;~ 17C5:F6F7
cs=0x17c5;eip=0x00f6f9; 	T(ax = ds;);	// 116692                  mov     ax, ds ;~ 17C5:F6F9
cs=0x17c5;eip=0x00f6fb; 	T(di = ss;);	// 116693                  mov     di, ss ;~ 17C5:F6FB
cs=0x17c5;eip=0x00f6fd; 	T(CMP(ax, di));	// 116694                  cmp     ax, di ;~ 17C5:F6FD
cs=0x17c5;eip=0x00f6ff; 	J(JZ(loc_35936));	// 116695                  jz      short loc_35936 ;~ 17C5:F6FF
cs=0x17c5;eip=0x00f701; 	T(ds = word_4ee06;);	// 116696                  mov     ds, es:word_4EE06 ;~ 17C5:F701
loc_35936:
	// 6958 
cs=0x17c5;eip=0x00f706; 	T(MOV(si, *(dw*)(raddr(ds,bx))));	// 116701                  mov     si, [bx] ;~ 17C5:F706
cs=0x17c5;eip=0x00f708; 	J(JMP(loc_358f6));	// 116702                  jmp     short loc_358F6 ;~ 17C5:F708
loc_3593a:
	// 6959 
cs=0x17c5;eip=0x00f70a; 	T(MOV(si, *(dw*)(raddr(ds,bx+6))));	// 116706                  mov     si, [bx+6] ;~ 17C5:F70A
cs=0x17c5;eip=0x00f70d; 	T(XOR(ax, ax));	// 116707                  xor     ax, ax ;~ 17C5:F70D
cs=0x17c5;eip=0x00f70f; 	J(CALL(sub_359ac,0));	// 116708                  call    sub_359AC ;~ 17C5:F70F
cs=0x17c5;eip=0x00f712; 	T(CMP(ax, si));	// 116709                  cmp     ax, si ;~ 17C5:F712
cs=0x17c5;eip=0x00f714; 	J(JZ(loc_35953));	// 116710                  jz      short loc_35953 ;~ 17C5:F714
cs=0x17c5;eip=0x00f716; 	T(AND(al, 1));	// 116711                  and     al, 1 ;~ 17C5:F716
cs=0x17c5;eip=0x00f718; 	T(INC(ax));	// 116712                  inc     ax ;~ 17C5:F718
cs=0x17c5;eip=0x00f719; 	T(INC(ax));	// 116713                  inc     ax ;~ 17C5:F719
cs=0x17c5;eip=0x00f71a; 	T(CBW);	// 116714                  cbw ;~ 17C5:F71A
cs=0x17c5;eip=0x00f71b; 	J(CALL(sub_359ac,0));	// 116715                  call    sub_359AC ;~ 17C5:F71B
cs=0x17c5;eip=0x00f71e; 	J(JZ(loc_3595d));	// 116716                  jz      short loc_3595D ;~ 17C5:F71E
cs=0x17c5;eip=0x00f720; 	X(DEC(*(raddr(ds,di-2))));	// 116717                  dec     byte ptr [di-2] ;~ 17C5:F720
loc_35953:
	// 6960 
cs=0x17c5;eip=0x00f723; 	J(CALL(sub_35972,0));	// 116720                  call    sub_35972 ;~ 17C5:F723
cs=0x17c5;eip=0x00f726; 	J(JZ(loc_3595d));	// 116721                  jz      short loc_3595D ;~ 17C5:F726
cs=0x17c5;eip=0x00f728; 	T(XCHG(ax, si));	// 116722                  xchg    ax, si ;~ 17C5:F728
cs=0x17c5;eip=0x00f729; 	T(DEC(si));	// 116723                  dec     si ;~ 17C5:F729
cs=0x17c5;eip=0x00f72a; 	T(DEC(si));	// 116724                  dec     si ;~ 17C5:F72A
cs=0x17c5;eip=0x00f72b; 	J(JMP(loc_358f6));	// 116725                  jmp     short loc_358F6 ;~ 17C5:F72B
loc_3595d:
	// 6961 
cs=0x17c5;eip=0x00f72d; 	T(ax = ds;);	// 116730                  mov     ax, ds ;~ 17C5:F72D
cs=0x17c5;eip=0x00f72f; 	T(cx = ss;);	// 116731                  mov     cx, ss ;~ 17C5:F72F
cs=0x17c5;eip=0x00f731; 	T(CMP(ax, cx));	// 116732                  cmp     ax, cx ;~ 17C5:F731
cs=0x17c5;eip=0x00f733; 	J(JZ(loc_35969));	// 116733                  jz      short loc_35969 ;~ 17C5:F733
cs=0x17c5;eip=0x00f735; 	X(word_4ee0a = ax;);	// 116734                  mov     es:word_4EE0A, ax ;~ 17C5:F735
loc_35969:
	// 6962 
cs=0x17c5;eip=0x00f739; 	T(MOV(ax, *(dw*)(raddr(ds,bx))));	// 116737                  mov     ax, [bx] ;~ 17C5:F739
cs=0x17c5;eip=0x00f73b; 	X(MOV(*(dw*)(raddr(ds,bx+2)), ax));	// 116738                  mov     [bx+2], ax ;~ 17C5:F73B
cs=0x17c5;eip=0x00f73e; 	T(XOR(ax, ax));	// 116739                  xor     ax, ax ;~ 17C5:F73E
cs=0x17c5;eip=0x00f740; 	T(CWD);	// 116740                  cwd ;~ 17C5:F740
cs=0x17c5;eip=0x00f741; 	J(RETN(0));	// 116741                  retn ;~ 17C5:F741

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_358a5: 	goto loc_358a5;
        case m2c::kloc_358bf: 	goto loc_358bf;
        case m2c::kloc_358cf: 	goto loc_358cf;
        case m2c::kloc_358d4: 	goto loc_358d4;
        case m2c::kloc_358e3: 	goto loc_358e3;
        case m2c::kloc_358e7: 	goto loc_358e7;
        case m2c::kloc_358ed: 	goto loc_358ed;
        case m2c::kloc_358f6: 	goto loc_358f6;
        case m2c::kloc_358fd: 	goto loc_358fd;
        case m2c::kloc_35917: 	goto loc_35917;
        case m2c::kloc_35922: 	goto loc_35922;
        case m2c::kloc_35936: 	goto loc_35936;
        case m2c::kloc_3593a: 	goto loc_3593a;
        case m2c::kloc_35953: 	goto loc_35953;
        case m2c::kloc_3595d: 	goto loc_3595d;
        case m2c::kloc_35969: 	goto loc_35969;
        case m2c::kseg2623_f65c_proc: 	goto seg2623_f65c_proc;
        case m2c::ksub_3588f: 	goto sub_3588f;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35972(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35972:
    _begin:
cs=0x17c5;eip=0x00f742; 	X(PUSH(cx));	// 116749                  push    cx ;~ 17C5:F742
cs=0x17c5;eip=0x00f743; 	T(MOV(ax, *(dw*)(raddr(ds,di-2))));	// 116750                  mov     ax, [di-2] ;~ 17C5:F743
cs=0x17c5;eip=0x00f746; 	T(TEST(al, 1));	// 116751                  test    al, 1 ;~ 17C5:F746
cs=0x17c5;eip=0x00f748; 	J(JZ(loc_3597d));	// 116752                  jz      short loc_3597D ;~ 17C5:F748
cs=0x17c5;eip=0x00f74a; 	T(SUB(cx, ax));	// 116753                  sub     cx, ax ;~ 17C5:F74A
cs=0x17c5;eip=0x00f74c; 	T(DEC(cx));	// 116754                  dec     cx ;~ 17C5:F74C
loc_3597d:
	// 6963 
cs=0x17c5;eip=0x00f74d; 	T(INC(cx));	// 116757                  inc     cx ;~ 17C5:F74D
cs=0x17c5;eip=0x00f74e; 	T(INC(cx));	// 116758                  inc     cx ;~ 17C5:F74E
cs=0x17c5;eip=0x00f74f; 	T(dx = 0x7FFF;);	// 116759                  mov     dx, 7FFFh ;~ 17C5:F74F
loc_35982:
	// 6964 
cs=0x17c5;eip=0x00f752; 	T(CMP(dx, word_4ee0c));	// 116762                  cmp     dx, es:word_4EE0C ;~ 17C5:F752
cs=0x17c5;eip=0x00f757; 	J(JBE(loc_3598d));	// 116763                  jbe     short loc_3598D ;~ 17C5:F757
cs=0x17c5;eip=0x00f759; 	T(SHR(dx, 1));	// 116764                  shr     dx, 1 ;~ 17C5:F759
cs=0x17c5;eip=0x00f75b; 	J(JNZ(loc_35982));	// 116765                  jnz     short loc_35982 ;~ 17C5:F75B
loc_3598d:
	// 6965 
cs=0x17c5;eip=0x00f75d; 	T(ax = cx;);	// 116769                  mov     ax, cx ;~ 17C5:F75D
cs=0x17c5;eip=0x00f75f; 	T(ADD(ax, si));	// 116770                  add     ax, si ;~ 17C5:F75F
cs=0x17c5;eip=0x00f761; 	J(JC(loc_359a8));	// 116771                  jb      short loc_359A8 ;~ 17C5:F761
cs=0x17c5;eip=0x00f763; 	T(ADD(ax, dx));	// 116772                  add     ax, dx ;~ 17C5:F763
cs=0x17c5;eip=0x00f765; 	J(JC(loc_359a4));	// 116773                  jb      short loc_359A4 ;~ 17C5:F765
cs=0x17c5;eip=0x00f767; 	T(NOT(dx));	// 116774                  not     dx ;~ 17C5:F767
cs=0x17c5;eip=0x00f769; 	T(AND(ax, dx));	// 116775                  and     ax, dx ;~ 17C5:F769
cs=0x17c5;eip=0x00f76b; 	T(SUB(ax, si));	// 116776                  sub     ax, si ;~ 17C5:F76B
cs=0x17c5;eip=0x00f76d; 	J(CALL(sub_359ac,0));	// 116777                  call    sub_359AC ;~ 17C5:F76D
cs=0x17c5;eip=0x00f770; 	J(JNZ(loc_359aa));	// 116778                  jnz     short loc_359AA ;~ 17C5:F770
cs=0x17c5;eip=0x00f772; 	T(NOT(dx));	// 116779                  not     dx ;~ 17C5:F772
loc_359a4:
	// 6966 
cs=0x17c5;eip=0x00f774; 	T(SHR(dx, 1));	// 116782                  shr     dx, 1 ;~ 17C5:F774
cs=0x17c5;eip=0x00f776; 	J(JNZ(loc_3598d));	// 116783                  jnz     short loc_3598D ;~ 17C5:F776
loc_359a8:
	// 6967 
cs=0x17c5;eip=0x00f778; 	T(XOR(ax, ax));	// 116786                  xor     ax, ax ;~ 17C5:F778
loc_359aa:
	// 6968 
cs=0x17c5;eip=0x00f77a; 	X(POP(cx));	// 116789                  pop     cx ;~ 17C5:F77A
cs=0x17c5;eip=0x00f77b; 	J(RETN(0));	// 116790                  retn ;~ 17C5:F77B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_3597d: 	goto loc_3597d;
        case m2c::kloc_35982: 	goto loc_35982;
        case m2c::kloc_3598d: 	goto loc_3598d;
        case m2c::kloc_359a4: 	goto loc_359a4;
        case m2c::kloc_359a8: 	goto loc_359a8;
        case m2c::kloc_359aa: 	goto loc_359aa;
        case m2c::ksub_35972: 	goto sub_35972;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_359ac(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_359ac:
    _begin:
cs=0x17c5;eip=0x00f77c; 	X(PUSH(dx));	// 116799                  push    dx ;~ 17C5:F77C
cs=0x17c5;eip=0x00f77d; 	X(PUSH(cx));	// 116800                  push    cx ;~ 17C5:F77D
cs=0x17c5;eip=0x00f77e; 	J(CALL(sub_359ce,0));	// 116801                  call    sub_359CE ;~ 17C5:F77E
cs=0x17c5;eip=0x00f781; 	J(JZ(loc_359cb));	// 116802                  jz      short loc_359CB ;~ 17C5:F781
cs=0x17c5;eip=0x00f783; 	X(PUSH(di));	// 116803                  push    di ;~ 17C5:F783
cs=0x17c5;eip=0x00f784; 	T(di = si;);	// 116804                  mov     di, si ;~ 17C5:F784
cs=0x17c5;eip=0x00f786; 	T(si = ax;);	// 116805                  mov     si, ax ;~ 17C5:F786
cs=0x17c5;eip=0x00f788; 	T(ADD(si, dx));	// 116806                  add     si, dx ;~ 17C5:F788
cs=0x17c5;eip=0x00f78a; 	X(MOV(*(dw*)(raddr(ds,si-2)), 0x0FFFE));	// 116807                  mov     word ptr [si-2], 0FFFEh ;~ 17C5:F78A
cs=0x17c5;eip=0x00f78f; 	X(MOV(*(dw*)(raddr(ds,bx+6)), si));	// 116808                  mov     [bx+6], si ;~ 17C5:F78F
cs=0x17c5;eip=0x00f792; 	T(dx = si;);	// 116809                  mov     dx, si ;~ 17C5:F792
cs=0x17c5;eip=0x00f794; 	T(SUB(dx, di));	// 116810                  sub     dx, di ;~ 17C5:F794
cs=0x17c5;eip=0x00f796; 	T(DEC(dx));	// 116811                  dec     dx ;~ 17C5:F796
cs=0x17c5;eip=0x00f797; 	X(MOV(*(dw*)(raddr(ds,di-2)), dx));	// 116812                  mov     [di-2], dx ;~ 17C5:F797
cs=0x17c5;eip=0x00f79a; 	X(POP(ax));	// 116813                  pop     ax ;~ 17C5:F79A
loc_359cb:
	// 6969 
cs=0x17c5;eip=0x00f79b; 	X(POP(cx));	// 116816                  pop     cx ;~ 17C5:F79B
cs=0x17c5;eip=0x00f79c; 	X(POP(dx));	// 116817                  pop     dx ;~ 17C5:F79C
cs=0x17c5;eip=0x00f79d; 	J(RETN(0));	// 116818                  retn ;~ 17C5:F79D

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_359cb: 	goto loc_359cb;
        case m2c::ksub_359ac: 	goto sub_359ac;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_359ce(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_359ce:
    _begin:
cs=0x17c5;eip=0x00f79e; 	X(PUSH(bx));	// 116827                  push    bx ;~ 17C5:F79E
cs=0x17c5;eip=0x00f79f; 	X(PUSH(ax));	// 116828                  push    ax ;~ 17C5:F79F
cs=0x17c5;eip=0x00f7a0; 	T(XOR(dx, dx));	// 116829                  xor     dx, dx ;~ 17C5:F7A0
cs=0x17c5;eip=0x00f7a2; 	X(PUSH(ds));	// 116830                  push    ds ;~ 17C5:F7A2
cs=0x17c5;eip=0x00f7a3; 	X(PUSH(dx));	// 116831                  push    dx ;~ 17C5:F7A3
cs=0x17c5;eip=0x00f7a4; 	X(PUSH(dx));	// 116832                  push    dx ;~ 17C5:F7A4
cs=0x17c5;eip=0x00f7a5; 	X(PUSH(ax));	// 116833                  push    ax ;~ 17C5:F7A5
cs=0x17c5;eip=0x00f7a6; 	T(ax = 1;);	// 116834                  mov     ax, 1 ;~ 17C5:F7A6
cs=0x17c5;eip=0x00f7a9; 	X(PUSH(ax));	// 116835                  push    ax ;~ 17C5:F7A9
cs=0x17c5;eip=0x00f7aa; 	X(PUSH(es));	// 116836                  push    es ;~ 17C5:F7AA
cs=0x17c5;eip=0x00f7ab; 	X(POP(ds));	// 116837                  pop     ds ;~ 17C5:F7AB
cs=0x17c5;eip=0x00f7ac; 	J(CALL(sub_359ee,0));	// 116839                  call    sub_359EE ;~ 17C5:F7AC
cs=0x17c5;eip=0x00f7af; 	T(ADD(sp, 8));	// 116840                  add     sp, 8 ;~ 17C5:F7AF
cs=0x17c5;eip=0x00f7b2; 	T(CMP(dx, 0x0FFFF));	// 116841                  cmp     dx, 0FFFFh ;~ 17C5:F7B2
cs=0x17c5;eip=0x00f7b5; 	X(POP(ds));	// 116842                  pop     ds ;~ 17C5:F7B5
cs=0x17c5;eip=0x00f7b6; 	X(POP(dx));	// 116843                  pop     dx ;~ 17C5:F7B6
cs=0x17c5;eip=0x00f7b7; 	X(POP(bx));	// 116844                  pop     bx ;~ 17C5:F7B7
cs=0x17c5;eip=0x00f7b8; 	J(JZ(locret_359ec));	// 116845                  jz      short locret_359EC ;~ 17C5:F7B8
cs=0x17c5;eip=0x00f7ba; 	T(OR(dx, dx));	// 116846                  or      dx, dx ;~ 17C5:F7BA
locret_359ec:
	// 6970 
cs=0x17c5;eip=0x00f7bc; 	J(RETN(0));	// 116849                  retn ;~ 17C5:F7BC

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::klocret_359ec: 	goto locret_359ec;
        case m2c::ksub_359ce: 	goto sub_359ce;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_359ee(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_359ee:
    _begin:
#undef arg_0
#define arg_0 4
	// 116861 arg_0           = word ptr  4 ;~ 17C5:F7BE
#undef arg_2
#define arg_2 6
	// 116862 arg_2           = word ptr  6 ;~ 17C5:F7BE
#undef arg_4
#define arg_4 8
	// 116863 arg_4           = word ptr  8 ;~ 17C5:F7BE
#undef arg_8
#define arg_8 0x0C
	// 116864 arg_8           = word ptr  0Ch ;~ 17C5:F7BE
cs=0x17c5;eip=0x00f7be; 	X(PUSH(bp));	// 116866                  push    bp ;~ 17C5:F7BE
cs=0x17c5;eip=0x00f7bf; 	T(bp = sp;);	// 116867                  mov     bp, sp ;~ 17C5:F7BF
cs=0x17c5;eip=0x00f7c1; 	X(PUSH(si));	// 116868                  push    si ;~ 17C5:F7C1
cs=0x17c5;eip=0x00f7c2; 	X(PUSH(di));	// 116869                  push    di ;~ 17C5:F7C2
cs=0x17c5;eip=0x00f7c3; 	X(PUSH(es));	// 116870                  push    es ;~ 17C5:F7C3
cs=0x17c5;eip=0x00f7c4; 	T(CMP(*(dw*)(raddr(ss,bp+arg_4)), 0));	// 116871                  cmp     [bp+arg_4], 0 ;~ 17C5:F7C4
cs=0x17c5;eip=0x00f7c8; 	J(JNZ(loc_35a32));	// 116872                  jnz     short loc_35A32 ;~ 17C5:F7C8
cs=0x17c5;eip=0x00f7ca; 	T(di = 0x613A;);	// 116873                  mov     di, 613Ah ;~ 17C5:F7CA
cs=0x17c5;eip=0x00f7cd; 	T(MOV(dx, *(dw*)(raddr(ss,bp+arg_2))));	// 116874                  mov     dx, [bp+arg_2] ;~ 17C5:F7CD
cs=0x17c5;eip=0x00f7d0; 	T(MOV(ax, *(dw*)(raddr(ss,bp+arg_0))));	// 116875                  mov     ax, [bp+arg_0] ;~ 17C5:F7D0
cs=0x17c5;eip=0x00f7d3; 	T(DEC(ax));	// 116876                  dec     ax ;~ 17C5:F7D3
cs=0x17c5;eip=0x00f7d4; 	J(JNZ(loc_35a0d));	// 116877                  jnz     short loc_35A0D ;~ 17C5:F7D4
cs=0x17c5;eip=0x00f7d6; 	J(CALL(sub_35a5c,0));	// 116878                  call    sub_35A5C ;~ 17C5:F7D6
cs=0x17c5;eip=0x00f7d9; 	J(JC(loc_35a32));	// 116879                  jb      short loc_35A32 ;~ 17C5:F7D9
cs=0x17c5;eip=0x00f7db; 	J(JMP(loc_35a55));	// 116880                  jmp     short loc_35A55 ;~ 17C5:F7DB
loc_35a0d:
	// 6971 
cs=0x17c5;eip=0x00f7dd; 	T(si = *(dw*)(aacfileinfo););	// 116884                  mov     si, word ptr ds:aACFileInfo ; ":a;C_FILE_INFO" ;~ 17C5:F7DD
cs=0x17c5;eip=0x00f7e1; 	T(DEC(ax));	// 116885                  dec     ax ;~ 17C5:F7E1
cs=0x17c5;eip=0x00f7e2; 	J(JZ(loc_35a25));	// 116886                  jz      short loc_35A25 ;~ 17C5:F7E2
cs=0x17c5;eip=0x00f7e4; 	T(CMP(si, di));	// 116887                  cmp     si, di ;~ 17C5:F7E4
cs=0x17c5;eip=0x00f7e6; 	J(JZ(loc_35a25));	// 116888                  jz      short loc_35A25 ;~ 17C5:F7E6
cs=0x17c5;eip=0x00f7e8; 	T(MOV(ax, *(dw*)(raddr(ds,si+2))));	// 116889                  mov     ax, [si+2] ;~ 17C5:F7E8
cs=0x17c5;eip=0x00f7eb; 	X(MOV(*(dw*)(raddr(ss,bp+arg_8)), ax));	// 116890                  mov     [bp+arg_8], ax ;~ 17C5:F7EB
cs=0x17c5;eip=0x00f7ee; 	X(PUSH(si));	// 116891                  push    si ;~ 17C5:F7EE
cs=0x17c5;eip=0x00f7ef; 	J(CALL(sub_35a5c,0));	// 116892                  call    sub_35A5C ;~ 17C5:F7EF
cs=0x17c5;eip=0x00f7f2; 	X(POP(si));	// 116893                  pop     si ;~ 17C5:F7F2
cs=0x17c5;eip=0x00f7f3; 	J(JNC(loc_35a55));	// 116894                  jnb     short loc_35A55 ;~ 17C5:F7F3
loc_35a25:
	// 6972 
cs=0x17c5;eip=0x00f7f5; 	T(ADD(si, 4));	// 116898                  add     si, 4 ;~ 17C5:F7F5
cs=0x17c5;eip=0x00f7f8; 	T(CMP(si, 0x618A));	// 116899                  cmp     si, 618Ah ;~ 17C5:F7F8
cs=0x17c5;eip=0x00f7fc; 	J(JNC(loc_35a32));	// 116900                  jnb     short loc_35A32 ;~ 17C5:F7FC
cs=0x17c5;eip=0x00f7fe; 	T(OR(dx, dx));	// 116901                  or      dx, dx ;~ 17C5:F7FE
cs=0x17c5;eip=0x00f800; 	J(JNZ(loc_35a38));	// 116902                  jnz     short loc_35A38 ;~ 17C5:F800
loc_35a32:
	// 6973 
cs=0x17c5;eip=0x00f802; 	T(ax = 0x0FFFF;);	// 116906                  mov     ax, 0FFFFh ;~ 17C5:F802
cs=0x17c5;eip=0x00f805; 	T(CWD);	// 116907                  cwd ;~ 17C5:F805
cs=0x17c5;eip=0x00f806; 	J(JMP(loc_35a55));	// 116908                  jmp     short loc_35A55 ;~ 17C5:F806
loc_35a38:
	// 6974 
cs=0x17c5;eip=0x00f808; 	T(bx = dx;);	// 116912                  mov     bx, dx ;~ 17C5:F808
cs=0x17c5;eip=0x00f80a; 	T(ADD(bx, 0x0F));	// 116913                  add     bx, 0Fh ;~ 17C5:F80A
cs=0x17c5;eip=0x00f80d; 	T(RCR(bx, 1));	// 116914                  rcr     bx, 1 ;~ 17C5:F80D
cs=0x17c5;eip=0x00f80f; 	T(cl = 3;);	// 116915                  mov     cl, 3 ;~ 17C5:F80F
cs=0x17c5;eip=0x00f811; 	T(SHR(bx, cl));	// 116916                  shr     bx, cl ;~ 17C5:F811
cs=0x17c5;eip=0x00f813; 	T(ah = 0x48;);	// 116917                  mov     ah, 48h ;~ 17C5:F813
cs=0x17c5;eip=0x00f815; 	S(_INT(0x21));	// 116918                  int     21h             ; DOS - 2+ - ALLOCATE MEMORY ;~ 17C5:F815
cs=0x17c5;eip=0x00f817; 	J(JC(loc_35a32));	// 116920                  jb      short loc_35A32 ;~ 17C5:F817
cs=0x17c5;eip=0x00f819; 	T(XCHG(ax, dx));	// 116921                  xchg    ax, dx ;~ 17C5:F819
cs=0x17c5;eip=0x00f81a; 	X(MOV(*(dw*)(raddr(ds,si)), ax));	// 116922                  mov     [si], ax ;~ 17C5:F81A
cs=0x17c5;eip=0x00f81c; 	X(MOV(*(dw*)(raddr(ds,si+2)), dx));	// 116923                  mov     [si+2], dx ;~ 17C5:F81C
cs=0x17c5;eip=0x00f81f; 	X(*(dw*)(aacfileinfo) = si;);	// 116924                  mov     word ptr ds:aACFileInfo, si ; ":a;C_FILE_INFO" ;~ 17C5:F81F
cs=0x17c5;eip=0x00f823; 	T(XOR(ax, ax));	// 116925                  xor     ax, ax ;~ 17C5:F823
loc_35a55:
	// 6975 
cs=0x17c5;eip=0x00f825; 	X(POP(es));	// 116929                  pop     es ;~ 17C5:F825
cs=0x17c5;eip=0x00f826; 	X(POP(di));	// 116931                  pop     di ;~ 17C5:F826
cs=0x17c5;eip=0x00f827; 	X(POP(si));	// 116932                  pop     si ;~ 17C5:F827
cs=0x17c5;eip=0x00f828; 	T(sp = bp;);	// 116933                  mov     sp, bp ;~ 17C5:F828
cs=0x17c5;eip=0x00f82a; 	X(POP(bp));	// 116934                  pop     bp ;~ 17C5:F82A
cs=0x17c5;eip=0x00f82b; 	J(RETN(0));	// 116935                  retn ;~ 17C5:F82B

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35a0d: 	goto loc_35a0d;
        case m2c::kloc_35a25: 	goto loc_35a25;
        case m2c::kloc_35a32: 	goto loc_35a32;
        case m2c::kloc_35a38: 	goto loc_35a38;
        case m2c::kloc_35a55: 	goto loc_35a55;
        case m2c::ksub_359ee: 	goto sub_359ee;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}



 bool sub_35a5c(m2c::_offsets _i, struct m2c::_STATE* _state){
    X86_REGREF
    __disp = _i;

    if (__disp == 0) goto _begin;
    else goto __dispatch_call;
    sub_35a5c:
    _begin:
cs=0x17c5;eip=0x00f82c; 	T(MOV(cx, *(dw*)(raddr(ss,bp+0x0C))));	// 116944                  mov     cx, [bp+0Ch] ;~ 17C5:F82C
cs=0x17c5;eip=0x00f82f; 	T(si = di;);	// 116945                  mov     si, di ;~ 17C5:F82F
loc_35a61:
	// 6976 
cs=0x17c5;eip=0x00f831; 	T(CMP(*(dw*)(raddr(ds,si+2)), cx));	// 116948                  cmp     [si+2], cx ;~ 17C5:F831
cs=0x17c5;eip=0x00f834; 	J(JZ(loc_35a72));	// 116949                  jz      short loc_35A72 ;~ 17C5:F834
cs=0x17c5;eip=0x00f836; 	T(ADD(si, 4));	// 116950                  add     si, 4 ;~ 17C5:F836
cs=0x17c5;eip=0x00f839; 	T(CMP(si, 0x618A));	// 116951                  cmp     si, 618Ah ;~ 17C5:F839
cs=0x17c5;eip=0x00f83d; 	J(JNZ(loc_35a61));	// 116952                  jnz     short loc_35A61 ;~ 17C5:F83D
cs=0x17c5;eip=0x00f83f; 	T(STC);	// 116953                  stc ;~ 17C5:F83F
cs=0x17c5;eip=0x00f840; 	J(JMP(locret_35ab1));	// 116954                  jmp     short locret_35AB1 ;~ 17C5:F840
loc_35a72:
	// 6977 
cs=0x17c5;eip=0x00f842; 	T(bx = dx;);	// 116958                  mov     bx, dx ;~ 17C5:F842
cs=0x17c5;eip=0x00f844; 	T(ADD(bx, *(dw*)(raddr(ds,si))));	// 116959                  add     bx, [si] ;~ 17C5:F844
cs=0x17c5;eip=0x00f846; 	J(JC(locret_35ab1));	// 116960                  jb      short locret_35AB1 ;~ 17C5:F846
cs=0x17c5;eip=0x00f848; 	T(dx = bx;);	// 116961                  mov     dx, bx ;~ 17C5:F848
cs=0x17c5;eip=0x00f84a; 	T(es = cx;);	// 116962                  mov     es, cx ;~ 17C5:F84A
cs=0x17c5;eip=0x00f84c; 	T(CMP(si, di));	// 116963                  cmp     si, di ;~ 17C5:F84C
cs=0x17c5;eip=0x00f84e; 	J(JNZ(loc_35a86));	// 116964                  jnz     short loc_35A86 ;~ 17C5:F84E
cs=0x17c5;eip=0x00f850; 	T(CMP(word_4ec14, bx));	// 116965                  cmp     ds:word_4EC14, bx ;~ 17C5:F850
cs=0x17c5;eip=0x00f854; 	J(JNC(loc_35aac));	// 116966                  jnb     short loc_35AAC ;~ 17C5:F854
loc_35a86:
	// 6978 
cs=0x17c5;eip=0x00f856; 	T(ADD(bx, 0x0F));	// 116969                  add     bx, 0Fh ;~ 17C5:F856
cs=0x17c5;eip=0x00f859; 	T(RCR(bx, 1));	// 116970                  rcr     bx, 1 ;~ 17C5:F859
cs=0x17c5;eip=0x00f85b; 	T(SHR(bx, 1));	// 116971                  shr     bx, 1 ;~ 17C5:F85B
cs=0x17c5;eip=0x00f85d; 	T(SHR(bx, 1));	// 116972                  shr     bx, 1 ;~ 17C5:F85D
cs=0x17c5;eip=0x00f85f; 	T(SHR(bx, 1));	// 116973                  shr     bx, 1 ;~ 17C5:F85F
cs=0x17c5;eip=0x00f861; 	T(CMP(si, di));	// 116974                  cmp     si, di ;~ 17C5:F861
cs=0x17c5;eip=0x00f863; 	J(JNZ(loc_35a9e));	// 116975                  jnz     short loc_35A9E ;~ 17C5:F863
cs=0x17c5;eip=0x00f865; 	T(ADD(bx, cx));	// 116976                  add     bx, cx ;~ 17C5:F865
cs=0x17c5;eip=0x00f867; 	T(ax = word_4ec8b;);	// 116977                  mov     ax, ds:word_4EC8B ;~ 17C5:F867
cs=0x17c5;eip=0x00f86a; 	T(SUB(bx, ax));	// 116978                  sub     bx, ax ;~ 17C5:F86A
cs=0x17c5;eip=0x00f86c; 	T(es = ax;);	// 116979                  mov     es, ax ;~ 17C5:F86C
loc_35a9e:
	// 6979 
cs=0x17c5;eip=0x00f86e; 	T(ah = 0x4A;);	// 116982                  mov     ah, 4Ah ;~ 17C5:F86E
cs=0x17c5;eip=0x00f870; 	S(_INT(0x21));	// 116983                  int     21h             ; DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK) ;~ 17C5:F870
cs=0x17c5;eip=0x00f872; 	J(JC(locret_35ab1));	// 116986                  jb      short locret_35AB1 ;~ 17C5:F872
cs=0x17c5;eip=0x00f874; 	T(CMP(si, di));	// 116987                  cmp     si, di ;~ 17C5:F874
cs=0x17c5;eip=0x00f876; 	J(JNZ(loc_35aac));	// 116988                  jnz     short loc_35AAC ;~ 17C5:F876
cs=0x17c5;eip=0x00f878; 	X(word_4ec14 = dx;);	// 116989                  mov     ds:word_4EC14, dx ;~ 17C5:F878
loc_35aac:
	// 6980 
cs=0x17c5;eip=0x00f87c; 	T(XCHG(ax, dx));	// 116993                  xchg    ax, dx ;~ 17C5:F87C
cs=0x17c5;eip=0x00f87d; 	X(XCHG(ax, *(dw*)(raddr(ds,si))));	// 116994                  xchg    ax, [si] ;~ 17C5:F87D
cs=0x17c5;eip=0x00f87f; 	T(dx = cx;);	// 116995                  mov     dx, cx ;~ 17C5:F87F
locret_35ab1:
	// 6981 
cs=0x17c5;eip=0x00f881; 	J(RETN(0));	// 116999                  retn ;~ 17C5:F881

            assert(0);
            __dispatch_call:
        #ifdef DOSBOX_CUSTOM
            if ((__disp >> 16) == 0xf000)
            {cs=0xf000;eip=__disp&0xffff;m2c::fix_segs();return false;}  // Jumping to BIOS
        #endif
            if ((__disp>>16) == 0) {__disp |= ((dd)cs) << 16;}
            switch (__disp) {
                case m2c::kloc_35a61: 	goto loc_35a61;
        case m2c::kloc_35a72: 	goto loc_35a72;
        case m2c::kloc_35a86: 	goto loc_35a86;
        case m2c::kloc_35a9e: 	goto loc_35a9e;
        case m2c::kloc_35aac: 	goto loc_35aac;
        case m2c::klocret_35ab1: 	goto locret_35ab1;
        case m2c::ksub_35a5c: 	goto sub_35a5c;
        default: m2c::log_error("Don't know how to jump to 0x%x. See " __FILE__ " line %d\n", __disp, __LINE__);m2c::stackDump(); abort();
    };
}

